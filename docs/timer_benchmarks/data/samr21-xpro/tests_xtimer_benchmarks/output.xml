<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201030 18:26:58.405" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.856" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:26:59.873" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:01.919" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:26:59.852" endtime="20201030 18:27:01.921"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.926" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:27:01.923" endtime="20201030 18:27:01.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.849" endtime="20201030 18:27:01.929"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:01.935" endtime="20201030 18:27:02.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.931" endtime="20201030 18:27:02.272"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.303" endtime="20201030 18:27:02.324"></status>
</kw>
<msg timestamp="20201030 18:27:02.326" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:02.300" endtime="20201030 18:27:02.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.335" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:02.328" endtime="20201030 18:27:02.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.343" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:02.337" endtime="20201030 18:27:02.344"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:02.293" endtime="20201030 18:27:02.350"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:02.287" endtime="20201030 18:27:02.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.284" endtime="20201030 18:27:02.353"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:02.362" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:02.360" endtime="20201030 18:27:02.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.355" endtime="20201030 18:27:02.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.282" endtime="20201030 18:27:02.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.280" endtime="20201030 18:27:02.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.371" endtime="20201030 18:27:02.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.277" endtime="20201030 18:27:02.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.385" endtime="20201030 18:27:02.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.273" endtime="20201030 18:27:02.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.845" endtime="20201030 18:27:02.394"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:02.412" endtime="20201030 18:27:02.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.408" endtime="20201030 18:27:02.435"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.471" endtime="20201030 18:27:02.487"></status>
</kw>
<msg timestamp="20201030 18:27:02.488" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:02.468" endtime="20201030 18:27:02.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.502" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:02.492" endtime="20201030 18:27:02.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.514" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:02.506" endtime="20201030 18:27:02.516"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:02.461" endtime="20201030 18:27:02.520"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:02.454" endtime="20201030 18:27:02.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.449" endtime="20201030 18:27:02.526"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:02.541" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:02.538" endtime="20201030 18:27:02.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.529" endtime="20201030 18:27:02.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.447" endtime="20201030 18:27:02.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.446" endtime="20201030 18:27:02.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.551" endtime="20201030 18:27:02.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.441" endtime="20201030 18:27:02.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.437" endtime="20201030 18:27:02.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.406" endtime="20201030 18:27:02.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.618" endtime="20201030 18:27:02.630"></status>
</kw>
<msg timestamp="20201030 18:27:02.632" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:02.612" endtime="20201030 18:27:02.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.637" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:02.634" endtime="20201030 18:27:02.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.640" endtime="20201030 18:27:02.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.597" endtime="20201030 18:27:02.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.581" endtime="20201030 18:27:02.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.656" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 18:27:02.654" endtime="20201030 18:27:02.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.660" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 18:27:02.658" endtime="20201030 18:27:02.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.648" endtime="20201030 18:27:02.663"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:02.396" endtime="20201030 18:27:02.664" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:26:58.687" endtime="20201030 18:27:02.671"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.802" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:02.818" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:04.825" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:02.799" endtime="20201030 18:27:04.826"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:04.832" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:27:04.829" endtime="20201030 18:27:04.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.796" endtime="20201030 18:27:04.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:04.839" endtime="20201030 18:27:05.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.836" endtime="20201030 18:27:05.176"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.213" endtime="20201030 18:27:05.235"></status>
</kw>
<msg timestamp="20201030 18:27:05.236" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:05.209" endtime="20201030 18:27:05.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.244" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:05.239" endtime="20201030 18:27:05.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.255" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:05.250" endtime="20201030 18:27:05.256"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:05.203" endtime="20201030 18:27:05.257"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:05.197" endtime="20201030 18:27:05.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.193" endtime="20201030 18:27:05.260"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:05.269" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:05.267" endtime="20201030 18:27:05.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.262" endtime="20201030 18:27:05.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.187" endtime="20201030 18:27:05.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.184" endtime="20201030 18:27:05.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.273" endtime="20201030 18:27:05.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.181" endtime="20201030 18:27:05.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.284" endtime="20201030 18:27:05.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.177" endtime="20201030 18:27:05.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.793" endtime="20201030 18:27:05.290"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:05.304" endtime="20201030 18:27:05.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.300" endtime="20201030 18:27:05.327"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.423" endtime="20201030 18:27:05.439"></status>
</kw>
<msg timestamp="20201030 18:27:05.440" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:05.419" endtime="20201030 18:27:05.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:05.443" endtime="20201030 18:27:05.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.453" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:05.449" endtime="20201030 18:27:05.454"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:05.412" endtime="20201030 18:27:05.456"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:05.344" endtime="20201030 18:27:05.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.341" endtime="20201030 18:27:05.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:05.466" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:05.464" endtime="20201030 18:27:05.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.460" endtime="20201030 18:27:05.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.340" endtime="20201030 18:27:05.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.338" endtime="20201030 18:27:05.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.469" endtime="20201030 18:27:05.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.334" endtime="20201030 18:27:05.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.329" endtime="20201030 18:27:05.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.297" endtime="20201030 18:27:05.476"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.498" endtime="20201030 18:27:05.509"></status>
</kw>
<msg timestamp="20201030 18:27:05.510" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:05.495" endtime="20201030 18:27:05.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.516" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:05.512" endtime="20201030 18:27:05.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.518" endtime="20201030 18:27:05.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.487" endtime="20201030 18:27:05.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.483" endtime="20201030 18:27:05.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.543" endtime="20201030 18:27:05.911"></status>
</kw>
<msg timestamp="20201030 18:27:05.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.184323097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.184323569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:05.539" endtime="20201030 18:27:05.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.184323097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.184323569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:05.932" endtime="20201030 18:27:05.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.961" endtime="20201030 18:27:05.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.531" endtime="20201030 18:27:05.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.526" endtime="20201030 18:27:05.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:06.025" level="INFO">${debug} = {'diff': [0, 4.720000000013602e-07, 9.819999999993723e-06, 4.720000000013602e-07, 1.0736000000011181e-05, 4.720000000013602e-07, 1.0833999999987354e-05, 4.720000000013602e-07, 1.0028000000023019e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:05.970" endtime="20201030 18:27:06.025"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.028" endtime="20201030 18:27:06.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.041" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:06.039" endtime="20201030 18:27:06.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.051" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 9.819999999993723e-06, 4.720000000013602e-07, 1.0736000000011181e-05, 4.720000000013602e-07, 1.0833999999987354e-05, 4.720000000013602e-07, 1.0028000000023019e-05, 4.720000000013602e-07, 9.402999999991168e-06, 4.720000000013602e-07, 1.0791999999981705e-05, 4.720000000013602e-07, 9.430000000004712e-06, 4.7300000000083386e-07, 8.139000000018104e-06, 4.7199999997360464e-07, 1.1153000000013735e-05, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 9.193999999990154e-06, 4.720000000013602e-07, 1.0625000000014095e-05, 4.7300000000083386e-07, 9.401999999991695e-06, 4.7300000000083386e-07, 1.0527000000010167e-05, 4.7300000000083386e-07, 1.0846999999980511e-05, 4.720000000013602e-07, 1.0235999999996803e-05, 4.720000000013602e-07, 8.431000000003186e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 1.0763999999996443e-05, 4.720000000013602e-07, 1.1041000000017176e-05, 4.7300000000083386e-07, 8.763999999994443e-06, 4.720000000013602e-07, 8.179999999996523e-06, 4.7300000000083386e-07, 9.137999999991875e-06, 4.7300000000083386e-07, 8.651999999997884e-06, 4.7300000000083386e-07, 8.763999999994443e-06, 4.720000000013602e-07, 8.139000000018104e-06, 4.720000000013602e-07, 1.0846999999980511e-05, 4.720000000013602e-07, 1.1153000000013735e-05, 4.720000000013602e-07, 1.1278000000003452e-05, 4.720000000013602e-07, 9.569999999986534e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.0458999999990448e-05, 4.720000000013602e-07, 8.25000000001519e-06, 4.720000000013602e-07, 1.0527999999981885e-05, 4.720000000013602e-07, 9.707999999997163e-06, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 1.0000000000010001e-05, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 9.179999999997523e-06, 4.7300000000083386e-07, 9.680000000011901e-06, 4.7199999997360464e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 9.903000000005546e-06, 4.720000000013602e-07, 8.972999999995457e-06, 4.720000000013602e-07, 1.0944000000012721e-05, 4.7300000000083386e-07, 1.0318999999980871e-05, 4.720000000013602e-07, 8.653000000025113e-06, 4.7199999997360464e-07, 1.0542000000002272e-05, 4.720000000013602e-07, 1.0847000000008267e-05, 4.7300000000083386e-07, 1.1277000000003978e-05, 4.7300000000083386e-07], 'time': [0.184323097, 0.184323569, 0.184333389, 0.184333861, 0.184344597, 0.184345069, 0.184355903, 0.184356375, 0.184366403, 0.184366875, 0.184376278, 0.18437675, 0.184387542, 0.184388014, 0.184397444, 0.184397917, 0.184406056, 0.184406528, 0.184417681, 0.184418153, 0.184426806, 0.184427278, 0.184436472, 0.184436944, 0.184447569, 0.184448042, 0.184457444, 0.184457917, 0.184468444, 0.184468917, 0.184479764, 0.184480236, 0.184490472, 0.184490944, 0.184499375, 0.184499847, 0.184509444, 0.184509917, 0.184520681, 0.184521153, 0.184532194, 0.184532667, 0.184541431, 0.184541903, 0.184550083, 0.184550556, 0.184559694, 0.184560167, 0.184568819, 0.184569292, 0.184578056, 0.184578528, 0.184586667, 0.184587139, 0.184597986, 0.184598458, 0.184609611, 0.184610083, 0.184621361, 0.184621833, 0.184631403, 0.184631875, 0.184640736, 0.184641208, 0.184651667, 0.184652139, 0.184660389, 0.184660861, 0.184671389, 0.184671861, 0.184681569, 0.184682042, 0.184692903, 0.184693375, 0.184703375, 0.184703847, 0.184714292, 0.184714764, 0.184723944, 0.184724417, 0.184734097, 0.184734569, 0.184745222, 0.184745694, 0.184755597, 0.184756069, 0.184765042, 0.184765514, 0.184776458, 0.184776931, 0.18478725, 0.184787722, 0.184796375, 0.184796847, 0.184807389, 0.184807861, 0.184818708, 0.184819181, 0.184830458, 0.184830931], 'source_diff': [0, 4.720000000013602e-07, 9.819999999993723e-06, 4.720000000013602e-07, 1.0736000000011181e-05, 4.720000000013602e-07, 1.0833999999987354e-05, 4.720000000013602e-07, 1.0028000000023019e-05, 4.720000000013602e-07, 9.402999999991168e-06, 4.720000000013602e-07, 1.0791999999981705e-05, 4.720000000013602e-07, 9.430000000004712e-06, 4.7300000000083386e-07, 8.139000000018104e-06, 4.7199999997360464e-07, 1.1153000000013735e-05, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 9.193999999990154e-06, 4.720000000013602e-07, 1.0625000000014095e-05, 4.7300000000083386e-07, 9.401999999991695e-06, 4.7300000000083386e-07, 1.0527000000010167e-05, 4.7300000000083386e-07, 1.0846999999980511e-05, 4.720000000013602e-07, 1.0235999999996803e-05, 4.720000000013602e-07, 8.431000000003186e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 1.0763999999996443e-05, 4.720000000013602e-07, 1.1041000000017176e-05, 4.7300000000083386e-07, 8.763999999994443e-06, 4.720000000013602e-07, 8.179999999996523e-06, 4.7300000000083386e-07, 9.137999999991875e-06, 4.7300000000083386e-07, 8.651999999997884e-06, 4.7300000000083386e-07, 8.763999999994443e-06, 4.720000000013602e-07, 8.139000000018104e-06, 4.720000000013602e-07, 1.0846999999980511e-05, 4.720000000013602e-07, 1.1153000000013735e-05, 4.720000000013602e-07, 1.1278000000003452e-05, 4.720000000013602e-07, 9.569999999986534e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.0458999999990448e-05, 4.720000000013602e-07, 8.25000000001519e-06, 4.720000000013602e-07, 1.0527999999981885e-05, 4.720000000013602e-07, 9.707999999997163e-06, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 1.0000000000010001e-05, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 9.179999999997523e-06, 4.7300000000083386e-07, 9.680000000011901e-06, 4.7199999997360464e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 9.903000000005546e-06, 4.720000000013602e-07, 8.972999999995457e-06, 4.720000000013602e-07, 1.0944000000012721e-05, 4.7300000000083386e-07, 1.0318999999980871e-05, 4.720000000013602e-07, 8.653000000025113e-06, 4.7199999997360464e-07, 1.0542000000002272e-05, 4.720000000013602e-07, 1.0847000000008267e-05, 4.7300000000083386e-07, 1.1277000000003978e-05, 4.7300000000083386e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:06.044" endtime="20201030 18:27:06.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.033" endtime="20201030 18:27:06.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:06.065" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:06.056" endtime="20201030 18:27:06.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:06.076" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.719...</msg>
<status status="PASS" starttime="20201030 18:27:06.067" endtime="20201030 18:27:06.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.087" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:06.084" endtime="20201030 18:27:06.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.092" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 18:27:06.089" endtime="20201030 18:27:06.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.078" endtime="20201030 18:27:06.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:06.105" endtime="20201030 18:27:06.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.100" endtime="20201030 18:27:06.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.097" endtime="20201030 18:27:06.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.480" endtime="20201030 18:27:06.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.479" endtime="20201030 18:27:06.131"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.152" endtime="20201030 18:27:06.164"></status>
</kw>
<msg timestamp="20201030 18:27:06.165" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.148" endtime="20201030 18:27:06.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.172" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.167" endtime="20201030 18:27:06.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.174" endtime="20201030 18:27:06.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.141" endtime="20201030 18:27:06.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.136" endtime="20201030 18:27:06.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.198" endtime="20201030 18:27:06.636"></status>
</kw>
<msg timestamp="20201030 18:27:06.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036572194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036572667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:06.195" endtime="20201030 18:27:06.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036572194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036572667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:06.646" endtime="20201030 18:27:06.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.666" endtime="20201030 18:27:06.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.187" endtime="20201030 18:27:06.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.182" endtime="20201030 18:27:06.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:06.728" level="INFO">${debug} = {'diff': [0, 4.7300000000083386e-07, 9.485999999996053e-06, 4.720000000013602e-07, 1.0443999999998343e-05, 4.7300000000083386e-07, 8.222000000002172e-06, 4.720000000013602e-07, 9.902999999998607e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:06.674" endtime="20201030 18:27:06.729"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.730" endtime="20201030 18:27:06.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.742" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:06.740" endtime="20201030 18:27:06.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.752" level="INFO">VALUE: {'diff': [0, 4.7300000000083386e-07, 9.485999999996053e-06, 4.720000000013602e-07, 1.0443999999998343e-05, 4.7300000000083386e-07, 8.222000000002172e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7299999999389497e-07, 8.541000000000798e-06, 4.7300000000083386e-07, 1.0208000000004602e-05, 4.7199999999442133e-07, 1.1056000000002342e-05, 4.720000000013602e-07, 9.179999999997523e-06, 4.7300000000083386e-07, 8.444000000003282e-06, 4.7199999999442133e-07, 9.597999999999551e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 9.847000000000328e-06, 4.7300000000083386e-07, 9.27699999999504e-06, 4.7300000000083386e-07, 9.500000000002562e-06, 4.720000000013602e-07, 1.0305000000002118e-05, 4.7299999999389497e-07, 9.486000000002992e-06, 4.720000000013602e-07, 8.485999999995053e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 8.236000000001742e-06, 4.720000000013602e-07, 1.1305999999995653e-05, 4.720000000013602e-07, 9.556000000000842e-06, 4.720000000013602e-07, 8.236000000001742e-06, 4.7199999999442133e-07, 8.667000000003866e-06, 4.720000000013602e-07, 1.1139000000000288e-05, 4.7199999999442133e-07, 8.472000000002422e-06, 4.7300000000083386e-07, 1.0000000000003062e-05, 4.7199999999442133e-07, 1.0222000000004172e-05, 4.720000000013602e-07, 8.333999999998731e-06, 4.720000000013602e-07, 8.013999999993693e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 8.875000000005406e-06, 4.7199999999442133e-07, 9.278000000001452e-06, 4.720000000013602e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.0847000000001328e-05, 4.7199999999442133e-07, 8.973000000002396e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 8.542000000000272e-06, 4.7199999999442133e-07, 9.180000000004462e-06, 4.7300000000083386e-07, 8.860999999998898e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.7199999999442133e-07, 8.653000000004296e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.7199999999442133e-07, 8.737000000001716e-06, 4.720000000013602e-07, 1.0749999999996873e-05, 4.720000000013602e-07], 'time': [0.036572194, 0.036572667, 0.036582153, 0.036582625, 0.036593069, 0.036593542, 0.036601764, 0.036602236, 0.036612139, 0.036612611, 0.036622, 0.036622472, 0.036630611, 0.036631083, 0.036641944, 0.036642417, 0.036650958, 0.036651431, 0.036661639, 0.036662111, 0.036673167, 0.036673639, 0.036682819, 0.036683292, 0.036691736, 0.036692208, 0.036701806, 0.036702278, 0.036712875, 0.036713347, 0.036723194, 0.036723667, 0.036732944, 0.036733417, 0.036742917, 0.036743389, 0.036753694, 0.036754167, 0.036763653, 0.036764125, 0.036772611, 0.036773083, 0.036782847, 0.036783319, 0.036791917, 0.036792389, 0.036802667, 0.036803139, 0.036811375, 0.036811847, 0.036823153, 0.036823625, 0.036833181, 0.036833653, 0.036841889, 0.036842361, 0.036851028, 0.0368515, 0.036862639, 0.036863111, 0.036871583, 0.036872056, 0.036882056, 0.036882528, 0.03689275, 0.036893222, 0.036901556, 0.036902028, 0.036910042, 0.036910514, 0.036920431, 0.036920903, 0.036929778, 0.03693025, 0.036939528, 0.03694, 0.036951153, 0.036951625, 0.036962472, 0.036962944, 0.036971917, 0.036972389, 0.036983028, 0.0369835, 0.036992042, 0.036992514, 0.037001694, 0.037002167, 0.037011028, 0.0370115, 0.037021097, 0.037021569, 0.037030222, 0.037030694, 0.037041597, 0.037042069, 0.037050806, 0.037051278, 0.037062028, 0.0370625], 'source_diff': [0, 4.7300000000083386e-07, 9.485999999996053e-06, 4.720000000013602e-07, 1.0443999999998343e-05, 4.7300000000083386e-07, 8.222000000002172e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7299999999389497e-07, 8.541000000000798e-06, 4.7300000000083386e-07, 1.0208000000004602e-05, 4.7199999999442133e-07, 1.1056000000002342e-05, 4.720000000013602e-07, 9.179999999997523e-06, 4.7300000000083386e-07, 8.444000000003282e-06, 4.7199999999442133e-07, 9.597999999999551e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 9.847000000000328e-06, 4.7300000000083386e-07, 9.27699999999504e-06, 4.7300000000083386e-07, 9.500000000002562e-06, 4.720000000013602e-07, 1.0305000000002118e-05, 4.7299999999389497e-07, 9.486000000002992e-06, 4.720000000013602e-07, 8.485999999995053e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 8.236000000001742e-06, 4.720000000013602e-07, 1.1305999999995653e-05, 4.720000000013602e-07, 9.556000000000842e-06, 4.720000000013602e-07, 8.236000000001742e-06, 4.7199999999442133e-07, 8.667000000003866e-06, 4.720000000013602e-07, 1.1139000000000288e-05, 4.7199999999442133e-07, 8.472000000002422e-06, 4.7300000000083386e-07, 1.0000000000003062e-05, 4.7199999999442133e-07, 1.0222000000004172e-05, 4.720000000013602e-07, 8.333999999998731e-06, 4.720000000013602e-07, 8.013999999993693e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 8.875000000005406e-06, 4.7199999999442133e-07, 9.278000000001452e-06, 4.720000000013602e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.0847000000001328e-05, 4.7199999999442133e-07, 8.973000000002396e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 8.542000000000272e-06, 4.7199999999442133e-07, 9.180000000004462e-06, 4.7300000000083386e-07, 8.860999999998898e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.7199999999442133e-07, 8.653000000004296e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.7199999999442133e-07, 8.737000000001716e-06, 4.720000000013602e-07, 1.0749999999996873e-05, 4.720000000013602e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:06.745" endtime="20201030 18:27:06.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.735" endtime="20201030 18:27:06.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:06.766" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 18:27:06.757" endtime="20201030 18:27:06.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:06.778" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:27:06.768" endtime="20201030 18:27:06.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.788" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:06.786" endtime="20201030 18:27:06.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.793" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:27:06.790" endtime="20201030 18:27:06.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.780" endtime="20201030 18:27:06.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:06.805" endtime="20201030 18:27:06.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.801" endtime="20201030 18:27:06.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.798" endtime="20201030 18:27:06.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.133" endtime="20201030 18:27:06.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.132" endtime="20201030 18:27:06.830"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.851" endtime="20201030 18:27:06.862"></status>
</kw>
<msg timestamp="20201030 18:27:06.863" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.847" endtime="20201030 18:27:06.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.869" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.865" endtime="20201030 18:27:06.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.871" endtime="20201030 18:27:06.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.840" endtime="20201030 18:27:06.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.835" endtime="20201030 18:27:06.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.895" endtime="20201030 18:27:07.250"></status>
</kw>
<msg timestamp="20201030 18:27:07.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035845514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035845986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:06.891" endtime="20201030 18:27:07.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035845514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035845986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:07.259" endtime="20201030 18:27:07.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.278" endtime="20201030 18:27:07.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.884" endtime="20201030 18:27:07.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.880" endtime="20201030 18:27:07.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:07.341" level="INFO">${debug} = {'diff': [0, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 1.0833000000001758e-05, 4.7199999999442133e-07, 1.1264000000003882e-05, 4.7300000000083386e-07, 8.665999999997454e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:07.287" endtime="20201030 18:27:07.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.343" endtime="20201030 18:27:07.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.355" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:07.352" endtime="20201030 18:27:07.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.364" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 1.0833000000001758e-05, 4.7199999999442133e-07, 1.1264000000003882e-05, 4.7300000000083386e-07, 8.665999999997454e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 9.806000000001092e-06, 4.7199999999442133e-07, 8.028000000000202e-06, 4.720000000013602e-07, 1.1180999999998997e-05, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 1.0847000000001328e-05, 4.7299999999389497e-07, 1.0416000000006143e-05, 4.7199999999442133e-07, 1.1056000000002342e-05, 4.720000000013602e-07, 9.499999999995623e-06, 4.720000000013602e-07, 9.792000000001522e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 8.750000000001812e-06, 4.720000000013602e-07, 9.291999999994083e-06, 4.720000000013602e-07, 9.486000000002992e-06, 4.7300000000083386e-07, 8.971999999995983e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 9.471999999996483e-06, 4.720000000013602e-07, 1.0250000000003312e-05, 4.7300000000083386e-07, 1.0832999999994819e-05, 4.720000000013602e-07, 8.222000000002172e-06, 4.7300000000083386e-07, 1.0749999999996873e-05, 4.720000000013602e-07, 1.0429999999998774e-05, 4.7300000000083386e-07, 8.651999999997884e-06, 4.7300000000083386e-07, 1.0333000000001258e-05, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.7300000000083386e-07, 8.124999999997717e-06, 4.720000000013602e-07, 9.986000000003492e-06, 4.7199999999442133e-07, 8.472000000002422e-06, 4.7300000000083386e-07, 1.1165999999999954e-05, 4.7300000000083386e-07, 9.679999999998024e-06, 4.720000000013602e-07, 1.0958999999997887e-05, 4.720000000013602e-07, 8.555000000000368e-06, 4.7300000000083386e-07, 8.750000000001812e-06, 4.7199999999442133e-07, 1.1055000000002868e-05, 4.7300000000083386e-07, 1.052699999999629e-05, 4.7300000000083386e-07, 1.1264000000003882e-05, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.7199999999442133e-07, 1.1055000000002868e-05, 4.7300000000083386e-07, 1.0847000000001328e-05, 4.7199999999442133e-07], 'time': [0.035845514, 0.035845986, 0.035855167, 0.035855639, 0.035866472, 0.035866944, 0.035878208, 0.035878681, 0.035887347, 0.035887819, 0.035897722, 0.035898194, 0.035908097, 0.035908569, 0.035918375, 0.035918847, 0.035926875, 0.035927347, 0.035938528, 0.035939, 0.035948264, 0.035948736, 0.035959583, 0.035960056, 0.035970472, 0.035970944, 0.035982, 0.035982472, 0.035991972, 0.035992444, 0.036002236, 0.036002708, 0.036012097, 0.036012569, 0.03602175, 0.036022222, 0.036030972, 0.036031444, 0.036040736, 0.036041208, 0.036050694, 0.036051167, 0.036060139, 0.036060611, 0.036068653, 0.036069125, 0.036078597, 0.036079069, 0.036089319, 0.036089792, 0.036100625, 0.036101097, 0.036109319, 0.036109792, 0.036120542, 0.036121014, 0.036131444, 0.036131917, 0.036140569, 0.036141042, 0.036151375, 0.036151847, 0.0361625, 0.036162972, 0.036171375, 0.036171847, 0.036180194, 0.036180667, 0.036188792, 0.036189264, 0.03619925, 0.036199722, 0.036208194, 0.036208667, 0.036219833, 0.036220306, 0.036229986, 0.036230458, 0.036241417, 0.036241889, 0.036250444, 0.036250917, 0.036259667, 0.036260139, 0.036271194, 0.036271667, 0.036282194, 0.036282667, 0.036293931, 0.036294403, 0.036303778, 0.03630425, 0.036314181, 0.036314653, 0.036323181, 0.036323653, 0.036334708, 0.036335181, 0.036346028, 0.0363465], 'source_diff': [0, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 1.0833000000001758e-05, 4.7199999999442133e-07, 1.1264000000003882e-05, 4.7300000000083386e-07, 8.665999999997454e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 9.806000000001092e-06, 4.7199999999442133e-07, 8.028000000000202e-06, 4.720000000013602e-07, 1.1180999999998997e-05, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 1.0847000000001328e-05, 4.7299999999389497e-07, 1.0416000000006143e-05, 4.7199999999442133e-07, 1.1056000000002342e-05, 4.720000000013602e-07, 9.499999999995623e-06, 4.720000000013602e-07, 9.792000000001522e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 8.750000000001812e-06, 4.720000000013602e-07, 9.291999999994083e-06, 4.720000000013602e-07, 9.486000000002992e-06, 4.7300000000083386e-07, 8.971999999995983e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 9.471999999996483e-06, 4.720000000013602e-07, 1.0250000000003312e-05, 4.7300000000083386e-07, 1.0832999999994819e-05, 4.720000000013602e-07, 8.222000000002172e-06, 4.7300000000083386e-07, 1.0749999999996873e-05, 4.720000000013602e-07, 1.0429999999998774e-05, 4.7300000000083386e-07, 8.651999999997884e-06, 4.7300000000083386e-07, 1.0333000000001258e-05, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.7300000000083386e-07, 8.124999999997717e-06, 4.720000000013602e-07, 9.986000000003492e-06, 4.7199999999442133e-07, 8.472000000002422e-06, 4.7300000000083386e-07, 1.1165999999999954e-05, 4.7300000000083386e-07, 9.679999999998024e-06, 4.720000000013602e-07, 1.0958999999997887e-05, 4.720000000013602e-07, 8.555000000000368e-06, 4.7300000000083386e-07, 8.750000000001812e-06, 4.7199999999442133e-07, 1.1055000000002868e-05, 4.7300000000083386e-07, 1.052699999999629e-05, 4.7300000000083386e-07, 1.1264000000003882e-05, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 9.930999999997747e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.7199999999442133e-07, 1.1055000000002868e-05, 4.7300000000083386e-07, 1.0847000000001328e-05, 4.7199999999442133e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:07.357" endtime="20201030 18:27:07.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.347" endtime="20201030 18:27:07.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:07.378" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 18:27:07.369" endtime="20201030 18:27:07.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:07.387" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:27:07.380" endtime="20201030 18:27:07.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.397" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:07.395" endtime="20201030 18:27:07.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.402" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201030 18:27:07.399" endtime="20201030 18:27:07.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.389" endtime="20201030 18:27:07.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:07.414" endtime="20201030 18:27:07.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.410" endtime="20201030 18:27:07.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.407" endtime="20201030 18:27:07.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.832" endtime="20201030 18:27:07.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.831" endtime="20201030 18:27:07.439"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.461" endtime="20201030 18:27:07.471"></status>
</kw>
<msg timestamp="20201030 18:27:07.473" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:07.457" endtime="20201030 18:27:07.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.479" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:07.475" endtime="20201030 18:27:07.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.481" endtime="20201030 18:27:07.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.449" endtime="20201030 18:27:07.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.444" endtime="20201030 18:27:07.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.511" endtime="20201030 18:27:07.862"></status>
</kw>
<msg timestamp="20201030 18:27:07.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037022458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037022931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:07.507" endtime="20201030 18:27:07.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037022458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037022931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:07.872" endtime="20201030 18:27:07.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.891" endtime="20201030 18:27:07.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.498" endtime="20201030 18:27:07.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.492" endtime="20201030 18:27:07.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:07.954" level="INFO">${debug} = {'diff': [0, 4.7300000000083386e-07, 8.027000000000728e-06, 4.7299999999389497e-07, 9.500000000002562e-06, 4.720000000013602e-07, 1.1055000000002868e-05, 4.7299999999389497e-07, 9.887999999999564e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:07.900" endtime="20201030 18:27:07.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.956" endtime="20201030 18:27:07.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.968" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:07.966" endtime="20201030 18:27:07.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.977" level="INFO">VALUE: {'diff': [0, 4.7300000000083386e-07, 8.027000000000728e-06, 4.7299999999389497e-07, 9.500000000002562e-06, 4.720000000013602e-07, 1.1055000000002868e-05, 4.7299999999389497e-07, 9.887999999999564e-06, 4.7300000000083386e-07, 1.0000000000003062e-05, 4.720000000013602e-07, 1.0749999999996873e-05, 4.720000000013602e-07, 1.1292000000003022e-05, 4.7199999999442133e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 9.472000000003422e-06, 4.7199999999442133e-07, 8.139000000004226e-06, 4.7300000000083386e-07, 8.749999999994873e-06, 4.720000000013602e-07, 1.1264000000003882e-05, 4.720000000013602e-07, 8.707999999996163e-06, 4.720000000013602e-07, 8.806000000000092e-06, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 8.971999999995983e-06, 4.720000000013602e-07, 9.778000000001952e-06, 4.720000000013602e-07, 1.1084000000001482e-05, 4.7199999999442133e-07, 8.861000000005836e-06, 4.7199999999442133e-07, 9.223000000002646e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 9.110999999999148e-06, 4.720000000013602e-07, 1.0598000000000551e-05, 4.720000000013602e-07, 9.707999999997163e-06, 4.720000000013602e-07, 1.1041999999995833e-05, 4.720000000013602e-07, 8.667000000003866e-06, 4.7199999999442133e-07, 8.30600000000653e-06, 4.7199999999442133e-07, 1.0681000000005436e-05, 4.7199999999442133e-07, 1.0222000000004172e-05, 4.720000000013602e-07, 9.999999999996123e-06, 4.720000000013602e-07, 1.0958999999997887e-05, 4.720000000013602e-07, 8.972000000002922e-06, 4.7199999999442133e-07, 8.125000000004656e-06, 4.7300000000083386e-07, 9.179999999997523e-06, 4.720000000013602e-07, 9.292000000001022e-06, 4.7199999999442133e-07, 1.0250000000003312e-05, 4.7300000000083386e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 1.1249999999997373e-05, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 8.555999999999842e-06, 4.720000000013602e-07, 1.0000000000003062e-05, 4.720000000013602e-07, 9.083999999999481e-06, 4.7199999999442133e-07, 1.0944000000005782e-05, 4.7299999999389497e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 8.986000000002492e-06, 4.720000000013602e-07, 9.888999999999037e-06, 4.720000000013602e-07, 8.444999999995817e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07], 'time': [0.037022458, 0.037022931, 0.037030958, 0.037031431, 0.037040931, 0.037041403, 0.037052458, 0.037052931, 0.037062819, 0.037063292, 0.037073292, 0.037073764, 0.037084514, 0.037084986, 0.037096278, 0.03709675, 0.037107903, 0.037108375, 0.037117847, 0.037118319, 0.037126458, 0.037126931, 0.037135681, 0.037136153, 0.037147417, 0.037147889, 0.037156597, 0.037157069, 0.037165875, 0.037166347, 0.037175528, 0.037176, 0.037184972, 0.037185444, 0.037195222, 0.037195694, 0.037206778, 0.03720725, 0.037216111, 0.037216583, 0.037225806, 0.037226278, 0.037237014, 0.037237486, 0.037246597, 0.037247069, 0.037257667, 0.037258139, 0.037267847, 0.037268319, 0.037279361, 0.037279833, 0.0372885, 0.037288972, 0.037297278, 0.03729775, 0.037308431, 0.037308903, 0.037319125, 0.037319597, 0.037329597, 0.037330069, 0.037341028, 0.0373415, 0.037350472, 0.037350944, 0.037359069, 0.037359542, 0.037368722, 0.037369194, 0.037378486, 0.037378958, 0.037389208, 0.037389681, 0.037400306, 0.037400778, 0.037412028, 0.0374125, 0.037421403, 0.037421875, 0.037431111, 0.037431583, 0.037440139, 0.037440611, 0.037450611, 0.037451083, 0.037460167, 0.037460639, 0.037471583, 0.037472056, 0.037482167, 0.037482639, 0.037491625, 0.037492097, 0.037501986, 0.037502458, 0.037510903, 0.037511375, 0.037519722, 0.037520194], 'source_diff': [0, 4.7300000000083386e-07, 8.027000000000728e-06, 4.7299999999389497e-07, 9.500000000002562e-06, 4.720000000013602e-07, 1.1055000000002868e-05, 4.7299999999389497e-07, 9.887999999999564e-06, 4.7300000000083386e-07, 1.0000000000003062e-05, 4.720000000013602e-07, 1.0749999999996873e-05, 4.720000000013602e-07, 1.1292000000003022e-05, 4.7199999999442133e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 9.472000000003422e-06, 4.7199999999442133e-07, 8.139000000004226e-06, 4.7300000000083386e-07, 8.749999999994873e-06, 4.720000000013602e-07, 1.1264000000003882e-05, 4.720000000013602e-07, 8.707999999996163e-06, 4.720000000013602e-07, 8.806000000000092e-06, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 8.971999999995983e-06, 4.720000000013602e-07, 9.778000000001952e-06, 4.720000000013602e-07, 1.1084000000001482e-05, 4.7199999999442133e-07, 8.861000000005836e-06, 4.7199999999442133e-07, 9.223000000002646e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 9.110999999999148e-06, 4.720000000013602e-07, 1.0598000000000551e-05, 4.720000000013602e-07, 9.707999999997163e-06, 4.720000000013602e-07, 1.1041999999995833e-05, 4.720000000013602e-07, 8.667000000003866e-06, 4.7199999999442133e-07, 8.30600000000653e-06, 4.7199999999442133e-07, 1.0681000000005436e-05, 4.7199999999442133e-07, 1.0222000000004172e-05, 4.720000000013602e-07, 9.999999999996123e-06, 4.720000000013602e-07, 1.0958999999997887e-05, 4.720000000013602e-07, 8.972000000002922e-06, 4.7199999999442133e-07, 8.125000000004656e-06, 4.7300000000083386e-07, 9.179999999997523e-06, 4.720000000013602e-07, 9.292000000001022e-06, 4.7199999999442133e-07, 1.0250000000003312e-05, 4.7300000000083386e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 1.1249999999997373e-05, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 8.555999999999842e-06, 4.720000000013602e-07, 1.0000000000003062e-05, 4.720000000013602e-07, 9.083999999999481e-06, 4.7199999999442133e-07, 1.0944000000005782e-05, 4.7299999999389497e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 8.986000000002492e-06, 4.720000000013602e-07, 9.888999999999037e-06, 4.720000000013602e-07, 8.444999999995817e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:07.970" endtime="20201030 18:27:07.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.961" endtime="20201030 18:27:07.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:07.992" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.7299999999389497e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7299999999389497e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07...</msg>
<status status="PASS" starttime="20201030 18:27:07.983" endtime="20201030 18:27:07.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:08.003" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4...</msg>
<status status="PASS" starttime="20201030 18:27:07.994" endtime="20201030 18:27:08.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.014" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:08.010" endtime="20201030 18:27:08.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.021" level="INFO">VALUE: [4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:27:08.017" endtime="20201030 18:27:08.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.004" endtime="20201030 18:27:08.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:08.034" endtime="20201030 18:27:08.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.029" endtime="20201030 18:27:08.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.027" endtime="20201030 18:27:08.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.441" endtime="20201030 18:27:08.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.440" endtime="20201030 18:27:08.061"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.091" endtime="20201030 18:27:08.106"></status>
</kw>
<msg timestamp="20201030 18:27:08.107" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.086" endtime="20201030 18:27:08.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.115" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.110" endtime="20201030 18:27:08.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.118" endtime="20201030 18:27:08.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.078" endtime="20201030 18:27:08.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.072" endtime="20201030 18:27:08.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.141" endtime="20201030 18:27:08.491"></status>
</kw>
<msg timestamp="20201030 18:27:08.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048799722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048800194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.138" endtime="20201030 18:27:08.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048799722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048800194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.501" endtime="20201030 18:27:08.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.520" endtime="20201030 18:27:08.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.131" endtime="20201030 18:27:08.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.126" endtime="20201030 18:27:08.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:08.584" level="INFO">${debug} = {'diff': [0, 4.720000000013602e-07, 9.695000000004006e-06, 4.7199999999442133e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 9.069999999999911e-06, 4.720000000013602e-07, 1.0944999999998317e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:08.531" endtime="20201030 18:27:08.585"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.586" endtime="20201030 18:27:08.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.598" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:08.596" endtime="20201030 18:27:08.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.607" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 9.695000000004006e-06, 4.7199999999442133e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 9.069999999999911e-06, 4.720000000013602e-07, 1.0944999999998317e-05, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 9.181000000003936e-06, 4.7199999999442133e-07, 8.139000000004226e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 9.097999999999051e-06, 4.720000000013602e-07, 9.721999999996733e-06, 4.720000000013602e-07, 1.0458999999997387e-05, 4.720000000013602e-07, 1.0305000000002118e-05, 4.7300000000083386e-07, 9.999999999996123e-06, 4.720000000013602e-07, 8.667000000003866e-06, 4.7199999999442133e-07, 8.222000000002172e-06, 4.720000000013602e-07, 1.0221999999997233e-05, 4.7300000000083386e-07, 9.165999999997954e-06, 4.7300000000083386e-07, 9.277000000001978e-06, 4.7300000000083386e-07, 9.500000000002562e-06, 4.7199999999442133e-07, 1.0333000000001258e-05, 4.720000000013602e-07, 9.792000000001522e-06, 4.720000000013602e-07, 8.583999999998981e-06, 4.7199999999442133e-07, 9.889000000005976e-06, 4.7199999999442133e-07, 1.1278000000003452e-05, 4.720000000013602e-07, 1.1041999999995833e-05, 4.720000000013602e-07, 9.943999999997843e-06, 4.720000000013602e-07, 9.459000000003326e-06, 4.720000000013602e-07, 1.0332999999994319e-05, 4.7300000000083386e-07, 8.138000000004753e-06, 4.7299999999389497e-07, 9.708000000004102e-06, 4.720000000013602e-07, 8.749999999994873e-06, 4.720000000013602e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 1.1166999999999427e-05, 4.720000000013602e-07, 9.999999999996123e-06, 4.720000000013602e-07, 8.778000000000952e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 9.055000000000868e-06, 4.7299999999389497e-07, 9.305000000001118e-06, 4.720000000013602e-07, 1.0848000000000801e-05, 4.720000000013602e-07, 1.0318999999994749e-05, 4.7300000000083386e-07, 1.0236000000003742e-05, 4.720000000013602e-07, 1.0429999999998774e-05, 4.7300000000083386e-07, 8.957999999996413e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07], 'time': [0.048799722, 0.048800194, 0.048809889, 0.048810361, 0.048821222, 0.048821694, 0.048830764, 0.048831236, 0.048842181, 0.048842653, 0.048853389, 0.048853861, 0.048862736, 0.048863208, 0.048872389, 0.048872861, 0.048881, 0.048881472, 0.048891375, 0.048891847, 0.0489005, 0.048900972, 0.048910847, 0.048911319, 0.048920417, 0.048920889, 0.048930611, 0.048931083, 0.048941542, 0.048942014, 0.048952319, 0.048952792, 0.048962792, 0.048963264, 0.048971931, 0.048972403, 0.048980625, 0.048981097, 0.048991319, 0.048991792, 0.049000958, 0.049001431, 0.049010708, 0.049011181, 0.049020681, 0.049021153, 0.049031486, 0.049031958, 0.04904175, 0.049042222, 0.049050806, 0.049051278, 0.049061167, 0.049061639, 0.049072917, 0.049073389, 0.049084431, 0.049084903, 0.049094847, 0.049095319, 0.049104778, 0.04910525, 0.049115583, 0.049116056, 0.049124194, 0.049124667, 0.049134375, 0.049134847, 0.049143597, 0.049144069, 0.049154403, 0.049154875, 0.049166042, 0.049166514, 0.049176514, 0.049176986, 0.049185764, 0.049186236, 0.049194792, 0.049195264, 0.049204319, 0.049204792, 0.049214097, 0.049214569, 0.049225417, 0.049225889, 0.049236208, 0.049236681, 0.049246917, 0.049247389, 0.049257819, 0.049258292, 0.04926725, 0.049267722, 0.049276264, 0.049276736, 0.049284875, 0.049285347, 0.049293903, 0.049294375], 'source_diff': [0, 4.720000000013602e-07, 9.695000000004006e-06, 4.7199999999442133e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 9.069999999999911e-06, 4.720000000013602e-07, 1.0944999999998317e-05, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 9.181000000003936e-06, 4.7199999999442133e-07, 8.139000000004226e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 9.097999999999051e-06, 4.720000000013602e-07, 9.721999999996733e-06, 4.720000000013602e-07, 1.0458999999997387e-05, 4.720000000013602e-07, 1.0305000000002118e-05, 4.7300000000083386e-07, 9.999999999996123e-06, 4.720000000013602e-07, 8.667000000003866e-06, 4.7199999999442133e-07, 8.222000000002172e-06, 4.720000000013602e-07, 1.0221999999997233e-05, 4.7300000000083386e-07, 9.165999999997954e-06, 4.7300000000083386e-07, 9.277000000001978e-06, 4.7300000000083386e-07, 9.500000000002562e-06, 4.7199999999442133e-07, 1.0333000000001258e-05, 4.720000000013602e-07, 9.792000000001522e-06, 4.720000000013602e-07, 8.583999999998981e-06, 4.7199999999442133e-07, 9.889000000005976e-06, 4.7199999999442133e-07, 1.1278000000003452e-05, 4.720000000013602e-07, 1.1041999999995833e-05, 4.720000000013602e-07, 9.943999999997843e-06, 4.720000000013602e-07, 9.459000000003326e-06, 4.720000000013602e-07, 1.0332999999994319e-05, 4.7300000000083386e-07, 8.138000000004753e-06, 4.7299999999389497e-07, 9.708000000004102e-06, 4.720000000013602e-07, 8.749999999994873e-06, 4.720000000013602e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 1.1166999999999427e-05, 4.720000000013602e-07, 9.999999999996123e-06, 4.720000000013602e-07, 8.778000000000952e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 9.055000000000868e-06, 4.7299999999389497e-07, 9.305000000001118e-06, 4.720000000013602e-07, 1.0848000000000801e-05, 4.720000000013602e-07, 1.0318999999994749e-05, 4.7300000000083386e-07, 1.0236000000003742e-05, 4.720000000013602e-07, 1.0429999999998774e-05, 4.7300000000083386e-07, 8.957999999996413e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:08.600" endtime="20201030 18:27:08.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.591" endtime="20201030 18:27:08.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:08.621" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:27:08.613" endtime="20201030 18:27:08.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:08.631" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 18:27:08.623" endtime="20201030 18:27:08.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.642" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:08.639" endtime="20201030 18:27:08.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.647" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:27:08.644" endtime="20201030 18:27:08.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.632" endtime="20201030 18:27:08.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:08.659" endtime="20201030 18:27:08.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.654" endtime="20201030 18:27:08.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.652" endtime="20201030 18:27:08.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.067" endtime="20201030 18:27:08.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.063" endtime="20201030 18:27:08.684"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.704" endtime="20201030 18:27:08.716"></status>
</kw>
<msg timestamp="20201030 18:27:08.717" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.701" endtime="20201030 18:27:08.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.723" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.719" endtime="20201030 18:27:08.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.725" endtime="20201030 18:27:08.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.693" endtime="20201030 18:27:08.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.689" endtime="20201030 18:27:08.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.753" endtime="20201030 18:27:09.106"></status>
</kw>
<msg timestamp="20201030 18:27:09.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035609514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035609986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.747" endtime="20201030 18:27:09.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035609514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035609986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:09.115" endtime="20201030 18:27:09.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.135" endtime="20201030 18:27:09.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.738" endtime="20201030 18:27:09.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.733" endtime="20201030 18:27:09.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:09.199" level="INFO">${debug} = {'diff': [0, 4.720000000013602e-07, 8.846999999999328e-06, 4.7300000000083386e-07, 9.915999999998704e-06, 4.720000000013602e-07, 8.569999999999411e-06, 4.7199999999442133e-07, 8.736000000002242e-06, 4...</msg>
<status status="PASS" starttime="20201030 18:27:09.144" endtime="20201030 18:27:09.200"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.202" endtime="20201030 18:27:09.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.213" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:09.211" endtime="20201030 18:27:09.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.222" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 8.846999999999328e-06, 4.7300000000083386e-07, 9.915999999998704e-06, 4.720000000013602e-07, 8.569999999999411e-06, 4.7199999999442133e-07, 8.736000000002242e-06, 4.720000000013602e-07, 8.778000000000952e-06, 4.720000000013602e-07, 9.055999999993403e-06, 4.720000000013602e-07, 8.333999999998731e-06, 4.720000000013602e-07, 8.972000000002922e-06, 4.720000000013602e-07, 1.1263999999996943e-05, 4.720000000013602e-07, 8.973000000002396e-06, 4.7199999999442133e-07, 8.444000000003282e-06, 4.720000000013602e-07, 1.1069999999994973e-05, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 9.292000000001022e-06, 4.7199999999442133e-07, 8.542000000000272e-06, 4.720000000013602e-07, 1.0750000000003812e-05, 4.7199999999442133e-07, 9.806000000001092e-06, 4.720000000013602e-07, 1.0542000000002272e-05, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 1.0304999999995179e-05, 4.720000000013602e-07, 1.0750000000003812e-05, 4.7300000000083386e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 1.1166999999999427e-05, 4.720000000013602e-07, 1.0846999999994389e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 1.1165999999999954e-05, 4.720000000013602e-07, 9.709000000003576e-06, 4.7199999999442133e-07, 8.222000000002172e-06, 4.720000000013602e-07, 9.611999999999121e-06, 4.720000000013602e-07, 1.0943999999998844e-05, 4.720000000013602e-07, 9.583999999999981e-06, 4.720000000013602e-07, 1.0957999999998413e-05, 4.7300000000083386e-07, 9.707999999997163e-06, 4.720000000013602e-07, 9.486000000002992e-06, 4.7199999999442133e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 1.0737000000003716e-05, 4.7199999999442133e-07, 8.333000000006197e-06, 4.7199999999442133e-07, 9.917000000005116e-06, 4.7199999999442133e-07, 1.0528000000002702e-05, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7299999999389497e-07, 1.1236000000004742e-05, 4.720000000013602e-07, 8.360999999998397e-06, 4.720000000013602e-07, 8.749999999994873e-06, 4.7300000000083386e-07, 8.250000000001312e-06, 4.720000000013602e-07, 8.638999999997787e-06, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 9.583000000000508e-06, 4.720000000013602e-07], 'time': [0.035609514, 0.035609986, 0.035618833, 0.035619306, 0.035629222, 0.035629694, 0.035638264, 0.035638736, 0.035647472, 0.035647944, 0.035656722, 0.035657194, 0.03566625, 0.035666722, 0.035675056, 0.035675528, 0.0356845, 0.035684972, 0.035696236, 0.035696708, 0.035705681, 0.035706153, 0.035714597, 0.035715069, 0.035726139, 0.035726611, 0.035735875, 0.035736347, 0.035745639, 0.035746111, 0.035754653, 0.035755125, 0.035765875, 0.035766347, 0.035776153, 0.035776625, 0.035787167, 0.035787639, 0.035797556, 0.035798028, 0.035807958, 0.035808431, 0.035818736, 0.035819208, 0.035829958, 0.035830431, 0.035841167, 0.035841639, 0.035852806, 0.035853278, 0.035864125, 0.035864597, 0.035873458, 0.035873931, 0.035885097, 0.035885569, 0.035895278, 0.03589575, 0.035903972, 0.035904444, 0.035914056, 0.035914528, 0.035925472, 0.035925944, 0.035935528, 0.035936, 0.035946958, 0.035947431, 0.035957139, 0.035957611, 0.035967097, 0.035967569, 0.035978222, 0.035978694, 0.035989431, 0.035989903, 0.035998236, 0.035998708, 0.036008625, 0.036009097, 0.036019625, 0.036020097, 0.036028403, 0.036028875, 0.036038944, 0.036039417, 0.036050653, 0.036051125, 0.036059486, 0.036059958, 0.036068708, 0.036069181, 0.036077431, 0.036077903, 0.036086542, 0.036087014, 0.036095667, 0.036096139, 0.036105722, 0.036106194], 'source_diff': [0, 4.720000000013602e-07, 8.846999999999328e-06, 4.7300000000083386e-07, 9.915999999998704e-06, 4.720000000013602e-07, 8.569999999999411e-06, 4.7199999999442133e-07, 8.736000000002242e-06, 4.720000000013602e-07, 8.778000000000952e-06, 4.720000000013602e-07, 9.055999999993403e-06, 4.720000000013602e-07, 8.333999999998731e-06, 4.720000000013602e-07, 8.972000000002922e-06, 4.720000000013602e-07, 1.1263999999996943e-05, 4.720000000013602e-07, 8.973000000002396e-06, 4.7199999999442133e-07, 8.444000000003282e-06, 4.720000000013602e-07, 1.1069999999994973e-05, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 9.292000000001022e-06, 4.7199999999442133e-07, 8.542000000000272e-06, 4.720000000013602e-07, 1.0750000000003812e-05, 4.7199999999442133e-07, 9.806000000001092e-06, 4.720000000013602e-07, 1.0542000000002272e-05, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 9.929999999998274e-06, 4.7300000000083386e-07, 1.0304999999995179e-05, 4.720000000013602e-07, 1.0750000000003812e-05, 4.7300000000083386e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 1.1166999999999427e-05, 4.720000000013602e-07, 1.0846999999994389e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 1.1165999999999954e-05, 4.720000000013602e-07, 9.709000000003576e-06, 4.7199999999442133e-07, 8.222000000002172e-06, 4.720000000013602e-07, 9.611999999999121e-06, 4.720000000013602e-07, 1.0943999999998844e-05, 4.720000000013602e-07, 9.583999999999981e-06, 4.720000000013602e-07, 1.0957999999998413e-05, 4.7300000000083386e-07, 9.707999999997163e-06, 4.720000000013602e-07, 9.486000000002992e-06, 4.7199999999442133e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 1.0737000000003716e-05, 4.7199999999442133e-07, 8.333000000006197e-06, 4.7199999999442133e-07, 9.917000000005116e-06, 4.7199999999442133e-07, 1.0528000000002702e-05, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7299999999389497e-07, 1.1236000000004742e-05, 4.720000000013602e-07, 8.360999999998397e-06, 4.720000000013602e-07, 8.749999999994873e-06, 4.7300000000083386e-07, 8.250000000001312e-06, 4.720000000013602e-07, 8.638999999997787e-06, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 9.583000000000508e-06, 4.720000000013602e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:09.216" endtime="20201030 18:27:09.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.206" endtime="20201030 18:27:09.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:09.236" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 18:27:09.228" endtime="20201030 18:27:09.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:09.246" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 18:27:09.239" endtime="20201030 18:27:09.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.256" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:09.254" endtime="20201030 18:27:09.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.261" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:27:09.258" endtime="20201030 18:27:09.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.248" endtime="20201030 18:27:09.264"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:09.273" endtime="20201030 18:27:09.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.269" endtime="20201030 18:27:09.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.266" endtime="20201030 18:27:09.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.686" endtime="20201030 18:27:09.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.685" endtime="20201030 18:27:09.298"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.320" endtime="20201030 18:27:09.331"></status>
</kw>
<msg timestamp="20201030 18:27:09.333" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:09.315" endtime="20201030 18:27:09.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.339" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:09.335" endtime="20201030 18:27:09.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.341" endtime="20201030 18:27:09.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.308" endtime="20201030 18:27:09.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.303" endtime="20201030 18:27:09.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.364" endtime="20201030 18:27:09.724"></status>
</kw>
<msg timestamp="20201030 18:27:09.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037113556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037114028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:09.361" endtime="20201030 18:27:09.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037113556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037114028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:09.734" endtime="20201030 18:27:09.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.754" endtime="20201030 18:27:09.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.354" endtime="20201030 18:27:09.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.349" endtime="20201030 18:27:09.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:09.818" level="INFO">${debug} = {'diff': [0, 4.720000000013602e-07, 1.129099999999661e-05, 4.7300000000083386e-07, 1.0833000000001758e-05, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 9.346999999999828e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:09.762" endtime="20201030 18:27:09.819"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.820" endtime="20201030 18:27:09.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.833" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:09.830" endtime="20201030 18:27:09.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.842" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.129099999999661e-05, 4.7300000000083386e-07, 1.0833000000001758e-05, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.7199999999442133e-07, 8.223000000001646e-06, 4.720000000013602e-07, 9.486000000002992e-06, 4.7199999999442133e-07, 8.332999999999258e-06, 4.7300000000083386e-07, 9.291000000001548e-06, 4.7300000000083386e-07, 8.486000000001992e-06, 4.7199999999442133e-07, 9.972000000003922e-06, 4.720000000013602e-07, 8.235999999994803e-06, 4.7300000000083386e-07, 9.374999999998967e-06, 4.720000000013602e-07, 1.0429999999998774e-05, 4.7300000000083386e-07, 1.1291000000003548e-05, 4.7300000000083386e-07, 8.471999999995483e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 9.624999999999218e-06, 4.7300000000083386e-07, 9.679999999998024e-06, 4.720000000013602e-07, 9.597999999999551e-06, 4.720000000013602e-07, 1.1165999999999954e-05, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 8.610999999998648e-06, 4.7300000000083386e-07, 1.0207999999997663e-05, 4.720000000013602e-07, 8.459000000002326e-06, 4.720000000013602e-07, 8.943999999996843e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.7199999999442133e-07, 1.1125000000000718e-05, 4.7300000000083386e-07, 8.332999999999258e-06, 4.720000000013602e-07, 8.958000000003352e-06, 4.7299999999389497e-07, 1.1165999999999954e-05, 4.7300000000083386e-07, 8.138000000004753e-06, 4.7300000000083386e-07, 9.707999999997163e-06, 4.720000000013602e-07, 8.236000000001742e-06, 4.7299999999389497e-07, 8.013000000001158e-06, 4.7300000000083386e-07, 8.346999999998828e-06, 4.720000000013602e-07, 1.0430999999998247e-05, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 1.0679999999999024e-05, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 1.1306000000002592e-05, 4.720000000013602e-07, 9.235999999995803e-06, 4.7300000000083386e-07, 1.1361000000001398e-05, 4.720000000013602e-07, 8.000000000001062e-06, 4.7199999999442133e-07, 8.389000000004476e-06, 4.720000000013602e-07, 8.235999999994803e-06, 4.7300000000083386e-07, 8.041000000000298e-06, 4.720000000013602e-07, 1.0944999999998317e-05, 4.720000000013602e-07, 8.222000000002172e-06, 4.7300000000083386e-07, 9.804999999994679e-06, 4.720000000013602e-07], 'time': [0.037113556, 0.037114028, 0.037125319, 0.037125792, 0.037136625, 0.037137097, 0.037147167, 0.037147639, 0.037156986, 0.037157458, 0.037165681, 0.037166153, 0.037175639, 0.037176111, 0.037184444, 0.037184917, 0.037194208, 0.037194681, 0.037203167, 0.037203639, 0.037213611, 0.037214083, 0.037222319, 0.037222792, 0.037232167, 0.037232639, 0.037243069, 0.037243542, 0.037254833, 0.037255306, 0.037263778, 0.03726425, 0.037272861, 0.037273333, 0.037282958, 0.037283431, 0.037293111, 0.037293583, 0.037303181, 0.037303653, 0.037314819, 0.037315292, 0.037325986, 0.037326458, 0.037335069, 0.037335542, 0.03734575, 0.037346222, 0.037354681, 0.037355153, 0.037364097, 0.037364569, 0.037375361, 0.037375833, 0.037386958, 0.037387431, 0.037395764, 0.037396236, 0.037405194, 0.037405667, 0.037416833, 0.037417306, 0.037425444, 0.037425917, 0.037435625, 0.037436097, 0.037444333, 0.037444806, 0.037452819, 0.037453292, 0.037461639, 0.037462111, 0.037472542, 0.037473014, 0.037483708, 0.037484181, 0.037494861, 0.037495333, 0.037504722, 0.037505194, 0.0375165, 0.037516972, 0.037526208, 0.037526681, 0.037538042, 0.037538514, 0.037546514, 0.037546986, 0.037555375, 0.037555847, 0.037564083, 0.037564556, 0.037572597, 0.037573069, 0.037584014, 0.037584486, 0.037592708, 0.037593181, 0.037602986, 0.037603458], 'source_diff': [0, 4.720000000013602e-07, 1.129099999999661e-05, 4.7300000000083386e-07, 1.0833000000001758e-05, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.7199999999442133e-07, 8.223000000001646e-06, 4.720000000013602e-07, 9.486000000002992e-06, 4.7199999999442133e-07, 8.332999999999258e-06, 4.7300000000083386e-07, 9.291000000001548e-06, 4.7300000000083386e-07, 8.486000000001992e-06, 4.7199999999442133e-07, 9.972000000003922e-06, 4.720000000013602e-07, 8.235999999994803e-06, 4.7300000000083386e-07, 9.374999999998967e-06, 4.720000000013602e-07, 1.0429999999998774e-05, 4.7300000000083386e-07, 1.1291000000003548e-05, 4.7300000000083386e-07, 8.471999999995483e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 9.624999999999218e-06, 4.7300000000083386e-07, 9.679999999998024e-06, 4.720000000013602e-07, 9.597999999999551e-06, 4.720000000013602e-07, 1.1165999999999954e-05, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 8.610999999998648e-06, 4.7300000000083386e-07, 1.0207999999997663e-05, 4.720000000013602e-07, 8.459000000002326e-06, 4.720000000013602e-07, 8.943999999996843e-06, 4.720000000013602e-07, 1.0792000000002522e-05, 4.7199999999442133e-07, 1.1125000000000718e-05, 4.7300000000083386e-07, 8.332999999999258e-06, 4.720000000013602e-07, 8.958000000003352e-06, 4.7299999999389497e-07, 1.1165999999999954e-05, 4.7300000000083386e-07, 8.138000000004753e-06, 4.7300000000083386e-07, 9.707999999997163e-06, 4.720000000013602e-07, 8.236000000001742e-06, 4.7299999999389497e-07, 8.013000000001158e-06, 4.7300000000083386e-07, 8.346999999998828e-06, 4.720000000013602e-07, 1.0430999999998247e-05, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 1.0679999999999024e-05, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 1.1306000000002592e-05, 4.720000000013602e-07, 9.235999999995803e-06, 4.7300000000083386e-07, 1.1361000000001398e-05, 4.720000000013602e-07, 8.000000000001062e-06, 4.7199999999442133e-07, 8.389000000004476e-06, 4.720000000013602e-07, 8.235999999994803e-06, 4.7300000000083386e-07, 8.041000000000298e-06, 4.720000000013602e-07, 1.0944999999998317e-05, 4.720000000013602e-07, 8.222000000002172e-06, 4.7300000000083386e-07, 9.804999999994679e-06, 4.720000000013602e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:09.835" endtime="20201030 18:27:09.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.825" endtime="20201030 18:27:09.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:09.856" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 18:27:09.847" endtime="20201030 18:27:09.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:09.867" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4....</msg>
<status status="PASS" starttime="20201030 18:27:09.859" endtime="20201030 18:27:09.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.878" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:09.875" endtime="20201030 18:27:09.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.883" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:27:09.880" endtime="20201030 18:27:09.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.869" endtime="20201030 18:27:09.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:09.895" endtime="20201030 18:27:09.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.891" endtime="20201030 18:27:09.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.888" endtime="20201030 18:27:09.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.300" endtime="20201030 18:27:09.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.299" endtime="20201030 18:27:09.920"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.941" endtime="20201030 18:27:09.954"></status>
</kw>
<msg timestamp="20201030 18:27:09.955" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:09.938" endtime="20201030 18:27:09.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.961" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:09.957" endtime="20201030 18:27:09.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.964" endtime="20201030 18:27:09.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.930" endtime="20201030 18:27:09.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.926" endtime="20201030 18:27:09.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.988" endtime="20201030 18:27:10.338"></status>
</kw>
<msg timestamp="20201030 18:27:10.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036584639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036585111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:09.984" endtime="20201030 18:27:10.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036584639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036585111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:10.348" endtime="20201030 18:27:10.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.374" endtime="20201030 18:27:10.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.977" endtime="20201030 18:27:10.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.972" endtime="20201030 18:27:10.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:10.438" level="INFO">${debug} = {'diff': [0, 4.7199999999442133e-07, 1.0542000000002272e-05, 4.720000000013602e-07, 1.1139000000000288e-05, 4.720000000013602e-07, 1.1249999999997373e-05, 4.720000000013602e-07, 1.0444999999997817e-05...</msg>
<status status="PASS" starttime="20201030 18:27:10.384" endtime="20201030 18:27:10.439"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.441" endtime="20201030 18:27:10.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.453" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:10.451" endtime="20201030 18:27:10.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.462" level="INFO">VALUE: {'diff': [0, 4.7199999999442133e-07, 1.0542000000002272e-05, 4.720000000013602e-07, 1.1139000000000288e-05, 4.720000000013602e-07, 1.1249999999997373e-05, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 1.0542000000002272e-05, 4.720000000013602e-07, 8.318999999999688e-06, 4.7299999999389497e-07, 8.763000000001908e-06, 4.7300000000083386e-07, 1.1055000000002868e-05, 4.7199999999442133e-07, 9.278000000001452e-06, 4.720000000013602e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 9.499999999995623e-06, 4.7300000000083386e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 9.278000000001452e-06, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 9.583000000000508e-06, 4.7300000000083386e-07, 9.999999999996123e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 8.333999999998731e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 1.0542000000002272e-05, 4.720000000013602e-07, 9.277999999994513e-06, 4.720000000013602e-07, 9.709000000003576e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.7199999999442133e-07, 8.333999999998731e-06, 4.720000000013602e-07, 1.0958000000005352e-05, 4.7199999999442133e-07, 1.0750000000003812e-05, 4.7300000000083386e-07, 8.526999999994289e-06, 4.7300000000083386e-07, 9.847000000000328e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 8.957999999996413e-06, 4.7300000000083386e-07, 8.555000000000368e-06, 4.720000000013602e-07, 1.0542000000002272e-05, 4.7199999999442133e-07, 8.846999999999328e-06, 4.7300000000083386e-07, 9.805000000001618e-06, 4.720000000013602e-07, 1.0722999999997207e-05, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 9.485999999996053e-06, 4.7300000000083386e-07, 8.027000000000728e-06, 4.7300000000083386e-07, 1.0943999999998844e-05, 4.720000000013602e-07, 1.0666999999998927e-05, 4.720000000013602e-07, 8.957999999996413e-06, 4.7300000000083386e-07, 8.430000000003712e-06, 4.720000000013602e-07, 1.0847999999993863e-05, 4.720000000013602e-07], 'time': [0.036584639, 0.036585111, 0.036595653, 0.036596125, 0.036607264, 0.036607736, 0.036618986, 0.036619458, 0.036629903, 0.036630375, 0.036640917, 0.036641389, 0.036649708, 0.036650181, 0.036658944, 0.036659417, 0.036670472, 0.036670944, 0.036680222, 0.036680694, 0.036691847, 0.036692319, 0.036701819, 0.036702292, 0.036712403, 0.036712875, 0.036724028, 0.0367245, 0.036733778, 0.03673425, 0.036742903, 0.036743375, 0.036752306, 0.036752778, 0.036761903, 0.036762375, 0.036771958, 0.036772431, 0.036782431, 0.036782903, 0.036793764, 0.036794236, 0.036804972, 0.036805444, 0.036813778, 0.03681425, 0.036824986, 0.036825458, 0.036836, 0.036836472, 0.03684575, 0.036846222, 0.036855931, 0.036856403, 0.0368665, 0.036866972, 0.036875306, 0.036875778, 0.036886736, 0.036887208, 0.036897958, 0.036898431, 0.036906958, 0.036907431, 0.036917278, 0.03691775, 0.036926778, 0.03692725, 0.036936208, 0.036936681, 0.036945236, 0.036945708, 0.03695625, 0.036956722, 0.036965569, 0.036966042, 0.036975847, 0.036976319, 0.036987042, 0.036987514, 0.036997681, 0.036998153, 0.037006653, 0.037007125, 0.0370165, 0.037016972, 0.037026458, 0.037026931, 0.037034958, 0.037035431, 0.037046375, 0.037046847, 0.037057514, 0.037057986, 0.037066944, 0.037067417, 0.037075847, 0.037076319, 0.037087167, 0.037087639], 'source_diff': [0, 4.7199999999442133e-07, 1.0542000000002272e-05, 4.720000000013602e-07, 1.1139000000000288e-05, 4.720000000013602e-07, 1.1249999999997373e-05, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 1.0542000000002272e-05, 4.720000000013602e-07, 8.318999999999688e-06, 4.7299999999389497e-07, 8.763000000001908e-06, 4.7300000000083386e-07, 1.1055000000002868e-05, 4.7199999999442133e-07, 9.278000000001452e-06, 4.720000000013602e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 9.499999999995623e-06, 4.7300000000083386e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 9.278000000001452e-06, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 9.583000000000508e-06, 4.7300000000083386e-07, 9.999999999996123e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 8.333999999998731e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 1.0542000000002272e-05, 4.720000000013602e-07, 9.277999999994513e-06, 4.720000000013602e-07, 9.709000000003576e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.7199999999442133e-07, 8.333999999998731e-06, 4.720000000013602e-07, 1.0958000000005352e-05, 4.7199999999442133e-07, 1.0750000000003812e-05, 4.7300000000083386e-07, 8.526999999994289e-06, 4.7300000000083386e-07, 9.847000000000328e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 8.957999999996413e-06, 4.7300000000083386e-07, 8.555000000000368e-06, 4.720000000013602e-07, 1.0542000000002272e-05, 4.7199999999442133e-07, 8.846999999999328e-06, 4.7300000000083386e-07, 9.805000000001618e-06, 4.720000000013602e-07, 1.0722999999997207e-05, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 9.485999999996053e-06, 4.7300000000083386e-07, 8.027000000000728e-06, 4.7300000000083386e-07, 1.0943999999998844e-05, 4.720000000013602e-07, 1.0666999999998927e-05, 4.720000000013602e-07, 8.957999999996413e-06, 4.7300000000083386e-07, 8.430000000003712e-06, 4.720000000013602e-07, 1.0847999999993863e-05, 4.720000000013602e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:10.455" endtime="20201030 18:27:10.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.445" endtime="20201030 18:27:10.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:10.477" level="INFO">${RESULT} = [{'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:27:10.468" endtime="20201030 18:27:10.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:10.486" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:27:10.479" endtime="20201030 18:27:10.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.500" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:10.497" endtime="20201030 18:27:10.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.508" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:27:10.504" endtime="20201030 18:27:10.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.488" endtime="20201030 18:27:10.512"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:10.527" endtime="20201030 18:27:10.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.521" endtime="20201030 18:27:10.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.516" endtime="20201030 18:27:10.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.922" endtime="20201030 18:27:10.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.921" endtime="20201030 18:27:10.557"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.589" endtime="20201030 18:27:10.600"></status>
</kw>
<msg timestamp="20201030 18:27:10.601" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:10.585" endtime="20201030 18:27:10.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.607" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:10.603" endtime="20201030 18:27:10.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.610" endtime="20201030 18:27:10.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.576" endtime="20201030 18:27:10.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.564" endtime="20201030 18:27:10.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.633" endtime="20201030 18:27:11.032"></status>
</kw>
<msg timestamp="20201030 18:27:11.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051213792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051214264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:10.630" endtime="20201030 18:27:11.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051213792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051214264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.041" endtime="20201030 18:27:11.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.061" endtime="20201030 18:27:11.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.622" endtime="20201030 18:27:11.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.618" endtime="20201030 18:27:11.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:11.125" level="INFO">${debug} = {'diff': [0, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999442133e-07, 1.1264000000003882e-05, 4.720000000013602e-07, 9.694999999997067e-06, 4.720000000013602e-07, 9.499999999995623e-06, 4...</msg>
<status status="PASS" starttime="20201030 18:27:11.069" endtime="20201030 18:27:11.125"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.127" endtime="20201030 18:27:11.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.139" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:11.137" endtime="20201030 18:27:11.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.148" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999442133e-07, 1.1264000000003882e-05, 4.720000000013602e-07, 9.694999999997067e-06, 4.720000000013602e-07, 9.499999999995623e-06, 4.720000000013602e-07, 8.318999999999688e-06, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 1.0306000000001592e-05, 4.7199999999442133e-07, 1.0847000000001328e-05, 4.720000000013602e-07, 1.0320000000001162e-05, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 9.278000000001452e-06, 4.7199999999442133e-07, 8.069999999998911e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 9.583000000000508e-06, 4.720000000013602e-07, 1.0027999999995263e-05, 4.720000000013602e-07, 9.695000000004006e-06, 4.7199999999442133e-07, 9.694000000004532e-06, 4.7300000000083386e-07, 8.138999999997287e-06, 4.720000000013602e-07, 8.957999999996413e-06, 4.720000000013602e-07, 9.278000000001452e-06, 4.720000000013602e-07, 8.958999999995887e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 8.959000000002826e-06, 4.7199999999442133e-07, 1.0430000000005712e-05, 4.7300000000083386e-07, 1.0651999999999884e-05, 4.7299999999389497e-07, 9.694000000004532e-06, 4.720000000013602e-07, 8.013999999993693e-06, 4.720000000013602e-07, 1.0028000000002202e-05, 4.720000000013602e-07, 8.638999999997787e-06, 4.720000000013602e-07, 1.0736999999996777e-05, 4.720000000013602e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 1.1277999999996513e-05, 4.720000000013602e-07, 1.0222000000004172e-05, 4.7300000000083386e-07, 1.0943999999998844e-05, 4.7199999999442133e-07, 8.875000000005406e-06, 4.720000000013602e-07, 8.638999999997787e-06, 4.7300000000083386e-07, 8.555000000000368e-06, 4.7199999999442133e-07, 8.653000000004296e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.7199999999442133e-07, 9.389000000005476e-06, 4.7199999999442133e-07, 1.1264000000003882e-05, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 1.0541999999995333e-05, 4.720000000013602e-07, 8.917000000004116e-06, 4.7199999999442133e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 1.0014000000002632e-05, 4.7299999999389497e-07, 8.958000000003352e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07, 1.0028000000002202e-05, 4.7199999999442133e-07], 'time': [0.051213792, 0.051214264, 0.051222278, 0.05122275, 0.051234014, 0.051234486, 0.051244181, 0.051244653, 0.051254153, 0.051254625, 0.051262944, 0.051263417, 0.051274278, 0.05127475, 0.051285056, 0.051285528, 0.051296375, 0.051296847, 0.051307167, 0.051307639, 0.051316514, 0.051316986, 0.051326264, 0.051326736, 0.051334806, 0.051335278, 0.051344306, 0.051344778, 0.051354361, 0.051354833, 0.051364861, 0.051365333, 0.051375028, 0.0513755, 0.051385194, 0.051385667, 0.051393806, 0.051394278, 0.051403236, 0.051403708, 0.051412986, 0.051413458, 0.051422417, 0.051422889, 0.05143175, 0.051432222, 0.051441181, 0.051441653, 0.051452083, 0.051452556, 0.051463208, 0.051463681, 0.051473375, 0.051473847, 0.051481861, 0.051482333, 0.051492361, 0.051492833, 0.051501472, 0.051501944, 0.051512681, 0.051513153, 0.051523264, 0.051523736, 0.051535014, 0.051535486, 0.051545708, 0.051546181, 0.051557125, 0.051557597, 0.051566472, 0.051566944, 0.051575583, 0.051576056, 0.051584611, 0.051585083, 0.051593736, 0.051594208, 0.05160275, 0.051603222, 0.051612611, 0.051613083, 0.051624347, 0.051624819, 0.051635236, 0.051635708, 0.05164625, 0.051646722, 0.051655639, 0.051656111, 0.051667222, 0.051667694, 0.051677708, 0.051678181, 0.051687139, 0.051687611, 0.05169575, 0.051696222, 0.05170625, 0.051706722], 'source_diff': [0, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999442133e-07, 1.1264000000003882e-05, 4.720000000013602e-07, 9.694999999997067e-06, 4.720000000013602e-07, 9.499999999995623e-06, 4.720000000013602e-07, 8.318999999999688e-06, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 1.0306000000001592e-05, 4.7199999999442133e-07, 1.0847000000001328e-05, 4.720000000013602e-07, 1.0320000000001162e-05, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 9.278000000001452e-06, 4.7199999999442133e-07, 8.069999999998911e-06, 4.720000000013602e-07, 9.028000000001202e-06, 4.720000000013602e-07, 9.583000000000508e-06, 4.720000000013602e-07, 1.0027999999995263e-05, 4.720000000013602e-07, 9.695000000004006e-06, 4.7199999999442133e-07, 9.694000000004532e-06, 4.7300000000083386e-07, 8.138999999997287e-06, 4.720000000013602e-07, 8.957999999996413e-06, 4.720000000013602e-07, 9.278000000001452e-06, 4.720000000013602e-07, 8.958999999995887e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 8.959000000002826e-06, 4.7199999999442133e-07, 1.0430000000005712e-05, 4.7300000000083386e-07, 1.0651999999999884e-05, 4.7299999999389497e-07, 9.694000000004532e-06, 4.720000000013602e-07, 8.013999999993693e-06, 4.720000000013602e-07, 1.0028000000002202e-05, 4.720000000013602e-07, 8.638999999997787e-06, 4.720000000013602e-07, 1.0736999999996777e-05, 4.720000000013602e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 1.1277999999996513e-05, 4.720000000013602e-07, 1.0222000000004172e-05, 4.7300000000083386e-07, 1.0943999999998844e-05, 4.7199999999442133e-07, 8.875000000005406e-06, 4.720000000013602e-07, 8.638999999997787e-06, 4.7300000000083386e-07, 8.555000000000368e-06, 4.7199999999442133e-07, 8.653000000004296e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.7199999999442133e-07, 9.389000000005476e-06, 4.7199999999442133e-07, 1.1264000000003882e-05, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 1.0541999999995333e-05, 4.720000000013602e-07, 8.917000000004116e-06, 4.7199999999442133e-07, 1.1111000000001148e-05, 4.720000000013602e-07, 1.0014000000002632e-05, 4.7299999999389497e-07, 8.958000000003352e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07, 1.0028000000002202e-05, 4.7199999999442133e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:11.141" endtime="20201030 18:27:11.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.132" endtime="20201030 18:27:11.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:11.162" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07},...</msg>
<status status="PASS" starttime="20201030 18:27:11.154" endtime="20201030 18:27:11.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:11.172" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:27:11.164" endtime="20201030 18:27:11.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.182" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:11.179" endtime="20201030 18:27:11.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.187" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201030 18:27:11.184" endtime="20201030 18:27:11.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.173" endtime="20201030 18:27:11.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:11.200" endtime="20201030 18:27:11.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.195" endtime="20201030 18:27:11.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.193" endtime="20201030 18:27:11.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.560" endtime="20201030 18:27:11.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.559" endtime="20201030 18:27:11.225"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.247" endtime="20201030 18:27:11.258"></status>
</kw>
<msg timestamp="20201030 18:27:11.259" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.244" endtime="20201030 18:27:11.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.265" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.261" endtime="20201030 18:27:11.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.267" endtime="20201030 18:27:11.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.235" endtime="20201030 18:27:11.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.230" endtime="20201030 18:27:11.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.290" endtime="20201030 18:27:11.629"></status>
</kw>
<msg timestamp="20201030 18:27:11.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037368819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037369292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.287" endtime="20201030 18:27:11.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037368819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037369292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.638" endtime="20201030 18:27:11.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.663" endtime="20201030 18:27:11.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.280" endtime="20201030 18:27:11.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.275" endtime="20201030 18:27:11.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:11.735" level="INFO">${debug} = {'diff': [0, 4.7300000000083386e-07, 9.000000000002062e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 1.0929999999999274e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:11.673" endtime="20201030 18:27:11.735"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.737" endtime="20201030 18:27:11.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.749" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:11.747" endtime="20201030 18:27:11.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.759" level="INFO">VALUE: {'diff': [0, 4.7300000000083386e-07, 9.000000000002062e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 1.0929999999999274e-05, 4.7300000000083386e-07, 8.763999999994443e-06, 4.720000000013602e-07, 9.278000000001452e-06, 4.720000000013602e-07, 1.0013999999995693e-05, 4.720000000013602e-07, 8.139000000004226e-06, 4.7199999999442133e-07, 8.332999999999258e-06, 4.7300000000083386e-07, 1.1250000000004312e-05, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 8.443999999996343e-06, 4.720000000013602e-07, 8.764000000001382e-06, 4.7300000000083386e-07, 8.124999999997717e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.720000000013602e-07, 1.0027999999995263e-05, 4.720000000013602e-07, 9.472000000003422e-06, 4.7199999999442133e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 1.1264000000003882e-05, 4.7300000000083386e-07, 9.610999999999648e-06, 4.7199999999442133e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 8.374999999997967e-06, 4.7300000000083386e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 8.764000000001382e-06, 4.7199999999442133e-07, 9.903000000005546e-06, 4.7199999999442133e-07, 8.959000000002826e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.720000000013602e-07, 9.292000000001022e-06, 4.7199999999442133e-07, 8.319999999999161e-06, 4.720000000013602e-07, 1.0750000000003812e-05, 4.720000000013602e-07, 1.0846999999994389e-05, 4.720000000013602e-07, 9.806000000001092e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 9.278000000001452e-06, 4.7199999999442133e-07, 9.820000000000662e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7300000000083386e-07, 1.001299999999622e-05, 4.7300000000083386e-07, 1.1014000000003632e-05, 4.7199999999442133e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 9.069999999999911e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.720000000013602e-07, 9.179999999997523e-06, 4.7300000000083386e-07, 1.0429999999998774e-05, 4.720000000013602e-07, 1.0208999999997137e-05, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 8.332999999999258e-06, 4.720000000013602e-07], 'time': [0.037368819, 0.037369292, 0.037378292, 0.037378764, 0.037389472, 0.037389944, 0.037400292, 0.037400764, 0.037411694, 0.037412167, 0.037420931, 0.037421403, 0.037430681, 0.037431153, 0.037441167, 0.037441639, 0.037449778, 0.03745025, 0.037458583, 0.037459056, 0.037470306, 0.037470778, 0.037479431, 0.037479903, 0.037488347, 0.037488819, 0.037497583, 0.037498056, 0.037506181, 0.037506653, 0.037514681, 0.037515153, 0.037525181, 0.037525653, 0.037535125, 0.037535597, 0.037546222, 0.037546694, 0.037557958, 0.037558431, 0.037568042, 0.037568514, 0.037579097, 0.037579569, 0.037587944, 0.037588417, 0.037598514, 0.037598986, 0.03760775, 0.037608222, 0.037618125, 0.037618597, 0.037627556, 0.037628028, 0.037637625, 0.037638097, 0.037647389, 0.037647861, 0.037656181, 0.037656653, 0.037667403, 0.037667875, 0.037678722, 0.037679194, 0.037689, 0.037689472, 0.037698847, 0.037699319, 0.037708597, 0.037709069, 0.037718889, 0.037719361, 0.037729264, 0.037729736, 0.037740083, 0.037740556, 0.037750569, 0.037751042, 0.037762056, 0.037762528, 0.037772639, 0.037773111, 0.037782181, 0.037782653, 0.037790667, 0.037791139, 0.037799167, 0.037799639, 0.037808819, 0.037809292, 0.037819722, 0.037820194, 0.037830403, 0.037830875, 0.03783975, 0.037840222, 0.037849583, 0.037850056, 0.037858389, 0.037858861], 'source_diff': [0, 4.7300000000083386e-07, 9.000000000002062e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 1.0348000000000301e-05, 4.720000000013602e-07, 1.0929999999999274e-05, 4.7300000000083386e-07, 8.763999999994443e-06, 4.720000000013602e-07, 9.278000000001452e-06, 4.720000000013602e-07, 1.0013999999995693e-05, 4.720000000013602e-07, 8.139000000004226e-06, 4.7199999999442133e-07, 8.332999999999258e-06, 4.7300000000083386e-07, 1.1250000000004312e-05, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 8.443999999996343e-06, 4.720000000013602e-07, 8.764000000001382e-06, 4.7300000000083386e-07, 8.124999999997717e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.720000000013602e-07, 1.0027999999995263e-05, 4.720000000013602e-07, 9.472000000003422e-06, 4.7199999999442133e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 1.1264000000003882e-05, 4.7300000000083386e-07, 9.610999999999648e-06, 4.7199999999442133e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 8.374999999997967e-06, 4.7300000000083386e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 8.764000000001382e-06, 4.7199999999442133e-07, 9.903000000005546e-06, 4.7199999999442133e-07, 8.959000000002826e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.720000000013602e-07, 9.292000000001022e-06, 4.7199999999442133e-07, 8.319999999999161e-06, 4.720000000013602e-07, 1.0750000000003812e-05, 4.720000000013602e-07, 1.0846999999994389e-05, 4.720000000013602e-07, 9.806000000001092e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 9.278000000001452e-06, 4.7199999999442133e-07, 9.820000000000662e-06, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7300000000083386e-07, 1.001299999999622e-05, 4.7300000000083386e-07, 1.1014000000003632e-05, 4.7199999999442133e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 9.069999999999911e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.720000000013602e-07, 9.179999999997523e-06, 4.7300000000083386e-07, 1.0429999999998774e-05, 4.720000000013602e-07, 1.0208999999997137e-05, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 8.332999999999258e-06, 4.720000000013602e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:11.752" endtime="20201030 18:27:11.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.742" endtime="20201030 18:27:11.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:11.773" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 18:27:11.764" endtime="20201030 18:27:11.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:11.784" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 18:27:11.775" endtime="20201030 18:27:11.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.794" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:11.792" endtime="20201030 18:27:11.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.800" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:27:11.797" endtime="20201030 18:27:11.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.786" endtime="20201030 18:27:11.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:11.812" endtime="20201030 18:27:11.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.807" endtime="20201030 18:27:11.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.805" endtime="20201030 18:27:11.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.227" endtime="20201030 18:27:11.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.226" endtime="20201030 18:27:11.837"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.858" endtime="20201030 18:27:11.871"></status>
</kw>
<msg timestamp="20201030 18:27:11.872" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.855" endtime="20201030 18:27:11.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.878" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.874" endtime="20201030 18:27:11.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.881" endtime="20201030 18:27:11.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.847" endtime="20201030 18:27:11.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.843" endtime="20201030 18:27:11.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.904" endtime="20201030 18:27:12.256"></status>
</kw>
<msg timestamp="20201030 18:27:12.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036678292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036678764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.901" endtime="20201030 18:27:12.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036678292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036678764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:12.265" endtime="20201030 18:27:12.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.285" endtime="20201030 18:27:12.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.894" endtime="20201030 18:27:12.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.889" endtime="20201030 18:27:12.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:12.351" level="INFO">${debug} = {'diff': [0, 4.720000000013602e-07, 1.0332999999994319e-05, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 8.986000000002492e-06, 4....</msg>
<status status="PASS" starttime="20201030 18:27:12.295" endtime="20201030 18:27:12.351"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.353" endtime="20201030 18:27:12.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.365" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:12.363" endtime="20201030 18:27:12.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.375" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.0332999999994319e-05, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 8.986000000002492e-06, 4.7300000000083386e-07, 1.0415999999999204e-05, 4.7300000000083386e-07, 1.0221999999997233e-05, 4.720000000013602e-07, 1.0443999999998343e-05, 4.7300000000083386e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 1.0943999999998844e-05, 4.7300000000083386e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 8.847999999998801e-06, 4.720000000013602e-07, 1.0013999999995693e-05, 4.720000000013602e-07, 9.597000000000078e-06, 4.720000000013602e-07, 1.0000000000003062e-05, 4.7299999999389497e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 9.236000000002742e-06, 4.7299999999389497e-07, 1.0000000000003062e-05, 4.720000000013602e-07, 9.207999999996663e-06, 4.720000000013602e-07, 1.0111999999999621e-05, 4.720000000013602e-07, 8.750000000001812e-06, 4.720000000013602e-07, 1.0527999999995763e-05, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 8.764000000001382e-06, 4.720000000013602e-07, 1.1263999999996943e-05, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0527999999995763e-05, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 8.125000000004656e-06, 4.7199999999442133e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 8.041999999999772e-06, 4.7199999999442133e-07, 9.889000000005976e-06, 4.7199999999442133e-07, 9.306000000000592e-06, 4.720000000013602e-07, 8.846999999999328e-06, 4.7300000000083386e-07, 9.707999999997163e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.7300000000083386e-07, 8.860999999998898e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 8.847999999998801e-06, 4.720000000013602e-07, 9.069000000000438e-06, 4.7300000000083386e-07, 1.104099999999636e-05, 4.720000000013602e-07, 1.0862000000000371e-05, 4.720000000013602e-07, 1.0415999999999204e-05, 4.7300000000083386e-07, 1.105499999999593e-05, 4.720000000013602e-07], 'time': [0.036678292, 0.036678764, 0.036689097, 0.036689569, 0.036698403, 0.036698875, 0.036708236, 0.036708708, 0.036717694, 0.036718167, 0.036728583, 0.036729056, 0.036739278, 0.03673975, 0.036750194, 0.036750667, 0.036761167, 0.036761639, 0.036770514, 0.036770986, 0.036781111, 0.036781583, 0.036789903, 0.036790375, 0.036801319, 0.036801792, 0.036811903, 0.036812375, 0.036820722, 0.036821194, 0.036830042, 0.036830514, 0.036840528, 0.036841, 0.036850597, 0.036851069, 0.036861069, 0.036861542, 0.036871611, 0.036872083, 0.036881319, 0.036881792, 0.036891792, 0.036892264, 0.036901472, 0.036901944, 0.036912056, 0.036912528, 0.036921278, 0.03692175, 0.036932278, 0.03693275, 0.036943167, 0.036943639, 0.036952403, 0.036952875, 0.036964139, 0.036964611, 0.036975056, 0.036975528, 0.036985917, 0.036986389, 0.036996917, 0.036997389, 0.037007292, 0.037007764, 0.037015889, 0.037016361, 0.0370265, 0.037026972, 0.037037472, 0.037037944, 0.037045986, 0.037046458, 0.037056347, 0.037056819, 0.037066125, 0.037066597, 0.037075444, 0.037075917, 0.037085625, 0.037086097, 0.037096194, 0.037096667, 0.037105528, 0.037106, 0.037114347, 0.037114819, 0.037123667, 0.037124139, 0.037133208, 0.037133681, 0.037144722, 0.037145194, 0.037156056, 0.037156528, 0.037166944, 0.037167417, 0.037178472, 0.037178944], 'source_diff': [0, 4.720000000013602e-07, 1.0332999999994319e-05, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 8.986000000002492e-06, 4.7300000000083386e-07, 1.0415999999999204e-05, 4.7300000000083386e-07, 1.0221999999997233e-05, 4.720000000013602e-07, 1.0443999999998343e-05, 4.7300000000083386e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 1.0943999999998844e-05, 4.7300000000083386e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 8.847999999998801e-06, 4.720000000013602e-07, 1.0013999999995693e-05, 4.720000000013602e-07, 9.597000000000078e-06, 4.720000000013602e-07, 1.0000000000003062e-05, 4.7299999999389497e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 9.236000000002742e-06, 4.7299999999389497e-07, 1.0000000000003062e-05, 4.720000000013602e-07, 9.207999999996663e-06, 4.720000000013602e-07, 1.0111999999999621e-05, 4.720000000013602e-07, 8.750000000001812e-06, 4.720000000013602e-07, 1.0527999999995763e-05, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 8.764000000001382e-06, 4.720000000013602e-07, 1.1263999999996943e-05, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 1.0527999999995763e-05, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 8.125000000004656e-06, 4.7199999999442133e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 8.041999999999772e-06, 4.7199999999442133e-07, 9.889000000005976e-06, 4.7199999999442133e-07, 9.306000000000592e-06, 4.720000000013602e-07, 8.846999999999328e-06, 4.7300000000083386e-07, 9.707999999997163e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.7300000000083386e-07, 8.860999999998898e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.720000000013602e-07, 8.847999999998801e-06, 4.720000000013602e-07, 9.069000000000438e-06, 4.7300000000083386e-07, 1.104099999999636e-05, 4.720000000013602e-07, 1.0862000000000371e-05, 4.720000000013602e-07, 1.0415999999999204e-05, 4.7300000000083386e-07, 1.105499999999593e-05, 4.720000000013602e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:12.367" endtime="20201030 18:27:12.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.358" endtime="20201030 18:27:12.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:12.389" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07},...</msg>
<status status="PASS" starttime="20201030 18:27:12.380" endtime="20201030 18:27:12.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:12.399" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:27:12.391" endtime="20201030 18:27:12.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.410" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:12.407" endtime="20201030 18:27:12.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.416" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:27:12.413" endtime="20201030 18:27:12.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.400" endtime="20201030 18:27:12.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:12.428" endtime="20201030 18:27:12.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.423" endtime="20201030 18:27:12.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.421" endtime="20201030 18:27:12.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.839" endtime="20201030 18:27:12.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.838" endtime="20201030 18:27:12.453"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.474" endtime="20201030 18:27:12.486"></status>
</kw>
<msg timestamp="20201030 18:27:12.487" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.471" endtime="20201030 18:27:12.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.494" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.490" endtime="20201030 18:27:12.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.496" endtime="20201030 18:27:12.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.463" endtime="20201030 18:27:12.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.458" endtime="20201030 18:27:12.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.520" endtime="20201030 18:27:12.866"></status>
</kw>
<msg timestamp="20201030 18:27:12.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036332431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036332903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:12.517" endtime="20201030 18:27:12.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036332431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036332903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:12.875" endtime="20201030 18:27:12.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.895" endtime="20201030 18:27:12.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.509" endtime="20201030 18:27:12.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.505" endtime="20201030 18:27:12.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:12.959" level="INFO">${debug} = {'diff': [0, 4.720000000013602e-07, 9.055000000000868e-06, 4.7300000000083386e-07, 9.235999999995803e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4....</msg>
<status status="PASS" starttime="20201030 18:27:12.904" endtime="20201030 18:27:12.960"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.962" endtime="20201030 18:27:12.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.974" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:12.972" endtime="20201030 18:27:12.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.983" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 9.055000000000868e-06, 4.7300000000083386e-07, 9.235999999995803e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 9.999999999996123e-06, 4.720000000013602e-07, 1.1278000000003452e-05, 4.7199999999442133e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 9.709000000003576e-06, 4.720000000013602e-07, 1.129099999999661e-05, 4.7300000000083386e-07, 8.305000000000118e-06, 4.720000000013602e-07, 9.834000000000231e-06, 4.7199999999442133e-07, 1.1028000000003202e-05, 4.720000000013602e-07, 1.0847000000001328e-05, 4.7199999999442133e-07, 1.0167000000005366e-05, 4.7199999999442133e-07, 9.973000000003396e-06, 4.720000000013602e-07, 1.0943999999998844e-05, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 8.750000000001812e-06, 4.7300000000083386e-07, 1.0665999999999454e-05, 4.7300000000083386e-07, 1.0874999999993529e-05, 4.720000000013602e-07, 9.014000000001632e-06, 4.720000000013602e-07, 8.971999999995983e-06, 4.720000000013602e-07, 1.0028000000002202e-05, 4.720000000013602e-07, 9.791999999994583e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 8.958000000003352e-06, 4.7300000000083386e-07, 9.499999999995623e-06, 4.720000000013602e-07, 1.1069000000002438e-05, 4.7199999999442133e-07, 1.1181000000005936e-05, 4.7199999999442133e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 9.834000000000231e-06, 4.7199999999442133e-07, 8.832999999999758e-06, 4.7300000000083386e-07, 9.944000000004782e-06, 4.7199999999442133e-07, 9.250000000002312e-06, 4.720000000013602e-07, 9.194999999996567e-06, 4.720000000013602e-07, 8.222000000002172e-06, 4.7300000000083386e-07, 1.0333000000001258e-05, 4.7199999999442133e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 1.1180999999998997e-05, 4.720000000013602e-07, 1.0528000000002702e-05, 4.7199999999442133e-07, 1.1278000000003452e-05, 4.720000000013602e-07, 9.777999999995013e-06, 4.720000000013602e-07, 1.1180999999998997e-05, 4.720000000013602e-07, 1.1042000000002772e-05, 4.720000000013602e-07, 1.0291999999995083e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 8.986000000002492e-06, 4.7300000000083386e-07], 'time': [0.036332431, 0.036332903, 0.036341958, 0.036342431, 0.036351667, 0.036352139, 0.036361667, 0.036362139, 0.036371528, 0.036372, 0.036382, 0.036382472, 0.03639375, 0.036394222, 0.036405375, 0.036405847, 0.03641575, 0.036416222, 0.036425931, 0.036426403, 0.036437694, 0.036438167, 0.036446472, 0.036446944, 0.036456778, 0.03645725, 0.036468278, 0.03646875, 0.036479597, 0.036480069, 0.036490236, 0.036490708, 0.036500681, 0.036501153, 0.036512097, 0.036512569, 0.036521222, 0.036521694, 0.036530444, 0.036530917, 0.036541583, 0.036542056, 0.036552931, 0.036553403, 0.036562417, 0.036562889, 0.036571861, 0.036572333, 0.036582361, 0.036582833, 0.036592625, 0.036593097, 0.036601653, 0.036602125, 0.036611083, 0.036611556, 0.036621056, 0.036621528, 0.036632597, 0.036633069, 0.03664425, 0.036644722, 0.036655222, 0.036655694, 0.036665528, 0.036666, 0.036674833, 0.036675306, 0.03668525, 0.036685722, 0.036694972, 0.036695444, 0.036704639, 0.036705111, 0.036713333, 0.036713806, 0.036724139, 0.036724611, 0.036735222, 0.036735694, 0.036746875, 0.036747347, 0.036757875, 0.036758347, 0.036769625, 0.036770097, 0.036779875, 0.036780347, 0.036791528, 0.036792, 0.036803042, 0.036803514, 0.036813806, 0.036814278, 0.036823403, 0.036823875, 0.036831986, 0.036832458, 0.036841444, 0.036841917], 'source_diff': [0, 4.720000000013602e-07, 9.055000000000868e-06, 4.7300000000083386e-07, 9.235999999995803e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 9.999999999996123e-06, 4.720000000013602e-07, 1.1278000000003452e-05, 4.7199999999442133e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 9.709000000003576e-06, 4.720000000013602e-07, 1.129099999999661e-05, 4.7300000000083386e-07, 8.305000000000118e-06, 4.720000000013602e-07, 9.834000000000231e-06, 4.7199999999442133e-07, 1.1028000000003202e-05, 4.720000000013602e-07, 1.0847000000001328e-05, 4.7199999999442133e-07, 1.0167000000005366e-05, 4.7199999999442133e-07, 9.973000000003396e-06, 4.720000000013602e-07, 1.0943999999998844e-05, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 8.750000000001812e-06, 4.7300000000083386e-07, 1.0665999999999454e-05, 4.7300000000083386e-07, 1.0874999999993529e-05, 4.720000000013602e-07, 9.014000000001632e-06, 4.720000000013602e-07, 8.971999999995983e-06, 4.720000000013602e-07, 1.0028000000002202e-05, 4.720000000013602e-07, 9.791999999994583e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 8.958000000003352e-06, 4.7300000000083386e-07, 9.499999999995623e-06, 4.720000000013602e-07, 1.1069000000002438e-05, 4.7199999999442133e-07, 1.1181000000005936e-05, 4.7199999999442133e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 9.834000000000231e-06, 4.7199999999442133e-07, 8.832999999999758e-06, 4.7300000000083386e-07, 9.944000000004782e-06, 4.7199999999442133e-07, 9.250000000002312e-06, 4.720000000013602e-07, 9.194999999996567e-06, 4.720000000013602e-07, 8.222000000002172e-06, 4.7300000000083386e-07, 1.0333000000001258e-05, 4.7199999999442133e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 1.1180999999998997e-05, 4.720000000013602e-07, 1.0528000000002702e-05, 4.7199999999442133e-07, 1.1278000000003452e-05, 4.720000000013602e-07, 9.777999999995013e-06, 4.720000000013602e-07, 1.1180999999998997e-05, 4.720000000013602e-07, 1.1042000000002772e-05, 4.720000000013602e-07, 1.0291999999995083e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 8.986000000002492e-06, 4.7300000000083386e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:12.976" endtime="20201030 18:27:12.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.966" endtime="20201030 18:27:12.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:12.998" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 18:27:12.989" endtime="20201030 18:27:12.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:13.009" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 18:27:13.000" endtime="20201030 18:27:13.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.022" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:13.018" endtime="20201030 18:27:13.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.029" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 18:27:13.025" endtime="20201030 18:27:13.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.011" endtime="20201030 18:27:13.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:13.045" endtime="20201030 18:27:13.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.040" endtime="20201030 18:27:13.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.037" endtime="20201030 18:27:13.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.455" endtime="20201030 18:27:13.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.454" endtime="20201030 18:27:13.072"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.094" endtime="20201030 18:27:13.106"></status>
</kw>
<msg timestamp="20201030 18:27:13.108" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.089" endtime="20201030 18:27:13.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.114" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.110" endtime="20201030 18:27:13.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.116" endtime="20201030 18:27:13.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.082" endtime="20201030 18:27:13.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.077" endtime="20201030 18:27:13.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.140" endtime="20201030 18:27:13.491"></status>
</kw>
<msg timestamp="20201030 18:27:13.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03844125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038441722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:13.137" endtime="20201030 18:27:13.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03844125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038441722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:13.501" endtime="20201030 18:27:13.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.521" endtime="20201030 18:27:13.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.130" endtime="20201030 18:27:13.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.125" endtime="20201030 18:27:13.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:13.587" level="INFO">${debug} = {'diff': [0, 4.7199999999442133e-07, 8.709000000002576e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07, 8.972000000002922e-06, 4.7199999999442133e-07, 8.181000000002936e-06, 4...</msg>
<status status="PASS" starttime="20201030 18:27:13.530" endtime="20201030 18:27:13.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.589" endtime="20201030 18:27:13.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.601" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:13.599" endtime="20201030 18:27:13.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.611" level="INFO">VALUE: {'diff': [0, 4.7199999999442133e-07, 8.709000000002576e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07, 8.972000000002922e-06, 4.7199999999442133e-07, 8.181000000002936e-06, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 1.0319000000001688e-05, 4.7300000000083386e-07, 8.651999999997884e-06, 4.7300000000083386e-07, 8.972000000002922e-06, 4.7199999999442133e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 8.445000000002756e-06, 4.720000000013602e-07, 1.1165999999999954e-05, 4.7300000000083386e-07, 8.235999999994803e-06, 4.720000000013602e-07, 8.653000000004296e-06, 4.7199999999442133e-07, 9.124999999998717e-06, 4.720000000013602e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.0736000000004242e-05, 4.7199999999442133e-07, 9.292000000001022e-06, 4.720000000013602e-07, 8.638999999997787e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 1.1250000000004312e-05, 4.7300000000083386e-07, 1.0235999999996803e-05, 4.720000000013602e-07, 8.429999999996773e-06, 4.7300000000083386e-07, 1.1041000000003298e-05, 4.7300000000083386e-07, 8.249999999994373e-06, 4.720000000013602e-07, 8.444000000003282e-06, 4.7199999999442133e-07, 9.08400000000642e-06, 4.7199999999442133e-07, 9.167000000004366e-06, 4.720000000013602e-07, 1.0943999999998844e-05, 4.7300000000083386e-07, 9.179999999997523e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 1.0957999999998413e-05, 4.720000000013602e-07, 9.680999999997497e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 1.1041999999995833e-05, 4.720000000013602e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 8.346999999998828e-06, 4.7300000000083386e-07, 9.638999999998787e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 9.056000000000342e-06, 4.720000000013602e-07, 9.207999999996663e-06, 4.7300000000083386e-07, 9.791000000002048e-06, 4.7300000000083386e-07, 8.874999999998467e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.7199999999442133e-07, 1.0542000000002272e-05, 4.720000000013602e-07], 'time': [0.03844125, 0.038441722, 0.038450431, 0.038450903, 0.038459042, 0.038459514, 0.038468486, 0.038468958, 0.038477139, 0.038477611, 0.038488403, 0.038488875, 0.038499194, 0.038499667, 0.038508319, 0.038508792, 0.038517764, 0.038518236, 0.038528889, 0.038529361, 0.038537806, 0.038538278, 0.038549444, 0.038549917, 0.038558153, 0.038558625, 0.038567278, 0.03856775, 0.038576875, 0.038577347, 0.038587014, 0.038587486, 0.038598639, 0.038599111, 0.038609847, 0.038610319, 0.038619611, 0.038620083, 0.038628722, 0.038629194, 0.038639111, 0.038639583, 0.038650833, 0.038651306, 0.038661542, 0.038662014, 0.038670444, 0.038670917, 0.038681958, 0.038682431, 0.038690681, 0.038691153, 0.038699597, 0.038700069, 0.038709153, 0.038709625, 0.038718792, 0.038719264, 0.038730208, 0.038730681, 0.038739861, 0.038740333, 0.038749208, 0.038749681, 0.038760639, 0.038761111, 0.038770792, 0.038771264, 0.038782125, 0.038782597, 0.0387925, 0.038792972, 0.038804014, 0.038804486, 0.038815125, 0.038815597, 0.038823944, 0.038824417, 0.038834056, 0.038834528, 0.038845222, 0.038845694, 0.038856139, 0.038856611, 0.038867236, 0.038867708, 0.038876764, 0.038877236, 0.038886444, 0.038886917, 0.038896708, 0.038897181, 0.038906056, 0.038906528, 0.038915903, 0.038916375, 0.038927014, 0.038927486, 0.038938028, 0.0389385], 'source_diff': [0, 4.7199999999442133e-07, 8.709000000002576e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07, 8.972000000002922e-06, 4.7199999999442133e-07, 8.181000000002936e-06, 4.720000000013602e-07, 1.0791999999995583e-05, 4.720000000013602e-07, 1.0319000000001688e-05, 4.7300000000083386e-07, 8.651999999997884e-06, 4.7300000000083386e-07, 8.972000000002922e-06, 4.7199999999442133e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 8.445000000002756e-06, 4.720000000013602e-07, 1.1165999999999954e-05, 4.7300000000083386e-07, 8.235999999994803e-06, 4.720000000013602e-07, 8.653000000004296e-06, 4.7199999999442133e-07, 9.124999999998717e-06, 4.720000000013602e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.0736000000004242e-05, 4.7199999999442133e-07, 9.292000000001022e-06, 4.720000000013602e-07, 8.638999999997787e-06, 4.720000000013602e-07, 9.916999999998177e-06, 4.720000000013602e-07, 1.1250000000004312e-05, 4.7300000000083386e-07, 1.0235999999996803e-05, 4.720000000013602e-07, 8.429999999996773e-06, 4.7300000000083386e-07, 1.1041000000003298e-05, 4.7300000000083386e-07, 8.249999999994373e-06, 4.720000000013602e-07, 8.444000000003282e-06, 4.7199999999442133e-07, 9.08400000000642e-06, 4.7199999999442133e-07, 9.167000000004366e-06, 4.720000000013602e-07, 1.0943999999998844e-05, 4.7300000000083386e-07, 9.179999999997523e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 1.0957999999998413e-05, 4.720000000013602e-07, 9.680999999997497e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 1.1041999999995833e-05, 4.720000000013602e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 8.346999999998828e-06, 4.7300000000083386e-07, 9.638999999998787e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 9.056000000000342e-06, 4.720000000013602e-07, 9.207999999996663e-06, 4.7300000000083386e-07, 9.791000000002048e-06, 4.7300000000083386e-07, 8.874999999998467e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.7199999999442133e-07, 1.0542000000002272e-05, 4.720000000013602e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:13.604" endtime="20201030 18:27:13.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.594" endtime="20201030 18:27:13.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:13.625" level="INFO">${RESULT} = [{'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 18:27:13.616" endtime="20201030 18:27:13.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:13.636" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4....</msg>
<status status="PASS" starttime="20201030 18:27:13.627" endtime="20201030 18:27:13.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.646" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:13.644" endtime="20201030 18:27:13.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.652" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:27:13.649" endtime="20201030 18:27:13.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.638" endtime="20201030 18:27:13.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:13.664" endtime="20201030 18:27:13.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.660" endtime="20201030 18:27:13.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.657" endtime="20201030 18:27:13.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.073" endtime="20201030 18:27:13.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.072" endtime="20201030 18:27:13.690"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.711" endtime="20201030 18:27:13.724"></status>
</kw>
<msg timestamp="20201030 18:27:13.726" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.707" endtime="20201030 18:27:13.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.733" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.728" endtime="20201030 18:27:13.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.736" endtime="20201030 18:27:13.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.700" endtime="20201030 18:27:13.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.695" endtime="20201030 18:27:13.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.762" endtime="20201030 18:27:14.112"></status>
</kw>
<msg timestamp="20201030 18:27:14.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037138472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037138944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:13.758" endtime="20201030 18:27:14.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037138472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037138944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:14.121" endtime="20201030 18:27:14.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.142" endtime="20201030 18:27:14.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.751" endtime="20201030 18:27:14.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.746" endtime="20201030 18:27:14.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:14.209" level="INFO">${debug} = {'diff': [0, 4.720000000013602e-07, 9.737000000002716e-06, 4.7199999999442133e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 9.707999999997163e-06, 4...</msg>
<status status="PASS" starttime="20201030 18:27:14.152" endtime="20201030 18:27:14.209"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.211" endtime="20201030 18:27:14.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.223" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:14.221" endtime="20201030 18:27:14.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.232" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 9.737000000002716e-06, 4.7199999999442133e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 9.707999999997163e-06, 4.7300000000083386e-07, 1.1097000000001578e-05, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999442133e-07, 9.486000000002992e-06, 4.720000000013602e-07, 9.083999999999481e-06, 4.720000000013602e-07, 9.804999999994679e-06, 4.7300000000083386e-07, 9.777000000002478e-06, 4.7300000000083386e-07, 9.805000000001618e-06, 4.7199999999442133e-07, 8.237000000001216e-06, 4.720000000013602e-07, 1.0847000000001328e-05, 4.720000000013602e-07, 9.499999999995623e-06, 4.720000000013602e-07, 1.1249999999997373e-05, 4.7300000000083386e-07, 1.1277000000003978e-05, 4.7300000000083386e-07, 9.263999999994943e-06, 4.720000000013602e-07, 1.0943999999998844e-05, 4.720000000013602e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.0430999999998247e-05, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 9.083000000000008e-06, 4.720000000013602e-07, 9.792000000001522e-06, 4.7199999999442133e-07, 8.028000000000202e-06, 4.720000000013602e-07, 1.0570000000001412e-05, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 8.861999999998371e-06, 4.720000000013602e-07, 8.541000000000798e-06, 4.7300000000083386e-07, 9.069000000000438e-06, 4.7199999999442133e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 8.055999999999341e-06, 4.720000000013602e-07, 1.0000000000003062e-05, 4.720000000013602e-07, 8.638999999997787e-06, 4.7300000000083386e-07, 1.0554999999995429e-05, 4.720000000013602e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 9.485999999996053e-06, 4.720000000013602e-07, 8.681000000003436e-06, 4.7199999999442133e-07, 9.889000000005976e-06, 4.7199999999442133e-07, 1.0723000000004146e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.7199999999442133e-07, 1.1236000000004742e-05, 4.7300000000083386e-07, 1.0568999999994999e-05, 4.720000000013602e-07, 1.0528000000002702e-05, 4.720000000013602e-07, 1.1152999999999857e-05, 4.7199999999442133e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 1.1056000000002342e-05, 4.7199999999442133e-07, 1.0430000000005712e-05, 4.7300000000083386e-07], 'time': [0.037138472, 0.037138944, 0.037148681, 0.037149153, 0.03715975, 0.037160222, 0.037168778, 0.03716925, 0.037178958, 0.037179431, 0.037190528, 0.037191, 0.037200028, 0.0372005, 0.037209986, 0.037210458, 0.037219542, 0.037220014, 0.037229819, 0.037230292, 0.037240069, 0.037240542, 0.037250347, 0.037250819, 0.037259056, 0.037259528, 0.037270375, 0.037270847, 0.037280347, 0.037280819, 0.037292069, 0.037292542, 0.037303819, 0.037304292, 0.037313556, 0.037314028, 0.037324972, 0.037325444, 0.037336597, 0.037337069, 0.0373475, 0.037347972, 0.037358417, 0.037358889, 0.037367972, 0.037368444, 0.037378236, 0.037378708, 0.037386736, 0.037387208, 0.037397778, 0.03739825, 0.037406347, 0.037406819, 0.037415681, 0.037416153, 0.037424694, 0.037425167, 0.037434236, 0.037434708, 0.037445347, 0.037445819, 0.037453875, 0.037454347, 0.037464347, 0.037464819, 0.037473458, 0.037473931, 0.037484486, 0.037484958, 0.037495264, 0.037495736, 0.037505222, 0.037505694, 0.037514375, 0.037514847, 0.037524736, 0.037525208, 0.037535931, 0.037536403, 0.037545264, 0.037545736, 0.037555861, 0.037556333, 0.037567569, 0.037568042, 0.037578611, 0.037579083, 0.037589611, 0.037590083, 0.037601236, 0.037601708, 0.037611778, 0.03761225, 0.037621889, 0.037622361, 0.037633417, 0.037633889, 0.037644319, 0.037644792], 'source_diff': [0, 4.720000000013602e-07, 9.737000000002716e-06, 4.7199999999442133e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 9.707999999997163e-06, 4.7300000000083386e-07, 1.1097000000001578e-05, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999442133e-07, 9.486000000002992e-06, 4.720000000013602e-07, 9.083999999999481e-06, 4.720000000013602e-07, 9.804999999994679e-06, 4.7300000000083386e-07, 9.777000000002478e-06, 4.7300000000083386e-07, 9.805000000001618e-06, 4.7199999999442133e-07, 8.237000000001216e-06, 4.720000000013602e-07, 1.0847000000001328e-05, 4.720000000013602e-07, 9.499999999995623e-06, 4.720000000013602e-07, 1.1249999999997373e-05, 4.7300000000083386e-07, 1.1277000000003978e-05, 4.7300000000083386e-07, 9.263999999994943e-06, 4.720000000013602e-07, 1.0943999999998844e-05, 4.720000000013602e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.0430999999998247e-05, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 9.083000000000008e-06, 4.720000000013602e-07, 9.792000000001522e-06, 4.7199999999442133e-07, 8.028000000000202e-06, 4.720000000013602e-07, 1.0570000000001412e-05, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 8.861999999998371e-06, 4.720000000013602e-07, 8.541000000000798e-06, 4.7300000000083386e-07, 9.069000000000438e-06, 4.7199999999442133e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 8.055999999999341e-06, 4.720000000013602e-07, 1.0000000000003062e-05, 4.720000000013602e-07, 8.638999999997787e-06, 4.7300000000083386e-07, 1.0554999999995429e-05, 4.720000000013602e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 9.485999999996053e-06, 4.720000000013602e-07, 8.681000000003436e-06, 4.7199999999442133e-07, 9.889000000005976e-06, 4.7199999999442133e-07, 1.0723000000004146e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.0124999999999718e-05, 4.7199999999442133e-07, 1.1236000000004742e-05, 4.7300000000083386e-07, 1.0568999999994999e-05, 4.720000000013602e-07, 1.0528000000002702e-05, 4.720000000013602e-07, 1.1152999999999857e-05, 4.7199999999442133e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 1.1056000000002342e-05, 4.7199999999442133e-07, 1.0430000000005712e-05, 4.7300000000083386e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:14.225" endtime="20201030 18:27:14.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.216" endtime="20201030 18:27:14.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:14.247" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 18:27:14.238" endtime="20201030 18:27:14.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:14.257" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:27:14.249" endtime="20201030 18:27:14.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.267" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:14.265" endtime="20201030 18:27:14.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.273" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 18:27:14.270" endtime="20201030 18:27:14.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.259" endtime="20201030 18:27:14.277"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:14.287" endtime="20201030 18:27:14.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.282" endtime="20201030 18:27:14.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.280" endtime="20201030 18:27:14.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.692" endtime="20201030 18:27:14.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.691" endtime="20201030 18:27:14.313"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.334" endtime="20201030 18:27:14.347"></status>
</kw>
<msg timestamp="20201030 18:27:14.349" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.330" endtime="20201030 18:27:14.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.355" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.351" endtime="20201030 18:27:14.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.357" endtime="20201030 18:27:14.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.323" endtime="20201030 18:27:14.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.318" endtime="20201030 18:27:14.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.382" endtime="20201030 18:27:14.742"></status>
</kw>
<msg timestamp="20201030 18:27:14.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037710125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037710597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:14.378" endtime="20201030 18:27:14.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037710125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037710597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:14.751" endtime="20201030 18:27:14.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.771" endtime="20201030 18:27:14.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.371" endtime="20201030 18:27:14.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.366" endtime="20201030 18:27:14.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:14.836" level="INFO">${debug} = {'diff': [0, 4.720000000013602e-07, 9.806000000001092e-06, 4.720000000013602e-07, 8.750000000001812e-06, 4.7199999999442133e-07, 1.0667000000005866e-05, 4.7199999999442133e-07, 8.764000000001382e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:14.780" endtime="20201030 18:27:14.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.839" endtime="20201030 18:27:14.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.851" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:14.849" endtime="20201030 18:27:14.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.861" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 9.806000000001092e-06, 4.720000000013602e-07, 8.750000000001812e-06, 4.7199999999442133e-07, 1.0667000000005866e-05, 4.7199999999442133e-07, 8.764000000001382e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 1.0332999999994319e-05, 4.7300000000083386e-07, 8.125000000004656e-06, 4.7199999999442133e-07, 1.1236000000004742e-05, 4.720000000013602e-07, 9.208999999996137e-06, 4.720000000013602e-07, 1.1055000000002868e-05, 4.7299999999389497e-07, 8.666000000004392e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.7199999999442133e-07, 8.292000000000022e-06, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 8.124999999997717e-06, 4.720000000013602e-07, 1.0430999999998247e-05, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 8.680999999996497e-06, 4.720000000013602e-07, 1.0722000000004672e-05, 4.7299999999389497e-07, 1.0750000000003812e-05, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 1.1263999999996943e-05, 4.720000000013602e-07, 8.653000000004296e-06, 4.7199999999442133e-07, 1.0444000000005282e-05, 4.7299999999389497e-07, 1.1263000000004408e-05, 4.7300000000083386e-07, 8.638999999997787e-06, 4.720000000013602e-07, 8.750000000001812e-06, 4.7199999999442133e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 1.0222000000004172e-05, 4.7299999999389497e-07, 9.194000000004032e-06, 4.720000000013602e-07, 1.0541999999995333e-05, 4.720000000013602e-07, 1.0930999999998747e-05, 4.720000000013602e-07, 1.0528000000002702e-05, 4.720000000013602e-07, 8.124999999997717e-06, 4.720000000013602e-07, 1.0221999999997233e-05, 4.7300000000083386e-07, 8.764000000001382e-06, 4.720000000013602e-07, 1.0429999999998774e-05, 4.7300000000083386e-07, 8.457999999995913e-06, 4.720000000013602e-07, 1.0000000000003062e-05, 4.7199999999442133e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 1.0959000000004826e-05, 4.7199999999442133e-07, 9.597000000000078e-06, 4.720000000013602e-07, 9.487000000002466e-06, 4.720000000013602e-07, 8.665999999997454e-06, 4.7300000000083386e-07, 8.860999999998898e-06, 4.720000000013602e-07, 8.250000000001312e-06, 4.7199999999442133e-07, 8.041999999999772e-06, 4.720000000013602e-07, 9.681000000004436e-06, 4.7199999999442133e-07], 'time': [0.037710125, 0.037710597, 0.037720403, 0.037720875, 0.037729625, 0.037730097, 0.037740764, 0.037741236, 0.03775, 0.037750472, 0.037759514, 0.037759986, 0.037770319, 0.037770792, 0.037778917, 0.037779389, 0.037790625, 0.037791097, 0.037800306, 0.037800778, 0.037811833, 0.037812306, 0.037820972, 0.037821444, 0.037829972, 0.037830444, 0.037838736, 0.037839208, 0.037847806, 0.037848278, 0.037859139, 0.037859611, 0.037867736, 0.037868208, 0.037878639, 0.037879111, 0.037888486, 0.037888958, 0.037897639, 0.037898111, 0.037908833, 0.037909306, 0.037920056, 0.037920528, 0.037929181, 0.037929653, 0.037940917, 0.037941389, 0.037950042, 0.037950514, 0.037960958, 0.037961431, 0.037972694, 0.037973167, 0.037981806, 0.037982278, 0.037991028, 0.0379915, 0.038001625, 0.038002097, 0.038012319, 0.038012792, 0.038021986, 0.038022458, 0.038033, 0.038033472, 0.038044403, 0.038044875, 0.038055403, 0.038055875, 0.038064, 0.038064472, 0.038074694, 0.038075167, 0.038083931, 0.038084403, 0.038094833, 0.038095306, 0.038103764, 0.038104236, 0.038114236, 0.038114708, 0.038125347, 0.038125819, 0.038136778, 0.03813725, 0.038146847, 0.038147319, 0.038156806, 0.038157278, 0.038165944, 0.038166417, 0.038175278, 0.03817575, 0.038184, 0.038184472, 0.038192514, 0.038192986, 0.038202667, 0.038203139], 'source_diff': [0, 4.720000000013602e-07, 9.806000000001092e-06, 4.720000000013602e-07, 8.750000000001812e-06, 4.7199999999442133e-07, 1.0667000000005866e-05, 4.7199999999442133e-07, 8.764000000001382e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 1.0332999999994319e-05, 4.7300000000083386e-07, 8.125000000004656e-06, 4.7199999999442133e-07, 1.1236000000004742e-05, 4.720000000013602e-07, 9.208999999996137e-06, 4.720000000013602e-07, 1.1055000000002868e-05, 4.7299999999389497e-07, 8.666000000004392e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.7199999999442133e-07, 8.292000000000022e-06, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 8.124999999997717e-06, 4.720000000013602e-07, 1.0430999999998247e-05, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 8.680999999996497e-06, 4.720000000013602e-07, 1.0722000000004672e-05, 4.7299999999389497e-07, 1.0750000000003812e-05, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 1.1263999999996943e-05, 4.720000000013602e-07, 8.653000000004296e-06, 4.7199999999442133e-07, 1.0444000000005282e-05, 4.7299999999389497e-07, 1.1263000000004408e-05, 4.7300000000083386e-07, 8.638999999997787e-06, 4.720000000013602e-07, 8.750000000001812e-06, 4.7199999999442133e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 1.0222000000004172e-05, 4.7299999999389497e-07, 9.194000000004032e-06, 4.720000000013602e-07, 1.0541999999995333e-05, 4.720000000013602e-07, 1.0930999999998747e-05, 4.720000000013602e-07, 1.0528000000002702e-05, 4.720000000013602e-07, 8.124999999997717e-06, 4.720000000013602e-07, 1.0221999999997233e-05, 4.7300000000083386e-07, 8.764000000001382e-06, 4.720000000013602e-07, 1.0429999999998774e-05, 4.7300000000083386e-07, 8.457999999995913e-06, 4.720000000013602e-07, 1.0000000000003062e-05, 4.7199999999442133e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 1.0959000000004826e-05, 4.7199999999442133e-07, 9.597000000000078e-06, 4.720000000013602e-07, 9.487000000002466e-06, 4.720000000013602e-07, 8.665999999997454e-06, 4.7300000000083386e-07, 8.860999999998898e-06, 4.720000000013602e-07, 8.250000000001312e-06, 4.7199999999442133e-07, 8.041999999999772e-06, 4.720000000013602e-07, 9.681000000004436e-06, 4.7199999999442133e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:14.854" endtime="20201030 18:27:14.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.844" endtime="20201030 18:27:14.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:14.875" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 18:27:14.866" endtime="20201030 18:27:14.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:14.885" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4....</msg>
<status status="PASS" starttime="20201030 18:27:14.877" endtime="20201030 18:27:14.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.895" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:14.893" endtime="20201030 18:27:14.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.901" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201030 18:27:14.897" endtime="20201030 18:27:14.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.887" endtime="20201030 18:27:14.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:14.913" endtime="20201030 18:27:14.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.909" endtime="20201030 18:27:14.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.906" endtime="20201030 18:27:14.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.315" endtime="20201030 18:27:14.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.314" endtime="20201030 18:27:14.938"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.961" endtime="20201030 18:27:14.973"></status>
</kw>
<msg timestamp="20201030 18:27:14.974" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.956" endtime="20201030 18:27:14.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.981" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.977" endtime="20201030 18:27:14.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.983" endtime="20201030 18:27:14.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.948" endtime="20201030 18:27:14.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.944" endtime="20201030 18:27:14.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.007" endtime="20201030 18:27:15.359"></status>
</kw>
<msg timestamp="20201030 18:27:15.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038363181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038363653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:15.004" endtime="20201030 18:27:15.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038363181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038363653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:15.368" endtime="20201030 18:27:15.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.393" endtime="20201030 18:27:15.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.996" endtime="20201030 18:27:15.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.992" endtime="20201030 18:27:15.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:15.457" level="INFO">${debug} = {'diff': [0, 4.7199999999442133e-07, 8.528000000000702e-06, 4.720000000013602e-07, 8.041000000000298e-06, 4.7300000000083386e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 9.805000000001618e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:15.402" endtime="20201030 18:27:15.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.460" endtime="20201030 18:27:15.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.472" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:15.470" endtime="20201030 18:27:15.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.481" level="INFO">VALUE: {'diff': [0, 4.7199999999442133e-07, 8.528000000000702e-06, 4.720000000013602e-07, 8.041000000000298e-06, 4.7300000000083386e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 9.805000000001618e-06, 4.7299999999389497e-07, 1.0833000000001758e-05, 4.720000000013602e-07, 9.069999999999911e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.0958999999997887e-05, 4.720000000013602e-07, 9.693999999997593e-06, 4.7300000000083386e-07, 8.263000000001408e-06, 4.7300000000083386e-07, 8.832999999999758e-06, 4.720000000013602e-07, 9.694999999997067e-06, 4.720000000013602e-07, 1.1166999999999427e-05, 4.720000000013602e-07, 8.957999999996413e-06, 4.720000000013602e-07, 8.125000000004656e-06, 4.7299999999389497e-07, 9.708000000004102e-06, 4.720000000013602e-07, 1.0111000000000148e-05, 4.7199999999442133e-07, 1.0361999999999871e-05, 4.720000000013602e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 1.0943999999998844e-05, 4.7300000000083386e-07, 9.804999999994679e-06, 4.720000000013602e-07, 1.1180999999998997e-05, 4.720000000013602e-07, 8.014000000000632e-06, 4.720000000013602e-07, 8.347999999998301e-06, 4.720000000013602e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 9.820000000000662e-06, 4.720000000013602e-07, 1.0832999999994819e-05, 4.7300000000083386e-07, 1.0014000000002632e-05, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.1278000000003452e-05, 4.7199999999442133e-07, 1.0736000000004242e-05, 4.720000000013602e-07, 9.416999999997677e-06, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 1.0319000000001688e-05, 4.720000000013602e-07, 1.0833999999994293e-05, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7199999999442133e-07, 9.056000000000342e-06, 4.720000000013602e-07, 1.0430999999998247e-05, 4.720000000013602e-07, 1.0736000000004242e-05, 4.7199999999442133e-07, 1.0236000000003742e-05, 4.7300000000083386e-07, 9.333000000000258e-06, 4.720000000013602e-07], 'time': [0.038363181, 0.038363653, 0.038372181, 0.038372653, 0.038380694, 0.038381167, 0.038391292, 0.038391764, 0.038401569, 0.038402042, 0.038412875, 0.038413347, 0.038422417, 0.038422889, 0.038431028, 0.0384315, 0.038440361, 0.038440833, 0.038451792, 0.038452264, 0.038461958, 0.038462431, 0.038470694, 0.038471167, 0.03848, 0.038480472, 0.038490167, 0.038490639, 0.038501806, 0.038502278, 0.038511236, 0.038511708, 0.038519833, 0.038520306, 0.038530014, 0.038530486, 0.038540597, 0.038541069, 0.038551431, 0.038551903, 0.038562403, 0.038562875, 0.038573819, 0.038574292, 0.038584097, 0.038584569, 0.03859575, 0.038596222, 0.038604236, 0.038604708, 0.038613056, 0.038613528, 0.03862425, 0.038624722, 0.038633597, 0.038634069, 0.038643889, 0.038644361, 0.038655194, 0.038655667, 0.038665681, 0.038666153, 0.038674806, 0.038675278, 0.038686014, 0.038686486, 0.038696389, 0.038696861, 0.038705764, 0.038706236, 0.038714528, 0.038715, 0.038726278, 0.03872675, 0.038737486, 0.038737958, 0.038747375, 0.038747847, 0.038757014, 0.038757486, 0.038767931, 0.038768403, 0.038778722, 0.038779194, 0.038790028, 0.0387905, 0.038799764, 0.038800236, 0.038811097, 0.038811569, 0.038820625, 0.038821097, 0.038831528, 0.038832, 0.038842736, 0.038843208, 0.038853444, 0.038853917, 0.03886325, 0.038863722], 'source_diff': [0, 4.7199999999442133e-07, 8.528000000000702e-06, 4.720000000013602e-07, 8.041000000000298e-06, 4.7300000000083386e-07, 1.0124999999999718e-05, 4.720000000013602e-07, 9.805000000001618e-06, 4.7299999999389497e-07, 1.0833000000001758e-05, 4.720000000013602e-07, 9.069999999999911e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.0958999999997887e-05, 4.720000000013602e-07, 9.693999999997593e-06, 4.7300000000083386e-07, 8.263000000001408e-06, 4.7300000000083386e-07, 8.832999999999758e-06, 4.720000000013602e-07, 9.694999999997067e-06, 4.720000000013602e-07, 1.1166999999999427e-05, 4.720000000013602e-07, 8.957999999996413e-06, 4.720000000013602e-07, 8.125000000004656e-06, 4.7299999999389497e-07, 9.708000000004102e-06, 4.720000000013602e-07, 1.0111000000000148e-05, 4.7199999999442133e-07, 1.0361999999999871e-05, 4.720000000013602e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 1.0943999999998844e-05, 4.7300000000083386e-07, 9.804999999994679e-06, 4.720000000013602e-07, 1.1180999999998997e-05, 4.720000000013602e-07, 8.014000000000632e-06, 4.720000000013602e-07, 8.347999999998301e-06, 4.720000000013602e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 9.820000000000662e-06, 4.720000000013602e-07, 1.0832999999994819e-05, 4.7300000000083386e-07, 1.0014000000002632e-05, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 9.902999999998607e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.1278000000003452e-05, 4.7199999999442133e-07, 1.0736000000004242e-05, 4.720000000013602e-07, 9.416999999997677e-06, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 1.0444999999997817e-05, 4.720000000013602e-07, 1.0319000000001688e-05, 4.720000000013602e-07, 1.0833999999994293e-05, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7199999999442133e-07, 9.056000000000342e-06, 4.720000000013602e-07, 1.0430999999998247e-05, 4.720000000013602e-07, 1.0736000000004242e-05, 4.7199999999442133e-07, 1.0236000000003742e-05, 4.7300000000083386e-07, 9.333000000000258e-06, 4.720000000013602e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:15.474" endtime="20201030 18:27:15.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.464" endtime="20201030 18:27:15.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:15.496" level="INFO">${RESULT} = [{'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7299999999389497e-07}, {'diff': 4.720000000013602e-07}...</msg>
<status status="PASS" starttime="20201030 18:27:15.487" endtime="20201030 18:27:15.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:15.507" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:27:15.498" endtime="20201030 18:27:15.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.517" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:15.515" endtime="20201030 18:27:15.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.523" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:27:15.519" endtime="20201030 18:27:15.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.509" endtime="20201030 18:27:15.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:15.535" endtime="20201030 18:27:15.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.530" endtime="20201030 18:27:15.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.528" endtime="20201030 18:27:15.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.940" endtime="20201030 18:27:15.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.939" endtime="20201030 18:27:15.560"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.581" endtime="20201030 18:27:15.593"></status>
</kw>
<msg timestamp="20201030 18:27:15.595" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.578" endtime="20201030 18:27:15.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.601" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.597" endtime="20201030 18:27:15.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.604" endtime="20201030 18:27:15.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.570" endtime="20201030 18:27:15.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.565" endtime="20201030 18:27:15.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.627" endtime="20201030 18:27:15.980"></status>
</kw>
<msg timestamp="20201030 18:27:15.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036766528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036767, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:15.624" endtime="20201030 18:27:15.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036766528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036767, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:15.990" endtime="20201030 18:27:16.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.010" endtime="20201030 18:27:16.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.617" endtime="20201030 18:27:16.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.612" endtime="20201030 18:27:16.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:16.076" level="INFO">${debug} = {'diff': [0, 4.720000000013602e-07, 1.0943999999998844e-05, 4.7300000000083386e-07, 1.105499999999593e-05, 4.720000000013602e-07, 1.1250000000004312e-05, 4.7300000000083386e-07, 1.105499999999593e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:16.020" endtime="20201030 18:27:16.076"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.078" endtime="20201030 18:27:16.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.090" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:16.088" endtime="20201030 18:27:16.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.100" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.0943999999998844e-05, 4.7300000000083386e-07, 1.105499999999593e-05, 4.720000000013602e-07, 1.1250000000004312e-05, 4.7300000000083386e-07, 1.105499999999593e-05, 4.720000000013602e-07, 9.708999999996637e-06, 4.720000000013602e-07, 9.167000000004366e-06, 4.7199999999442133e-07, 9.208000000003602e-06, 4.720000000013602e-07, 1.0348000000000301e-05, 4.7199999999442133e-07, 8.597000000006016e-06, 4.7199999999442133e-07, 1.0736000000004242e-05, 4.7300000000083386e-07, 1.0235999999996803e-05, 4.720000000013602e-07, 8.846999999999328e-06, 4.720000000013602e-07, 1.0749999999996873e-05, 4.7300000000083386e-07, 1.0527000000003228e-05, 4.7300000000083386e-07, 1.0638999999999788e-05, 4.7199999999442133e-07, 1.0750000000003812e-05, 4.720000000013602e-07, 1.0957999999998413e-05, 4.7300000000083386e-07, 1.1068999999995499e-05, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 9.069000000000438e-06, 4.7300000000083386e-07, 1.0471999999997483e-05, 4.720000000013602e-07, 8.917000000004116e-06, 4.7199999999442133e-07, 1.0222000000004172e-05, 4.720000000013602e-07, 1.0624999999993279e-05, 4.7300000000083386e-07, 9.819000000001188e-06, 4.720000000013602e-07, 8.222000000002172e-06, 4.7300000000083386e-07, 8.985999999995553e-06, 4.720000000013602e-07, 8.972000000002922e-06, 4.7199999999442133e-07, 1.1264000000003882e-05, 4.7300000000083386e-07, 8.651999999997884e-06, 4.7300000000083386e-07, 1.0137999999999814e-05, 4.7300000000083386e-07, 9.485999999996053e-06, 4.720000000013602e-07, 1.0000000000003062e-05, 4.720000000013602e-07, 8.333999999998731e-06, 4.720000000013602e-07, 9.068999999993499e-06, 4.720000000013602e-07, 9.514000000002132e-06, 4.7300000000083386e-07, 9.055000000000868e-06, 4.720000000013602e-07, 8.458999999995387e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 8.332999999999258e-06, 4.720000000013602e-07, 9.806000000001092e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.7199999999442133e-07, 9.708000000004102e-06, 4.7300000000083386e-07, 1.0111000000000148e-05, 4.7199999999442133e-07, 8.986000000002492e-06, 4.720000000013602e-07, 1.0930999999998747e-05, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 9.069999999999911e-06, 4.720000000013602e-07], 'time': [0.036766528, 0.036767, 0.036777944, 0.036778417, 0.036789472, 0.036789944, 0.036801194, 0.036801667, 0.036812722, 0.036813194, 0.036822903, 0.036823375, 0.036832542, 0.036833014, 0.036842222, 0.036842694, 0.036853042, 0.036853514, 0.036862111, 0.036862583, 0.036873319, 0.036873792, 0.036884028, 0.0368845, 0.036893347, 0.036893819, 0.036904569, 0.036905042, 0.036915569, 0.036916042, 0.036926681, 0.036927153, 0.036937903, 0.036938375, 0.036949333, 0.036949806, 0.036960875, 0.036961347, 0.036969667, 0.036970139, 0.036979208, 0.036979681, 0.036990153, 0.036990625, 0.036999542, 0.037000014, 0.037010236, 0.037010708, 0.037021333, 0.037021806, 0.037031625, 0.037032097, 0.037040319, 0.037040792, 0.037049778, 0.03705025, 0.037059222, 0.037059694, 0.037070958, 0.037071431, 0.037080083, 0.037080556, 0.037090694, 0.037091167, 0.037100653, 0.037101125, 0.037111125, 0.037111597, 0.037119931, 0.037120403, 0.037129472, 0.037129944, 0.037139458, 0.037139931, 0.037148986, 0.037149458, 0.037157917, 0.037158389, 0.037169028, 0.0371695, 0.037178667, 0.037179139, 0.037187472, 0.037187944, 0.03719775, 0.037198222, 0.037206764, 0.037207236, 0.037216944, 0.037217417, 0.037227528, 0.037228, 0.037236986, 0.037237458, 0.037248389, 0.037248861, 0.03725825, 0.037258722, 0.037267792, 0.037268264], 'source_diff': [0, 4.720000000013602e-07, 1.0943999999998844e-05, 4.7300000000083386e-07, 1.105499999999593e-05, 4.720000000013602e-07, 1.1250000000004312e-05, 4.7300000000083386e-07, 1.105499999999593e-05, 4.720000000013602e-07, 9.708999999996637e-06, 4.720000000013602e-07, 9.167000000004366e-06, 4.7199999999442133e-07, 9.208000000003602e-06, 4.720000000013602e-07, 1.0348000000000301e-05, 4.7199999999442133e-07, 8.597000000006016e-06, 4.7199999999442133e-07, 1.0736000000004242e-05, 4.7300000000083386e-07, 1.0235999999996803e-05, 4.720000000013602e-07, 8.846999999999328e-06, 4.720000000013602e-07, 1.0749999999996873e-05, 4.7300000000083386e-07, 1.0527000000003228e-05, 4.7300000000083386e-07, 1.0638999999999788e-05, 4.7199999999442133e-07, 1.0750000000003812e-05, 4.720000000013602e-07, 1.0957999999998413e-05, 4.7300000000083386e-07, 1.1068999999995499e-05, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 9.069000000000438e-06, 4.7300000000083386e-07, 1.0471999999997483e-05, 4.720000000013602e-07, 8.917000000004116e-06, 4.7199999999442133e-07, 1.0222000000004172e-05, 4.720000000013602e-07, 1.0624999999993279e-05, 4.7300000000083386e-07, 9.819000000001188e-06, 4.720000000013602e-07, 8.222000000002172e-06, 4.7300000000083386e-07, 8.985999999995553e-06, 4.720000000013602e-07, 8.972000000002922e-06, 4.7199999999442133e-07, 1.1264000000003882e-05, 4.7300000000083386e-07, 8.651999999997884e-06, 4.7300000000083386e-07, 1.0137999999999814e-05, 4.7300000000083386e-07, 9.485999999996053e-06, 4.720000000013602e-07, 1.0000000000003062e-05, 4.720000000013602e-07, 8.333999999998731e-06, 4.720000000013602e-07, 9.068999999993499e-06, 4.720000000013602e-07, 9.514000000002132e-06, 4.7300000000083386e-07, 9.055000000000868e-06, 4.720000000013602e-07, 8.458999999995387e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 8.332999999999258e-06, 4.720000000013602e-07, 9.806000000001092e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.7199999999442133e-07, 9.708000000004102e-06, 4.7300000000083386e-07, 1.0111000000000148e-05, 4.7199999999442133e-07, 8.986000000002492e-06, 4.720000000013602e-07, 1.0930999999998747e-05, 4.720000000013602e-07, 9.388999999998537e-06, 4.720000000013602e-07, 9.069999999999911e-06, 4.720000000013602e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:16.093" endtime="20201030 18:27:16.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.083" endtime="20201030 18:27:16.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:16.115" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 18:27:16.106" endtime="20201030 18:27:16.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:16.124" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:27:16.117" endtime="20201030 18:27:16.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.136" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:16.132" endtime="20201030 18:27:16.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.141" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:27:16.138" endtime="20201030 18:27:16.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.126" endtime="20201030 18:27:16.144"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:16.153" endtime="20201030 18:27:16.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.149" endtime="20201030 18:27:16.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.146" endtime="20201030 18:27:16.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.562" endtime="20201030 18:27:16.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.561" endtime="20201030 18:27:16.179"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.200" endtime="20201030 18:27:16.212"></status>
</kw>
<msg timestamp="20201030 18:27:16.213" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.196" endtime="20201030 18:27:16.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.220" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.215" endtime="20201030 18:27:16.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.222" endtime="20201030 18:27:16.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.189" endtime="20201030 18:27:16.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.184" endtime="20201030 18:27:16.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.245" endtime="20201030 18:27:16.604"></status>
</kw>
<msg timestamp="20201030 18:27:16.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0363915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036391972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:16.242" endtime="20201030 18:27:16.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0363915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036391972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:16.614" endtime="20201030 18:27:16.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.633" endtime="20201030 18:27:16.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.235" endtime="20201030 18:27:16.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.230" endtime="20201030 18:27:16.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:16.696" level="INFO">${debug} = {'diff': [0, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 8.250000000001312e-06, 4.7199999999442133e-07, 1.0209000000004076e-05, 4.720000000013602e-07, 1.0943999999998844e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:16.641" endtime="20201030 18:27:16.696"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.698" endtime="20201030 18:27:16.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.710" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:16.708" endtime="20201030 18:27:16.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.719" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 8.250000000001312e-06, 4.7199999999442133e-07, 1.0209000000004076e-05, 4.720000000013602e-07, 1.0943999999998844e-05, 4.7300000000083386e-07, 1.0749999999996873e-05, 4.720000000013602e-07, 1.1263999999996943e-05, 4.720000000013602e-07, 8.028000000000202e-06, 4.720000000013602e-07, 9.179999999997523e-06, 4.7300000000083386e-07, 1.0957999999998413e-05, 4.720000000013602e-07, 8.846999999999328e-06, 4.7300000000083386e-07, 9.514000000002132e-06, 4.720000000013602e-07, 1.1277999999996513e-05, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 8.679999999997023e-06, 4.720000000013602e-07, 8.431000000003186e-06, 4.7199999999442133e-07, 1.1153000000006796e-05, 4.7199999999442133e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 9.806000000001092e-06, 4.720000000013602e-07, 9.264000000001882e-06, 4.7199999999442133e-07, 1.1292000000003022e-05, 4.720000000013602e-07, 1.0291999999995083e-05, 4.720000000013602e-07, 1.1179999999999524e-05, 4.7300000000083386e-07, 9.680000000004962e-06, 4.7199999999442133e-07, 1.0320000000001162e-05, 4.720000000013602e-07, 9.486000000002992e-06, 4.7199999999442133e-07, 9.473000000002896e-06, 4.720000000013602e-07, 1.0443999999998343e-05, 4.7300000000083386e-07, 9.193999999997093e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.7300000000083386e-07, 9.500000000002562e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.7199999999442133e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 9.500000000002562e-06, 4.720000000013602e-07, 1.1263999999996943e-05, 4.7300000000083386e-07, 8.332999999999258e-06, 4.720000000013602e-07, 1.0777999999996013e-05, 4.720000000013602e-07, 1.1306000000002592e-05, 4.720000000013602e-07, 9.624999999999218e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.7300000000083386e-07, 8.026999999993789e-06, 4.7300000000083386e-07, 1.0736000000004242e-05, 4.720000000013602e-07, 9.416999999997677e-06, 4.720000000013602e-07, 8.318999999999688e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.7300000000083386e-07, 8.318999999999688e-06, 4.720000000013602e-07, 1.0111000000000148e-05, 4.7300000000083386e-07, 9.040999999994359e-06, 4.720000000013602e-07, 9.750000000002812e-06, 4.7300000000083386e-07], 'time': [0.0363915, 0.036391972, 0.036402389, 0.036402861, 0.036411111, 0.036411583, 0.036421792, 0.036422264, 0.036433208, 0.036433681, 0.036444431, 0.036444903, 0.036456167, 0.036456639, 0.036464667, 0.036465139, 0.036474319, 0.036474792, 0.03648575, 0.036486222, 0.036495069, 0.036495542, 0.036505056, 0.036505528, 0.036516806, 0.036517278, 0.036525389, 0.036525861, 0.036535458, 0.036535931, 0.036544611, 0.036545083, 0.036553514, 0.036553986, 0.036565139, 0.036565611, 0.03657575, 0.036576222, 0.036586028, 0.0365865, 0.036595764, 0.036596236, 0.036607528, 0.036608, 0.036618292, 0.036618764, 0.036629944, 0.036630417, 0.036640097, 0.036640569, 0.036650889, 0.036651361, 0.036660847, 0.036661319, 0.036670792, 0.036671264, 0.036681708, 0.036682181, 0.036691375, 0.036691847, 0.036699944, 0.036700417, 0.036709917, 0.036710389, 0.036718431, 0.036718903, 0.036729, 0.036729472, 0.036738972, 0.036739444, 0.036750708, 0.036751181, 0.036759514, 0.036759986, 0.036770764, 0.036771236, 0.036782542, 0.036783014, 0.036792639, 0.036793111, 0.036801458, 0.036801931, 0.036809958, 0.036810431, 0.036821167, 0.036821639, 0.036831056, 0.036831528, 0.036839847, 0.036840319, 0.036848458, 0.036848931, 0.03685725, 0.036857722, 0.036867833, 0.036868306, 0.036877347, 0.036877819, 0.036887569, 0.036888042], 'source_diff': [0, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 8.250000000001312e-06, 4.7199999999442133e-07, 1.0209000000004076e-05, 4.720000000013602e-07, 1.0943999999998844e-05, 4.7300000000083386e-07, 1.0749999999996873e-05, 4.720000000013602e-07, 1.1263999999996943e-05, 4.720000000013602e-07, 8.028000000000202e-06, 4.720000000013602e-07, 9.179999999997523e-06, 4.7300000000083386e-07, 1.0957999999998413e-05, 4.720000000013602e-07, 8.846999999999328e-06, 4.7300000000083386e-07, 9.514000000002132e-06, 4.720000000013602e-07, 1.1277999999996513e-05, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 8.679999999997023e-06, 4.720000000013602e-07, 8.431000000003186e-06, 4.7199999999442133e-07, 1.1153000000006796e-05, 4.7199999999442133e-07, 1.0138999999999287e-05, 4.720000000013602e-07, 9.806000000001092e-06, 4.720000000013602e-07, 9.264000000001882e-06, 4.7199999999442133e-07, 1.1292000000003022e-05, 4.720000000013602e-07, 1.0291999999995083e-05, 4.720000000013602e-07, 1.1179999999999524e-05, 4.7300000000083386e-07, 9.680000000004962e-06, 4.7199999999442133e-07, 1.0320000000001162e-05, 4.720000000013602e-07, 9.486000000002992e-06, 4.7199999999442133e-07, 9.473000000002896e-06, 4.720000000013602e-07, 1.0443999999998343e-05, 4.7300000000083386e-07, 9.193999999997093e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.7300000000083386e-07, 9.500000000002562e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.7199999999442133e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 9.500000000002562e-06, 4.720000000013602e-07, 1.1263999999996943e-05, 4.7300000000083386e-07, 8.332999999999258e-06, 4.720000000013602e-07, 1.0777999999996013e-05, 4.720000000013602e-07, 1.1306000000002592e-05, 4.720000000013602e-07, 9.624999999999218e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.7300000000083386e-07, 8.026999999993789e-06, 4.7300000000083386e-07, 1.0736000000004242e-05, 4.720000000013602e-07, 9.416999999997677e-06, 4.720000000013602e-07, 8.318999999999688e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.7300000000083386e-07, 8.318999999999688e-06, 4.720000000013602e-07, 1.0111000000000148e-05, 4.7300000000083386e-07, 9.040999999994359e-06, 4.720000000013602e-07, 9.750000000002812e-06, 4.7300000000083386e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:16.712" endtime="20201030 18:27:16.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.703" endtime="20201030 18:27:16.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:16.733" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 18:27:16.725" endtime="20201030 18:27:16.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:16.743" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.73...</msg>
<status status="PASS" starttime="20201030 18:27:16.735" endtime="20201030 18:27:16.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.753" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:16.750" endtime="20201030 18:27:16.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.758" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 18:27:16.755" endtime="20201030 18:27:16.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.744" endtime="20201030 18:27:16.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:16.770" endtime="20201030 18:27:16.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.765" endtime="20201030 18:27:16.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.763" endtime="20201030 18:27:16.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.181" endtime="20201030 18:27:16.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.180" endtime="20201030 18:27:16.795"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.817" endtime="20201030 18:27:16.827"></status>
</kw>
<msg timestamp="20201030 18:27:16.828" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.812" endtime="20201030 18:27:16.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.835" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.831" endtime="20201030 18:27:16.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.837" endtime="20201030 18:27:16.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.804" endtime="20201030 18:27:16.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.800" endtime="20201030 18:27:16.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.860" endtime="20201030 18:27:17.193"></status>
</kw>
<msg timestamp="20201030 18:27:17.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037030028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0370305, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:16.857" endtime="20201030 18:27:17.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037030028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0370305, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:17.204" endtime="20201030 18:27:17.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.230" endtime="20201030 18:27:17.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.850" endtime="20201030 18:27:17.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.845" endtime="20201030 18:27:17.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:17.299" level="INFO">${debug} = {'diff': [0, 4.720000000013602e-07, 1.0985999999997553e-05, 4.720000000013602e-07, 9.292000000001022e-06, 4.720000000013602e-07, 1.1249999999997373e-05, 4.720000000013602e-07, 8.237000000001216e-06, 4...</msg>
<status status="PASS" starttime="20201030 18:27:17.241" endtime="20201030 18:27:17.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.302" endtime="20201030 18:27:17.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.315" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:17.313" endtime="20201030 18:27:17.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.324" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.0985999999997553e-05, 4.720000000013602e-07, 9.292000000001022e-06, 4.720000000013602e-07, 1.1249999999997373e-05, 4.720000000013602e-07, 8.237000000001216e-06, 4.7199999999442133e-07, 1.1165999999999954e-05, 4.7300000000083386e-07, 1.1152000000000384e-05, 4.7300000000083386e-07, 8.332999999999258e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 8.236000000001742e-06, 4.720000000013602e-07, 1.1207999999998663e-05, 4.7300000000083386e-07, 7.957999999995413e-06, 4.720000000013602e-07, 9.181000000003936e-06, 4.7199999999442133e-07, 8.958000000003352e-06, 4.720000000013602e-07, 1.0111999999999621e-05, 4.7199999999442133e-07, 8.666000000004392e-06, 4.7300000000083386e-07, 8.957999999996413e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 1.0528000000002702e-05, 4.7199999999442133e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.1278000000003452e-05, 4.7199999999442133e-07, 1.1195000000005506e-05, 4.7199999999442133e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 1.0985999999997553e-05, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 9.721999999996733e-06, 4.7300000000083386e-07, 9.277000000001978e-06, 4.7300000000083386e-07, 1.0333000000001258e-05, 4.720000000013602e-07, 8.124999999997717e-06, 4.720000000013602e-07, 1.0334000000000731e-05, 4.7199999999442133e-07, 1.0000000000003062e-05, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 1.1263999999996943e-05, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 8.223000000001646e-06, 4.720000000013602e-07, 8.443999999996343e-06, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 1.0736000000004242e-05, 4.7300000000083386e-07, 1.0318999999994749e-05, 4.720000000013602e-07, 8.181000000002936e-06, 4.7199999999442133e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 8.457999999995913e-06, 4.7300000000083386e-07, 8.138000000004753e-06, 4.7300000000083386e-07, 7.999999999994123e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 1.0207999999997663e-05, 4.720000000013602e-07, 1.1264000000003882e-05, 4.7300000000083386e-07, 1.0596999999994139e-05, 4.720000000013602e-07], 'time': [0.037030028, 0.0370305, 0.037041486, 0.037041958, 0.03705125, 0.037051722, 0.037062972, 0.037063444, 0.037071681, 0.037072153, 0.037083319, 0.037083792, 0.037094944, 0.037095417, 0.03710375, 0.037104222, 0.037113819, 0.037114292, 0.037122528, 0.037123, 0.037134208, 0.037134681, 0.037142639, 0.037143111, 0.037152292, 0.037152764, 0.037161722, 0.037162194, 0.037172306, 0.037172778, 0.037181444, 0.037181917, 0.037190875, 0.037191347, 0.037201986, 0.037202458, 0.037212986, 0.037213458, 0.037224611, 0.037225083, 0.037236361, 0.037236833, 0.037248028, 0.0372485, 0.037258556, 0.037259028, 0.037270014, 0.037270486, 0.037281389, 0.037281861, 0.037292264, 0.037292736, 0.037302458, 0.037302931, 0.037312208, 0.037312681, 0.037323014, 0.037323486, 0.037331611, 0.037332083, 0.037342417, 0.037342889, 0.037352889, 0.037353361, 0.037362528, 0.037363, 0.037374264, 0.037374736, 0.037382847, 0.037383319, 0.037391361, 0.037391833, 0.037400056, 0.037400528, 0.037408972, 0.037409444, 0.037418625, 0.037419097, 0.037429833, 0.037430306, 0.037440625, 0.037441097, 0.037449278, 0.03744975, 0.037460028, 0.0374605, 0.037468958, 0.037469431, 0.037477569, 0.037478042, 0.037486042, 0.037486514, 0.037497167, 0.037497639, 0.037507847, 0.037508319, 0.037519583, 0.037520056, 0.037530653, 0.037531125], 'source_diff': [0, 4.720000000013602e-07, 1.0985999999997553e-05, 4.720000000013602e-07, 9.292000000001022e-06, 4.720000000013602e-07, 1.1249999999997373e-05, 4.720000000013602e-07, 8.237000000001216e-06, 4.7199999999442133e-07, 1.1165999999999954e-05, 4.7300000000083386e-07, 1.1152000000000384e-05, 4.7300000000083386e-07, 8.332999999999258e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.7300000000083386e-07, 8.236000000001742e-06, 4.720000000013602e-07, 1.1207999999998663e-05, 4.7300000000083386e-07, 7.957999999995413e-06, 4.720000000013602e-07, 9.181000000003936e-06, 4.7199999999442133e-07, 8.958000000003352e-06, 4.720000000013602e-07, 1.0111999999999621e-05, 4.7199999999442133e-07, 8.666000000004392e-06, 4.7300000000083386e-07, 8.957999999996413e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 1.0528000000002702e-05, 4.7199999999442133e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 1.1278000000003452e-05, 4.7199999999442133e-07, 1.1195000000005506e-05, 4.7199999999442133e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 1.0985999999997553e-05, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 9.721999999996733e-06, 4.7300000000083386e-07, 9.277000000001978e-06, 4.7300000000083386e-07, 1.0333000000001258e-05, 4.720000000013602e-07, 8.124999999997717e-06, 4.720000000013602e-07, 1.0334000000000731e-05, 4.7199999999442133e-07, 1.0000000000003062e-05, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 1.1263999999996943e-05, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 8.223000000001646e-06, 4.720000000013602e-07, 8.443999999996343e-06, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 1.0736000000004242e-05, 4.7300000000083386e-07, 1.0318999999994749e-05, 4.720000000013602e-07, 8.181000000002936e-06, 4.7199999999442133e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 8.457999999995913e-06, 4.7300000000083386e-07, 8.138000000004753e-06, 4.7300000000083386e-07, 7.999999999994123e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 1.0207999999997663e-05, 4.720000000013602e-07, 1.1264000000003882e-05, 4.7300000000083386e-07, 1.0596999999994139e-05, 4.720000000013602e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:17.317" endtime="20201030 18:27:17.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.307" endtime="20201030 18:27:17.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:17.338" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999442133e-07}, {'diff': 4.7300000000083386e-07},...</msg>
<status status="PASS" starttime="20201030 18:27:17.330" endtime="20201030 18:27:17.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:17.350" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 18:27:17.340" endtime="20201030 18:27:17.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.360" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:17.358" endtime="20201030 18:27:17.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.365" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:27:17.362" endtime="20201030 18:27:17.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.352" endtime="20201030 18:27:17.368"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:17.377" endtime="20201030 18:27:17.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.373" endtime="20201030 18:27:17.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.370" endtime="20201030 18:27:17.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.797" endtime="20201030 18:27:17.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.796" endtime="20201030 18:27:17.403"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.425" endtime="20201030 18:27:17.437"></status>
</kw>
<msg timestamp="20201030 18:27:17.438" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:17.422" endtime="20201030 18:27:17.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.445" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:17.441" endtime="20201030 18:27:17.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.447" endtime="20201030 18:27:17.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.415" endtime="20201030 18:27:17.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.410" endtime="20201030 18:27:17.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.471" endtime="20201030 18:27:17.817"></status>
</kw>
<msg timestamp="20201030 18:27:17.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038301278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03830175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:17.467" endtime="20201030 18:27:17.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038301278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03830175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:17.827" endtime="20201030 18:27:17.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.846" endtime="20201030 18:27:17.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.460" endtime="20201030 18:27:17.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.455" endtime="20201030 18:27:17.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:17.910" level="INFO">${debug} = {'diff': [0, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 1.0527999999995763e-05, 4.720000000013602e-07, 9.278000000001452e-06, 4.720000000013602e-07, 1.1249999999997373e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:27:17.855" endtime="20201030 18:27:17.910"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.912" endtime="20201030 18:27:17.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.924" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:17.922" endtime="20201030 18:27:17.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.933" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 1.0527999999995763e-05, 4.720000000013602e-07, 9.278000000001452e-06, 4.720000000013602e-07, 1.1249999999997373e-05, 4.720000000013602e-07, 9.694999999997067e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 1.1070000000001912e-05, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 8.236000000001742e-06, 4.7299999999389497e-07, 9.166000000004892e-06, 4.7300000000083386e-07, 1.0749999999996873e-05, 4.720000000013602e-07, 9.915999999998704e-06, 4.7300000000083386e-07, 1.002699999999579e-05, 4.7300000000083386e-07, 1.0819000000002188e-05, 4.720000000013602e-07, 9.583999999999981e-06, 4.720000000013602e-07, 9.193999999997093e-06, 4.7300000000083386e-07, 8.110999999998147e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 1.1166999999999427e-05, 4.720000000013602e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 1.1166999999999427e-05, 4.7199999999442133e-07, 8.014000000000632e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 8.11200000000456e-06, 4.7199999999442133e-07, 1.0528000000002702e-05, 4.720000000013602e-07, 8.555000000000368e-06, 4.7300000000083386e-07, 9.485999999996053e-06, 4.720000000013602e-07, 9.500000000002562e-06, 4.7199999999442133e-07, 8.347000000005766e-06, 4.7299999999389497e-07, 1.0708000000005102e-05, 4.7199999999442133e-07, 8.542000000000272e-06, 4.720000000013602e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 8.986000000002492e-06, 4.720000000013602e-07, 8.527999999993763e-06, 4.720000000013602e-07, 8.583999999998981e-06, 4.720000000013602e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 8.653000000004296e-06, 4.7199999999442133e-07, 1.0722000000004672e-05, 4.7300000000083386e-07, 9.721999999996733e-06, 4.720000000013602e-07, 8.236000000001742e-06, 4.7199999999442133e-07, 1.1042000000002772e-05, 4.720000000013602e-07, 1.0208999999997137e-05, 4.720000000013602e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 1.1027999999996263e-05, 4.720000000013602e-07, 1.0556000000001842e-05, 4.720000000013602e-07, 9.777999999995013e-06, 4.720000000013602e-07, 1.0528000000002702e-05, 4.720000000013602e-07, 9.805999999994153e-06, 4.720000000013602e-07], 'time': [0.038301278, 0.03830175, 0.038310625, 0.038311097, 0.038321625, 0.038322097, 0.038331375, 0.038331847, 0.038343097, 0.038343569, 0.038353264, 0.038353736, 0.038364472, 0.038364944, 0.038376014, 0.038376486, 0.038385861, 0.038386333, 0.038394569, 0.038395042, 0.038404208, 0.038404681, 0.038415431, 0.038415903, 0.038425819, 0.038426292, 0.038436319, 0.038436792, 0.038447611, 0.038448083, 0.038457667, 0.038458139, 0.038467333, 0.038467806, 0.038475917, 0.038476389, 0.038487028, 0.0384875, 0.038498667, 0.038499139, 0.03850925, 0.038509722, 0.038520889, 0.038521361, 0.038529375, 0.038529847, 0.038538722, 0.038539194, 0.038547306, 0.038547778, 0.038558306, 0.038558778, 0.038567333, 0.038567806, 0.038577292, 0.038577764, 0.038587264, 0.038587736, 0.038596083, 0.038596556, 0.038607264, 0.038607736, 0.038616278, 0.03861675, 0.038627903, 0.038628375, 0.038637361, 0.038637833, 0.038646361, 0.038646833, 0.038655417, 0.038655889, 0.038666, 0.038666472, 0.038674875, 0.038675347, 0.038684, 0.038684472, 0.038695194, 0.038695667, 0.038705389, 0.038705861, 0.038714097, 0.038714569, 0.038725611, 0.038726083, 0.038736292, 0.038736764, 0.038747111, 0.038747583, 0.038758611, 0.038759083, 0.038769639, 0.038770111, 0.038779889, 0.038780361, 0.038790889, 0.038791361, 0.038801167, 0.038801639], 'source_diff': [0, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 1.0527999999995763e-05, 4.720000000013602e-07, 9.278000000001452e-06, 4.720000000013602e-07, 1.1249999999997373e-05, 4.720000000013602e-07, 9.694999999997067e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 1.1070000000001912e-05, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 8.236000000001742e-06, 4.7299999999389497e-07, 9.166000000004892e-06, 4.7300000000083386e-07, 1.0749999999996873e-05, 4.720000000013602e-07, 9.915999999998704e-06, 4.7300000000083386e-07, 1.002699999999579e-05, 4.7300000000083386e-07, 1.0819000000002188e-05, 4.720000000013602e-07, 9.583999999999981e-06, 4.720000000013602e-07, 9.193999999997093e-06, 4.7300000000083386e-07, 8.110999999998147e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 1.1166999999999427e-05, 4.720000000013602e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 1.1166999999999427e-05, 4.7199999999442133e-07, 8.014000000000632e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.720000000013602e-07, 8.11200000000456e-06, 4.7199999999442133e-07, 1.0528000000002702e-05, 4.720000000013602e-07, 8.555000000000368e-06, 4.7300000000083386e-07, 9.485999999996053e-06, 4.720000000013602e-07, 9.500000000002562e-06, 4.7199999999442133e-07, 8.347000000005766e-06, 4.7299999999389497e-07, 1.0708000000005102e-05, 4.7199999999442133e-07, 8.542000000000272e-06, 4.720000000013602e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 8.986000000002492e-06, 4.720000000013602e-07, 8.527999999993763e-06, 4.720000000013602e-07, 8.583999999998981e-06, 4.720000000013602e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 8.653000000004296e-06, 4.7199999999442133e-07, 1.0722000000004672e-05, 4.7300000000083386e-07, 9.721999999996733e-06, 4.720000000013602e-07, 8.236000000001742e-06, 4.7199999999442133e-07, 1.1042000000002772e-05, 4.720000000013602e-07, 1.0208999999997137e-05, 4.720000000013602e-07, 1.0347000000000828e-05, 4.720000000013602e-07, 1.1027999999996263e-05, 4.720000000013602e-07, 1.0556000000001842e-05, 4.720000000013602e-07, 9.777999999995013e-06, 4.720000000013602e-07, 1.0528000000002702e-05, 4.720000000013602e-07, 9.805999999994153e-06, 4.720000000013602e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201030 18:27:17.926" endtime="20201030 18:27:17.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.917" endtime="20201030 18:27:17.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:17.947" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:17.938" endtime="20201030 18:27:17.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:17.956" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7200...</msg>
<status status="PASS" starttime="20201030 18:27:17.949" endtime="20201030 18:27:17.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.966" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:17.964" endtime="20201030 18:27:17.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.972" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 18:27:17.969" endtime="20201030 18:27:17.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.958" endtime="20201030 18:27:17.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:17.985" endtime="20201030 18:27:18.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.979" endtime="20201030 18:27:18.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.977" endtime="20201030 18:27:18.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.406" endtime="20201030 18:27:18.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.405" endtime="20201030 18:27:18.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.477" endtime="20201030 18:27:18.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:18.020" endtime="20201030 18:27:18.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.016" endtime="20201030 18:27:18.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.013" endtime="20201030 18:27:18.044"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:05.291" endtime="20201030 18:27:18.045" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:18.062" endtime="20201030 18:27:18.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.058" endtime="20201030 18:27:18.085"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.119" endtime="20201030 18:27:18.137"></status>
</kw>
<msg timestamp="20201030 18:27:18.138" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.116" endtime="20201030 18:27:18.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.145" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.140" endtime="20201030 18:27:18.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.152" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:18.148" endtime="20201030 18:27:18.153"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:18.109" endtime="20201030 18:27:18.154"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:18.101" endtime="20201030 18:27:18.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.099" endtime="20201030 18:27:18.157"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:18.164" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:18.163" endtime="20201030 18:27:18.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.159" endtime="20201030 18:27:18.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.097" endtime="20201030 18:27:18.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.095" endtime="20201030 18:27:18.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.168" endtime="20201030 18:27:18.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.091" endtime="20201030 18:27:18.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.087" endtime="20201030 18:27:18.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.055" endtime="20201030 18:27:18.175"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.199" endtime="20201030 18:27:18.213"></status>
</kw>
<msg timestamp="20201030 18:27:18.214" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.195" endtime="20201030 18:27:18.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.221" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.217" endtime="20201030 18:27:18.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.224" endtime="20201030 18:27:18.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.188" endtime="20201030 18:27:18.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.182" endtime="20201030 18:27:18.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.249" endtime="20201030 18:27:18.605"></status>
</kw>
<msg timestamp="20201030 18:27:18.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127413236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127422194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:18.246" endtime="20201030 18:27:18.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127413236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.127422194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:18.615" endtime="20201030 18:27:18.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.634" endtime="20201030 18:27:18.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.239" endtime="20201030 18:27:18.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.234" endtime="20201030 18:27:18.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:18.651" level="INFO">${RESULT} = [{'diff': 8.957999999975597e-06}, {'diff': 8.971999999995983e-06}, {'diff': 8.79200000000746e-06}, {'diff': 9.305000000014996e-06}, {'diff': 9.639000000005726e-06}, {'diff': 9.278000000001452e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:18.642" endtime="20201030 18:27:18.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:18.661" level="INFO">${OVERHEAD} = {'diff': [8.957999999975597e-06, 8.971999999995983e-06, 8.79200000000746e-06, 9.305000000014996e-06, 9.639000000005726e-06, 9.278000000001452e-06, 8.958000000003352e-06, 8.791999999979705e-06, 8.63900...</msg>
<status status="PASS" starttime="20201030 18:27:18.653" endtime="20201030 18:27:18.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.673" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:18.671" endtime="20201030 18:27:18.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.679" level="INFO">VALUE: [8.957999999975597e-06, 8.971999999995983e-06, 8.79200000000746e-06, 9.305000000014996e-06, 9.639000000005726e-06, 9.278000000001452e-06, 8.958000000003352e-06, 8.791999999979705e-06, 8.639000000004726e-06, 8.958000000003352e-06, 9.291999999994083e-06, 9.443999999997343e-06, 8.820000000020478e-06, 9.124999999998717e-06, 9.472000000010361e-06, 9.333000000000258e-06, 9.124999999998717e-06, 8.625000000012095e-06, 8.958000000003352e-06, 8.805000000000618e-06, 8.930999999989808e-06, 9.610999999992709e-06, 9.014000000001632e-06, 8.971999999995983e-06, 9.180999999996997e-06, 9.45800000001773e-06, 8.959000000002826e-06, 9.347999999992362e-06, 9.124999999998717e-06, 9.473000000009835e-06, 9.458999999989448e-06, 9.459000000017204e-06, 8.930999999989808e-06, 8.79200000000746e-06, 8.639000000004726e-06, 9.457999999989974e-06, 9.111000000006086e-06, 8.625000000012095e-06, 8.639000000004726e-06, 9.111000000006086e-06, 8.806000000000092e-06, 9.458999999989448e-06, 9.000000000009e-06, 9.30600000001447e-06, 8.79200000000746e-06, 9.235999999995803e-06, 9.43099999997643e-06, 9.305000000014996e-06, 9.138999999991348e-06, 9.138999999991348e-06]</msg>
<status status="PASS" starttime="20201030 18:27:18.675" endtime="20201030 18:27:18.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.663" endtime="20201030 18:27:18.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:18.690" endtime="20201030 18:27:18.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.686" endtime="20201030 18:27:18.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.683" endtime="20201030 18:27:18.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.178" endtime="20201030 18:27:18.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.177" endtime="20201030 18:27:18.716"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.736" endtime="20201030 18:27:18.748"></status>
</kw>
<msg timestamp="20201030 18:27:18.750" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.733" endtime="20201030 18:27:18.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:18.756" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:18.752" endtime="20201030 18:27:18.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.758" endtime="20201030 18:27:18.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.725" endtime="20201030 18:27:18.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.721" endtime="20201030 18:27:18.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:18.782" endtime="20201030 18:27:19.140"></status>
</kw>
<msg timestamp="20201030 18:27:19.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036532764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036541528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:18.778" endtime="20201030 18:27:19.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036532764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036541528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:19.151" endtime="20201030 18:27:19.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.175" endtime="20201030 18:27:19.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.771" endtime="20201030 18:27:19.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.766" endtime="20201030 18:27:19.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:19.197" level="INFO">${RESULT} = [{'diff': 8.763999999994443e-06}, {'diff': 8.791000000001048e-06}, {'diff': 9.388999999998537e-06}, {'diff': 8.638999999997787e-06}, {'diff': 9.124999999998717e-06}, {'diff': 8.638999999997787e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:19.187" endtime="20201030 18:27:19.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:19.211" level="INFO">${OVERHEAD} = {'diff': [8.763999999994443e-06, 8.791000000001048e-06, 9.388999999998537e-06, 8.638999999997787e-06, 9.124999999998717e-06, 8.638999999997787e-06, 9.041000000001298e-06, 8.611000000005586e-06, 8.7640...</msg>
<status status="PASS" starttime="20201030 18:27:19.199" endtime="20201030 18:27:19.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.223" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:19.220" endtime="20201030 18:27:19.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.230" level="INFO">VALUE: [8.763999999994443e-06, 8.791000000001048e-06, 9.388999999998537e-06, 8.638999999997787e-06, 9.124999999998717e-06, 8.638999999997787e-06, 9.041000000001298e-06, 8.611000000005586e-06, 8.764000000001382e-06, 8.972000000002922e-06, 9.042000000000772e-06, 9.110999999999148e-06, 9.277999999994513e-06, 9.458000000003852e-06, 9.471999999996483e-06, 8.945000000003256e-06, 8.971999999995983e-06, 9.472000000003422e-06, 8.806000000000092e-06, 9.292000000001022e-06, 8.791000000001048e-06, 9.459000000003326e-06, 8.624999999998217e-06, 9.485999999996053e-06, 8.999999999995123e-06, 8.652999999997357e-06, 8.679999999997023e-06, 9.180999999996997e-06, 8.638999999997787e-06, 9.139000000005226e-06, 9.472000000003422e-06, 9.346999999999828e-06, 8.929999999997273e-06, 9.471999999996483e-06, 8.624999999998217e-06, 9.319000000000688e-06, 8.695000000003006e-06, 8.778000000000952e-06, 8.959000000002826e-06, 9.278000000001452e-06, 9.304999999994179e-06, 8.973000000002396e-06, 9.180000000004462e-06, 8.806000000000092e-06, 9.124999999998717e-06, 9.291000000001548e-06, 9.500000000002562e-06, 8.972000000002922e-06, 9.305000000001118e-06, 9.472000000003422e-06]</msg>
<status status="PASS" starttime="20201030 18:27:19.226" endtime="20201030 18:27:19.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.213" endtime="20201030 18:27:19.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:19.242" endtime="20201030 18:27:19.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.238" endtime="20201030 18:27:19.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.235" endtime="20201030 18:27:19.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.717" endtime="20201030 18:27:19.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.716" endtime="20201030 18:27:19.268"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.288" endtime="20201030 18:27:19.301"></status>
</kw>
<msg timestamp="20201030 18:27:19.302" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.285" endtime="20201030 18:27:19.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.308" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.304" endtime="20201030 18:27:19.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.311" endtime="20201030 18:27:19.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.278" endtime="20201030 18:27:19.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.273" endtime="20201030 18:27:19.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.334" endtime="20201030 18:27:19.689"></status>
</kw>
<msg timestamp="20201030 18:27:19.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0367545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036763639, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:19.331" endtime="20201030 18:27:19.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0367545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036763639, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:19.698" endtime="20201030 18:27:19.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.718" endtime="20201030 18:27:19.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.324" endtime="20201030 18:27:19.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.319" endtime="20201030 18:27:19.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:19.737" level="INFO">${RESULT} = [{'diff': 9.138999999998287e-06}, {'diff': 8.943999999996843e-06}, {'diff': 9.320000000000161e-06}, {'diff': 9.305000000001118e-06}, {'diff': 9.320000000000161e-06}, {'diff': 8.792000000000522e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:19.726" endtime="20201030 18:27:19.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:19.746" level="INFO">${OVERHEAD} = {'diff': [9.138999999998287e-06, 8.943999999996843e-06, 9.320000000000161e-06, 9.305000000001118e-06, 9.320000000000161e-06, 8.792000000000522e-06, 9.124999999998717e-06, 8.832999999999758e-06, 8.7920...</msg>
<status status="PASS" starttime="20201030 18:27:19.739" endtime="20201030 18:27:19.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.756" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:19.754" endtime="20201030 18:27:19.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.762" level="INFO">VALUE: [9.138999999998287e-06, 8.943999999996843e-06, 9.320000000000161e-06, 9.305000000001118e-06, 9.320000000000161e-06, 8.792000000000522e-06, 9.124999999998717e-06, 8.832999999999758e-06, 8.792000000000522e-06, 8.805000000000618e-06, 8.792000000000522e-06, 9.125000000005656e-06, 9.165999999997954e-06, 8.944000000003782e-06, 9.124999999998717e-06, 9.124999999998717e-06, 9.320000000000161e-06, 9.306000000000592e-06, 9.137999999998814e-06, 8.958000000003352e-06, 9.347999999999301e-06, 9.306000000000592e-06, 9.111000000006086e-06, 9.486000000002992e-06, 8.972000000002922e-06, 9.124999999998717e-06, 8.944999999996317e-06, 8.971999999995983e-06, 9.291000000001548e-06, 8.806000000000092e-06, 8.944000000003782e-06, 9.638999999998787e-06, 9.305000000001118e-06, 8.959000000002826e-06, 9.291000000001548e-06, 8.971999999995983e-06, 9.625000000006156e-06, 9.152999999997857e-06, 9.110999999999148e-06, 9.473000000002896e-06, 9.319000000000688e-06, 9.124999999998717e-06, 9.458999999996387e-06, 9.153000000004796e-06, 8.945000000003256e-06, 9.444000000004282e-06, 8.792000000000522e-06, 9.292000000001022e-06, 9.486000000002992e-06, 9.306000000000592e-06]</msg>
<status status="PASS" starttime="20201030 18:27:19.759" endtime="20201030 18:27:19.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.748" endtime="20201030 18:27:19.764"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:19.773" endtime="20201030 18:27:19.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.769" endtime="20201030 18:27:19.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.766" endtime="20201030 18:27:19.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.270" endtime="20201030 18:27:19.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.269" endtime="20201030 18:27:19.798"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.818" endtime="20201030 18:27:19.831"></status>
</kw>
<msg timestamp="20201030 18:27:19.832" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.815" endtime="20201030 18:27:19.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:19.838" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:19.834" endtime="20201030 18:27:19.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.840" endtime="20201030 18:27:19.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.808" endtime="20201030 18:27:19.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.803" endtime="20201030 18:27:19.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:19.865" endtime="20201030 18:27:20.224"></status>
</kw>
<msg timestamp="20201030 18:27:20.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035942167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035950889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:19.860" endtime="20201030 18:27:20.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035942167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035950889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.235" endtime="20201030 18:27:20.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.256" endtime="20201030 18:27:20.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.853" endtime="20201030 18:27:20.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.848" endtime="20201030 18:27:20.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:20.278" level="INFO">${RESULT} = [{'diff': 8.722000000002672e-06}, {'diff': 9.291999999994083e-06}, {'diff': 9.138999999998287e-06}, {'diff': 9.069999999999911e-06}, {'diff': 9.333000000000258e-06}, {'diff': 9.374999999998967e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:20.268" endtime="20201030 18:27:20.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:20.290" level="INFO">${OVERHEAD} = {'diff': [8.722000000002672e-06, 9.291999999994083e-06, 9.138999999998287e-06, 9.069999999999911e-06, 9.333000000000258e-06, 9.374999999998967e-06, 9.124999999998717e-06, 9.305000000001118e-06, 9.1389...</msg>
<status status="PASS" starttime="20201030 18:27:20.281" endtime="20201030 18:27:20.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.302" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:20.299" endtime="20201030 18:27:20.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.307" level="INFO">VALUE: [8.722000000002672e-06, 9.291999999994083e-06, 9.138999999998287e-06, 9.069999999999911e-06, 9.333000000000258e-06, 9.374999999998967e-06, 9.124999999998717e-06, 9.305000000001118e-06, 9.138999999998287e-06, 9.056000000000342e-06, 9.139000000005226e-06, 8.653000000004296e-06, 8.958000000003352e-06, 9.458999999996387e-06, 8.610999999998648e-06, 9.306000000000592e-06, 9.124999999998717e-06, 9.499999999995623e-06, 9.457999999996913e-06, 9.583000000000508e-06, 8.596999999999078e-06, 9.374999999998967e-06, 9.278000000001452e-06, 9.319000000000688e-06, 8.957999999996413e-06, 9.458000000003852e-06, 8.778000000000952e-06, 9.138999999998287e-06, 8.651999999997884e-06, 8.639000000004726e-06, 9.305000000001118e-06, 9.138999999998287e-06, 9.319000000000688e-06, 9.471999999996483e-06, 9.472000000003422e-06, 8.806000000000092e-06, 8.902999999997607e-06, 9.138999999998287e-06, 9.139000000005226e-06, 9.458999999996387e-06, 9.443999999997343e-06, 8.624999999998217e-06, 9.387999999999064e-06, 8.778000000000952e-06, 9.473000000002896e-06, 9.305000000001118e-06, 9.291000000001548e-06, 9.306000000000592e-06, 8.972999999995457e-06, 9.124999999998717e-06]</msg>
<status status="PASS" starttime="20201030 18:27:20.304" endtime="20201030 18:27:20.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.292" endtime="20201030 18:27:20.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:20.319" endtime="20201030 18:27:20.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.315" endtime="20201030 18:27:20.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.312" endtime="20201030 18:27:20.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.800" endtime="20201030 18:27:20.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:19.799" endtime="20201030 18:27:20.345"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.368" endtime="20201030 18:27:20.382"></status>
</kw>
<msg timestamp="20201030 18:27:20.383" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.365" endtime="20201030 18:27:20.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.390" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.386" endtime="20201030 18:27:20.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.392" endtime="20201030 18:27:20.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.354" endtime="20201030 18:27:20.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.350" endtime="20201030 18:27:20.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.418" endtime="20201030 18:27:20.763"></status>
</kw>
<msg timestamp="20201030 18:27:20.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039725681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039734986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.414" endtime="20201030 18:27:20.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039725681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039734986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.773" endtime="20201030 18:27:20.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.796" endtime="20201030 18:27:20.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.405" endtime="20201030 18:27:20.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.400" endtime="20201030 18:27:20.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:20.814" level="INFO">${RESULT} = [{'diff': 9.305000000001118e-06}, {'diff': 9.306000000000592e-06}, {'diff': 8.972000000002922e-06}, {'diff': 9.292000000001022e-06}, {'diff': 9.610999999999648e-06}, {'diff': 8.943999999996843e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:20.805" endtime="20201030 18:27:20.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:20.824" level="INFO">${OVERHEAD} = {'diff': [9.305000000001118e-06, 9.306000000000592e-06, 8.972000000002922e-06, 9.292000000001022e-06, 9.610999999999648e-06, 8.943999999996843e-06, 9.473000000002896e-06, 8.959000000002826e-06, 9.1389...</msg>
<status status="PASS" starttime="20201030 18:27:20.816" endtime="20201030 18:27:20.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.834" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:20.832" endtime="20201030 18:27:20.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.840" level="INFO">VALUE: [9.305000000001118e-06, 9.306000000000592e-06, 8.972000000002922e-06, 9.292000000001022e-06, 9.610999999999648e-06, 8.943999999996843e-06, 9.473000000002896e-06, 8.959000000002826e-06, 9.138999999998287e-06, 9.139000000005226e-06, 8.958000000003352e-06, 9.124999999998717e-06, 8.972000000002922e-06, 9.305000000001118e-06, 9.124999999998717e-06, 8.764000000001382e-06, 9.124999999998717e-06, 8.806000000000092e-06, 8.805000000000618e-06, 9.388999999998537e-06, 9.333000000000258e-06, 8.929999999997273e-06, 8.778000000000952e-06, 9.472999999995957e-06, 9.624999999999218e-06, 8.972999999995457e-06, 9.110999999999148e-06, 8.985999999995553e-06, 9.374999999998967e-06, 9.137999999998814e-06, 8.652999999997357e-06, 8.973000000002396e-06, 9.472000000003422e-06, 9.124999999998717e-06, 8.958000000003352e-06, 9.429999999997773e-06, 8.806000000000092e-06, 8.987000000001966e-06, 9.306000000000592e-06, 8.971999999995983e-06, 9.486999999995527e-06, 8.624999999998217e-06, 9.514000000002132e-06, 9.110999999999148e-06, 8.652000000004822e-06, 9.277999999994513e-06, 9.013999999994693e-06, 8.610999999998648e-06, 8.805000000000618e-06, 9.179999999997523e-06]</msg>
<status status="PASS" starttime="20201030 18:27:20.837" endtime="20201030 18:27:20.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.826" endtime="20201030 18:27:20.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:20.853" endtime="20201030 18:27:20.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.847" endtime="20201030 18:27:20.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.845" endtime="20201030 18:27:20.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.346" endtime="20201030 18:27:20.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.345" endtime="20201030 18:27:20.879"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.900" endtime="20201030 18:27:20.914"></status>
</kw>
<msg timestamp="20201030 18:27:20.915" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.896" endtime="20201030 18:27:20.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:20.922" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:20.917" endtime="20201030 18:27:20.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.924" endtime="20201030 18:27:20.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.889" endtime="20201030 18:27:20.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.884" endtime="20201030 18:27:20.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:20.948" endtime="20201030 18:27:21.306"></status>
</kw>
<msg timestamp="20201030 18:27:21.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037242111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037251556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:20.944" endtime="20201030 18:27:21.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037242111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037251556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:21.316" endtime="20201030 18:27:21.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.335" endtime="20201030 18:27:21.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.937" endtime="20201030 18:27:21.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.932" endtime="20201030 18:27:21.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:21.352" level="INFO">${RESULT} = [{'diff': 9.444999999996817e-06}, {'diff': 8.806000000000092e-06}, {'diff': 9.124999999998717e-06}, {'diff': 8.792000000000522e-06}, {'diff': 9.165999999997954e-06}, {'diff': 8.958000000003352e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:21.344" endtime="20201030 18:27:21.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:21.363" level="INFO">${OVERHEAD} = {'diff': [9.444999999996817e-06, 8.806000000000092e-06, 9.124999999998717e-06, 8.792000000000522e-06, 9.165999999997954e-06, 8.958000000003352e-06, 9.125000000005656e-06, 9.152999999997857e-06, 9.1389...</msg>
<status status="PASS" starttime="20201030 18:27:21.354" endtime="20201030 18:27:21.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.373" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:21.371" endtime="20201030 18:27:21.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.378" level="INFO">VALUE: [9.444999999996817e-06, 8.806000000000092e-06, 9.124999999998717e-06, 8.792000000000522e-06, 9.165999999997954e-06, 8.958000000003352e-06, 9.125000000005656e-06, 9.152999999997857e-06, 9.138999999998287e-06, 8.972000000002922e-06, 9.457999999996913e-06, 8.778000000000952e-06, 8.972000000002922e-06, 8.737000000001716e-06, 9.473000000002896e-06, 9.180000000004462e-06, 9.333000000000258e-06, 9.471999999996483e-06, 8.763000000001908e-06, 8.958000000003352e-06, 8.958000000003352e-06, 8.929999999997273e-06, 9.445000000003756e-06, 8.806000000000092e-06, 9.179999999997523e-06, 8.652999999997357e-06, 8.792000000000522e-06, 9.292000000001022e-06, 9.138999999998287e-06, 8.944000000003782e-06, 9.014000000001632e-06, 8.958000000003352e-06, 8.792000000000522e-06, 8.792000000000522e-06, 9.458000000003852e-06, 9.278000000001452e-06, 9.290999999994609e-06, 9.680999999997497e-06, 9.236000000002742e-06, 9.138999999998287e-06, 9.013999999994693e-06, 8.959000000002826e-06, 8.959000000002826e-06, 9.028000000001202e-06, 9.652999999998357e-06, 9.028000000001202e-06, 9.652999999998357e-06, 8.957999999996413e-06, 9.277000000001978e-06, 8.639000000004726e-06]</msg>
<status status="PASS" starttime="20201030 18:27:21.375" endtime="20201030 18:27:21.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.365" endtime="20201030 18:27:21.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:21.390" endtime="20201030 18:27:21.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.385" endtime="20201030 18:27:21.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.383" endtime="20201030 18:27:21.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.881" endtime="20201030 18:27:21.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:20.880" endtime="20201030 18:27:21.415"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.435" endtime="20201030 18:27:21.448"></status>
</kw>
<msg timestamp="20201030 18:27:21.449" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.432" endtime="20201030 18:27:21.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.456" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.452" endtime="20201030 18:27:21.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.458" endtime="20201030 18:27:21.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.424" endtime="20201030 18:27:21.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.420" endtime="20201030 18:27:21.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.482" endtime="20201030 18:27:21.842"></status>
</kw>
<msg timestamp="20201030 18:27:21.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035854167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035863625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:21.478" endtime="20201030 18:27:21.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035854167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035863625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:21.851" endtime="20201030 18:27:21.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.870" endtime="20201030 18:27:21.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.470" endtime="20201030 18:27:21.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.466" endtime="20201030 18:27:21.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:21.887" level="INFO">${RESULT} = [{'diff': 9.458000000003852e-06}, {'diff': 8.973000000002396e-06}, {'diff': 8.944999999996317e-06}, {'diff': 9.138999999998287e-06}, {'diff': 9.444999999996817e-06}, {'diff': 9.624999999999218e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:21.879" endtime="20201030 18:27:21.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:21.899" level="INFO">${OVERHEAD} = {'diff': [9.458000000003852e-06, 8.973000000002396e-06, 8.944999999996317e-06, 9.138999999998287e-06, 9.444999999996817e-06, 9.624999999999218e-06, 8.902999999997607e-06, 8.972000000002922e-06, 8.7770...</msg>
<status status="PASS" starttime="20201030 18:27:21.890" endtime="20201030 18:27:21.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.909" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:21.907" endtime="20201030 18:27:21.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.915" level="INFO">VALUE: [9.458000000003852e-06, 8.973000000002396e-06, 8.944999999996317e-06, 9.138999999998287e-06, 9.444999999996817e-06, 9.624999999999218e-06, 8.902999999997607e-06, 8.972000000002922e-06, 8.777000000001478e-06, 9.486000000002992e-06, 9.471999999996483e-06, 9.374999999998967e-06, 8.805000000000618e-06, 8.805000000000618e-06, 8.792000000000522e-06, 9.124999999998717e-06, 9.402999999998107e-06, 9.153000000004796e-06, 9.180999999996997e-06, 8.806000000000092e-06, 9.639000000005726e-06, 9.472000000003422e-06, 9.278000000001452e-06, 9.110999999999148e-06, 8.624999999998217e-06, 9.290999999994609e-06, 8.945000000003256e-06, 8.958000000003352e-06, 8.958999999995887e-06, 9.290999999994609e-06, 9.304999999994179e-06, 9.445000000003756e-06, 8.958999999995887e-06, 9.500000000002562e-06, 9.292000000001022e-06, 9.209000000003076e-06, 8.806000000000092e-06, 8.778000000000952e-06, 9.471999999996483e-06, 8.805000000000618e-06, 9.124999999998717e-06, 9.485999999996053e-06, 8.972000000002922e-06, 9.292000000001022e-06, 9.264000000001882e-06, 9.291000000001548e-06, 8.639000000004726e-06, 8.958999999995887e-06, 9.306000000000592e-06, 9.292000000001022e-06]</msg>
<status status="PASS" starttime="20201030 18:27:21.912" endtime="20201030 18:27:21.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.901" endtime="20201030 18:27:21.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:21.926" endtime="20201030 18:27:21.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.922" endtime="20201030 18:27:21.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.920" endtime="20201030 18:27:21.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.416" endtime="20201030 18:27:21.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.416" endtime="20201030 18:27:21.951"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.972" endtime="20201030 18:27:21.985"></status>
</kw>
<msg timestamp="20201030 18:27:21.986" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.968" endtime="20201030 18:27:21.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.993" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.989" endtime="20201030 18:27:21.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.995" endtime="20201030 18:27:21.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.961" endtime="20201030 18:27:22.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.956" endtime="20201030 18:27:22.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.019" endtime="20201030 18:27:22.369"></status>
</kw>
<msg timestamp="20201030 18:27:22.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036101056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036110208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.015" endtime="20201030 18:27:22.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036101056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036110208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.378" endtime="20201030 18:27:22.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.397" endtime="20201030 18:27:22.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.008" endtime="20201030 18:27:22.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.003" endtime="20201030 18:27:22.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:22.414" level="INFO">${RESULT} = [{'diff': 9.151999999998384e-06}, {'diff': 9.305000000001118e-06}, {'diff': 8.639000000004726e-06}, {'diff': 9.138999999998287e-06}, {'diff': 8.805000000000618e-06}, {'diff': 9.069999999999911e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:22.405" endtime="20201030 18:27:22.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:22.423" level="INFO">${OVERHEAD} = {'diff': [9.151999999998384e-06, 9.305000000001118e-06, 8.639000000004726e-06, 9.138999999998287e-06, 8.805000000000618e-06, 9.069999999999911e-06, 8.638999999997787e-06, 8.959000000002826e-06, 8.9590...</msg>
<status status="PASS" starttime="20201030 18:27:22.416" endtime="20201030 18:27:22.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.433" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:22.431" endtime="20201030 18:27:22.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.438" level="INFO">VALUE: [9.151999999998384e-06, 9.305000000001118e-06, 8.639000000004726e-06, 9.138999999998287e-06, 8.805000000000618e-06, 9.069999999999911e-06, 8.638999999997787e-06, 8.959000000002826e-06, 8.959000000002826e-06, 9.000000000002062e-06, 8.986000000002492e-06, 9.471999999996483e-06, 9.291000000001548e-06, 9.500000000002562e-06, 9.306000000000592e-06, 8.986000000002492e-06, 9.485999999996053e-06, 9.138999999998287e-06, 8.972000000002922e-06, 8.805999999993153e-06, 9.305000000001118e-06, 9.638999999998787e-06, 8.624999999998217e-06, 8.819000000000188e-06, 8.791000000001048e-06, 8.695000000003006e-06, 8.624999999998217e-06, 9.138999999998287e-06, 8.958000000003352e-06, 9.306000000000592e-06, 8.806000000000092e-06, 9.472000000003422e-06, 9.110999999999148e-06, 9.500000000002562e-06, 8.971999999995983e-06, 8.624999999998217e-06, 9.264000000001882e-06, 9.458000000003852e-06, 8.819999999999661e-06, 9.137999999998814e-06, 9.487000000002466e-06, 8.610999999998648e-06, 9.125000000005656e-06, 9.638999999998787e-06, 8.806000000000092e-06, 8.638999999997787e-06, 9.485999999996053e-06, 9.472000000003422e-06, 8.805000000000618e-06, 8.874999999998467e-06]</msg>
<status status="PASS" starttime="20201030 18:27:22.435" endtime="20201030 18:27:22.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.425" endtime="20201030 18:27:22.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:22.451" endtime="20201030 18:27:22.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.446" endtime="20201030 18:27:22.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.443" endtime="20201030 18:27:22.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.953" endtime="20201030 18:27:22.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.952" endtime="20201030 18:27:22.476"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.497" endtime="20201030 18:27:22.514"></status>
</kw>
<msg timestamp="20201030 18:27:22.515" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.493" endtime="20201030 18:27:22.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.524" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.518" endtime="20201030 18:27:22.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.528" endtime="20201030 18:27:22.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.486" endtime="20201030 18:27:22.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.481" endtime="20201030 18:27:22.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.563" endtime="20201030 18:27:22.914"></status>
</kw>
<msg timestamp="20201030 18:27:22.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038702458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03871125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:22.559" endtime="20201030 18:27:22.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038702458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03871125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:22.924" endtime="20201030 18:27:22.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.942" endtime="20201030 18:27:22.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.548" endtime="20201030 18:27:22.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.542" endtime="20201030 18:27:22.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:22.959" level="INFO">${RESULT} = [{'diff': 8.792000000000522e-06}, {'diff': 9.319000000000688e-06}, {'diff': 9.291000000001548e-06}, {'diff': 8.832999999999758e-06}, {'diff': 8.610999999998648e-06}, {'diff': 8.958000000003352e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:22.951" endtime="20201030 18:27:22.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:22.968" level="INFO">${OVERHEAD} = {'diff': [8.792000000000522e-06, 9.319000000000688e-06, 9.291000000001548e-06, 8.832999999999758e-06, 8.610999999998648e-06, 8.958000000003352e-06, 9.319000000000688e-06, 9.110999999999148e-06, 9.1249...</msg>
<status status="PASS" starttime="20201030 18:27:22.961" endtime="20201030 18:27:22.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.979" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:22.976" endtime="20201030 18:27:22.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.984" level="INFO">VALUE: [8.792000000000522e-06, 9.319000000000688e-06, 9.291000000001548e-06, 8.832999999999758e-06, 8.610999999998648e-06, 8.958000000003352e-06, 9.319000000000688e-06, 9.110999999999148e-06, 9.124999999998717e-06, 9.319000000000688e-06, 9.292000000001022e-06, 9.472999999995957e-06, 9.138999999998287e-06, 9.180999999996997e-06, 9.195000000003506e-06, 8.778000000000952e-06, 8.971999999995983e-06, 9.264000000001882e-06, 9.124999999998717e-06, 9.083000000000008e-06, 9.263999999994943e-06, 9.459000000003326e-06, 9.278000000001452e-06, 8.791999999993583e-06, 9.124999999998717e-06, 9.292000000001022e-06, 9.486000000002992e-06, 8.596999999999078e-06, 8.973000000002396e-06, 8.958999999995887e-06, 9.472000000003422e-06, 9.444999999996817e-06, 9.138999999998287e-06, 9.153000000004796e-06, 9.278000000001452e-06, 8.624999999998217e-06, 8.860999999998898e-06, 9.125000000005656e-06, 9.124999999998717e-06, 9.179999999997523e-06, 8.846999999999328e-06, 8.792000000000522e-06, 9.472000000003422e-06, 8.638999999997787e-06, 9.306000000000592e-06, 8.792000000000522e-06, 8.971999999995983e-06, 9.125000000005656e-06, 8.624999999998217e-06, 9.444000000004282e-06]</msg>
<status status="PASS" starttime="20201030 18:27:22.981" endtime="20201030 18:27:22.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.970" endtime="20201030 18:27:22.986"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:22.997" endtime="20201030 18:27:23.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.991" endtime="20201030 18:27:23.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.989" endtime="20201030 18:27:23.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.478" endtime="20201030 18:27:23.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.477" endtime="20201030 18:27:23.022"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.042" endtime="20201030 18:27:23.056"></status>
</kw>
<msg timestamp="20201030 18:27:23.057" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.039" endtime="20201030 18:27:23.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.065" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.059" endtime="20201030 18:27:23.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.068" endtime="20201030 18:27:23.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.032" endtime="20201030 18:27:23.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.027" endtime="20201030 18:27:23.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.093" endtime="20201030 18:27:23.441"></status>
</kw>
<msg timestamp="20201030 18:27:23.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036122319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03613175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:23.090" endtime="20201030 18:27:23.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036122319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03613175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:23.451" endtime="20201030 18:27:23.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.472" endtime="20201030 18:27:23.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.082" endtime="20201030 18:27:23.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.078" endtime="20201030 18:27:23.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:23.498" level="INFO">${RESULT} = [{'diff': 9.430999999997247e-06}, {'diff': 9.110999999999148e-06}, {'diff': 9.445000000003756e-06}, {'diff': 9.444999999996817e-06}, {'diff': 9.125000000005656e-06}, {'diff': 9.152999999997857e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:23.485" endtime="20201030 18:27:23.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:23.513" level="INFO">${OVERHEAD} = {'diff': [9.430999999997247e-06, 9.110999999999148e-06, 9.445000000003756e-06, 9.444999999996817e-06, 9.125000000005656e-06, 9.152999999997857e-06, 8.958000000003352e-06, 9.445000000003756e-06, 8.7780...</msg>
<status status="PASS" starttime="20201030 18:27:23.501" endtime="20201030 18:27:23.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.524" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:23.522" endtime="20201030 18:27:23.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.530" level="INFO">VALUE: [9.430999999997247e-06, 9.110999999999148e-06, 9.445000000003756e-06, 9.444999999996817e-06, 9.125000000005656e-06, 9.152999999997857e-06, 8.958000000003352e-06, 9.445000000003756e-06, 8.778000000000952e-06, 8.652999999997357e-06, 8.764000000001382e-06, 8.791999999993583e-06, 9.292000000001022e-06, 8.624999999998217e-06, 8.750000000001812e-06, 8.972000000002922e-06, 9.110999999999148e-06, 9.388999999998537e-06, 8.625000000005156e-06, 9.124999999998717e-06, 9.264000000001882e-06, 8.792000000000522e-06, 9.124999999998717e-06, 8.971999999995983e-06, 9.125000000005656e-06, 8.806000000000092e-06, 9.193999999997093e-06, 8.958999999995887e-06, 9.069999999999911e-06, 8.638999999997787e-06, 9.124999999998717e-06, 8.806000000000092e-06, 9.459000000003326e-06, 9.000000000002062e-06, 9.278000000001452e-06, 9.305000000001118e-06, 9.472000000003422e-06, 9.264000000001882e-06, 9.124999999998717e-06, 8.945000000003256e-06, 8.971999999995983e-06, 8.805000000000618e-06, 8.819999999999661e-06, 9.138999999998287e-06, 9.040999999994359e-06, 8.750000000001812e-06, 9.083000000000008e-06, 8.652000000004822e-06, 8.778000000000952e-06, 9.138999999998287e-06]</msg>
<status status="PASS" starttime="20201030 18:27:23.527" endtime="20201030 18:27:23.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.515" endtime="20201030 18:27:23.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:23.541" endtime="20201030 18:27:23.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.537" endtime="20201030 18:27:23.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.535" endtime="20201030 18:27:23.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.024" endtime="20201030 18:27:23.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.023" endtime="20201030 18:27:23.567"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.588" endtime="20201030 18:27:23.603"></status>
</kw>
<msg timestamp="20201030 18:27:23.604" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.585" endtime="20201030 18:27:23.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.610" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.606" endtime="20201030 18:27:23.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.613" endtime="20201030 18:27:23.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.577" endtime="20201030 18:27:23.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.572" endtime="20201030 18:27:23.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.636" endtime="20201030 18:27:23.984"></status>
</kw>
<msg timestamp="20201030 18:27:23.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038413292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038422597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.633" endtime="20201030 18:27:23.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038413292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038422597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.994" endtime="20201030 18:27:24.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.012" endtime="20201030 18:27:24.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.625" endtime="20201030 18:27:24.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.621" endtime="20201030 18:27:24.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:24.029" level="INFO">${RESULT} = [{'diff': 9.305000000001118e-06}, {'diff': 8.638999999997787e-06}, {'diff': 8.958000000003352e-06}, {'diff': 9.624999999999218e-06}, {'diff': 8.805000000000618e-06}, {'diff': 9.138999999998287e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:24.020" endtime="20201030 18:27:24.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:24.040" level="INFO">${OVERHEAD} = {'diff': [9.305000000001118e-06, 8.638999999997787e-06, 8.958000000003352e-06, 9.624999999999218e-06, 8.805000000000618e-06, 9.138999999998287e-06, 9.125000000005656e-06, 9.292000000001022e-06, 9.1390...</msg>
<status status="PASS" starttime="20201030 18:27:24.031" endtime="20201030 18:27:24.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.050" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:24.048" endtime="20201030 18:27:24.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.055" level="INFO">VALUE: [9.305000000001118e-06, 8.638999999997787e-06, 8.958000000003352e-06, 9.624999999999218e-06, 8.805000000000618e-06, 9.138999999998287e-06, 9.125000000005656e-06, 9.292000000001022e-06, 9.139000000005226e-06, 8.972000000002922e-06, 9.292000000001022e-06, 9.471999999996483e-06, 8.625000000005156e-06, 8.792000000000522e-06, 9.305000000001118e-06, 8.972000000002922e-06, 9.471999999996483e-06, 8.624999999998217e-06, 8.653000000004296e-06, 9.305000000001118e-06, 8.971999999995983e-06, 9.473000000002896e-06, 9.291000000001548e-06, 9.138999999998287e-06, 8.819000000000188e-06, 8.958000000003352e-06, 9.320000000000161e-06, 8.902000000005073e-06, 8.680999999996497e-06, 9.306000000000592e-06, 8.624999999998217e-06, 9.360999999999398e-06, 8.957999999996413e-06, 9.153000000004796e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.416999999997677e-06, 9.292000000001022e-06, 9.333000000000258e-06, 8.972000000002922e-06, 9.124999999998717e-06, 9.638999999998787e-06, 8.806000000000092e-06, 9.292000000001022e-06, 8.792000000000522e-06, 9.139000000005226e-06, 8.639000000004726e-06, 9.639000000005726e-06, 9.27699999999504e-06]</msg>
<status status="PASS" starttime="20201030 18:27:24.052" endtime="20201030 18:27:24.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.042" endtime="20201030 18:27:24.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:24.067" endtime="20201030 18:27:24.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.063" endtime="20201030 18:27:24.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.060" endtime="20201030 18:27:24.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.569" endtime="20201030 18:27:24.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.568" endtime="20201030 18:27:24.092"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.114" endtime="20201030 18:27:24.127"></status>
</kw>
<msg timestamp="20201030 18:27:24.129" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.111" endtime="20201030 18:27:24.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.135" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.131" endtime="20201030 18:27:24.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.137" endtime="20201030 18:27:24.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.104" endtime="20201030 18:27:24.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.098" endtime="20201030 18:27:24.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.160" endtime="20201030 18:27:24.510"></status>
</kw>
<msg timestamp="20201030 18:27:24.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037787917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037797208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.157" endtime="20201030 18:27:24.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037787917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037797208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.519" endtime="20201030 18:27:24.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.538" endtime="20201030 18:27:24.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.150" endtime="20201030 18:27:24.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.145" endtime="20201030 18:27:24.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:24.555" level="INFO">${RESULT} = [{'diff': 9.291000000001548e-06}, {'diff': 9.151999999998384e-06}, {'diff': 8.778000000000952e-06}, {'diff': 9.124999999998717e-06}, {'diff': 9.624999999999218e-06}, {'diff': 9.290999999994609e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:24.546" endtime="20201030 18:27:24.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:24.565" level="INFO">${OVERHEAD} = {'diff': [9.291000000001548e-06, 9.151999999998384e-06, 8.778000000000952e-06, 9.124999999998717e-06, 9.624999999999218e-06, 9.290999999994609e-06, 9.333999999999731e-06, 8.806000000000092e-06, 9.3050...</msg>
<status status="PASS" starttime="20201030 18:27:24.557" endtime="20201030 18:27:24.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.574" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:24.572" endtime="20201030 18:27:24.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.580" level="INFO">VALUE: [9.291000000001548e-06, 9.151999999998384e-06, 8.778000000000952e-06, 9.124999999998717e-06, 9.624999999999218e-06, 9.290999999994609e-06, 9.333999999999731e-06, 8.806000000000092e-06, 9.305000000001118e-06, 9.499999999995623e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.972999999995457e-06, 9.486000000002992e-06, 8.792000000000522e-06, 9.471999999996483e-06, 9.125000000005656e-06, 8.943999999996843e-06, 9.291000000001548e-06, 8.972000000002922e-06, 8.999999999995123e-06, 8.958999999995887e-06, 9.472000000003422e-06, 8.959000000002826e-06, 9.457999999996913e-06, 8.959000000002826e-06, 9.486000000002992e-06, 9.486000000002992e-06, 9.486000000002992e-06, 8.610999999998648e-06, 8.792000000000522e-06, 9.000000000002062e-06, 8.638999999997787e-06, 9.444999999996817e-06, 8.944000000003782e-06, 9.138999999998287e-06, 9.319000000000688e-06, 9.152999999997857e-06, 9.292000000001022e-06, 8.958000000003352e-06, 9.139000000005226e-06, 9.305000000001118e-06, 9.402000000005573e-06, 9.096999999999578e-06, 9.138999999998287e-06, 8.638999999997787e-06, 9.402999999998107e-06, 9.305000000001118e-06, 8.888999999998037e-06, 9.152999999997857e-06]</msg>
<status status="PASS" starttime="20201030 18:27:24.577" endtime="20201030 18:27:24.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.566" endtime="20201030 18:27:24.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:24.592" endtime="20201030 18:27:24.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.587" endtime="20201030 18:27:24.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.585" endtime="20201030 18:27:24.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.094" endtime="20201030 18:27:24.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.093" endtime="20201030 18:27:24.622"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.651" endtime="20201030 18:27:24.667"></status>
</kw>
<msg timestamp="20201030 18:27:24.668" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.647" endtime="20201030 18:27:24.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.675" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.671" endtime="20201030 18:27:24.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.677" endtime="20201030 18:27:24.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.636" endtime="20201030 18:27:24.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.630" endtime="20201030 18:27:24.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.701" endtime="20201030 18:27:25.049"></status>
</kw>
<msg timestamp="20201030 18:27:25.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051432833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051442292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.698" endtime="20201030 18:27:25.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051432833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051442292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.058" endtime="20201030 18:27:25.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.077" endtime="20201030 18:27:25.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.690" endtime="20201030 18:27:25.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.685" endtime="20201030 18:27:25.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:25.094" level="INFO">${RESULT} = [{'diff': 9.459000000003326e-06}, {'diff': 8.957999999996413e-06}, {'diff': 9.124999999998717e-06}, {'diff': 9.638999999998787e-06}, {'diff': 8.945000000003256e-06}, {'diff': 8.639000000004726e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:25.085" endtime="20201030 18:27:25.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:25.104" level="INFO">${OVERHEAD} = {'diff': [9.459000000003326e-06, 8.957999999996413e-06, 9.124999999998717e-06, 9.638999999998787e-06, 8.945000000003256e-06, 8.639000000004726e-06, 8.985999999995553e-06, 8.792000000000522e-06, 8.8889...</msg>
<status status="PASS" starttime="20201030 18:27:25.097" endtime="20201030 18:27:25.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.114" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:25.112" endtime="20201030 18:27:25.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.120" level="INFO">VALUE: [9.459000000003326e-06, 8.957999999996413e-06, 9.124999999998717e-06, 9.638999999998787e-06, 8.945000000003256e-06, 8.639000000004726e-06, 8.985999999995553e-06, 8.792000000000522e-06, 8.888999999998037e-06, 9.500000000002562e-06, 9.458000000003852e-06, 9.458999999996387e-06, 9.278000000001452e-06, 9.028000000001202e-06, 8.986000000002492e-06, 9.305000000001118e-06, 8.792000000000522e-06, 8.805000000000618e-06, 9.638999999998787e-06, 8.777000000001478e-06, 9.152999999997857e-06, 9.180999999996997e-06, 9.304999999994179e-06, 9.124999999998717e-06, 9.346999999999828e-06, 9.278000000001452e-06, 9.625000000006156e-06, 9.278000000001452e-06, 9.278000000001452e-06, 9.138999999998287e-06, 9.306000000000592e-06, 8.638999999997787e-06, 8.791000000001048e-06, 8.832999999999758e-06, 9.179999999997523e-06, 9.292000000001022e-06, 9.665999999998454e-06, 8.791000000001048e-06, 9.693999999997593e-06, 9.306000000000592e-06, 8.986000000002492e-06, 8.792000000000522e-06, 8.958000000003352e-06, 9.542000000001272e-06, 9.416999999997677e-06, 8.958999999995887e-06, 9.124999999998717e-06, 9.292000000001022e-06, 9.151999999998384e-06, 8.735999999995303e-06]</msg>
<status status="PASS" starttime="20201030 18:27:25.116" endtime="20201030 18:27:25.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.106" endtime="20201030 18:27:25.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:25.133" endtime="20201030 18:27:25.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.127" endtime="20201030 18:27:25.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.124" endtime="20201030 18:27:25.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.625" endtime="20201030 18:27:25.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.623" endtime="20201030 18:27:25.158"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.178" endtime="20201030 18:27:25.192"></status>
</kw>
<msg timestamp="20201030 18:27:25.193" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.175" endtime="20201030 18:27:25.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.199" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.195" endtime="20201030 18:27:25.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.201" endtime="20201030 18:27:25.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.168" endtime="20201030 18:27:25.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.163" endtime="20201030 18:27:25.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.224" endtime="20201030 18:27:25.572"></status>
</kw>
<msg timestamp="20201030 18:27:25.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035949444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035958986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.221" endtime="20201030 18:27:25.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035949444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035958986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.582" endtime="20201030 18:27:25.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.600" endtime="20201030 18:27:25.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.214" endtime="20201030 18:27:25.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.209" endtime="20201030 18:27:25.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:25.617" level="INFO">${RESULT} = [{'diff': 9.542000000001272e-06}, {'diff': 9.096999999999578e-06}, {'diff': 9.152999999997857e-06}, {'diff': 8.61200000000506e-06}, {'diff': 8.972999999995457e-06}, {'diff': 8.624999999998217e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:25.609" endtime="20201030 18:27:25.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:25.631" level="INFO">${OVERHEAD} = {'diff': [9.542000000001272e-06, 9.096999999999578e-06, 9.152999999997857e-06, 8.61200000000506e-06, 8.972999999995457e-06, 8.624999999998217e-06, 9.124999999998717e-06, 9.151999999998384e-06, 9.00000...</msg>
<status status="PASS" starttime="20201030 18:27:25.619" endtime="20201030 18:27:25.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.641" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:25.639" endtime="20201030 18:27:25.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.647" level="INFO">VALUE: [9.542000000001272e-06, 9.096999999999578e-06, 9.152999999997857e-06, 8.61200000000506e-06, 8.972999999995457e-06, 8.624999999998217e-06, 9.124999999998717e-06, 9.151999999998384e-06, 9.000000000002062e-06, 8.638999999997787e-06, 8.916000000004642e-06, 9.264000000001882e-06, 8.959000000002826e-06, 9.458000000003852e-06, 9.305000000001118e-06, 8.764000000001382e-06, 9.457999999996913e-06, 8.972999999995457e-06, 8.959000000002826e-06, 8.610999999998648e-06, 9.138999999998287e-06, 9.125000000005656e-06, 9.305000000001118e-06, 8.860999999998898e-06, 8.819999999999661e-06, 9.138999999998287e-06, 8.778000000000952e-06, 9.374999999998967e-06, 9.472000000003422e-06, 9.652999999998357e-06, 8.973000000002396e-06, 9.320000000000161e-06, 8.917000000004116e-06, 9.139000000005226e-06, 9.138999999998287e-06, 8.832999999999758e-06, 8.624999999998217e-06, 8.971999999995983e-06, 9.444000000004282e-06, 9.458000000003852e-06, 9.139000000005226e-06, 8.806000000000092e-06, 9.319000000000688e-06, 9.124999999998717e-06, 9.292000000001022e-06, 8.778000000000952e-06, 9.292000000001022e-06, 8.819000000000188e-06, 9.139000000005226e-06, 9.137999999998814e-06]</msg>
<status status="PASS" starttime="20201030 18:27:25.644" endtime="20201030 18:27:25.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.633" endtime="20201030 18:27:25.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:25.660" endtime="20201030 18:27:25.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.656" endtime="20201030 18:27:25.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.653" endtime="20201030 18:27:25.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.160" endtime="20201030 18:27:25.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.159" endtime="20201030 18:27:25.686"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.707" endtime="20201030 18:27:25.719"></status>
</kw>
<msg timestamp="20201030 18:27:25.720" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.704" endtime="20201030 18:27:25.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.726" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.722" endtime="20201030 18:27:25.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.729" endtime="20201030 18:27:25.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.695" endtime="20201030 18:27:25.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.691" endtime="20201030 18:27:25.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.752" endtime="20201030 18:27:26.093"></status>
</kw>
<msg timestamp="20201030 18:27:26.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037512444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037521722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.748" endtime="20201030 18:27:26.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037512444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037521722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.103" endtime="20201030 18:27:26.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.122" endtime="20201030 18:27:26.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.741" endtime="20201030 18:27:26.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.737" endtime="20201030 18:27:26.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:26.139" level="INFO">${RESULT} = [{'diff': 9.278000000001452e-06}, {'diff': 8.971999999995983e-06}, {'diff': 8.639000000004726e-06}, {'diff': 8.638999999997787e-06}, {'diff': 9.124999999998717e-06}, {'diff': 9.124999999998717e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:26.130" endtime="20201030 18:27:26.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:26.150" level="INFO">${OVERHEAD} = {'diff': [9.278000000001452e-06, 8.971999999995983e-06, 8.639000000004726e-06, 8.638999999997787e-06, 9.124999999998717e-06, 9.124999999998717e-06, 9.320000000000161e-06, 8.791000000001048e-06, 9.3060...</msg>
<status status="PASS" starttime="20201030 18:27:26.141" endtime="20201030 18:27:26.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.160" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:26.157" endtime="20201030 18:27:26.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.165" level="INFO">VALUE: [9.278000000001452e-06, 8.971999999995983e-06, 8.639000000004726e-06, 8.638999999997787e-06, 9.124999999998717e-06, 9.124999999998717e-06, 9.320000000000161e-06, 8.791000000001048e-06, 9.306000000000592e-06, 9.304999999994179e-06, 8.959000000002826e-06, 8.749999999994873e-06, 8.624999999998217e-06, 8.637999999998314e-06, 9.472000000003422e-06, 9.292000000001022e-06, 8.888999999998037e-06, 8.929999999997273e-06, 8.972000000002922e-06, 9.124999999998717e-06, 9.096999999999578e-06, 9.165999999997954e-06, 8.971999999995983e-06, 8.971999999995983e-06, 9.472000000003422e-06, 9.292000000001022e-06, 9.306000000000592e-06, 8.624999999998217e-06, 8.792000000000522e-06, 9.291000000001548e-06, 8.971999999995983e-06, 8.791000000001048e-06, 8.805000000000618e-06, 8.958000000003352e-06, 9.486000000002992e-06, 9.472000000003422e-06, 9.305000000001118e-06, 9.278000000001452e-06, 8.637999999998314e-06, 9.306000000000592e-06, 8.652999999997357e-06, 9.125000000005656e-06, 9.457999999996913e-06, 8.972000000002922e-06, 8.610999999998648e-06, 8.986999999995027e-06, 9.429999999997773e-06, 8.583999999998981e-06, 9.458000000003852e-06, 9.111999999998621e-06]</msg>
<status status="PASS" starttime="20201030 18:27:26.162" endtime="20201030 18:27:26.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.152" endtime="20201030 18:27:26.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:26.177" endtime="20201030 18:27:26.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.173" endtime="20201030 18:27:26.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.171" endtime="20201030 18:27:26.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.687" endtime="20201030 18:27:26.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.686" endtime="20201030 18:27:26.202"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.222" endtime="20201030 18:27:26.236"></status>
</kw>
<msg timestamp="20201030 18:27:26.237" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.219" endtime="20201030 18:27:26.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.243" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.239" endtime="20201030 18:27:26.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.245" endtime="20201030 18:27:26.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.212" endtime="20201030 18:27:26.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.207" endtime="20201030 18:27:26.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.274" endtime="20201030 18:27:26.618"></status>
</kw>
<msg timestamp="20201030 18:27:26.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035815528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035824153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.270" endtime="20201030 18:27:26.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035815528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035824153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.628" endtime="20201030 18:27:26.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.646" endtime="20201030 18:27:26.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.261" endtime="20201030 18:27:26.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.254" endtime="20201030 18:27:26.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:26.664" level="INFO">${RESULT} = [{'diff': 8.624999999998217e-06}, {'diff': 9.096999999999578e-06}, {'diff': 9.680000000004962e-06}, {'diff': 9.430999999997247e-06}, {'diff': 9.624999999999218e-06}, {'diff': 8.916999999997177e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:26.655" endtime="20201030 18:27:26.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:26.673" level="INFO">${OVERHEAD} = {'diff': [8.624999999998217e-06, 9.096999999999578e-06, 9.680000000004962e-06, 9.430999999997247e-06, 9.624999999999218e-06, 8.916999999997177e-06, 9.124999999998717e-06, 8.651999999997884e-06, 8.9730...</msg>
<status status="PASS" starttime="20201030 18:27:26.666" endtime="20201030 18:27:26.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.686" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:26.684" endtime="20201030 18:27:26.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.692" level="INFO">VALUE: [8.624999999998217e-06, 9.096999999999578e-06, 9.680000000004962e-06, 9.430999999997247e-06, 9.624999999999218e-06, 8.916999999997177e-06, 9.124999999998717e-06, 8.651999999997884e-06, 8.973000000002396e-06, 9.208999999996137e-06, 9.179999999997523e-06, 9.624999999999218e-06, 8.667000000003866e-06, 8.541000000000798e-06, 8.792000000000522e-06, 9.457999999996913e-06, 8.959000000002826e-06, 8.763999999994443e-06, 8.973000000002396e-06, 9.153000000004796e-06, 8.957999999996413e-06, 8.806000000000092e-06, 8.791999999993583e-06, 8.958000000003352e-06, 8.639000000004726e-06, 8.792000000000522e-06, 8.973000000002396e-06, 8.596999999999078e-06, 8.639000000004726e-06, 9.665999999998454e-06, 9.152000000005323e-06, 8.791000000001048e-06, 8.972000000002922e-06, 8.971999999995983e-06, 9.125000000005656e-06, 8.957999999996413e-06, 9.443999999997343e-06, 8.624999999998217e-06, 8.624999999998217e-06, 8.806000000000092e-06, 9.444999999996817e-06, 9.139000000005226e-06, 9.292000000001022e-06, 8.625000000005156e-06, 9.124999999998717e-06, 8.957999999996413e-06, 9.624999999999218e-06, 8.666999999996927e-06, 9.472000000003422e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201030 18:27:26.688" endtime="20201030 18:27:26.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.675" endtime="20201030 18:27:26.695"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:26.705" endtime="20201030 18:27:26.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.700" endtime="20201030 18:27:26.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.697" endtime="20201030 18:27:26.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.204" endtime="20201030 18:27:26.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.203" endtime="20201030 18:27:26.730"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.750" endtime="20201030 18:27:26.764"></status>
</kw>
<msg timestamp="20201030 18:27:26.765" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.747" endtime="20201030 18:27:26.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.771" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.767" endtime="20201030 18:27:26.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.773" endtime="20201030 18:27:26.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.740" endtime="20201030 18:27:26.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.735" endtime="20201030 18:27:26.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.797" endtime="20201030 18:27:27.131"></status>
</kw>
<msg timestamp="20201030 18:27:27.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037514625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037523583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.793" endtime="20201030 18:27:27.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037514625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037523583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.140" endtime="20201030 18:27:27.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.159" endtime="20201030 18:27:27.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.786" endtime="20201030 18:27:27.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.781" endtime="20201030 18:27:27.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:27.176" level="INFO">${RESULT} = [{'diff': 8.957999999996413e-06}, {'diff': 9.485999999996053e-06}, {'diff': 9.124999999998717e-06}, {'diff': 8.958999999995887e-06}, {'diff': 8.638999999997787e-06}, {'diff': 9.471999999996483e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:27.167" endtime="20201030 18:27:27.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:27.185" level="INFO">${OVERHEAD} = {'diff': [8.957999999996413e-06, 9.485999999996053e-06, 9.124999999998717e-06, 8.958999999995887e-06, 8.638999999997787e-06, 9.471999999996483e-06, 9.457999999996913e-06, 9.318999999993749e-06, 9.0140...</msg>
<status status="PASS" starttime="20201030 18:27:27.178" endtime="20201030 18:27:27.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.195" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:27.193" endtime="20201030 18:27:27.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.200" level="INFO">VALUE: [8.957999999996413e-06, 9.485999999996053e-06, 9.124999999998717e-06, 8.958999999995887e-06, 8.638999999997787e-06, 9.471999999996483e-06, 9.457999999996913e-06, 9.318999999993749e-06, 9.014000000001632e-06, 9.278000000001452e-06, 9.472000000003422e-06, 9.499999999995623e-06, 9.472000000003422e-06, 8.806000000000092e-06, 8.959000000002826e-06, 8.637999999998314e-06, 9.319000000000688e-06, 8.638999999997787e-06, 8.583999999998981e-06, 9.000000000002062e-06, 8.680000000003962e-06, 8.917000000004116e-06, 9.471999999996483e-06, 9.124999999998717e-06, 8.916999999997177e-06, 8.805000000000618e-06, 9.194999999996567e-06, 8.596999999999078e-06, 9.124999999998717e-06, 8.777000000001478e-06, 8.792000000000522e-06, 9.471999999996483e-06, 9.306000000000592e-06, 8.652999999997357e-06, 9.028000000001202e-06, 9.458000000003852e-06, 9.138999999998287e-06, 9.042000000000772e-06, 8.624999999998217e-06, 9.042000000000772e-06, 9.472000000003422e-06, 9.096999999999578e-06, 9.222000000003172e-06, 8.973000000002396e-06, 9.486000000002992e-06, 9.014000000001632e-06, 8.777999999994013e-06, 8.959000000002826e-06, 8.638999999997787e-06, 9.124999999998717e-06]</msg>
<status status="PASS" starttime="20201030 18:27:27.197" endtime="20201030 18:27:27.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.187" endtime="20201030 18:27:27.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:27.214" endtime="20201030 18:27:27.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.208" endtime="20201030 18:27:27.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.206" endtime="20201030 18:27:27.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.732" endtime="20201030 18:27:27.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.731" endtime="20201030 18:27:27.239"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.259" endtime="20201030 18:27:27.271"></status>
</kw>
<msg timestamp="20201030 18:27:27.272" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.256" endtime="20201030 18:27:27.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.279" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.275" endtime="20201030 18:27:27.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.281" endtime="20201030 18:27:27.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.249" endtime="20201030 18:27:27.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.244" endtime="20201030 18:27:27.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.304" endtime="20201030 18:27:27.651"></status>
</kw>
<msg timestamp="20201030 18:27:27.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035788806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035797792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.301" endtime="20201030 18:27:27.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035788806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035797792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.661" endtime="20201030 18:27:27.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.680" endtime="20201030 18:27:27.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.293" endtime="20201030 18:27:27.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.289" endtime="20201030 18:27:27.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:27.699" level="INFO">${RESULT} = [{'diff': 8.986000000002492e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.637999999998314e-06}, {'diff': 9.472000000003422e-06}, {'diff': 8.973000000002396e-06}, {'diff': 9.139000000005226e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:27.688" endtime="20201030 18:27:27.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:27.717" level="INFO">${OVERHEAD} = {'diff': [8.986000000002492e-06, 8.778000000000952e-06, 8.637999999998314e-06, 9.472000000003422e-06, 8.973000000002396e-06, 9.139000000005226e-06, 9.457999999996913e-06, 9.472000000003422e-06, 9.1529...</msg>
<status status="PASS" starttime="20201030 18:27:27.706" endtime="20201030 18:27:27.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.728" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:27.725" endtime="20201030 18:27:27.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.739" level="INFO">VALUE: [8.986000000002492e-06, 8.778000000000952e-06, 8.637999999998314e-06, 9.472000000003422e-06, 8.973000000002396e-06, 9.139000000005226e-06, 9.457999999996913e-06, 9.472000000003422e-06, 9.152999999997857e-06, 9.124999999998717e-06, 9.138999999998287e-06, 9.138999999998287e-06, 8.652999999997357e-06, 8.819999999999661e-06, 9.485999999996053e-06, 9.485999999996053e-06, 9.305999999993653e-06, 8.971999999995983e-06, 9.431000000004186e-06, 8.860999999998898e-06, 9.306000000000592e-06, 8.806000000000092e-06, 8.957999999996413e-06, 8.944000000003782e-06, 9.292000000001022e-06, 9.263000000002408e-06, 9.165999999997954e-06, 9.096999999999578e-06, 9.360999999999398e-06, 8.679999999997023e-06, 9.306000000000592e-06, 9.235999999995803e-06, 8.833999999999231e-06, 9.471999999996483e-06, 9.443999999997343e-06, 8.624999999998217e-06, 8.778000000000952e-06, 9.472000000003422e-06, 9.263000000002408e-06, 9.306000000000592e-06, 8.944999999996317e-06, 9.472000000003422e-06, 8.957999999996413e-06, 9.124999999998717e-06, 9.485999999996053e-06, 8.986000000002492e-06, 9.110999999999148e-06, 9.320000000000161e-06, 8.625000000005156e-06, 9.457999999996913e-06]</msg>
<status status="PASS" starttime="20201030 18:27:27.733" endtime="20201030 18:27:27.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.719" endtime="20201030 18:27:27.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:27.766" endtime="20201030 18:27:27.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.757" endtime="20201030 18:27:27.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.752" endtime="20201030 18:27:27.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.241" endtime="20201030 18:27:27.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.240" endtime="20201030 18:27:27.800"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.843" endtime="20201030 18:27:27.859"></status>
</kw>
<msg timestamp="20201030 18:27:27.860" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.836" endtime="20201030 18:27:27.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.866" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.862" endtime="20201030 18:27:27.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.868" endtime="20201030 18:27:27.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.821" endtime="20201030 18:27:27.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.811" endtime="20201030 18:27:27.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.892" endtime="20201030 18:27:28.225"></status>
</kw>
<msg timestamp="20201030 18:27:28.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070337111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070346417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.888" endtime="20201030 18:27:28.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070337111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070346417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.234" endtime="20201030 18:27:28.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.253" endtime="20201030 18:27:28.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.881" endtime="20201030 18:27:28.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.876" endtime="20201030 18:27:28.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:28.270" level="INFO">${RESULT} = [{'diff': 9.306000000000592e-06}, {'diff': 8.610999999991709e-06}, {'diff': 9.152999999997857e-06}, {'diff': 9.306000000000592e-06}, {'diff': 9.306000000000592e-06}, {'diff': 9.305000000001118e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:28.261" endtime="20201030 18:27:28.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:28.281" level="INFO">${OVERHEAD} = {'diff': [9.306000000000592e-06, 8.610999999991709e-06, 9.152999999997857e-06, 9.306000000000592e-06, 9.306000000000592e-06, 9.305000000001118e-06, 8.638999999990848e-06, 8.943999999996843e-06, 9.4580...</msg>
<status status="PASS" starttime="20201030 18:27:28.272" endtime="20201030 18:27:28.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.291" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:28.289" endtime="20201030 18:27:28.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.296" level="INFO">VALUE: [9.306000000000592e-06, 8.610999999991709e-06, 9.152999999997857e-06, 9.306000000000592e-06, 9.306000000000592e-06, 9.305000000001118e-06, 8.638999999990848e-06, 8.943999999996843e-06, 9.458000000003852e-06, 8.861000000012775e-06, 9.014000000001632e-06, 9.624999999999218e-06, 9.277999999987574e-06, 9.014000000001632e-06, 9.139000000005226e-06, 8.806000000000092e-06, 9.318999999993749e-06, 9.014000000001632e-06, 9.139000000005226e-06, 8.638999999990848e-06, 8.639000000004726e-06, 9.110999999992209e-06, 9.29200000000796e-06, 9.124999999998717e-06, 9.29200000000796e-06, 9.306000000000592e-06, 9.277999999987574e-06, 9.29200000000796e-06, 8.972000000009861e-06, 9.291000000008487e-06, 8.986000000002492e-06, 9.069999999999911e-06, 8.791999999993583e-06, 9.291999999994083e-06, 9.333999999999731e-06, 8.79200000000746e-06, 9.306000000000592e-06, 9.430000000004712e-06, 9.096999999999578e-06, 9.263999999994943e-06, 9.458000000003852e-06, 9.458000000003852e-06, 8.79200000000746e-06, 9.417000000011555e-06, 8.806000000000092e-06, 8.903000000004546e-06, 8.959000000002826e-06, 9.625000000013095e-06, 9.041999999986894e-06, 8.819000000007127e-06]</msg>
<status status="PASS" starttime="20201030 18:27:28.293" endtime="20201030 18:27:28.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.283" endtime="20201030 18:27:28.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:28.309" endtime="20201030 18:27:28.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.304" endtime="20201030 18:27:28.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.302" endtime="20201030 18:27:28.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.804" endtime="20201030 18:27:28.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.802" endtime="20201030 18:27:28.334"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.354" endtime="20201030 18:27:28.366"></status>
</kw>
<msg timestamp="20201030 18:27:28.367" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.350" endtime="20201030 18:27:28.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.373" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.369" endtime="20201030 18:27:28.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.375" endtime="20201030 18:27:28.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.343" endtime="20201030 18:27:28.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.339" endtime="20201030 18:27:28.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.398" endtime="20201030 18:27:28.735"></status>
</kw>
<msg timestamp="20201030 18:27:28.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035796014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035805139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.395" endtime="20201030 18:27:28.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035796014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035805139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.744" endtime="20201030 18:27:28.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.764" endtime="20201030 18:27:28.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.388" endtime="20201030 18:27:28.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.383" endtime="20201030 18:27:28.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:28.782" level="INFO">${RESULT} = [{'diff': 9.124999999998717e-06}, {'diff': 9.137999999998814e-06}, {'diff': 8.597999999998551e-06}, {'diff': 9.472000000003422e-06}, {'diff': 8.638999999997787e-06}, {'diff': 9.486000000002992e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:28.773" endtime="20201030 18:27:28.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:28.791" level="INFO">${OVERHEAD} = {'diff': [9.124999999998717e-06, 9.137999999998814e-06, 8.597999999998551e-06, 9.472000000003422e-06, 8.638999999997787e-06, 9.486000000002992e-06, 8.986000000002492e-06, 8.638999999997787e-06, 9.1390...</msg>
<status status="PASS" starttime="20201030 18:27:28.784" endtime="20201030 18:27:28.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.801" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:28.799" endtime="20201030 18:27:28.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.806" level="INFO">VALUE: [9.124999999998717e-06, 9.137999999998814e-06, 8.597999999998551e-06, 9.472000000003422e-06, 8.638999999997787e-06, 9.486000000002992e-06, 8.986000000002492e-06, 8.638999999997787e-06, 9.139000000005226e-06, 9.151999999998384e-06, 8.972000000002922e-06, 9.513999999995193e-06, 8.610999999998648e-06, 9.167000000004366e-06, 8.819999999999661e-06, 8.611999999998121e-06, 8.653000000004296e-06, 9.471999999996483e-06, 9.471999999996483e-06, 8.666999999996927e-06, 9.458000000003852e-06, 9.11200000000556e-06, 8.944000000003782e-06, 9.430000000004712e-06, 9.320000000000161e-06, 8.957999999996413e-06, 9.486000000002992e-06, 8.944999999996317e-06, 9.458999999996387e-06, 9.486000000002992e-06, 9.471999999996483e-06, 9.486000000002992e-06, 8.791000000001048e-06, 8.943999999996843e-06, 9.124999999998717e-06, 8.972000000002922e-06, 9.292000000001022e-06, 8.819999999999661e-06, 8.639000000004726e-06, 8.804999999993679e-06, 9.179999999997523e-06, 8.791000000001048e-06, 8.806000000000092e-06, 9.125000000005656e-06, 8.624999999998217e-06, 8.958999999995887e-06, 8.778000000000952e-06, 8.639000000004726e-06, 8.958000000003352e-06, 9.263999999994943e-06]</msg>
<status status="PASS" starttime="20201030 18:27:28.803" endtime="20201030 18:27:28.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.793" endtime="20201030 18:27:28.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:28.819" endtime="20201030 18:27:28.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.814" endtime="20201030 18:27:28.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.812" endtime="20201030 18:27:28.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.335" endtime="20201030 18:27:28.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.334" endtime="20201030 18:27:28.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:18.176" endtime="20201030 18:27:28.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:28.854" endtime="20201030 18:27:28.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.849" endtime="20201030 18:27:28.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.847" endtime="20201030 18:27:28.877"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:18.049" endtime="20201030 18:27:28.878" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:28.895" endtime="20201030 18:27:28.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.891" endtime="20201030 18:27:28.919"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.953" endtime="20201030 18:27:28.968"></status>
</kw>
<msg timestamp="20201030 18:27:28.969" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.950" endtime="20201030 18:27:28.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.976" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.971" endtime="20201030 18:27:28.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.982" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:28.978" endtime="20201030 18:27:28.983"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:28.942" endtime="20201030 18:27:28.985"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:28.936" endtime="20201030 18:27:28.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.933" endtime="20201030 18:27:28.987"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:28.995" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:28.993" endtime="20201030 18:27:28.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.989" endtime="20201030 18:27:28.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.932" endtime="20201030 18:27:28.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.930" endtime="20201030 18:27:28.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.998" endtime="20201030 18:27:29.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.924" endtime="20201030 18:27:29.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.920" endtime="20201030 18:27:29.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.889" endtime="20201030 18:27:29.005"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.027" endtime="20201030 18:27:29.047"></status>
</kw>
<msg timestamp="20201030 18:27:29.049" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.024" endtime="20201030 18:27:29.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.056" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.051" endtime="20201030 18:27:29.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.058" endtime="20201030 18:27:29.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.017" endtime="20201030 18:27:29.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.011" endtime="20201030 18:27:29.065"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.069" endtime="20201030 18:27:29.074"></status>
</kw>
<msg timestamp="20201030 18:27:29.075" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:29.066" endtime="20201030 18:27:29.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.084" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:29.082" endtime="20201030 18:27:29.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.092" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:29.088" endtime="20201030 18:27:29.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.076" endtime="20201030 18:27:29.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.107" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:29.104" endtime="20201030 18:27:29.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.111" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:29.109" endtime="20201030 18:27:29.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.096" endtime="20201030 18:27:29.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.130" endtime="20201030 18:27:29.473"></status>
</kw>
<msg timestamp="20201030 18:27:29.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.123668556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.123684681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.126" endtime="20201030 18:27:29.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.123668556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.123684681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.482" endtime="20201030 18:27:29.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.505" endtime="20201030 18:27:29.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.119" endtime="20201030 18:27:29.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.115" endtime="20201030 18:27:29.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:29.527" level="INFO">${RESULT} = [{'diff': 1.6125000000005718e-05}, {'diff': 1.6556000000000903e-05}, {'diff': 1.6834000000007232e-05}, {'diff': 1.681900000000125e-05}, {'diff': 1.666699999999799e-05}, {'diff': 1.6500000000002624e-05...</msg>
<status status="PASS" starttime="20201030 18:27:29.516" endtime="20201030 18:27:29.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:29.540" level="INFO">${OVERHEAD} = {'diff': [1.6125000000005718e-05, 1.6556000000000903e-05, 1.6834000000007232e-05, 1.681900000000125e-05, 1.666699999999799e-05, 1.6500000000002624e-05, 1.636099999999252e-05, 1.6152000000005384e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:27:29.531" endtime="20201030 18:27:29.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.554" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 18:27:29.551" endtime="20201030 18:27:29.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.560" level="INFO">VALUE: [1.6125000000005718e-05, 1.6556000000000903e-05, 1.6834000000007232e-05, 1.681900000000125e-05, 1.666699999999799e-05, 1.6500000000002624e-05, 1.636099999999252e-05, 1.6152000000005384e-05, 1.633300000000726e-05, 1.6165999999998015e-05, 1.6833999999993354e-05, 1.6180000000004524e-05, 1.634699999999989e-05, 1.6000000000002124e-05, 1.6179999999990646e-05, 1.666699999999799e-05, 1.6500000000002624e-05, 1.683299999999388e-05, 1.6305999999993714e-05, 1.665299999999148e-05, 1.631900000000075e-05, 1.6653000000005358e-05, 1.6000000000002124e-05, 1.6485999999996115e-05, 1.5945000000003318e-05, 1.6764000000002444e-05, 1.6667000000011867e-05, 1.6486000000009993e-05, 1.6679999999991146e-05, 1.5971999999989106e-05, 1.6861000000006898e-05, 1.633299999999338e-05, 1.684700000000039e-05, 1.634699999999989e-05, 1.6500000000002624e-05, 1.6181000000003998e-05, 1.5985999999995615e-05, 1.684700000000039e-05, 1.6209000000003138e-05, 1.6903000000012547e-05, 1.680499999999474e-05, 1.6834000000007232e-05, 1.684700000000039e-05, 1.6181000000003998e-05, 1.6665999999998515e-05, 1.6485999999996115e-05, 1.684700000000039e-05, 1.684700000000039e-05, 1.6833999999993354e-05, 1.6014000000008632e-05]</msg>
<status status="PASS" starttime="20201030 18:27:29.556" endtime="20201030 18:27:29.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.543" endtime="20201030 18:27:29.562"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:29.573" endtime="20201030 18:27:29.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.569" endtime="20201030 18:27:29.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.565" endtime="20201030 18:27:29.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.006" endtime="20201030 18:27:29.598"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:28.882" endtime="20201030 18:27:29.599" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:29.616" endtime="20201030 18:27:29.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.613" endtime="20201030 18:27:29.640"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.672" endtime="20201030 18:27:29.688"></status>
</kw>
<msg timestamp="20201030 18:27:29.689" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.669" endtime="20201030 18:27:29.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.695" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.691" endtime="20201030 18:27:29.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.702" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:29.697" endtime="20201030 18:27:29.702"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:29.662" endtime="20201030 18:27:29.704"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:29.656" endtime="20201030 18:27:29.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.653" endtime="20201030 18:27:29.706"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:29.714" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:29.713" endtime="20201030 18:27:29.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.708" endtime="20201030 18:27:29.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.651" endtime="20201030 18:27:29.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.649" endtime="20201030 18:27:29.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.717" endtime="20201030 18:27:29.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.645" endtime="20201030 18:27:29.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.641" endtime="20201030 18:27:29.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.610" endtime="20201030 18:27:29.724"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.749" endtime="20201030 18:27:29.862"></status>
</kw>
<msg timestamp="20201030 18:27:29.864" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.744" endtime="20201030 18:27:29.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.873" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.867" endtime="20201030 18:27:29.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.875" endtime="20201030 18:27:29.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.736" endtime="20201030 18:27:29.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.730" endtime="20201030 18:27:29.882"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.887" endtime="20201030 18:27:29.892"></status>
</kw>
<msg timestamp="20201030 18:27:29.893" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:29.884" endtime="20201030 18:27:29.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.902" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:29.900" endtime="20201030 18:27:29.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.907" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:29.905" endtime="20201030 18:27:29.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.894" endtime="20201030 18:27:29.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.919" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:29.916" endtime="20201030 18:27:29.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.923" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:29.921" endtime="20201030 18:27:29.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.910" endtime="20201030 18:27:29.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.942" endtime="20201030 18:27:30.302"></status>
</kw>
<msg timestamp="20201030 18:27:30.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126340819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126396556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.939" endtime="20201030 18:27:30.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126340819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.126396556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.311" endtime="20201030 18:27:30.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.329" endtime="20201030 18:27:30.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.931" endtime="20201030 18:27:30.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.927" endtime="20201030 18:27:30.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:30.346" level="INFO">${RESULT} = [{'diff': 5.573700000000015e-05}, {'diff': 5.604200000000614e-05}, {'diff': 5.606899999999193e-05}, {'diff': 5.608400000001179e-05}, {'diff': 5.604200000000614e-05}, {'diff': 5.6055999999998773e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:30.337" endtime="20201030 18:27:30.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:30.360" level="INFO">${OVERHEAD} = {'diff': [5.573700000000015e-05, 5.604200000000614e-05, 5.606899999999193e-05, 5.608400000001179e-05, 5.604200000000614e-05, 5.6055999999998773e-05, 5.606899999999193e-05, 5.608300000001232e-05, 5.605...</msg>
<status status="PASS" starttime="20201030 18:27:30.348" endtime="20201030 18:27:30.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.372" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 18:27:30.370" endtime="20201030 18:27:30.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.377" level="INFO">VALUE: [5.573700000000015e-05, 5.604200000000614e-05, 5.606899999999193e-05, 5.608400000001179e-05, 5.604200000000614e-05, 5.6055999999998773e-05, 5.606899999999193e-05, 5.608300000001232e-05, 5.6055999999998773e-05, 5.6055999999998773e-05, 5.608300000001232e-05, 5.606899999999193e-05, 5.60549999999993e-05, 5.611099999999758e-05, 5.6235999999987296e-05, 5.604200000000614e-05, 5.608300000001232e-05, 5.608299999998456e-05, 5.60549999999993e-05, 5.60549999999993e-05, 5.598600000000786e-05, 5.608299999998456e-05, 5.6000000000000494e-05, 5.622299999999414e-05, 5.6069000000019686e-05, 5.6069999999991404e-05, 5.604100000000667e-05, 5.613899999998284e-05, 5.608300000001232e-05, 5.606899999999193e-05, 5.61390000000106e-05, 5.6055999999998773e-05, 5.6069999999991404e-05, 5.608299999998456e-05, 5.604099999997891e-05, 5.624999999997993e-05, 5.6221999999994665e-05, 5.6223000000021894e-05, 5.606899999999193e-05, 5.608299999998456e-05, 5.6069999999991404e-05, 5.6069999999991404e-05, 5.608300000001232e-05, 5.608299999998456e-05, 5.629200000001333e-05, 5.613899999998284e-05, 5.6069999999991404e-05, 5.608400000001179e-05, 5.60549999999993e-05, 5.606899999999193e-05]</msg>
<status status="PASS" starttime="20201030 18:27:30.374" endtime="20201030 18:27:30.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.362" endtime="20201030 18:27:30.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:30.389" endtime="20201030 18:27:30.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.385" endtime="20201030 18:27:30.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.382" endtime="20201030 18:27:30.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.726" endtime="20201030 18:27:30.414"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:29.604" endtime="20201030 18:27:30.415" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:30.432" endtime="20201030 18:27:30.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.429" endtime="20201030 18:27:30.455"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.494" endtime="20201030 18:27:30.516"></status>
</kw>
<msg timestamp="20201030 18:27:30.518" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.489" endtime="20201030 18:27:30.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.526" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.520" endtime="20201030 18:27:30.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.535" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:30.530" endtime="20201030 18:27:30.536"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:30.481" endtime="20201030 18:27:30.539"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:30.471" endtime="20201030 18:27:30.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.469" endtime="20201030 18:27:30.542"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:30.550" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:30.549" endtime="20201030 18:27:30.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.544" endtime="20201030 18:27:30.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.467" endtime="20201030 18:27:30.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.465" endtime="20201030 18:27:30.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.554" endtime="20201030 18:27:30.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.461" endtime="20201030 18:27:30.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.457" endtime="20201030 18:27:30.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.426" endtime="20201030 18:27:30.561"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.587" endtime="20201030 18:27:30.908"></status>
</kw>
<msg timestamp="20201030 18:27:30.909" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.584" endtime="20201030 18:27:30.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.916" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.911" endtime="20201030 18:27:30.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.918" endtime="20201030 18:27:30.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.576" endtime="20201030 18:27:30.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.568" endtime="20201030 18:27:30.925"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.930" endtime="20201030 18:27:30.934"></status>
</kw>
<msg timestamp="20201030 18:27:30.935" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:30.927" endtime="20201030 18:27:30.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.946" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:30.943" endtime="20201030 18:27:30.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.950" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:30.948" endtime="20201030 18:27:30.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.937" endtime="20201030 18:27:30.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.962" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:30.960" endtime="20201030 18:27:30.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.967" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:30.965" endtime="20201030 18:27:30.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.954" endtime="20201030 18:27:30.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.986" endtime="20201030 18:27:31.381"></status>
</kw>
<msg timestamp="20201030 18:27:31.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.152273722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.152373681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.983" endtime="20201030 18:27:31.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.152273722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.152373681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.390" endtime="20201030 18:27:31.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.409" endtime="20201030 18:27:31.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.975" endtime="20201030 18:27:31.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.970" endtime="20201030 18:27:31.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:31.427" level="INFO">${RESULT} = [{'diff': 9.995900000001057e-05}, {'diff': 9.908399999999928e-05}, {'diff': 9.924999999999518e-05}, {'diff': 9.924999999999518e-05}, {'diff': 9.920800000001728e-05}, {'diff': 9.9208999999989e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:31.417" endtime="20201030 18:27:31.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:31.437" level="INFO">${OVERHEAD} = {'diff': [9.995900000001057e-05, 9.908399999999928e-05, 9.924999999999518e-05, 9.924999999999518e-05, 9.920800000001728e-05, 9.9208999999989e-05, 9.923600000000254e-05, 9.925000000002293e-05, 9.924999...</msg>
<status status="PASS" starttime="20201030 18:27:31.429" endtime="20201030 18:27:31.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.450" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 18:27:31.448" endtime="20201030 18:27:31.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.455" level="INFO">VALUE: [9.995900000001057e-05, 9.908399999999928e-05, 9.924999999999518e-05, 9.924999999999518e-05, 9.920800000001728e-05, 9.9208999999989e-05, 9.923600000000254e-05, 9.925000000002293e-05, 9.924999999999518e-05, 9.924999999999518e-05, 9.912500000000546e-05, 9.906899999997942e-05, 9.924999999999518e-05, 9.925000000002293e-05, 9.912500000000546e-05, 9.924999999999518e-05, 9.924999999999518e-05, 9.92219999999544e-05, 9.929100000000135e-05, 9.923599999994703e-05, 9.927799999998044e-05, 9.909699999999244e-05, 9.930499999999398e-05, 9.924999999999518e-05, 9.911099999998507e-05, 9.924999999999518e-05, 9.920799999996177e-05, 9.929199999997307e-05, 9.923600000000254e-05, 9.927799999998044e-05, 9.926400000004332e-05, 9.9028000000001e-05, 9.92639999999878e-05, 9.905600000004178e-05, 9.905500000001455e-05, 9.90699999999789e-05, 9.927800000003595e-05, 9.933300000003475e-05, 9.909699999999244e-05, 9.92639999999878e-05, 9.927799999998044e-05, 9.92639999999878e-05, 9.908299999999981e-05, 9.927800000003595e-05, 9.900000000001574e-05, 9.924999999999518e-05, 9.924999999999518e-05, 9.92639999999878e-05, 9.931900000004212e-05, 9.919400000002465e-05]</msg>
<status status="PASS" starttime="20201030 18:27:31.452" endtime="20201030 18:27:31.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.440" endtime="20201030 18:27:31.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.467" endtime="20201030 18:27:31.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.463" endtime="20201030 18:27:31.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.461" endtime="20201030 18:27:31.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.563" endtime="20201030 18:27:31.492"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:30.420" endtime="20201030 18:27:31.494" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.512" endtime="20201030 18:27:31.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.508" endtime="20201030 18:27:31.535"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.569" endtime="20201030 18:27:31.591"></status>
</kw>
<msg timestamp="20201030 18:27:31.593" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.566" endtime="20201030 18:27:31.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.602" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.596" endtime="20201030 18:27:31.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.610" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:31.604" endtime="20201030 18:27:31.611"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:31.558" endtime="20201030 18:27:31.613"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:31.552" endtime="20201030 18:27:31.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.549" endtime="20201030 18:27:31.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:31.627" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:31.625" endtime="20201030 18:27:31.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.619" endtime="20201030 18:27:31.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.547" endtime="20201030 18:27:31.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.546" endtime="20201030 18:27:31.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.633" endtime="20201030 18:27:31.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.541" endtime="20201030 18:27:31.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.537" endtime="20201030 18:27:31.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.505" endtime="20201030 18:27:31.643"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.667" endtime="20201030 18:27:31.693"></status>
</kw>
<msg timestamp="20201030 18:27:31.694" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.663" endtime="20201030 18:27:31.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.701" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.697" endtime="20201030 18:27:31.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.703" endtime="20201030 18:27:31.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.656" endtime="20201030 18:27:31.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.650" endtime="20201030 18:27:31.710"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.715" endtime="20201030 18:27:31.719"></status>
</kw>
<msg timestamp="20201030 18:27:31.721" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:31.712" endtime="20201030 18:27:31.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.731" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:31.728" endtime="20201030 18:27:31.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.735" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:31.733" endtime="20201030 18:27:31.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.722" endtime="20201030 18:27:31.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.747" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:31.745" endtime="20201030 18:27:31.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.752" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:31.750" endtime="20201030 18:27:31.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.739" endtime="20201030 18:27:31.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.771" endtime="20201030 18:27:32.136"></status>
</kw>
<msg timestamp="20201030 18:27:32.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.147451764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.147454069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.768" endtime="20201030 18:27:32.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.147451764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.147454069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.146" endtime="20201030 18:27:32.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.165" endtime="20201030 18:27:32.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.760" endtime="20201030 18:27:32.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.755" endtime="20201030 18:27:32.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:32.185" level="INFO">${RESULT} = [{'diff': 2.3049999999802395e-06}, {'diff': 2.3049999999802395e-06}, {'diff': 2.195000000010383e-06}, {'diff': 2.277999999994451e-06}, {'diff': 2.277999999994451e-06}, {'diff': 2.26400000000182e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:32.176" endtime="20201030 18:27:32.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:32.195" level="INFO">${OVERHEAD} = {'diff': [2.3049999999802395e-06, 2.3049999999802395e-06, 2.195000000010383e-06, 2.277999999994451e-06, 2.277999999994451e-06, 2.26400000000182e-06, 2.250000000009189e-06, 2.305999999979713e-06, 2.235...</msg>
<status status="PASS" starttime="20201030 18:27:32.187" endtime="20201030 18:27:32.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.207" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 18:27:32.204" endtime="20201030 18:27:32.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.212" level="INFO">VALUE: [2.3049999999802395e-06, 2.3049999999802395e-06, 2.195000000010383e-06, 2.277999999994451e-06, 2.277999999994451e-06, 2.26400000000182e-06, 2.250000000009189e-06, 2.305999999979713e-06, 2.2359999999888025e-06, 2.26400000000182e-06, 2.277999999994451e-06, 2.2639999999740645e-06, 2.2080000000035405e-06, 2.2359999999888025e-06, 2.2769999999949775e-06, 2.2630000000023465e-06, 2.277999999994451e-06, 2.277999999994451e-06, 2.2219999999961715e-06, 2.250000000009189e-06, 2.26400000000182e-06, 2.236000000016558e-06, 2.26400000000182e-06, 2.2499999999814335e-06, 2.250000000009189e-06, 2.26400000000182e-06, 2.2359999999888025e-06, 2.250000000009189e-06, 2.305000000007995e-06, 2.250000000009189e-06, 2.2499999999814335e-06, 2.250000000009189e-06, 2.305000000007995e-06, 2.2359999999888025e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.250000000009189e-06, 2.2359999999888025e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.2219999999961715e-06, 2.2359999999888025e-06, 2.250000000009189e-06, 2.3049999999802395e-06, 2.250000000009189e-06, 2.1949999999826275e-06, 2.3200000000000998e-06, 2.26400000000182e-06, 2.3189999999728705e-06, 2.2630000000023465e-06]</msg>
<status status="PASS" starttime="20201030 18:27:32.209" endtime="20201030 18:27:32.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.197" endtime="20201030 18:27:32.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:32.224" endtime="20201030 18:27:32.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.220" endtime="20201030 18:27:32.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.217" endtime="20201030 18:27:32.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.644" endtime="20201030 18:27:32.250"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:31.499" endtime="20201030 18:27:32.251" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:32.279" endtime="20201030 18:27:32.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.274" endtime="20201030 18:27:32.305"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.341" endtime="20201030 18:27:32.356"></status>
</kw>
<msg timestamp="20201030 18:27:32.357" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.337" endtime="20201030 18:27:32.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.364" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.360" endtime="20201030 18:27:32.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.370" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:32.366" endtime="20201030 18:27:32.371"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:32.330" endtime="20201030 18:27:32.373"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:32.324" endtime="20201030 18:27:32.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.321" endtime="20201030 18:27:32.375"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:32.383" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:32.382" endtime="20201030 18:27:32.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.377" endtime="20201030 18:27:32.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.318" endtime="20201030 18:27:32.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.316" endtime="20201030 18:27:32.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.386" endtime="20201030 18:27:32.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.312" endtime="20201030 18:27:32.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.307" endtime="20201030 18:27:32.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.270" endtime="20201030 18:27:32.394"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.416" endtime="20201030 18:27:32.526"></status>
</kw>
<msg timestamp="20201030 18:27:32.527" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.413" endtime="20201030 18:27:32.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.534" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.530" endtime="20201030 18:27:32.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.536" endtime="20201030 18:27:32.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.406" endtime="20201030 18:27:32.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.400" endtime="20201030 18:27:32.543"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.549" endtime="20201030 18:27:32.554"></status>
</kw>
<msg timestamp="20201030 18:27:32.555" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:32.545" endtime="20201030 18:27:32.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.565" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:32.563" endtime="20201030 18:27:32.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.572" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:32.569" endtime="20201030 18:27:32.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.557" endtime="20201030 18:27:32.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.587" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:32.582" endtime="20201030 18:27:32.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.594" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:32.589" endtime="20201030 18:27:32.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.575" endtime="20201030 18:27:32.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.616" endtime="20201030 18:27:32.970"></status>
</kw>
<msg timestamp="20201030 18:27:32.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130556931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1305695, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:32.613" endtime="20201030 18:27:32.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130556931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1305695, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:32.982" endtime="20201030 18:27:33.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.006" endtime="20201030 18:27:33.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.604" endtime="20201030 18:27:33.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.598" endtime="20201030 18:27:33.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:33.027" level="INFO">${RESULT} = [{'diff': 1.2569000000017816e-05}, {'diff': 1.2540999999977043e-05}, {'diff': 1.2526999999984412e-05}, {'diff': 1.2527999999983885e-05}, {'diff': 1.2541000000004798e-05}, {'diff': 1.2528000000011641e-...</msg>
<status status="PASS" starttime="20201030 18:27:33.017" endtime="20201030 18:27:33.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:33.036" level="INFO">${OVERHEAD} = {'diff': [1.2569000000017816e-05, 1.2540999999977043e-05, 1.2526999999984412e-05, 1.2527999999983885e-05, 1.2541000000004798e-05, 1.2528000000011641e-05, 1.2541000000004798e-05, 1.2541000000004798e-05...</msg>
<status status="PASS" starttime="20201030 18:27:33.029" endtime="20201030 18:27:33.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.047" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 18:27:33.045" endtime="20201030 18:27:33.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.052" level="INFO">VALUE: [1.2569000000017816e-05, 1.2540999999977043e-05, 1.2526999999984412e-05, 1.2527999999983885e-05, 1.2541000000004798e-05, 1.2528000000011641e-05, 1.2541000000004798e-05, 1.2541000000004798e-05, 1.2541000000004798e-05, 1.2555999999996903e-05, 1.251400000001901e-05, 1.2583000000010447e-05, 1.2541000000004798e-05, 1.255499999999743e-05, 1.2555999999996903e-05, 1.2528000000011641e-05, 1.2527000000012167e-05, 1.2542000000004272e-05, 1.2486000000005992e-05, 1.2528000000011641e-05, 1.2542000000004272e-05, 1.2542000000004272e-05, 1.2542000000004272e-05, 1.2528000000011641e-05, 1.2541999999976516e-05, 1.2542000000004272e-05, 1.2555999999996903e-05, 1.2527999999983885e-05, 1.2542000000004272e-05, 1.2527999999983885e-05, 1.2582999999982691e-05, 1.2528000000011641e-05, 1.2528000000011641e-05, 1.257000000001729e-05, 1.2471999999985606e-05, 1.2528000000011641e-05, 1.2528000000011641e-05, 1.255499999999743e-05, 1.2513999999991254e-05, 1.2513999999991254e-05, 1.2528000000011641e-05, 1.251400000001901e-05, 1.2541999999976516e-05, 1.2541999999976516e-05, 1.2513999999991254e-05, 1.2526999999984412e-05, 1.255499999999743e-05, 1.2513999999991254e-05, 1.2583000000010447e-05, 1.2555999999996903e-05]</msg>
<status status="PASS" starttime="20201030 18:27:33.049" endtime="20201030 18:27:33.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.038" endtime="20201030 18:27:33.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:33.066" endtime="20201030 18:27:33.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.060" endtime="20201030 18:27:33.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.057" endtime="20201030 18:27:33.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.395" endtime="20201030 18:27:33.090"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:32.257" endtime="20201030 18:27:33.092" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:33.109" endtime="20201030 18:27:33.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.105" endtime="20201030 18:27:33.132"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.165" endtime="20201030 18:27:33.180"></status>
</kw>
<msg timestamp="20201030 18:27:33.181" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.162" endtime="20201030 18:27:33.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.188" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.184" endtime="20201030 18:27:33.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.194" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:33.190" endtime="20201030 18:27:33.195"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:33.155" endtime="20201030 18:27:33.197"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:33.148" endtime="20201030 18:27:33.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.146" endtime="20201030 18:27:33.199"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:33.207" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:33.205" endtime="20201030 18:27:33.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.201" endtime="20201030 18:27:33.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.144" endtime="20201030 18:27:33.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.142" endtime="20201030 18:27:33.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.211" endtime="20201030 18:27:33.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.138" endtime="20201030 18:27:33.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.134" endtime="20201030 18:27:33.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.103" endtime="20201030 18:27:33.218"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.242" endtime="20201030 18:27:33.560"></status>
</kw>
<msg timestamp="20201030 18:27:33.562" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.237" endtime="20201030 18:27:33.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.568" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.564" endtime="20201030 18:27:33.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.570" endtime="20201030 18:27:33.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.230" endtime="20201030 18:27:33.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.224" endtime="20201030 18:27:33.577"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.582" endtime="20201030 18:27:33.586"></status>
</kw>
<msg timestamp="20201030 18:27:33.587" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:27:33.579" endtime="20201030 18:27:33.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.604" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:33.599" endtime="20201030 18:27:33.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.610" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:33.607" endtime="20201030 18:27:33.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.589" endtime="20201030 18:27:33.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.622" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:33.620" endtime="20201030 18:27:33.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.626" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:33.624" endtime="20201030 18:27:33.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.614" endtime="20201030 18:27:33.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.645" endtime="20201030 18:27:34.010"></status>
</kw>
<msg timestamp="20201030 18:27:34.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130782, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130804972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:33.642" endtime="20201030 18:27:34.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130782, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130804972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:34.019" endtime="20201030 18:27:34.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.036" endtime="20201030 18:27:34.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.635" endtime="20201030 18:27:34.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.630" endtime="20201030 18:27:34.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:34.061" level="INFO">${RESULT} = [{'diff': 2.297199999998223e-05}, {'diff': 2.2973000000009458e-05}, {'diff': 2.3000000000023002e-05}, {'diff': 2.2972000000009984e-05}, {'diff': 2.2957999999989598e-05}, {'diff': 2.2901999999991318e-0...</msg>
<status status="PASS" starttime="20201030 18:27:34.048" endtime="20201030 18:27:34.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:34.081" level="INFO">${OVERHEAD} = {'diff': [2.297199999998223e-05, 2.2973000000009458e-05, 2.3000000000023002e-05, 2.2972000000009984e-05, 2.2957999999989598e-05, 2.2901999999991318e-05, 2.2986000000002615e-05, 2.2957999999989598e-05,...</msg>
<status status="PASS" starttime="20201030 18:27:34.070" endtime="20201030 18:27:34.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.095" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 18:27:34.092" endtime="20201030 18:27:34.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.102" level="INFO">VALUE: [2.297199999998223e-05, 2.2973000000009458e-05, 2.3000000000023002e-05, 2.2972000000009984e-05, 2.2957999999989598e-05, 2.2901999999991318e-05, 2.2986000000002615e-05, 2.2957999999989598e-05, 2.2999999999995246e-05, 2.2972000000009984e-05, 2.2999999999995246e-05, 2.2986000000002615e-05, 2.2986000000002615e-05, 2.2999999999995246e-05, 2.2999999999995246e-05, 2.2986000000002615e-05, 2.2986000000002615e-05, 2.2957999999989598e-05, 2.2973000000009458e-05, 2.2957999999989598e-05, 2.2999999999995246e-05, 2.2986000000002615e-05, 2.2957999999961842e-05, 2.2972000000009984e-05, 2.2958000000017353e-05, 2.295899999998907e-05, 2.2971999999954473e-05, 2.2971999999954473e-05, 2.2958000000017353e-05, 2.2972000000009984e-05, 2.2972000000009984e-05, 2.2972000000009984e-05, 2.2972000000009984e-05, 2.2971999999954473e-05, 2.2999999999995246e-05, 2.2986000000002615e-05, 2.2987000000029845e-05, 2.2986000000002615e-05, 2.293100000000381e-05, 2.2986000000002615e-05, 2.2986000000002615e-05, 2.2999999999995246e-05, 2.2986000000002615e-05, 2.295899999998907e-05, 2.2972999999981703e-05, 2.2986000000002615e-05, 2.2986000000002615e-05, 2.2972999999981703e-05, 2.294399999996921e-05, 2.2986000000002615e-05]</msg>
<status status="PASS" starttime="20201030 18:27:34.098" endtime="20201030 18:27:34.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.083" endtime="20201030 18:27:34.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.116" endtime="20201030 18:27:34.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.111" endtime="20201030 18:27:34.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.108" endtime="20201030 18:27:34.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.220" endtime="20201030 18:27:34.141"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:33.096" endtime="20201030 18:27:34.142" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.159" endtime="20201030 18:27:34.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.156" endtime="20201030 18:27:34.192"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.262" endtime="20201030 18:27:34.297"></status>
</kw>
<msg timestamp="20201030 18:27:34.298" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.256" endtime="20201030 18:27:34.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.305" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.300" endtime="20201030 18:27:34.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.311" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:34.307" endtime="20201030 18:27:34.312"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:34.243" endtime="20201030 18:27:34.314"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:34.230" endtime="20201030 18:27:34.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.224" endtime="20201030 18:27:34.316"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:34.325" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:34.323" endtime="20201030 18:27:34.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.319" endtime="20201030 18:27:34.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.219" endtime="20201030 18:27:34.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.216" endtime="20201030 18:27:34.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.328" endtime="20201030 18:27:34.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.205" endtime="20201030 18:27:34.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.195" endtime="20201030 18:27:34.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.153" endtime="20201030 18:27:34.335"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.347" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:34.363" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:36.404" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:34.341" endtime="20201030 18:27:36.406"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.412" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:27:36.408" endtime="20201030 18:27:36.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.337" endtime="20201030 18:27:36.414"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.440" endtime="20201030 18:27:36.449"></status>
</kw>
<msg timestamp="20201030 18:27:36.450" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.436" endtime="20201030 18:27:36.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.456" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.452" endtime="20201030 18:27:36.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.458" endtime="20201030 18:27:36.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.428" endtime="20201030 18:27:36.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.422" endtime="20201030 18:27:36.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.483" endtime="20201030 18:27:36.841"></status>
</kw>
<msg timestamp="20201030 18:27:36.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.830373222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.162093306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.479" endtime="20201030 18:27:36.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.830373222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.162093306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.850" endtime="20201030 18:27:36.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.870" endtime="20201030 18:27:36.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.472" endtime="20201030 18:27:36.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.467" endtime="20201030 18:27:36.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:36.886" level="INFO">${PHILIP_RES} = [{'diff': 0.3317200840000001}, {'diff': 0.006885528000000196}, {'diff': 1.7069000000091705e-05}, {'diff': 1.645800000016351e-05}, {'diff': 1.6415999999797037e-05}, {'diff': 1.6416000000241127e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:36.878" endtime="20201030 18:27:36.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:36.897" level="INFO">${RESULT} = {'diff': [0.3317200840000001, 0.006885528000000196, 1.7069000000091705e-05, 1.645800000016351e-05, 1.6415999999797037e-05, 1.6416000000241127e-05, 1.65970000001181e-05, 1.6431000000149965e-05, 1.64309...</msg>
<status status="PASS" starttime="20201030 18:27:36.888" endtime="20201030 18:27:36.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.908" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:36.906" endtime="20201030 18:27:36.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.914" level="INFO">VALUE: [0.3317200840000001, 0.006885528000000196, 1.7069000000091705e-05, 1.645800000016351e-05, 1.6415999999797037e-05, 1.6416000000241127e-05, 1.65970000001181e-05, 1.6431000000149965e-05, 1.6430999999705875e-05, 1.6431000000149965e-05, 1.6583999999930654e-05, 1.640300000005368e-05, 1.645899999980216e-05, 1.6431000000149965e-05, 1.659800000020084e-05, 1.6416999999879778e-05, 1.6431000000149965e-05, 1.6443999999893322e-05, 1.655500000019572e-05, 1.6429999999623135e-05, 1.6415999999797037e-05, 1.6443999999893322e-05, 1.665200000022793e-05, 1.6430999999705875e-05, 1.6430999999705875e-05, 1.6430999999705875e-05, 1.6610999999944198e-05, 1.6443999999893322e-05, 1.6416000000241127e-05, 1.65970000001181e-05, 1.6430000000067224e-05, 1.6415999999797037e-05, 1.644400000033741e-05, 1.6443999999893322e-05, 1.6570000000104557e-05, 1.6416999999879778e-05, 1.6444999999976062e-05, 1.645900000024625e-05, 1.659800000020084e-05, 1.644400000033741e-05, 1.645800000016351e-05, 1.6430000000067224e-05, 1.65970000001181e-05, 1.6415999999797037e-05, 1.6415999999797037e-05, 1.6430000000067224e-05, 1.6611000000388287e-05, 1.645900000024625e-05, 1.6473000000072346e-05, 1.6431000000149965e-05, 1.661200000002694e-05, 1.6431000000149965e-05]</msg>
<status status="PASS" starttime="20201030 18:27:36.911" endtime="20201030 18:27:36.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.900" endtime="20201030 18:27:36.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:36.926" endtime="20201030 18:27:36.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.921" endtime="20201030 18:27:36.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.919" endtime="20201030 18:27:36.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.418" endtime="20201030 18:27:36.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.417" endtime="20201030 18:27:36.951"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.972" endtime="20201030 18:27:36.981"></status>
</kw>
<msg timestamp="20201030 18:27:36.983" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.969" endtime="20201030 18:27:36.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.989" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.985" endtime="20201030 18:27:36.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.991" endtime="20201030 18:27:36.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.962" endtime="20201030 18:27:36.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.956" endtime="20201030 18:27:36.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.014" endtime="20201030 18:27:37.417"></status>
</kw>
<msg timestamp="20201030 18:27:37.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036451139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036482264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.011" endtime="20201030 18:27:37.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036451139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036482264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.426" endtime="20201030 18:27:37.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.445" endtime="20201030 18:27:37.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.004" endtime="20201030 18:27:37.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.999" endtime="20201030 18:27:37.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:37.461" level="INFO">${PHILIP_RES} = [{'diff': 3.11249999999999e-05}, {'diff': 3.0264000000002067e-05}, {'diff': 3.055600000000103e-05}, {'diff': 3.1804999999995864e-05}, {'diff': 3.0236000000002927e-05}, {'diff': 3.0513000000002843e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:37.453" endtime="20201030 18:27:37.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:37.477" level="INFO">${RESULT} = {'diff': [3.11249999999999e-05, 3.0264000000002067e-05, 3.055600000000103e-05, 3.1804999999995864e-05, 3.0236000000002927e-05, 3.0513000000002843e-05, 3.184700000000151e-05, 3.0236000000002927e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:27:37.464" endtime="20201030 18:27:37.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.488" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:37.486" endtime="20201030 18:27:37.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.493" level="INFO">VALUE: [3.11249999999999e-05, 3.0264000000002067e-05, 3.055600000000103e-05, 3.1804999999995864e-05, 3.0236000000002927e-05, 3.0513000000002843e-05, 3.184700000000151e-05, 3.0236000000002927e-05, 3.059700000000026e-05, 3.181900000000237e-05, 3.0292000000001207e-05, 3.066699999999811e-05, 3.1860999999994144e-05, 3.0264000000002067e-05, 3.058300000000069e-05, 3.184800000000099e-05, 3.02370000000024e-05, 3.056999999999366e-05, 3.183300000000194e-05, 3.0236000000002927e-05, 3.058300000000069e-05, 3.183300000000194e-05, 3.023599999999599e-05, 3.0540999999995044e-05, 3.18050000000028e-05, 3.0250000000002497e-05, 3.058300000000069e-05, 3.1860999999994144e-05, 3.019399999999728e-05, 3.0584000000000167e-05, 3.188900000000022e-05, 3.0236000000002927e-05, 3.05700000000006e-05, 3.184700000000151e-05, 3.0236000000002927e-05, 3.055600000000103e-05, 3.180599999999534e-05, 3.0249999999995558e-05, 3.052800000000189e-05, 3.183300000000194e-05, 3.0222000000003357e-05, 3.058300000000069e-05, 3.188900000000022e-05, 3.0236000000002927e-05, 3.056900000000112e-05, 3.184700000000151e-05, 3.023599999999599e-05, 3.058300000000069e-05, 3.177800000000314e-05, 3.0222000000003357e-05]</msg>
<status status="PASS" starttime="20201030 18:27:37.490" endtime="20201030 18:27:37.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.479" endtime="20201030 18:27:37.496"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:37.505" endtime="20201030 18:27:37.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.501" endtime="20201030 18:27:37.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.498" endtime="20201030 18:27:37.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.953" endtime="20201030 18:27:37.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.952" endtime="20201030 18:27:37.530"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.551" endtime="20201030 18:27:37.562"></status>
</kw>
<msg timestamp="20201030 18:27:37.563" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.548" endtime="20201030 18:27:37.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.569" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.565" endtime="20201030 18:27:37.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.571" endtime="20201030 18:27:37.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.541" endtime="20201030 18:27:37.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.536" endtime="20201030 18:27:37.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.594" endtime="20201030 18:27:37.929"></status>
</kw>
<msg timestamp="20201030 18:27:37.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036202542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036249833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.591" endtime="20201030 18:27:37.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036202542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036249833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.939" endtime="20201030 18:27:37.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.957" endtime="20201030 18:27:37.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.584" endtime="20201030 18:27:37.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.579" endtime="20201030 18:27:37.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:37.974" level="INFO">${PHILIP_RES} = [{'diff': 4.729100000000486e-05}, {'diff': 4.763899999999516e-05}, {'diff': 4.7653000000001666e-05}, {'diff': 4.7625000000002526e-05}, {'diff': 4.7639000000002096e-05}, {'diff': 4.762499999999559e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:37.966" endtime="20201030 18:27:37.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:37.983" level="INFO">${RESULT} = {'diff': [4.729100000000486e-05, 4.763899999999516e-05, 4.7653000000001666e-05, 4.7625000000002526e-05, 4.7639000000002096e-05, 4.762499999999559e-05, 4.7653000000001666e-05, 4.7625000000002526e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:27:37.976" endtime="20201030 18:27:37.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.994" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:37.991" endtime="20201030 18:27:37.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.999" level="INFO">VALUE: [4.729100000000486e-05, 4.763899999999516e-05, 4.7653000000001666e-05, 4.7625000000002526e-05, 4.7639000000002096e-05, 4.762499999999559e-05, 4.7653000000001666e-05, 4.7625000000002526e-05, 4.7486999999998836e-05, 4.677799999999732e-05, 4.7639000000002096e-05, 4.7651999999995254e-05, 4.7639000000002096e-05, 4.768000000000133e-05, 4.761099999999602e-05, 4.7639000000002096e-05, 4.7597000000003387e-05, 4.762499999999559e-05, 4.7611000000002957e-05, 4.7639000000002096e-05, 4.761099999999602e-05, 4.7653000000001666e-05, 4.7625000000002526e-05, 4.761099999999602e-05, 4.7639000000002096e-05, 4.7653000000001666e-05, 4.758300000000382e-05, 4.7637999999995684e-05, 4.7625000000002526e-05, 4.7625000000002526e-05, 4.7651999999995254e-05, 4.765200000000219e-05, 4.763800000000262e-05, 4.762499999999559e-05, 4.7625000000002526e-05, 4.759800000000286e-05, 4.762499999999559e-05, 4.7639000000002096e-05, 4.749999999999893e-05, 4.6723000000005455e-05, 4.763899999999516e-05, 4.7639000000002096e-05, 4.7625000000002526e-05, 4.763899999999516e-05, 4.770800000000047e-05, 4.7625000000002526e-05, 4.770800000000047e-05, 4.7639000000002096e-05, 4.7653000000001666e-05, 4.763899999999516e-05]</msg>
<status status="PASS" starttime="20201030 18:27:37.996" endtime="20201030 18:27:38.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.985" endtime="20201030 18:27:38.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:38.011" endtime="20201030 18:27:38.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.006" endtime="20201030 18:27:38.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.004" endtime="20201030 18:27:38.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.532" endtime="20201030 18:27:38.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.531" endtime="20201030 18:27:38.036"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.057" endtime="20201030 18:27:38.071"></status>
</kw>
<msg timestamp="20201030 18:27:38.072" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.054" endtime="20201030 18:27:38.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.078" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.074" endtime="20201030 18:27:38.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.081" endtime="20201030 18:27:38.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.047" endtime="20201030 18:27:38.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.042" endtime="20201030 18:27:38.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.105" endtime="20201030 18:27:38.479"></status>
</kw>
<msg timestamp="20201030 18:27:38.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038379125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038439403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.101" endtime="20201030 18:27:38.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038379125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038439403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.489" endtime="20201030 18:27:38.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.508" endtime="20201030 18:27:38.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.094" endtime="20201030 18:27:38.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.089" endtime="20201030 18:27:38.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:38.525" level="INFO">${PHILIP_RES} = [{'diff': 6.0277999999996945e-05}, {'diff': 6.266700000000236e-05}, {'diff': 6.272300000000064e-05}, {'diff': 6.269399999999509e-05}, {'diff': 6.272200000000117e-05}, {'diff': 6.270900000000107e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:38.517" endtime="20201030 18:27:38.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:38.534" level="INFO">${RESULT} = {'diff': [6.0277999999996945e-05, 6.266700000000236e-05, 6.272300000000064e-05, 6.269399999999509e-05, 6.272200000000117e-05, 6.270900000000107e-05, 6.272200000000117e-05, 6.266700000000236e-05, 6.270...</msg>
<status status="PASS" starttime="20201030 18:27:38.527" endtime="20201030 18:27:38.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.545" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:38.542" endtime="20201030 18:27:38.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.550" level="INFO">VALUE: [6.0277999999996945e-05, 6.266700000000236e-05, 6.272300000000064e-05, 6.269399999999509e-05, 6.272200000000117e-05, 6.270900000000107e-05, 6.272200000000117e-05, 6.266700000000236e-05, 6.270799999999466e-05, 6.26950000000015e-05, 6.273600000000074e-05, 6.269399999999509e-05, 6.270900000000107e-05, 6.272200000000117e-05, 6.27080000000016e-05, 6.27080000000016e-05, 6.262499999999671e-05, 6.266600000000289e-05, 6.268000000000246e-05, 6.268100000000193e-05, 6.272300000000064e-05, 6.267999999999552e-05, 6.273600000000074e-05, 6.262499999999671e-05, 6.269499999999456e-05, 6.272200000000117e-05, 6.270900000000107e-05, 6.270900000000107e-05, 6.27080000000016e-05, 6.267999999999552e-05, 6.27500000000003e-05, 6.269399999999509e-05, 6.272200000000117e-05, 6.272300000000064e-05, 6.270799999999466e-05, 6.269400000000203e-05, 6.272200000000117e-05, 6.273600000000074e-05, 6.269400000000203e-05, 6.270799999999466e-05, 6.272200000000117e-05, 6.27080000000016e-05, 6.26950000000015e-05, 6.27080000000016e-05, 6.270799999999466e-05, 6.265300000000279e-05, 6.268100000000193e-05, 6.269499999999456e-05, 6.270900000000107e-05, 6.27080000000016e-05]</msg>
<status status="PASS" starttime="20201030 18:27:38.547" endtime="20201030 18:27:38.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.536" endtime="20201030 18:27:38.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:38.563" endtime="20201030 18:27:38.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.558" endtime="20201030 18:27:38.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.555" endtime="20201030 18:27:38.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.038" endtime="20201030 18:27:38.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.037" endtime="20201030 18:27:38.589"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.610" endtime="20201030 18:27:38.622"></status>
</kw>
<msg timestamp="20201030 18:27:38.623" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.607" endtime="20201030 18:27:38.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.630" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.626" endtime="20201030 18:27:38.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.632" endtime="20201030 18:27:38.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.600" endtime="20201030 18:27:38.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.594" endtime="20201030 18:27:38.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.655" endtime="20201030 18:27:38.993"></status>
</kw>
<msg timestamp="20201030 18:27:39.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036562778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036640403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.652" endtime="20201030 18:27:39.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036562778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036640403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.003" endtime="20201030 18:27:39.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.023" endtime="20201030 18:27:39.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.645" endtime="20201030 18:27:39.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.640" endtime="20201030 18:27:39.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:39.039" level="INFO">${PHILIP_RES} = [{'diff': 7.762500000000477e-05}, {'diff': 7.981999999999434e-05}, {'diff': 7.979200000000214e-05}, {'diff': 7.98190000000018e-05}, {'diff': 7.979100000000267e-05}, {'diff': 7.979200000000214e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:39.031" endtime="20201030 18:27:39.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:39.050" level="INFO">${RESULT} = {'diff': [7.762500000000477e-05, 7.981999999999434e-05, 7.979200000000214e-05, 7.98190000000018e-05, 7.979100000000267e-05, 7.979200000000214e-05, 7.984800000000042e-05, 7.976399999999606e-05, 7.97919...</msg>
<status status="PASS" starttime="20201030 18:27:39.041" endtime="20201030 18:27:39.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.060" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:39.058" endtime="20201030 18:27:39.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.065" level="INFO">VALUE: [7.762500000000477e-05, 7.981999999999434e-05, 7.979200000000214e-05, 7.98190000000018e-05, 7.979100000000267e-05, 7.979200000000214e-05, 7.984800000000042e-05, 7.976399999999606e-05, 7.97919999999952e-05, 7.982000000000128e-05, 7.979100000000267e-05, 7.977800000000257e-05, 7.983400000000085e-05, 7.979099999999573e-05, 7.979099999999573e-05, 7.980599999999477e-05, 7.982000000000128e-05, 7.980600000000171e-05, 7.988899999999965e-05, 7.988899999999965e-05, 7.979200000000214e-05, 7.981899999999487e-05, 7.97919999999952e-05, 7.980600000000171e-05, 7.98190000000018e-05, 7.977800000000257e-05, 7.983300000000138e-05, 7.983400000000085e-05, 7.97919999999952e-05, 7.983299999999444e-05, 7.977799999999563e-05, 7.983400000000085e-05, 7.979100000000267e-05, 7.979200000000214e-05, 7.980600000000171e-05, 7.977800000000257e-05, 7.976399999999606e-05, 7.981899999999487e-05, 7.974999999999649e-05, 7.979200000000214e-05, 7.97770000000031e-05, 7.979200000000214e-05, 7.98049999999953e-05, 7.979099999999573e-05, 7.9764000000003e-05, 7.980500000000224e-05, 7.976300000000353e-05, 7.980600000000171e-05, 7.979200000000214e-05, 7.981899999999487e-05]</msg>
<status status="PASS" starttime="20201030 18:27:39.062" endtime="20201030 18:27:39.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.051" endtime="20201030 18:27:39.068"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:39.077" endtime="20201030 18:27:39.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.073" endtime="20201030 18:27:39.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.071" endtime="20201030 18:27:39.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.591" endtime="20201030 18:27:39.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.589" endtime="20201030 18:27:39.103"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.134" endtime="20201030 18:27:39.149"></status>
</kw>
<msg timestamp="20201030 18:27:39.151" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.130" endtime="20201030 18:27:39.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.158" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.154" endtime="20201030 18:27:39.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.160" endtime="20201030 18:27:39.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.117" endtime="20201030 18:27:39.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.111" endtime="20201030 18:27:39.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.184" endtime="20201030 18:27:39.518"></status>
</kw>
<msg timestamp="20201030 18:27:39.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047729111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047824278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.180" endtime="20201030 18:27:39.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047729111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047824278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.529" endtime="20201030 18:27:39.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.547" endtime="20201030 18:27:39.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.173" endtime="20201030 18:27:39.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.168" endtime="20201030 18:27:39.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:39.563" level="INFO">${PHILIP_RES} = [{'diff': 9.516700000000017e-05}, {'diff': 9.681899999999799e-05}, {'diff': 9.487500000000121e-05}, {'diff': 9.490299999999341e-05}, {'diff': 9.681999999999746e-05}, {'diff': 9.488900000000078e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:39.556" endtime="20201030 18:27:39.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:39.574" level="INFO">${RESULT} = {'diff': [9.516700000000017e-05, 9.681899999999799e-05, 9.487500000000121e-05, 9.490299999999341e-05, 9.681999999999746e-05, 9.488900000000078e-05, 9.488900000000078e-05, 9.681899999999799e-05, 9.4848...</msg>
<status status="PASS" starttime="20201030 18:27:39.565" endtime="20201030 18:27:39.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.585" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:39.583" endtime="20201030 18:27:39.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.590" level="INFO">VALUE: [9.516700000000017e-05, 9.681899999999799e-05, 9.487500000000121e-05, 9.490299999999341e-05, 9.681999999999746e-05, 9.488900000000078e-05, 9.488900000000078e-05, 9.681899999999799e-05, 9.484800000000154e-05, 9.487499999999427e-05, 9.681899999999799e-05, 9.491699999999992e-05, 9.490300000000035e-05, 9.677800000000569e-05, 9.495799999999915e-05, 9.491699999999992e-05, 9.684800000000354e-05, 9.49159999999935e-05, 9.484700000000207e-05, 9.676399999999918e-05, 9.484700000000207e-05, 9.490300000000035e-05, 9.683299999999756e-05, 9.488900000000078e-05, 9.488900000000078e-05, 9.681900000000493e-05, 9.487500000000121e-05, 9.490300000000035e-05, 9.684800000000354e-05, 9.490200000000087e-05, 9.48880000000013e-05, 9.683399999999703e-05, 9.490300000000035e-05, 9.486100000000164e-05, 9.681899999999799e-05, 9.488900000000078e-05, 9.484699999999513e-05, 9.683299999999756e-05, 9.484700000000207e-05, 9.488899999999384e-05, 9.681999999999746e-05, 9.487500000000121e-05, 9.490300000000035e-05, 9.681900000000493e-05, 9.493099999999949e-05, 9.487500000000121e-05, 9.677799999999875e-05, 9.486100000000164e-05, 9.484700000000207e-05, 9.68200000000044e-05]</msg>
<status status="PASS" starttime="20201030 18:27:39.587" endtime="20201030 18:27:39.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.576" endtime="20201030 18:27:39.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:39.602" endtime="20201030 18:27:39.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.597" endtime="20201030 18:27:39.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.595" endtime="20201030 18:27:39.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.105" endtime="20201030 18:27:39.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.104" endtime="20201030 18:27:39.627"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.648" endtime="20201030 18:27:39.662"></status>
</kw>
<msg timestamp="20201030 18:27:39.663" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.645" endtime="20201030 18:27:39.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.670" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.665" endtime="20201030 18:27:39.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.672" endtime="20201030 18:27:39.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.638" endtime="20201030 18:27:39.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.633" endtime="20201030 18:27:39.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.696" endtime="20201030 18:27:40.031"></status>
</kw>
<msg timestamp="20201030 18:27:40.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036181083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036294625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.693" endtime="20201030 18:27:40.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036181083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036294625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.041" endtime="20201030 18:27:40.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.059" endtime="20201030 18:27:40.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.685" endtime="20201030 18:27:40.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.680" endtime="20201030 18:27:40.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:40.075" level="INFO">${PHILIP_RES} = [{'diff': 0.00011354199999999426}, {'diff': 0.00011405599999999433}, {'diff': 0.0001159170000000001}, {'diff': 0.00011593099999999967}, {'diff': 0.00011595799999999934}, {'diff': 0.0001159030000000005...</msg>
<status status="PASS" starttime="20201030 18:27:40.067" endtime="20201030 18:27:40.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:40.084" level="INFO">${RESULT} = {'diff': [0.00011354199999999426, 0.00011405599999999433, 0.0001159170000000001, 0.00011593099999999967, 0.00011595799999999934, 0.00011590300000000053, 0.00011595899999999881, 0.00011598600000000542,...</msg>
<status status="PASS" starttime="20201030 18:27:40.077" endtime="20201030 18:27:40.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.094" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:40.092" endtime="20201030 18:27:40.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.099" level="INFO">VALUE: [0.00011354199999999426, 0.00011405599999999433, 0.0001159170000000001, 0.00011593099999999967, 0.00011595799999999934, 0.00011590300000000053, 0.00011595899999999881, 0.00011598600000000542, 0.00011597199999999891, 0.00011594499999999924, 0.00011593099999999967, 0.00011594399999999977, 0.00011591600000000063, 0.00011594399999999977, 0.00011594499999999924, 0.00011595799999999934, 0.0001159300000000002, 0.0001159300000000002, 0.00011591600000000063, 0.0001159170000000001, 0.00011595899999999881, 0.00011595899999999881, 0.00011597200000000585, 0.00011594499999999924, 0.00011594499999999924, 0.0001159300000000002, 0.00011594399999999977, 0.0001159170000000001, 0.0001159170000000001, 0.0001159300000000002, 0.00011590200000000106, 0.00011591600000000063, 0.00011597199999999891, 0.00011590200000000106, 0.0001159300000000002, 0.00011590200000000106, 0.0001158750000000014, 0.00011591600000000063, 0.00011590200000000106, 0.0001159300000000002, 0.00011595799999999934, 0.00011590200000000106, 0.00011594399999999977, 0.00011594399999999977, 0.00011590200000000106, 0.00011590300000000053, 0.00011590300000000053, 0.00011588800000000149, 0.00011588800000000149, 0.00011595799999999934]</msg>
<status status="PASS" starttime="20201030 18:27:40.096" endtime="20201030 18:27:40.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.086" endtime="20201030 18:27:40.102"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:40.111" endtime="20201030 18:27:40.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.107" endtime="20201030 18:27:40.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.104" endtime="20201030 18:27:40.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.629" endtime="20201030 18:27:40.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.628" endtime="20201030 18:27:40.142"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.165" endtime="20201030 18:27:40.181"></status>
</kw>
<msg timestamp="20201030 18:27:40.182" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.161" endtime="20201030 18:27:40.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.188" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.184" endtime="20201030 18:27:40.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.190" endtime="20201030 18:27:40.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.154" endtime="20201030 18:27:40.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.148" endtime="20201030 18:27:40.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.215" endtime="20201030 18:27:40.577"></status>
</kw>
<msg timestamp="20201030 18:27:40.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043524069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043659083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.212" endtime="20201030 18:27:40.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043524069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043659083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.586" endtime="20201030 18:27:40.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.604" endtime="20201030 18:27:40.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.205" endtime="20201030 18:27:40.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.200" endtime="20201030 18:27:40.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:40.621" level="INFO">${PHILIP_RES} = [{'diff': 0.00013501400000000274}, {'diff': 0.00013504199999999494}, {'diff': 0.00013500000000000317}, {'diff': 0.00013505499999999504}, {'diff': 0.00013505600000000145}, {'diff': 0.000135040999999995...</msg>
<status status="PASS" starttime="20201030 18:27:40.613" endtime="20201030 18:27:40.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:40.630" level="INFO">${RESULT} = {'diff': [0.00013501400000000274, 0.00013504199999999494, 0.00013500000000000317, 0.00013505499999999504, 0.00013505600000000145, 0.00013504099999999547, 0.00013502700000000284, 0.00013505600000000145...</msg>
<status status="PASS" starttime="20201030 18:27:40.623" endtime="20201030 18:27:40.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.642" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:40.639" endtime="20201030 18:27:40.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.647" level="INFO">VALUE: [0.00013501400000000274, 0.00013504199999999494, 0.00013500000000000317, 0.00013505499999999504, 0.00013505600000000145, 0.00013504099999999547, 0.00013502700000000284, 0.00013505600000000145, 0.00013500000000000317, 0.0001350970000000007, 0.00013501400000000274, 0.00013504099999999547, 0.00013501400000000274, 0.0001350280000000023, 0.0001350280000000023, 0.0001350410000000024, 0.00013505600000000145, 0.0001350280000000023, 0.0001350139999999958, 0.00013506900000000155, 0.00013499999999999623, 0.0001350280000000023, 0.00013501400000000274, 0.00013501400000000274, 0.00013509800000000016, 0.00013502700000000284, 0.0001350280000000023, 0.0001350139999999958, 0.00013500000000000317, 0.0001350139999999958, 0.00013504200000000188, 0.00013498599999999666, 0.00013500000000000317, 0.00013502700000000284, 0.0001350280000000023, 0.0001350280000000023, 0.0001350280000000023, 0.0001350280000000023, 0.0001350280000000023, 0.0001350139999999958, 0.00013501400000000274, 0.0001350280000000023, 0.00013505500000000198, 0.00013498599999999666, 0.00013504200000000188, 0.00013499999999999623, 0.0001350280000000023, 0.00013499999999999623, 0.00013502700000000284, 0.00013498599999999666]</msg>
<status status="PASS" starttime="20201030 18:27:40.644" endtime="20201030 18:27:40.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.632" endtime="20201030 18:27:40.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:40.661" endtime="20201030 18:27:40.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.655" endtime="20201030 18:27:40.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.652" endtime="20201030 18:27:40.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.144" endtime="20201030 18:27:40.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.143" endtime="20201030 18:27:40.686"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.708" endtime="20201030 18:27:40.725"></status>
</kw>
<msg timestamp="20201030 18:27:40.726" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.705" endtime="20201030 18:27:40.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.733" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.729" endtime="20201030 18:27:40.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.736" endtime="20201030 18:27:40.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.697" endtime="20201030 18:27:40.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.692" endtime="20201030 18:27:40.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.760" endtime="20201030 18:27:41.107"></status>
</kw>
<msg timestamp="20201030 18:27:41.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037390083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037545347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.756" endtime="20201030 18:27:41.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037390083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037545347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.117" endtime="20201030 18:27:41.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.137" endtime="20201030 18:27:41.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.749" endtime="20201030 18:27:41.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.744" endtime="20201030 18:27:41.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:41.154" level="INFO">${PHILIP_RES} = [{'diff': 0.00015526400000000218}, {'diff': 0.00015511100000000638}, {'diff': 0.00015509699999999987}, {'diff': 0.0001551530000000051}, {'diff': 0.00015512499999999901}, {'diff': 0.0001551109999999994...</msg>
<status status="PASS" starttime="20201030 18:27:41.146" endtime="20201030 18:27:41.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:41.170" level="INFO">${RESULT} = {'diff': [0.00015526400000000218, 0.00015511100000000638, 0.00015509699999999987, 0.0001551530000000051, 0.00015512499999999901, 0.00015511099999999944, 0.00015509699999999987, 0.00015512499999999901,...</msg>
<status status="PASS" starttime="20201030 18:27:41.156" endtime="20201030 18:27:41.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.181" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:41.179" endtime="20201030 18:27:41.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.187" level="INFO">VALUE: [0.00015526400000000218, 0.00015511100000000638, 0.00015509699999999987, 0.0001551530000000051, 0.00015512499999999901, 0.00015511099999999944, 0.00015509699999999987, 0.00015512499999999901, 0.00015511099999999944, 0.00015512499999999901, 0.00015513899999999858, 0.0001551939999999974, 0.00015512500000000595, 0.00015513899999999858, 0.00015515299999999815, 0.00015512500000000595, 0.0001550830000000003, 0.0001550830000000003, 0.00015509699999999987, 0.00015511099999999944, 0.00015515299999999815, 0.00015509699999999987, 0.00015513899999999858, 0.00015509699999999987, 0.00015509699999999987, 0.00015512499999999901, 0.00015511099999999944, 0.00015518100000000423, 0.00015509699999999987, 0.00015513899999999858, 0.00015511099999999944, 0.00015513900000000552, 0.00015513899999999858, 0.00015513899999999858, 0.00015515199999999868, 0.00015506900000000073, 0.00015512500000000595, 0.00015509699999999987, 0.00015502699999999509, 0.00015512499999999901, 0.00015511099999999944, 0.00015508399999999978, 0.00015509799999999935, 0.00015515199999999868, 0.00015512499999999901, 0.00015513899999999858, 0.00015513899999999858, 0.00015513899999999858, 0.00015513899999999858, 0.0001550700000000002]</msg>
<status status="PASS" starttime="20201030 18:27:41.184" endtime="20201030 18:27:41.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.172" endtime="20201030 18:27:41.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:41.199" endtime="20201030 18:27:41.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.195" endtime="20201030 18:27:41.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.192" endtime="20201030 18:27:41.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.688" endtime="20201030 18:27:41.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.687" endtime="20201030 18:27:41.225"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.246" endtime="20201030 18:27:41.264"></status>
</kw>
<msg timestamp="20201030 18:27:41.265" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.243" endtime="20201030 18:27:41.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.272" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.268" endtime="20201030 18:27:41.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.274" endtime="20201030 18:27:41.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.236" endtime="20201030 18:27:41.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.231" endtime="20201030 18:27:41.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.297" endtime="20201030 18:27:41.655"></status>
</kw>
<msg timestamp="20201030 18:27:41.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036866806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037042375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.294" endtime="20201030 18:27:41.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036866806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037042375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.664" endtime="20201030 18:27:41.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.683" endtime="20201030 18:27:41.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.287" endtime="20201030 18:27:41.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.282" endtime="20201030 18:27:41.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:41.699" level="INFO">${PHILIP_RES} = [{'diff': 0.00017556900000000042}, {'diff': 0.00017424999999999385}, {'diff': 0.00017420900000000156}, {'diff': 0.00017620800000000408}, {'diff': 0.00017423600000000122}, {'diff': 0.000174194000000002...</msg>
<status status="PASS" starttime="20201030 18:27:41.691" endtime="20201030 18:27:41.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:41.710" level="INFO">${RESULT} = {'diff': [0.00017556900000000042, 0.00017424999999999385, 0.00017420900000000156, 0.00017620800000000408, 0.00017423600000000122, 0.0001741940000000025, 0.0001761669999999979, 0.0001742500000000008, 0...</msg>
<status status="PASS" starttime="20201030 18:27:41.701" endtime="20201030 18:27:41.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.721" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:41.718" endtime="20201030 18:27:41.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.726" level="INFO">VALUE: [0.00017556900000000042, 0.00017424999999999385, 0.00017420900000000156, 0.00017620800000000408, 0.00017423600000000122, 0.0001741940000000025, 0.0001761669999999979, 0.0001742500000000008, 0.00017427700000000046, 0.00017619400000000451, 0.00017430599999999907, 0.0001742500000000008, 0.00017616600000000537, 0.00017424999999999385, 0.00017426400000000036, 0.00017622200000000365, 0.00017422200000000165, 0.0001743049999999996, 0.0001761249999999992, 0.00017423600000000122, 0.00017423599999999428, 0.00017618100000000442, 0.00017427799999999993, 0.00017426400000000036, 0.00017618100000000442, 0.00017423600000000122, 0.00017423600000000122, 0.00017620899999999662, 0.00017422200000000165, 0.00017422300000000113, 0.00017616599999999843, 0.0001742630000000009, 0.0001742500000000008, 0.00017619399999999757, 0.0001742500000000008, 0.0001742500000000008, 0.0001761249999999992, 0.00017426400000000036, 0.00017426299999999395, 0.00017616599999999843, 0.00017422300000000113, 0.00017429100000000003, 0.00017620799999999714, 0.0001742500000000008, 0.00017420799999999514, 0.00017618100000000442, 0.0001741249999999972, 0.00017423600000000122, 0.00017619400000000451, 0.00017423599999999428]</msg>
<status status="PASS" starttime="20201030 18:27:41.723" endtime="20201030 18:27:41.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.712" endtime="20201030 18:27:41.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:41.738" endtime="20201030 18:27:41.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.733" endtime="20201030 18:27:41.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.731" endtime="20201030 18:27:41.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.227" endtime="20201030 18:27:41.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.226" endtime="20201030 18:27:41.763"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.785" endtime="20201030 18:27:41.804"></status>
</kw>
<msg timestamp="20201030 18:27:41.805" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.782" endtime="20201030 18:27:41.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.812" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.807" endtime="20201030 18:27:41.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.814" endtime="20201030 18:27:41.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.774" endtime="20201030 18:27:41.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.769" endtime="20201030 18:27:41.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.837" endtime="20201030 18:27:42.177"></status>
</kw>
<msg timestamp="20201030 18:27:42.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037650125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037845861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.834" endtime="20201030 18:27:42.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037650125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037845861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.187" endtime="20201030 18:27:42.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.205" endtime="20201030 18:27:42.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.827" endtime="20201030 18:27:42.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.822" endtime="20201030 18:27:42.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:42.222" level="INFO">${PHILIP_RES} = [{'diff': 0.0001957360000000019}, {'diff': 0.00019543000000000338}, {'diff': 0.00019830500000000278}, {'diff': 0.00019829099999999628}, {'diff': 0.00019833300000000192}, {'diff': 0.0001982920000000027...</msg>
<status status="PASS" starttime="20201030 18:27:42.214" endtime="20201030 18:27:42.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:42.232" level="INFO">${RESULT} = {'diff': [0.0001957360000000019, 0.00019543000000000338, 0.00019830500000000278, 0.00019829099999999628, 0.00019833300000000192, 0.0001982920000000027, 0.0001983470000000015, 0.0001983199999999949, 0....</msg>
<status status="PASS" starttime="20201030 18:27:42.224" endtime="20201030 18:27:42.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.243" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:42.240" endtime="20201030 18:27:42.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.248" level="INFO">VALUE: [0.0001957360000000019, 0.00019543000000000338, 0.00019830500000000278, 0.00019829099999999628, 0.00019833300000000192, 0.0001982920000000027, 0.0001983470000000015, 0.0001983199999999949, 0.00019832000000000183, 0.00019830600000000226, 0.0001983340000000014, 0.00019829199999999575, 0.00019829199999999575, 0.00019832000000000183, 0.00019827800000000312, 0.00019831900000000235, 0.00019827799999999618, 0.00019829199999999575, 0.00019830600000000226, 0.00019833300000000192, 0.00019830500000000278, 0.00019831900000000235, 0.00019824999999999704, 0.00019830599999999532, 0.00019834800000000097, 0.0001983470000000015, 0.00019829199999999575, 0.00019830599999999532, 0.00019836100000000106, 0.00019830500000000278, 0.00019836099999999413, 0.00019836100000000106, 0.00019833300000000192, 0.00019826400000000355, 0.0001983199999999949, 0.00019836100000000106, 0.00019831900000000235, 0.00019833299999999499, 0.00019830499999999585, 0.00019831900000000235, 0.00019830500000000278, 0.0001982769999999967, 0.00019829099999999628, 0.0001983470000000015, 0.00019836100000000106, 0.00019830500000000278, 0.00019827799999999618, 0.0001982920000000027, 0.00019837500000000063, 0.00019831900000000235]</msg>
<status status="PASS" starttime="20201030 18:27:42.245" endtime="20201030 18:27:42.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.234" endtime="20201030 18:27:42.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:42.260" endtime="20201030 18:27:42.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.255" endtime="20201030 18:27:42.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.253" endtime="20201030 18:27:42.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.765" endtime="20201030 18:27:42.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.764" endtime="20201030 18:27:42.292"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.315" endtime="20201030 18:27:42.334"></status>
</kw>
<msg timestamp="20201030 18:27:42.336" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.311" endtime="20201030 18:27:42.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.342" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.338" endtime="20201030 18:27:42.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.344" endtime="20201030 18:27:42.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.304" endtime="20201030 18:27:42.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.299" endtime="20201030 18:27:42.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.373" endtime="20201030 18:27:42.715"></status>
</kw>
<msg timestamp="20201030 18:27:42.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044529347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044747486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.370" endtime="20201030 18:27:42.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044529347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044747486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.724" endtime="20201030 18:27:42.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.743" endtime="20201030 18:27:42.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.363" endtime="20201030 18:27:42.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.358" endtime="20201030 18:27:42.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:42.759" level="INFO">${PHILIP_RES} = [{'diff': 0.00021813900000000608}, {'diff': 0.00022040300000000096}, {'diff': 0.0002203609999999953}, {'diff': 0.00022031900000000354}, {'diff': 0.00022031900000000354}, {'diff': 0.0002203469999999957...</msg>
<status status="PASS" starttime="20201030 18:27:42.751" endtime="20201030 18:27:42.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:42.768" level="INFO">${RESULT} = {'diff': [0.00021813900000000608, 0.00022040300000000096, 0.0002203609999999953, 0.00022031900000000354, 0.00022031900000000354, 0.00022034699999999574, 0.00022031900000000354, 0.00022034800000000215,...</msg>
<status status="PASS" starttime="20201030 18:27:42.761" endtime="20201030 18:27:42.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.778" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:42.776" endtime="20201030 18:27:42.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.783" level="INFO">VALUE: [0.00021813900000000608, 0.00022040300000000096, 0.0002203609999999953, 0.00022031900000000354, 0.00022031900000000354, 0.00022034699999999574, 0.00022031900000000354, 0.00022034800000000215, 0.00022036199999999478, 0.0002203609999999953, 0.00022036100000000225, 0.00022031900000000354, 0.00022036100000000225, 0.00022033399999999564, 0.00022030499999999703, 0.00022037500000000182, 0.00022033400000000258, 0.00022033399999999564, 0.00022024999999999822, 0.0002203189999999966, 0.0002203189999999966, 0.00022034700000000268, 0.00022033299999999617, 0.00022031900000000354, 0.00022030600000000344, 0.00022033399999999564, 0.0002204580000000067, 0.00022037500000000182, 0.00022034800000000215, 0.00022036199999999478, 0.00022033299999999617, 0.0002203890000000014, 0.00022030600000000344, 0.0002203189999999966, 0.0002203330000000031, 0.00022031900000000354, 0.00022033299999999617, 0.00022033400000000258, 0.00022029200000000387, 0.00022034800000000215, 0.00022036199999999478, 0.0002203189999999966, 0.000220320000000003, 0.00022034800000000215, 0.0002203189999999966, 0.0002203189999999966, 0.00022037500000000182, 0.0002203330000000031, 0.00022041700000000053, 0.00022037499999999488]</msg>
<status status="PASS" starttime="20201030 18:27:42.781" endtime="20201030 18:27:42.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.770" endtime="20201030 18:27:42.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:42.797" endtime="20201030 18:27:42.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.792" endtime="20201030 18:27:42.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.788" endtime="20201030 18:27:42.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.295" endtime="20201030 18:27:42.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.293" endtime="20201030 18:27:42.823"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.845" endtime="20201030 18:27:42.866"></status>
</kw>
<msg timestamp="20201030 18:27:42.868" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.841" endtime="20201030 18:27:42.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.874" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.870" endtime="20201030 18:27:42.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.876" endtime="20201030 18:27:42.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.834" endtime="20201030 18:27:42.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.829" endtime="20201030 18:27:42.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.900" endtime="20201030 18:27:43.268"></status>
</kw>
<msg timestamp="20201030 18:27:43.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037067875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037311639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.896" endtime="20201030 18:27:43.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037067875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037311639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.277" endtime="20201030 18:27:43.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.295" endtime="20201030 18:27:43.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.889" endtime="20201030 18:27:43.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.884" endtime="20201030 18:27:43.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:43.311" level="INFO">${PHILIP_RES} = [{'diff': 0.00024376400000000048}, {'diff': 0.0002445139999999943}, {'diff': 0.00024441600000000424}, {'diff': 0.0002444720000000025}, {'diff': 0.000244457999999996}, {'diff': 0.00024451400000000123},...</msg>
<status status="PASS" starttime="20201030 18:27:43.303" endtime="20201030 18:27:43.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:43.321" level="INFO">${RESULT} = {'diff': [0.00024376400000000048, 0.0002445139999999943, 0.00024441600000000424, 0.0002444720000000025, 0.000244457999999996, 0.00024451400000000123, 0.0002444449999999959, 0.0002444169999999968, 0.00...</msg>
<status status="PASS" starttime="20201030 18:27:43.313" endtime="20201030 18:27:43.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.332" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:43.330" endtime="20201030 18:27:43.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.337" level="INFO">VALUE: [0.00024376400000000048, 0.0002445139999999943, 0.00024441600000000424, 0.0002444720000000025, 0.000244457999999996, 0.00024451400000000123, 0.0002444449999999959, 0.0002444169999999968, 0.000244457999999996, 0.00024451400000000123, 0.0002444860000000021, 0.0002444999999999947, 0.0002444860000000021, 0.00024444500000000285, 0.00024451400000000123, 0.0002444300000000038, 0.0002444860000000021, 0.000244457999999996, 0.0002444720000000025, 0.00024450000000000166, 0.0002444720000000025, 0.00024445800000000295, 0.0002444719999999956, 0.00024459799999999865, 0.00024448700000000156, 0.0002444860000000021, 0.0002444310000000033, 0.000244457999999996, 0.0002444720000000025, 0.0002444719999999956, 0.00024451400000000123, 0.0002445139999999943, 0.00024445800000000295, 0.00024450000000000166, 0.0002445410000000009, 0.00024450000000000166, 0.000244457999999996, 0.00024444500000000285, 0.00024445800000000295, 0.000244457999999996, 0.00024451300000000176, 0.000244473000000002, 0.00024451400000000123, 0.00024445800000000295, 0.0002444999999999947, 0.00024454200000000037, 0.0002444860000000021, 0.00024451400000000123, 0.00024451400000000123, 0.00024438899999999764]</msg>
<status status="PASS" starttime="20201030 18:27:43.334" endtime="20201030 18:27:43.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.323" endtime="20201030 18:27:43.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:43.349" endtime="20201030 18:27:43.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.345" endtime="20201030 18:27:43.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.343" endtime="20201030 18:27:43.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.825" endtime="20201030 18:27:43.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.824" endtime="20201030 18:27:43.374"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.396" endtime="20201030 18:27:43.418"></status>
</kw>
<msg timestamp="20201030 18:27:43.420" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.393" endtime="20201030 18:27:43.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.426" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.422" endtime="20201030 18:27:43.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.428" endtime="20201030 18:27:43.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.386" endtime="20201030 18:27:43.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.380" endtime="20201030 18:27:43.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.452" endtime="20201030 18:27:43.785"></status>
</kw>
<msg timestamp="20201030 18:27:43.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0366725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03693925, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:43.448" endtime="20201030 18:27:43.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0366725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03693925, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:43.795" endtime="20201030 18:27:43.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.813" endtime="20201030 18:27:43.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.441" endtime="20201030 18:27:43.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.436" endtime="20201030 18:27:43.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:43.829" level="INFO">${PHILIP_RES} = [{'diff': 0.0002667500000000031}, {'diff': 0.0002666249999999995}, {'diff': 0.0002666249999999995}, {'diff': 0.0002685139999999975}, {'diff': 0.0002665560000000011}, {'diff': 0.00026658400000000027}, ...</msg>
<status status="PASS" starttime="20201030 18:27:43.821" endtime="20201030 18:27:43.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:43.840" level="INFO">${RESULT} = {'diff': [0.0002667500000000031, 0.0002666249999999995, 0.0002666249999999995, 0.0002685139999999975, 0.0002665560000000011, 0.00026658400000000027, 0.0002684860000000053, 0.0002665690000000012, 0.000...</msg>
<status status="PASS" starttime="20201030 18:27:43.831" endtime="20201030 18:27:43.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.850" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:43.848" endtime="20201030 18:27:43.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.855" level="INFO">VALUE: [0.0002667500000000031, 0.0002666249999999995, 0.0002666249999999995, 0.0002685139999999975, 0.0002665560000000011, 0.00026658400000000027, 0.0002684860000000053, 0.0002665690000000012, 0.0002664999999999959, 0.0002684579999999992, 0.000266528000000002, 0.0002665700000000007, 0.00026854200000000356, 0.0002665690000000012, 0.00026658400000000027, 0.00026850000000000485, 0.0002665700000000007, 0.00026654200000000156, 0.000268512999999998, 0.00026662500000000644, 0.0002665549999999947, 0.00026854099999999714, 0.0002665830000000008, 0.0002665830000000008, 0.00026848599999999834, 0.00026655500000000165, 0.0002665690000000012, 0.0002685140000000044, 0.0002665830000000008, 0.0002665690000000012, 0.00026848599999999834, 0.0002665419999999946, 0.000266528000000002, 0.00026855500000000365, 0.00026654200000000156, 0.00026654200000000156, 0.0002685139999999975, 0.0002665140000000024, 0.000266528000000002, 0.00026851300000000494, 0.00026661099999999993, 0.00026661099999999993, 0.00026854200000000356, 0.00026659700000000036, 0.00026655500000000165, 0.0002684999999999979, 0.0002665700000000007, 0.0002665560000000011, 0.0002685139999999975, 0.0002665700000000007]</msg>
<status status="PASS" starttime="20201030 18:27:43.852" endtime="20201030 18:27:43.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.842" endtime="20201030 18:27:43.859"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:43.868" endtime="20201030 18:27:43.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.864" endtime="20201030 18:27:43.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.861" endtime="20201030 18:27:43.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.376" endtime="20201030 18:27:43.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.375" endtime="20201030 18:27:43.893"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.914" endtime="20201030 18:27:43.938"></status>
</kw>
<msg timestamp="20201030 18:27:43.939" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.911" endtime="20201030 18:27:43.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.945" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.941" endtime="20201030 18:27:43.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.947" endtime="20201030 18:27:43.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.904" endtime="20201030 18:27:43.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.899" endtime="20201030 18:27:43.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.971" endtime="20201030 18:27:44.315"></status>
</kw>
<msg timestamp="20201030 18:27:44.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036198208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036490625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.967" endtime="20201030 18:27:44.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036198208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036490625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.325" endtime="20201030 18:27:44.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.343" endtime="20201030 18:27:44.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.960" endtime="20201030 18:27:44.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.955" endtime="20201030 18:27:44.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:44.360" level="INFO">${PHILIP_RES} = [{'diff': 0.0002924169999999962}, {'diff': 0.00029275000000000134}, {'diff': 0.0002945980000000001}, {'diff': 0.00029463799999999984}, {'diff': 0.00029468099999999803}, {'diff': 0.00029466699999999846...</msg>
<status status="PASS" starttime="20201030 18:27:44.352" endtime="20201030 18:27:44.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:44.369" level="INFO">${RESULT} = {'diff': [0.0002924169999999962, 0.00029275000000000134, 0.0002945980000000001, 0.00029463799999999984, 0.00029468099999999803, 0.00029466699999999846, 0.00029469400000000506, 0.00029468099999999803, ...</msg>
<status status="PASS" starttime="20201030 18:27:44.362" endtime="20201030 18:27:44.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.379" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:44.377" endtime="20201030 18:27:44.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.385" level="INFO">VALUE: [0.0002924169999999962, 0.00029275000000000134, 0.0002945980000000001, 0.00029463799999999984, 0.00029468099999999803, 0.00029466699999999846, 0.00029469400000000506, 0.00029468099999999803, 0.00029467999999999855, 0.00029462499999999975, 0.0002946110000000002, 0.00029466699999999846, 0.000294665999999999, 0.00029466699999999846, 0.00029472299999999674, 0.00029468099999999803, 0.0002946939999999981, 0.0002946529999999989, 0.00029466699999999846, 0.00029467999999999855, 0.0002946949999999976, 0.00029468099999999803, 0.0002945970000000006, 0.0002945970000000006, 0.0002946389999999993, 0.0002946519999999994, 0.0002947079999999977, 0.00029469500000000454, 0.0002946389999999993, 0.0002947220000000042, 0.00029467999999999855, 0.0002946939999999981, 0.0002945970000000006, 0.0002946110000000002, 0.0002946660000000059, 0.00029463900000000626, 0.0002945980000000001, 0.0002946389999999993, 0.00029466699999999846, 0.00029462499999999975, 0.00029467999999999855, 0.0002946110000000002, 0.000294665999999999, 0.00029468099999999803, 0.0002945970000000006, 0.00029462499999999975, 0.0002947079999999977, 0.00029466699999999846, 0.00029467999999999855, 0.0002946949999999976]</msg>
<status status="PASS" starttime="20201030 18:27:44.382" endtime="20201030 18:27:44.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.371" endtime="20201030 18:27:44.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:44.397" endtime="20201030 18:27:44.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.393" endtime="20201030 18:27:44.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.390" endtime="20201030 18:27:44.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.895" endtime="20201030 18:27:44.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.894" endtime="20201030 18:27:44.422"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.444" endtime="20201030 18:27:44.469"></status>
</kw>
<msg timestamp="20201030 18:27:44.471" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.441" endtime="20201030 18:27:44.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.477" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.473" endtime="20201030 18:27:44.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.479" endtime="20201030 18:27:44.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.433" endtime="20201030 18:27:44.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.428" endtime="20201030 18:27:44.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.505" endtime="20201030 18:27:44.843"></status>
</kw>
<msg timestamp="20201030 18:27:44.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036916444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037235681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.501" endtime="20201030 18:27:44.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036916444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037235681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.852" endtime="20201030 18:27:44.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.871" endtime="20201030 18:27:44.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.494" endtime="20201030 18:27:44.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.489" endtime="20201030 18:27:44.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:44.887" level="INFO">${PHILIP_RES} = [{'diff': 0.000319237}, {'diff': 0.0003217920000000013}, {'diff': 0.00032074999999999465}, {'diff': 0.00032080599999999987}, {'diff': 0.00032077800000000073}, {'diff': 0.00032081899999999997}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:27:44.879" endtime="20201030 18:27:44.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:44.896" level="INFO">${RESULT} = {'diff': [0.000319237, 0.0003217920000000013, 0.00032074999999999465, 0.00032080599999999987, 0.00032077800000000073, 0.00032081899999999997, 0.0003207909999999939, 0.0003208479999999986, 0.0003207630...</msg>
<status status="PASS" starttime="20201030 18:27:44.889" endtime="20201030 18:27:44.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.906" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:44.904" endtime="20201030 18:27:44.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.912" level="INFO">VALUE: [0.000319237, 0.0003217920000000013, 0.00032074999999999465, 0.00032080599999999987, 0.00032077800000000073, 0.00032081899999999997, 0.0003207909999999939, 0.0003208479999999986, 0.0003207630000000017, 0.0003207779999999938, 0.00032077800000000073, 0.00032072200000000245, 0.00032072200000000245, 0.0003207500000000016, 0.00032076400000000116, 0.00032081999999999944, 0.00032083299999999954, 0.00032081899999999997, 0.0003207359999999951, 0.00032077800000000073, 0.00032091699999999695, 0.0003208609999999987, 0.0003208889999999978, 0.0003208479999999986, 0.0003208750000000052, 0.0003208469999999991, 0.00032084700000000604, 0.0003208609999999987, 0.00032083299999999954, 0.0003208889999999978, 0.0003208469999999991, 0.0003207920000000003, 0.0003208479999999986, 0.00032083299999999954, 0.00032083299999999954, 0.00032080599999999987, 0.0003208889999999978, 0.00032083299999999954, 0.0003208200000000064, 0.0003207920000000003, 0.0003207920000000003, 0.00032081899999999997, 0.00032080599999999987, 0.0003209159999999975, 0.00032081899999999997, 0.0003207779999999938, 0.00032081899999999997, 0.00032076400000000116, 0.00032076400000000116, 0.0003208050000000004]</msg>
<status status="PASS" starttime="20201030 18:27:44.909" endtime="20201030 18:27:44.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.898" endtime="20201030 18:27:44.915"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:44.926" endtime="20201030 18:27:44.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.920" endtime="20201030 18:27:44.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.917" endtime="20201030 18:27:44.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.424" endtime="20201030 18:27:44.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.423" endtime="20201030 18:27:44.951"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.973" endtime="20201030 18:27:45.000"></status>
</kw>
<msg timestamp="20201030 18:27:45.001" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.969" endtime="20201030 18:27:45.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.007" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.004" endtime="20201030 18:27:45.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.010" endtime="20201030 18:27:45.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.962" endtime="20201030 18:27:45.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.957" endtime="20201030 18:27:45.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.033" endtime="20201030 18:27:45.381"></status>
</kw>
<msg timestamp="20201030 18:27:45.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036766014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037114306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.030" endtime="20201030 18:27:45.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036766014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037114306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.391" endtime="20201030 18:27:45.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.409" endtime="20201030 18:27:45.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.023" endtime="20201030 18:27:45.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.018" endtime="20201030 18:27:45.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:45.425" level="INFO">${PHILIP_RES} = [{'diff': 0.00034829200000000005}, {'diff': 0.0003479580000000024}, {'diff': 0.0003479169999999962}, {'diff': 0.00034790199999999716}, {'diff': 0.0003478749999999975}, {'diff': 0.00034788899999999706}...</msg>
<status status="PASS" starttime="20201030 18:27:45.417" endtime="20201030 18:27:45.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:45.435" level="INFO">${RESULT} = {'diff': [0.00034829200000000005, 0.0003479580000000024, 0.0003479169999999962, 0.00034790199999999716, 0.0003478749999999975, 0.00034788899999999706, 0.00034784699999999835, 0.0003478470000000053, 0....</msg>
<status status="PASS" starttime="20201030 18:27:45.427" endtime="20201030 18:27:45.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.446" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:45.444" endtime="20201030 18:27:45.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.452" level="INFO">VALUE: [0.00034829200000000005, 0.0003479580000000024, 0.0003479169999999962, 0.00034790199999999716, 0.0003478749999999975, 0.00034788899999999706, 0.00034784699999999835, 0.0003478470000000053, 0.0003479169999999962, 0.00034783399999999826, 0.00034790300000000357, 0.00034784699999999835, 0.0003479169999999962, 0.0003479020000000041, 0.00034794399999999587, 0.00034788899999999706, 0.0003479310000000027, 0.00034788899999999706, 0.00034793000000000324, 0.000347889000000004, 0.0003479299999999963, 0.0003478880000000045, 0.00034791700000000314, 0.0003478340000000052, 0.0003479169999999962, 0.0003479580000000024, 0.0003478749999999975, 0.00034797200000000195, 0.00034791599999999673, 0.00034793000000000324, 0.00034791700000000314, 0.0003479169999999962, 0.00034793000000000324, 0.000347889000000004, 0.00034788899999999706, 0.0003479440000000028, 0.0003478749999999975, 0.0003479580000000024, 0.0003479580000000024, 0.00034784699999999835, 0.00034791700000000314, 0.000347889000000004, 0.00034790299999999663, 0.00034787500000000443, 0.00034780499999999964, 0.0003478879999999976, 0.0003478329999999988, 0.00034788899999999706, 0.000347889000000004, 0.0003479169999999962]</msg>
<status status="PASS" starttime="20201030 18:27:45.448" endtime="20201030 18:27:45.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.437" endtime="20201030 18:27:45.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:45.464" endtime="20201030 18:27:45.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.460" endtime="20201030 18:27:45.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.458" endtime="20201030 18:27:45.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.953" endtime="20201030 18:27:45.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.952" endtime="20201030 18:27:45.490"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.512" endtime="20201030 18:27:45.540"></status>
</kw>
<msg timestamp="20201030 18:27:45.541" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.508" endtime="20201030 18:27:45.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.547" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.543" endtime="20201030 18:27:45.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.549" endtime="20201030 18:27:45.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.501" endtime="20201030 18:27:45.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.496" endtime="20201030 18:27:45.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.573" endtime="20201030 18:27:45.911"></status>
</kw>
<msg timestamp="20201030 18:27:45.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037011611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037387764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.570" endtime="20201030 18:27:45.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037011611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037387764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.920" endtime="20201030 18:27:45.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.938" endtime="20201030 18:27:45.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.562" endtime="20201030 18:27:45.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.557" endtime="20201030 18:27:45.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:45.954" level="INFO">${PHILIP_RES} = [{'diff': 0.00037615299999999713}, {'diff': 0.0003740829999999973}, {'diff': 0.00037413899999999556}, {'diff': 0.0003761109999999984}, {'diff': 0.0003741669999999947}, {'diff': 0.0003741109999999964},...</msg>
<status status="PASS" starttime="20201030 18:27:45.947" endtime="20201030 18:27:45.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:45.965" level="INFO">${RESULT} = {'diff': [0.00037615299999999713, 0.0003740829999999973, 0.00037413899999999556, 0.0003761109999999984, 0.0003741669999999947, 0.0003741109999999964, 0.00037605500000000014, 0.0003740689999999977, 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:45.956" endtime="20201030 18:27:45.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.976" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:45.973" endtime="20201030 18:27:45.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.981" level="INFO">VALUE: [0.00037615299999999713, 0.0003740829999999973, 0.00037413899999999556, 0.0003761109999999984, 0.0003741669999999947, 0.0003741109999999964, 0.00037605500000000014, 0.0003740689999999977, 0.0003741109999999964, 0.0003760699999999992, 0.0003741950000000008, 0.0003741810000000012, 0.00037604200000000004, 0.0003740829999999973, 0.0003740280000000054, 0.0003760559999999996, 0.00037409699999999685, 0.0003741390000000025, 0.00037604200000000004, 0.00037415299999999513, 0.000374124999999996, 0.00037598700000000124, 0.00037408399999999675, 0.0003740689999999977, 0.0003759580000000026, 0.00037399999999999933, 0.0003740139999999989, 0.00037600000000000133, 0.00037399999999999933, 0.0003740280000000054, 0.0003759160000000039, 0.00037400000000000627, 0.0003740830000000042, 0.00037600000000000133, 0.000374042000000005, 0.00037409800000000326, 0.0003760140000000009, 0.00037412500000000293, 0.00037405600000000455, 0.00037598600000000176, 0.00037400000000000627, 0.00037399999999999933, 0.000375930999999996, 0.00037404199999999804, 0.00037399999999999933, 0.0003759720000000022, 0.0003741109999999964, 0.00037402799999999847, 0.000376027000000001, 0.0003741109999999964]</msg>
<status status="PASS" starttime="20201030 18:27:45.978" endtime="20201030 18:27:45.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.967" endtime="20201030 18:27:45.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:45.994" endtime="20201030 18:27:46.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.989" endtime="20201030 18:27:46.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.987" endtime="20201030 18:27:46.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.492" endtime="20201030 18:27:46.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.491" endtime="20201030 18:27:46.019"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.041" endtime="20201030 18:27:46.071"></status>
</kw>
<msg timestamp="20201030 18:27:46.072" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.037" endtime="20201030 18:27:46.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.078" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.074" endtime="20201030 18:27:46.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.080" endtime="20201030 18:27:46.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.030" endtime="20201030 18:27:46.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.025" endtime="20201030 18:27:46.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.104" endtime="20201030 18:27:46.444"></status>
</kw>
<msg timestamp="20201030 18:27:46.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037287014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037689625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.101" endtime="20201030 18:27:46.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037287014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037689625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.453" endtime="20201030 18:27:46.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.472" endtime="20201030 18:27:46.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.093" endtime="20201030 18:27:46.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.089" endtime="20201030 18:27:46.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:46.488" level="INFO">${PHILIP_RES} = [{'diff': 0.00040261099999999717}, {'diff': 0.00040219400000000155}, {'diff': 0.00040512499999999924}, {'diff': 0.0004050980000000065}, {'diff': 0.0004051809999999975}, {'diff': 0.0004050970000000001}...</msg>
<status status="PASS" starttime="20201030 18:27:46.480" endtime="20201030 18:27:46.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:46.497" level="INFO">${RESULT} = {'diff': [0.00040261099999999717, 0.00040219400000000155, 0.00040512499999999924, 0.0004050980000000065, 0.0004051809999999975, 0.0004050970000000001, 0.0004050970000000001, 0.0004050970000000001, 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:46.490" endtime="20201030 18:27:46.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.507" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:46.505" endtime="20201030 18:27:46.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.513" level="INFO">VALUE: [0.00040261099999999717, 0.00040219400000000155, 0.00040512499999999924, 0.0004050980000000065, 0.0004051809999999975, 0.0004050970000000001, 0.0004050970000000001, 0.0004050970000000001, 0.0004051389999999988, 0.0004050970000000001, 0.0004051110000000066, 0.00040511099999999967, 0.0004051519999999989, 0.00040511199999999914, 0.00040512499999999924, 0.0004050420000000013, 0.000405195000000004, 0.0004050830000000005, 0.0004051389999999988, 0.0004052079999999972, 0.00040513900000000574, 0.00040512499999999924, 0.00040505600000000086, 0.0004050830000000005, 0.0004051809999999975, 0.0004050550000000014, 0.0004050280000000017, 0.00040505600000000086, 0.00040509799999999957, 0.00040502700000000225, 0.0004050420000000013, 0.0004050409999999949, 0.00040505600000000086, 0.00040511099999999967, 0.00040513900000000574, 0.0004050970000000001, 0.0004051389999999988, 0.0004051529999999984, 0.000405084, 0.0004050830000000005, 0.00040501400000000215, 0.0004050830000000005, 0.00040507000000000043, 0.00040502700000000225, 0.0004050970000000001, 0.00040507000000000043, 0.00040501400000000215, 0.0004050830000000005, 0.0004050559999999939, 0.00040506900000000096]</msg>
<status status="PASS" starttime="20201030 18:27:46.510" endtime="20201030 18:27:46.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.499" endtime="20201030 18:27:46.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:46.525" endtime="20201030 18:27:46.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.521" endtime="20201030 18:27:46.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.518" endtime="20201030 18:27:46.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.021" endtime="20201030 18:27:46.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.020" endtime="20201030 18:27:46.550"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.572" endtime="20201030 18:27:46.605"></status>
</kw>
<msg timestamp="20201030 18:27:46.606" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.569" endtime="20201030 18:27:46.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.613" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.608" endtime="20201030 18:27:46.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.615" endtime="20201030 18:27:46.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.562" endtime="20201030 18:27:46.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.556" endtime="20201030 18:27:46.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.638" endtime="20201030 18:27:46.976"></status>
</kw>
<msg timestamp="20201030 18:27:46.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038445486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038879847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.635" endtime="20201030 18:27:46.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038445486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038879847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.985" endtime="20201030 18:27:47.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.004" endtime="20201030 18:27:47.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.628" endtime="20201030 18:27:47.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.623" endtime="20201030 18:27:47.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:47.020" level="INFO">${PHILIP_RES} = [{'diff': 0.00043436100000000116}, {'diff': 0.0004342630000000042}, {'diff': 0.0004343050000000029}, {'diff': 0.00043430499999999594}, {'diff': 0.0004342780000000032}, {'diff': 0.00043426400000000365}...</msg>
<status status="PASS" starttime="20201030 18:27:47.012" endtime="20201030 18:27:47.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:47.029" level="INFO">${RESULT} = {'diff': [0.00043436100000000116, 0.0004342630000000042, 0.0004343050000000029, 0.00043430499999999594, 0.0004342780000000032, 0.00043426400000000365, 0.0004342360000000045, 0.00043419500000000527, 0....</msg>
<status status="PASS" starttime="20201030 18:27:47.022" endtime="20201030 18:27:47.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.040" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:47.037" endtime="20201030 18:27:47.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.045" level="INFO">VALUE: [0.00043436100000000116, 0.0004342630000000042, 0.0004343050000000029, 0.00043430499999999594, 0.0004342780000000032, 0.00043426400000000365, 0.0004342360000000045, 0.00043419500000000527, 0.00043419399999999886, 0.00043431900000000245, 0.0004342500000000041, 0.00043427700000000374, 0.00043430499999999594, 0.00043424999999999714, 0.0004343470000000016, 0.00043426400000000365, 0.0004342780000000032, 0.0004341250000000005, 0.0004342500000000041, 0.00043423599999999757, 0.0004342639999999967, 0.00043433399999999456, 0.0004342780000000032, 0.0004342920000000028, 0.0004341810000000057, 0.00043426400000000365, 0.000434333000000002, 0.00043434699999999465, 0.00043420799999999843, 0.00043423599999999757, 0.0004341529999999996, 0.0004341669999999992, 0.0004341669999999992, 0.0004342779999999963, 0.00043419499999999833, 0.0004341120000000004, 0.00043420799999999843, 0.0004342779999999963, 0.00043422299999999747, 0.0004342779999999963, 0.00043420799999999843, 0.00043424999999999714, 0.00043423599999999757, 0.000434221999999998, 0.00043424999999999714, 0.00043426299999999723, 0.0004342779999999963, 0.00043426299999999723, 0.0004342360000000045, 0.0004342500000000041]</msg>
<status status="PASS" starttime="20201030 18:27:47.042" endtime="20201030 18:27:47.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.031" endtime="20201030 18:27:47.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:47.059" endtime="20201030 18:27:47.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.053" endtime="20201030 18:27:47.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.051" endtime="20201030 18:27:47.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.552" endtime="20201030 18:27:47.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.551" endtime="20201030 18:27:47.084"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.106" endtime="20201030 18:27:47.139"></status>
</kw>
<msg timestamp="20201030 18:27:47.140" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.102" endtime="20201030 18:27:47.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.146" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.142" endtime="20201030 18:27:47.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.149" endtime="20201030 18:27:47.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.095" endtime="20201030 18:27:47.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.090" endtime="20201030 18:27:47.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.175" endtime="20201030 18:27:47.516"></status>
</kw>
<msg timestamp="20201030 18:27:47.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036999375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037462042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.171" endtime="20201030 18:27:47.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036999375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037462042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.525" endtime="20201030 18:27:47.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.544" endtime="20201030 18:27:47.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.164" endtime="20201030 18:27:47.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.159" endtime="20201030 18:27:47.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:47.560" level="INFO">${PHILIP_RES} = [{'diff': 0.00046266699999999994}, {'diff': 0.0004633200000000032}, {'diff': 0.00046541699999999575}, {'diff': 0.0004654029999999962}, {'diff': 0.00046543100000000226}, {'diff': 0.000465375000000004},...</msg>
<status status="PASS" starttime="20201030 18:27:47.552" endtime="20201030 18:27:47.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:47.574" level="INFO">${RESULT} = {'diff': [0.00046266699999999994, 0.0004633200000000032, 0.00046541699999999575, 0.0004654029999999962, 0.00046543100000000226, 0.000465375000000004, 0.0004653889999999966, 0.0004652360000000008, 0.00...</msg>
<status status="PASS" starttime="20201030 18:27:47.562" endtime="20201030 18:27:47.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.585" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:47.583" endtime="20201030 18:27:47.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.590" level="INFO">VALUE: [0.00046266699999999994, 0.0004633200000000032, 0.00046541699999999575, 0.0004654029999999962, 0.00046543100000000226, 0.000465375000000004, 0.0004653889999999966, 0.0004652360000000008, 0.0004653339999999978, 0.0004654029999999962, 0.000465375000000004, 0.00046537499999999704, 0.0004653339999999978, 0.0004654030000000031, 0.00046531999999999824, 0.0004653469999999979, 0.0004653469999999979, 0.00046531899999999876, 0.00046536199999999694, 0.0004653889999999966, 0.00046534700000000484, 0.00046526399999999996, 0.000465375000000004, 0.0004653469999999979, 0.00046537499999999704, 0.0004653610000000044, 0.00046531899999999876, 0.00046530500000000613, 0.00046531899999999876, 0.00046531899999999876, 0.0004653469999999979, 0.0004652360000000008, 0.0004653049999999992, 0.00046538799999999714, 0.00046536099999999747, 0.0004653049999999992, 0.00046537499999999704, 0.00046538900000000355, 0.00046530599999999867, 0.00046536099999999747, 0.0004654030000000031, 0.00046533299999999833, 0.0004652909999999996, 0.0004653469999999979, 0.0004652500000000004, 0.00046524999999999345, 0.0004652909999999996, 0.0004653049999999992, 0.00046531899999999876, 0.0004652500000000004]</msg>
<status status="PASS" starttime="20201030 18:27:47.587" endtime="20201030 18:27:47.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.576" endtime="20201030 18:27:47.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:47.603" endtime="20201030 18:27:47.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.599" endtime="20201030 18:27:47.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.596" endtime="20201030 18:27:47.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.086" endtime="20201030 18:27:47.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.085" endtime="20201030 18:27:47.628"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.650" endtime="20201030 18:27:47.684"></status>
</kw>
<msg timestamp="20201030 18:27:47.685" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.646" endtime="20201030 18:27:47.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.692" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.688" endtime="20201030 18:27:47.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.694" endtime="20201030 18:27:47.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.639" endtime="20201030 18:27:47.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.634" endtime="20201030 18:27:47.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.717" endtime="20201030 18:27:48.055"></status>
</kw>
<msg timestamp="20201030 18:27:48.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036847917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037342972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.714" endtime="20201030 18:27:48.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036847917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037342972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.064" endtime="20201030 18:27:48.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.082" endtime="20201030 18:27:48.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.707" endtime="20201030 18:27:48.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.702" endtime="20201030 18:27:48.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:48.098" level="INFO">${PHILIP_RES} = [{'diff': 0.0004950550000000012}, {'diff': 0.0004964719999999978}, {'diff': 0.0004944309999999966}, {'diff': 0.0004945839999999993}, {'diff': 0.0004964999999999969}, {'diff': 0.0004944590000000026}, {...</msg>
<status status="PASS" starttime="20201030 18:27:48.091" endtime="20201030 18:27:48.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.109" level="INFO">${RESULT} = {'diff': [0.0004950550000000012, 0.0004964719999999978, 0.0004944309999999966, 0.0004945839999999993, 0.0004964999999999969, 0.0004944590000000026, 0.0004945000000000019, 0.0004964589999999977, 0.0004...</msg>
<status status="PASS" starttime="20201030 18:27:48.100" endtime="20201030 18:27:48.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.120" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:48.117" endtime="20201030 18:27:48.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.125" level="INFO">VALUE: [0.0004950550000000012, 0.0004964719999999978, 0.0004944309999999966, 0.0004945839999999993, 0.0004964999999999969, 0.0004944590000000026, 0.0004945000000000019, 0.0004964589999999977, 0.0004944030000000044, 0.0004944860000000023, 0.0004964159999999995, 0.0004944579999999962, 0.0004944440000000036, 0.0004964029999999994, 0.0004944860000000023, 0.0004944299999999971, 0.0004963889999999999, 0.0004943609999999987, 0.0004945140000000015, 0.0004964439999999987, 0.0004945139999999945, 0.0004944860000000023, 0.0004964159999999995, 0.0004945410000000011, 0.000494528000000001, 0.0004964859999999974, 0.0004943890000000048, 0.0004944860000000023, 0.0004964859999999974, 0.0004944720000000027, 0.0004945000000000019, 0.0004964719999999978, 0.0004944030000000044, 0.0004944449999999961, 0.0004965140000000035, 0.0004945000000000019, 0.0004945829999999998, 0.0004964999999999969, 0.000494610999999999, 0.0004944719999999958, 0.0004964579999999982, 0.0004945140000000015, 0.0004944439999999967, 0.0004963610000000007, 0.0004944589999999957, 0.0004944170000000039, 0.0004963880000000004, 0.0004944170000000039, 0.0004944730000000092, 0.0004964309999999916]</msg>
<status status="PASS" starttime="20201030 18:27:48.122" endtime="20201030 18:27:48.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.111" endtime="20201030 18:27:48.128"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.137" endtime="20201030 18:27:48.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.133" endtime="20201030 18:27:48.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.131" endtime="20201030 18:27:48.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.630" endtime="20201030 18:27:48.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.629" endtime="20201030 18:27:48.163"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.184" endtime="20201030 18:27:48.221"></status>
</kw>
<msg timestamp="20201030 18:27:48.223" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.181" endtime="20201030 18:27:48.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.229" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.225" endtime="20201030 18:27:48.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.231" endtime="20201030 18:27:48.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.174" endtime="20201030 18:27:48.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.169" endtime="20201030 18:27:48.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.255" endtime="20201030 18:27:48.607"></status>
</kw>
<msg timestamp="20201030 18:27:48.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03669525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037224389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:48.251" endtime="20201030 18:27:48.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03669525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037224389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:48.616" endtime="20201030 18:27:48.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.634" endtime="20201030 18:27:48.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.244" endtime="20201030 18:27:48.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.239" endtime="20201030 18:27:48.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:48.650" level="INFO">${PHILIP_RES} = [{'diff': 0.0005291389999999979}, {'diff': 0.0005296249999999988}, {'diff': 0.0005296659999999981}, {'diff': 0.0005295560000000005}, {'diff': 0.0005295280000000013}, {'diff': 0.000529555000000001}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:48.643" endtime="20201030 18:27:48.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.659" level="INFO">${RESULT} = {'diff': [0.0005291389999999979, 0.0005296249999999988, 0.0005296659999999981, 0.0005295560000000005, 0.0005295280000000013, 0.000529555000000001, 0.000529555000000001, 0.0005294870000000021, 0.000529...</msg>
<status status="PASS" starttime="20201030 18:27:48.652" endtime="20201030 18:27:48.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.670" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:48.668" endtime="20201030 18:27:48.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.675" level="INFO">VALUE: [0.0005291389999999979, 0.0005296249999999988, 0.0005296659999999981, 0.0005295560000000005, 0.0005295280000000013, 0.000529555000000001, 0.000529555000000001, 0.0005294870000000021, 0.000529555000000001, 0.0005295560000000005, 0.000529555000000001, 0.0005295280000000013, 0.00052957, 0.0005295969999999997, 0.00052957, 0.000529555000000001, 0.0005295000000000022, 0.0005295140000000018, 0.0005296109999999993, 0.0005294580000000035, 0.0005295560000000005, 0.0005294860000000026, 0.0005296119999999988, 0.00052957, 0.0005294860000000026, 0.0005295000000000022, 0.0005294860000000026, 0.0005294580000000035, 0.0005295140000000018, 0.0005295280000000013, 0.0005295280000000013, 0.0005295000000000022, 0.0005295560000000005, 0.0005295280000000013, 0.0005295690000000006, 0.0005296670000000045, 0.0005295139999999948, 0.0005294859999999957, 0.0005296949999999967, 0.0005296670000000045, 0.0005297079999999968, 0.0005295270000000019, 0.0005295690000000006, 0.0005295830000000001, 0.0005295270000000019, 0.0005295979999999922, 0.0005295000000000022, 0.0005295000000000022, 0.0005294860000000096, 0.0005295560000000005]</msg>
<status status="PASS" starttime="20201030 18:27:48.672" endtime="20201030 18:27:48.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.661" endtime="20201030 18:27:48.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.688" endtime="20201030 18:27:48.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.684" endtime="20201030 18:27:48.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.681" endtime="20201030 18:27:48.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.165" endtime="20201030 18:27:48.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.164" endtime="20201030 18:27:48.713"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.735" endtime="20201030 18:27:48.775"></status>
</kw>
<msg timestamp="20201030 18:27:48.777" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.732" endtime="20201030 18:27:48.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.783" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.779" endtime="20201030 18:27:48.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.785" endtime="20201030 18:27:48.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.725" endtime="20201030 18:27:48.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.719" endtime="20201030 18:27:48.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.809" endtime="20201030 18:27:49.161"></status>
</kw>
<msg timestamp="20201030 18:27:49.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038611111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039171972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.805" endtime="20201030 18:27:49.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038611111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039171972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.170" endtime="20201030 18:27:49.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.188" endtime="20201030 18:27:49.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.798" endtime="20201030 18:27:49.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.793" endtime="20201030 18:27:49.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:49.204" level="INFO">${PHILIP_RES} = [{'diff': 0.0005608610000000028}, {'diff': 0.0005635829999999994}, {'diff': 0.0005626249999999972}, {'diff': 0.0005625559999999988}, {'diff': 0.0005626250000000041}, {'diff': 0.000562679999999996}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:49.197" endtime="20201030 18:27:49.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:49.213" level="INFO">${RESULT} = {'diff': [0.0005608610000000028, 0.0005635829999999994, 0.0005626249999999972, 0.0005625559999999988, 0.0005626250000000041, 0.000562679999999996, 0.0005626109999999976, 0.0005626530000000032, 0.00056...</msg>
<status status="PASS" starttime="20201030 18:27:49.206" endtime="20201030 18:27:49.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.224" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:49.222" endtime="20201030 18:27:49.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.229" level="INFO">VALUE: [0.0005608610000000028, 0.0005635829999999994, 0.0005626249999999972, 0.0005625559999999988, 0.0005626250000000041, 0.000562679999999996, 0.0005626109999999976, 0.0005626530000000032, 0.0005626249999999972, 0.0005635420000000002, 0.0005625829999999984, 0.0005625279999999996, 0.0005625419999999992, 0.0005625549999999993, 0.0005626119999999971, 0.0005626109999999976, 0.0005626390000000037, 0.0005625829999999984, 0.0005625409999999997, 0.0005625549999999993, 0.0005626249999999972, 0.0005625700000000053, 0.000562597000000005, 0.0005626389999999967, 0.0005626389999999967, 0.0005625279999999996, 0.0005626939999999955, 0.0005626250000000041, 0.0005626250000000041, 0.0005626939999999955, 0.0005627360000000012, 0.0005626659999999964, 0.0005626659999999964, 0.0005626940000000025, 0.0005626390000000037, 0.0005626529999999963, 0.0005626110000000045, 0.0005626529999999963, 0.0005625419999999992, 0.0005625829999999984, 0.0005626249999999972, 0.0005626109999999906, 0.0005625689999999989, 0.0005627500000000007, 0.0005625840000000049, 0.0005625689999999989, 0.0005625970000000119, 0.0005625409999999997, 0.0005625550000000062, 0.0005627220000000016]</msg>
<status status="PASS" starttime="20201030 18:27:49.226" endtime="20201030 18:27:49.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.215" endtime="20201030 18:27:49.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:49.243" endtime="20201030 18:27:49.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.237" endtime="20201030 18:27:49.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.235" endtime="20201030 18:27:49.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.715" endtime="20201030 18:27:49.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.714" endtime="20201030 18:27:49.268"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.290" endtime="20201030 18:27:49.331"></status>
</kw>
<msg timestamp="20201030 18:27:49.332" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.287" endtime="20201030 18:27:49.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.338" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.334" endtime="20201030 18:27:49.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.341" endtime="20201030 18:27:49.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.280" endtime="20201030 18:27:49.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.274" endtime="20201030 18:27:49.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.364" endtime="20201030 18:27:49.716"></status>
</kw>
<msg timestamp="20201030 18:27:49.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037143875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037738458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.361" endtime="20201030 18:27:49.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037143875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037738458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.725" endtime="20201030 18:27:49.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.743" endtime="20201030 18:27:49.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.354" endtime="20201030 18:27:49.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.349" endtime="20201030 18:27:49.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:49.759" level="INFO">${PHILIP_RES} = [{'diff': 0.0005945830000000027}, {'diff': 0.0005946939999999998}, {'diff': 0.000596832999999998}, {'diff': 0.0005967360000000005}, {'diff': 0.0005967500000000001}, {'diff': 0.0005967080000000013}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:49.752" endtime="20201030 18:27:49.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:49.770" level="INFO">${RESULT} = {'diff': [0.0005945830000000027, 0.0005946939999999998, 0.000596832999999998, 0.0005967360000000005, 0.0005967500000000001, 0.0005967080000000013, 0.000596832999999998, 0.000596737, 0.0005968059999999...</msg>
<status status="PASS" starttime="20201030 18:27:49.762" endtime="20201030 18:27:49.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.780" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:49.778" endtime="20201030 18:27:49.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.786" level="INFO">VALUE: [0.0005945830000000027, 0.0005946939999999998, 0.000596832999999998, 0.0005967360000000005, 0.0005967500000000001, 0.0005967080000000013, 0.000596832999999998, 0.000596737, 0.0005968059999999983, 0.0005967780000000061, 0.0005967909999999993, 0.0005967360000000005, 0.0005967500000000001, 0.0005967500000000001, 0.0005967360000000005, 0.0005967919999999988, 0.0005967639999999996, 0.0005967080000000013, 0.0005967080000000013, 0.0005968189999999984, 0.0005966670000000021, 0.0005967639999999996, 0.0005967360000000005, 0.0005967220000000009, 0.0005967639999999996, 0.0005967220000000009, 0.0005967360000000005, 0.0005967220000000009, 0.0005967919999999988, 0.0005967919999999988, 0.0005968469999999976, 0.0005967639999999996, 0.0005967920000000057, 0.0005967919999999988, 0.0005968059999999983, 0.0005967500000000001, 0.000596847999999997, 0.0005967919999999988, 0.0005968470000000045, 0.0005967920000000057, 0.0005968199999999979, 0.0005967919999999988, 0.0005967639999999996, 0.0005967919999999988, 0.0005968189999999984, 0.000596750000000007, 0.0005968059999999914, 0.0005967639999999996, 0.0005967499999999931, 0.0005967919999999988]</msg>
<status status="PASS" starttime="20201030 18:27:49.783" endtime="20201030 18:27:49.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.772" endtime="20201030 18:27:49.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:49.798" endtime="20201030 18:27:49.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.794" endtime="20201030 18:27:49.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.791" endtime="20201030 18:27:49.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.270" endtime="20201030 18:27:49.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.269" endtime="20201030 18:27:49.824"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.845" endtime="20201030 18:27:49.888"></status>
</kw>
<msg timestamp="20201030 18:27:49.889" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.842" endtime="20201030 18:27:49.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.896" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.892" endtime="20201030 18:27:49.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.898" endtime="20201030 18:27:49.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.835" endtime="20201030 18:27:49.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.830" endtime="20201030 18:27:49.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.921" endtime="20201030 18:27:50.270"></status>
</kw>
<msg timestamp="20201030 18:27:50.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037192069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037823472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.918" endtime="20201030 18:27:50.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037192069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037823472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.280" endtime="20201030 18:27:50.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.301" endtime="20201030 18:27:50.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.911" endtime="20201030 18:27:50.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.906" endtime="20201030 18:27:50.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:50.323" level="INFO">${PHILIP_RES} = [{'diff': 0.0006314029999999957}, {'diff': 0.0006299449999999998}, {'diff': 0.0006299029999999942}, {'diff': 0.0006319439999999954}, {'diff': 0.000630083999999996}, {'diff': 0.0006299589999999994}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:50.314" endtime="20201030 18:27:50.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:50.337" level="INFO">${RESULT} = {'diff': [0.0006314029999999957, 0.0006299449999999998, 0.0006299029999999942, 0.0006319439999999954, 0.000630083999999996, 0.0006299589999999994, 0.0006319159999999963, 0.0006299579999999999, 0.00063...</msg>
<status status="PASS" starttime="20201030 18:27:50.326" endtime="20201030 18:27:50.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.352" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:50.349" endtime="20201030 18:27:50.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.360" level="INFO">VALUE: [0.0006314029999999957, 0.0006299449999999998, 0.0006299029999999942, 0.0006319439999999954, 0.000630083999999996, 0.0006299589999999994, 0.0006319159999999963, 0.0006299579999999999, 0.0006300419999999973, 0.0006320000000000006, 0.000629985999999999, 0.0006299159999999943, 0.0006318620000000039, 0.0006298890000000015, 0.0006299019999999947, 0.0006318050000000061, 0.0006298889999999946, 0.0006298339999999958, 0.0006318470000000048, 0.0006298890000000015, 0.0006301249999999953, 0.0006320140000000002, 0.000629985999999999, 0.0006300420000000043, 0.0006320419999999993, 0.0006300829999999966, 0.000630068999999997, 0.0006319590000000014, 0.000630068999999997, 0.0006299449999999998, 0.0006318879999999971, 0.0006299730000000059, 0.0006299869999999985, 0.000631874999999997, 0.0006299160000000012, 0.000629972999999999, 0.0006319580000000019, 0.0006301110000000026, 0.0006299719999999925, 0.0006320419999999993, 0.0006300409999999979, 0.0006301110000000026, 0.0006319440000000093, 0.0006300280000000047, 0.0006299720000000064, 0.0006319580000000019, 0.0006300979999999956, 0.0006299579999999999, 0.0006318190000000057, 0.000629985999999999]</msg>
<status status="PASS" starttime="20201030 18:27:50.355" endtime="20201030 18:27:50.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.340" endtime="20201030 18:27:50.364"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.377" endtime="20201030 18:27:50.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.371" endtime="20201030 18:27:50.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.367" endtime="20201030 18:27:50.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.826" endtime="20201030 18:27:50.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.825" endtime="20201030 18:27:50.403"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.425" endtime="20201030 18:27:50.468"></status>
</kw>
<msg timestamp="20201030 18:27:50.470" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.421" endtime="20201030 18:27:50.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.476" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.472" endtime="20201030 18:27:50.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.478" endtime="20201030 18:27:50.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.414" endtime="20201030 18:27:50.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.409" endtime="20201030 18:27:50.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.503" endtime="20201030 18:27:50.844"></status>
</kw>
<msg timestamp="20201030 18:27:50.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036943042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037608375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.500" endtime="20201030 18:27:50.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036943042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037608375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.853" endtime="20201030 18:27:50.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.871" endtime="20201030 18:27:50.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.492" endtime="20201030 18:27:50.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.487" endtime="20201030 18:27:50.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:50.887" level="INFO">${PHILIP_RES} = [{'diff': 0.0006653329999999971}, {'diff': 0.0006651950000000004}, {'diff': 0.0006681250000000055}, {'diff': 0.000668110999999999}, {'diff': 0.0006680699999999998}, {'diff': 0.0006681389999999982}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:50.880" endtime="20201030 18:27:50.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:50.896" level="INFO">${RESULT} = {'diff': [0.0006653329999999971, 0.0006651950000000004, 0.0006681250000000055, 0.000668110999999999, 0.0006680699999999998, 0.0006681389999999982, 0.0006680560000000002, 0.0006679860000000024, 0.00066...</msg>
<status status="PASS" starttime="20201030 18:27:50.889" endtime="20201030 18:27:50.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.906" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:50.904" endtime="20201030 18:27:50.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.912" level="INFO">VALUE: [0.0006653329999999971, 0.0006651950000000004, 0.0006681250000000055, 0.000668110999999999, 0.0006680699999999998, 0.0006681389999999982, 0.0006680560000000002, 0.0006679860000000024, 0.000668013000000002, 0.0006679870000000018, 0.0006680000000000019, 0.0006679719999999958, 0.0006680270000000016, 0.0006680000000000019, 0.0006679589999999958, 0.0006678889999999979, 0.0006680280000000011, 0.0006679860000000024, 0.0006679580000000032, 0.0006678610000000057, 0.0006679310000000035, 0.0006680420000000006, 0.0006679580000000032, 0.0006680000000000019, 0.0006680140000000015, 0.0006680420000000006, 0.0006680410000000012, 0.0006680000000000019, 0.0006680140000000015, 0.000668110999999999, 0.0006680690000000003, 0.0006679860000000024, 0.0006680690000000003, 0.0006679870000000018, 0.0006679580000000032, 0.0006680279999999941, 0.0006679579999999963, 0.000668110999999999, 0.0006679450000000031, 0.000667901999999998, 0.0006679440000000036, 0.0006680000000000019, 0.0006680420000000076, 0.0006680139999999946, 0.0006680550000000007, 0.0006680550000000007, 0.0006680000000000019, 0.0006680000000000019, 0.0006679579999999963, 0.0006679450000000031]</msg>
<status status="PASS" starttime="20201030 18:27:50.909" endtime="20201030 18:27:50.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.898" endtime="20201030 18:27:50.915"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.924" endtime="20201030 18:27:50.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.920" endtime="20201030 18:27:50.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.917" endtime="20201030 18:27:50.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.405" endtime="20201030 18:27:50.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.404" endtime="20201030 18:27:50.950"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.971" endtime="20201030 18:27:51.019"></status>
</kw>
<msg timestamp="20201030 18:27:51.020" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.968" endtime="20201030 18:27:51.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.026" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.022" endtime="20201030 18:27:51.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.028" endtime="20201030 18:27:51.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.961" endtime="20201030 18:27:51.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.955" endtime="20201030 18:27:51.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.052" endtime="20201030 18:27:51.389"></status>
</kw>
<msg timestamp="20201030 18:27:51.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038377889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039079958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.048" endtime="20201030 18:27:51.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038377889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039079958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.398" endtime="20201030 18:27:51.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.417" endtime="20201030 18:27:51.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.041" endtime="20201030 18:27:51.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.036" endtime="20201030 18:27:51.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:51.433" level="INFO">${PHILIP_RES} = [{'diff': 0.0007020689999999996}, {'diff': 0.000703959000000004}, {'diff': 0.0007040279999999954}, {'diff': 0.000703943999999998}, {'diff': 0.0007039309999999979}, {'diff': 0.0007039310000000049}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:51.425" endtime="20201030 18:27:51.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:51.442" level="INFO">${RESULT} = {'diff': [0.0007020689999999996, 0.000703959000000004, 0.0007040279999999954, 0.000703943999999998, 0.0007039309999999979, 0.0007039310000000049, 0.000703943999999998, 0.0007039580000000045, 0.0007039...</msg>
<status status="PASS" starttime="20201030 18:27:51.435" endtime="20201030 18:27:51.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.452" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:51.450" endtime="20201030 18:27:51.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.457" level="INFO">VALUE: [0.0007020689999999996, 0.000703959000000004, 0.0007040279999999954, 0.000703943999999998, 0.0007039309999999979, 0.0007039310000000049, 0.000703943999999998, 0.0007039580000000045, 0.0007039309999999979, 0.0007039449999999975, 0.0007038749999999996, 0.0007038889999999992, 0.0007039450000000044, 0.0007040409999999955, 0.000703943999999998, 0.0007039859999999967, 0.0007039859999999967, 0.000703944000000005, 0.0007039719999999972, 0.0007039580000000045, 0.0007039169999999983, 0.000703959000000004, 0.0007039859999999967, 0.0007040700000000011, 0.0007040140000000028, 0.0007039999999999963, 0.0007039859999999967, 0.0007039720000000041, 0.0007039859999999967, 0.0007040560000000015, 0.0007040140000000028, 0.0007041939999999983, 0.0007039030000000057, 0.0007040410000000025, 0.0007040420000000019, 0.0007040420000000019, 0.0007040140000000028, 0.0007039729999999966, 0.0007039030000000057, 0.0007039170000000122, 0.0007040839999999937, 0.0007039030000000057, 0.0007039159999999989, 0.0007040420000000019, 0.0007039719999999972, 0.0007040549999999951, 0.0007040700000000011, 0.0007040419999999881, 0.0007040409999999886, 0.0007040559999999946]</msg>
<status status="PASS" starttime="20201030 18:27:51.455" endtime="20201030 18:27:51.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.443" endtime="20201030 18:27:51.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:51.472" endtime="20201030 18:27:51.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.466" endtime="20201030 18:27:51.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.463" endtime="20201030 18:27:51.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.952" endtime="20201030 18:27:51.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.950" endtime="20201030 18:27:51.497"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.519" endtime="20201030 18:27:51.568"></status>
</kw>
<msg timestamp="20201030 18:27:51.569" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.516" endtime="20201030 18:27:51.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.576" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.572" endtime="20201030 18:27:51.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.578" endtime="20201030 18:27:51.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.508" endtime="20201030 18:27:51.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.503" endtime="20201030 18:27:51.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.601" endtime="20201030 18:27:51.952"></status>
</kw>
<msg timestamp="20201030 18:27:51.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037916833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038658472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.598" endtime="20201030 18:27:51.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037916833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038658472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.961" endtime="20201030 18:27:51.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.979" endtime="20201030 18:27:51.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.591" endtime="20201030 18:27:51.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.586" endtime="20201030 18:27:51.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:51.995" level="INFO">${PHILIP_RES} = [{'diff': 0.0007416390000000023}, {'diff': 0.0007422919999999986}, {'diff': 0.0007422639999999994}, {'diff': 0.0007421939999999946}, {'diff': 0.0007423750000000034}, {'diff': 0.0007422920000000055}, {...</msg>
<status status="PASS" starttime="20201030 18:27:51.988" endtime="20201030 18:27:51.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.006" level="INFO">${RESULT} = {'diff': [0.0007416390000000023, 0.0007422919999999986, 0.0007422639999999994, 0.0007421939999999946, 0.0007423750000000034, 0.0007422920000000055, 0.000742277999999999, 0.0007423199999999977, 0.00074...</msg>
<status status="PASS" starttime="20201030 18:27:51.997" endtime="20201030 18:27:52.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.017" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:52.014" endtime="20201030 18:27:52.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.022" level="INFO">VALUE: [0.0007416390000000023, 0.0007422919999999986, 0.0007422639999999994, 0.0007421939999999946, 0.0007423750000000034, 0.0007422920000000055, 0.000742277999999999, 0.0007423199999999977, 0.0007422909999999991, 0.0007422639999999994, 0.0007422499999999999, 0.0007422090000000006, 0.0007422499999999999, 0.0007422220000000007, 0.0007423189999999982, 0.0007422639999999994, 0.0007422499999999999, 0.0007424170000000022, 0.0007423340000000042, 0.0007422920000000055, 0.0007422220000000007, 0.000742180000000002, 0.000742195000000001, 0.0007422919999999986, 0.0007422909999999991, 0.0007422639999999994, 0.0007432089999999947, 0.000742195000000001, 0.0007421389999999958, 0.000742195000000001, 0.0007421659999999955, 0.0007421530000000093, 0.0007422359999999933, 0.0007421109999999898, 0.0007421249999999963, 0.0007422499999999999, 0.0007421940000000016, 0.0007420969999999971, 0.0007422499999999999, 0.0007422919999999916, 0.0007422499999999999, 0.0007423200000000046, 0.000742277999999999, 0.0007422359999999933, 0.0007422499999999999, 0.0007421529999999954, 0.0007421940000000016, 0.0007422499999999999, 0.000742277999999999, 0.0007422360000000072]</msg>
<status status="PASS" starttime="20201030 18:27:52.019" endtime="20201030 18:27:52.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.008" endtime="20201030 18:27:52.025"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.035" endtime="20201030 18:27:52.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.030" endtime="20201030 18:27:52.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.028" endtime="20201030 18:27:52.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.499" endtime="20201030 18:27:52.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.498" endtime="20201030 18:27:52.060"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.082" endtime="20201030 18:27:52.131"></status>
</kw>
<msg timestamp="20201030 18:27:52.132" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.078" endtime="20201030 18:27:52.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.139" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.135" endtime="20201030 18:27:52.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.141" endtime="20201030 18:27:52.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.071" endtime="20201030 18:27:52.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.066" endtime="20201030 18:27:52.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.164" endtime="20201030 18:27:52.501"></status>
</kw>
<msg timestamp="20201030 18:27:52.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037129764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037908722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.161" endtime="20201030 18:27:52.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037129764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037908722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.511" endtime="20201030 18:27:52.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.529" endtime="20201030 18:27:52.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.154" endtime="20201030 18:27:52.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.149" endtime="20201030 18:27:52.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:52.545" level="INFO">${PHILIP_RES} = [{'diff': 0.0007789579999999963}, {'diff': 0.0007804440000000051}, {'diff': 0.0007785689999999998}, {'diff': 0.0007785839999999988}, {'diff': 0.0007805270000000031}, {'diff': 0.0007785270000000011}, {...</msg>
<status status="PASS" starttime="20201030 18:27:52.537" endtime="20201030 18:27:52.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.556" level="INFO">${RESULT} = {'diff': [0.0007789579999999963, 0.0007804440000000051, 0.0007785689999999998, 0.0007785839999999988, 0.0007805270000000031, 0.0007785270000000011, 0.0007783749999999978, 0.0007803330000000011, 0.0007...</msg>
<status status="PASS" starttime="20201030 18:27:52.547" endtime="20201030 18:27:52.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.567" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:52.565" endtime="20201030 18:27:52.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.573" level="INFO">VALUE: [0.0007789579999999963, 0.0007804440000000051, 0.0007785689999999998, 0.0007785839999999988, 0.0007805270000000031, 0.0007785270000000011, 0.0007783749999999978, 0.0007803330000000011, 0.0007783610000000052, 0.0007784590000000022, 0.0007804309999999981, 0.0007784170000000035, 0.0007784440000000031, 0.0007803060000000014, 0.000778402999999997, 0.0007784860000000018, 0.0007803749999999998, 0.0007784860000000018, 0.000778514000000001, 0.0007805000000000034, 0.0007785280000000006, 0.0007783890000000043, 0.0007803190000000015, 0.0007785280000000006, 0.0007785420000000001, 0.0007804859999999969, 0.0007785689999999998, 0.0007786110000000054, 0.0007804859999999969, 0.0007784450000000026, 0.000778431000000003, 0.0007804859999999969, 0.000778513999999994, 0.0007784159999999901, 0.0007803889999999924, 0.0007783329999999922, 0.000778402999999997, 0.0007804299999999986, 0.0007785140000000079, 0.0007785000000000014, 0.0007804439999999913, 0.0007784440000000031, 0.0007784590000000091, 0.0007804299999999986, 0.0007784720000000023, 0.0007784579999999958, 0.0007804450000000046, 0.0007784860000000088, 0.0007785550000000002, 0.0007804720000000043]</msg>
<status status="PASS" starttime="20201030 18:27:52.570" endtime="20201030 18:27:52.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.558" endtime="20201030 18:27:52.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.590" endtime="20201030 18:27:52.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.586" endtime="20201030 18:27:52.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.584" endtime="20201030 18:27:52.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.062" endtime="20201030 18:27:52.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.061" endtime="20201030 18:27:52.616"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.637" endtime="20201030 18:27:52.689"></status>
</kw>
<msg timestamp="20201030 18:27:52.690" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.634" endtime="20201030 18:27:52.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.697" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.693" endtime="20201030 18:27:52.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.699" endtime="20201030 18:27:52.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.627" endtime="20201030 18:27:52.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.622" endtime="20201030 18:27:52.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.722" endtime="20201030 18:27:53.065"></status>
</kw>
<msg timestamp="20201030 18:27:53.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036966139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037784958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.719" endtime="20201030 18:27:53.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036966139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037784958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.075" endtime="20201030 18:27:53.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.093" endtime="20201030 18:27:53.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.712" endtime="20201030 18:27:53.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.707" endtime="20201030 18:27:53.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:53.109" level="INFO">${PHILIP_RES} = [{'diff': 0.0008188189999999984}, {'diff': 0.0008204719999999957}, {'diff': 0.0008205560000000001}, {'diff': 0.0008205280000000009}, {'diff': 0.0008204860000000022}, {'diff': 0.0008205280000000009}, {...</msg>
<status status="PASS" starttime="20201030 18:27:53.101" endtime="20201030 18:27:53.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:53.118" level="INFO">${RESULT} = {'diff': [0.0008188189999999984, 0.0008204719999999957, 0.0008205560000000001, 0.0008205280000000009, 0.0008204860000000022, 0.0008205280000000009, 0.0008204590000000025, 0.0008204439999999966, 0.0008...</msg>
<status status="PASS" starttime="20201030 18:27:53.111" endtime="20201030 18:27:53.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.128" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:53.126" endtime="20201030 18:27:53.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.134" level="INFO">VALUE: [0.0008188189999999984, 0.0008204719999999957, 0.0008205560000000001, 0.0008205280000000009, 0.0008204860000000022, 0.0008205280000000009, 0.0008204590000000025, 0.0008204439999999966, 0.0008204719999999957, 0.000820445000000003, 0.0008204169999999969, 0.0008204860000000022, 0.0008204999999999948, 0.0008205280000000009, 0.0008205140000000014, 0.000820527999999994, 0.0008204029999999973, 0.0008205969999999993, 0.0008204999999999948, 0.0008205969999999993, 0.0008205699999999996, 0.0008205000000000018, 0.0008205140000000014, 0.0008205270000000014, 0.0008204019999999979, 0.0008204300000000039, 0.0008204030000000043, 0.0008205280000000009, 0.0008204159999999974, 0.0008203749999999982, 0.0008203329999999925, 0.000820429999999997, 0.0008204019999999979, 0.0008204720000000026, 0.0008204870000000086, 0.0008205280000000009, 0.0008204720000000026, 0.0008205419999999936, 0.0008205130000000088, 0.0008206799999999903, 0.0008206109999999989, 0.0008205420000000074, 0.0008206250000000054, 0.0008205969999999924, 0.0008204859999999953, 0.0008204160000000044, 0.0008205550000000006, 0.0008206109999999989, 0.0008205409999999941, 0.0008205000000000018]</msg>
<status status="PASS" starttime="20201030 18:27:53.131" endtime="20201030 18:27:53.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.120" endtime="20201030 18:27:53.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.146" endtime="20201030 18:27:53.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.142" endtime="20201030 18:27:53.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.139" endtime="20201030 18:27:53.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.618" endtime="20201030 18:27:53.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.616" endtime="20201030 18:27:53.172"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.196" endtime="20201030 18:27:53.251"></status>
</kw>
<msg timestamp="20201030 18:27:53.252" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.192" endtime="20201030 18:27:53.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.258" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.254" endtime="20201030 18:27:53.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.261" endtime="20201030 18:27:53.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.185" endtime="20201030 18:27:53.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.180" endtime="20201030 18:27:53.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.284" endtime="20201030 18:27:53.636"></status>
</kw>
<msg timestamp="20201030 18:27:53.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041105639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041964653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.281" endtime="20201030 18:27:53.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041105639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041964653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.645" endtime="20201030 18:27:53.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.665" endtime="20201030 18:27:53.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.274" endtime="20201030 18:27:53.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.269" endtime="20201030 18:27:53.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:53.684" level="INFO">${PHILIP_RES} = [{'diff': 0.0008590139999999982}, {'diff': 0.000861652999999997}, {'diff': 0.0008607360000000008}, {'diff': 0.0008608200000000052}, {'diff': 0.0008607500000000004}, {'diff': 0.000860764}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:53.675" endtime="20201030 18:27:53.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:53.693" level="INFO">${RESULT} = {'diff': [0.0008590139999999982, 0.000861652999999997, 0.0008607360000000008, 0.0008608200000000052, 0.0008607500000000004, 0.000860764, 0.0008607500000000004, 0.0008607500000000004, 0.000860708000000...</msg>
<status status="PASS" starttime="20201030 18:27:53.686" endtime="20201030 18:27:53.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.703" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:53.701" endtime="20201030 18:27:53.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.709" level="INFO">VALUE: [0.0008590139999999982, 0.000861652999999997, 0.0008607360000000008, 0.0008608200000000052, 0.0008607500000000004, 0.000860764, 0.0008607500000000004, 0.0008607500000000004, 0.0008607080000000017, 0.0008607080000000017, 0.0008607360000000008, 0.0008608329999999983, 0.0008607500000000004, 0.0008617090000000022, 0.0008607090000000012, 0.0008607360000000008, 0.0008607360000000008, 0.0008606670000000025, 0.0008607220000000013, 0.0008607220000000013, 0.0008607500000000004, 0.0008606950000000016, 0.0008607079999999948, 0.0008607369999999934, 0.0008608199999999983, 0.000860764, 0.0008608339999999909, 0.000860792000000013, 0.0008607499999999935, 0.0008606940000000091, 0.0008607909999999996, 0.0008608339999999909, 0.0008606379999999969, 0.0008606950000000085, 0.000860681000000002, 0.0008606800000000026, 0.0008616530000000039, 0.0008605700000000049, 0.0008607360000000008, 0.0008607499999999935, 0.0008607500000000073, 0.0008607219999999943, 0.0008607360000000008, 0.0008607230000000077, 0.0008607089999999873, 0.0008608189999999988, 0.0008608469999999979, 0.0008607909999999996, 0.0008607500000000073, 0.0008606670000000094]</msg>
<status status="PASS" starttime="20201030 18:27:53.706" endtime="20201030 18:27:53.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.694" endtime="20201030 18:27:53.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.724" endtime="20201030 18:27:53.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.718" endtime="20201030 18:27:53.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.715" endtime="20201030 18:27:53.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.175" endtime="20201030 18:27:53.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.173" endtime="20201030 18:27:53.749"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.772" endtime="20201030 18:27:53.828"></status>
</kw>
<msg timestamp="20201030 18:27:53.829" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.768" endtime="20201030 18:27:53.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.835" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.831" endtime="20201030 18:27:53.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.838" endtime="20201030 18:27:53.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.761" endtime="20201030 18:27:53.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.755" endtime="20201030 18:27:53.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.862" endtime="20201030 18:27:54.201"></status>
</kw>
<msg timestamp="20201030 18:27:54.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037687972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038590681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.858" endtime="20201030 18:27:54.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037687972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038590681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.210" endtime="20201030 18:27:54.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.228" endtime="20201030 18:27:54.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.851" endtime="20201030 18:27:54.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.846" endtime="20201030 18:27:54.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:54.244" level="INFO">${PHILIP_RES} = [{'diff': 0.0009027090000000015}, {'diff': 0.0009020969999999975}, {'diff': 0.0009020279999999992}, {'diff': 0.0009019030000000025}, {'diff': 0.000902}, {'diff': 0.0009019720000000009}, {'diff': 0.000...</msg>
<status status="PASS" starttime="20201030 18:27:54.236" endtime="20201030 18:27:54.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.254" level="INFO">${RESULT} = {'diff': [0.0009027090000000015, 0.0009020969999999975, 0.0009020279999999992, 0.0009019030000000025, 0.000902, 0.0009019720000000009, 0.0009019450000000012, 0.0009019159999999957, 0.00090194500000000...</msg>
<status status="PASS" starttime="20201030 18:27:54.246" endtime="20201030 18:27:54.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.264" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:54.262" endtime="20201030 18:27:54.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.270" level="INFO">VALUE: [0.0009027090000000015, 0.0009020969999999975, 0.0009020279999999992, 0.0009019030000000025, 0.000902, 0.0009019720000000009, 0.0009019450000000012, 0.0009019159999999957, 0.0009019450000000012, 0.000902, 0.0009020550000000058, 0.000902, 0.000902, 0.0009019580000000013, 0.0009021109999999971, 0.0009021109999999971, 0.0009022500000000003, 0.0009020139999999996, 0.0009021390000000032, 0.0009020269999999997, 0.0009020690000000053, 0.0009021249999999967, 0.0009020420000000057, 0.0009020549999999988, 0.0009021109999999971, 0.0009022220000000011, 0.0009020839999999974, 0.0009021250000000036, 0.0009021669999999954, 0.0009021529999999889, 0.0009020839999999974, 0.0009020690000000053, 0.0009021109999999971, 0.000902, 0.000901790999999999, 0.000901806000000005, 0.0009019170000000021, 0.0009019720000000009, 0.0009029309999999957, 0.0009019579999999944, 0.0009019030000000094, 0.0009018479999999968, 0.0009019720000000009, 0.0009018329999999908, 0.0009019310000000086, 0.0009018330000000047, 0.000901790999999999, 0.0009017360000000002, 0.0009018189999999981, 0.000901806000000005]</msg>
<status status="PASS" starttime="20201030 18:27:54.267" endtime="20201030 18:27:54.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.256" endtime="20201030 18:27:54.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.282" endtime="20201030 18:27:54.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.278" endtime="20201030 18:27:54.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.275" endtime="20201030 18:27:54.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.751" endtime="20201030 18:27:54.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.750" endtime="20201030 18:27:54.307"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.329" endtime="20201030 18:27:54.387"></status>
</kw>
<msg timestamp="20201030 18:27:54.389" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.326" endtime="20201030 18:27:54.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.395" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.391" endtime="20201030 18:27:54.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.397" endtime="20201030 18:27:54.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.319" endtime="20201030 18:27:54.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.313" endtime="20201030 18:27:54.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.421" endtime="20201030 18:27:54.760"></status>
</kw>
<msg timestamp="20201030 18:27:54.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036815792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037757236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.417" endtime="20201030 18:27:54.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036815792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037757236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.769" endtime="20201030 18:27:54.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.787" endtime="20201030 18:27:54.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.410" endtime="20201030 18:27:54.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.405" endtime="20201030 18:27:54.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:54.803" level="INFO">${PHILIP_RES} = [{'diff': 0.0009414439999999996}, {'diff': 0.0009438609999999972}, {'diff': 0.0009421110000000024}, {'diff': 0.0009420690000000037}, {'diff': 0.0009439720000000013}, {'diff': 0.000942124999999995}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:54.795" endtime="20201030 18:27:54.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.814" level="INFO">${RESULT} = {'diff': [0.0009414439999999996, 0.0009438609999999972, 0.0009421110000000024, 0.0009420690000000037, 0.0009439720000000013, 0.000942124999999995, 0.0009420269999999981, 0.000944125000000004, 0.000942...</msg>
<status status="PASS" starttime="20201030 18:27:54.805" endtime="20201030 18:27:54.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.824" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:54.822" endtime="20201030 18:27:54.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.830" level="INFO">VALUE: [0.0009414439999999996, 0.0009438609999999972, 0.0009421110000000024, 0.0009420690000000037, 0.0009439720000000013, 0.000942124999999995, 0.0009420269999999981, 0.000944125000000004, 0.0009422780000000047, 0.0009422079999999999, 0.0009441799999999959, 0.0009420830000000033, 0.0009420970000000028, 0.0009439859999999939, 0.0009420279999999975, 0.0009420419999999971, 0.000944014, 0.0009421810000000003, 0.0009421390000000016, 0.0009440000000000004, 0.0009420419999999971, 0.000942125000000002, 0.0009440689999999988, 0.0009421530000000011, 0.0009420280000000045, 0.0009439450000000016, 0.0009420970000000028, 0.000942125000000002, 0.0009440549999999992, 0.0009421389999999946, 0.0009420140000000049, 0.0009440699999999913, 0.0009421389999999946, 0.0009420839999999958, 0.000944125000000004, 0.0009420560000000106, 0.0009420829999999963, 0.0009439860000000078, 0.0009420700000000032, 0.0009421110000000094, 0.0009440840000000117, 0.0009421799999999869, 0.0009421530000000011, 0.0009441520000000037, 0.0009421530000000011, 0.0009422359999999991, 0.0009440839999999978, 0.0009422359999999991, 0.0009421530000000011, 0.0009440699999999913]</msg>
<status status="PASS" starttime="20201030 18:27:54.827" endtime="20201030 18:27:54.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.816" endtime="20201030 18:27:54.833"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.842" endtime="20201030 18:27:54.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.838" endtime="20201030 18:27:54.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.835" endtime="20201030 18:27:54.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.309" endtime="20201030 18:27:54.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.308" endtime="20201030 18:27:54.867"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.889" endtime="20201030 18:27:54.950"></status>
</kw>
<msg timestamp="20201030 18:27:54.951" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.886" endtime="20201030 18:27:54.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.957" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.953" endtime="20201030 18:27:54.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.959" endtime="20201030 18:27:54.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.878" endtime="20201030 18:27:54.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.873" endtime="20201030 18:27:54.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.983" endtime="20201030 18:27:55.323"></status>
</kw>
<msg timestamp="20201030 18:27:55.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036768944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037753819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.979" endtime="20201030 18:27:55.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036768944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037753819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.332" endtime="20201030 18:27:55.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.351" endtime="20201030 18:27:55.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.972" endtime="20201030 18:27:55.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.967" endtime="20201030 18:27:55.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:55.367" level="INFO">${PHILIP_RES} = [{'diff': 0.0009848750000000031}, {'diff': 0.0009862919999999997}, {'diff': 0.0009870550000000006}, {'diff': 0.0009871249999999984}, {'diff': 0.0009869719999999957}, {'diff': 0.000987139000000005}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:55.359" endtime="20201030 18:27:55.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:55.376" level="INFO">${RESULT} = {'diff': [0.0009848750000000031, 0.0009862919999999997, 0.0009870550000000006, 0.0009871249999999984, 0.0009869719999999957, 0.000987139000000005, 0.0009871940000000037, 0.0009872079999999964, 0.00098...</msg>
<status status="PASS" starttime="20201030 18:27:55.369" endtime="20201030 18:27:55.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.386" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:55.384" endtime="20201030 18:27:55.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.392" level="INFO">VALUE: [0.0009848750000000031, 0.0009862919999999997, 0.0009870550000000006, 0.0009871249999999984, 0.0009869719999999957, 0.000987139000000005, 0.0009871940000000037, 0.0009872079999999964, 0.0009872080000000033, 0.0009871810000000036, 0.0009870690000000001, 0.0009873050000000008, 0.0009873750000000056, 0.000987443999999997, 0.0009872780000000012, 0.0009872910000000013, 0.000987360999999999, 0.000987221999999996, 0.0009872770000000017, 0.0009871940000000037, 0.000987250000000002, 0.0009872080000000033, 0.0009871529999999976, 0.000987167000000004, 0.000987152000000005, 0.0009870829999999997, 0.000987069000000007, 0.0009870550000000006, 0.0009872080000000033, 0.000987138999999998, 0.000987040999999994, 0.000987138999999998, 0.0009871119999999983, 0.0009872630000000021, 0.0009873060000000072, 0.0009871939999999968, 0.0009870829999999997, 0.0009869720000000026, 0.0009870829999999997, 0.0009870969999999923, 0.0009870969999999923, 0.0009870689999999932, 0.0009871250000000054, 0.0009870270000000014, 0.0009870550000000006, 0.000986944999999989, 0.0009870000000000018, 0.000987028000000001, 0.0009870419999999935, 0.0009871109999999989]</msg>
<status status="PASS" starttime="20201030 18:27:55.389" endtime="20201030 18:27:55.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.378" endtime="20201030 18:27:55.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.404" endtime="20201030 18:27:55.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.400" endtime="20201030 18:27:55.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.397" endtime="20201030 18:27:55.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.869" endtime="20201030 18:27:55.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.868" endtime="20201030 18:27:55.429"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.451" endtime="20201030 18:27:55.515"></status>
</kw>
<msg timestamp="20201030 18:27:55.517" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.448" endtime="20201030 18:27:55.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.523" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.519" endtime="20201030 18:27:55.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.525" endtime="20201030 18:27:55.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.441" endtime="20201030 18:27:55.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.435" endtime="20201030 18:27:55.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.549" endtime="20201030 18:27:55.887"></status>
</kw>
<msg timestamp="20201030 18:27:55.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038482472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039513125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.545" endtime="20201030 18:27:55.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038482472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039513125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.897" endtime="20201030 18:27:55.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.915" endtime="20201030 18:27:55.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.538" endtime="20201030 18:27:55.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.533" endtime="20201030 18:27:55.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:55.931" level="INFO">${PHILIP_RES} = [{'diff': 0.0010306530000000064}, {'diff': 0.0010302500000000034}, {'diff': 0.0010302780000000025}, {'diff': 0.001030070000000001}, {'diff': 0.0010301110000000002}, {'diff': 0.0010301249999999998}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:55.923" endtime="20201030 18:27:55.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:55.940" level="INFO">${RESULT} = {'diff': [0.0010306530000000064, 0.0010302500000000034, 0.0010302780000000025, 0.001030070000000001, 0.0010301110000000002, 0.0010301249999999998, 0.0010302499999999964, 0.0010301939999999982, 0.00103...</msg>
<status status="PASS" starttime="20201030 18:27:55.933" endtime="20201030 18:27:55.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.951" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:55.948" endtime="20201030 18:27:55.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.956" level="INFO">VALUE: [0.0010306530000000064, 0.0010302500000000034, 0.0010302780000000025, 0.001030070000000001, 0.0010301110000000002, 0.0010301249999999998, 0.0010302499999999964, 0.0010301939999999982, 0.0010300560000000014, 0.0010302080000000047, 0.0010303889999999996, 0.0010300690000000015, 0.0010302369999999964, 0.001030264000000003, 0.0010301950000000046, 0.001030166000000006, 0.0010300410000000024, 0.0010301110000000002, 0.0010301669999999985, 0.0010300560000000014, 0.001030069999999994, 0.0010302080000000047, 0.0010302080000000047, 0.0010301669999999985, 0.0010301530000000059, 0.001030098000000007, 0.0010302630000000035, 0.0010301530000000059, 0.0010302080000000047, 0.001030264000000003, 0.0010302360000000038, 0.0010301119999999997, 0.0010301119999999997, 0.0010300280000000023, 0.001030292000000002, 0.0010301520000000064, 0.0010303200000000012, 0.0010302500000000103, 0.0010302360000000038, 0.0010301250000000067, 0.001030041999999995, 0.0010299859999999966, 0.0010300420000000088, 0.0010300000000000031, 0.001030054999999988, 0.0010300560000000014, 0.0010300280000000023, 0.0010302360000000038, 0.0010301250000000067, 0.0010301939999999982]</msg>
<status status="PASS" starttime="20201030 18:27:55.953" endtime="20201030 18:27:55.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.942" endtime="20201030 18:27:55.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.971" endtime="20201030 18:27:55.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.964" endtime="20201030 18:27:55.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.962" endtime="20201030 18:27:55.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.431" endtime="20201030 18:27:55.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.430" endtime="20201030 18:27:55.996"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.019" endtime="20201030 18:27:56.084"></status>
</kw>
<msg timestamp="20201030 18:27:56.085" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.015" endtime="20201030 18:27:56.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.091" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.087" endtime="20201030 18:27:56.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.094" endtime="20201030 18:27:56.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.008" endtime="20201030 18:27:56.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.003" endtime="20201030 18:27:56.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.117" endtime="20201030 18:27:56.455"></status>
</kw>
<msg timestamp="20201030 18:27:56.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037476042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038548972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.114" endtime="20201030 18:27:56.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037476042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038548972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.465" endtime="20201030 18:27:56.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.483" endtime="20201030 18:27:56.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.106" endtime="20201030 18:27:56.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.102" endtime="20201030 18:27:56.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:56.499" level="INFO">${PHILIP_RES} = [{'diff': 0.0010729299999999997}, {'diff': 0.0010732089999999986}, {'diff': 0.0010751810000000014}, {'diff': 0.0010752360000000002}, {'diff': 0.0010751940000000015}, {'diff': 0.0010752360000000002}, {...</msg>
<status status="PASS" starttime="20201030 18:27:56.491" endtime="20201030 18:27:56.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:56.509" level="INFO">${RESULT} = {'diff': [0.0010729299999999997, 0.0010732089999999986, 0.0010751810000000014, 0.0010752360000000002, 0.0010751940000000015, 0.0010752360000000002, 0.0010751250000000032, 0.0010750409999999988, 0.0010...</msg>
<status status="PASS" starttime="20201030 18:27:56.501" endtime="20201030 18:27:56.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.520" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:56.517" endtime="20201030 18:27:56.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.525" level="INFO">VALUE: [0.0010729299999999997, 0.0010732089999999986, 0.0010751810000000014, 0.0010752360000000002, 0.0010751940000000015, 0.0010752360000000002, 0.0010751250000000032, 0.0010750409999999988, 0.0010751390000000027, 0.0010752499999999998, 0.0010750980000000035, 0.0010752499999999998, 0.0010751670000000019, 0.0010751530000000023, 0.0010751390000000027, 0.0010753330000000047, 0.001075305999999998, 0.001075263, 0.0010752499999999998, 0.001075389000000003, 0.0010754310000000017, 0.0010755839999999975, 0.0010753339999999972, 0.0010753749999999895, 0.0010753330000000116, 0.001075277999999999, 0.0010752359999999933, 0.0010752079999999942, 0.0010752640000000063, 0.0010752499999999998, 0.0010751519999999959, 0.0010752360000000072, 0.001075277999999999, 0.0010751249999999962, 0.001075084000000004, 0.0010751390000000027, 0.001075179999999995, 0.001075262999999993, 0.001075360999999997, 0.001075179999999995, 0.0010752499999999998, 0.0010754300000000022, 0.0010754860000000005, 0.0010753200000000046, 0.0010753469999999904, 0.0010753750000000034, 0.0010753750000000034, 0.0010754860000000005, 0.001075471999999994, 0.0010754440000000087]</msg>
<status status="PASS" starttime="20201030 18:27:56.522" endtime="20201030 18:27:56.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.511" endtime="20201030 18:27:56.528"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:56.537" endtime="20201030 18:27:56.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.533" endtime="20201030 18:27:56.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.531" endtime="20201030 18:27:56.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.998" endtime="20201030 18:27:56.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.997" endtime="20201030 18:27:56.563"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.584" endtime="20201030 18:27:56.652"></status>
</kw>
<msg timestamp="20201030 18:27:56.653" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.581" endtime="20201030 18:27:56.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.659" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.655" endtime="20201030 18:27:56.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.662" endtime="20201030 18:27:56.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.574" endtime="20201030 18:27:56.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.569" endtime="20201030 18:27:56.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.686" endtime="20201030 18:27:57.026"></status>
</kw>
<msg timestamp="20201030 18:27:57.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036816444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037937097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.683" endtime="20201030 18:27:57.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036816444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037937097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.035" endtime="20201030 18:27:57.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.053" endtime="20201030 18:27:57.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.675" endtime="20201030 18:27:57.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.670" endtime="20201030 18:27:57.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:57.069" level="INFO">${PHILIP_RES} = [{'diff': 0.0011206530000000062}, {'diff': 0.0011184170000000035}, {'diff': 0.001118624999999998}, {'diff': 0.001120485999999997}, {'diff': 0.0011185000000000014}, {'diff': 0.0011185420000000001}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:57.062" endtime="20201030 18:27:57.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.080" level="INFO">${RESULT} = {'diff': [0.0011206530000000062, 0.0011184170000000035, 0.001118624999999998, 0.001120485999999997, 0.0011185000000000014, 0.0011185420000000001, 0.0011204719999999974, 0.0011185000000000014, 0.001118...</msg>
<status status="PASS" starttime="20201030 18:27:57.072" endtime="20201030 18:27:57.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.091" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:57.089" endtime="20201030 18:27:57.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.096" level="INFO">VALUE: [0.0011206530000000062, 0.0011184170000000035, 0.001118624999999998, 0.001120485999999997, 0.0011185000000000014, 0.0011185420000000001, 0.0011204719999999974, 0.0011185000000000014, 0.0011183889999999974, 0.0011203610000000003, 0.0011184170000000035, 0.0011185130000000015, 0.0011204169999999986, 0.0011185979999999984, 0.0011185410000000007, 0.001120514000000003, 0.0011185420000000001, 0.0011185689999999998, 0.001120527000000003, 0.0011184720000000023, 0.0011185280000000006, 0.0011206110000000075, 0.0011186110000000055, 0.0011186940000000034, 0.0011206669999999919, 0.0011185689999999998, 0.001118596999999999, 0.001120597000000001, 0.001118596999999999, 0.0011186110000000055, 0.001120597000000001, 0.001118624999999998, 0.001118624999999998, 0.0011204449999999977, 0.0011184860000000019, 0.0011184999999999945, 0.0011205700000000013, 0.0011186109999999916, 0.0011185830000000063, 0.001120514000000003, 0.001118596999999999, 0.0011185560000000067, 0.00112048599999999, 0.0011184580000000027, 0.001118624999999998, 0.0011206110000000075, 0.0011187770000000014, 0.0011188189999999931, 0.0011206110000000075, 0.0011186109999999916]</msg>
<status status="PASS" starttime="20201030 18:27:57.093" endtime="20201030 18:27:57.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.082" endtime="20201030 18:27:57.099"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.109" endtime="20201030 18:27:57.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.104" endtime="20201030 18:27:57.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.102" endtime="20201030 18:27:57.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.565" endtime="20201030 18:27:57.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.564" endtime="20201030 18:27:57.134"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.156" endtime="20201030 18:27:57.226"></status>
</kw>
<msg timestamp="20201030 18:27:57.227" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.152" endtime="20201030 18:27:57.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.234" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.230" endtime="20201030 18:27:57.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.236" endtime="20201030 18:27:57.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.145" endtime="20201030 18:27:57.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.140" endtime="20201030 18:27:57.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.263" endtime="20201030 18:27:57.609"></status>
</kw>
<msg timestamp="20201030 18:27:57.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036872764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038040042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.258" endtime="20201030 18:27:57.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036872764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038040042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.618" endtime="20201030 18:27:57.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.636" endtime="20201030 18:27:57.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.249" endtime="20201030 18:27:57.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.244" endtime="20201030 18:27:57.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:57.652" level="INFO">${PHILIP_RES} = [{'diff': 0.0011672780000000008}, {'diff': 0.0011674159999999975}, {'diff': 0.0011674860000000023}, {'diff': 0.0011675969999999994}, {'diff': 0.0011675550000000007}, {'diff': 0.001167499999999995}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:57.645" endtime="20201030 18:27:57.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.662" level="INFO">${RESULT} = {'diff': [0.0011672780000000008, 0.0011674159999999975, 0.0011674860000000023, 0.0011675969999999994, 0.0011675550000000007, 0.001167499999999995, 0.0011674860000000023, 0.0011676529999999977, 0.00116...</msg>
<status status="PASS" starttime="20201030 18:27:57.655" endtime="20201030 18:27:57.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.672" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:57.670" endtime="20201030 18:27:57.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.677" level="INFO">VALUE: [0.0011672780000000008, 0.0011674159999999975, 0.0011674860000000023, 0.0011675969999999994, 0.0011675550000000007, 0.001167499999999995, 0.0011674860000000023, 0.0011676529999999977, 0.0011677079999999965, 0.0011675560000000001, 0.0011676530000000046, 0.0011676529999999977, 0.0011675969999999994, 0.001167611000000006, 0.0011676940000000038, 0.0011676949999999964, 0.0011675560000000001, 0.0011674580000000032, 0.001167722000000003, 0.0011676950000000033, 0.0011678190000000005, 0.0011677640000000017, 0.001167639000000012, 0.0011676659999999978, 0.001167721999999996, 0.0011676810000000037, 0.001167638999999998, 0.0011675560000000001, 0.0011674720000000027, 0.001167721999999996, 0.0011675550000000007, 0.0011674589999999957, 0.0011675829999999998, 0.001167638999999998, 0.0011676669999999972, 0.0011675829999999998, 0.001167512999999995, 0.0011675980000000058, 0.0011672920000000003, 0.0011675000000000019, 0.0011675270000000015, 0.0011675560000000001, 0.0011675000000000019, 0.001167638999999998, 0.001167638999999998, 0.0011675419999999936, 0.0011675560000000001, 0.001167610999999999, 0.001167610999999999, 0.0011675829999999998]</msg>
<status status="PASS" starttime="20201030 18:27:57.674" endtime="20201030 18:27:57.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.663" endtime="20201030 18:27:57.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.695" endtime="20201030 18:27:57.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.691" endtime="20201030 18:27:57.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.689" endtime="20201030 18:27:57.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.136" endtime="20201030 18:27:57.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.135" endtime="20201030 18:27:57.721"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.744" endtime="20201030 18:27:57.818"></status>
</kw>
<msg timestamp="20201030 18:27:57.820" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.741" endtime="20201030 18:27:57.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.826" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.822" endtime="20201030 18:27:57.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.828" endtime="20201030 18:27:57.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.733" endtime="20201030 18:27:57.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.727" endtime="20201030 18:27:57.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.852" endtime="20201030 18:27:58.189"></status>
</kw>
<msg timestamp="20201030 18:27:58.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040571153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041784917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.848" endtime="20201030 18:27:58.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040571153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041784917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.198" endtime="20201030 18:27:58.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.216" endtime="20201030 18:27:58.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.841" endtime="20201030 18:27:58.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.836" endtime="20201030 18:27:58.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:58.232" level="INFO">${PHILIP_RES} = [{'diff': 0.0012137639999999991}, {'diff': 0.0012150419999999995}, {'diff': 0.0012150690000000061}, {'diff': 0.0012150969999999983}, {'diff': 0.001215167000000003}, {'diff': 0.0012151249999999975}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:58.225" endtime="20201030 18:27:58.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:58.241" level="INFO">${RESULT} = {'diff': [0.0012137639999999991, 0.0012150419999999995, 0.0012150690000000061, 0.0012150969999999983, 0.001215167000000003, 0.0012151249999999975, 0.0012149310000000024, 0.0012150549999999996, 0.00121...</msg>
<status status="PASS" starttime="20201030 18:27:58.234" endtime="20201030 18:27:58.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.252" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:58.250" endtime="20201030 18:27:58.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.257" level="INFO">VALUE: [0.0012137639999999991, 0.0012150419999999995, 0.0012150690000000061, 0.0012150969999999983, 0.001215167000000003, 0.0012151249999999975, 0.0012149310000000024, 0.0012150549999999996, 0.0012150840000000052, 0.0012150000000000008, 0.0012151529999999966, 0.001215222000000002, 0.0012151249999999975, 0.0012152909999999933, 0.0012151940000000028, 0.0012151250000000044, 0.0012150689999999992, 0.0012150699999999987, 0.0012150969999999983, 0.0012151529999999966, 0.001214958000000002, 0.0012150140000000004, 0.0012150979999999978, 0.0012150829999999918, 0.0012150829999999918, 0.0012152230000000014, 0.0012151379999999906, 0.0012151799999999963, 0.0012151529999999966, 0.001215139000000004, 0.0012153609999999981, 0.0012152780000000002, 0.0012150700000000125, 0.001215221999999988, 0.0012152360000000084, 0.001215056000000006, 0.0012150970000000122, 0.0012150969999999983, 0.0012150140000000004, 0.0012148889999999968, 0.001215139000000004, 0.0012152640000000076, 0.001215361000000012, 0.001215222000000002, 0.0012152080000000093, 0.0012151799999999963, 0.001215041, 0.0012150840000000052, 0.0012149439999999956, 0.001214958000000002]</msg>
<status status="PASS" starttime="20201030 18:27:58.254" endtime="20201030 18:27:58.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.243" endtime="20201030 18:27:58.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:58.276" endtime="20201030 18:27:58.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.266" endtime="20201030 18:27:58.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.263" endtime="20201030 18:27:58.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.723" endtime="20201030 18:27:58.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.722" endtime="20201030 18:27:58.301"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.323" endtime="20201030 18:27:58.397"></status>
</kw>
<msg timestamp="20201030 18:27:58.399" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.319" endtime="20201030 18:27:58.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.405" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.401" endtime="20201030 18:27:58.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.407" endtime="20201030 18:27:58.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.312" endtime="20201030 18:27:58.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.307" endtime="20201030 18:27:58.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.431" endtime="20201030 18:27:58.771"></status>
</kw>
<msg timestamp="20201030 18:27:58.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036754181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038016639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.427" endtime="20201030 18:27:58.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036754181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038016639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.781" endtime="20201030 18:27:58.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.799" endtime="20201030 18:27:58.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.420" endtime="20201030 18:27:58.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.415" endtime="20201030 18:27:58.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:58.815" level="INFO">${PHILIP_RES} = [{'diff': 0.001262458000000001}, {'diff': 0.0012627360000000004}, {'diff': 0.0012627090000000007}, {'diff': 0.00126275}, {'diff': 0.00126275}, {'diff': 0.0012629310000000019}, {'diff': 0.0012628059999...</msg>
<status status="PASS" starttime="20201030 18:27:58.807" endtime="20201030 18:27:58.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:58.825" level="INFO">${RESULT} = {'diff': [0.001262458000000001, 0.0012627360000000004, 0.0012627090000000007, 0.00126275, 0.00126275, 0.0012629310000000019, 0.0012628059999999983, 0.0012627639999999996, 0.0012629579999999946, 0.0012...</msg>
<status status="PASS" starttime="20201030 18:27:58.817" endtime="20201030 18:27:58.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.836" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:58.834" endtime="20201030 18:27:58.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.841" level="INFO">VALUE: [0.001262458000000001, 0.0012627360000000004, 0.0012627090000000007, 0.00126275, 0.00126275, 0.0012629310000000019, 0.0012628059999999983, 0.0012627639999999996, 0.0012629579999999946, 0.0012629030000000027, 0.0012629300000000024, 0.001262861000000004, 0.0012628340000000043, 0.0012629310000000019, 0.0012629860000000007, 0.0012629310000000019, 0.0012630979999999972, 0.0012627919999999987, 0.0012628330000000049, 0.0012628749999999966, 0.0012628889999999893, 0.0012628749999999966, 0.0012628339999999905, 0.0012627919999999987, 0.001262847999999997, 0.0012626950000000081, 0.0012626250000000033, 0.0012629450000000014, 0.0012625420000000054, 0.001262778000000006, 0.001262778000000006, 0.001262861000000004, 0.001262749999999993, 0.0012627230000000073, 0.001262749999999993, 0.001262652000000003, 0.001262721999999994, 0.0012627909999999992, 0.0012628050000000057, 0.0012626800000000021, 0.001262778000000006, 0.0012626940000000086, 0.0012628330000000049, 0.0012627360000000004, 0.0012628050000000057, 0.0012627359999999865, 0.001262778000000006, 0.001262778000000006, 0.0012629029999999958, 0.0012628330000000049]</msg>
<status status="PASS" starttime="20201030 18:27:58.838" endtime="20201030 18:27:58.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.827" endtime="20201030 18:27:58.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:58.854" endtime="20201030 18:27:58.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.850" endtime="20201030 18:27:58.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.847" endtime="20201030 18:27:58.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.303" endtime="20201030 18:27:58.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.302" endtime="20201030 18:27:58.879"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.901" endtime="20201030 18:27:58.978"></status>
</kw>
<msg timestamp="20201030 18:27:58.979" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.897" endtime="20201030 18:27:58.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.985" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.981" endtime="20201030 18:27:58.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.988" endtime="20201030 18:27:58.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.890" endtime="20201030 18:27:58.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.885" endtime="20201030 18:27:58.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.011" endtime="20201030 18:27:59.352"></status>
</kw>
<msg timestamp="20201030 18:27:59.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036838125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038147736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.008" endtime="20201030 18:27:59.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036838125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038147736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.361" endtime="20201030 18:27:59.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.380" endtime="20201030 18:27:59.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.001" endtime="20201030 18:27:59.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.996" endtime="20201030 18:27:59.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:59.396" level="INFO">${PHILIP_RES} = [{'diff': 0.0013096110000000022}, {'diff': 0.0013103049999999977}, {'diff': 0.0013102219999999998}, {'diff': 0.0013122360000000013}, {'diff': 0.0013103750000000025}, {'diff': 0.0013102080000000002}, {...</msg>
<status status="PASS" starttime="20201030 18:27:59.388" endtime="20201030 18:27:59.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.406" level="INFO">${RESULT} = {'diff': [0.0013096110000000022, 0.0013103049999999977, 0.0013102219999999998, 0.0013122360000000013, 0.0013103750000000025, 0.0013102080000000002, 0.001312250000000001, 0.0013102359999999993, 0.00131...</msg>
<status status="PASS" starttime="20201030 18:27:59.398" endtime="20201030 18:27:59.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.417" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:59.415" endtime="20201030 18:27:59.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.422" level="INFO">VALUE: [0.0013096110000000022, 0.0013103049999999977, 0.0013102219999999998, 0.0013122360000000013, 0.0013103750000000025, 0.0013102080000000002, 0.001312250000000001, 0.0013102359999999993, 0.0013102089999999997, 0.0013120550000000064, 0.001310084000000003, 0.0013099719999999995, 0.001311986000000001, 0.0013102500000000059, 0.0013104450000000004, 0.001312250000000001, 0.0013102219999999998, 0.0013103470000000034, 0.0013121249999999973, 0.0013101810000000075, 0.001310040999999998, 0.0013119310000000023, 0.0013100830000000036, 0.0013102219999999998, 0.0013121530000000103, 0.0013103619999999955, 0.0013103480000000028, 0.0013122359999999944, 0.0013102080000000071, 0.0013102640000000054, 0.0013119590000000014, 0.0013101379999999885, 0.0013100419999999974, 0.001312041, 0.0013101249999999953, 0.0013100269999999914, 0.0013119590000000014, 0.0013100129999999988, 0.001309958, 0.0013120560000000059, 0.00131005599999999, 0.0013099310000000003, 0.0013117910000000066, 0.0013101110000000027, 0.0013100139999999982, 0.0013120140000000002, 0.0013101119999999883, 0.001310180000000008, 0.0013120699999999985, 0.0013102640000000054]</msg>
<status status="PASS" starttime="20201030 18:27:59.419" endtime="20201030 18:27:59.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.408" endtime="20201030 18:27:59.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.435" endtime="20201030 18:27:59.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.431" endtime="20201030 18:27:59.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.428" endtime="20201030 18:27:59.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.881" endtime="20201030 18:27:59.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.880" endtime="20201030 18:27:59.460"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.482" endtime="20201030 18:27:59.562"></status>
</kw>
<msg timestamp="20201030 18:27:59.563" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.478" endtime="20201030 18:27:59.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.569" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.565" endtime="20201030 18:27:59.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.572" endtime="20201030 18:27:59.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.471" endtime="20201030 18:27:59.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.466" endtime="20201030 18:27:59.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.595" endtime="20201030 18:27:59.938"></status>
</kw>
<msg timestamp="20201030 18:27:59.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036985819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038345639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.592" endtime="20201030 18:27:59.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036985819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038345639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.947" endtime="20201030 18:27:59.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.965" endtime="20201030 18:27:59.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.585" endtime="20201030 18:27:59.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.580" endtime="20201030 18:27:59.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:59.981" level="INFO">${PHILIP_RES} = [{'diff': 0.0013598199999999977}, {'diff': 0.0013593060000000046}, {'diff': 0.0013620690000000005}, {'diff': 0.0013621249999999988}, {'diff': 0.0013620969999999996}, {'diff': 0.0013619860000000025}, {...</msg>
<status status="PASS" starttime="20201030 18:27:59.974" endtime="20201030 18:27:59.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.991" level="INFO">${RESULT} = {'diff': [0.0013598199999999977, 0.0013593060000000046, 0.0013620690000000005, 0.0013621249999999988, 0.0013620969999999996, 0.0013619860000000025, 0.0013621389999999983, 0.0013622359999999958, 0.0013...</msg>
<status status="PASS" starttime="20201030 18:27:59.984" endtime="20201030 18:27:59.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.001" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:59.999" endtime="20201030 18:28:00.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.007" level="INFO">VALUE: [0.0013598199999999977, 0.0013593060000000046, 0.0013620690000000005, 0.0013621249999999988, 0.0013620969999999996, 0.0013619860000000025, 0.0013621389999999983, 0.0013622359999999958, 0.0013623479999999993, 0.0013624029999999981, 0.0013623889999999986, 0.001362263999999995, 0.0013624170000000047, 0.0013624720000000035, 0.0013624999999999957, 0.001362485999999996, 0.0013624160000000052, 0.0013622910000000016, 0.001362264000000002, 0.001362374999999999, 0.0013624300000000117, 0.0013623469999999999, 0.0013622499999999954, 0.0013624169999999908, 0.0013623890000000055, 0.0013622360000000028, 0.001362264000000002, 0.0013624170000000047, 0.0013623059999999937, 0.0013623049999999942, 0.0013622230000000096, 0.0013622779999999945, 0.00136218099999999, 0.001362276999999995, 0.0013622919999999872, 0.0013623609999999925, 0.0013621949999999966, 0.0013621800000000045, 0.0013622780000000084, 0.0013623610000000064, 0.0013625139999999952, 0.0013624440000000043, 0.001362374999999999, 0.0013623049999999942, 0.0013625560000000009, 0.0013626250000000062, 0.0013624020000000125, 0.0013623059999999937, 0.0013623889999999916, 0.0013625000000000026]</msg>
<status status="PASS" starttime="20201030 18:28:00.004" endtime="20201030 18:28:00.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.992" endtime="20201030 18:28:00.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.019" endtime="20201030 18:28:00.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.015" endtime="20201030 18:28:00.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.012" endtime="20201030 18:28:00.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.462" endtime="20201030 18:28:00.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.461" endtime="20201030 18:28:00.044"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.066" endtime="20201030 18:28:00.150"></status>
</kw>
<msg timestamp="20201030 18:28:00.152" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.063" endtime="20201030 18:28:00.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.158" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.154" endtime="20201030 18:28:00.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.160" endtime="20201030 18:28:00.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.056" endtime="20201030 18:28:00.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.050" endtime="20201030 18:28:00.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.184" endtime="20201030 18:28:00.524"></status>
</kw>
<msg timestamp="20201030 18:28:00.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038404847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039817306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.180" endtime="20201030 18:28:00.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038404847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039817306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.533" endtime="20201030 18:28:00.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.551" endtime="20201030 18:28:00.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.173" endtime="20201030 18:28:00.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.168" endtime="20201030 18:28:00.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:00.567" level="INFO">${PHILIP_RES} = [{'diff': 0.0014124589999999979}, {'diff': 0.0014123469999999944}, {'diff': 0.0014124439999999988}, {'diff': 0.0014124159999999997}, {'diff': 0.0014125280000000032}, {'diff': 0.0014125420000000027}, {...</msg>
<status status="PASS" starttime="20201030 18:28:00.560" endtime="20201030 18:28:00.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.576" level="INFO">${RESULT} = {'diff': [0.0014124589999999979, 0.0014123469999999944, 0.0014124439999999988, 0.0014124159999999997, 0.0014125280000000032, 0.0014125420000000027, 0.0014125420000000027, 0.0014124589999999979, 0.0014...</msg>
<status status="PASS" starttime="20201030 18:28:00.569" endtime="20201030 18:28:00.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.587" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:00.585" endtime="20201030 18:28:00.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.592" level="INFO">VALUE: [0.0014124589999999979, 0.0014123469999999944, 0.0014124439999999988, 0.0014124159999999997, 0.0014125280000000032, 0.0014125420000000027, 0.0014125420000000027, 0.0014124589999999979, 0.0014124720000000049, 0.0014123750000000004, 0.0014123620000000003, 0.0014123750000000004, 0.0014123470000000013, 0.0014122640000000033, 0.0014122220000000046, 0.0014122770000000034, 0.001412277999999996, 0.0014121250000000002, 0.0014124310000000057, 0.0014123330000000017, 0.0014124300000000062, 0.001412499999999997, 0.001412569999999988, 0.0014124590000000048, 0.0014124169999999991, 0.0014124169999999991, 0.0014125279999999962, 0.0014124729999999974, 0.0014123610000000009, 0.0014122639999999964, 0.0014122359999999973, 0.0014122919999999956, 0.0014121810000000123, 0.001412278000000003, 0.0014122500000000038, 0.0014122359999999973, 0.001412306000000002, 0.0014123750000000074, 0.0014121940000000055, 0.0014124299999999923, 0.0014124019999999932, 0.0014122360000000111, 0.0014124159999999997, 0.0014124309999999918, 0.0014125410000000033, 0.0014125279999999962, 0.001412582999999995, 0.0014125279999999962, 0.001412554999999996, 0.0014124720000000118]</msg>
<status status="PASS" starttime="20201030 18:28:00.589" endtime="20201030 18:28:00.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.578" endtime="20201030 18:28:00.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.606" endtime="20201030 18:28:00.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.600" endtime="20201030 18:28:00.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.598" endtime="20201030 18:28:00.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.046" endtime="20201030 18:28:00.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.045" endtime="20201030 18:28:00.631"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.653" endtime="20201030 18:28:00.739"></status>
</kw>
<msg timestamp="20201030 18:28:00.740" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.650" endtime="20201030 18:28:00.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.747" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.743" endtime="20201030 18:28:00.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.749" endtime="20201030 18:28:00.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.643" endtime="20201030 18:28:00.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.637" endtime="20201030 18:28:00.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.772" endtime="20201030 18:28:01.122"></status>
</kw>
<msg timestamp="20201030 18:28:01.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037045403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038510056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.769" endtime="20201030 18:28:01.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037045403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038510056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.132" endtime="20201030 18:28:01.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.151" endtime="20201030 18:28:01.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.762" endtime="20201030 18:28:01.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.757" endtime="20201030 18:28:01.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:01.167" level="INFO">${PHILIP_RES} = [{'diff': 0.0014646530000000033}, {'diff': 0.0014646940000000025}, {'diff': 0.0014646110000000045}, {'diff': 0.0014645279999999997}, {'diff': 0.001464486000000001}, {'diff': 0.0014645279999999997}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:01.159" endtime="20201030 18:28:01.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.177" level="INFO">${RESULT} = {'diff': [0.0014646530000000033, 0.0014646940000000025, 0.0014646110000000045, 0.0014645279999999997, 0.001464486000000001, 0.0014645279999999997, 0.001464596999999998, 0.001464791, 0.0014646800000000...</msg>
<status status="PASS" starttime="20201030 18:28:01.169" endtime="20201030 18:28:01.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.188" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:01.185" endtime="20201030 18:28:01.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.193" level="INFO">VALUE: [0.0014646530000000033, 0.0014646940000000025, 0.0014646110000000045, 0.0014645279999999997, 0.001464486000000001, 0.0014645279999999997, 0.001464596999999998, 0.001464791, 0.001464680000000003, 0.0014647079999999951, 0.0014645559999999988, 0.0014644170000000026, 0.001464514, 0.001464568999999999, 0.001464596999999998, 0.0014646660000000034, 0.0014646389999999967, 0.00146437499999999, 0.0014644449999999948, 0.0014645549999999924, 0.0014643889999999965, 0.0014642230000000006, 0.0014643889999999965, 0.001464403000000003, 0.0014646940000000025, 0.0014644449999999948, 0.0014644590000000013, 0.0014642910000000064, 0.0014643750000000039, 0.0014644020000000035, 0.0014645419999999992, 0.0014646110000000045, 0.0014643480000000042, 0.0014643329999999982, 0.0014644300000000027, 0.001464514, 0.0014645280000000066, 0.0014644590000000013, 0.00146437499999999, 0.0014645419999999992, 0.0014645829999999915, 0.0014646249999999972, 0.0014645979999999975, 0.0014645560000000057, 0.0014644580000000018, 0.001464514, 0.0014646670000000028, 0.0014645419999999992, 0.0014644450000000087, 0.0014644870000000004]</msg>
<status status="PASS" starttime="20201030 18:28:01.190" endtime="20201030 18:28:01.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.179" endtime="20201030 18:28:01.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.205" endtime="20201030 18:28:01.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.201" endtime="20201030 18:28:01.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.199" endtime="20201030 18:28:01.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.633" endtime="20201030 18:28:01.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.632" endtime="20201030 18:28:01.231"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.253" endtime="20201030 18:28:01.341"></status>
</kw>
<msg timestamp="20201030 18:28:01.342" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.249" endtime="20201030 18:28:01.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.348" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.344" endtime="20201030 18:28:01.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.351" endtime="20201030 18:28:01.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.242" endtime="20201030 18:28:01.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.237" endtime="20201030 18:28:01.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.374" endtime="20201030 18:28:01.724"></status>
</kw>
<msg timestamp="20201030 18:28:01.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037034639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038551361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.371" endtime="20201030 18:28:01.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037034639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038551361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.733" endtime="20201030 18:28:01.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.751" endtime="20201030 18:28:01.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.363" endtime="20201030 18:28:01.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.359" endtime="20201030 18:28:01.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:01.767" level="INFO">${PHILIP_RES} = [{'diff': 0.0015167219999999981}, {'diff': 0.0015148609999999993}, {'diff': 0.001514902999999998}, {'diff': 0.0015168610000000013}, {'diff': 0.0015148749999999989}, {'diff': 0.0015149299999999977}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:01.759" endtime="20201030 18:28:01.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.777" level="INFO">${RESULT} = {'diff': [0.0015167219999999981, 0.0015148609999999993, 0.001514902999999998, 0.0015168610000000013, 0.0015148749999999989, 0.0015149299999999977, 0.0015168890000000004, 0.0015149019999999985, 0.00151...</msg>
<status status="PASS" starttime="20201030 18:28:01.769" endtime="20201030 18:28:01.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.788" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:01.786" endtime="20201030 18:28:01.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.793" level="INFO">VALUE: [0.0015167219999999981, 0.0015148609999999993, 0.001514902999999998, 0.0015168610000000013, 0.0015148749999999989, 0.0015149299999999977, 0.0015168890000000004, 0.0015149019999999985, 0.001514902999999998, 0.0015168610000000013, 0.0015149720000000033, 0.001515014000000002, 0.0015168610000000013, 0.0015148749999999989, 0.0015147080000000035, 0.001516708999999998, 0.001514833000000007, 0.0015147080000000035, 0.0015165699999999949, 0.0015147499999999953, 0.0015149170000000045, 0.0015169589999999983, 0.0015150690000000078, 0.0015150280000000016, 0.001516693999999999, 0.0015147080000000035, 0.0015148060000000074, 0.0015167219999999981, 0.0015149030000000119, 0.0015147630000000023, 0.0015170280000000036, 0.0015149579999999968, 0.0015150839999999999, 0.0015170550000000033, 0.001515042000000008, 0.001515125000000006, 0.0015170410000000106, 0.0015147500000000091, 0.001515042000000008, 0.0015169159999999932, 0.0015148889999999915, 0.0015148619999999918, 0.0015167780000000103, 0.0015149299999999977, 0.0015150560000000007, 0.0015171110000000015, 0.001514985999999996, 0.0015149580000000107, 0.001517068999999996, 0.0015149720000000033]</msg>
<status status="PASS" starttime="20201030 18:28:01.790" endtime="20201030 18:28:01.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.779" endtime="20201030 18:28:01.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.806" endtime="20201030 18:28:01.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.801" endtime="20201030 18:28:01.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.799" endtime="20201030 18:28:01.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.233" endtime="20201030 18:28:01.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.232" endtime="20201030 18:28:01.831"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.853" endtime="20201030 18:28:01.945"></status>
</kw>
<msg timestamp="20201030 18:28:01.947" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.849" endtime="20201030 18:28:01.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.958" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.950" endtime="20201030 18:28:01.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.960" endtime="20201030 18:28:01.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.842" endtime="20201030 18:28:01.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.837" endtime="20201030 18:28:01.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.987" endtime="20201030 18:28:02.340"></status>
</kw>
<msg timestamp="20201030 18:28:02.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037363444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038934931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.983" endtime="20201030 18:28:02.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037363444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038934931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.349" endtime="20201030 18:28:02.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.367" endtime="20201030 18:28:02.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.976" endtime="20201030 18:28:02.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.971" endtime="20201030 18:28:02.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:02.383" level="INFO">${PHILIP_RES} = [{'diff': 0.0015714869999999964}, {'diff': 0.0015712910000000024}, {'diff': 0.0015713060000000015}, {'diff': 0.0015712219999999971}, {'diff': 0.0015713610000000003}, {'diff': 0.0015712500000000032}, {...</msg>
<status status="PASS" starttime="20201030 18:28:02.375" endtime="20201030 18:28:02.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.392" level="INFO">${RESULT} = {'diff': [0.0015714869999999964, 0.0015712910000000024, 0.0015713060000000015, 0.0015712219999999971, 0.0015713610000000003, 0.0015712500000000032, 0.0015714589999999973, 0.0015712499999999963, 0.0015...</msg>
<status status="PASS" starttime="20201030 18:28:02.385" endtime="20201030 18:28:02.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.403" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:02.400" endtime="20201030 18:28:02.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.408" level="INFO">VALUE: [0.0015714869999999964, 0.0015712910000000024, 0.0015713060000000015, 0.0015712219999999971, 0.0015713610000000003, 0.0015712500000000032, 0.0015714589999999973, 0.0015712499999999963, 0.001571320000000001, 0.0015714860000000039, 0.0015712499999999963, 0.0015712640000000028, 0.0015710550000000018, 0.0015714299999999987, 0.0015711389999999992, 0.0015710700000000008, 0.0015710139999999956, 0.001571263999999989, 0.001571028000000002, 0.0015711659999999988, 0.001571083000000001, 0.0015712219999999971, 0.001571111, 0.0015708470000000002, 0.0015710560000000012, 0.001571028000000002, 0.0015710550000000018, 0.0015711949999999975, 0.0015711389999999992, 0.0015711389999999992, 0.0015711250000000065, 0.0015712360000000036, 0.001571222000000011, 0.001571083000000001, 0.0015712499999999963, 0.0015712499999999963, 0.0015714440000000052, 0.0015714309999999981, 0.0015715700000000082, 0.0015713190000000016, 0.0015712779999999954, 0.001571083000000001, 0.0015710550000000018, 0.0015709730000000033, 0.0015710549999999879, 0.001571097999999993, 0.001570917000000005, 0.0015709860000000103, 0.0015712219999999971, 0.0015710700000000077]</msg>
<status status="PASS" starttime="20201030 18:28:02.405" endtime="20201030 18:28:02.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.394" endtime="20201030 18:28:02.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.420" endtime="20201030 18:28:02.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.416" endtime="20201030 18:28:02.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.413" endtime="20201030 18:28:02.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.833" endtime="20201030 18:28:02.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.832" endtime="20201030 18:28:02.446"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.467" endtime="20201030 18:28:02.563"></status>
</kw>
<msg timestamp="20201030 18:28:02.564" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.464" endtime="20201030 18:28:02.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.571" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.566" endtime="20201030 18:28:02.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.573" endtime="20201030 18:28:02.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.457" endtime="20201030 18:28:02.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.452" endtime="20201030 18:28:02.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.596" endtime="20201030 18:28:02.946"></status>
</kw>
<msg timestamp="20201030 18:28:02.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038532306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040156375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.593" endtime="20201030 18:28:02.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038532306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040156375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.956" endtime="20201030 18:28:02.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.974" endtime="20201030 18:28:02.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.586" endtime="20201030 18:28:02.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.581" endtime="20201030 18:28:02.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:02.990" level="INFO">${PHILIP_RES} = [{'diff': 0.0016240689999999988}, {'diff': 0.001625319}, {'diff': 0.0016253749999999983}, {'diff': 0.001625416999999997}, {'diff': 0.0016252780000000008}, {'diff': 0.0016254590000000027}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 18:28:02.982" endtime="20201030 18:28:02.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.999" level="INFO">${RESULT} = {'diff': [0.0016240689999999988, 0.001625319, 0.0016253749999999983, 0.001625416999999997, 0.0016252780000000008, 0.0016254590000000027, 0.0016252920000000004, 0.0016254590000000027, 0.001625374999999...</msg>
<status status="PASS" starttime="20201030 18:28:02.992" endtime="20201030 18:28:02.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.010" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:03.007" endtime="20201030 18:28:03.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.015" level="INFO">VALUE: [0.0016240689999999988, 0.001625319, 0.0016253749999999983, 0.001625416999999997, 0.0016252780000000008, 0.0016254590000000027, 0.0016252920000000004, 0.0016254590000000027, 0.0016253749999999983, 0.0016252770000000014, 0.0016253749999999983, 0.0016254440000000037, 0.001625499999999995, 0.0016255140000000015, 0.0016255139999999946, 0.0016253749999999983, 0.0016254440000000037, 0.0016253749999999983, 0.0016253890000000049, 0.0016253199999999995, 0.0016253749999999983, 0.0016256249999999917, 0.0016253749999999983, 0.0016253479999999987, 0.0016253329999999927, 0.0016256250000000055, 0.0016254859999999954, 0.0016254440000000037, 0.0016253610000000057, 0.0016253880000000054, 0.0016251809999999894, 0.0016251669999999968, 0.0016252359999999882, 0.001625277999999994, 0.0016251530000000042, 0.001625334000000006, 0.0016252920000000004, 0.0016252219999999956, 0.0016254169999999901, 0.0016253610000000057, 0.0016252920000000004, 0.0016252640000000013, 0.0016253469999999992, 0.0016253469999999992, 0.0016252500000000086, 0.0016253049999999936, 0.0016251939999999965, 0.001625334000000006, 0.0016255279999999872, 0.0016255140000000085]</msg>
<status status="PASS" starttime="20201030 18:28:03.012" endtime="20201030 18:28:03.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.001" endtime="20201030 18:28:03.025"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.036" endtime="20201030 18:28:03.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.030" endtime="20201030 18:28:03.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.028" endtime="20201030 18:28:03.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.448" endtime="20201030 18:28:03.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.447" endtime="20201030 18:28:03.061"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.083" endtime="20201030 18:28:03.181"></status>
</kw>
<msg timestamp="20201030 18:28:03.182" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.080" endtime="20201030 18:28:03.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.188" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.184" endtime="20201030 18:28:03.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.191" endtime="20201030 18:28:03.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.073" endtime="20201030 18:28:03.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.067" endtime="20201030 18:28:03.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.214" endtime="20201030 18:28:03.567"></status>
</kw>
<msg timestamp="20201030 18:28:03.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03729225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038971139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:03.211" endtime="20201030 18:28:03.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03729225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038971139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:03.576" endtime="20201030 18:28:03.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.595" endtime="20201030 18:28:03.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.204" endtime="20201030 18:28:03.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.199" endtime="20201030 18:28:03.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:03.611" level="INFO">${PHILIP_RES} = [{'diff': 0.0016788890000000029}, {'diff': 0.0016782359999999996}, {'diff': 0.0016804579999999958}, {'diff': 0.001680402999999997}, {'diff': 0.0016802910000000004}, {'diff': 0.001680305}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 18:28:03.603" endtime="20201030 18:28:03.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:03.621" level="INFO">${RESULT} = {'diff': [0.0016788890000000029, 0.0016782359999999996, 0.0016804579999999958, 0.001680402999999997, 0.0016802910000000004, 0.001680305, 0.001680514000000001, 0.0016804019999999975, 0.0016806390000000...</msg>
<status status="PASS" starttime="20201030 18:28:03.613" endtime="20201030 18:28:03.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.632" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:03.630" endtime="20201030 18:28:03.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.637" level="INFO">VALUE: [0.0016788890000000029, 0.0016782359999999996, 0.0016804579999999958, 0.001680402999999997, 0.0016802910000000004, 0.001680305, 0.001680514000000001, 0.0016804019999999975, 0.0016806390000000046, 0.0016803479999999982, 0.0016805839999999989, 0.0016804720000000023, 0.0016805420000000001, 0.0016805000000000014, 0.001680527000000001, 0.0016802080000000025, 0.001680485999999995, 0.001680292, 0.0016804860000000088, 0.0016805410000000076, 0.00168043100000001, 0.0016806249999999912, 0.0016803749999999978, 0.001680514000000008, 0.0016803610000000052, 0.001680333000000006, 0.0016802640000000008, 0.001680111000000012, 0.0016802229999999946, 0.001680110999999998, 0.001680402999999997, 0.0016805410000000076, 0.0016801530000000037, 0.0016803329999999922, 0.0016801800000000033, 0.0016803889999999905, 0.0016803749999999978, 0.001680542000000007, 0.0016807219999999956, 0.001680527000000001, 0.0016806389999999977, 0.001680319999999999, 0.0016803479999999982, 0.0016805550000000002, 0.001680402999999997, 0.0016805559999999997, 0.0016806939999999965, 0.0016805000000000014, 0.001680416000000004, 0.0016804299999999966]</msg>
<status status="PASS" starttime="20201030 18:28:03.634" endtime="20201030 18:28:03.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.623" endtime="20201030 18:28:03.641"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.650" endtime="20201030 18:28:03.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.646" endtime="20201030 18:28:03.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.643" endtime="20201030 18:28:03.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.063" endtime="20201030 18:28:03.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.062" endtime="20201030 18:28:03.676"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.698" endtime="20201030 18:28:03.798"></status>
</kw>
<msg timestamp="20201030 18:28:03.799" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.694" endtime="20201030 18:28:03.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.806" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.802" endtime="20201030 18:28:03.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.808" endtime="20201030 18:28:03.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.687" endtime="20201030 18:28:03.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.682" endtime="20201030 18:28:03.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.832" endtime="20201030 18:28:04.176"></status>
</kw>
<msg timestamp="20201030 18:28:04.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037615806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039349722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.828" endtime="20201030 18:28:04.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037615806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039349722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.185" endtime="20201030 18:28:04.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.204" endtime="20201030 18:28:04.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.821" endtime="20201030 18:28:04.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.816" endtime="20201030 18:28:04.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:04.219" level="INFO">${PHILIP_RES} = [{'diff': 0.001733915999999995}, {'diff': 0.0017342769999999993}, {'diff': 0.0017344450000000011}, {'diff': 0.001736306}, {'diff': 0.0017341940000000014}, {'diff': 0.0017342639999999993}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 18:28:04.212" endtime="20201030 18:28:04.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.234" level="INFO">${RESULT} = {'diff': [0.001733915999999995, 0.0017342769999999993, 0.0017344450000000011, 0.001736306, 0.0017341940000000014, 0.0017342639999999993, 0.0017362360000000021, 0.001734430000000002, 0.0017343609999999...</msg>
<status status="PASS" starttime="20201030 18:28:04.221" endtime="20201030 18:28:04.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.244" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:04.242" endtime="20201030 18:28:04.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.250" level="INFO">VALUE: [0.001733915999999995, 0.0017342769999999993, 0.0017344450000000011, 0.001736306, 0.0017341940000000014, 0.0017342639999999993, 0.0017362360000000021, 0.001734430000000002, 0.0017343609999999968, 0.001736416999999997, 0.0017344860000000004, 0.001734417000000002, 0.0017362219999999956, 0.0017344730000000072, 0.001734222999999993, 0.0017363330000000066, 0.0017342220000000075, 0.0017344440000000017, 0.0017364579999999963, 0.0017347499999999932, 0.001734527999999999, 0.0017362920000000004, 0.0017345829999999979, 0.0017345840000000112, 0.0017364860000000093, 0.0017346800000000023, 0.0017345140000000064, 0.001736500000000002, 0.001734527999999999, 0.0017346940000000088, 0.0017364029999999975, 0.0017343050000000054, 0.0017344859999999934, 0.0017365560000000002, 0.0017345140000000064, 0.001734528000000013, 0.0017365420000000076, 0.0017347360000000006, 0.0017347919999999989, 0.001736610999999999, 0.0017347629999999864, 0.0017345419999999917, 0.001736500000000002, 0.0017344860000000073, 0.0017346249999999896, 0.0017363749999999983, 0.0017340970000000039, 0.0017342640000000131, 0.001736430000000011, 0.001734528000000013]</msg>
<status status="PASS" starttime="20201030 18:28:04.247" endtime="20201030 18:28:04.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.236" endtime="20201030 18:28:04.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.262" endtime="20201030 18:28:04.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.258" endtime="20201030 18:28:04.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.255" endtime="20201030 18:28:04.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.678" endtime="20201030 18:28:04.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.676" endtime="20201030 18:28:04.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.415" endtime="20201030 18:28:04.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.297" endtime="20201030 18:28:04.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.293" endtime="20201030 18:28:04.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.290" endtime="20201030 18:28:04.321"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:34.147" endtime="20201030 18:28:04.322" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:27:02.684" endtime="20201030 18:28:04.346"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.527" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:28:04.544" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:28:06.515" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:28:04.524" endtime="20201030 18:28:06.516"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.521" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:28:06.518" endtime="20201030 18:28:06.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.521" endtime="20201030 18:28:06.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.528" endtime="20201030 18:28:06.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.525" endtime="20201030 18:28:06.855"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.885" endtime="20201030 18:28:06.901"></status>
</kw>
<msg timestamp="20201030 18:28:06.902" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.882" endtime="20201030 18:28:06.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.908" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.904" endtime="20201030 18:28:06.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.915" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:06.911" endtime="20201030 18:28:06.916"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:06.875" endtime="20201030 18:28:06.917"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:06.870" endtime="20201030 18:28:06.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.867" endtime="20201030 18:28:06.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:06.928" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:06.926" endtime="20201030 18:28:06.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.922" endtime="20201030 18:28:06.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.865" endtime="20201030 18:28:06.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.864" endtime="20201030 18:28:06.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.931" endtime="20201030 18:28:06.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.860" endtime="20201030 18:28:06.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.939" endtime="20201030 18:28:06.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.857" endtime="20201030 18:28:06.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.518" endtime="20201030 18:28:06.944"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.961" endtime="20201030 18:28:06.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.957" endtime="20201030 18:28:06.984"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.017" endtime="20201030 18:28:07.033"></status>
</kw>
<msg timestamp="20201030 18:28:07.034" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.014" endtime="20201030 18:28:07.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.041" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.037" endtime="20201030 18:28:07.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.048" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:07.043" endtime="20201030 18:28:07.049"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:07.007" endtime="20201030 18:28:07.051"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:07.000" endtime="20201030 18:28:07.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.997" endtime="20201030 18:28:07.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:07.061" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:07.060" endtime="20201030 18:28:07.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.055" endtime="20201030 18:28:07.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.996" endtime="20201030 18:28:07.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.994" endtime="20201030 18:28:07.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.065" endtime="20201030 18:28:07.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.990" endtime="20201030 18:28:07.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.986" endtime="20201030 18:28:07.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.952" endtime="20201030 18:28:07.072"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.097" endtime="20201030 18:28:07.113"></status>
</kw>
<msg timestamp="20201030 18:28:07.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.093" endtime="20201030 18:28:07.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.116" endtime="20201030 18:28:07.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.123" endtime="20201030 18:28:07.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.086" endtime="20201030 18:28:07.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.080" endtime="20201030 18:28:07.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.147" endtime="20201030 18:28:07.494"></status>
</kw>
<msg timestamp="20201030 18:28:07.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129231486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129248694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.143" endtime="20201030 18:28:07.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129231486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129248694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.509" endtime="20201030 18:28:07.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.535" endtime="20201030 18:28:07.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.136" endtime="20201030 18:28:07.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.131" endtime="20201030 18:28:07.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:07.560" level="INFO">${RESULT} = [{'diff': 1.7207999999990786e-05}, {'diff': 1.670799999997641e-05}, {'diff': 1.6861000000006898e-05}, {'diff': 1.672299999999627e-05}, {'diff': 1.6569000000021816e-05}, {'diff': 1.7193999999998155e-05...</msg>
<status status="PASS" starttime="20201030 18:28:07.544" endtime="20201030 18:28:07.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:07.572" level="INFO">${ACCURACY} = {'diff': [1.7207999999990786e-05, 1.670799999997641e-05, 1.6861000000006898e-05, 1.672299999999627e-05, 1.6569000000021816e-05, 1.7193999999998155e-05, 1.6708000000004164e-05, 1.7054999999988052e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:07.562" endtime="20201030 18:28:07.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.583" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 18:28:07.581" endtime="20201030 18:28:07.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.591" level="INFO">VALUE: [1.7207999999990786e-05, 1.670799999997641e-05, 1.6861000000006898e-05, 1.672299999999627e-05, 1.6569000000021816e-05, 1.7193999999998155e-05, 1.6708000000004164e-05, 1.7054999999988052e-05, 1.661099999999971e-05, 1.736099999999352e-05, 1.6860999999979143e-05, 1.7389000000006538e-05, 1.6861000000006898e-05, 1.719400000002591e-05, 1.7055999999987526e-05, 1.673600000001718e-05, 1.719499999999763e-05, 1.713899999999935e-05, 1.687499999999953e-05, 1.6860999999979143e-05, 1.652800000001564e-05, 1.6708000000004164e-05, 1.6389000000005538e-05, 1.637499999998515e-05, 1.704099999999542e-05, 1.6709000000003638e-05, 1.7389000000006538e-05, 1.6735999999989426e-05, 1.637499999998515e-05, 1.744399999997759e-05, 1.7111000000014087e-05, 1.6721999999996795e-05, 1.7111000000014087e-05, 1.7209000000018015e-05, 1.7014000000009633e-05, 1.6887999999992687e-05, 1.6694000000011533e-05, 1.652800000001564e-05, 1.7193999999998155e-05, 1.737499999998615e-05, 1.6861999999978616e-05, 1.687499999999953e-05, 1.6569999999993534e-05, 1.6721999999996795e-05, 1.659700000000708e-05, 1.7208000000018542e-05, 1.684699999998651e-05, 1.6957999999983597e-05, 1.672200000002455e-05, 1.7319999999987346e-05]</msg>
<status status="PASS" starttime="20201030 18:28:07.586" endtime="20201030 18:28:07.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.574" endtime="20201030 18:28:07.597"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:07.609" endtime="20201030 18:28:07.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.603" endtime="20201030 18:28:07.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.600" endtime="20201030 18:28:07.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.076" endtime="20201030 18:28:07.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.075" endtime="20201030 18:28:07.634"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.657" endtime="20201030 18:28:07.674"></status>
</kw>
<msg timestamp="20201030 18:28:07.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.654" endtime="20201030 18:28:07.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.677" endtime="20201030 18:28:07.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.684" endtime="20201030 18:28:07.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.647" endtime="20201030 18:28:07.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.641" endtime="20201030 18:28:07.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.708" endtime="20201030 18:28:08.050"></status>
</kw>
<msg timestamp="20201030 18:28:08.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040402778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040419986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.705" endtime="20201030 18:28:08.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040402778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040419986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.060" endtime="20201030 18:28:08.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.079" endtime="20201030 18:28:08.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.697" endtime="20201030 18:28:08.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.693" endtime="20201030 18:28:08.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:08.097" level="INFO">${RESULT} = [{'diff': 1.7207999999997725e-05}, {'diff': 1.7221999999997295e-05}, {'diff': 1.702699999999585e-05}, {'diff': 1.7443999999998405e-05}, {'diff': 1.6500000000002624e-05}, {'diff': 1.72089999999972e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:08.088" endtime="20201030 18:28:08.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:08.108" level="INFO">${ACCURACY} = {'diff': [1.7207999999997725e-05, 1.7221999999997295e-05, 1.702699999999585e-05, 1.7443999999998405e-05, 1.6500000000002624e-05, 1.72089999999972e-05, 1.736100000000046e-05, 1.6763999999995505e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:28:08.099" endtime="20201030 18:28:08.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.119" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 18:28:08.117" endtime="20201030 18:28:08.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.125" level="INFO">VALUE: [1.7207999999997725e-05, 1.7221999999997295e-05, 1.702699999999585e-05, 1.7443999999998405e-05, 1.6500000000002624e-05, 1.72089999999972e-05, 1.736100000000046e-05, 1.6763999999995505e-05, 1.702700000000279e-05, 1.73889999999996e-05, 1.654099999999492e-05, 1.73889999999996e-05, 1.7042000000001833e-05, 1.690299999999867e-05, 1.7042000000001833e-05, 1.668099999999756e-05, 1.7249999999996435e-05, 1.7056000000001403e-05, 1.737500000000003e-05, 1.705500000000193e-05, 1.705500000000193e-05, 1.6707999999997225e-05, 1.705500000000193e-05, 1.7221999999997295e-05, 1.740299999999917e-05, 1.7208000000004664e-05, 1.7070000000000973e-05, 1.718099999999806e-05, 1.705500000000193e-05, 1.734700000000089e-05, 1.7056000000001403e-05, 1.655500000000143e-05, 1.737500000000003e-05, 1.722299999999677e-05, 1.6528000000001764e-05, 1.6486000000003054e-05, 1.672299999999627e-05, 1.73889999999996e-05, 1.7334000000000793e-05, 1.6735999999996365e-05, 1.6528000000001764e-05, 1.687499999999953e-05, 1.7041999999994895e-05, 1.737500000000003e-05, 1.67089999999967e-05, 1.6903000000005608e-05, 1.68889999999991e-05, 1.6721999999996795e-05, 1.687499999999953e-05, 1.690299999999867e-05]</msg>
<status status="PASS" starttime="20201030 18:28:08.122" endtime="20201030 18:28:08.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.110" endtime="20201030 18:28:08.127"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:08.137" endtime="20201030 18:28:08.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.132" endtime="20201030 18:28:08.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.130" endtime="20201030 18:28:08.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.636" endtime="20201030 18:28:08.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.635" endtime="20201030 18:28:08.162"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.185" endtime="20201030 18:28:08.200"></status>
</kw>
<msg timestamp="20201030 18:28:08.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.181" endtime="20201030 18:28:08.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.211" endtime="20201030 18:28:08.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.219" endtime="20201030 18:28:08.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.174" endtime="20201030 18:28:08.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.168" endtime="20201030 18:28:08.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.250" endtime="20201030 18:28:08.589"></status>
</kw>
<msg timestamp="20201030 18:28:08.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039689681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039706903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.246" endtime="20201030 18:28:08.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039689681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039706903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.599" endtime="20201030 18:28:08.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.618" endtime="20201030 18:28:08.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.237" endtime="20201030 18:28:08.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.232" endtime="20201030 18:28:08.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:08.638" level="INFO">${RESULT} = [{'diff': 1.7222000000004234e-05}, {'diff': 1.737500000000003e-05}, {'diff': 1.669499999999713e-05}, {'diff': 1.72089999999972e-05}, {'diff': 1.6887999999999626e-05}, {'diff': 1.6679999999998085e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:08.627" endtime="20201030 18:28:08.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:08.651" level="INFO">${ACCURACY} = {'diff': [1.7222000000004234e-05, 1.737500000000003e-05, 1.669499999999713e-05, 1.72089999999972e-05, 1.6887999999999626e-05, 1.6679999999998085e-05, 1.6722000000003734e-05, 1.6679999999998085e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:28:08.640" endtime="20201030 18:28:08.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.664" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 18:28:08.661" endtime="20201030 18:28:08.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.671" level="INFO">VALUE: [1.7222000000004234e-05, 1.737500000000003e-05, 1.669499999999713e-05, 1.72089999999972e-05, 1.6887999999999626e-05, 1.6679999999998085e-05, 1.6722000000003734e-05, 1.6679999999998085e-05, 1.6569000000001e-05, 1.737500000000003e-05, 1.7236000000003804e-05, 1.6693999999997655e-05, 1.7180000000005524e-05, 1.654100000000186e-05, 1.6999999999996185e-05, 1.6695000000004068e-05, 1.719499999999763e-05, 1.740299999999917e-05, 1.6708000000004164e-05, 1.7403000000006108e-05, 1.7028000000002264e-05, 1.6542000000001333e-05, 1.6542000000001333e-05, 1.7042000000001833e-05, 1.7347999999993424e-05, 1.6708000000004164e-05, 1.7222000000004234e-05, 1.686099999999996e-05, 1.7042000000001833e-05, 1.711100000000021e-05, 1.7193999999998155e-05, 1.680499999999474e-05, 1.711100000000021e-05, 1.72089999999972e-05, 1.655500000000143e-05, 1.6542000000001333e-05, 1.7056000000001403e-05, 1.737500000000003e-05, 1.687499999999953e-05, 1.6541999999994395e-05, 1.7042000000001833e-05, 1.687499999999953e-05, 1.740299999999917e-05, 1.702700000000279e-05, 1.73889999999996e-05, 1.705500000000193e-05, 1.6736000000003304e-05, 1.7055999999994464e-05, 1.6556000000000903e-05, 1.6736000000003304e-05]</msg>
<status status="PASS" starttime="20201030 18:28:08.667" endtime="20201030 18:28:08.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.653" endtime="20201030 18:28:08.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:08.685" endtime="20201030 18:28:08.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.680" endtime="20201030 18:28:08.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.677" endtime="20201030 18:28:08.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.164" endtime="20201030 18:28:08.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.163" endtime="20201030 18:28:08.710"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.733" endtime="20201030 18:28:08.748"></status>
</kw>
<msg timestamp="20201030 18:28:08.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.730" endtime="20201030 18:28:08.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.752" endtime="20201030 18:28:08.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.758" endtime="20201030 18:28:08.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.723" endtime="20201030 18:28:08.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.716" endtime="20201030 18:28:08.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.781" endtime="20201030 18:28:09.125"></status>
</kw>
<msg timestamp="20201030 18:28:09.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040552861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040569917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.778" endtime="20201030 18:28:09.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040552861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040569917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.140" endtime="20201030 18:28:09.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.165" endtime="20201030 18:28:09.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.771" endtime="20201030 18:28:09.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.766" endtime="20201030 18:28:09.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.191" level="INFO">${RESULT} = [{'diff': 1.7055999999994464e-05}, {'diff': 1.6542000000001333e-05}, {'diff': 1.7055999999994464e-05}, {'diff': 1.636099999999946e-05}, {'diff': 1.6722000000003734e-05}, {'diff': 1.662499999999928e-05...</msg>
<status status="PASS" starttime="20201030 18:28:09.177" endtime="20201030 18:28:09.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:09.205" level="INFO">${ACCURACY} = {'diff': [1.7055999999994464e-05, 1.6542000000001333e-05, 1.7055999999994464e-05, 1.636099999999946e-05, 1.6722000000003734e-05, 1.662499999999928e-05, 1.684699999999345e-05, 1.7207999999997725e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:28:09.194" endtime="20201030 18:28:09.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.222" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 18:28:09.218" endtime="20201030 18:28:09.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.230" level="INFO">VALUE: [1.7055999999994464e-05, 1.6542000000001333e-05, 1.7055999999994464e-05, 1.636099999999946e-05, 1.6722000000003734e-05, 1.662499999999928e-05, 1.684699999999345e-05, 1.7207999999997725e-05, 1.7334000000000793e-05, 1.704099999999542e-05, 1.6542000000001333e-05, 1.6736000000003304e-05, 1.73889999999996e-05, 1.6875000000006468e-05, 1.6707999999997225e-05, 1.7388000000000126e-05, 1.654100000000186e-05, 1.68889999999991e-05, 1.737500000000003e-05, 1.6709000000003638e-05, 1.73889999999996e-05, 1.6694000000004594e-05, 1.655500000000143e-05, 1.687499999999953e-05, 1.687499999999953e-05, 1.658300000000057e-05, 1.687499999999953e-05, 1.737500000000003e-05, 1.6737000000002777e-05, 1.73889999999996e-05, 1.6569000000001e-05, 1.652700000000229e-05, 1.6707999999997225e-05, 1.7319999999994284e-05, 1.737500000000003e-05, 1.7222000000004234e-05, 1.7459000000004388e-05, 1.68889999999991e-05, 1.737500000000003e-05, 1.6707999999997225e-05, 1.7193999999998155e-05, 1.704100000000236e-05, 1.6541999999994395e-05, 1.636099999999946e-05, 1.6693999999997655e-05, 1.736100000000046e-05, 1.6569999999993534e-05, 1.668099999999756e-05, 1.7042000000001833e-05, 1.7222000000004234e-05]</msg>
<status status="PASS" starttime="20201030 18:28:09.225" endtime="20201030 18:28:09.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.208" endtime="20201030 18:28:09.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.249" endtime="20201030 18:28:09.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.242" endtime="20201030 18:28:09.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.238" endtime="20201030 18:28:09.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.712" endtime="20201030 18:28:09.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.711" endtime="20201030 18:28:09.280"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.314" endtime="20201030 18:28:09.335"></status>
</kw>
<msg timestamp="20201030 18:28:09.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.309" endtime="20201030 18:28:09.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.340" endtime="20201030 18:28:09.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.350" endtime="20201030 18:28:09.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.297" endtime="20201030 18:28:09.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.290" endtime="20201030 18:28:09.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.388" endtime="20201030 18:28:09.742"></status>
</kw>
<msg timestamp="20201030 18:28:09.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.058421042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058437764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.384" endtime="20201030 18:28:09.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.058421042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058437764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.754" endtime="20201030 18:28:09.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.773" endtime="20201030 18:28:09.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.373" endtime="20201030 18:28:09.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.366" endtime="20201030 18:28:09.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.791" level="INFO">${RESULT} = [{'diff': 1.6722000000003734e-05}, {'diff': 1.68889999999991e-05}, {'diff': 1.67089999999967e-05}, {'diff': 1.6556000000000903e-05}, {'diff': 1.6542000000001333e-05}, {'diff': 1.6887999999999626e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:09.782" endtime="20201030 18:28:09.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:09.800" level="INFO">${ACCURACY} = {'diff': [1.6722000000003734e-05, 1.68889999999991e-05, 1.67089999999967e-05, 1.6556000000000903e-05, 1.6542000000001333e-05, 1.6887999999999626e-05, 1.67089999999967e-05, 1.740299999999917e-05, 1.743...</msg>
<status status="PASS" starttime="20201030 18:28:09.793" endtime="20201030 18:28:09.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.811" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 18:28:09.809" endtime="20201030 18:28:09.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.817" level="INFO">VALUE: [1.6722000000003734e-05, 1.68889999999991e-05, 1.67089999999967e-05, 1.6556000000000903e-05, 1.6542000000001333e-05, 1.6887999999999626e-05, 1.67089999999967e-05, 1.740299999999917e-05, 1.743099999999831e-05, 1.6569000000001e-05, 1.7056000000001403e-05, 1.6749999999995935e-05, 1.7417000000005678e-05, 1.6806000000001153e-05, 1.7028000000002264e-05, 1.7277999999995575e-05, 1.6541999999994395e-05, 1.6915999999998765e-05, 1.737500000000003e-05, 1.7443999999998405e-05, 1.737500000000003e-05, 1.7221999999997295e-05, 1.7028000000002264e-05, 1.7222000000004234e-05, 1.687499999999953e-05, 1.687499999999953e-05, 1.6721999999996795e-05, 1.741699999999874e-05, 1.73889999999996e-05, 1.6721999999996795e-05, 1.7041999999994895e-05, 1.7223000000003708e-05, 1.630500000000118e-05, 1.687499999999953e-05, 1.690299999999867e-05, 1.7236000000003804e-05, 1.73889999999996e-05, 1.6528000000001764e-05, 1.687499999999953e-05, 1.68889999999991e-05, 1.6527999999994825e-05, 1.7180000000005524e-05, 1.6709000000003638e-05, 1.7249999999996435e-05, 1.7389000000006538e-05, 1.7207999999997725e-05, 1.6541999999994395e-05, 1.7056000000001403e-05, 1.7319999999994284e-05, 1.697299999999652e-05]</msg>
<status status="PASS" starttime="20201030 18:28:09.814" endtime="20201030 18:28:09.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.802" endtime="20201030 18:28:09.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.831" endtime="20201030 18:28:09.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.825" endtime="20201030 18:28:09.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.823" endtime="20201030 18:28:09.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.283" endtime="20201030 18:28:09.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.281" endtime="20201030 18:28:09.856"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.879" endtime="20201030 18:28:09.895"></status>
</kw>
<msg timestamp="20201030 18:28:09.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.876" endtime="20201030 18:28:09.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.899" endtime="20201030 18:28:09.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.905" endtime="20201030 18:28:09.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.869" endtime="20201030 18:28:09.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.863" endtime="20201030 18:28:09.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.929" endtime="20201030 18:28:10.280"></status>
</kw>
<msg timestamp="20201030 18:28:10.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040098861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040116083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.925" endtime="20201030 18:28:10.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040098861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040116083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.289" endtime="20201030 18:28:10.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.308" endtime="20201030 18:28:10.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.918" endtime="20201030 18:28:10.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.913" endtime="20201030 18:28:10.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.326" level="INFO">${RESULT} = [{'diff': 1.7221999999997295e-05}, {'diff': 1.673699999999584e-05}, {'diff': 1.6736000000003304e-05}, {'diff': 1.690299999999867e-05}, {'diff': 1.686099999999996e-05}, {'diff': 1.6722000000003734e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:10.317" endtime="20201030 18:28:10.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:10.337" level="INFO">${ACCURACY} = {'diff': [1.7221999999997295e-05, 1.673699999999584e-05, 1.6736000000003304e-05, 1.690299999999867e-05, 1.686099999999996e-05, 1.6722000000003734e-05, 1.6556000000000903e-05, 1.716699999999849e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:28:10.328" endtime="20201030 18:28:10.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.347" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 18:28:10.345" endtime="20201030 18:28:10.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.353" level="INFO">VALUE: [1.7221999999997295e-05, 1.673699999999584e-05, 1.6736000000003304e-05, 1.690299999999867e-05, 1.686099999999996e-05, 1.6722000000003734e-05, 1.6556000000000903e-05, 1.716699999999849e-05, 1.654099999999492e-05, 1.7457999999997975e-05, 1.6584000000000043e-05, 1.7041999999994895e-05, 1.6584000000000043e-05, 1.7389000000006538e-05, 1.7195000000004568e-05, 1.7056000000001403e-05, 1.665299999999842e-05, 1.6792000000001583e-05, 1.6889000000006038e-05, 1.6721999999996795e-05, 1.6708000000004164e-05, 1.722299999999677e-05, 1.6667000000004928e-05, 1.683300000000082e-05, 1.737500000000003e-05, 1.6736000000003304e-05, 1.6721999999996795e-05, 1.740299999999917e-05, 1.681899999999431e-05, 1.737500000000003e-05, 1.68889999999991e-05, 1.6721999999996795e-05, 1.687499999999953e-05, 1.6542000000001333e-05, 1.68889999999991e-05, 1.7056000000001403e-05, 1.701299999999628e-05, 1.669499999999713e-05, 1.7222000000004234e-05, 1.6693999999997655e-05, 1.70690000000015e-05, 1.7236000000003804e-05, 1.655499999999449e-05, 1.7249999999996435e-05, 1.7236000000003804e-05, 1.690299999999867e-05, 1.7208000000004664e-05, 1.7042000000001833e-05, 1.683300000000082e-05, 1.690299999999867e-05]</msg>
<status status="PASS" starttime="20201030 18:28:10.350" endtime="20201030 18:28:10.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.338" endtime="20201030 18:28:10.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.366" endtime="20201030 18:28:10.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.361" endtime="20201030 18:28:10.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.359" endtime="20201030 18:28:10.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.858" endtime="20201030 18:28:10.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.857" endtime="20201030 18:28:10.394"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.425" endtime="20201030 18:28:10.442"></status>
</kw>
<msg timestamp="20201030 18:28:10.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.421" endtime="20201030 18:28:10.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.445" endtime="20201030 18:28:10.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.452" endtime="20201030 18:28:10.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.411" endtime="20201030 18:28:10.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.403" endtime="20201030 18:28:10.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.475" endtime="20201030 18:28:10.825"></status>
</kw>
<msg timestamp="20201030 18:28:10.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051724972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051741681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.472" endtime="20201030 18:28:10.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051724972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051741681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.835" endtime="20201030 18:28:10.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.854" endtime="20201030 18:28:10.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.465" endtime="20201030 18:28:10.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.460" endtime="20201030 18:28:10.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.871" level="INFO">${RESULT} = [{'diff': 1.67089999999967e-05}, {'diff': 1.737500000000003e-05}, {'diff': 1.6750000000002874e-05}, {'diff': 1.6555999999993964e-05}, {'diff': 1.705499999999499e-05}, {'diff': 1.733300000000132e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:10.862" endtime="20201030 18:28:10.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:10.885" level="INFO">${ACCURACY} = {'diff': [1.67089999999967e-05, 1.737500000000003e-05, 1.6750000000002874e-05, 1.6555999999993964e-05, 1.705499999999499e-05, 1.733300000000132e-05, 1.7041999999994895e-05, 1.7222000000004234e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 18:28:10.873" endtime="20201030 18:28:10.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.896" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 18:28:10.894" endtime="20201030 18:28:10.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.902" level="INFO">VALUE: [1.67089999999967e-05, 1.737500000000003e-05, 1.6750000000002874e-05, 1.6555999999993964e-05, 1.705499999999499e-05, 1.733300000000132e-05, 1.7041999999994895e-05, 1.7222000000004234e-05, 1.73889999999996e-05, 1.7070000000000973e-05, 1.655499999999449e-05, 1.7388000000000126e-05, 1.7070000000000973e-05, 1.7209000000004138e-05, 1.72089999999972e-05, 1.7207999999997725e-05, 1.687499999999953e-05, 1.684700000000039e-05, 1.687499999999953e-05, 1.713899999999935e-05, 1.736100000000046e-05, 1.690299999999867e-05, 1.690299999999867e-05, 1.736100000000046e-05, 1.7055999999994464e-05, 1.6707999999997225e-05, 1.6735999999996365e-05, 1.73889999999996e-05, 1.7250000000003374e-05, 1.6722000000003734e-05, 1.73889999999996e-05, 1.7401999999999695e-05, 1.68889999999991e-05, 1.7167000000005428e-05, 1.654100000000186e-05, 1.7222000000004234e-05, 1.722299999999677e-05, 1.687499999999953e-05, 1.68889999999991e-05, 1.7042000000001833e-05, 1.7401999999999695e-05, 1.7221999999997295e-05, 1.737500000000003e-05, 1.654099999999492e-05, 1.704100000000236e-05, 1.737500000000003e-05, 1.6527999999994825e-05, 1.6556000000000903e-05, 1.73889999999996e-05, 1.6721999999996795e-05]</msg>
<status status="PASS" starttime="20201030 18:28:10.899" endtime="20201030 18:28:10.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.887" endtime="20201030 18:28:10.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.914" endtime="20201030 18:28:10.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.910" endtime="20201030 18:28:10.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.907" endtime="20201030 18:28:10.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.397" endtime="20201030 18:28:10.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.395" endtime="20201030 18:28:10.940"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.962" endtime="20201030 18:28:10.979"></status>
</kw>
<msg timestamp="20201030 18:28:10.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.959" endtime="20201030 18:28:10.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.982" endtime="20201030 18:28:10.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.989" endtime="20201030 18:28:10.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.952" endtime="20201030 18:28:10.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.946" endtime="20201030 18:28:10.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.012" endtime="20201030 18:28:11.363"></status>
</kw>
<msg timestamp="20201030 18:28:11.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0397085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039732222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:11.009" endtime="20201030 18:28:11.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0397085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039732222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:11.373" endtime="20201030 18:28:11.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.392" endtime="20201030 18:28:11.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.002" endtime="20201030 18:28:11.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.997" endtime="20201030 18:28:11.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:11.409" level="INFO">${RESULT} = [{'diff': 2.3721999999996857e-05}, {'diff': 2.4056000000001465e-05}, {'diff': 2.436100000000052e-05}, {'diff': 2.436100000000052e-05}, {'diff': 2.422300000000377e-05}, {'diff': 2.4028000000002325e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:11.400" endtime="20201030 18:28:11.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:11.419" level="INFO">${ACCURACY} = {'diff': [2.3721999999996857e-05, 2.4056000000001465e-05, 2.436100000000052e-05, 2.436100000000052e-05, 2.422300000000377e-05, 2.4028000000002325e-05, 2.422299999999683e-05, 2.370899999999676e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 18:28:11.411" endtime="20201030 18:28:11.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.430" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 18:28:11.427" endtime="20201030 18:28:11.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.435" level="INFO">VALUE: [2.3721999999996857e-05, 2.4056000000001465e-05, 2.436100000000052e-05, 2.436100000000052e-05, 2.422300000000377e-05, 2.4028000000002325e-05, 2.422299999999683e-05, 2.370899999999676e-05, 2.3542000000001395e-05, 2.438899999999966e-05, 2.437500000000009e-05, 2.4056000000001465e-05, 2.354100000000192e-05, 2.437500000000009e-05, 2.438899999999966e-05, 2.388899999999916e-05, 2.370899999999676e-05, 2.437500000000009e-05, 2.4013999999995816e-05, 2.352700000000235e-05, 2.3721999999996857e-05, 2.3818999999994372e-05, 2.419500000000463e-05, 2.3763000000003032e-05, 2.405500000000199e-05, 2.437500000000009e-05, 2.387499999999959e-05, 2.437500000000009e-05, 2.438899999999966e-05, 2.352700000000235e-05, 2.388899999999916e-05, 2.4096999999993762e-05, 2.3707999999997287e-05, 2.3528000000001825e-05, 2.3527999999994886e-05, 2.40970000000007e-05, 2.3999999999996247e-05, 2.369499999999719e-05, 2.366699999999805e-05, 2.388899999999916e-05, 2.3526999999995413e-05, 2.4042000000001895e-05, 2.4042000000001895e-05, 2.4208000000004726e-05, 2.3527999999994886e-05, 2.3527999999994886e-05, 2.406900000000156e-05, 2.3541999999994456e-05, 2.404100000000242e-05, 2.386100000000002e-05]</msg>
<status status="PASS" starttime="20201030 18:28:11.432" endtime="20201030 18:28:11.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.420" endtime="20201030 18:28:11.438"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:11.448" endtime="20201030 18:28:11.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.443" endtime="20201030 18:28:11.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.441" endtime="20201030 18:28:11.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.942" endtime="20201030 18:28:11.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.941" endtime="20201030 18:28:11.473"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.496" endtime="20201030 18:28:11.511"></status>
</kw>
<msg timestamp="20201030 18:28:11.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.492" endtime="20201030 18:28:11.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.514" endtime="20201030 18:28:11.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.520" endtime="20201030 18:28:11.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.485" endtime="20201030 18:28:11.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.479" endtime="20201030 18:28:11.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.546" endtime="20201030 18:28:11.885"></status>
</kw>
<msg timestamp="20201030 18:28:11.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039540139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039563861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.542" endtime="20201030 18:28:11.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039540139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039563861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.894" endtime="20201030 18:28:11.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.913" endtime="20201030 18:28:11.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.535" endtime="20201030 18:28:11.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.530" endtime="20201030 18:28:11.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:11.931" level="INFO">${RESULT} = [{'diff': 2.3721999999996857e-05}, {'diff': 2.358300000000063e-05}, {'diff': 2.437500000000009e-05}, {'diff': 2.387499999999959e-05}, {'diff': 2.404100000000242e-05}, {'diff': 2.42090000000042e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:11.922" endtime="20201030 18:28:11.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:11.940" level="INFO">${ACCURACY} = {'diff': [2.3721999999996857e-05, 2.358300000000063e-05, 2.437500000000009e-05, 2.387499999999959e-05, 2.404100000000242e-05, 2.42090000000042e-05, 2.3722000000003796e-05, 2.437500000000009e-05, 2.370...</msg>
<status status="PASS" starttime="20201030 18:28:11.933" endtime="20201030 18:28:11.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.951" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 18:28:11.949" endtime="20201030 18:28:11.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.956" level="INFO">VALUE: [2.3721999999996857e-05, 2.358300000000063e-05, 2.437500000000009e-05, 2.387499999999959e-05, 2.404100000000242e-05, 2.42090000000042e-05, 2.3722000000003796e-05, 2.437500000000009e-05, 2.37090000000037e-05, 2.4249999999996497e-05, 2.3736000000003366e-05, 2.438899999999966e-05, 2.354100000000192e-05, 2.433300000000138e-05, 2.4056000000001465e-05, 2.3542000000001395e-05, 2.394500000000438e-05, 2.388899999999916e-05, 2.437500000000009e-05, 2.3721999999996857e-05, 2.4207999999997787e-05, 2.366699999999805e-05, 2.37090000000037e-05, 2.355500000000149e-05, 2.4222000000004296e-05, 2.387499999999959e-05, 2.387499999999959e-05, 2.3542000000001395e-05, 2.361099999999977e-05, 2.388899999999916e-05, 2.3901999999999257e-05, 2.362499999999934e-05, 2.4221999999997357e-05, 2.437500000000009e-05, 2.3722000000003796e-05, 2.3707999999997287e-05, 2.387499999999959e-05, 2.4056000000001465e-05, 2.386100000000002e-05, 2.4042000000001895e-05, 2.4249999999996497e-05, 2.4236000000003866e-05, 2.420899999999726e-05, 2.4070000000001035e-05, 2.3693999999997717e-05, 2.437500000000009e-05, 2.3528000000001825e-05, 2.3722000000003796e-05, 2.440299999999923e-05, 2.3485999999996177e-05]</msg>
<status status="PASS" starttime="20201030 18:28:11.953" endtime="20201030 18:28:11.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.942" endtime="20201030 18:28:11.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:11.971" endtime="20201030 18:28:11.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.965" endtime="20201030 18:28:11.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.962" endtime="20201030 18:28:11.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.475" endtime="20201030 18:28:11.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.474" endtime="20201030 18:28:11.996"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.019" endtime="20201030 18:28:12.034"></status>
</kw>
<msg timestamp="20201030 18:28:12.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.015" endtime="20201030 18:28:12.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.038" endtime="20201030 18:28:12.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.044" endtime="20201030 18:28:12.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.008" endtime="20201030 18:28:12.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.002" endtime="20201030 18:28:12.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.067" endtime="20201030 18:28:12.407"></status>
</kw>
<msg timestamp="20201030 18:28:12.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039992264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040016153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.064" endtime="20201030 18:28:12.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039992264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040016153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.417" endtime="20201030 18:28:12.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.436" endtime="20201030 18:28:12.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.057" endtime="20201030 18:28:12.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.052" endtime="20201030 18:28:12.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:12.453" level="INFO">${RESULT} = [{'diff': 2.388899999999916e-05}, {'diff': 2.3555999999994026e-05}, {'diff': 2.388899999999916e-05}, {'diff': 2.4207999999997787e-05}, {'diff': 2.369500000000413e-05}, {'diff': 2.3778000000002075e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:12.444" endtime="20201030 18:28:12.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:12.464" level="INFO">${ACCURACY} = {'diff': [2.388899999999916e-05, 2.3555999999994026e-05, 2.388899999999916e-05, 2.4207999999997787e-05, 2.369500000000413e-05, 2.3778000000002075e-05, 2.434700000000095e-05, 2.358300000000063e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 18:28:12.455" endtime="20201030 18:28:12.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.475" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 18:28:12.472" endtime="20201030 18:28:12.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.480" level="INFO">VALUE: [2.388899999999916e-05, 2.3555999999994026e-05, 2.388899999999916e-05, 2.4207999999997787e-05, 2.369500000000413e-05, 2.3778000000002075e-05, 2.434700000000095e-05, 2.358300000000063e-05, 2.437500000000009e-05, 2.419500000000463e-05, 2.437500000000009e-05, 2.388899999999916e-05, 2.4249999999996497e-05, 2.3693999999997717e-05, 2.3541999999994456e-05, 2.354100000000192e-05, 2.3514000000002255e-05, 2.405500000000199e-05, 2.388899999999916e-05, 2.438899999999966e-05, 2.4042000000001895e-05, 2.404100000000242e-05, 2.4054999999995053e-05, 2.3528000000001825e-05, 2.363899999999891e-05, 2.3694000000004656e-05, 2.352700000000235e-05, 2.4026999999995913e-05, 2.436100000000052e-05, 2.419500000000463e-05, 2.3707999999997287e-05, 2.390299999999873e-05, 2.3693999999997717e-05, 2.4207999999997787e-05, 2.4207999999997787e-05, 2.3915999999998827e-05, 2.361099999999977e-05, 2.4290999999995733e-05, 2.3556000000000965e-05, 2.3542000000001395e-05, 2.437500000000009e-05, 2.3500000000002685e-05, 2.3528000000001825e-05, 2.3542000000001395e-05, 2.437500000000009e-05, 2.4235999999996927e-05, 2.436100000000052e-05, 2.3708000000004226e-05, 2.4042000000001895e-05, 2.436100000000052e-05]</msg>
<status status="PASS" starttime="20201030 18:28:12.477" endtime="20201030 18:28:12.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.465" endtime="20201030 18:28:12.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:12.493" endtime="20201030 18:28:12.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.488" endtime="20201030 18:28:12.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.486" endtime="20201030 18:28:12.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.998" endtime="20201030 18:28:12.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.997" endtime="20201030 18:28:12.518"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.541" endtime="20201030 18:28:12.556"></status>
</kw>
<msg timestamp="20201030 18:28:12.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.537" endtime="20201030 18:28:12.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.559" endtime="20201030 18:28:12.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.566" endtime="20201030 18:28:12.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.530" endtime="20201030 18:28:12.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.524" endtime="20201030 18:28:12.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.589" endtime="20201030 18:28:12.927"></status>
</kw>
<msg timestamp="20201030 18:28:12.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039693597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039717944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.586" endtime="20201030 18:28:12.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039693597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039717944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.937" endtime="20201030 18:28:12.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.956" endtime="20201030 18:28:12.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.579" endtime="20201030 18:28:12.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.574" endtime="20201030 18:28:12.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:12.973" level="INFO">${RESULT} = [{'diff': 2.434700000000095e-05}, {'diff': 2.4236000000003866e-05}, {'diff': 2.3721999999996857e-05}, {'diff': 2.4207999999997787e-05}, {'diff': 2.354100000000192e-05}, {'diff': 2.4221999999997357e-05...</msg>
<status status="PASS" starttime="20201030 18:28:12.964" endtime="20201030 18:28:12.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:12.985" level="INFO">${ACCURACY} = {'diff': [2.434700000000095e-05, 2.4236000000003866e-05, 2.3721999999996857e-05, 2.4207999999997787e-05, 2.354100000000192e-05, 2.4221999999997357e-05, 2.4388000000000187e-05, 2.406900000000156e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:12.975" endtime="20201030 18:28:12.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.995" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 18:28:12.993" endtime="20201030 18:28:12.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.001" level="INFO">VALUE: [2.434700000000095e-05, 2.4236000000003866e-05, 2.3721999999996857e-05, 2.4207999999997787e-05, 2.354100000000192e-05, 2.4221999999997357e-05, 2.4388000000000187e-05, 2.406900000000156e-05, 2.4028000000002325e-05, 2.3721999999996857e-05, 2.3556000000000965e-05, 2.4208000000004726e-05, 2.3472000000003546e-05, 2.3555999999994026e-05, 2.42090000000042e-05, 2.370899999999676e-05, 2.355500000000149e-05, 2.4070000000001035e-05, 2.356900000000106e-05, 2.3542000000001395e-05, 2.440299999999923e-05, 2.354100000000192e-05, 2.438899999999966e-05, 2.4334000000000855e-05, 2.391700000000524e-05, 2.4042000000001895e-05, 2.420899999999726e-05, 2.369499999999719e-05, 2.436100000000052e-05, 2.402700000000285e-05, 2.4263999999996066e-05, 2.4056000000001465e-05, 2.3749999999995997e-05, 2.43890000000066e-05, 2.354100000000192e-05, 2.4041999999994956e-05, 2.3542000000001395e-05, 2.3542000000001395e-05, 2.437500000000009e-05, 2.3707999999997287e-05, 2.383300000000088e-05, 2.438899999999966e-05, 2.3750000000002935e-05, 2.438899999999966e-05, 2.3721999999996857e-05, 2.437500000000009e-05, 2.366699999999805e-05, 2.3486000000003115e-05, 2.420899999999726e-05, 2.3486000000003115e-05]</msg>
<status status="PASS" starttime="20201030 18:28:12.998" endtime="20201030 18:28:13.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.986" endtime="20201030 18:28:13.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.014" endtime="20201030 18:28:13.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.009" endtime="20201030 18:28:13.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.007" endtime="20201030 18:28:13.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.520" endtime="20201030 18:28:13.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.519" endtime="20201030 18:28:13.039"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.061" endtime="20201030 18:28:13.077"></status>
</kw>
<msg timestamp="20201030 18:28:13.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.058" endtime="20201030 18:28:13.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.080" endtime="20201030 18:28:13.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.086" endtime="20201030 18:28:13.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.051" endtime="20201030 18:28:13.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.045" endtime="20201030 18:28:13.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.110" endtime="20201030 18:28:13.451"></status>
</kw>
<msg timestamp="20201030 18:28:13.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039592694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039616417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.107" endtime="20201030 18:28:13.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039592694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039616417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.461" endtime="20201030 18:28:13.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.480" endtime="20201030 18:28:13.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.099" endtime="20201030 18:28:13.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.095" endtime="20201030 18:28:13.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:13.497" level="INFO">${RESULT} = [{'diff': 2.372300000000327e-05}, {'diff': 2.3500000000002685e-05}, {'diff': 2.437500000000009e-05}, {'diff': 2.388899999999916e-05}, {'diff': 2.4207999999997787e-05}, {'diff': 2.3570000000000535e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:13.489" endtime="20201030 18:28:13.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:13.507" level="INFO">${ACCURACY} = {'diff': [2.372300000000327e-05, 2.3500000000002685e-05, 2.437500000000009e-05, 2.388899999999916e-05, 2.4207999999997787e-05, 2.3570000000000535e-05, 2.4388000000000187e-05, 2.438899999999966e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:13.499" endtime="20201030 18:28:13.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.518" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 18:28:13.515" endtime="20201030 18:28:13.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.523" level="INFO">VALUE: [2.372300000000327e-05, 2.3500000000002685e-05, 2.437500000000009e-05, 2.388899999999916e-05, 2.4207999999997787e-05, 2.3570000000000535e-05, 2.4388000000000187e-05, 2.438899999999966e-05, 2.3722000000003796e-05, 2.387499999999959e-05, 2.436100000000052e-05, 2.4207999999997787e-05, 2.372299999999633e-05, 2.3556000000000965e-05, 2.3707999999997287e-05, 2.361099999999977e-05, 2.356900000000106e-05, 2.356900000000106e-05, 2.412499999999984e-05, 2.3735999999996427e-05, 2.4084000000000605e-05, 2.3721999999996857e-05, 2.440299999999923e-05, 2.3707999999997287e-05, 2.3542000000001395e-05, 2.3694000000004656e-05, 2.4055999999994526e-05, 2.3721999999996857e-05, 2.4042000000001895e-05, 2.3542000000001395e-05, 2.437500000000009e-05, 2.4055999999994526e-05, 2.3792000000001645e-05, 2.3693999999997717e-05, 2.3708000000004226e-05, 2.437500000000009e-05, 2.438899999999966e-05, 2.4236000000003866e-05, 2.437500000000009e-05, 2.390299999999873e-05, 2.437500000000009e-05, 2.4042000000001895e-05, 2.437500000000009e-05, 2.373700000000284e-05, 2.3556000000000965e-05, 2.437500000000009e-05, 2.438899999999966e-05, 2.438899999999966e-05, 2.356900000000106e-05, 2.3541999999994456e-05]</msg>
<status status="PASS" starttime="20201030 18:28:13.520" endtime="20201030 18:28:13.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.509" endtime="20201030 18:28:13.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.536" endtime="20201030 18:28:13.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.532" endtime="20201030 18:28:13.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.529" endtime="20201030 18:28:13.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.041" endtime="20201030 18:28:13.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.040" endtime="20201030 18:28:13.561"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.584" endtime="20201030 18:28:13.600"></status>
</kw>
<msg timestamp="20201030 18:28:13.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.581" endtime="20201030 18:28:13.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.603" endtime="20201030 18:28:13.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.609" endtime="20201030 18:28:13.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.573" endtime="20201030 18:28:13.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.567" endtime="20201030 18:28:13.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.634" endtime="20201030 18:28:13.975"></status>
</kw>
<msg timestamp="20201030 18:28:13.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040082917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040106972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.630" endtime="20201030 18:28:13.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040082917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040106972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.984" endtime="20201030 18:28:14.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.004" endtime="20201030 18:28:14.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.622" endtime="20201030 18:28:14.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.617" endtime="20201030 18:28:14.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.021" level="INFO">${RESULT} = [{'diff': 2.4054999999995053e-05}, {'diff': 2.3707999999997287e-05}, {'diff': 2.3528000000001825e-05}, {'diff': 2.3556000000000965e-05}, {'diff': 2.436100000000052e-05}, {'diff': 2.3693999999997717e-0...</msg>
<status status="PASS" starttime="20201030 18:28:14.012" endtime="20201030 18:28:14.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:14.030" level="INFO">${ACCURACY} = {'diff': [2.4054999999995053e-05, 2.3707999999997287e-05, 2.3528000000001825e-05, 2.3556000000000965e-05, 2.436100000000052e-05, 2.3693999999997717e-05, 2.4429999999998897e-05, 2.386100000000002e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:14.023" endtime="20201030 18:28:14.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.042" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 18:28:14.039" endtime="20201030 18:28:14.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.047" level="INFO">VALUE: [2.4054999999995053e-05, 2.3707999999997287e-05, 2.3528000000001825e-05, 2.3556000000000965e-05, 2.436100000000052e-05, 2.3693999999997717e-05, 2.4429999999998897e-05, 2.386100000000002e-05, 2.355500000000149e-05, 2.4042000000001895e-05, 2.4070000000001035e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.386100000000002e-05, 2.3570000000000535e-05, 2.386100000000002e-05, 2.437500000000009e-05, 2.387499999999959e-05, 2.437500000000009e-05, 2.3861999999999495e-05, 2.370899999999676e-05, 2.42090000000042e-05, 2.438899999999966e-05, 2.4221999999997357e-05, 2.3513999999995316e-05, 2.4193999999998217e-05, 2.4262999999996593e-05, 2.3556000000000965e-05, 2.438899999999966e-05, 2.3540999999994983e-05, 2.436100000000052e-05, 2.3679999999998147e-05, 2.3722000000003796e-05, 2.387499999999959e-05, 2.370899999999676e-05, 2.370899999999676e-05, 2.3555999999994026e-05, 2.387499999999959e-05, 2.4276999999996163e-05, 2.4042000000001895e-05, 2.3707999999997287e-05, 2.422299999999683e-05, 2.387499999999959e-05, 2.3693999999997717e-05, 2.4235999999996927e-05, 2.3943999999997967e-05, 2.369500000000413e-05, 2.4193999999998217e-05, 2.3957999999997537e-05, 2.4013999999995816e-05]</msg>
<status status="PASS" starttime="20201030 18:28:14.044" endtime="20201030 18:28:14.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.032" endtime="20201030 18:28:14.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.061" endtime="20201030 18:28:14.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.055" endtime="20201030 18:28:14.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.053" endtime="20201030 18:28:14.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.563" endtime="20201030 18:28:14.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.562" endtime="20201030 18:28:14.086"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.109" endtime="20201030 18:28:14.125"></status>
</kw>
<msg timestamp="20201030 18:28:14.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.106" endtime="20201030 18:28:14.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.128" endtime="20201030 18:28:14.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.134" endtime="20201030 18:28:14.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.099" endtime="20201030 18:28:14.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.093" endtime="20201030 18:28:14.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.158" endtime="20201030 18:28:14.497"></status>
</kw>
<msg timestamp="20201030 18:28:14.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039830278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039854167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.155" endtime="20201030 18:28:14.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039830278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039854167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.507" endtime="20201030 18:28:14.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.526" endtime="20201030 18:28:14.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.148" endtime="20201030 18:28:14.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.143" endtime="20201030 18:28:14.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.543" level="INFO">${RESULT} = [{'diff': 2.38890000000061e-05}, {'diff': 2.390299999999873e-05}, {'diff': 2.404100000000242e-05}, {'diff': 2.4054999999995053e-05}, {'diff': 2.388899999999916e-05}, {'diff': 2.4360999999993582e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:14.534" endtime="20201030 18:28:14.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:14.554" level="INFO">${ACCURACY} = {'diff': [2.38890000000061e-05, 2.390299999999873e-05, 2.404100000000242e-05, 2.4054999999995053e-05, 2.388899999999916e-05, 2.4360999999993582e-05, 2.3584000000000105e-05, 2.4027999999995386e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 18:28:14.545" endtime="20201030 18:28:14.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.565" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 18:28:14.562" endtime="20201030 18:28:14.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.570" level="INFO">VALUE: [2.38890000000061e-05, 2.390299999999873e-05, 2.404100000000242e-05, 2.4054999999995053e-05, 2.388899999999916e-05, 2.4360999999993582e-05, 2.3584000000000105e-05, 2.4027999999995386e-05, 2.3542000000001395e-05, 2.387499999999959e-05, 2.3721999999996857e-05, 2.372300000000327e-05, 2.438899999999966e-05, 2.3722000000003796e-05, 2.4084000000000605e-05, 2.437500000000009e-05, 2.443099999999837e-05, 2.4208000000004726e-05, 2.366699999999805e-05, 2.4388000000000187e-05, 2.4207999999997787e-05, 2.404100000000242e-05, 2.362499999999934e-05, 2.3694000000004656e-05, 2.3540999999994983e-05, 2.406900000000156e-05, 2.3514000000002255e-05, 2.370899999999676e-05, 2.4042000000001895e-05, 2.437500000000009e-05, 2.404100000000242e-05, 2.3541999999994456e-05, 2.352700000000235e-05, 2.386100000000002e-05, 2.4040999999995483e-05, 2.4222000000004296e-05, 2.413899999999941e-05, 2.388899999999916e-05, 2.37090000000037e-05, 2.3707999999997287e-05, 2.3722000000003796e-05, 2.3556000000000965e-05, 2.437500000000009e-05, 2.3887999999999687e-05, 2.4042000000001895e-05, 2.3542000000001395e-05, 2.354100000000192e-05, 2.386100000000002e-05, 2.3514000000002255e-05, 2.4028000000002325e-05]</msg>
<status status="PASS" starttime="20201030 18:28:14.567" endtime="20201030 18:28:14.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.556" endtime="20201030 18:28:14.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.583" endtime="20201030 18:28:14.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.579" endtime="20201030 18:28:14.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.576" endtime="20201030 18:28:14.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.089" endtime="20201030 18:28:14.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.087" endtime="20201030 18:28:14.609"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.636" endtime="20201030 18:28:14.655"></status>
</kw>
<msg timestamp="20201030 18:28:14.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.632" endtime="20201030 18:28:14.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.658" endtime="20201030 18:28:14.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.664" endtime="20201030 18:28:14.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.624" endtime="20201030 18:28:14.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.617" endtime="20201030 18:28:14.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.688" endtime="20201030 18:28:15.038"></status>
</kw>
<msg timestamp="20201030 18:28:15.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045324694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045355236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.685" endtime="20201030 18:28:15.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045324694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045355236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.048" endtime="20201030 18:28:15.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.066" endtime="20201030 18:28:15.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.677" endtime="20201030 18:28:15.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.673" endtime="20201030 18:28:15.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.084" level="INFO">${RESULT} = [{'diff': 3.054200000000146e-05}, {'diff': 3.084700000000051e-05}, {'diff': 3.069400000000472e-05}, {'diff': 3.108300000000119e-05}, {'diff': 3.083400000000042e-05}, {'diff': 3.143099999999843e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:15.075" endtime="20201030 18:28:15.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:15.095" level="INFO">${ACCURACY} = {'diff': [3.054200000000146e-05, 3.084700000000051e-05, 3.069400000000472e-05, 3.108300000000119e-05, 3.083400000000042e-05, 3.143099999999843e-05, 3.136100000000058e-05, 3.134700000000101e-05, 3.0514...</msg>
<status status="PASS" starttime="20201030 18:28:15.086" endtime="20201030 18:28:15.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.106" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 18:28:15.104" endtime="20201030 18:28:15.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.111" level="INFO">VALUE: [3.054200000000146e-05, 3.084700000000051e-05, 3.069400000000472e-05, 3.108300000000119e-05, 3.083400000000042e-05, 3.143099999999843e-05, 3.136100000000058e-05, 3.134700000000101e-05, 3.0514000000002317e-05, 3.120800000000479e-05, 3.048700000000265e-05, 3.105600000000153e-05, 3.104200000000196e-05, 3.131900000000187e-05, 3.087499999999965e-05, 3.070900000000376e-05, 3.056900000000112e-05, 3.102800000000239e-05, 3.120799999999785e-05, 3.102700000000291e-05, 3.088899999999922e-05, 3.086100000000008e-05, 3.087499999999965e-05, 3.1304999999995364e-05, 3.087499999999965e-05, 3.120799999999785e-05, 3.129199999999527e-05, 3.084700000000051e-05, 3.086100000000008e-05, 3.1360999999993644e-05, 3.138899999999972e-05, 3.15700000000016e-05, 3.105500000000205e-05, 3.054200000000146e-05, 3.104200000000196e-05, 3.0514000000002317e-05, 3.1318999999994934e-05, 3.090299999999879e-05, 3.106900000000162e-05, 3.119399999999828e-05, 3.055500000000155e-05, 3.102800000000239e-05, 3.052800000000189e-05, 3.104199999999502e-05, 3.120799999999785e-05, 3.086100000000008e-05, 3.069500000000419e-05, 3.137500000000015e-05, 3.0540999999995044e-05, 3.087499999999965e-05]</msg>
<status status="PASS" starttime="20201030 18:28:15.108" endtime="20201030 18:28:15.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.097" endtime="20201030 18:28:15.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.124" endtime="20201030 18:28:15.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.120" endtime="20201030 18:28:15.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.117" endtime="20201030 18:28:15.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.612" endtime="20201030 18:28:15.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.610" endtime="20201030 18:28:15.149"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.172" endtime="20201030 18:28:15.189"></status>
</kw>
<msg timestamp="20201030 18:28:15.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.169" endtime="20201030 18:28:15.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.193" endtime="20201030 18:28:15.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.199" endtime="20201030 18:28:15.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.161" endtime="20201030 18:28:15.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.156" endtime="20201030 18:28:15.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.222" endtime="20201030 18:28:15.575"></status>
</kw>
<msg timestamp="20201030 18:28:15.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039973778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040004986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.219" endtime="20201030 18:28:15.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039973778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040004986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.585" endtime="20201030 18:28:15.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.604" endtime="20201030 18:28:15.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.212" endtime="20201030 18:28:15.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.207" endtime="20201030 18:28:15.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.621" level="INFO">${RESULT} = [{'diff': 3.120799999999785e-05}, {'diff': 3.116699999999861e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.045900000000351e-05}, {'diff': 3.0860999999993144e-05}, {'diff': 3.070800000000429e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:15.612" endtime="20201030 18:28:15.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:15.630" level="INFO">${ACCURACY} = {'diff': [3.120799999999785e-05, 3.116699999999861e-05, 3.137500000000015e-05, 3.045900000000351e-05, 3.0860999999993144e-05, 3.070800000000429e-05, 3.0499999999995808e-05, 3.142999999999896e-05, 3.07...</msg>
<status status="PASS" starttime="20201030 18:28:15.623" endtime="20201030 18:28:15.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.641" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 18:28:15.639" endtime="20201030 18:28:15.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.647" level="INFO">VALUE: [3.120799999999785e-05, 3.116699999999861e-05, 3.137500000000015e-05, 3.045900000000351e-05, 3.0860999999993144e-05, 3.070800000000429e-05, 3.0499999999995808e-05, 3.142999999999896e-05, 3.070799999999735e-05, 3.070800000000429e-05, 3.086100000000008e-05, 3.136100000000058e-05, 3.070799999999735e-05, 3.079100000000223e-05, 3.154199999999552e-05, 3.0514000000002317e-05, 3.154200000000246e-05, 3.0861999999999556e-05, 3.143099999999843e-05, 3.136100000000058e-05, 3.104100000000248e-05, 3.052700000000241e-05, 3.087499999999965e-05, 3.137500000000015e-05, 3.055600000000103e-05, 3.140299999999929e-05, 3.083400000000042e-05, 3.069399999999778e-05, 3.069399999999778e-05, 3.073599999999649e-05, 3.072299999999639e-05, 3.087499999999965e-05, 3.086100000000008e-05, 3.072200000000386e-05, 3.069499999999725e-05, 3.120800000000479e-05, 3.136100000000058e-05, 3.0804999999994864e-05, 3.122300000000383e-05, 3.137500000000015e-05, 3.126400000000307e-05, 3.120900000000426e-05, 3.070800000000429e-05, 3.1346999999994074e-05, 3.070900000000376e-05, 3.0568999999994184e-05, 3.120799999999785e-05, 3.087499999999965e-05, 3.136100000000058e-05, 3.119500000000469e-05]</msg>
<status status="PASS" starttime="20201030 18:28:15.644" endtime="20201030 18:28:15.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.632" endtime="20201030 18:28:15.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.659" endtime="20201030 18:28:15.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.655" endtime="20201030 18:28:15.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.652" endtime="20201030 18:28:15.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.151" endtime="20201030 18:28:15.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.150" endtime="20201030 18:28:15.685"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.708" endtime="20201030 18:28:15.731"></status>
</kw>
<msg timestamp="20201030 18:28:15.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.704" endtime="20201030 18:28:15.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.734" endtime="20201030 18:28:15.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.741" endtime="20201030 18:28:15.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.697" endtime="20201030 18:28:15.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.691" endtime="20201030 18:28:15.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.764" endtime="20201030 18:28:16.114"></status>
</kw>
<msg timestamp="20201030 18:28:16.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045984375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046015764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.761" endtime="20201030 18:28:16.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045984375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046015764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.124" endtime="20201030 18:28:16.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.143" endtime="20201030 18:28:16.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.753" endtime="20201030 18:28:16.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.749" endtime="20201030 18:28:16.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:16.160" level="INFO">${RESULT} = [{'diff': 3.138899999999972e-05}, {'diff': 3.052800000000189e-05}, {'diff': 3.054200000000146e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.05700000000006e-05}, {'diff': 3.088899999999922e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:16.151" endtime="20201030 18:28:16.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:16.170" level="INFO">${ACCURACY} = {'diff': [3.138899999999972e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.137500000000015e-05, 3.05700000000006e-05, 3.088899999999922e-05, 3.136100000000058e-05, 3.052800000000189e-05, 3.12360...</msg>
<status status="PASS" starttime="20201030 18:28:16.162" endtime="20201030 18:28:16.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.181" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 18:28:16.178" endtime="20201030 18:28:16.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.186" level="INFO">VALUE: [3.138899999999972e-05, 3.052800000000189e-05, 3.054200000000146e-05, 3.137500000000015e-05, 3.05700000000006e-05, 3.088899999999922e-05, 3.136100000000058e-05, 3.052800000000189e-05, 3.123600000000393e-05, 3.093099999999793e-05, 3.087499999999965e-05, 3.137500000000015e-05, 3.070900000000376e-05, 3.092999999999846e-05, 3.105599999999459e-05, 3.097299999999664e-05, 3.087499999999965e-05, 3.054199999999452e-05, 3.052800000000189e-05, 3.138899999999972e-05, 3.152799999999595e-05, 3.1026999999995974e-05, 3.072199999999692e-05, 3.137500000000015e-05, 3.091599999999889e-05, 3.087499999999965e-05, 3.137500000000015e-05, 3.055599999999409e-05, 3.069499999999725e-05, 3.113899999999947e-05, 3.104100000000248e-05, 3.140299999999929e-05, 3.120799999999785e-05, 3.048599999999624e-05, 3.120900000000426e-05, 3.052799999999495e-05, 3.120799999999785e-05, 3.136100000000058e-05, 3.120799999999785e-05, 3.105600000000153e-05, 3.137500000000015e-05, 3.120900000000426e-05, 3.087499999999965e-05, 3.104200000000196e-05, 3.088899999999922e-05, 3.138899999999972e-05, 3.073599999999649e-05, 3.0514000000002317e-05, 3.115299999999904e-05, 3.052800000000189e-05]</msg>
<status status="PASS" starttime="20201030 18:28:16.183" endtime="20201030 18:28:16.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.171" endtime="20201030 18:28:16.189"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:16.202" endtime="20201030 18:28:16.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.194" endtime="20201030 18:28:16.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.192" endtime="20201030 18:28:16.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.687" endtime="20201030 18:28:16.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.686" endtime="20201030 18:28:16.228"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.258" endtime="20201030 18:28:16.276"></status>
</kw>
<msg timestamp="20201030 18:28:16.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.253" endtime="20201030 18:28:16.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.279" endtime="20201030 18:28:16.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.286" endtime="20201030 18:28:16.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.244" endtime="20201030 18:28:16.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.236" endtime="20201030 18:28:16.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.309" endtime="20201030 18:28:16.677"></status>
</kw>
<msg timestamp="20201030 18:28:16.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047626069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047657111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.306" endtime="20201030 18:28:16.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047626069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047657111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.687" endtime="20201030 18:28:16.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.706" endtime="20201030 18:28:16.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.299" endtime="20201030 18:28:16.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.294" endtime="20201030 18:28:16.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:16.723" level="INFO">${RESULT} = [{'diff': 3.104200000000196e-05}, {'diff': 3.123599999999699e-05}, {'diff': 3.120899999999732e-05}, {'diff': 3.136100000000058e-05}, {'diff': 3.070799999999735e-05}, {'diff': 3.0861999999999556e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:16.714" endtime="20201030 18:28:16.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:16.734" level="INFO">${ACCURACY} = {'diff': [3.104200000000196e-05, 3.123599999999699e-05, 3.120899999999732e-05, 3.136100000000058e-05, 3.070799999999735e-05, 3.0861999999999556e-05, 3.136100000000058e-05, 3.056900000000112e-05, 3.137...</msg>
<status status="PASS" starttime="20201030 18:28:16.725" endtime="20201030 18:28:16.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.744" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 18:28:16.742" endtime="20201030 18:28:16.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.750" level="INFO">VALUE: [3.104200000000196e-05, 3.123599999999699e-05, 3.120899999999732e-05, 3.136100000000058e-05, 3.070799999999735e-05, 3.0861999999999556e-05, 3.136100000000058e-05, 3.056900000000112e-05, 3.137500000000015e-05, 3.072300000000333e-05, 3.072199999999692e-05, 3.104199999999502e-05, 3.138899999999972e-05, 3.134700000000101e-05, 3.105500000000205e-05, 3.097199999999717e-05, 3.101400000000282e-05, 3.154199999999552e-05, 3.140199999999982e-05, 3.088899999999922e-05, 3.120799999999785e-05, 3.136100000000058e-05, 3.120899999999732e-05, 3.0499999999995808e-05, 3.087499999999965e-05, 3.120800000000479e-05, 3.120899999999732e-05, 3.117999999999871e-05, 3.104100000000248e-05, 3.137500000000015e-05, 3.1540999999996044e-05, 3.106900000000162e-05, 3.052799999999495e-05, 3.0486000000003177e-05, 3.105599999999459e-05, 3.137500000000015e-05, 3.120799999999785e-05, 3.087499999999965e-05, 3.136100000000058e-05, 3.0847999999999987e-05, 3.119400000000522e-05, 3.047199999999667e-05, 3.087499999999965e-05, 3.115199999999957e-05, 3.111100000000033e-05, 3.052799999999495e-05, 3.122199999999742e-05, 3.054200000000146e-05, 3.052800000000189e-05, 3.087499999999965e-05]</msg>
<status status="PASS" starttime="20201030 18:28:16.747" endtime="20201030 18:28:16.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.735" endtime="20201030 18:28:16.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:16.762" endtime="20201030 18:28:16.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.758" endtime="20201030 18:28:16.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.755" endtime="20201030 18:28:16.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.231" endtime="20201030 18:28:16.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.230" endtime="20201030 18:28:16.787"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.810" endtime="20201030 18:28:16.827"></status>
</kw>
<msg timestamp="20201030 18:28:16.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.807" endtime="20201030 18:28:16.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.830" endtime="20201030 18:28:16.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.837" endtime="20201030 18:28:16.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.799" endtime="20201030 18:28:16.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.794" endtime="20201030 18:28:16.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.860" endtime="20201030 18:28:17.207"></status>
</kw>
<msg timestamp="20201030 18:28:17.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039600486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039631194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.856" endtime="20201030 18:28:17.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039600486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039631194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.217" endtime="20201030 18:28:17.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.235" endtime="20201030 18:28:17.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.849" endtime="20201030 18:28:17.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.845" endtime="20201030 18:28:17.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.253" level="INFO">${RESULT} = [{'diff': 3.070800000000429e-05}, {'diff': 3.055600000000103e-05}, {'diff': 3.122299999999689e-05}, {'diff': 3.133400000000092e-05}, {'diff': 3.137500000000015e-05}, {'diff': 3.137500000000015e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:17.244" endtime="20201030 18:28:17.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:17.266" level="INFO">${ACCURACY} = {'diff': [3.070800000000429e-05, 3.055600000000103e-05, 3.122299999999689e-05, 3.133400000000092e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.054200000000146e-05, 3.124999999999656e-05, 3.1055...</msg>
<status status="PASS" starttime="20201030 18:28:17.255" endtime="20201030 18:28:17.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.276" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 18:28:17.274" endtime="20201030 18:28:17.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.282" level="INFO">VALUE: [3.070800000000429e-05, 3.055600000000103e-05, 3.122299999999689e-05, 3.133400000000092e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.054200000000146e-05, 3.124999999999656e-05, 3.105500000000205e-05, 3.136100000000058e-05, 3.137500000000015e-05, 3.059700000000026e-05, 3.136100000000058e-05, 3.070899999999682e-05, 3.161100000000083e-05, 3.087499999999965e-05, 3.052800000000189e-05, 3.104199999999502e-05, 3.102799999999545e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.154200000000246e-05, 3.136100000000058e-05, 3.066599999999864e-05, 3.054100000000198e-05, 3.137500000000015e-05, 3.069500000000419e-05, 3.1290999999995794e-05, 3.119400000000522e-05, 3.05700000000006e-05, 3.116599999999914e-05, 3.055600000000103e-05, 3.055500000000155e-05, 3.119500000000469e-05, 3.0597999999999737e-05, 3.054100000000198e-05, 3.137500000000015e-05, 3.119399999999828e-05, 3.134700000000101e-05, 3.093099999999793e-05, 3.119500000000469e-05, 3.1527000000003413e-05, 3.122199999999742e-05, 3.122300000000383e-05, 3.138899999999972e-05, 3.054200000000146e-05, 3.11249999999999e-05, 3.130599999999484e-05, 3.119399999999828e-05, 3.119399999999828e-05]</msg>
<status status="PASS" starttime="20201030 18:28:17.279" endtime="20201030 18:28:17.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.267" endtime="20201030 18:28:17.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.294" endtime="20201030 18:28:17.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.290" endtime="20201030 18:28:17.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.288" endtime="20201030 18:28:17.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.790" endtime="20201030 18:28:17.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.788" endtime="20201030 18:28:17.320"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.342" endtime="20201030 18:28:17.359"></status>
</kw>
<msg timestamp="20201030 18:28:17.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.339" endtime="20201030 18:28:17.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.362" endtime="20201030 18:28:17.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.369" endtime="20201030 18:28:17.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.332" endtime="20201030 18:28:17.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.326" endtime="20201030 18:28:17.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.398" endtime="20201030 18:28:17.738"></status>
</kw>
<msg timestamp="20201030 18:28:17.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039630083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039661292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.395" endtime="20201030 18:28:17.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039630083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039661292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.748" endtime="20201030 18:28:17.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.767" endtime="20201030 18:28:17.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.387" endtime="20201030 18:28:17.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.382" endtime="20201030 18:28:17.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.784" level="INFO">${RESULT} = [{'diff': 3.120899999999732e-05}, {'diff': 3.069399999999778e-05}, {'diff': 3.105500000000205e-05}, {'diff': 3.144500000000494e-05}, {'diff': 3.136100000000058e-05}, {'diff': 3.0861999999999556e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:17.775" endtime="20201030 18:28:17.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:17.794" level="INFO">${ACCURACY} = {'diff': [3.120899999999732e-05, 3.069399999999778e-05, 3.105500000000205e-05, 3.144500000000494e-05, 3.136100000000058e-05, 3.0861999999999556e-05, 3.0846999999993574e-05, 3.054200000000146e-05, 3.12...</msg>
<status status="PASS" starttime="20201030 18:28:17.786" endtime="20201030 18:28:17.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.805" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 18:28:17.802" endtime="20201030 18:28:17.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.810" level="INFO">VALUE: [3.120899999999732e-05, 3.069399999999778e-05, 3.105500000000205e-05, 3.144500000000494e-05, 3.136100000000058e-05, 3.0861999999999556e-05, 3.0846999999993574e-05, 3.054200000000146e-05, 3.120799999999785e-05, 3.138899999999972e-05, 3.136100000000058e-05, 3.087499999999965e-05, 3.072299999999639e-05, 3.0540999999995044e-05, 3.069500000000419e-05, 3.102799999999545e-05, 3.137500000000015e-05, 3.055600000000103e-05, 3.087499999999965e-05, 3.155599999999509e-05, 3.136100000000058e-05, 3.161100000000083e-05, 3.055600000000103e-05, 3.063899999999897e-05, 3.1332999999994504e-05, 3.1040999999995544e-05, 3.104200000000196e-05, 3.119399999999828e-05, 3.104200000000196e-05, 3.120900000000426e-05, 3.088799999999975e-05, 3.108300000000119e-05, 3.052799999999495e-05, 3.054200000000146e-05, 3.104100000000248e-05, 3.102800000000239e-05, 3.0526999999995474e-05, 3.106900000000162e-05, 3.104200000000196e-05, 3.087499999999965e-05, 3.087499999999965e-05, 3.134700000000101e-05, 3.052700000000241e-05, 3.136100000000058e-05, 3.122199999999742e-05, 3.0513999999995378e-05, 3.101399999999588e-05, 3.088899999999922e-05, 3.101399999999588e-05, 3.069400000000472e-05]</msg>
<status status="PASS" starttime="20201030 18:28:17.807" endtime="20201030 18:28:17.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.795" endtime="20201030 18:28:17.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.823" endtime="20201030 18:28:17.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.818" endtime="20201030 18:28:17.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.816" endtime="20201030 18:28:17.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.322" endtime="20201030 18:28:17.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.321" endtime="20201030 18:28:17.848"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.871" endtime="20201030 18:28:17.888"></status>
</kw>
<msg timestamp="20201030 18:28:17.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.867" endtime="20201030 18:28:17.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.891" endtime="20201030 18:28:17.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.897" endtime="20201030 18:28:17.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.860" endtime="20201030 18:28:17.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.854" endtime="20201030 18:28:17.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.921" endtime="20201030 18:28:18.264"></status>
</kw>
<msg timestamp="20201030 18:28:18.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041271778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041302597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.918" endtime="20201030 18:28:18.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041271778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041302597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.274" endtime="20201030 18:28:18.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.293" endtime="20201030 18:28:18.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.910" endtime="20201030 18:28:18.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.906" endtime="20201030 18:28:18.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:18.310" level="INFO">${RESULT} = [{'diff': 3.081900000000137e-05}, {'diff': 3.105500000000205e-05}, {'diff': 3.069400000000472e-05}, {'diff': 3.091599999999889e-05}, {'diff': 3.087499999999965e-05}, {'diff': 3.120800000000479e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:18.301" endtime="20201030 18:28:18.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:18.319" level="INFO">${ACCURACY} = {'diff': [3.081900000000137e-05, 3.105500000000205e-05, 3.069400000000472e-05, 3.091599999999889e-05, 3.087499999999965e-05, 3.120800000000479e-05, 3.120800000000479e-05, 3.102799999999545e-05, 3.1208...</msg>
<status status="PASS" starttime="20201030 18:28:18.312" endtime="20201030 18:28:18.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.330" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 18:28:18.328" endtime="20201030 18:28:18.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.336" level="INFO">VALUE: [3.081900000000137e-05, 3.105500000000205e-05, 3.069400000000472e-05, 3.091599999999889e-05, 3.087499999999965e-05, 3.120800000000479e-05, 3.120800000000479e-05, 3.102799999999545e-05, 3.120899999999732e-05, 3.05700000000006e-05, 3.1013000000003343e-05, 3.098599999999674e-05, 3.054100000000198e-05, 3.06379999999995e-05, 3.070899999999682e-05, 3.1374999999993214e-05, 3.102800000000239e-05, 3.120799999999785e-05, 3.120899999999732e-05, 3.122199999999742e-05, 3.101400000000282e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.092999999999846e-05, 3.119399999999828e-05, 3.062500000000634e-05, 3.0597999999999737e-05, 3.087499999999965e-05, 3.069400000000472e-05, 3.072200000000386e-05, 3.136100000000058e-05, 3.119399999999828e-05, 3.104200000000196e-05, 3.070900000000376e-05, 3.134700000000101e-05, 3.119400000000522e-05, 3.087499999999965e-05, 3.0540999999995044e-05, 3.120799999999785e-05, 3.069499999999725e-05, 3.136100000000058e-05, 3.054100000000198e-05, 3.102800000000239e-05, 3.088899999999922e-05, 3.070800000000429e-05, 3.070900000000376e-05, 3.052800000000189e-05, 3.138899999999972e-05, 3.090299999999879e-05]</msg>
<status status="PASS" starttime="20201030 18:28:18.333" endtime="20201030 18:28:18.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.321" endtime="20201030 18:28:18.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:18.350" endtime="20201030 18:28:18.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.344" endtime="20201030 18:28:18.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.341" endtime="20201030 18:28:18.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.850" endtime="20201030 18:28:18.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.849" endtime="20201030 18:28:18.375"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.398" endtime="20201030 18:28:18.416"></status>
</kw>
<msg timestamp="20201030 18:28:18.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.394" endtime="20201030 18:28:18.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.419" endtime="20201030 18:28:18.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.426" endtime="20201030 18:28:18.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.387" endtime="20201030 18:28:18.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.381" endtime="20201030 18:28:18.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.450" endtime="20201030 18:28:18.800"></status>
</kw>
<msg timestamp="20201030 18:28:18.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039915528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039953569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.447" endtime="20201030 18:28:18.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039915528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039953569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.810" endtime="20201030 18:28:18.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.829" endtime="20201030 18:28:18.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.440" endtime="20201030 18:28:18.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.435" endtime="20201030 18:28:18.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:18.846" level="INFO">${RESULT} = [{'diff': 3.8041000000002545e-05}, {'diff': 3.7847000000000575e-05}, {'diff': 3.801399999999594e-05}, {'diff': 3.849999999999687e-05}, {'diff': 3.7805000000001865e-05}, {'diff': 3.750000000000281e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:18.837" endtime="20201030 18:28:18.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:18.857" level="INFO">${ACCURACY} = {'diff': [3.8041000000002545e-05, 3.7847000000000575e-05, 3.801399999999594e-05, 3.849999999999687e-05, 3.7805000000001865e-05, 3.750000000000281e-05, 3.7861000000000145e-05, 3.819399999999834e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:28:18.848" endtime="20201030 18:28:18.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.868" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 18:28:18.866" endtime="20201030 18:28:18.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.873" level="INFO">VALUE: [3.8041000000002545e-05, 3.7847000000000575e-05, 3.801399999999594e-05, 3.849999999999687e-05, 3.7805000000001865e-05, 3.750000000000281e-05, 3.7861000000000145e-05, 3.819399999999834e-05, 3.8416999999998924e-05, 3.8361000000000645e-05, 3.852800000000295e-05, 3.750000000000281e-05, 3.7861000000000145e-05, 3.7861000000000145e-05, 3.8375000000000214e-05, 3.822199999999748e-05, 3.7846999999993636e-05, 3.8388999999999784e-05, 3.7569000000001185e-05, 3.819500000000475e-05, 3.7874999999999714e-05, 3.7874999999999714e-05, 3.7861000000000145e-05, 3.8360999999993706e-05, 3.802800000000245e-05, 3.805600000000159e-05, 3.8347000000001075e-05, 3.8040999999995606e-05, 3.755600000000109e-05, 3.767999999999827e-05, 3.769399999999784e-05, 3.8360999999993706e-05, 3.7694999999997314e-05, 3.8026999999996036e-05, 3.767999999999827e-05, 3.805600000000159e-05, 3.8180999999998244e-05, 3.820800000000485e-05, 3.765199999999913e-05, 3.769400000000478e-05, 3.8375000000000214e-05, 3.8361000000000645e-05, 3.8402999999999354e-05, 3.8361000000000645e-05, 3.751400000000238e-05, 3.788799999999981e-05, 3.851400000000338e-05, 3.852799999999601e-05, 3.7874999999999714e-05, 3.7861000000000145e-05]</msg>
<status status="PASS" starttime="20201030 18:28:18.870" endtime="20201030 18:28:18.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.859" endtime="20201030 18:28:18.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:18.891" endtime="20201030 18:28:18.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.886" endtime="20201030 18:28:18.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.884" endtime="20201030 18:28:18.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.377" endtime="20201030 18:28:18.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.376" endtime="20201030 18:28:18.916"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.939" endtime="20201030 18:28:18.956"></status>
</kw>
<msg timestamp="20201030 18:28:18.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.935" endtime="20201030 18:28:18.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.960" endtime="20201030 18:28:18.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.966" endtime="20201030 18:28:18.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.928" endtime="20201030 18:28:18.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.922" endtime="20201030 18:28:18.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.990" endtime="20201030 18:28:19.339"></status>
</kw>
<msg timestamp="20201030 18:28:19.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040111194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040148694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.986" endtime="20201030 18:28:19.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040111194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040148694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.349" endtime="20201030 18:28:19.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.367" endtime="20201030 18:28:19.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.979" endtime="20201030 18:28:19.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.974" endtime="20201030 18:28:19.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.385" level="INFO">${RESULT} = [{'diff': 3.749999999999587e-05}, {'diff': 3.76659999999987e-05}, {'diff': 3.7541000000002045e-05}, {'diff': 3.7861000000000145e-05}, {'diff': 3.804199999999508e-05}, {'diff': 3.7541000000002045e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:19.376" endtime="20201030 18:28:19.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:19.396" level="INFO">${ACCURACY} = {'diff': [3.749999999999587e-05, 3.76659999999987e-05, 3.7541000000002045e-05, 3.7861000000000145e-05, 3.804199999999508e-05, 3.7541000000002045e-05, 3.801400000000288e-05, 3.817999999999877e-05, 3.82...</msg>
<status status="PASS" starttime="20201030 18:28:19.387" endtime="20201030 18:28:19.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.407" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 18:28:19.405" endtime="20201030 18:28:19.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.413" level="INFO">VALUE: [3.749999999999587e-05, 3.76659999999987e-05, 3.7541000000002045e-05, 3.7861000000000145e-05, 3.804199999999508e-05, 3.7541000000002045e-05, 3.801400000000288e-05, 3.817999999999877e-05, 3.8208999999997384e-05, 3.819400000000528e-05, 3.854200000000252e-05, 3.8375000000000214e-05, 3.8333000000001505e-05, 3.754200000000152e-05, 3.8526999999996536e-05, 3.750000000000281e-05, 3.769500000000425e-05, 3.8360999999993706e-05, 3.751400000000238e-05, 3.765300000000554e-05, 3.749999999999587e-05, 3.748600000000324e-05, 3.7874999999999714e-05, 3.820800000000485e-05, 3.752800000000195e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.750000000000281e-05, 3.822200000000442e-05, 3.834800000000055e-05, 3.7874999999999714e-05, 3.769500000000425e-05, 3.8416999999998924e-05, 3.751400000000238e-05, 3.8361000000000645e-05, 3.804199999999508e-05, 3.852800000000295e-05, 3.8361000000000645e-05, 3.788799999999981e-05, 3.7833000000001005e-05, 3.8388999999999784e-05, 3.7861000000000145e-05, 3.852800000000295e-05, 3.8361000000000645e-05, 3.7680999999997744e-05, 3.817999999999877e-05, 3.770799999999741e-05, 3.769399999999784e-05, 3.767999999999827e-05, 3.818100000000518e-05]</msg>
<status status="PASS" starttime="20201030 18:28:19.409" endtime="20201030 18:28:19.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.398" endtime="20201030 18:28:19.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.425" endtime="20201030 18:28:19.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.421" endtime="20201030 18:28:19.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.418" endtime="20201030 18:28:19.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.918" endtime="20201030 18:28:19.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.917" endtime="20201030 18:28:19.451"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.475" endtime="20201030 18:28:19.492"></status>
</kw>
<msg timestamp="20201030 18:28:19.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.471" endtime="20201030 18:28:19.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.496" endtime="20201030 18:28:19.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.502" endtime="20201030 18:28:19.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.464" endtime="20201030 18:28:19.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.458" endtime="20201030 18:28:19.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.526" endtime="20201030 18:28:19.877"></status>
</kw>
<msg timestamp="20201030 18:28:19.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041692847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041730722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.522" endtime="20201030 18:28:19.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041692847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041730722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.886" endtime="20201030 18:28:19.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.905" endtime="20201030 18:28:19.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.515" endtime="20201030 18:28:19.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.510" endtime="20201030 18:28:19.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.923" level="INFO">${RESULT} = [{'diff': 3.7874999999999714e-05}, {'diff': 3.8375000000000214e-05}, {'diff': 3.752800000000195e-05}, {'diff': 3.754200000000152e-05}, {'diff': 3.7680999999997744e-05}, {'diff': 3.752800000000195e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:19.914" endtime="20201030 18:28:19.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:19.932" level="INFO">${ACCURACY} = {'diff': [3.7874999999999714e-05, 3.8375000000000214e-05, 3.752800000000195e-05, 3.754200000000152e-05, 3.7680999999997744e-05, 3.752800000000195e-05, 3.769399999999784e-05, 3.851399999999644e-05, 3.8...</msg>
<status status="PASS" starttime="20201030 18:28:19.925" endtime="20201030 18:28:19.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.943" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 18:28:19.941" endtime="20201030 18:28:19.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.949" level="INFO">VALUE: [3.7874999999999714e-05, 3.8375000000000214e-05, 3.752800000000195e-05, 3.754200000000152e-05, 3.7680999999997744e-05, 3.752800000000195e-05, 3.769399999999784e-05, 3.851399999999644e-05, 3.8361000000000645e-05, 3.752800000000195e-05, 3.7874999999999714e-05, 3.8361000000000645e-05, 3.7874999999999714e-05, 3.7847000000000575e-05, 3.772199999999698e-05, 3.852800000000295e-05, 3.7861000000000145e-05, 3.790300000000579e-05, 3.7861000000000145e-05, 3.79859999999968e-05, 3.7666999999998174e-05, 3.7888999999999284e-05, 3.8555000000002615e-05, 3.8361000000000645e-05, 3.7861000000000145e-05, 3.8208999999997384e-05, 3.852800000000295e-05, 3.7847000000000575e-05, 3.804200000000202e-05, 3.752800000000195e-05, 3.7527000000002475e-05, 3.769500000000425e-05, 3.7874999999999714e-05, 3.7694999999997314e-05, 3.819399999999834e-05, 3.8347000000001075e-05, 3.852800000000295e-05, 3.8347000000001075e-05, 3.7847000000000575e-05, 3.7916999999998424e-05, 3.801400000000288e-05, 3.751400000000238e-05, 3.822200000000442e-05, 3.7874999999999714e-05, 3.7527000000002475e-05, 3.7861000000000145e-05, 3.7527000000002475e-05, 3.8388999999999784e-05, 3.750000000000281e-05, 3.823599999999705e-05]</msg>
<status status="PASS" starttime="20201030 18:28:19.945" endtime="20201030 18:28:19.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.934" endtime="20201030 18:28:19.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.961" endtime="20201030 18:28:19.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.957" endtime="20201030 18:28:19.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.954" endtime="20201030 18:28:19.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.453" endtime="20201030 18:28:19.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.452" endtime="20201030 18:28:19.986"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.010" endtime="20201030 18:28:20.029"></status>
</kw>
<msg timestamp="20201030 18:28:20.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.006" endtime="20201030 18:28:20.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.032" endtime="20201030 18:28:20.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.038" endtime="20201030 18:28:20.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.999" endtime="20201030 18:28:20.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.993" endtime="20201030 18:28:20.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.062" endtime="20201030 18:28:20.416"></status>
</kw>
<msg timestamp="20201030 18:28:20.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041882444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041920653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.059" endtime="20201030 18:28:20.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041882444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041920653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.428" endtime="20201030 18:28:20.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.451" endtime="20201030 18:28:20.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.051" endtime="20201030 18:28:20.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.047" endtime="20201030 18:28:20.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:20.468" level="INFO">${RESULT} = [{'diff': 3.820900000000432e-05}, {'diff': 3.822300000000389e-05}, {'diff': 3.774999999999612e-05}, {'diff': 3.7888999999999284e-05}, {'diff': 3.7583000000000755e-05}, {'diff': 3.77780000000022e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:20.459" endtime="20201030 18:28:20.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:20.478" level="INFO">${ACCURACY} = {'diff': [3.820900000000432e-05, 3.822300000000389e-05, 3.774999999999612e-05, 3.7888999999999284e-05, 3.7583000000000755e-05, 3.77780000000022e-05, 3.8430999999998494e-05, 3.754200000000152e-05, 3.83...</msg>
<status status="PASS" starttime="20201030 18:28:20.470" endtime="20201030 18:28:20.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.489" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 18:28:20.487" endtime="20201030 18:28:20.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.495" level="INFO">VALUE: [3.820900000000432e-05, 3.822300000000389e-05, 3.774999999999612e-05, 3.7888999999999284e-05, 3.7583000000000755e-05, 3.77780000000022e-05, 3.8430999999998494e-05, 3.754200000000152e-05, 3.8360999999993706e-05, 3.8375000000000214e-05, 3.7540999999995106e-05, 3.8375000000000214e-05, 3.75979999999998e-05, 3.752800000000195e-05, 3.8208999999997384e-05, 3.8361000000000645e-05, 3.8375000000000214e-05, 3.804199999999508e-05, 3.767999999999827e-05, 3.7694999999997314e-05, 3.8388999999999784e-05, 3.820800000000485e-05, 3.770800000000435e-05, 3.7861000000000145e-05, 3.8541000000003045e-05, 3.843000000000596e-05, 3.8375000000000214e-05, 3.769399999999784e-05, 3.755600000000109e-05, 3.8055000000002115e-05, 3.818000000000571e-05, 3.805600000000159e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.7874999999999714e-05, 3.802800000000245e-05, 3.8388999999999784e-05, 3.7708999999996884e-05, 3.8361000000000645e-05, 3.7874999999999714e-05, 3.8097000000000825e-05, 3.770799999999741e-05, 3.7555000000001615e-05, 3.804200000000202e-05, 3.770800000000435e-05, 3.8208999999997384e-05, 3.801399999999594e-05, 3.822199999999748e-05, 3.7541000000002045e-05, 3.82780000000027e-05]</msg>
<status status="PASS" starttime="20201030 18:28:20.492" endtime="20201030 18:28:20.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.480" endtime="20201030 18:28:20.498"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.510" endtime="20201030 18:28:20.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.504" endtime="20201030 18:28:20.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.501" endtime="20201030 18:28:20.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.989" endtime="20201030 18:28:20.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.987" endtime="20201030 18:28:20.535"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.558" endtime="20201030 18:28:20.576"></status>
</kw>
<msg timestamp="20201030 18:28:20.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.555" endtime="20201030 18:28:20.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.579" endtime="20201030 18:28:20.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.586" endtime="20201030 18:28:20.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.548" endtime="20201030 18:28:20.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.542" endtime="20201030 18:28:20.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.609" endtime="20201030 18:28:20.959"></status>
</kw>
<msg timestamp="20201030 18:28:20.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040045347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040083403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.606" endtime="20201030 18:28:20.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040045347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040083403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.968" endtime="20201030 18:28:20.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.987" endtime="20201030 18:28:20.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.598" endtime="20201030 18:28:20.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.594" endtime="20201030 18:28:20.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.005" level="INFO">${RESULT} = [{'diff': 3.805599999999465e-05}, {'diff': 3.772199999999698e-05}, {'diff': 3.819399999999834e-05}, {'diff': 3.8388999999999784e-05}, {'diff': 3.8375000000000214e-05}, {'diff': 3.8527000000003475e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:20.996" endtime="20201030 18:28:21.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:21.020" level="INFO">${ACCURACY} = {'diff': [3.805599999999465e-05, 3.772199999999698e-05, 3.819399999999834e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.8527000000003475e-05, 3.8361000000000645e-05, 3.7527000000002475e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:28:21.007" endtime="20201030 18:28:21.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.031" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 18:28:21.028" endtime="20201030 18:28:21.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.036" level="INFO">VALUE: [3.805599999999465e-05, 3.772199999999698e-05, 3.819399999999834e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.8527000000003475e-05, 3.8361000000000645e-05, 3.7527000000002475e-05, 3.8430999999998494e-05, 3.7861000000000145e-05, 3.822300000000389e-05, 3.8152999999999104e-05, 3.820800000000485e-05, 3.786199999999962e-05, 3.8361000000000645e-05, 3.767999999999827e-05, 3.784800000000005e-05, 3.802800000000245e-05, 3.8332999999994566e-05, 3.8375000000000214e-05, 3.832000000000141e-05, 3.7805000000001865e-05, 3.804199999999508e-05, 3.750000000000281e-05, 3.801399999999594e-05, 3.818000000000571e-05, 3.7597000000000325e-05, 3.750000000000281e-05, 3.8361000000000645e-05, 3.8375000000000214e-05, 3.826399999999619e-05, 3.824999999999662e-05, 3.8180999999998244e-05, 3.783400000000048e-05, 3.751400000000238e-05, 3.766700000000511e-05, 3.7861000000000145e-05, 3.7861000000000145e-05, 3.8361000000000645e-05, 3.8347000000001075e-05, 3.8333000000001505e-05, 3.8361000000000645e-05, 3.8194999999997814e-05, 3.801400000000288e-05, 3.8194999999997814e-05, 3.8055000000002115e-05, 3.8361000000000645e-05, 3.7666999999998174e-05, 3.802799999999551e-05, 3.804199999999508e-05]</msg>
<status status="PASS" starttime="20201030 18:28:21.033" endtime="20201030 18:28:21.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.022" endtime="20201030 18:28:21.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.049" endtime="20201030 18:28:21.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.044" endtime="20201030 18:28:21.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.042" endtime="20201030 18:28:21.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.537" endtime="20201030 18:28:21.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.536" endtime="20201030 18:28:21.074"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.097" endtime="20201030 18:28:21.114"></status>
</kw>
<msg timestamp="20201030 18:28:21.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.093" endtime="20201030 18:28:21.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.118" endtime="20201030 18:28:21.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.124" endtime="20201030 18:28:21.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.086" endtime="20201030 18:28:21.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.080" endtime="20201030 18:28:21.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.147" endtime="20201030 18:28:21.497"></status>
</kw>
<msg timestamp="20201030 18:28:21.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039953569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039991972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.144" endtime="20201030 18:28:21.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039953569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039991972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.507" endtime="20201030 18:28:21.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.526" endtime="20201030 18:28:21.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.137" endtime="20201030 18:28:21.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.132" endtime="20201030 18:28:21.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.544" level="INFO">${RESULT} = [{'diff': 3.8402999999999354e-05}, {'diff': 3.8375000000000214e-05}, {'diff': 3.8375000000000214e-05}, {'diff': 3.7888999999999284e-05}, {'diff': 3.7861000000000145e-05}, {'diff': 3.8541000000003045e-...</msg>
<status status="PASS" starttime="20201030 18:28:21.535" endtime="20201030 18:28:21.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:21.555" level="INFO">${ACCURACY} = {'diff': [3.8402999999999354e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.7888999999999284e-05, 3.7861000000000145e-05, 3.8541000000003045e-05, 3.819400000000528e-05, 3.817999999999877e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:21.546" endtime="20201030 18:28:21.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.566" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 18:28:21.564" endtime="20201030 18:28:21.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.572" level="INFO">VALUE: [3.8402999999999354e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.7888999999999284e-05, 3.7861000000000145e-05, 3.8541000000003045e-05, 3.819400000000528e-05, 3.817999999999877e-05, 3.7861000000000145e-05, 3.7832999999994066e-05, 3.7555000000001615e-05, 3.820800000000485e-05, 3.822199999999748e-05, 3.807000000000116e-05, 3.757000000000066e-05, 3.782000000000091e-05, 3.757000000000066e-05, 3.7569000000001185e-05, 3.820900000000432e-05, 3.7874999999999714e-05, 3.7902999999998854e-05, 3.7708999999996884e-05, 3.8347000000001075e-05, 3.804199999999508e-05, 3.776400000000263e-05, 3.8402999999999354e-05, 3.8180999999998244e-05, 3.8361000000000645e-05, 3.768100000000468e-05, 3.755599999999415e-05, 3.790300000000579e-05, 3.854199999999558e-05, 3.773600000000349e-05, 3.754200000000152e-05, 3.770799999999741e-05, 3.804199999999508e-05, 3.820799999999791e-05, 3.794399999999809e-05, 3.798600000000374e-05, 3.751399999999544e-05, 3.7861000000000145e-05, 3.822200000000442e-05, 3.767999999999827e-05, 3.770800000000435e-05, 3.772200000000392e-05, 3.804199999999508e-05, 3.844399999999859e-05, 3.754199999999458e-05, 3.7694999999997314e-05, 3.751400000000238e-05]</msg>
<status status="PASS" starttime="20201030 18:28:21.569" endtime="20201030 18:28:21.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.557" endtime="20201030 18:28:21.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.585" endtime="20201030 18:28:21.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.580" endtime="20201030 18:28:21.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.578" endtime="20201030 18:28:21.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.076" endtime="20201030 18:28:21.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.075" endtime="20201030 18:28:21.610"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.633" endtime="20201030 18:28:21.650"></status>
</kw>
<msg timestamp="20201030 18:28:21.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.629" endtime="20201030 18:28:21.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.654" endtime="20201030 18:28:21.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.660" endtime="20201030 18:28:21.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.622" endtime="20201030 18:28:21.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.616" endtime="20201030 18:28:21.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.683" endtime="20201030 18:28:22.034"></status>
</kw>
<msg timestamp="20201030 18:28:22.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039969083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040007444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.680" endtime="20201030 18:28:22.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039969083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040007444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.044" endtime="20201030 18:28:22.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.063" endtime="20201030 18:28:22.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.673" endtime="20201030 18:28:22.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.668" endtime="20201030 18:28:22.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:22.081" level="INFO">${RESULT} = [{'diff': 3.8361000000000645e-05}, {'diff': 3.804199999999508e-05}, {'diff': 3.836199999999318e-05}, {'diff': 3.819399999999834e-05}, {'diff': 3.8347000000001075e-05}, {'diff': 3.8208999999997384e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:22.072" endtime="20201030 18:28:22.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:22.090" level="INFO">${ACCURACY} = {'diff': [3.8361000000000645e-05, 3.804199999999508e-05, 3.836199999999318e-05, 3.819399999999834e-05, 3.8347000000001075e-05, 3.8208999999997384e-05, 3.8375000000000214e-05, 3.820799999999791e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:28:22.083" endtime="20201030 18:28:22.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.101" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 18:28:22.099" endtime="20201030 18:28:22.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.106" level="INFO">VALUE: [3.8361000000000645e-05, 3.804199999999508e-05, 3.836199999999318e-05, 3.819399999999834e-05, 3.8347000000001075e-05, 3.8208999999997384e-05, 3.8375000000000214e-05, 3.820799999999791e-05, 3.8347000000001075e-05, 3.8375000000000214e-05, 3.786199999999962e-05, 3.7680999999997744e-05, 3.769400000000478e-05, 3.769399999999784e-05, 3.826400000000313e-05, 3.7888999999999284e-05, 3.8568999999995246e-05, 3.8375000000000214e-05, 3.801400000000288e-05, 3.7861000000000145e-05, 3.769399999999784e-05, 3.820799999999791e-05, 3.802800000000245e-05, 3.823600000000399e-05, 3.804199999999508e-05, 3.801400000000288e-05, 3.8347000000001075e-05, 3.8375000000000214e-05, 3.7666999999998174e-05, 3.815199999999963e-05, 3.7694999999997314e-05, 3.7680999999997744e-05, 3.7694999999997314e-05, 3.8361000000000645e-05, 3.788799999999981e-05, 3.769400000000478e-05, 3.7861000000000145e-05, 3.8222999999996954e-05, 3.841599999999945e-05, 3.7847000000000575e-05, 3.8040999999995606e-05, 3.752800000000195e-05, 3.783400000000048e-05, 3.820799999999791e-05, 3.801399999999594e-05, 3.7874999999999714e-05, 3.7874999999999714e-05, 3.802800000000245e-05, 3.820799999999791e-05, 3.7708999999996884e-05]</msg>
<status status="PASS" starttime="20201030 18:28:22.103" endtime="20201030 18:28:22.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.092" endtime="20201030 18:28:22.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:22.119" endtime="20201030 18:28:22.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.115" endtime="20201030 18:28:22.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.112" endtime="20201030 18:28:22.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.612" endtime="20201030 18:28:22.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.611" endtime="20201030 18:28:22.144"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.167" endtime="20201030 18:28:22.187"></status>
</kw>
<msg timestamp="20201030 18:28:22.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.164" endtime="20201030 18:28:22.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.190" endtime="20201030 18:28:22.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.196" endtime="20201030 18:28:22.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.157" endtime="20201030 18:28:22.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.151" endtime="20201030 18:28:22.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.220" endtime="20201030 18:28:22.571"></status>
</kw>
<msg timestamp="20201030 18:28:22.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041566556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041611417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.217" endtime="20201030 18:28:22.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041566556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041611417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.581" endtime="20201030 18:28:22.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.599" endtime="20201030 18:28:22.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.209" endtime="20201030 18:28:22.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.205" endtime="20201030 18:28:22.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:22.617" level="INFO">${RESULT} = [{'diff': 4.4861000000000206e-05}, {'diff': 4.4874999999999776e-05}, {'diff': 4.502800000000251e-05}, {'diff': 4.49860000000038e-05}, {'diff': 4.536099999999377e-05}, {'diff': 4.4680999999997806e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:22.608" endtime="20201030 18:28:22.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:22.626" level="INFO">${ACCURACY} = {'diff': [4.4861000000000206e-05, 4.4874999999999776e-05, 4.502800000000251e-05, 4.49860000000038e-05, 4.536099999999377e-05, 4.4680999999997806e-05, 4.53339999999941e-05, 4.4681000000004745e-05, 4.45...</msg>
<status status="PASS" starttime="20201030 18:28:22.619" endtime="20201030 18:28:22.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.637" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 18:28:22.635" endtime="20201030 18:28:22.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.643" level="INFO">VALUE: [4.4861000000000206e-05, 4.4874999999999776e-05, 4.502800000000251e-05, 4.49860000000038e-05, 4.536099999999377e-05, 4.4680999999997806e-05, 4.53339999999941e-05, 4.4681000000004745e-05, 4.454099999999517e-05, 4.46939999999979e-05, 4.4916999999998486e-05, 4.449999999999593e-05, 4.5361000000000706e-05, 4.45269999999956e-05, 4.517999999999883e-05, 4.556899999999531e-05, 4.454200000000158e-05, 4.452800000000201e-05, 4.5611000000000956e-05, 4.46660000000057e-05, 4.4874999999999776e-05, 4.449999999999593e-05, 4.5375000000000276e-05, 4.5375000000000276e-05, 4.46939999999979e-05, 4.48060000000014e-05, 4.506899999999481e-05, 4.5375000000000276e-05, 4.536099999999377e-05, 4.4861000000000206e-05, 4.4847000000000636e-05, 4.5361000000000706e-05, 4.454200000000158e-05, 4.468000000000527e-05, 4.498599999999686e-05, 4.5208999999997446e-05, 4.55269999999966e-05, 4.5388999999999846e-05, 4.470799999999747e-05, 4.5013999999996e-05, 4.517999999999883e-05, 4.4888999999999346e-05, 4.499999999999643e-05, 4.4708999999996946e-05, 4.529199999999539e-05, 4.5208999999997446e-05, 4.470800000000441e-05, 4.504100000000261e-05, 4.4874999999999776e-05, 4.501400000000294e-05]</msg>
<status status="PASS" starttime="20201030 18:28:22.639" endtime="20201030 18:28:22.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.628" endtime="20201030 18:28:22.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:22.657" endtime="20201030 18:28:22.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.651" endtime="20201030 18:28:22.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.648" endtime="20201030 18:28:22.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.147" endtime="20201030 18:28:22.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.145" endtime="20201030 18:28:22.682"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.705" endtime="20201030 18:28:22.724"></status>
</kw>
<msg timestamp="20201030 18:28:22.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.702" endtime="20201030 18:28:22.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.727" endtime="20201030 18:28:22.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.734" endtime="20201030 18:28:22.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.694" endtime="20201030 18:28:22.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.689" endtime="20201030 18:28:22.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.757" endtime="20201030 18:28:23.107"></status>
</kw>
<msg timestamp="20201030 18:28:23.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039905708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039954597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.754" endtime="20201030 18:28:23.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039905708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039954597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.119" endtime="20201030 18:28:23.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.143" endtime="20201030 18:28:23.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.747" endtime="20201030 18:28:23.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.742" endtime="20201030 18:28:23.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.165" level="INFO">${RESULT} = [{'diff': 4.8889000000003346e-05}, {'diff': 4.9153000000003166e-05}, {'diff': 4.8473000000000266e-05}, {'diff': 4.909699999999795e-05}, {'diff': 4.913899999999666e-05}, {'diff': 4.886099999999727e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:23.155" endtime="20201030 18:28:23.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:23.176" level="INFO">${ACCURACY} = {'diff': [4.8889000000003346e-05, 4.9153000000003166e-05, 4.8473000000000266e-05, 4.909699999999795e-05, 4.913899999999666e-05, 4.886099999999727e-05, 4.844400000000165e-05, 4.881999999999803e-05, 4.8...</msg>
<status status="PASS" starttime="20201030 18:28:23.167" endtime="20201030 18:28:23.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.187" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 18:28:23.185" endtime="20201030 18:28:23.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.192" level="INFO">VALUE: [4.8889000000003346e-05, 4.9153000000003166e-05, 4.8473000000000266e-05, 4.909699999999795e-05, 4.913899999999666e-05, 4.886099999999727e-05, 4.844400000000165e-05, 4.881999999999803e-05, 4.85139999999995e-05, 4.858400000000429e-05, 4.876399999999975e-05, 4.8375000000003276e-05, 4.859699999999745e-05, 4.875000000000018e-05, 4.9014e-05, 4.8957999999994783e-05, 4.8415999999995574e-05, 4.85139999999995e-05, 4.9167000000002736e-05, 4.909699999999795e-05, 4.876399999999975e-05, 4.906899999999881e-05, 4.881999999999803e-05, 4.926400000000025e-05, 4.88469999999977e-05, 4.897199999999435e-05, 4.897200000000129e-05, 4.911099999999752e-05, 4.8679999999995394e-05, 4.8987000000000336e-05, 4.868099999999487e-05, 4.840299999999548e-05, 4.9014e-05, 4.9125000000004027e-05, 4.926400000000025e-05, 4.855499999999874e-05, 4.91669999999958e-05, 4.909800000000436e-05, 4.8931000000002056e-05, 4.902800000000651e-05, 4.8653000000002666e-05, 4.868000000000233e-05, 4.909800000000436e-05, 4.898600000000086e-05, 4.880499999999899e-05, 4.9125000000004027e-05, 4.8611000000003957e-05, 4.877799999999932e-05, 4.905500000000618e-05, 4.929099999999992e-05]</msg>
<status status="PASS" starttime="20201030 18:28:23.189" endtime="20201030 18:28:23.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.178" endtime="20201030 18:28:23.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.205" endtime="20201030 18:28:23.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.201" endtime="20201030 18:28:23.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.198" endtime="20201030 18:28:23.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.684" endtime="20201030 18:28:23.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.683" endtime="20201030 18:28:23.230"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.253" endtime="20201030 18:28:23.272"></status>
</kw>
<msg timestamp="20201030 18:28:23.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.250" endtime="20201030 18:28:23.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.276" endtime="20201030 18:28:23.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.284" endtime="20201030 18:28:23.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.243" endtime="20201030 18:28:23.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.237" endtime="20201030 18:28:23.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.308" endtime="20201030 18:28:23.659"></status>
</kw>
<msg timestamp="20201030 18:28:23.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040034097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04008425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:23.305" endtime="20201030 18:28:23.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040034097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04008425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:23.668" endtime="20201030 18:28:23.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.687" endtime="20201030 18:28:23.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.298" endtime="20201030 18:28:23.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.293" endtime="20201030 18:28:23.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.704" level="INFO">${RESULT} = [{'diff': 5.0153000000004166e-05}, {'diff': 4.991600000000401e-05}, {'diff': 4.959699999999845e-05}, {'diff': 4.993099999999612e-05}, {'diff': 5.006999999999928e-05}, {'diff': 5.011100000000546e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:23.696" endtime="20201030 18:28:23.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:23.716" level="INFO">${ACCURACY} = {'diff': [5.0153000000004166e-05, 4.991600000000401e-05, 4.959699999999845e-05, 4.993099999999612e-05, 5.006999999999928e-05, 5.011100000000546e-05, 5.027800000000082e-05, 5.0165999999997324e-05, 4.98...</msg>
<status status="PASS" starttime="20201030 18:28:23.707" endtime="20201030 18:28:23.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.727" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 18:28:23.724" endtime="20201030 18:28:23.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.732" level="INFO">VALUE: [5.0153000000004166e-05, 4.991600000000401e-05, 4.959699999999845e-05, 4.993099999999612e-05, 5.006999999999928e-05, 5.011100000000546e-05, 5.027800000000082e-05, 5.0165999999997324e-05, 4.987499999999784e-05, 5.0235999999995173e-05, 4.938899999999691e-05, 4.9637999999997684e-05, 4.963899999999716e-05, 5.027800000000082e-05, 4.997200000000229e-05, 4.936200000000418e-05, 4.955499999999974e-05, 4.9651999999997254e-05, 5.0139000000004597e-05, 4.9903000000003916e-05, 4.934800000000461e-05, 5.0179999999996894e-05, 5.0193999999996464e-05, 4.9915999999997074e-05, 4.9887999999997934e-05, 5.027800000000082e-05, 5.011199999999799e-05, 4.963899999999716e-05, 5.0209000000002446e-05, 4.950000000000093e-05, 5.026400000000125e-05, 4.995800000000272e-05, 5.009700000000589e-05, 5.020899999999551e-05, 5.029100000000092e-05, 5.01669999999968e-05, 4.938899999999691e-05, 5.03339999999991e-05, 5.0165999999997324e-05, 4.997200000000229e-05, 5.0014000000001e-05, 4.955499999999974e-05, 4.983299999999913e-05, 4.940299999999648e-05, 4.9709000000001946e-05, 4.9957999999995784e-05, 4.972299999999458e-05, 4.9471999999994853e-05, 4.936099999999777e-05, 4.9473000000001266e-05]</msg>
<status status="PASS" starttime="20201030 18:28:23.729" endtime="20201030 18:28:23.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.717" endtime="20201030 18:28:23.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.745" endtime="20201030 18:28:23.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.740" endtime="20201030 18:28:23.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.738" endtime="20201030 18:28:23.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.233" endtime="20201030 18:28:23.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.231" endtime="20201030 18:28:23.770"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.793" endtime="20201030 18:28:23.812"></status>
</kw>
<msg timestamp="20201030 18:28:23.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.790" endtime="20201030 18:28:23.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.816" endtime="20201030 18:28:23.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.822" endtime="20201030 18:28:23.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.782" endtime="20201030 18:28:23.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.776" endtime="20201030 18:28:23.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.845" endtime="20201030 18:28:24.198"></status>
</kw>
<msg timestamp="20201030 18:28:24.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040086917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040138194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.842" endtime="20201030 18:28:24.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040086917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040138194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.207" endtime="20201030 18:28:24.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.226" endtime="20201030 18:28:24.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.835" endtime="20201030 18:28:24.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.830" endtime="20201030 18:28:24.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:24.243" level="INFO">${RESULT} = [{'diff': 5.127700000000235e-05}, {'diff': 5.0667000000004236e-05}, {'diff': 5.115200000000569e-05}, {'diff': 5.041699999999705e-05}, {'diff': 5.126400000000225e-05}, {'diff': 5.1207999999997034e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:24.235" endtime="20201030 18:28:24.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:24.253" level="INFO">${ACCURACY} = {'diff': [5.127700000000235e-05, 5.0667000000004236e-05, 5.115200000000569e-05, 5.041699999999705e-05, 5.126400000000225e-05, 5.1207999999997034e-05, 5.081900000000056e-05, 5.129199999999445e-05, 5.04...</msg>
<status status="PASS" starttime="20201030 18:28:24.245" endtime="20201030 18:28:24.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.264" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 18:28:24.262" endtime="20201030 18:28:24.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.269" level="INFO">VALUE: [5.127700000000235e-05, 5.0667000000004236e-05, 5.115200000000569e-05, 5.041699999999705e-05, 5.126400000000225e-05, 5.1207999999997034e-05, 5.081900000000056e-05, 5.129199999999445e-05, 5.0443999999996714e-05, 5.076400000000175e-05, 5.077700000000185e-05, 5.095800000000372e-05, 5.045800000000322e-05, 5.0709000000002946e-05, 5.127699999999541e-05, 5.126400000000225e-05, 5.1014000000002e-05, 5.112500000000603e-05, 5.094400000000415e-05, 5.090299999999798e-05, 5.100000000000243e-05, 5.131999999999359e-05, 5.088899999999841e-05, 5.133300000000063e-05, 5.095800000000372e-05, 5.0445000000003126e-05, 5.043000000000408e-05, 5.132000000000053e-05, 5.062499999999859e-05, 5.079199999999395e-05, 5.108300000000038e-05, 5.054100000000117e-05, 5.044499999999619e-05, 5.101300000000253e-05, 5.112499999999909e-05, 5.118000000000483e-05, 5.108399999999985e-05, 5.13470000000002e-05, 5.080600000000046e-05, 5.1181000000004306e-05, 5.129200000000139e-05, 5.037500000000528e-05, 5.113899999999866e-05, 5.1179999999997894e-05, 5.059799999999892e-05, 5.047299999999533e-05, 5.1209000000003446e-05, 5.06940000000039e-05, 5.1223000000003016e-05, 5.1221999999996604e-05]</msg>
<status status="PASS" starttime="20201030 18:28:24.266" endtime="20201030 18:28:24.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.255" endtime="20201030 18:28:24.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.286" endtime="20201030 18:28:24.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.282" endtime="20201030 18:28:24.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.279" endtime="20201030 18:28:24.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.772" endtime="20201030 18:28:24.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.771" endtime="20201030 18:28:24.311"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.334" endtime="20201030 18:28:24.353"></status>
</kw>
<msg timestamp="20201030 18:28:24.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.330" endtime="20201030 18:28:24.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.356" endtime="20201030 18:28:24.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.363" endtime="20201030 18:28:24.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.323" endtime="20201030 18:28:24.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.317" endtime="20201030 18:28:24.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.386" endtime="20201030 18:28:24.726"></status>
</kw>
<msg timestamp="20201030 18:28:24.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041268458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041320167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.383" endtime="20201030 18:28:24.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041268458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041320167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.736" endtime="20201030 18:28:24.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.755" endtime="20201030 18:28:24.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.376" endtime="20201030 18:28:24.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.371" endtime="20201030 18:28:24.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:24.772" level="INFO">${RESULT} = [{'diff': 5.170899999999701e-05}, {'diff': 5.208300000000138e-05}, {'diff': 5.147200000000379e-05}, {'diff': 5.211099999999358e-05}, {'diff': 5.158400000000035e-05}, {'diff': 5.1999999999996493e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:24.763" endtime="20201030 18:28:24.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:24.781" level="INFO">${ACCURACY} = {'diff': [5.170899999999701e-05, 5.208300000000138e-05, 5.147200000000379e-05, 5.211099999999358e-05, 5.158400000000035e-05, 5.1999999999996493e-05, 5.180599999999452e-05, 5.180500000000199e-05, 5.141...</msg>
<status status="PASS" starttime="20201030 18:28:24.774" endtime="20201030 18:28:24.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.792" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 18:28:24.790" endtime="20201030 18:28:24.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.798" level="INFO">VALUE: [5.170899999999701e-05, 5.208300000000138e-05, 5.147200000000379e-05, 5.211099999999358e-05, 5.158400000000035e-05, 5.1999999999996493e-05, 5.180599999999452e-05, 5.180500000000199e-05, 5.1417000000004986e-05, 5.138899999999891e-05, 5.1431000000004556e-05, 5.138900000000585e-05, 5.177699999999591e-05, 5.206900000000181e-05, 5.223600000000411e-05, 5.181899999999462e-05, 5.1693999999997964e-05, 5.154200000000164e-05, 5.187499999999984e-05, 5.209700000000095e-05, 5.205500000000224e-05, 5.229199999999545e-05, 5.2138000000000184e-05, 5.223600000000411e-05, 5.137499999999934e-05, 5.1443999999997714e-05, 5.229200000000239e-05, 5.226299999999684e-05, 5.213899999999966e-05, 5.211199999999999e-05, 5.16669999999983e-05, 5.165299999999873e-05, 5.18470000000007e-05, 5.1985999999996924e-05, 5.2221999999997604e-05, 5.157000000000078e-05, 5.184699999999376e-05, 5.140299999999848e-05, 5.233300000000163e-05, 5.195800000000472e-05, 5.172200000000404e-05, 5.1915999999999074e-05, 5.147200000000379e-05, 5.230500000000249e-05, 5.205600000000171e-05, 5.1957999999997784e-05, 5.2221999999997604e-05, 5.2167000000005737e-05, 5.165299999999873e-05, 5.234800000000067e-05]</msg>
<status status="PASS" starttime="20201030 18:28:24.795" endtime="20201030 18:28:24.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.783" endtime="20201030 18:28:24.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.812" endtime="20201030 18:28:24.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.806" endtime="20201030 18:28:24.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.803" endtime="20201030 18:28:24.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.313" endtime="20201030 18:28:24.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.312" endtime="20201030 18:28:24.837"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.860" endtime="20201030 18:28:24.878"></status>
</kw>
<msg timestamp="20201030 18:28:24.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.857" endtime="20201030 18:28:24.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.881" endtime="20201030 18:28:24.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.887" endtime="20201030 18:28:24.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.849" endtime="20201030 18:28:24.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.843" endtime="20201030 18:28:24.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.911" endtime="20201030 18:28:25.248"></status>
</kw>
<msg timestamp="20201030 18:28:25.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039771111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039824306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.908" endtime="20201030 18:28:25.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039771111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039824306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.257" endtime="20201030 18:28:25.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.276" endtime="20201030 18:28:25.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.900" endtime="20201030 18:28:25.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.896" endtime="20201030 18:28:25.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.293" level="INFO">${RESULT} = [{'diff': 5.319499999999894e-05}, {'diff': 5.30419999999962e-05}, {'diff': 5.257000000000178e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.258299999999494e-05}, {'diff': 5.302800000000357e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:25.284" endtime="20201030 18:28:25.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:25.304" level="INFO">${ACCURACY} = {'diff': [5.319499999999894e-05, 5.30419999999962e-05, 5.257000000000178e-05, 5.290299999999998e-05, 5.258299999999494e-05, 5.302800000000357e-05, 5.312500000000109e-05, 5.2929999999999644e-05, 5.2526...</msg>
<status status="PASS" starttime="20201030 18:28:25.295" endtime="20201030 18:28:25.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.315" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 18:28:25.313" endtime="20201030 18:28:25.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.320" level="INFO">VALUE: [5.319499999999894e-05, 5.30419999999962e-05, 5.257000000000178e-05, 5.290299999999998e-05, 5.258299999999494e-05, 5.302800000000357e-05, 5.312500000000109e-05, 5.2929999999999644e-05, 5.252699999999666e-05, 5.305600000000271e-05, 5.306899999999587e-05, 5.302799999999663e-05, 5.337500000000134e-05, 5.331900000000306e-05, 5.288900000000041e-05, 5.3277999999996883e-05, 5.2959000000005196e-05, 5.2999999999997494e-05, 5.257000000000178e-05, 5.29869999999974e-05, 5.3221999999998604e-05, 5.323600000000511e-05, 5.28340000000016e-05, 5.273600000000461e-05, 5.311099999999458e-05, 5.283300000000213e-05, 5.315300000000023e-05, 5.2485999999997424e-05, 5.259700000000145e-05, 5.2916000000000074e-05, 5.240299999999948e-05, 5.293099999999912e-05, 5.2945000000005626e-05, 5.308399999999491e-05, 5.287500000000084e-05, 5.25140000000035e-05, 5.290299999999998e-05, 5.240299999999948e-05, 5.244499999999819e-05, 5.309800000000142e-05, 5.2721999999998104e-05, 5.315300000000023e-05, 5.3179999999999894e-05, 5.322200000000554e-05, 5.269499999999844e-05, 5.327800000000382e-05, 5.287500000000084e-05, 5.2985999999997924e-05, 5.309699999999501e-05, 5.312500000000109e-05]</msg>
<status status="PASS" starttime="20201030 18:28:25.317" endtime="20201030 18:28:25.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.306" endtime="20201030 18:28:25.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.333" endtime="20201030 18:28:25.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.329" endtime="20201030 18:28:25.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.326" endtime="20201030 18:28:25.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.839" endtime="20201030 18:28:25.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.838" endtime="20201030 18:28:25.358"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.381" endtime="20201030 18:28:25.399"></status>
</kw>
<msg timestamp="20201030 18:28:25.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.378" endtime="20201030 18:28:25.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.403" endtime="20201030 18:28:25.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.409" endtime="20201030 18:28:25.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.371" endtime="20201030 18:28:25.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.365" endtime="20201030 18:28:25.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.432" endtime="20201030 18:28:25.771"></status>
</kw>
<msg timestamp="20201030 18:28:25.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039628861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039683083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.429" endtime="20201030 18:28:25.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039628861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039683083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.780" endtime="20201030 18:28:25.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.799" endtime="20201030 18:28:25.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.422" endtime="20201030 18:28:25.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.417" endtime="20201030 18:28:25.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.816" level="INFO">${RESULT} = [{'diff': 5.4221999999999604e-05}, {'diff': 5.365299999999379e-05}, {'diff': 5.362500000000159e-05}, {'diff': 5.411099999999558e-05}, {'diff': 5.393100000000012e-05}, {'diff': 5.4249999999998744e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:25.807" endtime="20201030 18:28:25.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:25.827" level="INFO">${ACCURACY} = {'diff': [5.4221999999999604e-05, 5.365299999999379e-05, 5.362500000000159e-05, 5.411099999999558e-05, 5.393100000000012e-05, 5.4249999999998744e-05, 5.3735999999998674e-05, 5.3388000000001434e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:28:25.818" endtime="20201030 18:28:25.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.838" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 18:28:25.836" endtime="20201030 18:28:25.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.844" level="INFO">VALUE: [5.4221999999999604e-05, 5.365299999999379e-05, 5.362500000000159e-05, 5.411099999999558e-05, 5.393100000000012e-05, 5.4249999999998744e-05, 5.3735999999998674e-05, 5.3388000000001434e-05, 5.419499999999994e-05, 5.391700000000055e-05, 5.3693999999999964e-05, 5.368099999999987e-05, 5.3457999999999284e-05, 5.341700000000005e-05, 5.4249999999998744e-05, 5.3999999999998494e-05, 5.377800000000432e-05, 5.3944000000000214e-05, 5.422200000000654e-05, 5.4014000000005e-05, 5.3999999999998494e-05, 5.388899999999447e-05, 5.390300000000098e-05, 5.3499999999997994e-05, 5.41670000000008e-05, 5.43470000000032e-05, 5.3430000000000144e-05, 5.36670000000003e-05, 5.429100000000492e-05, 5.393100000000012e-05, 5.369499999999944e-05, 5.3693999999999964e-05, 5.3957999999999784e-05, 5.354200000000364e-05, 5.3430000000000144e-05, 5.426400000000525e-05, 5.4166000000001324e-05, 5.365300000000073e-05, 5.413900000000166e-05, 5.3693999999999964e-05, 5.405599999999677e-05, 5.430599999999702e-05, 5.3916000000001074e-05, 5.3485999999998424e-05, 5.381900000000356e-05, 5.3499999999997994e-05, 5.341700000000005e-05, 5.429099999999798e-05, 5.412500000000209e-05, 5.427699999999841e-05]</msg>
<status status="PASS" starttime="20201030 18:28:25.841" endtime="20201030 18:28:25.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.829" endtime="20201030 18:28:25.847"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.857" endtime="20201030 18:28:25.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.852" endtime="20201030 18:28:25.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.850" endtime="20201030 18:28:25.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.361" endtime="20201030 18:28:25.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.359" endtime="20201030 18:28:25.882"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.905" endtime="20201030 18:28:25.923"></status>
</kw>
<msg timestamp="20201030 18:28:25.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.901" endtime="20201030 18:28:25.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.926" endtime="20201030 18:28:25.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.932" endtime="20201030 18:28:25.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.894" endtime="20201030 18:28:25.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.888" endtime="20201030 18:28:25.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.956" endtime="20201030 18:28:26.302"></status>
</kw>
<msg timestamp="20201030 18:28:26.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039832639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039887042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.952" endtime="20201030 18:28:26.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039832639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039887042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.312" endtime="20201030 18:28:26.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.330" endtime="20201030 18:28:26.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.945" endtime="20201030 18:28:26.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.940" endtime="20201030 18:28:26.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:26.348" level="INFO">${RESULT} = [{'diff': 5.440299999999454e-05}, {'diff': 5.4485999999999424e-05}, {'diff': 5.4458000000000284e-05}, {'diff': 5.445899999999976e-05}, {'diff': 5.4999999999999494e-05}, {'diff': 5.51670000000018e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:26.339" endtime="20201030 18:28:26.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:26.357" level="INFO">${ACCURACY} = {'diff': [5.440299999999454e-05, 5.4485999999999424e-05, 5.4458000000000284e-05, 5.445899999999976e-05, 5.4999999999999494e-05, 5.51670000000018e-05, 5.459700000000345e-05, 5.5013999999999064e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 18:28:26.350" endtime="20201030 18:28:26.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.370" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 18:28:26.367" endtime="20201030 18:28:26.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.376" level="INFO">VALUE: [5.440299999999454e-05, 5.4485999999999424e-05, 5.4458000000000284e-05, 5.445899999999976e-05, 5.4999999999999494e-05, 5.51670000000018e-05, 5.459700000000345e-05, 5.5013999999999064e-05, 5.509799999999648e-05, 5.4972000000000354e-05, 5.465300000000173e-05, 5.4651999999995315e-05, 5.454200000000464e-05, 5.463900000000216e-05, 5.456899999999737e-05, 5.493099999999418e-05, 5.4749999999999244e-05, 5.4958000000000784e-05, 5.511199999999605e-05, 5.483300000000413e-05, 5.486099999999633e-05, 5.480499999999805e-05, 5.4957999999993845e-05, 5.445899999999976e-05, 5.493099999999418e-05, 5.479200000000489e-05, 5.4680000000001394e-05, 5.4513999999998564e-05, 5.4527999999998134e-05, 5.508399999999691e-05, 5.481900000000456e-05, 5.491700000000155e-05, 5.494500000000069e-05, 5.512499999999615e-05, 5.494500000000069e-05, 5.43749999999954e-05, 5.457000000000378e-05, 5.468100000000087e-05, 5.466699999999436e-05, 5.438899999999497e-05, 5.511100000000352e-05, 5.518100000000137e-05, 5.46670000000013e-05, 5.519500000000094e-05, 5.4972000000000354e-05, 5.4513999999998564e-05, 5.4708000000000534e-05, 5.5305999999998023e-05, 5.477699999999891e-05, 5.4777999999998384e-05]</msg>
<status status="PASS" starttime="20201030 18:28:26.372" endtime="20201030 18:28:26.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.359" endtime="20201030 18:28:26.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:26.392" endtime="20201030 18:28:26.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.386" endtime="20201030 18:28:26.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.383" endtime="20201030 18:28:26.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.884" endtime="20201030 18:28:26.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.883" endtime="20201030 18:28:26.417"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.440" endtime="20201030 18:28:26.460"></status>
</kw>
<msg timestamp="20201030 18:28:26.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.437" endtime="20201030 18:28:26.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.463" endtime="20201030 18:28:26.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.470" endtime="20201030 18:28:26.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.430" endtime="20201030 18:28:26.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.424" endtime="20201030 18:28:26.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.493" endtime="20201030 18:28:26.837"></status>
</kw>
<msg timestamp="20201030 18:28:26.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041586292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041642611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.490" endtime="20201030 18:28:26.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041586292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041642611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.846" endtime="20201030 18:28:26.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.865" endtime="20201030 18:28:26.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.482" endtime="20201030 18:28:26.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.478" endtime="20201030 18:28:26.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:26.883" level="INFO">${RESULT} = [{'diff': 5.631900000000606e-05}, {'diff': 5.609700000000495e-05}, {'diff': 5.588900000000341e-05}, {'diff': 5.556999999999784e-05}, {'diff': 5.5457999999994345e-05}, {'diff': 5.6319999999998593e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:26.874" endtime="20201030 18:28:26.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:26.892" level="INFO">${ACCURACY} = {'diff': [5.631900000000606e-05, 5.609700000000495e-05, 5.588900000000341e-05, 5.556999999999784e-05, 5.5457999999994345e-05, 5.6319999999998593e-05, 5.633300000000563e-05, 5.591700000000255e-05, 5.54...</msg>
<status status="PASS" starttime="20201030 18:28:26.885" endtime="20201030 18:28:26.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.905" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 18:28:26.902" endtime="20201030 18:28:26.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.911" level="INFO">VALUE: [5.631900000000606e-05, 5.609700000000495e-05, 5.588900000000341e-05, 5.556999999999784e-05, 5.5457999999994345e-05, 5.6319999999998593e-05, 5.633300000000563e-05, 5.591700000000255e-05, 5.541700000000205e-05, 5.53749999999964e-05, 5.5430000000002144e-05, 5.536099999999683e-05, 5.580499999999905e-05, 5.5972000000001354e-05, 5.56670000000023e-05, 5.634799999999773e-05, 5.552699999999966e-05, 5.558399999999741e-05, 5.5986000000000924e-05, 5.563900000000316e-05, 5.5901999999996566e-05, 5.534699999999726e-05, 5.611100000000452e-05, 5.6000000000000494e-05, 5.580499999999905e-05, 5.5986000000000924e-05, 5.5694000000001964e-05, 5.5930000000002644e-05, 5.586099999999733e-05, 5.580499999999905e-05, 5.5499999999999994e-05, 5.6250000000000744e-05, 5.577699999999991e-05, 5.583299999999819e-05, 5.6305999999999023e-05, 5.612499999999715e-05, 5.606899999999887e-05, 5.552800000000607e-05, 5.6041999999999204e-05, 5.538900000000291e-05, 5.6180000000002894e-05, 5.609700000000495e-05, 5.587500000000384e-05, 5.53749999999964e-05, 5.5958000000001784e-05, 5.584699999999776e-05, 5.5887999999996996e-05, 5.5541999999998704e-05, 5.6180000000002894e-05, 5.593099999999518e-05]</msg>
<status status="PASS" starttime="20201030 18:28:26.907" endtime="20201030 18:28:26.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.894" endtime="20201030 18:28:26.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:26.927" endtime="20201030 18:28:26.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.920" endtime="20201030 18:28:26.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.917" endtime="20201030 18:28:26.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.419" endtime="20201030 18:28:26.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.418" endtime="20201030 18:28:26.952"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.975" endtime="20201030 18:28:26.994"></status>
</kw>
<msg timestamp="20201030 18:28:26.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.972" endtime="20201030 18:28:26.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.998" endtime="20201030 18:28:27.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.005" endtime="20201030 18:28:27.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.964" endtime="20201030 18:28:27.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.959" endtime="20201030 18:28:27.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.028" endtime="20201030 18:28:27.380"></status>
</kw>
<msg timestamp="20201030 18:28:27.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039886347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039942903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.025" endtime="20201030 18:28:27.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039886347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039942903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.389" endtime="20201030 18:28:27.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.408" endtime="20201030 18:28:27.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.017" endtime="20201030 18:28:27.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.013" endtime="20201030 18:28:27.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.425" level="INFO">${RESULT} = [{'diff': 5.6555999999999274e-05}, {'diff': 5.659700000000545e-05}, {'diff': 5.6444000000002714e-05}, {'diff': 5.687500000000484e-05}, {'diff': 5.708299999999944e-05}, {'diff': 5.7306000000000024e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:27.416" endtime="20201030 18:28:27.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:27.436" level="INFO">${ACCURACY} = {'diff': [5.6555999999999274e-05, 5.659700000000545e-05, 5.6444000000002714e-05, 5.687500000000484e-05, 5.708299999999944e-05, 5.7306000000000024e-05, 5.634799999999773e-05, 5.709699999999901e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 18:28:27.427" endtime="20201030 18:28:27.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.447" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 18:28:27.445" endtime="20201030 18:28:27.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.452" level="INFO">VALUE: [5.6555999999999274e-05, 5.659700000000545e-05, 5.6444000000002714e-05, 5.687500000000484e-05, 5.708299999999944e-05, 5.7306000000000024e-05, 5.634799999999773e-05, 5.709699999999901e-05, 5.7264000000001314e-05, 5.6957999999995845e-05, 5.7194999999996e-05, 5.6429999999996205e-05, 5.676300000000134e-05, 5.7306000000000024e-05, 5.6500000000000994e-05, 5.712499999999815e-05, 5.694500000000269e-05, 5.6472000000001854e-05, 5.6679999999996455e-05, 5.7208000000003034e-05, 5.681899999999962e-05, 5.6764000000000814e-05, 5.694500000000269e-05, 5.7236000000002174e-05, 5.718100000000337e-05, 5.720900000000251e-05, 5.709699999999901e-05, 5.7222000000002604e-05, 5.663899999999722e-05, 5.7250000000001744e-05, 5.7264000000001314e-05, 5.6791999999999954e-05, 5.731900000000012e-05, 5.647299999999439e-05, 5.643099999999568e-05, 5.6764000000000814e-05, 5.6528000000000134e-05, 5.715299999999729e-05, 5.7292000000000454e-05, 5.68749999999979e-05, 5.636099999999783e-05, 5.693100000000312e-05, 5.6902000000004505e-05, 5.6500000000000994e-05, 5.697300000000183e-05, 5.712500000000509e-05, 5.7222000000002604e-05, 5.6514000000000564e-05, 5.636100000000477e-05, 5.688899999999747e-05]</msg>
<status status="PASS" starttime="20201030 18:28:27.449" endtime="20201030 18:28:27.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.438" endtime="20201030 18:28:27.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:27.465" endtime="20201030 18:28:27.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.461" endtime="20201030 18:28:27.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.458" endtime="20201030 18:28:27.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.954" endtime="20201030 18:28:27.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.953" endtime="20201030 18:28:27.490"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.513" endtime="20201030 18:28:27.533"></status>
</kw>
<msg timestamp="20201030 18:28:27.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.510" endtime="20201030 18:28:27.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.536" endtime="20201030 18:28:27.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.542" endtime="20201030 18:28:27.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.502" endtime="20201030 18:28:27.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.497" endtime="20201030 18:28:27.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.566" endtime="20201030 18:28:27.916"></status>
</kw>
<msg timestamp="20201030 18:28:27.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039939764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039997833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.562" endtime="20201030 18:28:27.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039939764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039997833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.926" endtime="20201030 18:28:27.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.945" endtime="20201030 18:28:27.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.555" endtime="20201030 18:28:27.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.551" endtime="20201030 18:28:27.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.962" level="INFO">${RESULT} = [{'diff': 5.806900000000087e-05}, {'diff': 5.812499999999915e-05}, {'diff': 5.813899999999872e-05}, {'diff': 5.8278000000001884e-05}, {'diff': 5.827700000000241e-05}, {'diff': 5.772299999999564e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:27.953" endtime="20201030 18:28:27.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:27.974" level="INFO">${ACCURACY} = {'diff': [5.806900000000087e-05, 5.812499999999915e-05, 5.813899999999872e-05, 5.8278000000001884e-05, 5.827700000000241e-05, 5.772299999999564e-05, 5.7971999999996415e-05, 5.7486000000002424e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 18:28:27.964" endtime="20201030 18:28:27.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.985" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 18:28:27.982" endtime="20201030 18:28:27.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.990" level="INFO">VALUE: [5.806900000000087e-05, 5.812499999999915e-05, 5.813899999999872e-05, 5.8278000000001884e-05, 5.827700000000241e-05, 5.772299999999564e-05, 5.7971999999996415e-05, 5.7486000000002424e-05, 5.7708000000003534e-05, 5.8014000000002064e-05, 5.7541999999993765e-05, 5.8292000000001454e-05, 5.812499999999915e-05, 5.7986000000002924e-05, 5.786099999999933e-05, 5.8235999999996235e-05, 5.7944000000004214e-05, 5.7971999999996415e-05, 5.768099999999693e-05, 5.7721999999996165e-05, 5.808300000000044e-05, 5.8292000000001454e-05, 5.808300000000044e-05, 5.833300000000069e-05, 5.8180000000004894e-05, 5.8320000000000594e-05, 5.8292000000001454e-05, 5.797300000000283e-05, 5.834700000000026e-05, 5.78749999999989e-05, 5.8097999999999483e-05, 5.762499999999865e-05, 5.8306000000001024e-05, 5.8221999999996665e-05, 5.7763999999994875e-05, 5.8250000000002744e-05, 5.841699999999811e-05, 5.819500000000394e-05, 5.819500000000394e-05, 5.7528000000001134e-05, 5.7500000000001994e-05, 5.7778000000001384e-05, 5.7429999999997206e-05, 5.783300000000019e-05, 5.7820000000000094e-05, 5.7972000000003354e-05, 5.7542000000000704e-05, 5.8014000000002064e-05, 5.790300000000498e-05, 5.7458000000003284e-05]</msg>
<status status="PASS" starttime="20201030 18:28:27.987" endtime="20201030 18:28:27.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.975" endtime="20201030 18:28:27.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.003" endtime="20201030 18:28:28.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.998" endtime="20201030 18:28:28.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.996" endtime="20201030 18:28:28.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.492" endtime="20201030 18:28:28.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.491" endtime="20201030 18:28:28.028"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.051" endtime="20201030 18:28:28.071"></status>
</kw>
<msg timestamp="20201030 18:28:28.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.048" endtime="20201030 18:28:28.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.074" endtime="20201030 18:28:28.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.080" endtime="20201030 18:28:28.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.040" endtime="20201030 18:28:28.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.035" endtime="20201030 18:28:28.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.104" endtime="20201030 18:28:28.456"></status>
</kw>
<msg timestamp="20201030 18:28:28.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039908153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039966625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.100" endtime="20201030 18:28:28.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039908153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039966625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.466" endtime="20201030 18:28:28.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.485" endtime="20201030 18:28:28.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.093" endtime="20201030 18:28:28.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.089" endtime="20201030 18:28:28.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.502" level="INFO">${RESULT} = [{'diff': 5.8471999999996915e-05}, {'diff': 5.86949999999975e-05}, {'diff': 5.838899999999897e-05}, {'diff': 5.8694000000004964e-05}, {'diff': 5.845899999999682e-05}, {'diff': 5.890299999999904e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:28.493" endtime="20201030 18:28:28.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:28.512" level="INFO">${ACCURACY} = {'diff': [5.8471999999996915e-05, 5.86949999999975e-05, 5.838899999999897e-05, 5.8694000000004964e-05, 5.845899999999682e-05, 5.890299999999904e-05, 5.862499999999965e-05, 5.913899999999972e-05, 5.920...</msg>
<status status="PASS" starttime="20201030 18:28:28.504" endtime="20201030 18:28:28.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.523" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 18:28:28.520" endtime="20201030 18:28:28.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.528" level="INFO">VALUE: [5.8471999999996915e-05, 5.86949999999975e-05, 5.838899999999897e-05, 5.8694000000004964e-05, 5.845899999999682e-05, 5.890299999999904e-05, 5.862499999999965e-05, 5.913899999999972e-05, 5.9207999999998095e-05, 5.886100000000033e-05, 5.940299999999954e-05, 5.8542000000001704e-05, 5.902699999999622e-05, 5.880500000000205e-05, 5.868099999999793e-05, 5.8722000000004104e-05, 5.840300000000548e-05, 5.844499999999725e-05, 5.8542000000001704e-05, 5.841699999999811e-05, 5.9221999999997665e-05, 5.8929999999998706e-05, 5.83749999999994e-05, 5.9362000000000303e-05, 5.90550000000023e-05, 5.8429999999998206e-05, 5.8999999999996555e-05, 5.934699999999432e-05, 5.863899999999922e-05, 5.936100000000083e-05, 5.8429999999998206e-05, 5.8792000000001954e-05, 5.8930000000005645e-05, 5.8999999999996555e-05, 5.895899999999732e-05, 5.9207999999998095e-05, 5.886100000000033e-05, 5.862499999999965e-05, 5.863899999999922e-05, 5.911100000000058e-05, 5.886100000000033e-05, 5.8679999999998456e-05, 5.8999999999996555e-05, 5.8651999999999316e-05, 5.8985999999996985e-05, 5.8735999999996735e-05, 5.8707999999997595e-05, 5.886100000000033e-05, 5.93750000000004e-05, 5.893099999999818e-05]</msg>
<status status="PASS" starttime="20201030 18:28:28.525" endtime="20201030 18:28:28.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.513" endtime="20201030 18:28:28.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.541" endtime="20201030 18:28:28.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.536" endtime="20201030 18:28:28.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.534" endtime="20201030 18:28:28.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.030" endtime="20201030 18:28:28.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.029" endtime="20201030 18:28:28.566"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.589" endtime="20201030 18:28:28.609"></status>
</kw>
<msg timestamp="20201030 18:28:28.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.586" endtime="20201030 18:28:28.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.612" endtime="20201030 18:28:28.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.618" endtime="20201030 18:28:28.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.578" endtime="20201030 18:28:28.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.572" endtime="20201030 18:28:28.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.642" endtime="20201030 18:28:28.980"></status>
</kw>
<msg timestamp="20201030 18:28:28.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041398556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041458472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.639" endtime="20201030 18:28:28.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041398556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041458472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.990" endtime="20201030 18:28:29.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.009" endtime="20201030 18:28:29.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.631" endtime="20201030 18:28:29.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.627" endtime="20201030 18:28:29.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:29.026" level="INFO">${RESULT} = [{'diff': 5.9916000000000136e-05}, {'diff': 5.993099999999918e-05}, {'diff': 6.012500000000115e-05}, {'diff': 5.966699999999936e-05}, {'diff': 5.9652000000000316e-05}, {'diff': 5.941700000000605e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:29.017" endtime="20201030 18:28:29.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:29.036" level="INFO">${ACCURACY} = {'diff': [5.9916000000000136e-05, 5.993099999999918e-05, 6.012500000000115e-05, 5.966699999999936e-05, 5.9652000000000316e-05, 5.941700000000605e-05, 6.033300000000269e-05, 5.947299999999739e-05, 6.02...</msg>
<status status="PASS" starttime="20201030 18:28:29.028" endtime="20201030 18:28:29.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.046" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 18:28:29.044" endtime="20201030 18:28:29.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.052" level="INFO">VALUE: [5.9916000000000136e-05, 5.993099999999918e-05, 6.012500000000115e-05, 5.966699999999936e-05, 5.9652000000000316e-05, 5.941700000000605e-05, 6.033300000000269e-05, 5.947299999999739e-05, 6.0249999999997805e-05, 5.9971999999998415e-05, 6.033299999999575e-05, 5.940299999999954e-05, 6.0152000000000816e-05, 6.023699999999771e-05, 5.963900000000022e-05, 5.9707999999998596e-05, 6.0041999999996265e-05, 5.9458000000005284e-05, 5.9806000000002524e-05, 5.9443999999998776e-05, 5.9820000000002094e-05, 6.0292000000003454e-05, 5.9527999999996195e-05, 6.012500000000115e-05, 6.0013999999997125e-05, 5.97629999999974e-05, 5.959700000000151e-05, 5.9819999999995155e-05, 6.012500000000115e-05, 5.9985999999997985e-05, 5.9542000000002704e-05, 5.983300000000219e-05, 5.936100000000083e-05, 5.963900000000022e-05, 6.033300000000269e-05, 6.0250000000004744e-05, 5.9805999999995585e-05, 6.0263999999997375e-05, 5.994499999999875e-05, 6.0000000000004494e-05, 6.006900000000287e-05, 5.993099999999918e-05, 6.011100000000158e-05, 5.9778000000003384e-05, 5.977700000000391e-05, 5.994499999999875e-05, 6.0014000000004064e-05, 6.0000000000004494e-05, 6.020899999999857e-05, 6.0013999999997125e-05]</msg>
<status status="PASS" starttime="20201030 18:28:29.049" endtime="20201030 18:28:29.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.037" endtime="20201030 18:28:29.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:29.066" endtime="20201030 18:28:29.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.060" endtime="20201030 18:28:29.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.058" endtime="20201030 18:28:29.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.568" endtime="20201030 18:28:29.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.567" endtime="20201030 18:28:29.091"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.114" endtime="20201030 18:28:29.132"></status>
</kw>
<msg timestamp="20201030 18:28:29.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.111" endtime="20201030 18:28:29.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.136" endtime="20201030 18:28:29.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.142" endtime="20201030 18:28:29.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.103" endtime="20201030 18:28:29.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.097" endtime="20201030 18:28:29.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.165" endtime="20201030 18:28:29.505"></status>
</kw>
<msg timestamp="20201030 18:28:29.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039679972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039740486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.162" endtime="20201030 18:28:29.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039679972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039740486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.515" endtime="20201030 18:28:29.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.534" endtime="20201030 18:28:29.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.155" endtime="20201030 18:28:29.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.150" endtime="20201030 18:28:29.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:29.551" level="INFO">${RESULT} = [{'diff': 6.0513999999997625e-05}, {'diff': 6.0957999999999846e-05}, {'diff': 6.138799999999556e-05}, {'diff': 6.0930000000000706e-05}, {'diff': 6.116700000000086e-05}, {'diff': 6.10550000000043e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:29.542" endtime="20201030 18:28:29.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:29.562" level="INFO">${ACCURACY} = {'diff': [6.0513999999997625e-05, 6.0957999999999846e-05, 6.138799999999556e-05, 6.0930000000000706e-05, 6.116700000000086e-05, 6.10550000000043e-05, 6.12080000000001e-05, 6.130600000000402e-05, 6.102...</msg>
<status status="PASS" starttime="20201030 18:28:29.553" endtime="20201030 18:28:29.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.573" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 18:28:29.571" endtime="20201030 18:28:29.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.578" level="INFO">VALUE: [6.0513999999997625e-05, 6.0957999999999846e-05, 6.138799999999556e-05, 6.0930000000000706e-05, 6.116700000000086e-05, 6.10550000000043e-05, 6.12080000000001e-05, 6.130600000000402e-05, 6.1027999999997695e-05, 6.0971999999999416e-05, 6.130499999999761e-05, 6.0514000000004564e-05, 6.034700000000226e-05, 6.0694000000000026e-05, 6.108399999999597e-05, 6.131999999999665e-05, 6.129199999999752e-05, 6.0430000000000206e-05, 6.091700000000061e-05, 6.0556000000003274e-05, 6.043099999999968e-05, 6.0848000000002234e-05, 6.111099999999564e-05, 6.129199999999752e-05, 6.123699999999871e-05, 6.0541999999996765e-05, 6.0916000000001136e-05, 6.080499999999711e-05, 6.063900000000122e-05, 6.12499999999988e-05, 6.0735999999998735e-05, 6.094499999999975e-05, 6.083299999999625e-05, 6.038900000000097e-05, 6.130499999999761e-05, 6.109800000000248e-05, 6.0443999999999776e-05, 6.0680000000000456e-05, 6.0985999999998985e-05, 6.112500000000215e-05, 6.131999999999665e-05, 6.0735999999998735e-05, 6.06949999999995e-05, 6.123599999999924e-05, 6.0791999999997015e-05, 6.0721999999999166e-05, 6.045899999999882e-05, 6.0694000000000026e-05, 6.051299999999815e-05, 6.105600000000377e-05]</msg>
<status status="PASS" starttime="20201030 18:28:29.575" endtime="20201030 18:28:29.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.564" endtime="20201030 18:28:29.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:29.591" endtime="20201030 18:28:29.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.586" endtime="20201030 18:28:29.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.584" endtime="20201030 18:28:29.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.093" endtime="20201030 18:28:29.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.092" endtime="20201030 18:28:29.616"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.639" endtime="20201030 18:28:29.657"></status>
</kw>
<msg timestamp="20201030 18:28:29.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.636" endtime="20201030 18:28:29.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.661" endtime="20201030 18:28:29.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.667" endtime="20201030 18:28:29.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.628" endtime="20201030 18:28:29.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.623" endtime="20201030 18:28:29.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.691" endtime="20201030 18:28:30.029"></status>
</kw>
<msg timestamp="20201030 18:28:30.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039920208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039982375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.687" endtime="20201030 18:28:30.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039920208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039982375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.039" endtime="20201030 18:28:30.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.057" endtime="20201030 18:28:30.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.680" endtime="20201030 18:28:30.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.675" endtime="20201030 18:28:30.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:30.074" level="INFO">${RESULT} = [{'diff': 6.216700000000186e-05}, {'diff': 6.155499999999786e-05}, {'diff': 6.152800000000513e-05}, {'diff': 6.166600000000189e-05}, {'diff': 6.158400000000341e-05}, {'diff': 6.141600000000164e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:30.066" endtime="20201030 18:28:30.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:30.086" level="INFO">${ACCURACY} = {'diff': [6.216700000000186e-05, 6.155499999999786e-05, 6.152800000000513e-05, 6.166600000000189e-05, 6.158400000000341e-05, 6.141600000000164e-05, 6.170900000000007e-05, 6.208400000000391e-05, 6.1499...</msg>
<status status="PASS" starttime="20201030 18:28:30.077" endtime="20201030 18:28:30.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.097" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 18:28:30.094" endtime="20201030 18:28:30.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.102" level="INFO">VALUE: [6.216700000000186e-05, 6.155499999999786e-05, 6.152800000000513e-05, 6.166600000000189e-05, 6.158400000000341e-05, 6.141600000000164e-05, 6.170900000000007e-05, 6.208400000000391e-05, 6.149999999999906e-05, 6.194500000000075e-05, 6.176399999999888e-05, 6.199999999999956e-05, 6.223600000000024e-05, 6.220900000000057e-05, 6.179199999999802e-05, 6.152699999999872e-05, 6.223600000000024e-05, 6.213899999999578e-05, 6.234699999999732e-05, 6.194500000000075e-05, 6.162499999999571e-05, 6.161100000000308e-05, 6.226399999999938e-05, 6.147199999999992e-05, 6.230600000000502e-05, 6.15279999999982e-05, 6.140200000000207e-05, 6.213900000000272e-05, 6.229099999999904e-05, 6.213899999999578e-05, 6.192999999999477e-05, 6.201399999999913e-05, 6.209700000000401e-05, 6.20420000000052e-05, 6.172200000000017e-05, 6.155499999999786e-05, 6.183300000000419e-05, 6.213899999999578e-05, 6.218100000000143e-05, 6.147199999999992e-05, 6.168100000000093e-05, 6.188900000000247e-05, 6.215300000000229e-05, 6.163900000000222e-05, 6.197200000000042e-05, 6.147199999999992e-05, 6.183299999999725e-05, 6.222200000000067e-05, 6.223600000000024e-05, 6.191699999999467e-05]</msg>
<status status="PASS" starttime="20201030 18:28:30.099" endtime="20201030 18:28:30.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.088" endtime="20201030 18:28:30.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:30.115" endtime="20201030 18:28:30.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.110" endtime="20201030 18:28:30.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.108" endtime="20201030 18:28:30.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.618" endtime="20201030 18:28:30.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.617" endtime="20201030 18:28:30.140"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.163" endtime="20201030 18:28:30.181"></status>
</kw>
<msg timestamp="20201030 18:28:30.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.159" endtime="20201030 18:28:30.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.184" endtime="20201030 18:28:30.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.191" endtime="20201030 18:28:30.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.152" endtime="20201030 18:28:30.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.146" endtime="20201030 18:28:30.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.214" endtime="20201030 18:28:30.555"></status>
</kw>
<msg timestamp="20201030 18:28:30.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039890458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039953569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.211" endtime="20201030 18:28:30.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039890458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039953569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.565" endtime="20201030 18:28:30.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.584" endtime="20201030 18:28:30.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.204" endtime="20201030 18:28:30.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.199" endtime="20201030 18:28:30.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:30.601" level="INFO">${RESULT} = [{'diff': 6.311100000000458e-05}, {'diff': 6.250000000000006e-05}, {'diff': 6.309699999999807e-05}, {'diff': 6.331899999999918e-05}, {'diff': 6.268099999999499e-05}, {'diff': 6.317999999999602e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:30.592" endtime="20201030 18:28:30.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:30.611" level="INFO">${ACCURACY} = {'diff': [6.311100000000458e-05, 6.250000000000006e-05, 6.309699999999807e-05, 6.331899999999918e-05, 6.268099999999499e-05, 6.317999999999602e-05, 6.258300000000494e-05, 6.319400000000253e-05, 6.2611...</msg>
<status status="PASS" starttime="20201030 18:28:30.603" endtime="20201030 18:28:30.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.622" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 18:28:30.619" endtime="20201030 18:28:30.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.627" level="INFO">VALUE: [6.311100000000458e-05, 6.250000000000006e-05, 6.309699999999807e-05, 6.331899999999918e-05, 6.268099999999499e-05, 6.317999999999602e-05, 6.258300000000494e-05, 6.319400000000253e-05, 6.261100000000408e-05, 6.319499999999506e-05, 6.322200000000167e-05, 6.240200000000307e-05, 6.301400000000013e-05, 6.262499999999671e-05, 6.280499999999911e-05, 6.245900000000082e-05, 6.258399999999747e-05, 6.261100000000408e-05, 6.311099999999764e-05, 6.24159999999957e-05, 6.333399999999823e-05, 6.273600000000074e-05, 6.252699999999972e-05, 6.301299999999371e-05, 6.250000000000006e-05, 6.322200000000167e-05, 6.273600000000074e-05, 6.286100000000433e-05, 6.298600000000099e-05, 6.298600000000099e-05, 6.266699999999542e-05, 6.286100000000433e-05, 6.25279999999992e-05, 6.322200000000167e-05, 6.279099999999954e-05, 6.262500000000365e-05, 6.247200000000092e-05, 6.28750000000039e-05, 6.322200000000167e-05, 6.334699999999832e-05, 6.297199999999448e-05, 6.2582999999998e-05, 6.32500000000008e-05, 6.309700000000501e-05, 6.326400000000038e-05, 6.238900000000297e-05, 6.302700000000022e-05, 6.298600000000099e-05, 6.241600000000264e-05, 6.243100000000168e-05]</msg>
<status status="PASS" starttime="20201030 18:28:30.624" endtime="20201030 18:28:30.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.613" endtime="20201030 18:28:30.630"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:30.640" endtime="20201030 18:28:30.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.635" endtime="20201030 18:28:30.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.633" endtime="20201030 18:28:30.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.142" endtime="20201030 18:28:30.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.141" endtime="20201030 18:28:30.665"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.688" endtime="20201030 18:28:30.708"></status>
</kw>
<msg timestamp="20201030 18:28:30.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.685" endtime="20201030 18:28:30.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.711" endtime="20201030 18:28:30.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.718" endtime="20201030 18:28:30.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.677" endtime="20201030 18:28:30.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.672" endtime="20201030 18:28:30.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.741" endtime="20201030 18:28:31.079"></status>
</kw>
<msg timestamp="20201030 18:28:31.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041410403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041473806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.738" endtime="20201030 18:28:31.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041410403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041473806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.089" endtime="20201030 18:28:31.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.107" endtime="20201030 18:28:31.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.731" endtime="20201030 18:28:31.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.726" endtime="20201030 18:28:31.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:31.125" level="INFO">${RESULT} = [{'diff': 6.340300000000354e-05}, {'diff': 6.416700000000386e-05}, {'diff': 6.40280000000007e-05}, {'diff': 6.340300000000354e-05}, {'diff': 6.350000000000106e-05}, {'diff': 6.415299999999735e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:31.116" endtime="20201030 18:28:31.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:31.134" level="INFO">${ACCURACY} = {'diff': [6.340300000000354e-05, 6.416700000000386e-05, 6.40280000000007e-05, 6.340300000000354e-05, 6.350000000000106e-05, 6.415299999999735e-05, 6.398600000000199e-05, 6.344499999999531e-05, 6.37219...</msg>
<status status="PASS" starttime="20201030 18:28:31.127" endtime="20201030 18:28:31.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.145" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 18:28:31.143" endtime="20201030 18:28:31.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.151" level="INFO">VALUE: [6.340300000000354e-05, 6.416700000000386e-05, 6.40280000000007e-05, 6.340300000000354e-05, 6.350000000000106e-05, 6.415299999999735e-05, 6.398600000000199e-05, 6.344499999999531e-05, 6.372199999999523e-05, 6.40829999999995e-05, 6.416699999999692e-05, 6.390200000000457e-05, 6.387499999999796e-05, 6.356899999999943e-05, 6.40280000000007e-05, 6.361199999999761e-05, 6.398600000000199e-05, 6.369499999999556e-05, 6.370799999999566e-05, 6.426400000000138e-05, 6.361099999999814e-05, 6.383300000000619e-05, 6.422199999999573e-05, 6.40699999999994e-05, 6.372200000000217e-05, 6.400000000000156e-05, 6.387499999999796e-05, 6.40280000000007e-05, 6.431900000000018e-05, 6.349999999999412e-05, 6.344500000000225e-05, 6.415199999999788e-05, 6.358400000000541e-05, 6.348600000000149e-05, 6.384699999999882e-05, 6.3582999999999e-05, 6.347299999999445e-05, 6.395799999999591e-05, 6.361100000000508e-05, 6.409800000000548e-05, 6.401400000000113e-05, 6.35280000000002e-05, 6.395800000000285e-05, 6.338799999999756e-05, 6.344499999999531e-05, 6.426400000000138e-05, 6.356899999999943e-05, 6.342999999999627e-05, 6.431900000000018e-05, 6.415199999999788e-05]</msg>
<status status="PASS" starttime="20201030 18:28:31.148" endtime="20201030 18:28:31.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.136" endtime="20201030 18:28:31.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.169" endtime="20201030 18:28:31.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.159" endtime="20201030 18:28:31.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.156" endtime="20201030 18:28:31.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.667" endtime="20201030 18:28:31.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.666" endtime="20201030 18:28:31.194"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.217" endtime="20201030 18:28:31.235"></status>
</kw>
<msg timestamp="20201030 18:28:31.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.214" endtime="20201030 18:28:31.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.239" endtime="20201030 18:28:31.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.245" endtime="20201030 18:28:31.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.206" endtime="20201030 18:28:31.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.201" endtime="20201030 18:28:31.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.269" endtime="20201030 18:28:31.608"></status>
</kw>
<msg timestamp="20201030 18:28:31.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039733833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039798514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.265" endtime="20201030 18:28:31.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039733833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039798514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.617" endtime="20201030 18:28:31.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.636" endtime="20201030 18:28:31.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.258" endtime="20201030 18:28:31.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.253" endtime="20201030 18:28:31.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:31.654" level="INFO">${RESULT} = [{'diff': 6.468099999999699e-05}, {'diff': 6.516600000000539e-05}, {'diff': 6.506900000000093e-05}, {'diff': 6.52359999999963e-05}, {'diff': 6.512499999999921e-05}, {'diff': 6.437499999999846e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:31.645" endtime="20201030 18:28:31.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:31.664" level="INFO">${ACCURACY} = {'diff': [6.468099999999699e-05, 6.516600000000539e-05, 6.506900000000093e-05, 6.52359999999963e-05, 6.512499999999921e-05, 6.437499999999846e-05, 6.495799999999691e-05, 6.451399999999469e-05, 6.47360...</msg>
<status status="PASS" starttime="20201030 18:28:31.656" endtime="20201030 18:28:31.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.675" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 18:28:31.673" endtime="20201030 18:28:31.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.681" level="INFO">VALUE: [6.468099999999699e-05, 6.516600000000539e-05, 6.506900000000093e-05, 6.52359999999963e-05, 6.512499999999921e-05, 6.437499999999846e-05, 6.495799999999691e-05, 6.451399999999469e-05, 6.473600000000274e-05, 6.529200000000152e-05, 6.513899999999878e-05, 6.486099999999939e-05, 6.4583e-05, 6.480600000000059e-05, 6.523600000000324e-05, 6.512500000000615e-05, 6.476399999999494e-05, 6.505500000000136e-05, 6.529200000000152e-05, 6.480500000000111e-05, 6.436099999999889e-05, 6.476400000000188e-05, 6.481900000000068e-05, 6.522199999999673e-05, 6.441699999999717e-05, 6.512499999999921e-05, 6.511099999999964e-05, 6.529199999999458e-05, 6.445799999999641e-05, 6.502799999999476e-05, 6.487499999999896e-05, 6.45280000000012e-05, 6.459699999999957e-05, 6.461099999999914e-05, 6.469400000000403e-05, 6.463899999999828e-05, 6.50280000000017e-05, 6.447200000000292e-05, 6.451400000000163e-05, 6.477800000000145e-05, 6.505500000000136e-05, 6.443099999999674e-05, 6.488899999999853e-05, 6.505600000000084e-05, 6.497200000000342e-05, 6.526399999999544e-05, 6.515299999999835e-05, 6.491699999999767e-05, 6.501399999999519e-05, 6.481900000000068e-05]</msg>
<status status="PASS" starttime="20201030 18:28:31.677" endtime="20201030 18:28:31.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.666" endtime="20201030 18:28:31.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.693" endtime="20201030 18:28:31.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.689" endtime="20201030 18:28:31.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.686" endtime="20201030 18:28:31.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.196" endtime="20201030 18:28:31.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.195" endtime="20201030 18:28:31.718"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.741" endtime="20201030 18:28:31.759"></status>
</kw>
<msg timestamp="20201030 18:28:31.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.738" endtime="20201030 18:28:31.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.763" endtime="20201030 18:28:31.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.769" endtime="20201030 18:28:31.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.730" endtime="20201030 18:28:31.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.725" endtime="20201030 18:28:31.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.793" endtime="20201030 18:28:32.131"></status>
</kw>
<msg timestamp="20201030 18:28:32.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039703694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039769597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.789" endtime="20201030 18:28:32.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039703694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039769597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.141" endtime="20201030 18:28:32.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.160" endtime="20201030 18:28:32.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.782" endtime="20201030 18:28:32.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.777" endtime="20201030 18:28:32.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:32.177" level="INFO">${RESULT} = [{'diff': 6.59029999999991e-05}, {'diff': 6.613899999999978e-05}, {'diff': 6.629200000000252e-05}, {'diff': 6.547199999999698e-05}, {'diff': 6.559700000000057e-05}, {'diff': 6.60830000000015e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:32.168" endtime="20201030 18:28:32.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:32.188" level="INFO">${ACCURACY} = {'diff': [6.59029999999991e-05, 6.613899999999978e-05, 6.629200000000252e-05, 6.547199999999698e-05, 6.559700000000057e-05, 6.60830000000015e-05, 6.57080000000046e-05, 6.622199999999773e-05, 6.6221999...</msg>
<status status="PASS" starttime="20201030 18:28:32.179" endtime="20201030 18:28:32.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.199" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 18:28:32.197" endtime="20201030 18:28:32.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.205" level="INFO">VALUE: [6.59029999999991e-05, 6.613899999999978e-05, 6.629200000000252e-05, 6.547199999999698e-05, 6.559700000000057e-05, 6.60830000000015e-05, 6.57080000000046e-05, 6.622199999999773e-05, 6.622199999999773e-05, 6.632000000000166e-05, 6.602799999999576e-05, 6.598599999999705e-05, 6.582000000000116e-05, 6.605600000000184e-05, 6.590200000000657e-05, 6.636100000000089e-05, 6.551399999999569e-05, 6.597199999999748e-05, 6.626299999999696e-05, 6.572199999999723e-05, 6.622199999999773e-05, 6.60830000000015e-05, 6.545900000000382e-05, 6.60700000000014e-05, 6.545800000000435e-05, 6.587499999999996e-05, 6.54159999999987e-05, 6.620799999999816e-05, 6.605500000000236e-05, 6.544400000000478e-05, 6.609699999999413e-05, 6.597199999999748e-05, 6.633400000000123e-05, 6.594400000000528e-05, 6.55700000000009e-05, 6.55700000000009e-05, 6.627699999999653e-05, 6.561100000000014e-05, 6.616700000000586e-05, 6.592999999999877e-05, 6.633300000000175e-05, 6.57080000000046e-05, 6.626400000000338e-05, 6.583400000000073e-05, 6.594499999999781e-05, 6.612500000000021e-05, 6.572199999999723e-05, 6.626299999999696e-05, 6.586100000000039e-05, 6.568099999999799e-05]</msg>
<status status="PASS" starttime="20201030 18:28:32.201" endtime="20201030 18:28:32.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.190" endtime="20201030 18:28:32.208"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:32.217" endtime="20201030 18:28:32.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.213" endtime="20201030 18:28:32.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.210" endtime="20201030 18:28:32.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.720" endtime="20201030 18:28:32.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.719" endtime="20201030 18:28:32.242"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.265" endtime="20201030 18:28:32.284"></status>
</kw>
<msg timestamp="20201030 18:28:32.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.262" endtime="20201030 18:28:32.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.287" endtime="20201030 18:28:32.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.293" endtime="20201030 18:28:32.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.254" endtime="20201030 18:28:32.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.249" endtime="20201030 18:28:32.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.319" endtime="20201030 18:28:32.659"></status>
</kw>
<msg timestamp="20201030 18:28:32.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039781472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039848819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.315" endtime="20201030 18:28:32.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039781472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039848819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.668" endtime="20201030 18:28:32.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.687" endtime="20201030 18:28:32.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.306" endtime="20201030 18:28:32.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.302" endtime="20201030 18:28:32.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:32.704" level="INFO">${RESULT} = [{'diff': 6.734700000000232e-05}, {'diff': 6.719499999999906e-05}, {'diff': 6.724999999999787e-05}, {'diff': 6.712500000000121e-05}, {'diff': 6.736200000000137e-05}, {'diff': 6.730599999999615e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:32.695" endtime="20201030 18:28:32.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:32.714" level="INFO">${ACCURACY} = {'diff': [6.734700000000232e-05, 6.719499999999906e-05, 6.724999999999787e-05, 6.712500000000121e-05, 6.736200000000137e-05, 6.730599999999615e-05, 6.676400000000388e-05, 6.726399999999744e-05, 6.7264...</msg>
<status status="PASS" starttime="20201030 18:28:32.706" endtime="20201030 18:28:32.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.724" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 18:28:32.722" endtime="20201030 18:28:32.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.730" level="INFO">VALUE: [6.734700000000232e-05, 6.719499999999906e-05, 6.724999999999787e-05, 6.712500000000121e-05, 6.736200000000137e-05, 6.730599999999615e-05, 6.676400000000388e-05, 6.726399999999744e-05, 6.726400000000438e-05, 6.645800000000535e-05, 6.672199999999823e-05, 6.704100000000379e-05, 6.724999999999787e-05, 6.652799999999626e-05, 6.67359999999978e-05, 6.673600000000474e-05, 6.688900000000053e-05, 6.72359999999983e-05, 6.698600000000499e-05, 6.692999999999977e-05, 6.656900000000243e-05, 6.712499999999427e-05, 6.661100000000114e-05, 6.684700000000182e-05, 6.669399999999909e-05, 6.638799999999362e-05, 6.712500000000121e-05, 6.64029999999996e-05, 6.704100000000379e-05, 6.683400000000173e-05, 6.691699999999967e-05, 6.680500000000311e-05, 6.712500000000121e-05, 6.691699999999967e-05, 6.715299999999341e-05, 6.72359999999983e-05, 6.65280000000032e-05, 6.719399999999959e-05, 6.695899999999838e-05, 6.691699999999967e-05, 6.681900000000268e-05, 6.667999999999952e-05, 6.65280000000032e-05, 6.670900000000507e-05, 6.674999999999737e-05, 6.651400000000363e-05, 6.712499999999427e-05, 6.726399999999744e-05, 6.669499999999856e-05, 6.719399999999959e-05]</msg>
<status status="PASS" starttime="20201030 18:28:32.727" endtime="20201030 18:28:32.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.715" endtime="20201030 18:28:32.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:32.743" endtime="20201030 18:28:32.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.738" endtime="20201030 18:28:32.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.736" endtime="20201030 18:28:32.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.244" endtime="20201030 18:28:32.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.243" endtime="20201030 18:28:32.768"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.791" endtime="20201030 18:28:32.811"></status>
</kw>
<msg timestamp="20201030 18:28:32.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.787" endtime="20201030 18:28:32.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.814" endtime="20201030 18:28:32.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.821" endtime="20201030 18:28:32.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.780" endtime="20201030 18:28:32.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.774" endtime="20201030 18:28:32.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.844" endtime="20201030 18:28:33.182"></status>
</kw>
<msg timestamp="20201030 18:28:33.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041280944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041349333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.841" endtime="20201030 18:28:33.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041280944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041349333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.192" endtime="20201030 18:28:33.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.211" endtime="20201030 18:28:33.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.833" endtime="20201030 18:28:33.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.829" endtime="20201030 18:28:33.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.228" level="INFO">${RESULT} = [{'diff': 6.838900000000203e-05}, {'diff': 6.741599999999376e-05}, {'diff': 6.793100000000024e-05}, {'diff': 6.805600000000384e-05}, {'diff': 6.819400000000059e-05}, {'diff': 6.834799999999586e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:33.219" endtime="20201030 18:28:33.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.237" level="INFO">${ACCURACY} = {'diff': [6.838900000000203e-05, 6.741599999999376e-05, 6.793100000000024e-05, 6.805600000000384e-05, 6.819400000000059e-05, 6.834799999999586e-05, 6.772199999999923e-05, 6.811200000000212e-05, 6.7777...</msg>
<status status="PASS" starttime="20201030 18:28:33.230" endtime="20201030 18:28:33.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.248" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.246" endtime="20201030 18:28:33.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.254" level="INFO">VALUE: [6.838900000000203e-05, 6.741599999999376e-05, 6.793100000000024e-05, 6.805600000000384e-05, 6.819400000000059e-05, 6.834799999999586e-05, 6.772199999999923e-05, 6.811200000000212e-05, 6.777799999999751e-05, 6.781899999999674e-05, 6.777799999999751e-05, 6.768099999999999e-05, 6.819400000000059e-05, 6.801399999999819e-05, 6.783299999999631e-05, 6.768000000000052e-05, 6.751400000000463e-05, 6.816700000000092e-05, 6.80559999999969e-05, 6.80700000000034e-05, 6.798599999999905e-05, 6.777799999999751e-05, 6.836199999999543e-05, 6.740200000000113e-05, 6.752799999999726e-05, 6.822199999999973e-05, 6.759699999999563e-05, 6.80559999999969e-05, 6.826400000000538e-05, 6.751399999999769e-05, 6.741700000000017e-05, 6.793100000000024e-05, 6.750000000000506e-05, 6.834699999999638e-05, 6.743099999999974e-05, 6.82500000000058e-05, 6.804199999999733e-05, 6.763899999999434e-05, 6.822199999999973e-05, 6.768099999999999e-05, 6.819500000000006e-05, 6.759699999999563e-05, 6.794400000000034e-05, 6.809700000000307e-05, 6.80830000000035e-05, 6.743000000000027e-05, 6.766700000000042e-05, 6.752799999999726e-05, 6.809699999999613e-05, 6.820800000000016e-05]</msg>
<status status="PASS" starttime="20201030 18:28:33.251" endtime="20201030 18:28:33.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.239" endtime="20201030 18:28:33.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.268" endtime="20201030 18:28:33.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.262" endtime="20201030 18:28:33.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.260" endtime="20201030 18:28:33.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.770" endtime="20201030 18:28:33.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.769" endtime="20201030 18:28:33.293"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.316" endtime="20201030 18:28:33.335"></status>
</kw>
<msg timestamp="20201030 18:28:33.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.313" endtime="20201030 18:28:33.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.338" endtime="20201030 18:28:33.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.344" endtime="20201030 18:28:33.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.305" endtime="20201030 18:28:33.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.300" endtime="20201030 18:28:33.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.368" endtime="20201030 18:28:33.705"></status>
</kw>
<msg timestamp="20201030 18:28:33.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039812111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039881458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.364" endtime="20201030 18:28:33.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039812111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039881458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.715" endtime="20201030 18:28:33.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.733" endtime="20201030 18:28:33.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.357" endtime="20201030 18:28:33.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.352" endtime="20201030 18:28:33.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.751" level="INFO">${RESULT} = [{'diff': 6.934700000000432e-05}, {'diff': 6.855499999999792e-05}, {'diff': 6.887500000000296e-05}, {'diff': 6.933299999999781e-05}, {'diff': 6.916599999999551e-05}, {'diff': 6.931899999999824e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:33.742" endtime="20201030 18:28:33.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.762" level="INFO">${ACCURACY} = {'diff': [6.934700000000432e-05, 6.855499999999792e-05, 6.887500000000296e-05, 6.933299999999781e-05, 6.916599999999551e-05, 6.931899999999824e-05, 6.883400000000373e-05, 6.92360000000003e-05, 6.85420...</msg>
<status status="PASS" starttime="20201030 18:28:33.753" endtime="20201030 18:28:33.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.772" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.770" endtime="20201030 18:28:33.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.778" level="INFO">VALUE: [6.934700000000432e-05, 6.855499999999792e-05, 6.887500000000296e-05, 6.933299999999781e-05, 6.916599999999551e-05, 6.931899999999824e-05, 6.883400000000373e-05, 6.92360000000003e-05, 6.854200000000477e-05, 6.862499999999577e-05, 6.88480000000033e-05, 6.937500000000346e-05, 6.91109999999967e-05, 6.89439999999944e-05, 6.915300000000235e-05, 6.858299999999706e-05, 6.933299999999781e-05, 6.865300000000185e-05, 6.909699999999713e-05, 6.897200000000048e-05, 6.89030000000021e-05, 6.844400000000084e-05, 6.843000000000127e-05, 6.901399999999919e-05, 6.924999999999987e-05, 6.898699999999952e-05, 6.870800000000066e-05, 6.924999999999987e-05, 6.868100000000099e-05, 6.856899999999749e-05, 6.92909999999991e-05, 6.92230000000002e-05, 6.919500000000106e-05, 6.87359999999998e-05, 6.881900000000468e-05, 6.893100000000124e-05, 6.90559999999979e-05, 6.911100000000364e-05, 6.847299999999945e-05, 6.901399999999919e-05, 6.847199999999998e-05, 6.909699999999713e-05, 6.883300000000425e-05, 6.898600000000005e-05, 6.912500000000321e-05, 6.848599999999955e-05, 6.841599999999476e-05, 6.899999999999962e-05, 6.876399999999894e-05, 6.915300000000235e-05]</msg>
<status status="PASS" starttime="20201030 18:28:33.775" endtime="20201030 18:28:33.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.763" endtime="20201030 18:28:33.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.791" endtime="20201030 18:28:33.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.786" endtime="20201030 18:28:33.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.784" endtime="20201030 18:28:33.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.295" endtime="20201030 18:28:33.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.294" endtime="20201030 18:28:33.817"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.840" endtime="20201030 18:28:33.859"></status>
</kw>
<msg timestamp="20201030 18:28:33.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.837" endtime="20201030 18:28:33.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.862" endtime="20201030 18:28:33.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.869" endtime="20201030 18:28:33.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.830" endtime="20201030 18:28:33.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.824" endtime="20201030 18:28:33.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.893" endtime="20201030 18:28:34.232"></status>
</kw>
<msg timestamp="20201030 18:28:34.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041058556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041128708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.889" endtime="20201030 18:28:34.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041058556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041128708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.242" endtime="20201030 18:28:34.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.261" endtime="20201030 18:28:34.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.882" endtime="20201030 18:28:34.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.877" endtime="20201030 18:28:34.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:34.278" level="INFO">${RESULT} = [{'diff': 7.015199999999694e-05}, {'diff': 6.941700000000217e-05}, {'diff': 6.968100000000199e-05}, {'diff': 6.943000000000227e-05}, {'diff': 6.984799999999736e-05}, {'diff': 6.995899999999444e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:34.269" endtime="20201030 18:28:34.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:34.289" level="INFO">${ACCURACY} = {'diff': [7.015199999999694e-05, 6.941700000000217e-05, 6.968100000000199e-05, 6.943000000000227e-05, 6.984799999999736e-05, 6.995899999999444e-05, 6.959700000000457e-05, 7.02639999999935e-05, 7.01940...</msg>
<status status="PASS" starttime="20201030 18:28:34.280" endtime="20201030 18:28:34.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.300" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 18:28:34.298" endtime="20201030 18:28:34.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.306" level="INFO">VALUE: [7.015199999999694e-05, 6.941700000000217e-05, 6.968100000000199e-05, 6.943000000000227e-05, 6.984799999999736e-05, 6.995899999999444e-05, 6.959700000000457e-05, 7.02639999999935e-05, 7.019400000000259e-05, 6.997300000000095e-05, 7.004200000000627e-05, 6.944500000000131e-05, 6.977799999999951e-05, 7.018100000000249e-05, 7.02360000000013e-05, 6.977799999999951e-05, 6.972199999999429e-05, 7.019399999999565e-05, 6.998700000000052e-05, 6.998600000000105e-05, 7.005499999999942e-05, 6.945899999999394e-05, 6.975000000000037e-05, 6.944400000000184e-05, 6.948600000000055e-05, 6.965299999999591e-05, 6.991699999999573e-05, 7.004199999999933e-05, 6.945800000000141e-05, 6.983399999999779e-05, 7.016699999999598e-05, 6.966599999999601e-05, 7.031899999999924e-05, 7.001400000000019e-05, 6.955500000000586e-05, 6.986199999999693e-05, 7.012499999999727e-05, 7.033399999999829e-05, 6.987499999999702e-05, 6.984700000000482e-05, 7.004099999999985e-05, 7.023599999999436e-05, 7.004099999999985e-05, 7.031899999999924e-05, 7.015299999999641e-05, 7.025000000000087e-05, 6.987499999999702e-05, 7.019400000000259e-05, 7.027800000000001e-05, 7.02230000000012e-05]</msg>
<status status="PASS" starttime="20201030 18:28:34.302" endtime="20201030 18:28:34.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.291" endtime="20201030 18:28:34.309"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:34.318" endtime="20201030 18:28:34.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.314" endtime="20201030 18:28:34.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.311" endtime="20201030 18:28:34.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.819" endtime="20201030 18:28:34.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.818" endtime="20201030 18:28:34.344"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.366" endtime="20201030 18:28:34.385"></status>
</kw>
<msg timestamp="20201030 18:28:34.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.363" endtime="20201030 18:28:34.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.389" endtime="20201030 18:28:34.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.395" endtime="20201030 18:28:34.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.356" endtime="20201030 18:28:34.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.350" endtime="20201030 18:28:34.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.419" endtime="20201030 18:28:34.760"></status>
</kw>
<msg timestamp="20201030 18:28:34.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039650375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039721444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.415" endtime="20201030 18:28:34.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039650375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039721444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.770" endtime="20201030 18:28:34.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.788" endtime="20201030 18:28:34.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.408" endtime="20201030 18:28:34.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.403" endtime="20201030 18:28:34.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:34.806" level="INFO">${RESULT} = [{'diff': 7.1069e-05}, {'diff': 7.125000000000187e-05}, {'diff': 7.120900000000263e-05}, {'diff': 7.066700000000342e-05}, {'diff': 7.05559999999994e-05}, {'diff': 7.090299999999716e-05}, {'diff': 7.04...</msg>
<status status="PASS" starttime="20201030 18:28:34.797" endtime="20201030 18:28:34.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:34.815" level="INFO">${ACCURACY} = {'diff': [7.1069e-05, 7.125000000000187e-05, 7.120900000000263e-05, 7.066700000000342e-05, 7.05559999999994e-05, 7.090299999999716e-05, 7.045900000000188e-05, 7.137500000000546e-05, 7.077800000000051e...</msg>
<status status="PASS" starttime="20201030 18:28:34.808" endtime="20201030 18:28:34.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.826" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 18:28:34.824" endtime="20201030 18:28:34.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.831" level="INFO">VALUE: [7.1069e-05, 7.125000000000187e-05, 7.120900000000263e-05, 7.066700000000342e-05, 7.05559999999994e-05, 7.090299999999716e-05, 7.045900000000188e-05, 7.137500000000546e-05, 7.077800000000051e-05, 7.095800000000291e-05, 7.127800000000101e-05, 7.129199999999364e-05, 7.073599999999486e-05, 7.108400000000598e-05, 7.108299999999956e-05, 7.119400000000359e-05, 7.09439999999964e-05, 7.09439999999964e-05, 7.047200000000198e-05, 7.088899999999759e-05, 7.112499999999827e-05, 7.05689999999995e-05, 7.095800000000291e-05, 7.04030000000036e-05, 7.1069e-05, 7.101400000000119e-05, 7.066699999999648e-05, 7.138900000000503e-05, 7.038900000000403e-05, 7.086099999999845e-05, 7.120799999999622e-05, 7.056999999999897e-05, 7.094499999999587e-05, 7.04309999999958e-05, 7.087500000000496e-05, 7.106999999999947e-05, 7.070799999999572e-05, 7.112500000000521e-05, 7.133399999999929e-05, 7.109699999999913e-05, 7.052800000000026e-05, 7.094400000000334e-05, 7.097200000000248e-05, 7.140299999999766e-05, 7.102799999999382e-05, 7.11109999999987e-05, 7.094500000000281e-05, 7.062499999999777e-05, 7.099999999999468e-05, 7.136099999999895e-05]</msg>
<status status="PASS" starttime="20201030 18:28:34.828" endtime="20201030 18:28:34.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.817" endtime="20201030 18:28:34.839"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:34.849" endtime="20201030 18:28:34.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.844" endtime="20201030 18:28:34.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.842" endtime="20201030 18:28:34.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.346" endtime="20201030 18:28:34.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.345" endtime="20201030 18:28:34.874"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.897" endtime="20201030 18:28:34.918"></status>
</kw>
<msg timestamp="20201030 18:28:34.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.893" endtime="20201030 18:28:34.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.922" endtime="20201030 18:28:34.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.929" endtime="20201030 18:28:34.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.886" endtime="20201030 18:28:34.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.880" endtime="20201030 18:28:34.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.958" endtime="20201030 18:28:35.297"></status>
</kw>
<msg timestamp="20201030 18:28:35.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041573208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041645361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.955" endtime="20201030 18:28:35.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041573208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041645361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.306" endtime="20201030 18:28:35.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.327" endtime="20201030 18:28:35.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.946" endtime="20201030 18:28:35.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.941" endtime="20201030 18:28:35.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.345" level="INFO">${RESULT} = [{'diff': 7.215299999999841e-05}, {'diff': 7.14439999999969e-05}, {'diff': 7.202800000000176e-05}, {'diff': 7.143100000000374e-05}, {'diff': 7.201400000000219e-05}, {'diff': 7.181900000000074e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:35.336" endtime="20201030 18:28:35.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.354" level="INFO">${ACCURACY} = {'diff': [7.215299999999841e-05, 7.14439999999969e-05, 7.202800000000176e-05, 7.143100000000374e-05, 7.201400000000219e-05, 7.181900000000074e-05, 7.222199999999679e-05, 7.222199999999679e-05, 7.21809...</msg>
<status status="PASS" starttime="20201030 18:28:35.347" endtime="20201030 18:28:35.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.365" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.363" endtime="20201030 18:28:35.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.371" level="INFO">VALUE: [7.215299999999841e-05, 7.14439999999969e-05, 7.202800000000176e-05, 7.143100000000374e-05, 7.201400000000219e-05, 7.181900000000074e-05, 7.222199999999679e-05, 7.222199999999679e-05, 7.218099999999755e-05, 7.219399999999765e-05, 7.145799999999647e-05, 7.151400000000169e-05, 7.230500000000167e-05, 7.186099999999945e-05, 7.232000000000072e-05, 7.219399999999765e-05, 7.15560000000004e-05, 7.208300000000056e-05, 7.227800000000201e-05, 7.162499999999877e-05, 7.191699999999773e-05, 7.241699999999823e-05, 7.247300000000345e-05, 7.152800000000126e-05, 7.147199999999604e-05, 7.147199999999604e-05, 7.197199999999654e-05, 7.151300000000221e-05, 7.180500000000117e-05, 7.154100000000135e-05, 7.209799999999961e-05, 7.1763999999995e-05, 7.220899999999669e-05, 7.163900000000528e-05, 7.226400000000244e-05, 7.19030000000051e-05, 7.224999999999593e-05, 7.19439999999974e-05, 7.211100000000664e-05, 7.224999999999593e-05, 7.234699999999344e-05, 7.144500000000331e-05, 7.144500000000331e-05, 7.20560000000009e-05, 7.173699999999533e-05, 7.186099999999945e-05, 7.172200000000323e-05, 7.172200000000323e-05, 7.218100000000449e-05, 7.19030000000051e-05]</msg>
<status status="PASS" starttime="20201030 18:28:35.367" endtime="20201030 18:28:35.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.356" endtime="20201030 18:28:35.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.385" endtime="20201030 18:28:35.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.379" endtime="20201030 18:28:35.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.376" endtime="20201030 18:28:35.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.876" endtime="20201030 18:28:35.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.875" endtime="20201030 18:28:35.410"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.433" endtime="20201030 18:28:35.452"></status>
</kw>
<msg timestamp="20201030 18:28:35.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.430" endtime="20201030 18:28:35.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.455" endtime="20201030 18:28:35.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.461" endtime="20201030 18:28:35.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.422" endtime="20201030 18:28:35.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.416" endtime="20201030 18:28:35.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.485" endtime="20201030 18:28:35.822"></status>
</kw>
<msg timestamp="20201030 18:28:35.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039814583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039887, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:35.482" endtime="20201030 18:28:35.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039814583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039887, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:35.831" endtime="20201030 18:28:35.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.850" endtime="20201030 18:28:35.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.474" endtime="20201030 18:28:35.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.470" endtime="20201030 18:28:35.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.867" level="INFO">${RESULT} = [{'diff': 7.241699999999823e-05}, {'diff': 7.241599999999876e-05}, {'diff': 7.318099999999855e-05}, {'diff': 7.25560000000014e-05}, {'diff': 7.297300000000395e-05}, {'diff': 7.305499999999548e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:35.858" endtime="20201030 18:28:35.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.878" level="INFO">${ACCURACY} = {'diff': [7.241699999999823e-05, 7.241599999999876e-05, 7.318099999999855e-05, 7.25560000000014e-05, 7.297300000000395e-05, 7.305499999999548e-05, 7.245799999999747e-05, 7.247300000000345e-05, 7.31809...</msg>
<status status="PASS" starttime="20201030 18:28:35.869" endtime="20201030 18:28:35.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.889" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.887" endtime="20201030 18:28:35.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.894" level="INFO">VALUE: [7.241699999999823e-05, 7.241599999999876e-05, 7.318099999999855e-05, 7.25560000000014e-05, 7.297300000000395e-05, 7.305499999999548e-05, 7.245799999999747e-05, 7.247300000000345e-05, 7.318099999999855e-05, 7.329200000000258e-05, 7.291599999999926e-05, 7.288899999999959e-05, 7.320799999999822e-05, 7.300000000000362e-05, 7.329200000000258e-05, 7.340299999999966e-05, 7.319399999999865e-05, 7.312500000000027e-05, 7.316599999999951e-05, 7.329199999999564e-05, 7.268099999999805e-05, 7.281900000000174e-05, 7.300000000000362e-05, 7.283400000000079e-05, 7.287500000000002e-05, 7.295899999999744e-05, 7.31110000000007e-05, 7.279200000000208e-05, 7.291599999999926e-05, 7.318099999999855e-05, 7.244500000000431e-05, 7.300000000000362e-05, 7.277800000000251e-05, 7.318000000000602e-05, 7.327800000000301e-05, 7.268099999999805e-05, 7.308300000000156e-05, 7.252700000000278e-05, 7.24309999999978e-05, 7.302800000000276e-05, 7.240299999999866e-05, 7.262499999999977e-05, 7.295799999999797e-05, 7.277700000000303e-05, 7.300000000000362e-05, 7.319499999999812e-05, 7.272199999999729e-05, 7.262499999999977e-05, 7.254099999999541e-05, 7.268099999999805e-05]</msg>
<status status="PASS" starttime="20201030 18:28:35.891" endtime="20201030 18:28:35.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.880" endtime="20201030 18:28:35.897"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.907" endtime="20201030 18:28:35.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.903" endtime="20201030 18:28:35.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.900" endtime="20201030 18:28:35.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.412" endtime="20201030 18:28:35.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.411" endtime="20201030 18:28:35.932"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.955" endtime="20201030 18:28:35.974"></status>
</kw>
<msg timestamp="20201030 18:28:35.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.951" endtime="20201030 18:28:35.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.978" endtime="20201030 18:28:35.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.985" endtime="20201030 18:28:35.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.944" endtime="20201030 18:28:35.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.938" endtime="20201030 18:28:35.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.010" endtime="20201030 18:28:36.360"></status>
</kw>
<msg timestamp="20201030 18:28:36.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039630583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039704931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.006" endtime="20201030 18:28:36.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039630583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039704931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.369" endtime="20201030 18:28:36.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.388" endtime="20201030 18:28:36.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.999" endtime="20201030 18:28:36.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.993" endtime="20201030 18:28:36.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.405" level="INFO">${RESULT} = [{'diff': 7.434800000000186e-05}, {'diff': 7.390300000000016e-05}, {'diff': 7.369500000000556e-05}, {'diff': 7.369499999999862e-05}, {'diff': 7.427799999999707e-05}, {'diff': 7.425000000000487e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:36.396" endtime="20201030 18:28:36.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:36.420" level="INFO">${ACCURACY} = {'diff': [7.434800000000186e-05, 7.390300000000016e-05, 7.369500000000556e-05, 7.369499999999862e-05, 7.427799999999707e-05, 7.425000000000487e-05, 7.383299999999537e-05, 7.404099999999691e-05, 7.4207...</msg>
<status status="PASS" starttime="20201030 18:28:36.407" endtime="20201030 18:28:36.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.431" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 18:28:36.429" endtime="20201030 18:28:36.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.437" level="INFO">VALUE: [7.434800000000186e-05, 7.390300000000016e-05, 7.369500000000556e-05, 7.369499999999862e-05, 7.427799999999707e-05, 7.425000000000487e-05, 7.383299999999537e-05, 7.404099999999691e-05, 7.420799999999922e-05, 7.425000000000487e-05, 7.369499999999862e-05, 7.341699999999923e-05, 7.433300000000281e-05, 7.416600000000051e-05, 7.433300000000281e-05, 7.383299999999537e-05, 7.355499999999598e-05, 7.359700000000163e-05, 7.351399999999675e-05, 7.386100000000145e-05, 7.402800000000376e-05, 7.436099999999501e-05, 7.349999999999718e-05, 7.434700000000238e-05, 7.433299999999587e-05, 7.419399999999965e-05, 7.370800000000566e-05, 7.429199999999664e-05, 7.422199999999879e-05, 7.405500000000342e-05, 7.415299999999347e-05, 7.405499999999648e-05, 7.424999999999793e-05, 7.409700000000213e-05, 7.419500000000606e-05, 7.387500000000102e-05, 7.366699999999948e-05, 7.354199999999589e-05, 7.345899999999794e-05, 7.436100000000195e-05, 7.367999999999958e-05, 7.433300000000281e-05, 7.383300000000231e-05, 7.436100000000195e-05, 7.352799999999632e-05, 7.384699999999494e-05, 7.387500000000102e-05, 7.397200000000548e-05, 7.340299999999966e-05, 7.408299999999562e-05]</msg>
<status status="PASS" starttime="20201030 18:28:36.434" endtime="20201030 18:28:36.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.422" endtime="20201030 18:28:36.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.449" endtime="20201030 18:28:36.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.445" endtime="20201030 18:28:36.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.442" endtime="20201030 18:28:36.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.934" endtime="20201030 18:28:36.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.933" endtime="20201030 18:28:36.475"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.498" endtime="20201030 18:28:36.518"></status>
</kw>
<msg timestamp="20201030 18:28:36.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.494" endtime="20201030 18:28:36.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.522" endtime="20201030 18:28:36.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.528" endtime="20201030 18:28:36.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.487" endtime="20201030 18:28:36.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.481" endtime="20201030 18:28:36.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.551" endtime="20201030 18:28:36.904"></status>
</kw>
<msg timestamp="20201030 18:28:36.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040090611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040165833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.548" endtime="20201030 18:28:36.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040090611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040165833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.914" endtime="20201030 18:28:36.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.932" endtime="20201030 18:28:36.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.541" endtime="20201030 18:28:36.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.536" endtime="20201030 18:28:36.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.950" level="INFO">${RESULT} = [{'diff': 7.522199999999979e-05}, {'diff': 7.488899999999465e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.486100000000245e-05}, {'diff': 7.484699999999594e-05}, {'diff': 7.477800000000451e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:36.941" endtime="20201030 18:28:36.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:36.959" level="INFO">${ACCURACY} = {'diff': [7.522199999999979e-05, 7.488899999999465e-05, 7.499999999999868e-05, 7.486100000000245e-05, 7.484699999999594e-05, 7.477800000000451e-05, 7.505599999999696e-05, 7.480599999999671e-05, 7.5291...</msg>
<status status="PASS" starttime="20201030 18:28:36.952" endtime="20201030 18:28:36.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.970" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 18:28:36.968" endtime="20201030 18:28:36.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.975" level="INFO">VALUE: [7.522199999999979e-05, 7.488899999999465e-05, 7.499999999999868e-05, 7.486100000000245e-05, 7.484699999999594e-05, 7.477800000000451e-05, 7.505599999999696e-05, 7.480599999999671e-05, 7.529199999999764e-05, 7.502799999999782e-05, 7.488899999999465e-05, 7.48189999999968e-05, 7.53890000000021e-05, 7.484700000000288e-05, 7.508300000000356e-05, 7.468100000000005e-05, 7.516700000000098e-05, 7.440300000000066e-05, 7.483299999999637e-05, 7.519400000000065e-05, 7.47360000000058e-05, 7.506999999999653e-05, 7.524999999999893e-05, 7.466700000000048e-05, 7.522199999999979e-05, 7.530599999999721e-05, 7.524999999999893e-05, 7.468000000000058e-05, 7.513800000000237e-05, 7.509800000000261e-05, 7.527799999999807e-05, 7.527799999999807e-05, 7.472199999999929e-05, 7.498599999999911e-05, 7.447199999999904e-05, 7.522299999999926e-05, 7.480599999999671e-05, 7.49310000000003e-05, 7.469499999999962e-05, 7.538899999999515e-05, 7.484800000000236e-05, 7.516600000000151e-05, 7.529199999999764e-05, 7.483300000000331e-05, 7.542999999999439e-05, 7.49310000000003e-05, 7.44309999999998e-05, 7.516700000000098e-05, 7.53189999999973e-05, 7.533299999999687e-05]</msg>
<status status="PASS" starttime="20201030 18:28:36.972" endtime="20201030 18:28:36.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.961" endtime="20201030 18:28:36.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.988" endtime="20201030 18:28:37.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.984" endtime="20201030 18:28:37.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.981" endtime="20201030 18:28:37.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.477" endtime="20201030 18:28:37.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.476" endtime="20201030 18:28:37.014"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.038" endtime="20201030 18:28:37.060"></status>
</kw>
<msg timestamp="20201030 18:28:37.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.035" endtime="20201030 18:28:37.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.064" endtime="20201030 18:28:37.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.070" endtime="20201030 18:28:37.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.027" endtime="20201030 18:28:37.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.021" endtime="20201030 18:28:37.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.094" endtime="20201030 18:28:37.444"></status>
</kw>
<msg timestamp="20201030 18:28:37.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043511056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043587139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.090" endtime="20201030 18:28:37.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043511056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043587139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.454" endtime="20201030 18:28:37.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.473" endtime="20201030 18:28:37.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.083" endtime="20201030 18:28:37.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.078" endtime="20201030 18:28:37.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:37.490" level="INFO">${RESULT} = [{'diff': 7.608299999999762e-05}, {'diff': 7.612500000000327e-05}, {'diff': 7.63189999999983e-05}, {'diff': 7.562499999999583e-05}, {'diff': 7.637500000000352e-05}, {'diff': 7.587500000000302e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:37.481" endtime="20201030 18:28:37.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:37.499" level="INFO">${ACCURACY} = {'diff': [7.608299999999762e-05, 7.612500000000327e-05, 7.63189999999983e-05, 7.562499999999583e-05, 7.637500000000352e-05, 7.587500000000302e-05, 7.586099999999651e-05, 7.591600000000226e-05, 7.61669...</msg>
<status status="PASS" starttime="20201030 18:28:37.492" endtime="20201030 18:28:37.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.510" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 18:28:37.508" endtime="20201030 18:28:37.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.516" level="INFO">VALUE: [7.608299999999762e-05, 7.612500000000327e-05, 7.63189999999983e-05, 7.562499999999583e-05, 7.637500000000352e-05, 7.587500000000302e-05, 7.586099999999651e-05, 7.591600000000226e-05, 7.616699999999504e-05, 7.569400000000115e-05, 7.573599999999986e-05, 7.569500000000062e-05, 7.616699999999504e-05, 7.551399999999875e-05, 7.566699999999454e-05, 7.562500000000277e-05, 7.572299999999976e-05, 7.551399999999875e-05, 7.548599999999961e-05, 7.597300000000001e-05, 7.612500000000327e-05, 7.616699999999504e-05, 7.565299999999497e-05, 7.588800000000312e-05, 7.64310000000018e-05, 7.593099999999436e-05, 7.63189999999983e-05, 7.619399999999471e-05, 7.543000000000133e-05, 7.549999999999918e-05, 7.61110000000037e-05, 7.56110000000032e-05, 7.62639999999995e-05, 7.616699999999504e-05, 7.558400000000354e-05, 7.59310000000013e-05, 7.577799999999857e-05, 7.624999999999993e-05, 7.616700000000198e-05, 7.624999999999993e-05, 7.54440000000009e-05, 7.601399999999925e-05, 7.552799999999832e-05, 7.558299999999712e-05, 7.638899999999615e-05, 7.558400000000354e-05, 7.59440000000014e-05, 7.627799999999907e-05, 7.627799999999907e-05, 7.6151999999996e-05]</msg>
<status status="PASS" starttime="20201030 18:28:37.513" endtime="20201030 18:28:37.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.501" endtime="20201030 18:28:37.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:37.530" endtime="20201030 18:28:37.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.524" endtime="20201030 18:28:37.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.521" endtime="20201030 18:28:37.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.016" endtime="20201030 18:28:37.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.015" endtime="20201030 18:28:37.555"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.578" endtime="20201030 18:28:37.598"></status>
</kw>
<msg timestamp="20201030 18:28:37.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.575" endtime="20201030 18:28:37.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.602" endtime="20201030 18:28:37.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.608" endtime="20201030 18:28:37.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.567" endtime="20201030 18:28:37.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.562" endtime="20201030 18:28:37.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.632" endtime="20201030 18:28:37.984"></status>
</kw>
<msg timestamp="20201030 18:28:37.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040014875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040091639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.628" endtime="20201030 18:28:37.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040014875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040091639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.993" endtime="20201030 18:28:38.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.012" endtime="20201030 18:28:38.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.621" endtime="20201030 18:28:38.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.616" endtime="20201030 18:28:38.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.030" level="INFO">${RESULT} = [{'diff': 7.6764e-05}, {'diff': 7.654200000000583e-05}, {'diff': 7.668000000000258e-05}, {'diff': 7.684799999999742e-05}, {'diff': 7.720800000000222e-05}, {'diff': 7.663900000000334e-05}, {'diff': 7.7...</msg>
<status status="PASS" starttime="20201030 18:28:38.021" endtime="20201030 18:28:38.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:38.041" level="INFO">${ACCURACY} = {'diff': [7.6764e-05, 7.654200000000583e-05, 7.668000000000258e-05, 7.684799999999742e-05, 7.720800000000222e-05, 7.663900000000334e-05, 7.708299999999862e-05, 7.718100000000255e-05, 7.656899999999855...</msg>
<status status="PASS" starttime="20201030 18:28:38.032" endtime="20201030 18:28:38.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.052" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 18:28:38.050" endtime="20201030 18:28:38.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.058" level="INFO">VALUE: [7.6764e-05, 7.654200000000583e-05, 7.668000000000258e-05, 7.684799999999742e-05, 7.720800000000222e-05, 7.663900000000334e-05, 7.708299999999862e-05, 7.718100000000255e-05, 7.656899999999855e-05, 7.661099999999726e-05, 7.6764e-05, 7.718100000000255e-05, 7.65969999999977e-05, 7.697200000000154e-05, 7.712500000000427e-05, 7.654099999999942e-05, 7.648600000000061e-05, 7.720900000000169e-05, 7.659700000000463e-05, 7.651399999999975e-05, 7.684700000000488e-05, 7.716600000000351e-05, 7.668099999999511e-05, 7.651399999999975e-05, 7.716700000000298e-05, 7.715299999999647e-05, 7.734699999999844e-05, 7.675000000000043e-05, 7.676300000000053e-05, 7.691600000000326e-05, 7.66389999999964e-05, 7.712500000000427e-05, 7.691600000000326e-05, 7.709700000000513e-05, 7.716700000000298e-05, 7.6764e-05, 7.729199999999964e-05, 7.727800000000007e-05, 7.712500000000427e-05, 7.66389999999964e-05, 7.673600000000086e-05, 7.701400000000025e-05, 7.706999999999853e-05, 7.665300000000291e-05, 7.727800000000007e-05, 7.687499999999708e-05, 7.668099999999511e-05, 7.70969999999982e-05, 7.697200000000154e-05, 7.716700000000298e-05]</msg>
<status status="PASS" starttime="20201030 18:28:38.054" endtime="20201030 18:28:38.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.043" endtime="20201030 18:28:38.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.071" endtime="20201030 18:28:38.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.066" endtime="20201030 18:28:38.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.064" endtime="20201030 18:28:38.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.557" endtime="20201030 18:28:38.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.556" endtime="20201030 18:28:38.096"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.119" endtime="20201030 18:28:38.140"></status>
</kw>
<msg timestamp="20201030 18:28:38.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.116" endtime="20201030 18:28:38.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.143" endtime="20201030 18:28:38.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.150" endtime="20201030 18:28:38.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.109" endtime="20201030 18:28:38.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.103" endtime="20201030 18:28:38.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.173" endtime="20201030 18:28:38.523"></status>
</kw>
<msg timestamp="20201030 18:28:38.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040137597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040215597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.170" endtime="20201030 18:28:38.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040137597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040215597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.533" endtime="20201030 18:28:38.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.552" endtime="20201030 18:28:38.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.163" endtime="20201030 18:28:38.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.158" endtime="20201030 18:28:38.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.569" level="INFO">${RESULT} = [{'diff': 7.800000000000168e-05}, {'diff': 7.816599999999757e-05}, {'diff': 7.824999999999499e-05}, {'diff': 7.831999999999978e-05}, {'diff': 7.795799999999603e-05}, {'diff': 7.80969999999992e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:38.560" endtime="20201030 18:28:38.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:38.580" level="INFO">${ACCURACY} = {'diff': [7.800000000000168e-05, 7.816599999999757e-05, 7.824999999999499e-05, 7.831999999999978e-05, 7.795799999999603e-05, 7.80969999999992e-05, 7.82640000000015e-05, 7.77369999999944e-05, 7.8250000...</msg>
<status status="PASS" starttime="20201030 18:28:38.571" endtime="20201030 18:28:38.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.591" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 18:28:38.589" endtime="20201030 18:28:38.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.597" level="INFO">VALUE: [7.800000000000168e-05, 7.816599999999757e-05, 7.824999999999499e-05, 7.831999999999978e-05, 7.795799999999603e-05, 7.80969999999992e-05, 7.82640000000015e-05, 7.77369999999944e-05, 7.825000000000193e-05, 7.762499999999783e-05, 7.762499999999783e-05, 7.806900000000006e-05, 7.741599999999682e-05, 7.815299999999747e-05, 7.808299999999962e-05, 7.750000000000118e-05, 7.815299999999747e-05, 7.779200000000014e-05, 7.748599999999467e-05, 7.837499999999858e-05, 7.816700000000398e-05, 7.756899999999955e-05, 7.774999999999449e-05, 7.808299999999962e-05, 7.740300000000366e-05, 7.783399999999885e-05, 7.811099999999876e-05, 7.844500000000337e-05, 7.786099999999851e-05, 7.788899999999765e-05, 7.829200000000064e-05, 7.829200000000064e-05, 7.806900000000006e-05, 7.819400000000365e-05, 7.802700000000135e-05, 7.8458999999996e-05, 7.787499999999808e-05, 7.761099999999826e-05, 7.808400000000604e-05, 7.798600000000211e-05, 7.800000000000168e-05, 7.823600000000236e-05, 7.761099999999826e-05, 7.812499999999833e-05, 7.820800000000322e-05, 7.82640000000015e-05, 7.765200000000444e-05, 7.806900000000006e-05, 7.755499999999999e-05, 7.78189999999998e-05]</msg>
<status status="PASS" starttime="20201030 18:28:38.593" endtime="20201030 18:28:38.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.582" endtime="20201030 18:28:38.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.609" endtime="20201030 18:28:38.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.605" endtime="20201030 18:28:38.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.602" endtime="20201030 18:28:38.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.099" endtime="20201030 18:28:38.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.097" endtime="20201030 18:28:38.635"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.658" endtime="20201030 18:28:38.678"></status>
</kw>
<msg timestamp="20201030 18:28:38.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.654" endtime="20201030 18:28:38.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.682" endtime="20201030 18:28:38.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.688" endtime="20201030 18:28:38.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.647" endtime="20201030 18:28:38.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.641" endtime="20201030 18:28:38.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.711" endtime="20201030 18:28:39.064"></status>
</kw>
<msg timestamp="20201030 18:28:39.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040041986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040120625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.708" endtime="20201030 18:28:39.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040041986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040120625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.074" endtime="20201030 18:28:39.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.093" endtime="20201030 18:28:39.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.701" endtime="20201030 18:28:39.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.696" endtime="20201030 18:28:39.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.111" level="INFO">${RESULT} = [{'diff': 7.86389999999984e-05}, {'diff': 7.883300000000037e-05}, {'diff': 7.930600000000121e-05}, {'diff': 7.869399999999721e-05}, {'diff': 7.904100000000192e-05}, {'diff': 7.902700000000235e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:39.102" endtime="20201030 18:28:39.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:39.121" level="INFO">${ACCURACY} = {'diff': [7.86389999999984e-05, 7.883300000000037e-05, 7.930600000000121e-05, 7.869399999999721e-05, 7.904100000000192e-05, 7.902700000000235e-05, 7.875000000000243e-05, 7.938899999999915e-05, 7.91669...</msg>
<status status="PASS" starttime="20201030 18:28:39.113" endtime="20201030 18:28:39.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.131" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 18:28:39.129" endtime="20201030 18:28:39.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.137" level="INFO">VALUE: [7.86389999999984e-05, 7.883300000000037e-05, 7.930600000000121e-05, 7.869399999999721e-05, 7.904100000000192e-05, 7.902700000000235e-05, 7.875000000000243e-05, 7.938899999999915e-05, 7.916699999999804e-05, 7.845799999999653e-05, 7.844500000000337e-05, 7.919399999999771e-05, 7.883399999999985e-05, 7.858300000000012e-05, 7.898599999999617e-05, 7.882000000000028e-05, 7.938899999999915e-05, 7.902799999999488e-05, 7.883300000000037e-05, 7.902799999999488e-05, 7.855600000000046e-05, 7.922300000000326e-05, 7.872200000000329e-05, 7.874999999999549e-05, 7.905600000000096e-05, 7.870900000000319e-05, 7.894500000000387e-05, 7.895800000000397e-05, 7.937500000000652e-05, 7.940199999999925e-05, 7.893000000000483e-05, 7.907000000000053e-05, 7.89169999999978e-05, 7.888799999999918e-05, 7.90840000000001e-05, 7.84169999999973e-05, 7.906900000000106e-05, 7.907000000000053e-05, 7.877799999999463e-05, 7.931999999999384e-05, 7.905500000000149e-05, 7.902700000000235e-05, 7.92770000000026e-05, 7.923599999999642e-05, 7.89719999999966e-05, 7.916699999999804e-05, 7.85969999999997e-05, 7.842999999999739e-05, 7.854100000000142e-05, 7.86389999999984e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.134" endtime="20201030 18:28:39.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.122" endtime="20201030 18:28:39.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.150" endtime="20201030 18:28:39.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.145" endtime="20201030 18:28:39.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.143" endtime="20201030 18:28:39.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.637" endtime="20201030 18:28:39.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.636" endtime="20201030 18:28:39.175"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.198" endtime="20201030 18:28:39.220"></status>
</kw>
<msg timestamp="20201030 18:28:39.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.194" endtime="20201030 18:28:39.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.223" endtime="20201030 18:28:39.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.230" endtime="20201030 18:28:39.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.187" endtime="20201030 18:28:39.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.181" endtime="20201030 18:28:39.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.253" endtime="20201030 18:28:39.605"></status>
</kw>
<msg timestamp="20201030 18:28:39.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041580444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041659917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.250" endtime="20201030 18:28:39.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041580444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041659917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.614" endtime="20201030 18:28:39.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.633" endtime="20201030 18:28:39.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.243" endtime="20201030 18:28:39.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.238" endtime="20201030 18:28:39.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.651" level="INFO">${RESULT} = [{'diff': 7.947299999999657e-05}, {'diff': 7.951399999999581e-05}, {'diff': 8.04169999999993e-05}, {'diff': 8.022199999999785e-05}, {'diff': 7.955600000000146e-05}, {'diff': 7.974999999999649e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:39.642" endtime="20201030 18:28:39.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:39.660" level="INFO">${ACCURACY} = {'diff': [7.947299999999657e-05, 7.951399999999581e-05, 8.04169999999993e-05, 8.022199999999785e-05, 7.955600000000146e-05, 7.974999999999649e-05, 7.943099999999786e-05, 7.961100000000026e-05, 7.99729...</msg>
<status status="PASS" starttime="20201030 18:28:39.653" endtime="20201030 18:28:39.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.671" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 18:28:39.669" endtime="20201030 18:28:39.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.676" level="INFO">VALUE: [7.947299999999657e-05, 7.951399999999581e-05, 8.04169999999993e-05, 8.022199999999785e-05, 7.955600000000146e-05, 7.974999999999649e-05, 7.943099999999786e-05, 7.961100000000026e-05, 7.997299999999707e-05, 7.972300000000376e-05, 8.038900000000015e-05, 8.011100000000076e-05, 8.036099999999408e-05, 7.987500000000008e-05, 7.992999999999889e-05, 7.98190000000018e-05, 8.033400000000135e-05, 8.016600000000651e-05, 8.001299999999684e-05, 8.018099999999861e-05, 7.972199999999735e-05, 7.940300000000566e-05, 7.99719999999976e-05, 8.008300000000163e-05, 7.980500000000224e-05, 7.979200000000214e-05, 8.000000000000368e-05, 7.972199999999735e-05, 7.955600000000146e-05, 7.969399999999821e-05, 7.994399999999846e-05, 7.992999999999889e-05, 7.948600000000361e-05, 7.957000000000103e-05, 8.005600000000196e-05, 8.018099999999861e-05, 7.975000000000343e-05, 7.966700000000548e-05, 7.987500000000008e-05, 7.98890000000066e-05, 8.005599999999502e-05, 7.962499999999983e-05, 7.990299999999922e-05, 8.005600000000196e-05, 7.937499999999958e-05, 8.016699999999904e-05, 8.005500000000249e-05, 8.037500000000058e-05, 7.948700000000308e-05, 7.99719999999976e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.673" endtime="20201030 18:28:39.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.662" endtime="20201030 18:28:39.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.691" endtime="20201030 18:28:39.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.685" endtime="20201030 18:28:39.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.682" endtime="20201030 18:28:39.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.177" endtime="20201030 18:28:39.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.176" endtime="20201030 18:28:39.716"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.738" endtime="20201030 18:28:39.758"></status>
</kw>
<msg timestamp="20201030 18:28:39.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.735" endtime="20201030 18:28:39.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.761" endtime="20201030 18:28:39.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.767" endtime="20201030 18:28:39.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.728" endtime="20201030 18:28:39.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.722" endtime="20201030 18:28:39.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.791" endtime="20201030 18:28:40.129"></status>
</kw>
<msg timestamp="20201030 18:28:40.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039694389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039775569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.788" endtime="20201030 18:28:40.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039694389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039775569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.139" endtime="20201030 18:28:40.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.158" endtime="20201030 18:28:40.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.780" endtime="20201030 18:28:40.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.776" endtime="20201030 18:28:40.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.175" level="INFO">${RESULT} = [{'diff': 8.118000000000014e-05}, {'diff': 8.127699999999766e-05}, {'diff': 8.081899999999587e-05}, {'diff': 8.102799999999688e-05}, {'diff': 8.124999999999799e-05}, {'diff': 8.075000000000443e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:40.166" endtime="20201030 18:28:40.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:40.186" level="INFO">${ACCURACY} = {'diff': [8.118000000000014e-05, 8.127699999999766e-05, 8.081899999999587e-05, 8.102799999999688e-05, 8.124999999999799e-05, 8.075000000000443e-05, 8.131999999999584e-05, 8.068099999999911e-05, 8.0764...</msg>
<status status="PASS" starttime="20201030 18:28:40.177" endtime="20201030 18:28:40.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.197" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 18:28:40.195" endtime="20201030 18:28:40.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.202" level="INFO">VALUE: [8.118000000000014e-05, 8.127699999999766e-05, 8.081899999999587e-05, 8.102799999999688e-05, 8.124999999999799e-05, 8.075000000000443e-05, 8.131999999999584e-05, 8.068099999999911e-05, 8.0764000000004e-05, 8.088900000000065e-05, 8.129100000000417e-05, 8.129200000000364e-05, 8.106899999999612e-05, 8.06390000000004e-05, 8.0764000000004e-05, 8.054200000000289e-05, 8.048599999999767e-05, 8.061100000000126e-05, 8.124999999999799e-05, 8.129200000000364e-05, 8.097200000000554e-05, 8.074999999999749e-05, 8.056899999999562e-05, 8.06390000000004e-05, 8.094399999999946e-05, 8.136100000000202e-05, 8.084700000000195e-05, 8.068099999999911e-05, 8.108299999999569e-05, 8.047299999999757e-05, 8.09719999999986e-05, 8.072299999999782e-05, 8.132000000000278e-05, 8.134700000000245e-05, 8.043099999999886e-05, 8.066699999999954e-05, 8.115300000000047e-05, 8.077800000000357e-05, 8.06390000000004e-05, 8.10970000000022e-05, 8.076399999999706e-05, 8.09719999999986e-05, 8.08190000000028e-05, 8.08190000000028e-05, 8.075000000000443e-05, 8.075000000000443e-05, 8.116700000000004e-05, 8.10970000000022e-05, 8.106900000000306e-05, 8.104200000000339e-05]</msg>
<status status="PASS" starttime="20201030 18:28:40.199" endtime="20201030 18:28:40.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.188" endtime="20201030 18:28:40.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:40.219" endtime="20201030 18:28:40.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.214" endtime="20201030 18:28:40.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.212" endtime="20201030 18:28:40.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.718" endtime="20201030 18:28:40.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.717" endtime="20201030 18:28:40.244"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.267" endtime="20201030 18:28:40.286"></status>
</kw>
<msg timestamp="20201030 18:28:40.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.263" endtime="20201030 18:28:40.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.290" endtime="20201030 18:28:40.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.296" endtime="20201030 18:28:40.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.256" endtime="20201030 18:28:40.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.250" endtime="20201030 18:28:40.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.319" endtime="20201030 18:28:40.662"></status>
</kw>
<msg timestamp="20201030 18:28:40.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039925819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040007681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.316" endtime="20201030 18:28:40.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039925819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040007681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.671" endtime="20201030 18:28:40.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.690" endtime="20201030 18:28:40.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.309" endtime="20201030 18:28:40.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.304" endtime="20201030 18:28:40.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.707" level="INFO">${RESULT} = [{'diff': 8.186200000000199e-05}, {'diff': 8.177699999999816e-05}, {'diff': 8.176399999999806e-05}, {'diff': 8.20269999999984e-05}, {'diff': 8.176399999999806e-05}, {'diff': 8.195800000000003e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:40.698" endtime="20201030 18:28:40.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:40.718" level="INFO">${ACCURACY} = {'diff': [8.186200000000199e-05, 8.177699999999816e-05, 8.176399999999806e-05, 8.20269999999984e-05, 8.176399999999806e-05, 8.195800000000003e-05, 8.233300000000388e-05, 8.172200000000629e-05, 8.18340...</msg>
<status status="PASS" starttime="20201030 18:28:40.709" endtime="20201030 18:28:40.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.729" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 18:28:40.727" endtime="20201030 18:28:40.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.735" level="INFO">VALUE: [8.186200000000199e-05, 8.177699999999816e-05, 8.176399999999806e-05, 8.20269999999984e-05, 8.176399999999806e-05, 8.195800000000003e-05, 8.233300000000388e-05, 8.172200000000629e-05, 8.183400000000285e-05, 8.190300000000122e-05, 8.193100000000036e-05, 8.219400000000071e-05, 8.16249999999949e-05, 8.193100000000036e-05, 8.150000000000518e-05, 8.224999999999899e-05, 8.154199999999695e-05, 8.187500000000208e-05, 8.201399999999831e-05, 8.20970000000032e-05, 8.186099999999558e-05, 8.152799999999738e-05, 8.21390000000019e-05, 8.161099999999533e-05, 8.188899999999472e-05, 8.201299999999884e-05, 8.21799999999942e-05, 8.205499999999755e-05, 8.204100000000492e-05, 8.170799999999978e-05, 8.197200000000654e-05, 8.1846999999996e-05, 8.227799999999813e-05, 8.16390000000014e-05, 8.162500000000183e-05, 8.19719999999996e-05, 8.151399999999781e-05, 8.199999999999874e-05, 8.186100000000252e-05, 8.177800000000457e-05, 8.209799999999573e-05, 8.186100000000252e-05, 8.186100000000252e-05, 8.193100000000036e-05, 8.19589999999995e-05, 8.152800000000432e-05, 8.169499999999968e-05, 8.211099999999583e-05, 8.19170000000008e-05, 8.204200000000439e-05]</msg>
<status status="PASS" starttime="20201030 18:28:40.732" endtime="20201030 18:28:40.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.720" endtime="20201030 18:28:40.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:40.747" endtime="20201030 18:28:40.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.743" endtime="20201030 18:28:40.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.741" endtime="20201030 18:28:40.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.246" endtime="20201030 18:28:40.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.245" endtime="20201030 18:28:40.773"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.795" endtime="20201030 18:28:40.815"></status>
</kw>
<msg timestamp="20201030 18:28:40.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.792" endtime="20201030 18:28:40.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.818" endtime="20201030 18:28:40.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.824" endtime="20201030 18:28:40.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.785" endtime="20201030 18:28:40.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.779" endtime="20201030 18:28:40.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.848" endtime="20201030 18:28:41.200"></status>
</kw>
<msg timestamp="20201030 18:28:41.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039726736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039809917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.845" endtime="20201030 18:28:41.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039726736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039809917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.210" endtime="20201030 18:28:41.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.229" endtime="20201030 18:28:41.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.837" endtime="20201030 18:28:41.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.833" endtime="20201030 18:28:41.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.246" level="INFO">${RESULT} = [{'diff': 8.318100000000161e-05}, {'diff': 8.313899999999597e-05}, {'diff': 8.305599999999802e-05}, {'diff': 8.306999999999759e-05}, {'diff': 8.33049999999988e-05}, {'diff': 8.281899999999787e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:41.237" endtime="20201030 18:28:41.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:41.255" level="INFO">${ACCURACY} = {'diff': [8.318100000000161e-05, 8.313899999999597e-05, 8.305599999999802e-05, 8.306999999999759e-05, 8.33049999999988e-05, 8.281899999999787e-05, 8.288900000000265e-05, 8.276399999999906e-05, 8.34030...</msg>
<status status="PASS" starttime="20201030 18:28:41.248" endtime="20201030 18:28:41.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.266" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 18:28:41.264" endtime="20201030 18:28:41.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.272" level="INFO">VALUE: [8.318100000000161e-05, 8.313899999999597e-05, 8.305599999999802e-05, 8.306999999999759e-05, 8.33049999999988e-05, 8.281899999999787e-05, 8.288900000000265e-05, 8.276399999999906e-05, 8.340300000000272e-05, 8.326399999999956e-05, 8.301399999999931e-05, 8.31669999999951e-05, 8.290300000000222e-05, 8.31249999999964e-05, 8.306899999999812e-05, 8.251399999999881e-05, 8.31390000000029e-05, 8.244399999999402e-05, 8.329200000000564e-05, 8.245800000000053e-05, 8.266600000000207e-05, 8.287499999999615e-05, 8.318000000000214e-05, 8.329200000000564e-05, 8.248599999999967e-05, 8.302800000000582e-05, 8.336100000000402e-05, 8.324999999999999e-05, 8.33469999999975e-05, 8.281899999999787e-05, 8.270799999999384e-05, 8.318100000000161e-05, 8.243100000000086e-05, 8.249999999999924e-05, 8.283399999999691e-05, 8.311099999999683e-05, 8.295800000000103e-05, 8.324999999999999e-05, 8.273599999999992e-05, 8.301399999999931e-05, 8.287499999999615e-05, 8.338899999999622e-05, 8.272200000000035e-05, 8.319500000000118e-05, 8.318100000000161e-05, 8.254199999999795e-05, 8.319399999999477e-05, 8.337499999999665e-05, 8.251400000000575e-05, 8.31669999999951e-05]</msg>
<status status="PASS" starttime="20201030 18:28:41.269" endtime="20201030 18:28:41.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.257" endtime="20201030 18:28:41.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.284" endtime="20201030 18:28:41.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.280" endtime="20201030 18:28:41.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.277" endtime="20201030 18:28:41.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.775" endtime="20201030 18:28:41.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.774" endtime="20201030 18:28:41.310"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.333" endtime="20201030 18:28:41.360"></status>
</kw>
<msg timestamp="20201030 18:28:41.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.329" endtime="20201030 18:28:41.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.364" endtime="20201030 18:28:41.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.370" endtime="20201030 18:28:41.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.322" endtime="20201030 18:28:41.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.316" endtime="20201030 18:28:41.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.394" endtime="20201030 18:28:41.745"></status>
</kw>
<msg timestamp="20201030 18:28:41.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046647681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04673125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:41.391" endtime="20201030 18:28:41.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046647681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04673125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:41.754" endtime="20201030 18:28:41.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.773" endtime="20201030 18:28:41.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.383" endtime="20201030 18:28:41.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.378" endtime="20201030 18:28:41.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.790" level="INFO">${RESULT} = [{'diff': 8.356899999999862e-05}, {'diff': 8.398600000000117e-05}, {'diff': 8.359699999999776e-05}, {'diff': 8.361099999999733e-05}, {'diff': 8.37370000000004e-05}, {'diff': 8.413899999999697e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:41.781" endtime="20201030 18:28:41.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:41.800" level="INFO">${ACCURACY} = {'diff': [8.356899999999862e-05, 8.398600000000117e-05, 8.359699999999776e-05, 8.361099999999733e-05, 8.37370000000004e-05, 8.413899999999697e-05, 8.376400000000006e-05, 8.355599999999852e-05, 8.42089...</msg>
<status status="PASS" starttime="20201030 18:28:41.792" endtime="20201030 18:28:41.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.811" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 18:28:41.808" endtime="20201030 18:28:41.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.816" level="INFO">VALUE: [8.356899999999862e-05, 8.398600000000117e-05, 8.359699999999776e-05, 8.361099999999733e-05, 8.37370000000004e-05, 8.413899999999697e-05, 8.376400000000006e-05, 8.355599999999852e-05, 8.420899999999482e-05, 8.358299999999819e-05, 8.375000000000049e-05, 8.427800000000013e-05, 8.41119999999973e-05, 8.372200000000135e-05, 8.405499999999955e-05, 8.34720000000011e-05, 8.352799999999938e-05, 8.388899999999672e-05, 8.412500000000434e-05, 8.418100000000261e-05, 8.413899999999697e-05, 8.42370000000009e-05, 8.43049999999998e-05, 8.402799999999988e-05, 8.390299999999629e-05, 8.34720000000011e-05, 8.372199999999441e-05, 8.386099999999758e-05, 8.44170000000033e-05, 8.430599999999927e-05, 8.419499999999525e-05, 8.391600000000332e-05, 8.344400000000196e-05, 8.402799999999988e-05, 8.441599999999688e-05, 8.409800000000467e-05, 8.406899999999912e-05, 8.429100000000023e-05, 8.416599999999663e-05, 8.422200000000185e-05, 8.433399999999841e-05, 8.373600000000092e-05, 8.433300000000588e-05, 8.375000000000049e-05, 8.420800000000228e-05, 8.398600000000117e-05, 8.376299999999365e-05, 8.401400000000031e-05, 8.372199999999441e-05, 8.384700000000495e-05]</msg>
<status status="PASS" starttime="20201030 18:28:41.813" endtime="20201030 18:28:41.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.801" endtime="20201030 18:28:41.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.830" endtime="20201030 18:28:41.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.824" endtime="20201030 18:28:41.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.822" endtime="20201030 18:28:41.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.312" endtime="20201030 18:28:41.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.311" endtime="20201030 18:28:41.855"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.878" endtime="20201030 18:28:41.899"></status>
</kw>
<msg timestamp="20201030 18:28:41.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.875" endtime="20201030 18:28:41.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.903" endtime="20201030 18:28:41.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.909" endtime="20201030 18:28:41.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.868" endtime="20201030 18:28:41.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.862" endtime="20201030 18:28:41.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.932" endtime="20201030 18:28:42.283"></status>
</kw>
<msg timestamp="20201030 18:28:42.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039980528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0400655, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:41.929" endtime="20201030 18:28:42.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039980528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0400655, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:42.293" endtime="20201030 18:28:42.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.312" endtime="20201030 18:28:42.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.922" endtime="20201030 18:28:42.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.917" endtime="20201030 18:28:42.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:42.329" level="INFO">${RESULT} = [{'diff': 8.497199999999566e-05}, {'diff': 8.49170000000038e-05}, {'diff': 8.533299999999994e-05}, {'diff': 8.477800000000063e-05}, {'diff': 8.494500000000293e-05}, {'diff': 8.513899999999797e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:42.320" endtime="20201030 18:28:42.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:42.340" level="INFO">${ACCURACY} = {'diff': [8.497199999999566e-05, 8.49170000000038e-05, 8.533299999999994e-05, 8.477800000000063e-05, 8.494500000000293e-05, 8.513899999999797e-05, 8.509699999999926e-05, 8.509800000000567e-05, 8.45829...</msg>
<status status="PASS" starttime="20201030 18:28:42.331" endtime="20201030 18:28:42.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.351" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 18:28:42.349" endtime="20201030 18:28:42.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.356" level="INFO">VALUE: [8.497199999999566e-05, 8.49170000000038e-05, 8.533299999999994e-05, 8.477800000000063e-05, 8.494500000000293e-05, 8.513899999999797e-05, 8.509699999999926e-05, 8.509800000000567e-05, 8.458299999999919e-05, 8.468100000000311e-05, 8.505600000000002e-05, 8.474999999999455e-05, 8.455500000000005e-05, 8.508299999999969e-05, 8.49170000000038e-05, 8.461099999999833e-05, 8.484700000000595e-05, 8.526400000000156e-05, 8.455599999999952e-05, 8.502800000000088e-05, 8.536099999999908e-05, 8.46249999999979e-05, 8.458299999999919e-05, 8.469399999999627e-05, 8.523599999999548e-05, 8.459699999999876e-05, 8.52920000000007e-05, 8.49170000000038e-05, 8.473600000000192e-05, 8.511099999999883e-05, 8.48050000000003e-05, 8.465300000000398e-05, 8.531999999999984e-05, 8.481899999999987e-05, 8.504200000000045e-05, 8.480599999999977e-05, 8.504100000000098e-05, 8.533299999999994e-05, 8.452800000000038e-05, 8.483299999999944e-05, 8.526400000000156e-05, 8.46669999999966e-05, 8.518000000000414e-05, 8.458399999999866e-05, 8.498600000000217e-05, 8.538899999999822e-05, 8.490199999999781e-05, 8.522200000000285e-05, 8.538899999999822e-05, 8.4846999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:28:42.353" endtime="20201030 18:28:42.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.342" endtime="20201030 18:28:42.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:42.369" endtime="20201030 18:28:42.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.365" endtime="20201030 18:28:42.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.362" endtime="20201030 18:28:42.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.858" endtime="20201030 18:28:42.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.856" endtime="20201030 18:28:42.394"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.417" endtime="20201030 18:28:42.438"></status>
</kw>
<msg timestamp="20201030 18:28:42.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.414" endtime="20201030 18:28:42.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.442" endtime="20201030 18:28:42.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.448" endtime="20201030 18:28:42.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.407" endtime="20201030 18:28:42.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.401" endtime="20201030 18:28:42.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.472" endtime="20201030 18:28:42.823"></status>
</kw>
<msg timestamp="20201030 18:28:42.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040218681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040304653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.468" endtime="20201030 18:28:42.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040218681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040304653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.832" endtime="20201030 18:28:42.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.851" endtime="20201030 18:28:42.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.461" endtime="20201030 18:28:42.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.456" endtime="20201030 18:28:42.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:42.868" level="INFO">${RESULT} = [{'diff': 8.59720000000036e-05}, {'diff': 8.643100000000487e-05}, {'diff': 8.615299999999854e-05}, {'diff': 8.540199999999831e-05}, {'diff': 8.58050000000013e-05}, {'diff': 8.554199999999401e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:42.859" endtime="20201030 18:28:42.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:42.880" level="INFO">${ACCURACY} = {'diff': [8.59720000000036e-05, 8.643100000000487e-05, 8.615299999999854e-05, 8.540199999999831e-05, 8.58050000000013e-05, 8.554199999999401e-05, 8.6332999999994e-05, 8.605599999999408e-05, 8.54580000...</msg>
<status status="PASS" starttime="20201030 18:28:42.871" endtime="20201030 18:28:42.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.891" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 18:28:42.888" endtime="20201030 18:28:42.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.896" level="INFO">VALUE: [8.59720000000036e-05, 8.643100000000487e-05, 8.615299999999854e-05, 8.540199999999831e-05, 8.58050000000013e-05, 8.554199999999401e-05, 8.6332999999994e-05, 8.605599999999408e-05, 8.545800000000353e-05, 8.552800000000138e-05, 8.615299999999854e-05, 8.555500000000105e-05, 8.548600000000267e-05, 8.576400000000206e-05, 8.611099999999983e-05, 8.548600000000267e-05, 8.627699999999572e-05, 8.605600000000102e-05, 8.62920000000017e-05, 8.637499999999965e-05, 8.637499999999965e-05, 8.548600000000267e-05, 8.555600000000052e-05, 8.63470000000005e-05, 8.56249999999989e-05, 8.544500000000343e-05, 8.54449999999965e-05, 8.598599999999623e-05, 8.626400000000256e-05, 8.56119999999988e-05, 8.594399999999752e-05, 8.580600000000077e-05, 8.607000000000059e-05, 8.558399999999966e-05, 8.620800000000428e-05, 8.543000000000439e-05, 8.63470000000005e-05, 8.609699999999332e-05, 8.616599999999863e-05, 8.61669999999981e-05, 8.541599999999788e-05, 8.629199999999476e-05, 8.616700000000505e-05, 8.558300000000019e-05, 8.637499999999965e-05, 8.54720000000031e-05, 8.57920000000012e-05, 8.604099999999504e-05, 8.615299999999854e-05, 8.561099999999933e-05]</msg>
<status status="PASS" starttime="20201030 18:28:42.893" endtime="20201030 18:28:42.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.881" endtime="20201030 18:28:42.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:42.908" endtime="20201030 18:28:42.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.904" endtime="20201030 18:28:42.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.902" endtime="20201030 18:28:42.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.396" endtime="20201030 18:28:42.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.395" endtime="20201030 18:28:42.934"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.957" endtime="20201030 18:28:42.978"></status>
</kw>
<msg timestamp="20201030 18:28:42.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.953" endtime="20201030 18:28:42.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.981" endtime="20201030 18:28:42.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.987" endtime="20201030 18:28:42.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.946" endtime="20201030 18:28:42.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.940" endtime="20201030 18:28:42.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.011" endtime="20201030 18:28:43.365"></status>
</kw>
<msg timestamp="20201030 18:28:43.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039985389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040072083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.008" endtime="20201030 18:28:43.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039985389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040072083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.374" endtime="20201030 18:28:43.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.393" endtime="20201030 18:28:43.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.000" endtime="20201030 18:28:43.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.995" endtime="20201030 18:28:43.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.411" level="INFO">${RESULT} = [{'diff': 8.669399999999827e-05}, {'diff': 8.683300000000144e-05}, {'diff': 8.681900000000187e-05}, {'diff': 8.683400000000091e-05}, {'diff': 8.726299999999715e-05}, {'diff': 8.69999999999968e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:43.402" endtime="20201030 18:28:43.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:43.420" level="INFO">${ACCURACY} = {'diff': [8.669399999999827e-05, 8.683300000000144e-05, 8.681900000000187e-05, 8.683400000000091e-05, 8.726299999999715e-05, 8.69999999999968e-05, 8.738900000000022e-05, 8.734800000000098e-05, 8.72359...</msg>
<status status="PASS" starttime="20201030 18:28:43.413" endtime="20201030 18:28:43.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.431" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 18:28:43.429" endtime="20201030 18:28:43.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.436" level="INFO">VALUE: [8.669399999999827e-05, 8.683300000000144e-05, 8.681900000000187e-05, 8.683400000000091e-05, 8.726299999999715e-05, 8.69999999999968e-05, 8.738900000000022e-05, 8.734800000000098e-05, 8.723599999999748e-05, 8.659700000000076e-05, 8.654199999999501e-05, 8.720900000000475e-05, 8.652799999999544e-05, 8.654200000000195e-05, 8.720799999999834e-05, 8.680599999999483e-05, 8.669399999999827e-05, 8.688899999999972e-05, 8.738900000000022e-05, 8.736199999999361e-05, 8.691699999999886e-05, 8.719499999999825e-05, 8.665199999999956e-05, 8.702800000000288e-05, 8.665299999999904e-05, 8.66119999999998e-05, 8.676400000000306e-05, 8.661100000000033e-05, 8.69999999999968e-05, 8.692999999999895e-05, 8.711100000000083e-05, 8.726400000000356e-05, 8.72920000000027e-05, 8.729100000000323e-05, 8.705600000000202e-05, 8.659700000000076e-05, 8.731900000000237e-05, 8.652800000000238e-05, 8.655600000000152e-05, 8.677800000000263e-05, 8.738900000000022e-05, 8.713899999999997e-05, 8.645899999999707e-05, 8.709700000000126e-05, 8.733300000000194e-05, 8.647199999999716e-05, 8.698599999999723e-05, 8.677800000000263e-05, 8.688899999999972e-05, 8.668100000000512e-05]</msg>
<status status="PASS" starttime="20201030 18:28:43.433" endtime="20201030 18:28:43.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.422" endtime="20201030 18:28:43.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.449" endtime="20201030 18:28:43.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.445" endtime="20201030 18:28:43.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.442" endtime="20201030 18:28:43.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.936" endtime="20201030 18:28:43.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.935" endtime="20201030 18:28:43.474"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.497" endtime="20201030 18:28:43.520"></status>
</kw>
<msg timestamp="20201030 18:28:43.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.494" endtime="20201030 18:28:43.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.524" endtime="20201030 18:28:43.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.530" endtime="20201030 18:28:43.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.487" endtime="20201030 18:28:43.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.481" endtime="20201030 18:28:43.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.553" endtime="20201030 18:28:43.904"></status>
</kw>
<msg timestamp="20201030 18:28:43.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041800153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041887972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.550" endtime="20201030 18:28:43.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041800153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041887972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.913" endtime="20201030 18:28:43.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.932" endtime="20201030 18:28:43.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.543" endtime="20201030 18:28:43.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.538" endtime="20201030 18:28:43.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.950" level="INFO">${RESULT} = [{'diff': 8.781900000000287e-05}, {'diff': 8.805600000000302e-05}, {'diff': 8.805599999999608e-05}, {'diff': 8.820899999999882e-05}, {'diff': 8.774999999999755e-05}, {'diff': 8.747300000000457e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:43.941" endtime="20201030 18:28:43.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:43.959" level="INFO">${ACCURACY} = {'diff': [8.781900000000287e-05, 8.805600000000302e-05, 8.805599999999608e-05, 8.820899999999882e-05, 8.774999999999755e-05, 8.747300000000457e-05, 8.78199999999954e-05, 8.781900000000287e-05, 8.81800...</msg>
<status status="PASS" starttime="20201030 18:28:43.952" endtime="20201030 18:28:43.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.970" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 18:28:43.968" endtime="20201030 18:28:43.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.975" level="INFO">VALUE: [8.781900000000287e-05, 8.805600000000302e-05, 8.805599999999608e-05, 8.820899999999882e-05, 8.774999999999755e-05, 8.747300000000457e-05, 8.78199999999954e-05, 8.781900000000287e-05, 8.81800000000002e-05, 8.761100000000133e-05, 8.769399999999927e-05, 8.759800000000123e-05, 8.788900000000072e-05, 8.84449999999995e-05, 8.755500000000305e-05, 8.804199999999651e-05, 8.840300000000079e-05, 8.794399999999952e-05, 8.807000000000259e-05, 8.815300000000054e-05, 8.748600000000467e-05, 8.815199999999412e-05, 8.759800000000123e-05, 8.827700000000466e-05, 8.791699999999986e-05, 8.747199999999816e-05, 8.82920000000037e-05, 8.833400000000241e-05, 8.769399999999927e-05, 8.834799999999504e-05, 8.791699999999986e-05, 8.750000000000424e-05, 8.766600000000013e-05, 8.779099999999679e-05, 8.832000000000284e-05, 8.804200000000345e-05, 8.781900000000287e-05, 8.755600000000252e-05, 8.83199999999959e-05, 8.772200000000535e-05, 8.762499999999396e-05, 8.824999999999805e-05, 8.754200000000295e-05, 8.809699999999532e-05, 8.815300000000054e-05, 8.844500000000644e-05, 8.744399999999902e-05, 8.833300000000294e-05, 8.756899999999568e-05, 8.791699999999986e-05]</msg>
<status status="PASS" starttime="20201030 18:28:43.972" endtime="20201030 18:28:43.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.961" endtime="20201030 18:28:43.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.990" endtime="20201030 18:28:44.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.984" endtime="20201030 18:28:44.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.981" endtime="20201030 18:28:44.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.476" endtime="20201030 18:28:44.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.475" endtime="20201030 18:28:44.015"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.038" endtime="20201030 18:28:44.058"></status>
</kw>
<msg timestamp="20201030 18:28:44.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.035" endtime="20201030 18:28:44.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.061" endtime="20201030 18:28:44.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.067" endtime="20201030 18:28:44.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.027" endtime="20201030 18:28:44.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.022" endtime="20201030 18:28:44.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.091" endtime="20201030 18:28:44.430"></status>
</kw>
<msg timestamp="20201030 18:28:44.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040056458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040145319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.087" endtime="20201030 18:28:44.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040056458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040145319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.440" endtime="20201030 18:28:44.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.459" endtime="20201030 18:28:44.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.080" endtime="20201030 18:28:44.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.076" endtime="20201030 18:28:44.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:44.476" level="INFO">${RESULT} = [{'diff': 8.886099999999564e-05}, {'diff': 8.905599999999708e-05}, {'diff': 8.902799999999794e-05}, {'diff': 8.869400000000027e-05}, {'diff': 8.913900000000197e-05}, {'diff': 8.907000000000359e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:44.467" endtime="20201030 18:28:44.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:44.487" level="INFO">${ACCURACY} = {'diff': [8.886099999999564e-05, 8.905599999999708e-05, 8.902799999999794e-05, 8.869400000000027e-05, 8.913900000000197e-05, 8.907000000000359e-05, 8.947200000000016e-05, 8.894400000000052e-05, 8.8916...</msg>
<status status="PASS" starttime="20201030 18:28:44.478" endtime="20201030 18:28:44.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.498" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 18:28:44.496" endtime="20201030 18:28:44.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.503" level="INFO">VALUE: [8.886099999999564e-05, 8.905599999999708e-05, 8.902799999999794e-05, 8.869400000000027e-05, 8.913900000000197e-05, 8.907000000000359e-05, 8.947200000000016e-05, 8.894400000000052e-05, 8.891600000000138e-05, 8.884699999999607e-05, 8.863900000000147e-05, 8.906999999999665e-05, 8.927800000000513e-05, 8.919500000000025e-05, 8.893100000000043e-05, 8.891600000000138e-05, 8.858300000000319e-05, 8.922199999999991e-05, 8.870799999999984e-05, 8.929199999999776e-05, 8.927699999999872e-05, 8.916600000000163e-05, 8.890300000000129e-05, 8.924999999999905e-05, 8.91800000000012e-05, 8.942999999999451e-05, 8.863900000000147e-05, 8.89999999999988e-05, 8.927799999999819e-05, 8.918100000000068e-05, 8.934800000000298e-05, 8.91670000000011e-05, 8.897299999999914e-05, 8.913899999999503e-05, 8.938900000000222e-05, 8.881900000000387e-05, 8.855600000000352e-05, 8.937500000000265e-05, 8.894400000000052e-05, 8.841600000000088e-05, 8.86250000000019e-05, 8.908300000000369e-05, 8.934699999999657e-05, 8.876399999999812e-05, 8.861100000000233e-05, 8.91529999999946e-05, 8.880499999999736e-05, 8.887500000000215e-05, 8.866600000000113e-05, 8.909700000000326e-05]</msg>
<status status="PASS" starttime="20201030 18:28:44.500" endtime="20201030 18:28:44.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.489" endtime="20201030 18:28:44.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:44.516" endtime="20201030 18:28:44.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.511" endtime="20201030 18:28:44.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.509" endtime="20201030 18:28:44.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.017" endtime="20201030 18:28:44.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.016" endtime="20201030 18:28:44.541"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.564" endtime="20201030 18:28:44.584"></status>
</kw>
<msg timestamp="20201030 18:28:44.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.560" endtime="20201030 18:28:44.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.587" endtime="20201030 18:28:44.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.593" endtime="20201030 18:28:44.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.553" endtime="20201030 18:28:44.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.547" endtime="20201030 18:28:44.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.617" endtime="20201030 18:28:44.954"></status>
</kw>
<msg timestamp="20201030 18:28:44.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039825806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039916097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.613" endtime="20201030 18:28:44.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039825806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039916097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.963" endtime="20201030 18:28:44.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.982" endtime="20201030 18:28:44.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.606" endtime="20201030 18:28:44.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.601" endtime="20201030 18:28:44.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.000" level="INFO">${RESULT} = [{'diff': 9.029099999999929e-05}, {'diff': 9.006900000000512e-05}, {'diff': 8.998600000000023e-05}, {'diff': 8.961100000000333e-05}, {'diff': 8.96659999999952e-05}, {'diff': 9.005499999999861e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:44.991" endtime="20201030 18:28:45.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:45.011" level="INFO">${ACCURACY} = {'diff': [9.029099999999929e-05, 9.006900000000512e-05, 8.998600000000023e-05, 8.961100000000333e-05, 8.96659999999952e-05, 9.005499999999861e-05, 8.938800000000274e-05, 9.030599999999833e-05, 8.99029...</msg>
<status status="PASS" starttime="20201030 18:28:45.002" endtime="20201030 18:28:45.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.022" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 18:28:45.020" endtime="20201030 18:28:45.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.027" level="INFO">VALUE: [9.029099999999929e-05, 9.006900000000512e-05, 8.998600000000023e-05, 8.961100000000333e-05, 8.96659999999952e-05, 9.005499999999861e-05, 8.938800000000274e-05, 9.030599999999833e-05, 8.990299999999535e-05, 8.94999999999993e-05, 8.96659999999952e-05, 8.988900000000272e-05, 8.988900000000272e-05, 9.004199999999851e-05, 8.981900000000487e-05, 8.968100000000118e-05, 9.009800000000373e-05, 8.993100000000143e-05, 8.990299999999535e-05, 9.04450000000015e-05, 9.002799999999894e-05, 8.977799999999869e-05, 9.023600000000048e-05, 9.004199999999851e-05, 8.982000000000434e-05, 8.988900000000272e-05, 8.943000000000145e-05, 9.015300000000254e-05, 8.96670000000016e-05, 9.01250000000034e-05, 9.038899999999628e-05, 8.944399999999408e-05, 8.943000000000145e-05, 9.005499999999861e-05, 9.016699999999517e-05, 8.956900000000462e-05, 9.036100000000408e-05, 9.038899999999628e-05, 9.025000000000005e-05, 9.005499999999861e-05, 9.006999999999765e-05, 9.02079999999944e-05, 8.986099999999664e-05, 9.044400000000202e-05, 8.956999999999715e-05, 9.01800000000022e-05, 8.954199999999801e-05, 8.948600000000667e-05, 8.968100000000118e-05, 8.94999999999993e-05]</msg>
<status status="PASS" starttime="20201030 18:28:45.024" endtime="20201030 18:28:45.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.013" endtime="20201030 18:28:45.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.040" endtime="20201030 18:28:45.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.036" endtime="20201030 18:28:45.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.033" endtime="20201030 18:28:45.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.543" endtime="20201030 18:28:45.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.542" endtime="20201030 18:28:45.065"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.088" endtime="20201030 18:28:45.108"></status>
</kw>
<msg timestamp="20201030 18:28:45.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.085" endtime="20201030 18:28:45.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.111" endtime="20201030 18:28:45.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.117" endtime="20201030 18:28:45.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.077" endtime="20201030 18:28:45.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.072" endtime="20201030 18:28:45.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.141" endtime="20201030 18:28:45.482"></status>
</kw>
<msg timestamp="20201030 18:28:45.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039811528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039902625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.137" endtime="20201030 18:28:45.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039811528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039902625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.491" endtime="20201030 18:28:45.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.510" endtime="20201030 18:28:45.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.130" endtime="20201030 18:28:45.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.126" endtime="20201030 18:28:45.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.527" level="INFO">${RESULT} = [{'diff': 9.109699999999832e-05}, {'diff': 9.130599999999933e-05}, {'diff': 9.08329999999985e-05}, {'diff': 9.061099999999739e-05}, {'diff': 9.095800000000209e-05}, {'diff': 9.058299999999825e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:45.519" endtime="20201030 18:28:45.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:45.537" level="INFO">${ACCURACY} = {'diff': [9.109699999999832e-05, 9.130599999999933e-05, 9.08329999999985e-05, 9.061099999999739e-05, 9.095800000000209e-05, 9.058299999999825e-05, 9.058299999999825e-05, 9.073600000000098e-05, 9.06530...</msg>
<status status="PASS" starttime="20201030 18:28:45.530" endtime="20201030 18:28:45.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.548" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 18:28:45.545" endtime="20201030 18:28:45.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.553" level="INFO">VALUE: [9.109699999999832e-05, 9.130599999999933e-05, 9.08329999999985e-05, 9.061099999999739e-05, 9.095800000000209e-05, 9.058299999999825e-05, 9.058299999999825e-05, 9.073600000000098e-05, 9.065300000000304e-05, 9.055499999999911e-05, 9.11800000000032e-05, 9.091600000000338e-05, 9.086099999999764e-05, 9.102700000000047e-05, 9.070800000000184e-05, 9.140199999999737e-05, 9.059699999999782e-05, 9.094499999999506e-05, 9.134800000000498e-05, 9.1332999999999e-05, 9.069500000000175e-05, 9.113899999999703e-05, 9.058299999999825e-05, 9.126399999999368e-05, 9.111100000000483e-05, 9.070800000000184e-05, 9.070800000000184e-05, 9.084699999999807e-05, 9.075000000000055e-05, 9.1332999999999e-05, 9.067999999999576e-05, 9.075000000000055e-05, 9.05000000000003e-05, 9.118100000000268e-05, 9.06529999999961e-05, 9.126400000000062e-05, 9.137499999999771e-05, 9.11529999999966e-05, 9.105499999999961e-05, 9.047200000000116e-05, 9.068100000000218e-05, 9.091699999999592e-05, 9.087500000000415e-05, 9.127800000000019e-05, 9.084699999999807e-05, 9.126400000000062e-05, 9.072200000000141e-05, 9.130599999999933e-05, 9.065300000000304e-05, 9.075000000000055e-05]</msg>
<status status="PASS" starttime="20201030 18:28:45.550" endtime="20201030 18:28:45.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.539" endtime="20201030 18:28:45.556"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.566" endtime="20201030 18:28:45.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.562" endtime="20201030 18:28:45.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.559" endtime="20201030 18:28:45.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.067" endtime="20201030 18:28:45.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.066" endtime="20201030 18:28:45.591"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.614" endtime="20201030 18:28:45.635"></status>
</kw>
<msg timestamp="20201030 18:28:45.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.611" endtime="20201030 18:28:45.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.639" endtime="20201030 18:28:45.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.645" endtime="20201030 18:28:45.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.603" endtime="20201030 18:28:45.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.597" endtime="20201030 18:28:45.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.669" endtime="20201030 18:28:46.008"></status>
</kw>
<msg timestamp="20201030 18:28:46.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041506931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041598736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.665" endtime="20201030 18:28:46.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041506931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041598736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.017" endtime="20201030 18:28:46.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.036" endtime="20201030 18:28:46.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.658" endtime="20201030 18:28:46.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.653" endtime="20201030 18:28:46.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:46.054" level="INFO">${RESULT} = [{'diff': 9.180500000000036e-05}, {'diff': 9.21670000000041e-05}, {'diff': 9.230500000000086e-05}, {'diff': 9.205600000000008e-05}, {'diff': 9.242999999999751e-05}, {'diff': 9.140299999999685e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:46.045" endtime="20201030 18:28:46.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:46.063" level="INFO">${ACCURACY} = {'diff': [9.180500000000036e-05, 9.21670000000041e-05, 9.230500000000086e-05, 9.205600000000008e-05, 9.242999999999751e-05, 9.140299999999685e-05, 9.159700000000576e-05, 9.220899999999588e-05, 9.19309...</msg>
<status status="PASS" starttime="20201030 18:28:46.056" endtime="20201030 18:28:46.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.074" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 18:28:46.072" endtime="20201030 18:28:46.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.079" level="INFO">VALUE: [9.180500000000036e-05, 9.21670000000041e-05, 9.230500000000086e-05, 9.205600000000008e-05, 9.242999999999751e-05, 9.140299999999685e-05, 9.159700000000576e-05, 9.220899999999588e-05, 9.193099999999649e-05, 9.213900000000497e-05, 9.198600000000223e-05, 9.199999999999486e-05, 9.188899999999778e-05, 9.209699999999932e-05, 9.194499999999606e-05, 9.198600000000223e-05, 9.190300000000429e-05, 9.15130000000014e-05, 9.21659999999977e-05, 9.201400000000137e-05, 9.162499999999796e-05, 9.195800000000309e-05, 9.192999999999701e-05, 9.22079999999964e-05, 9.240299999999785e-05, 9.183399999999897e-05, 9.18199999999994e-05, 9.209800000000573e-05, 9.173600000000198e-05, 9.172200000000241e-05, 9.213900000000497e-05, 9.223600000000248e-05, 9.15000000000013e-05, 9.147200000000216e-05, 9.233399999999947e-05, 9.184700000000601e-05, 9.219399999999683e-05, 9.151399999999393e-05, 9.161099999999839e-05, 9.234699999999957e-05, 9.173599999999504e-05, 9.211099999999889e-05, 9.21250000000054e-05, 9.22079999999964e-05, 9.229100000000129e-05, 9.188899999999778e-05, 9.162499999999796e-05, 9.234699999999957e-05, 9.19859999999953e-05, 9.197200000000266e-05]</msg>
<status status="PASS" starttime="20201030 18:28:46.076" endtime="20201030 18:28:46.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.065" endtime="20201030 18:28:46.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.093" endtime="20201030 18:28:46.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.087" endtime="20201030 18:28:46.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.085" endtime="20201030 18:28:46.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.593" endtime="20201030 18:28:46.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.592" endtime="20201030 18:28:46.118"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.141" endtime="20201030 18:28:46.161"></status>
</kw>
<msg timestamp="20201030 18:28:46.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.138" endtime="20201030 18:28:46.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.164" endtime="20201030 18:28:46.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.171" endtime="20201030 18:28:46.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.131" endtime="20201030 18:28:46.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.125" endtime="20201030 18:28:46.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.194" endtime="20201030 18:28:46.533"></status>
</kw>
<msg timestamp="20201030 18:28:46.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039739153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039831667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.191" endtime="20201030 18:28:46.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039739153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039831667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.543" endtime="20201030 18:28:46.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.561" endtime="20201030 18:28:46.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.184" endtime="20201030 18:28:46.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.179" endtime="20201030 18:28:46.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:46.579" level="INFO">${RESULT} = [{'diff': 9.251400000000187e-05}, {'diff': 9.320800000000434e-05}, {'diff': 9.319399999999783e-05}, {'diff': 9.284700000000007e-05}, {'diff': 9.277799999999475e-05}, {'diff': 9.311099999999989e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:46.570" endtime="20201030 18:28:46.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:46.594" level="INFO">${ACCURACY} = {'diff': [9.251400000000187e-05, 9.320800000000434e-05, 9.319399999999783e-05, 9.284700000000007e-05, 9.277799999999475e-05, 9.311099999999989e-05, 9.327800000000219e-05, 9.272199999999647e-05, 9.2764...</msg>
<status status="PASS" starttime="20201030 18:28:46.581" endtime="20201030 18:28:46.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.605" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 18:28:46.602" endtime="20201030 18:28:46.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.610" level="INFO">VALUE: [9.251400000000187e-05, 9.320800000000434e-05, 9.319399999999783e-05, 9.284700000000007e-05, 9.277799999999475e-05, 9.311099999999989e-05, 9.327800000000219e-05, 9.272199999999647e-05, 9.276400000000212e-05, 9.330500000000186e-05, 9.293099999999749e-05, 9.248600000000273e-05, 9.24450000000035e-05, 9.244399999999708e-05, 9.277800000000169e-05, 9.291699999999792e-05, 9.3333000000001e-05, 9.337499999999971e-05, 9.284700000000007e-05, 9.301399999999543e-05, 9.331900000000143e-05, 9.33200000000009e-05, 9.299999999999586e-05, 9.263900000000547e-05, 9.329100000000229e-05, 9.30000000000028e-05, 9.341599999999894e-05, 9.270900000000332e-05, 9.305500000000161e-05, 9.340299999999885e-05, 9.269400000000427e-05, 9.252699999999503e-05, 9.344499999999756e-05, 9.291699999999792e-05, 9.263900000000547e-05, 9.258300000000025e-05, 9.263899999999853e-05, 9.301400000000237e-05, 9.30000000000028e-05, 9.31659999999987e-05, 9.324999999999611e-05, 9.313900000000597e-05, 9.330600000000133e-05, 9.292999999999801e-05, 9.276399999999518e-05, 9.334700000000057e-05, 9.248600000000273e-05, 9.313900000000597e-05, 9.288899999999878e-05, 9.345799999999765e-05]</msg>
<status status="PASS" starttime="20201030 18:28:46.607" endtime="20201030 18:28:46.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.595" endtime="20201030 18:28:46.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.623" endtime="20201030 18:28:46.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.618" endtime="20201030 18:28:46.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.616" endtime="20201030 18:28:46.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.120" endtime="20201030 18:28:46.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.119" endtime="20201030 18:28:46.648"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.670" endtime="20201030 18:28:46.690"></status>
</kw>
<msg timestamp="20201030 18:28:46.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.667" endtime="20201030 18:28:46.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.694" endtime="20201030 18:28:46.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.700" endtime="20201030 18:28:46.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.660" endtime="20201030 18:28:46.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.654" endtime="20201030 18:28:46.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.724" endtime="20201030 18:28:47.063"></status>
</kw>
<msg timestamp="20201030 18:28:47.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039655014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039749083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.721" endtime="20201030 18:28:47.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039655014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039749083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.072" endtime="20201030 18:28:47.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.091" endtime="20201030 18:28:47.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.713" endtime="20201030 18:28:47.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.709" endtime="20201030 18:28:47.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.108" level="INFO">${RESULT} = [{'diff': 9.406899999999524e-05}, {'diff': 9.349999999999636e-05}, {'diff': 9.423600000000448e-05}, {'diff': 9.355500000000211e-05}, {'diff': 9.361100000000039e-05}, {'diff': 9.370899999999738e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:47.100" endtime="20201030 18:28:47.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:47.120" level="INFO">${ACCURACY} = {'diff': [9.406899999999524e-05, 9.349999999999636e-05, 9.423600000000448e-05, 9.355500000000211e-05, 9.361100000000039e-05, 9.370899999999738e-05, 9.399999999999686e-05, 9.391699999999892e-05, 9.4444...</msg>
<status status="PASS" starttime="20201030 18:28:47.110" endtime="20201030 18:28:47.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.130" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 18:28:47.128" endtime="20201030 18:28:47.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.136" level="INFO">VALUE: [9.406899999999524e-05, 9.349999999999636e-05, 9.423600000000448e-05, 9.355500000000211e-05, 9.361100000000039e-05, 9.370899999999738e-05, 9.399999999999686e-05, 9.391699999999892e-05, 9.444499999999856e-05, 9.369400000000527e-05, 9.416699999999917e-05, 9.441699999999942e-05, 9.420800000000534e-05, 9.407000000000165e-05, 9.416700000000611e-05, 9.391599999999944e-05, 9.408299999999481e-05, 9.390299999999935e-05, 9.398600000000423e-05, 9.427699999999678e-05, 9.422199999999797e-05, 9.418099999999874e-05, 9.434700000000157e-05, 9.416699999999917e-05, 9.43609999999942e-05, 9.405499999999567e-05, 9.35000000000033e-05, 9.440200000000037e-05, 9.384700000000107e-05, 9.40000000000038e-05, 9.437500000000071e-05, 9.436100000000114e-05, 9.36659999999992e-05, 9.345799999999765e-05, 9.374999999999661e-05, 9.426399999999668e-05, 9.401399999999643e-05, 9.42079999999984e-05, 9.4027999999996e-05, 9.444399999999908e-05, 9.427700000000372e-05, 9.386100000000064e-05, 9.445899999999813e-05, 9.35000000000033e-05, 9.358300000000125e-05, 9.431999999999496e-05, 9.429099999999635e-05, 9.422199999999797e-05, 9.442999999999951e-05, 9.406900000000218e-05]</msg>
<status status="PASS" starttime="20201030 18:28:47.133" endtime="20201030 18:28:47.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.121" endtime="20201030 18:28:47.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.148" endtime="20201030 18:28:47.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.144" endtime="20201030 18:28:47.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.142" endtime="20201030 18:28:47.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.650" endtime="20201030 18:28:47.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.649" endtime="20201030 18:28:47.174"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.210" endtime="20201030 18:28:47.235"></status>
</kw>
<msg timestamp="20201030 18:28:47.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.201" endtime="20201030 18:28:47.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.241" endtime="20201030 18:28:47.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.254" endtime="20201030 18:28:47.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.189" endtime="20201030 18:28:47.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.181" endtime="20201030 18:28:47.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.295" endtime="20201030 18:28:47.672"></status>
</kw>
<msg timestamp="20201030 18:28:47.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.054375125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054470417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.290" endtime="20201030 18:28:47.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.054375125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054470417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.682" endtime="20201030 18:28:47.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.701" endtime="20201030 18:28:47.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.280" endtime="20201030 18:28:47.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.274" endtime="20201030 18:28:47.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.719" level="INFO">${RESULT} = [{'diff': 9.529199999999682e-05}, {'diff': 9.463900000000053e-05}, {'diff': 9.479100000000379e-05}, {'diff': 9.481900000000293e-05}, {'diff': 9.490300000000035e-05}, {'diff': 9.455600000000258e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:47.710" endtime="20201030 18:28:47.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:47.728" level="INFO">${ACCURACY} = {'diff': [9.529199999999682e-05, 9.463900000000053e-05, 9.479100000000379e-05, 9.481900000000293e-05, 9.490300000000035e-05, 9.455600000000258e-05, 9.507000000000265e-05, 9.48059999999959e-05, 9.49030...</msg>
<status status="PASS" starttime="20201030 18:28:47.721" endtime="20201030 18:28:47.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.739" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 18:28:47.737" endtime="20201030 18:28:47.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.745" level="INFO">VALUE: [9.529199999999682e-05, 9.463900000000053e-05, 9.479100000000379e-05, 9.481900000000293e-05, 9.490300000000035e-05, 9.455600000000258e-05, 9.507000000000265e-05, 9.48059999999959e-05, 9.490300000000035e-05, 9.545799999999965e-05, 9.477699999999728e-05, 9.490300000000035e-05, 9.490199999999394e-05, 9.48059999999959e-05, 9.476299999999771e-05, 9.467999999999976e-05, 9.480600000000283e-05, 9.523599999999854e-05, 9.494399999999958e-05, 9.461100000000139e-05, 9.491600000000044e-05, 9.491600000000044e-05, 9.454200000000301e-05, 9.536100000000214e-05, 9.536100000000214e-05, 9.519400000000677e-05, 9.540300000000085e-05, 9.458300000000225e-05, 9.526399999999768e-05, 9.461100000000139e-05, 9.515199999999419e-05, 9.490300000000035e-05, 9.513900000000103e-05, 9.45130000000044e-05, 9.46530000000001e-05, 9.472199999999847e-05, 9.481900000000293e-05, 9.479200000000326e-05, 9.504200000000351e-05, 9.462500000000096e-05, 9.541700000000042e-05, 9.494499999999906e-05, 9.506999999999571e-05, 9.456899999999574e-05, 9.518099999999974e-05, 9.513800000000155e-05, 9.523599999999854e-05, 9.495900000000557e-05, 9.461099999999445e-05, 9.491699999999992e-05]</msg>
<status status="PASS" starttime="20201030 18:28:47.742" endtime="20201030 18:28:47.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.730" endtime="20201030 18:28:47.748"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.758" endtime="20201030 18:28:47.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.753" endtime="20201030 18:28:47.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.751" endtime="20201030 18:28:47.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.176" endtime="20201030 18:28:47.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.175" endtime="20201030 18:28:47.783"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.806" endtime="20201030 18:28:47.830"></status>
</kw>
<msg timestamp="20201030 18:28:47.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.803" endtime="20201030 18:28:47.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.833" endtime="20201030 18:28:47.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.840" endtime="20201030 18:28:47.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.795" endtime="20201030 18:28:47.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.790" endtime="20201030 18:28:47.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.863" endtime="20201030 18:28:48.212"></status>
</kw>
<msg timestamp="20201030 18:28:48.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042121236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042217444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.860" endtime="20201030 18:28:48.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042121236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042217444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.221" endtime="20201030 18:28:48.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.240" endtime="20201030 18:28:48.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.853" endtime="20201030 18:28:48.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.848" endtime="20201030 18:28:48.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.258" level="INFO">${RESULT} = [{'diff': 9.62080000000004e-05}, {'diff': 9.611100000000289e-05}, {'diff': 9.57079999999999e-05}, {'diff': 9.561099999999545e-05}, {'diff': 9.547199999999922e-05}, {'diff': 9.609699999999638e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:48.249" endtime="20201030 18:28:48.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:48.267" level="INFO">${ACCURACY} = {'diff': [9.62080000000004e-05, 9.611100000000289e-05, 9.57079999999999e-05, 9.561099999999545e-05, 9.547199999999922e-05, 9.609699999999638e-05, 9.645800000000065e-05, 9.562500000000196e-05, 9.569499...</msg>
<status status="PASS" starttime="20201030 18:28:48.260" endtime="20201030 18:28:48.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.278" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 18:28:48.276" endtime="20201030 18:28:48.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.284" level="INFO">VALUE: [9.62080000000004e-05, 9.611100000000289e-05, 9.57079999999999e-05, 9.561099999999545e-05, 9.547199999999922e-05, 9.609699999999638e-05, 9.645800000000065e-05, 9.562500000000196e-05, 9.569499999999981e-05, 9.640300000000185e-05, 9.623699999999902e-05, 9.559699999999588e-05, 9.569499999999981e-05, 9.594400000000058e-05, 9.629199999999782e-05, 9.638900000000228e-05, 9.547199999999922e-05, 9.576399999999818e-05, 9.593000000000101e-05, 9.605500000000461e-05, 9.629199999999782e-05, 9.59729999999992e-05, 9.576399999999818e-05, 9.641600000000194e-05, 9.593000000000101e-05, 9.622199999999997e-05, 9.622199999999997e-05, 9.643000000000151e-05, 9.594500000000006e-05, 9.605600000000408e-05, 9.577800000000469e-05, 9.588799999999537e-05, 9.561099999999545e-05, 9.587499999999527e-05, 9.577699999999828e-05, 9.60000000000058e-05, 9.627799999999825e-05, 9.63059999999974e-05, 9.62080000000004e-05, 9.618000000000126e-05, 9.59859999999993e-05, 9.577799999999775e-05, 9.555599999999664e-05, 9.597199999999972e-05, 9.588900000000178e-05, 9.555600000000358e-05, 9.562500000000196e-05, 9.562499999999502e-05, 9.576399999999818e-05, 9.590300000000135e-05]</msg>
<status status="PASS" starttime="20201030 18:28:48.281" endtime="20201030 18:28:48.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.269" endtime="20201030 18:28:48.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.298" endtime="20201030 18:28:48.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.292" endtime="20201030 18:28:48.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.290" endtime="20201030 18:28:48.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.785" endtime="20201030 18:28:48.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.784" endtime="20201030 18:28:48.324"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.347" endtime="20201030 18:28:48.369"></status>
</kw>
<msg timestamp="20201030 18:28:48.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.344" endtime="20201030 18:28:48.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.373" endtime="20201030 18:28:48.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.379" endtime="20201030 18:28:48.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.336" endtime="20201030 18:28:48.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.330" endtime="20201030 18:28:48.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.404" endtime="20201030 18:28:48.753"></status>
</kw>
<msg timestamp="20201030 18:28:48.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04057625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040673639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:48.401" endtime="20201030 18:28:48.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04057625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040673639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:48.763" endtime="20201030 18:28:48.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.782" endtime="20201030 18:28:48.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.393" endtime="20201030 18:28:48.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.388" endtime="20201030 18:28:48.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.799" level="INFO">${RESULT} = [{'diff': 9.738899999999634e-05}, {'diff': 9.723600000000054e-05}, {'diff': 9.711100000000389e-05}, {'diff': 9.64859999999998e-05}, {'diff': 9.709699999999738e-05}, {'diff': 9.69860000000003e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:48.790" endtime="20201030 18:28:48.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:48.810" level="INFO">${ACCURACY} = {'diff': [9.738899999999634e-05, 9.723600000000054e-05, 9.711100000000389e-05, 9.64859999999998e-05, 9.709699999999738e-05, 9.69860000000003e-05, 9.662500000000296e-05, 9.7027999999999e-05, 9.70969999...</msg>
<status status="PASS" starttime="20201030 18:28:48.801" endtime="20201030 18:28:48.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.821" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 18:28:48.819" endtime="20201030 18:28:48.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.827" level="INFO">VALUE: [9.738899999999634e-05, 9.723600000000054e-05, 9.711100000000389e-05, 9.64859999999998e-05, 9.709699999999738e-05, 9.69860000000003e-05, 9.662500000000296e-05, 9.7027999999999e-05, 9.709699999999738e-05, 9.663900000000253e-05, 9.684699999999713e-05, 9.679099999999885e-05, 9.690300000000235e-05, 9.713800000000355e-05, 9.699999999999986e-05, 9.718000000000226e-05, 9.69860000000003e-05, 9.741699999999548e-05, 9.73059999999984e-05, 9.737499999999677e-05, 9.741700000000242e-05, 9.691600000000244e-05, 9.649999999999936e-05, 9.684699999999713e-05, 9.693100000000149e-05, 9.730499999999892e-05, 9.644500000000056e-05, 9.726399999999968e-05, 9.731900000000543e-05, 9.716700000000217e-05, 9.70409999999991e-05, 9.713900000000303e-05, 9.658299999999731e-05, 9.676399999999918e-05, 9.743099999999505e-05, 9.712500000000346e-05, 9.654200000000501e-05, 9.687499999999627e-05, 9.66660000000022e-05, 9.707000000000465e-05, 9.715299999999566e-05, 9.733299999999806e-05, 9.738899999999634e-05, 9.688899999999584e-05, 9.687500000000321e-05, 9.676400000000612e-05, 9.723600000000054e-05, 9.723600000000054e-05, 9.701399999999943e-05, 9.684700000000407e-05]</msg>
<status status="PASS" starttime="20201030 18:28:48.824" endtime="20201030 18:28:48.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.812" endtime="20201030 18:28:48.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.840" endtime="20201030 18:28:48.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.835" endtime="20201030 18:28:48.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.833" endtime="20201030 18:28:48.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.326" endtime="20201030 18:28:48.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.325" endtime="20201030 18:28:48.865"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.888" endtime="20201030 18:28:48.910"></status>
</kw>
<msg timestamp="20201030 18:28:48.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.885" endtime="20201030 18:28:48.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.914" endtime="20201030 18:28:48.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.920" endtime="20201030 18:28:48.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.878" endtime="20201030 18:28:48.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.872" endtime="20201030 18:28:48.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.944" endtime="20201030 18:28:49.293"></status>
</kw>
<msg timestamp="20201030 18:28:49.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040484861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040582861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.941" endtime="20201030 18:28:49.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040484861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040582861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.303" endtime="20201030 18:28:49.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.322" endtime="20201030 18:28:49.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.933" endtime="20201030 18:28:49.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.929" endtime="20201030 18:28:49.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.339" level="INFO">${RESULT} = [{'diff': 9.800000000000086e-05}, {'diff': 9.844500000000256e-05}, {'diff': 9.815199999999719e-05}, {'diff': 9.787500000000421e-05}, {'diff': 9.765199999999669e-05}, {'diff': 9.758299999999831e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:49.330" endtime="20201030 18:28:49.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:49.351" level="INFO">${ACCURACY} = {'diff': [9.800000000000086e-05, 9.844500000000256e-05, 9.815199999999719e-05, 9.787500000000421e-05, 9.765199999999669e-05, 9.758299999999831e-05, 9.838900000000428e-05, 9.750000000000036e-05, 9.8278...</msg>
<status status="PASS" starttime="20201030 18:28:49.341" endtime="20201030 18:28:49.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.362" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 18:28:49.360" endtime="20201030 18:28:49.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.367" level="INFO">VALUE: [9.800000000000086e-05, 9.844500000000256e-05, 9.815199999999719e-05, 9.787500000000421e-05, 9.765199999999669e-05, 9.758299999999831e-05, 9.838900000000428e-05, 9.750000000000036e-05, 9.827800000000025e-05, 9.8028e-05, 9.809699999999838e-05, 9.777700000000028e-05, 9.847200000000222e-05, 9.790299999999641e-05, 9.818100000000274e-05, 9.812499999999752e-05, 9.759699999999788e-05, 9.836100000000514e-05, 9.772299999999401e-05, 9.755599999999864e-05, 9.780500000000636e-05, 9.780499999999942e-05, 9.780600000000583e-05, 9.81530000000036e-05, 9.8028e-05, 9.759700000000482e-05, 9.841699999999648e-05, 9.775000000000061e-05, 9.811099999999795e-05, 9.822300000000145e-05, 9.840299999999691e-05, 9.763900000000353e-05, 9.827800000000025e-05, 9.791600000000344e-05, 9.77080000000019e-05, 9.833400000000547e-05, 9.783299999999856e-05, 9.761100000000439e-05, 9.805599999999914e-05, 9.813899999999709e-05, 9.78479999999976e-05, 9.784699999999813e-05, 9.763900000000353e-05, 9.840299999999691e-05, 9.754199999999907e-05, 9.822200000000197e-05, 9.804199999999957e-05, 9.834699999999863e-05, 9.78609999999977e-05, 9.83609999999982e-05]</msg>
<status status="PASS" starttime="20201030 18:28:49.364" endtime="20201030 18:28:49.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.352" endtime="20201030 18:28:49.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:49.380" endtime="20201030 18:28:49.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.376" endtime="20201030 18:28:49.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.373" endtime="20201030 18:28:49.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.867" endtime="20201030 18:28:49.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.866" endtime="20201030 18:28:49.406"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.431" endtime="20201030 18:28:49.454"></status>
</kw>
<msg timestamp="20201030 18:28:49.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.427" endtime="20201030 18:28:49.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.458" endtime="20201030 18:28:49.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.464" endtime="20201030 18:28:49.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.419" endtime="20201030 18:28:49.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.413" endtime="20201030 18:28:49.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.488" endtime="20201030 18:28:49.839"></status>
</kw>
<msg timestamp="20201030 18:28:49.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042693542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042792167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.485" endtime="20201030 18:28:49.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042693542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042792167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.848" endtime="20201030 18:28:49.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.867" endtime="20201030 18:28:49.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.478" endtime="20201030 18:28:49.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.473" endtime="20201030 18:28:49.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.885" level="INFO">${RESULT} = [{'diff': 9.862499999999802e-05}, {'diff': 9.904200000000057e-05}, {'diff': 9.913799999999862e-05}, {'diff': 9.883299999999956e-05}, {'diff': 9.943099999999705e-05}, {'diff': 9.919500000000331e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:49.876" endtime="20201030 18:28:49.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:49.894" level="INFO">${ACCURACY} = {'diff': [9.862499999999802e-05, 9.904200000000057e-05, 9.913799999999862e-05, 9.883299999999956e-05, 9.943099999999705e-05, 9.919500000000331e-05, 9.862499999999802e-05, 9.869500000000281e-05, 9.9110...</msg>
<status status="PASS" starttime="20201030 18:28:49.887" endtime="20201030 18:28:49.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.905" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 18:28:49.903" endtime="20201030 18:28:49.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.910" level="INFO">VALUE: [9.862499999999802e-05, 9.904200000000057e-05, 9.913799999999862e-05, 9.883299999999956e-05, 9.943099999999705e-05, 9.919500000000331e-05, 9.862499999999802e-05, 9.869500000000281e-05, 9.911099999999895e-05, 9.869500000000281e-05, 9.92080000000034e-05, 9.897299999999526e-05, 9.904200000000057e-05, 9.90139999999945e-05, 9.906999999999971e-05, 9.923600000000254e-05, 9.904200000000057e-05, 9.9415999999998e-05, 9.91809999999968e-05, 9.888899999999784e-05, 9.902799999999407e-05, 9.895800000000315e-05, 9.948700000000227e-05, 9.858299999999931e-05, 9.925000000000211e-05, 9.922199999999604e-05, 9.85280000000005e-05, 9.861099999999845e-05, 9.91530000000046e-05, 9.926400000000168e-05, 9.88330000000065e-05, 9.894499999999612e-05, 9.906900000000024e-05, 9.937499999999877e-05, 9.872199999999554e-05, 9.866700000000367e-05, 9.854200000000007e-05, 9.89860000000023e-05, 9.929200000000082e-05, 9.908299999999981e-05, 9.926400000000168e-05, 9.920799999999647e-05, 9.854200000000007e-05, 9.922200000000297e-05, 9.873600000000204e-05, 9.869400000000333e-05, 9.85280000000005e-05, 9.883299999999956e-05, 9.92359999999956e-05, 9.872200000000247e-05]</msg>
<status status="PASS" starttime="20201030 18:28:49.907" endtime="20201030 18:28:49.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.896" endtime="20201030 18:28:49.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:49.923" endtime="20201030 18:28:49.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.918" endtime="20201030 18:28:49.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.916" endtime="20201030 18:28:49.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.408" endtime="20201030 18:28:49.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.407" endtime="20201030 18:28:49.948"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.970" endtime="20201030 18:28:49.993"></status>
</kw>
<msg timestamp="20201030 18:28:49.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.967" endtime="20201030 18:28:49.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.996" endtime="20201030 18:28:50.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.002" endtime="20201030 18:28:50.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.960" endtime="20201030 18:28:50.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.954" endtime="20201030 18:28:50.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.026" endtime="20201030 18:28:50.363"></status>
</kw>
<msg timestamp="20201030 18:28:50.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040944125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041044486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.022" endtime="20201030 18:28:50.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040944125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041044486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.374" endtime="20201030 18:28:50.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.394" endtime="20201030 18:28:50.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.015" endtime="20201030 18:28:50.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.010" endtime="20201030 18:28:50.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:50.412" level="INFO">${RESULT} = [{'diff': 0.0001003610000000002}, {'diff': 0.0001001809999999978}, {'diff': 0.00010024999999999618}, {'diff': 9.993100000000449e-05}, {'diff': 0.00010008300000000081}, {'diff': 0.00010007000000000071}...</msg>
<status status="PASS" starttime="20201030 18:28:50.403" endtime="20201030 18:28:50.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:50.421" level="INFO">${ACCURACY} = {'diff': [0.0001003610000000002, 0.0001001809999999978, 0.00010024999999999618, 9.993100000000449e-05, 0.00010008300000000081, 0.00010007000000000071, 0.00010031900000000149, 9.944499999999662e-05, 0....</msg>
<status status="PASS" starttime="20201030 18:28:50.414" endtime="20201030 18:28:50.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.432" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 18:28:50.430" endtime="20201030 18:28:50.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.438" level="INFO">VALUE: [0.0001003610000000002, 0.0001001809999999978, 0.00010024999999999618, 9.993100000000449e-05, 0.00010008300000000081, 0.00010007000000000071, 0.00010031900000000149, 9.944499999999662e-05, 0.00010029199999999489, 9.979099999999491e-05, 9.979099999999491e-05, 9.950000000000236e-05, 9.962499999999902e-05, 0.00010013899999999909, 0.00010045799999999772, 0.00010043000000000551, 9.958300000000031e-05, 0.00010018100000000474, 9.967999999999783e-05, 0.00010005500000000167, 9.973600000000304e-05, 9.96809999999973e-05, 0.00010025000000000311, 9.977800000000175e-05, 9.982000000000046e-05, 9.999999999999593e-05, 0.00010045799999999772, 0.00010027799999999532, 0.00010013899999999909, 9.954200000000107e-05, 0.00010027800000000225, 9.98609999999997e-05, 0.0001001809999999978, 9.992999999999808e-05, 0.00010002799999999507, 9.98060000000009e-05, 9.991699999999798e-05, 9.954200000000107e-05, 9.968100000000424e-05, 9.969499999999687e-05, 9.970799999999697e-05, 0.00010045900000000413, 0.00010027800000000225, 0.00010022199999999704, 9.967999999999783e-05, 0.00010004199999999464, 0.0001000139999999955, 0.00010027800000000225, 0.00010044500000000456, 9.979100000000185e-05]</msg>
<status status="PASS" starttime="20201030 18:28:50.434" endtime="20201030 18:28:50.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.423" endtime="20201030 18:28:50.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.453" endtime="20201030 18:28:50.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.446" endtime="20201030 18:28:50.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.444" endtime="20201030 18:28:50.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.950" endtime="20201030 18:28:50.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.949" endtime="20201030 18:28:50.478"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.501" endtime="20201030 18:28:50.521"></status>
</kw>
<msg timestamp="20201030 18:28:50.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.498" endtime="20201030 18:28:50.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.525" endtime="20201030 18:28:50.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.531" endtime="20201030 18:28:50.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.490" endtime="20201030 18:28:50.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.485" endtime="20201030 18:28:50.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.555" endtime="20201030 18:28:50.891"></status>
</kw>
<msg timestamp="20201030 18:28:50.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040119083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040220056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.551" endtime="20201030 18:28:50.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040119083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040220056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.901" endtime="20201030 18:28:50.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.919" endtime="20201030 18:28:50.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.544" endtime="20201030 18:28:50.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.539" endtime="20201030 18:28:50.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:50.936" level="INFO">${RESULT} = [{'diff': 0.00010097299999999726}, {'diff': 0.00010063899999999959}, {'diff': 0.00010138900000000034}, {'diff': 0.00010113900000000009}, {'diff': 0.00010076400000000318}, {'diff': 0.000100457999999997...</msg>
<status status="PASS" starttime="20201030 18:28:50.927" endtime="20201030 18:28:50.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:50.946" level="INFO">${ACCURACY} = {'diff': [0.00010097299999999726, 0.00010063899999999959, 0.00010138900000000034, 0.00010113900000000009, 0.00010076400000000318, 0.00010045799999999772, 0.00010087500000000027, 0.00010124999999999718...</msg>
<status status="PASS" starttime="20201030 18:28:50.938" endtime="20201030 18:28:50.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.957" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 18:28:50.955" endtime="20201030 18:28:50.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.963" level="INFO">VALUE: [0.00010097299999999726, 0.00010063899999999959, 0.00010138900000000034, 0.00010113900000000009, 0.00010076400000000318, 0.00010045799999999772, 0.00010087500000000027, 0.00010124999999999718, 0.00010144400000000608, 0.00010111100000000095, 0.0001011809999999988, 0.00010098699999999683, 0.00010075000000000361, 0.00010116599999999976, 0.00010082000000000146, 0.00010083300000000156, 0.00010082000000000146, 0.00010131899999999555, 0.00010100000000000386, 0.00010122299999999751, 0.00010095899999999769, 0.00010101299999999702, 0.0001010689999999953, 0.0001010689999999953, 0.000100513999999996, 0.00010059700000000088, 0.00010138900000000034, 0.00010125000000000411, 0.00010142999999999958, 0.00010093099999999855, 0.00010138900000000034, 0.00010129200000000282, 0.00010055600000000164, 0.00010120799999999847, 0.00010122200000000497, 0.00010099999999999693, 0.00010132000000000196, 0.00010109700000000138, 0.00010119499999999837, 0.00010090299999999941, 0.00010120799999999847, 0.00010050000000000336, 0.00010112500000000052, 0.00010106900000000224, 0.00010055600000000164, 0.00010145900000000513, 0.00010095799999999822, 0.00010077800000000275, 0.00010093099999999855, 0.0001009159999999995]</msg>
<status status="PASS" starttime="20201030 18:28:50.960" endtime="20201030 18:28:50.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.948" endtime="20201030 18:28:50.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.980" endtime="20201030 18:28:51.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.976" endtime="20201030 18:28:51.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.973" endtime="20201030 18:28:51.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.480" endtime="20201030 18:28:51.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.479" endtime="20201030 18:28:51.005"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.028" endtime="20201030 18:28:51.049"></status>
</kw>
<msg timestamp="20201030 18:28:51.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.025" endtime="20201030 18:28:51.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.052" endtime="20201030 18:28:51.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.058" endtime="20201030 18:28:51.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.017" endtime="20201030 18:28:51.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.012" endtime="20201030 18:28:51.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.082" endtime="20201030 18:28:51.420"></status>
</kw>
<msg timestamp="20201030 18:28:51.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039997069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040098667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.079" endtime="20201030 18:28:51.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039997069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040098667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.429" endtime="20201030 18:28:51.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.448" endtime="20201030 18:28:51.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.071" endtime="20201030 18:28:51.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.067" endtime="20201030 18:28:51.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.466" level="INFO">${RESULT} = [{'diff': 0.00010159799999999441}, {'diff': 0.00010207000000000271}, {'diff': 0.0001018610000000017}, {'diff': 0.00010197199999999879}, {'diff': 0.00010163900000000059}, {'diff': 0.0001022079999999994...</msg>
<status status="PASS" starttime="20201030 18:28:51.457" endtime="20201030 18:28:51.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:51.478" level="INFO">${ACCURACY} = {'diff': [0.00010159799999999441, 0.00010207000000000271, 0.0001018610000000017, 0.00010197199999999879, 0.00010163900000000059, 0.00010220799999999947, 0.00010161100000000145, 0.0001023610000000022, ...</msg>
<status status="PASS" starttime="20201030 18:28:51.469" endtime="20201030 18:28:51.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.489" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 18:28:51.487" endtime="20201030 18:28:51.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.495" level="INFO">VALUE: [0.00010159799999999441, 0.00010207000000000271, 0.0001018610000000017, 0.00010197199999999879, 0.00010163900000000059, 0.00010220799999999947, 0.00010161100000000145, 0.0001023610000000022, 0.0001022359999999986, 0.00010220799999999947, 0.00010215300000000066, 0.00010177799999999682, 0.00010244400000000015, 0.0001021809999999998, 0.00010222199999999904, 0.00010244400000000015, 0.00010200000000000486, 0.0001014860000000048, 0.00010163900000000059, 0.0001016939999999994, 0.00010194499999999912, 0.00010216700000000023, 0.00010181899999999605, 0.00010211200000000142, 0.00010155500000000317, 0.00010179099999999691, 0.00010209700000000238, 0.00010215300000000066, 0.00010218000000000033, 0.0001023060000000034, 0.00010233300000000306, 0.00010243000000000058, 0.00010193099999999955, 0.00010197199999999879, 0.00010227799999999732, 0.0001018610000000017, 0.00010226399999999775, 0.00010190200000000094, 0.00010209699999999544, 0.00010212500000000152, 0.00010194499999999912, 0.00010205499999999673, 0.0001019160000000005, 0.00010197199999999879, 0.00010243000000000058, 0.00010249999999999843, 0.00010162499999999408, 0.00010218000000000033, 0.00010231999999999603, 0.00010175000000000461]</msg>
<status status="PASS" starttime="20201030 18:28:51.492" endtime="20201030 18:28:51.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.480" endtime="20201030 18:28:51.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:51.508" endtime="20201030 18:28:51.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.504" endtime="20201030 18:28:51.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.501" endtime="20201030 18:28:51.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.007" endtime="20201030 18:28:51.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.006" endtime="20201030 18:28:51.533"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.556" endtime="20201030 18:28:51.577"></status>
</kw>
<msg timestamp="20201030 18:28:51.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.553" endtime="20201030 18:28:51.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.580" endtime="20201030 18:28:51.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.586" endtime="20201030 18:28:51.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.546" endtime="20201030 18:28:51.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.540" endtime="20201030 18:28:51.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.610" endtime="20201030 18:28:51.953"></status>
</kw>
<msg timestamp="20201030 18:28:51.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039981139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040083611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.606" endtime="20201030 18:28:51.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039981139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040083611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.963" endtime="20201030 18:28:51.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.981" endtime="20201030 18:28:51.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.599" endtime="20201030 18:28:51.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.595" endtime="20201030 18:28:51.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.998" level="INFO">${RESULT} = [{'diff': 0.00010247199999999929}, {'diff': 0.0001026810000000003}, {'diff': 0.00010330499999999798}, {'diff': 0.00010311099999999601}, {'diff': 0.00010298599999999936}, {'diff': 0.0001031940000000009...</msg>
<status status="PASS" starttime="20201030 18:28:51.989" endtime="20201030 18:28:51.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:52.007" level="INFO">${ACCURACY} = {'diff': [0.00010247199999999929, 0.0001026810000000003, 0.00010330499999999798, 0.00010311099999999601, 0.00010298599999999936, 0.0001031940000000009, 0.00010311100000000295, 0.000103416000000002, 0....</msg>
<status status="PASS" starttime="20201030 18:28:52.000" endtime="20201030 18:28:52.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.018" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 18:28:52.016" endtime="20201030 18:28:52.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.024" level="INFO">VALUE: [0.00010247199999999929, 0.0001026810000000003, 0.00010330499999999798, 0.00010311099999999601, 0.00010298599999999936, 0.0001031940000000009, 0.00010311100000000295, 0.000103416000000002, 0.0001030559999999972, 0.0001025689999999968, 0.00010315300000000166, 0.00010255500000000417, 0.00010259799999999542, 0.000103028000000005, 0.00010249999999999843, 0.00010311099999999601, 0.00010293100000000055, 0.00010316700000000123, 0.00010302799999999807, 0.00010302799999999807, 0.00010298599999999936, 0.00010263899999999465, 0.00010272199999999954, 0.00010309699999999644, 0.00010263900000000159, 0.00010259800000000235, 0.00010249999999999843, 0.0001026810000000003, 0.00010331900000000449, 0.00010288900000000184, 0.00010279199999999739, 0.00010274999999999868, 0.00010313899999999515, 0.00010261100000000245, 0.00010261100000000245, 0.00010345800000000072, 0.00010245800000000665, 0.00010341700000000148, 0.0001030139999999985, 0.0001027359999999991, 0.00010294400000000065, 0.00010261100000000245, 0.00010275000000000561, 0.00010273699999999858, 0.00010298599999999936, 0.00010327799999999832, 0.00010308299999999687, 0.00010293100000000055, 0.00010297199999999979, 0.00010249999999999843]</msg>
<status status="PASS" starttime="20201030 18:28:52.021" endtime="20201030 18:28:52.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.009" endtime="20201030 18:28:52.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.036" endtime="20201030 18:28:52.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.032" endtime="20201030 18:28:52.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.029" endtime="20201030 18:28:52.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.536" endtime="20201030 18:28:52.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.534" endtime="20201030 18:28:52.061"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.084" endtime="20201030 18:28:52.106"></status>
</kw>
<msg timestamp="20201030 18:28:52.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.081" endtime="20201030 18:28:52.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.110" endtime="20201030 18:28:52.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.116" endtime="20201030 18:28:52.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.074" endtime="20201030 18:28:52.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.068" endtime="20201030 18:28:52.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.139" endtime="20201030 18:28:52.477"></status>
</kw>
<msg timestamp="20201030 18:28:52.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041390278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041494153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.136" endtime="20201030 18:28:52.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041390278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041494153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.486" endtime="20201030 18:28:52.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.505" endtime="20201030 18:28:52.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.129" endtime="20201030 18:28:52.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.124" endtime="20201030 18:28:52.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:52.523" level="INFO">${RESULT} = [{'diff': 0.00010387499999999633}, {'diff': 0.00010401300000000002}, {'diff': 0.0001043060000000054}, {'diff': 0.00010384699999999719}, {'diff': 0.00010354199999999814}, {'diff': 0.0001040279999999990...</msg>
<status status="PASS" starttime="20201030 18:28:52.514" endtime="20201030 18:28:52.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:52.533" level="INFO">${ACCURACY} = {'diff': [0.00010387499999999633, 0.00010401300000000002, 0.0001043060000000054, 0.00010384699999999719, 0.00010354199999999814, 0.00010402799999999907, 0.00010404099999999916, 0.00010419500000000137,...</msg>
<status status="PASS" starttime="20201030 18:28:52.525" endtime="20201030 18:28:52.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.544" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 18:28:52.542" endtime="20201030 18:28:52.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.549" level="INFO">VALUE: [0.00010387499999999633, 0.00010401300000000002, 0.0001043060000000054, 0.00010384699999999719, 0.00010354199999999814, 0.00010402799999999907, 0.00010404099999999916, 0.00010419500000000137, 0.00010370800000000097, 0.0001043610000000042, 0.00010393100000000155, 0.00010380499999999848, 0.00010369500000000087, 0.00010363900000000259, 0.00010402799999999907, 0.00010361099999999651, 0.00010406999999999778, 0.00010441700000000248, 0.0001044019999999965, 0.00010363900000000259, 0.00010413900000000309, 0.00010359800000000335, 0.00010384700000000413, 0.00010381900000000499, 0.00010393099999999461, 0.00010404199999999864, 0.00010445800000000172, 0.00010443000000000258, 0.00010416699999999529, 0.00010386099999999676, 0.00010381999999999753, 0.00010408299999999787, 0.00010386199999999624, 0.0001040139999999995, 0.00010384699999999719, 0.00010388900000000284, 0.00010391599999999557, 0.00010354199999999814, 0.00010362499999999608, 0.00010359799999999642, 0.00010361099999999651, 0.00010402699999999959, 0.00010374999999999968, 0.00010433299999999812, 0.00010352699999999909, 0.00010395800000000122, 0.0001040139999999995, 0.00010427799999999932, 0.00010386099999999676, 0.00010413899999999615]</msg>
<status status="PASS" starttime="20201030 18:28:52.546" endtime="20201030 18:28:52.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.534" endtime="20201030 18:28:52.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.563" endtime="20201030 18:28:52.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.557" endtime="20201030 18:28:52.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.555" endtime="20201030 18:28:52.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.063" endtime="20201030 18:28:52.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.062" endtime="20201030 18:28:52.588"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.611" endtime="20201030 18:28:52.632"></status>
</kw>
<msg timestamp="20201030 18:28:52.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.608" endtime="20201030 18:28:52.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.635" endtime="20201030 18:28:52.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.641" endtime="20201030 18:28:52.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.601" endtime="20201030 18:28:52.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.595" endtime="20201030 18:28:52.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.665" endtime="20201030 18:28:53.002"></status>
</kw>
<msg timestamp="20201030 18:28:53.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03975225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039856847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:52.661" endtime="20201030 18:28:53.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03975225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039856847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:53.011" endtime="20201030 18:28:53.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.029" endtime="20201030 18:28:53.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.654" endtime="20201030 18:28:53.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.650" endtime="20201030 18:28:53.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:53.047" level="INFO">${RESULT} = [{'diff': 0.00010459699999999794}, {'diff': 0.00010462500000000402}, {'diff': 0.00010512499999999758}, {'diff': 0.00010522200000000204}, {'diff': 0.00010548600000000186}, {'diff': 0.000104554999999999...</msg>
<status status="PASS" starttime="20201030 18:28:53.038" endtime="20201030 18:28:53.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:53.057" level="INFO">${ACCURACY} = {'diff': [0.00010459699999999794, 0.00010462500000000402, 0.00010512499999999758, 0.00010522200000000204, 0.00010548600000000186, 0.00010455499999999923, 0.0001045559999999987, 0.0001045559999999987, ...</msg>
<status status="PASS" starttime="20201030 18:28:53.049" endtime="20201030 18:28:53.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.068" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 18:28:53.066" endtime="20201030 18:28:53.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.073" level="INFO">VALUE: [0.00010459699999999794, 0.00010462500000000402, 0.00010512499999999758, 0.00010522200000000204, 0.00010548600000000186, 0.00010455499999999923, 0.0001045559999999987, 0.0001045559999999987, 0.00010531899999999955, 0.00010473699999999364, 0.00010472200000000154, 0.00010524999999999424, 0.00010458299999999837, 0.00010548600000000186, 0.00010540299999999697, 0.0001047360000000011, 0.00010544500000000262, 0.0001047360000000011, 0.00010462500000000402, 0.000105208999999995, 0.00010508299999999887, 0.00010480599999999896, 0.00010488900000000384, 0.0001051810000000028, 0.00010497200000000179, 0.00010470800000000197, 0.00010541699999999654, 0.0001052360000000016, 0.00010467999999999589, 0.00010495900000000169, 0.00010461099999999751, 0.0001050559999999992, 0.00010511100000000495, 0.00010498600000000136, 0.00010540200000000444, 0.00010530599999999946, 0.00010461099999999751, 0.00010543099999999611, 0.0001050140000000005, 0.00010479099999999991, 0.000104514, 0.00010511100000000495, 0.00010525000000000118, 0.00010493000000000308, 0.0001050559999999992, 0.00010512499999999758, 0.00010513899999999715, 0.000104514, 0.00010511099999999801, 0.00010531999999999903]</msg>
<status status="PASS" starttime="20201030 18:28:53.070" endtime="20201030 18:28:53.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.059" endtime="20201030 18:28:53.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:53.086" endtime="20201030 18:28:53.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.082" endtime="20201030 18:28:53.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.079" endtime="20201030 18:28:53.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.591" endtime="20201030 18:28:53.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.589" endtime="20201030 18:28:53.111"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.134" endtime="20201030 18:28:53.154"></status>
</kw>
<msg timestamp="20201030 18:28:53.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.131" endtime="20201030 18:28:53.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.158" endtime="20201030 18:28:53.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.164" endtime="20201030 18:28:53.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.123" endtime="20201030 18:28:53.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.117" endtime="20201030 18:28:53.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.187" endtime="20201030 18:28:53.528"></status>
</kw>
<msg timestamp="20201030 18:28:53.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039633125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039738778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.184" endtime="20201030 18:28:53.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039633125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039738778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.537" endtime="20201030 18:28:53.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.556" endtime="20201030 18:28:53.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.177" endtime="20201030 18:28:53.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.172" endtime="20201030 18:28:53.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:53.574" level="INFO">${RESULT} = [{'diff': 0.00010565300000000416}, {'diff': 0.00010580599999999996}, {'diff': 0.00010616599999999782}, {'diff': 0.0001057360000000021}, {'diff': 0.000105514000000001}, {'diff': 0.00010569500000000287}...</msg>
<status status="PASS" starttime="20201030 18:28:53.565" endtime="20201030 18:28:53.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:53.585" level="INFO">${ACCURACY} = {'diff': [0.00010565300000000416, 0.00010580599999999996, 0.00010616599999999782, 0.0001057360000000021, 0.000105514000000001, 0.00010569500000000287, 0.00010634699999999969, 0.00010562499999999808, 0...</msg>
<status status="PASS" starttime="20201030 18:28:53.576" endtime="20201030 18:28:53.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.596" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 18:28:53.594" endtime="20201030 18:28:53.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.602" level="INFO">VALUE: [0.00010565300000000416, 0.00010580599999999996, 0.00010616599999999782, 0.0001057360000000021, 0.000105514000000001, 0.00010569500000000287, 0.00010634699999999969, 0.00010562499999999808, 0.00010591700000000398, 0.0001057360000000021, 0.0001056940000000034, 0.00010627700000000184, 0.00010622200000000304, 0.00010569499999999593, 0.00010627700000000184, 0.00010606999999999978, 0.00010618099999999686, 0.00010570800000000297, 0.0001055559999999997, 0.00010629200000000089, 0.0001058889999999979, 0.00010609699999999944, 0.00010584699999999919, 0.00010619499999999643, 0.00010554200000000014, 0.00010615299999999772, 0.00010554100000000066, 0.00010618000000000433, 0.00010622300000000251, 0.00010641699999999754, 0.00010579200000000039, 0.00010611199999999849, 0.00010584699999999919, 0.00010582000000000646, 0.00010598600000000236, 0.00010543100000000305, 0.00010626400000000175, 0.00010563900000000459, 0.00010612499999999858, 0.00010554100000000066, 0.00010580599999999996, 0.00010608399999999935, 0.00010630500000000098, 0.00010609699999999944, 0.00010587499999999833, 0.00010579200000000039, 0.00010570900000000244, 0.00010643100000000405, 0.0001063889999999984, 0.00010544499999999568]</msg>
<status status="PASS" starttime="20201030 18:28:53.599" endtime="20201030 18:28:53.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.587" endtime="20201030 18:28:53.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:53.614" endtime="20201030 18:28:53.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.610" endtime="20201030 18:28:53.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.607" endtime="20201030 18:28:53.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.113" endtime="20201030 18:28:53.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.112" endtime="20201030 18:28:53.639"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.662" endtime="20201030 18:28:53.684"></status>
</kw>
<msg timestamp="20201030 18:28:53.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.659" endtime="20201030 18:28:53.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.687" endtime="20201030 18:28:53.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.694" endtime="20201030 18:28:53.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.652" endtime="20201030 18:28:53.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.646" endtime="20201030 18:28:53.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.717" endtime="20201030 18:28:54.056"></status>
</kw>
<msg timestamp="20201030 18:28:54.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0401245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040231097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:53.714" endtime="20201030 18:28:54.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0401245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040231097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:54.066" endtime="20201030 18:28:54.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.085" endtime="20201030 18:28:54.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.706" endtime="20201030 18:28:54.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.702" endtime="20201030 18:28:54.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:54.102" level="INFO">${RESULT} = [{'diff': 0.00010659699999999994}, {'diff': 0.00010681999999999359}, {'diff': 0.0001072360000000036}, {'diff': 0.00010729199999999495}, {'diff': 0.00010687499999999933}, {'diff': 0.0001071939999999979...</msg>
<status status="PASS" starttime="20201030 18:28:54.093" endtime="20201030 18:28:54.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:54.111" level="INFO">${ACCURACY} = {'diff': [0.00010659699999999994, 0.00010681999999999359, 0.0001072360000000036, 0.00010729199999999495, 0.00010687499999999933, 0.00010719399999999796, 0.00010718000000000533, 0.00010698600000000336,...</msg>
<status status="PASS" starttime="20201030 18:28:54.104" endtime="20201030 18:28:54.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.122" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 18:28:54.120" endtime="20201030 18:28:54.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.127" level="INFO">VALUE: [0.00010659699999999994, 0.00010681999999999359, 0.0001072360000000036, 0.00010729199999999495, 0.00010687499999999933, 0.00010719399999999796, 0.00010718000000000533, 0.00010698600000000336, 0.0001068889999999989, 0.00010672300000000301, 0.00010652800000000157, 0.00010670799999999703, 0.00010730500000000198, 0.00010716699999999829, 0.00010698699999999589, 0.00010732000000000103, 0.00010694399999999771, 0.00010744399999999821, 0.00010715299999999872, 0.00010651399999999506, 0.00010666700000000473, 0.00010702800000000207, 0.00010684700000000019, 0.00010661199999999899, 0.00010711100000000001, 0.00010698599999999642, 0.00010736100000000026, 0.00010723599999999667, 0.00010665300000000516, 0.00010726400000000275, 0.00010687499999999933, 0.00010731999999999409, 0.00010704100000000216, 0.00010645799999999678, 0.00010723700000000308, 0.00010694400000000465, 0.00010657000000000028, 0.00010734700000000069, 0.0001065690000000008, 0.00010748700000000333, 0.00010700000000000293, 0.00010668099999999736, 0.00010691700000000498, 0.00010666699999999779, 0.00010675000000000268, 0.00010658399999999985, 0.00010727800000000232, 0.00010718099999999786, 0.00010713899999999915, 0.00010741699999999854]</msg>
<status status="PASS" starttime="20201030 18:28:54.124" endtime="20201030 18:28:54.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.113" endtime="20201030 18:28:54.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:54.140" endtime="20201030 18:28:54.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.136" endtime="20201030 18:28:54.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.133" endtime="20201030 18:28:54.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.642" endtime="20201030 18:28:54.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.640" endtime="20201030 18:28:54.165"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.189" endtime="20201030 18:28:54.212"></status>
</kw>
<msg timestamp="20201030 18:28:54.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.185" endtime="20201030 18:28:54.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.216" endtime="20201030 18:28:54.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.222" endtime="20201030 18:28:54.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.178" endtime="20201030 18:28:54.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.172" endtime="20201030 18:28:54.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.245" endtime="20201030 18:28:54.596"></status>
</kw>
<msg timestamp="20201030 18:28:54.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0418855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041993736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:54.242" endtime="20201030 18:28:54.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0418855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041993736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:54.606" endtime="20201030 18:28:54.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.624" endtime="20201030 18:28:54.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.235" endtime="20201030 18:28:54.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.230" endtime="20201030 18:28:54.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:54.642" level="INFO">${RESULT} = [{'diff': 0.00010823599999999767}, {'diff': 0.00010793000000000608}, {'diff': 0.00010797199999999785}, {'diff': 0.00010799999999999699}, {'diff': 0.00010749999999999649}, {'diff': 0.000107750000000003...</msg>
<status status="PASS" starttime="20201030 18:28:54.633" endtime="20201030 18:28:54.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:54.651" level="INFO">${ACCURACY} = {'diff': [0.00010823599999999767, 0.00010793000000000608, 0.00010797199999999785, 0.00010799999999999699, 0.00010749999999999649, 0.00010775000000000368, 0.00010808300000000187, 0.00010793099999999861...</msg>
<status status="PASS" starttime="20201030 18:28:54.644" endtime="20201030 18:28:54.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.662" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 18:28:54.659" endtime="20201030 18:28:54.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.667" level="INFO">VALUE: [0.00010823599999999767, 0.00010793000000000608, 0.00010797199999999785, 0.00010799999999999699, 0.00010749999999999649, 0.00010775000000000368, 0.00010808300000000187, 0.00010793099999999861, 0.00010820799999999853, 0.00010769499999999793, 0.00010830599999999552, 0.00010807000000000178, 0.00010784700000000119, 0.00010830599999999552, 0.00010781900000000205, 0.000107596999999994, 0.00010784700000000119, 0.00010827799999999638, 0.00010848599999999792, 0.0001083890000000004, 0.00010759700000000094, 0.00010758300000000137, 0.00010852799999999663, 0.00010830499999999604, 0.00010793000000000608, 0.00010816699999999929, 0.00010827799999999638, 0.00010774999999999674, 0.00010770800000000497, 0.00010818099999999886, 0.00010826399999999681, 0.00010816599999999982, 0.00010751299999999658, 0.00010830599999999552, 0.00010784700000000119, 0.00010843000000000658, 0.00010829200000000289, 0.00010751300000000352, 0.00010834799999999423, 0.00010848600000000486, 0.00010779199999999545, 0.00010783300000000162, 0.00010792999999999914, 0.00010808299999999493, 0.00010770900000000444, 0.00010812500000000058, 0.0001082360000000046, 0.00010800000000000393, 0.00010790299999999947, 0.00010826400000000375]</msg>
<status status="PASS" starttime="20201030 18:28:54.664" endtime="20201030 18:28:54.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.653" endtime="20201030 18:28:54.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:54.681" endtime="20201030 18:28:54.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.675" endtime="20201030 18:28:54.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.673" endtime="20201030 18:28:54.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.167" endtime="20201030 18:28:54.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.166" endtime="20201030 18:28:54.707"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.730" endtime="20201030 18:28:54.752"></status>
</kw>
<msg timestamp="20201030 18:28:54.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.726" endtime="20201030 18:28:54.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.755" endtime="20201030 18:28:54.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.761" endtime="20201030 18:28:54.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.719" endtime="20201030 18:28:54.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.713" endtime="20201030 18:28:54.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.785" endtime="20201030 18:28:55.134"></status>
</kw>
<msg timestamp="20201030 18:28:55.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039995111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040104472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.782" endtime="20201030 18:28:55.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039995111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040104472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.144" endtime="20201030 18:28:55.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.162" endtime="20201030 18:28:55.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.774" endtime="20201030 18:28:55.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.770" endtime="20201030 18:28:55.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:55.179" level="INFO">${RESULT} = [{'diff': 0.00010936100000000226}, {'diff': 0.00010920900000000594}, {'diff': 0.00010850000000000443}, {'diff': 0.00010934700000000269}, {'diff': 0.00010848599999999792}, {'diff': 0.000108833000000002...</msg>
<status status="PASS" starttime="20201030 18:28:55.170" endtime="20201030 18:28:55.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:55.190" level="INFO">${ACCURACY} = {'diff': [0.00010936100000000226, 0.00010920900000000594, 0.00010850000000000443, 0.00010934700000000269, 0.00010848599999999792, 0.00010883300000000262, 0.00010887500000000133, 0.00010943000000000064...</msg>
<status status="PASS" starttime="20201030 18:28:55.181" endtime="20201030 18:28:55.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.201" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 18:28:55.199" endtime="20201030 18:28:55.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.206" level="INFO">VALUE: [0.00010936100000000226, 0.00010920900000000594, 0.00010850000000000443, 0.00010934700000000269, 0.00010848599999999792, 0.00010883300000000262, 0.00010887500000000133, 0.00010943000000000064, 0.00010886100000000176, 0.00010944400000000021, 0.00010869499999999893, 0.00010886100000000176, 0.00010859800000000142, 0.00010913900000000115, 0.00010855500000000323, 0.00010862500000000108, 0.00010890300000000047, 0.00010848599999999792, 0.00010873599999999817, 0.00010908300000000287, 0.00010876399999999731, 0.00010894499999999918, 0.00010890300000000047, 0.00010924999999999824, 0.00010934700000000269, 0.00010920799999999953, 0.00010923599999999867, 0.00010937500000000183, 0.00010852699999999715, 0.00010908400000000235, 0.00010893000000000014, 0.00010923599999999867, 0.00010886100000000176, 0.00010908400000000235, 0.00010901399999999756, 0.00010916700000000029, 0.00010924999999999824, 0.00010880499999999654, 0.0001090549999999968, 0.00010884699999999525, 0.00010894499999999918, 0.00010863900000000065, 0.00010883299999999568, 0.00010862499999999414, 0.00010908400000000235, 0.00010930500000000398, 0.00010891700000000004, 0.00010920900000000594, 0.00010926400000000475, 0.00010916700000000029]</msg>
<status status="PASS" starttime="20201030 18:28:55.203" endtime="20201030 18:28:55.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.192" endtime="20201030 18:28:55.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:55.219" endtime="20201030 18:28:55.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.214" endtime="20201030 18:28:55.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.212" endtime="20201030 18:28:55.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.709" endtime="20201030 18:28:55.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.708" endtime="20201030 18:28:55.246"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.272" endtime="20201030 18:28:55.294"></status>
</kw>
<msg timestamp="20201030 18:28:55.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.268" endtime="20201030 18:28:55.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.298" endtime="20201030 18:28:55.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.304" endtime="20201030 18:28:55.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.260" endtime="20201030 18:28:55.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.253" endtime="20201030 18:28:55.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.328" endtime="20201030 18:28:55.667"></status>
</kw>
<msg timestamp="20201030 18:28:55.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046275417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046385861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.325" endtime="20201030 18:28:55.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046275417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046385861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.676" endtime="20201030 18:28:55.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.694" endtime="20201030 18:28:55.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.317" endtime="20201030 18:28:55.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.313" endtime="20201030 18:28:55.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:55.712" level="INFO">${RESULT} = [{'diff': 0.00011044400000000121}, {'diff': 0.00010955500000000423}, {'diff': 0.00011018100000000086}, {'diff': 0.00010981900000000405}, {'diff': 0.00011036100000000326}, {'diff': 0.000110235999999999...</msg>
<status status="PASS" starttime="20201030 18:28:55.703" endtime="20201030 18:28:55.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:55.723" level="INFO">${ACCURACY} = {'diff': [0.00011044400000000121, 0.00010955500000000423, 0.00011018100000000086, 0.00010981900000000405, 0.00011036100000000326, 0.00011023599999999967, 0.00011044500000000068, 0.00010981999999999659...</msg>
<status status="PASS" starttime="20201030 18:28:55.714" endtime="20201030 18:28:55.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.734" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 18:28:55.731" endtime="20201030 18:28:55.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.739" level="INFO">VALUE: [0.00011044400000000121, 0.00010955500000000423, 0.00011018100000000086, 0.00010981900000000405, 0.00011036100000000326, 0.00011023599999999967, 0.00011044500000000068, 0.00010981999999999659, 0.00010966699999999385, 0.00011016600000000182, 0.00011001399999999856, 0.00011026399999999881, 0.00011015300000000172, 0.00010952799999999763, 0.00011002800000000507, 0.00011030600000000446, 0.0001100560000000042, 0.00010952800000000457, 0.00011030600000000446, 0.00011009799999999598, 0.00010970800000000003, 0.00010947199999999935, 0.0001095690000000038, 0.00010952699999999815, 0.00010968100000000036, 0.00011026399999999881, 0.00010973599999999917, 0.00010975000000000568, 0.00011044400000000121, 0.00010994400000000071, 0.00010972299999999907, 0.00010990299999999453, 0.00011044499999999374, 0.00010998599999999942, 0.00011026399999999881, 0.00011011099999999607, 0.00011005599999999727, 0.0001100419999999977, 0.00010963900000000165, 0.00011001399999999856, 0.00010952799999999763, 0.00010968100000000036, 0.0001102220000000001, 0.00010974999999999874, 0.00011011099999999607, 0.00011040199999999556, 0.00011024999999999924, 0.00011020800000000053, 0.00010956999999999634, 0.00011023699999999914]</msg>
<status status="PASS" starttime="20201030 18:28:55.736" endtime="20201030 18:28:55.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.724" endtime="20201030 18:28:55.742"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:55.752" endtime="20201030 18:28:55.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.747" endtime="20201030 18:28:55.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.745" endtime="20201030 18:28:55.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.248" endtime="20201030 18:28:55.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.247" endtime="20201030 18:28:55.777"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.800" endtime="20201030 18:28:55.820"></status>
</kw>
<msg timestamp="20201030 18:28:55.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.796" endtime="20201030 18:28:55.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.824" endtime="20201030 18:28:55.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.830" endtime="20201030 18:28:55.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.789" endtime="20201030 18:28:55.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.783" endtime="20201030 18:28:55.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.854" endtime="20201030 18:28:56.194"></status>
</kw>
<msg timestamp="20201030 18:28:56.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039879181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039989861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.850" endtime="20201030 18:28:56.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039879181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039989861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.203" endtime="20201030 18:28:56.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.221" endtime="20201030 18:28:56.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.843" endtime="20201030 18:28:56.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.838" endtime="20201030 18:28:56.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:56.239" level="INFO">${RESULT} = [{'diff': 0.00011068000000000189}, {'diff': 0.00011077800000000582}, {'diff': 0.0001107769999999994}, {'diff': 0.00011125000000000024}, {'diff': 0.00011097200000000085}, {'diff': 0.0001109999999999999...</msg>
<status status="PASS" starttime="20201030 18:28:56.230" endtime="20201030 18:28:56.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:56.248" level="INFO">${ACCURACY} = {'diff': [0.00011068000000000189, 0.00011077800000000582, 0.0001107769999999994, 0.00011125000000000024, 0.00011097200000000085, 0.00011099999999999999, 0.00011069400000000146, 0.00011136100000000426,...</msg>
<status status="PASS" starttime="20201030 18:28:56.241" endtime="20201030 18:28:56.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.259" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 18:28:56.256" endtime="20201030 18:28:56.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.264" level="INFO">VALUE: [0.00011068000000000189, 0.00011077800000000582, 0.0001107769999999994, 0.00011125000000000024, 0.00011097200000000085, 0.00011099999999999999, 0.00011069400000000146, 0.00011136100000000426, 0.00011048599999999992, 0.00011133299999999818, 0.00011081899999999811, 0.00011097200000000085, 0.00011095799999999434, 0.00011150000000000049, 0.0001110969999999975, 0.00011120799999999459, 0.00011112499999999664, 0.00011129199999999895, 0.00011147199999999441, 0.00011061100000000351, 0.00011119499999999449, 0.00011080499999999854, 0.00011079199999999845, 0.00011130499999999904, 0.00011140300000000297, 0.00011119499999999449, 0.00011056999999999734, 0.00011095799999999434, 0.00011055599999999777, 0.0001110969999999975, 0.00011062500000000308, 0.00011086099999999682, 0.00011095800000000128, 0.00011112500000000358, 0.00011106999999999784, 0.00011065300000000222, 0.00011087500000000333, 0.00011116700000000229, 0.00011123599999999373, 0.00011116699999999535, 0.00011141700000000254, 0.000111209000000001, 0.0001114299999999957, 0.00011111100000000401, 0.00011129100000000641, 0.00011127799999999938, 0.00011094400000000171, 0.00011118000000000239, 0.000110514000000006, 0.00011065199999999581]</msg>
<status status="PASS" starttime="20201030 18:28:56.261" endtime="20201030 18:28:56.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.250" endtime="20201030 18:28:56.271"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:56.281" endtime="20201030 18:28:56.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.277" endtime="20201030 18:28:56.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.274" endtime="20201030 18:28:56.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.779" endtime="20201030 18:28:56.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.778" endtime="20201030 18:28:56.306"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.329" endtime="20201030 18:28:56.351"></status>
</kw>
<msg timestamp="20201030 18:28:56.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.326" endtime="20201030 18:28:56.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.355" endtime="20201030 18:28:56.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.361" endtime="20201030 18:28:56.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.318" endtime="20201030 18:28:56.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.313" endtime="20201030 18:28:56.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.384" endtime="20201030 18:28:56.725"></status>
</kw>
<msg timestamp="20201030 18:28:56.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041304792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041416903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.381" endtime="20201030 18:28:56.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041304792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041416903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.735" endtime="20201030 18:28:56.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.753" endtime="20201030 18:28:56.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.374" endtime="20201030 18:28:56.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.369" endtime="20201030 18:28:56.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:56.770" level="INFO">${RESULT} = [{'diff': 0.00011211099999999807}, {'diff': 0.00011195800000000228}, {'diff': 0.00011231899999999961}, {'diff': 0.00011190299999999653}, {'diff': 0.00011231899999999961}, {'diff': 0.000111500000000000...</msg>
<status status="PASS" starttime="20201030 18:28:56.762" endtime="20201030 18:28:56.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:56.779" level="INFO">${ACCURACY} = {'diff': [0.00011211099999999807, 0.00011195800000000228, 0.00011231899999999961, 0.00011190299999999653, 0.00011231899999999961, 0.00011150000000000049, 0.00011169399999999552, 0.00011156899999999886...</msg>
<status status="PASS" starttime="20201030 18:28:56.772" endtime="20201030 18:28:56.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.790" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 18:28:56.788" endtime="20201030 18:28:56.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.796" level="INFO">VALUE: [0.00011211099999999807, 0.00011195800000000228, 0.00011231899999999961, 0.00011190299999999653, 0.00011231899999999961, 0.00011150000000000049, 0.00011169399999999552, 0.00011156899999999886, 0.00011169400000000246, 0.00011180600000000596, 0.00011241599999999713, 0.00011215299999999678, 0.00011150000000000049, 0.00011193100000000261, 0.00011230599999999952, 0.00011180599999999902, 0.00011170799999999509, 0.00011190300000000347, 0.00011206899999999936, 0.00011213899999999721, 0.00011169399999999552, 0.0001119299999999962, 0.00011225000000000124, 0.00011241599999999713, 0.00011211099999999807, 0.00011244399999999627, 0.00011147300000000082, 0.00011183300000000562, 0.00011179099999999997, 0.00011159800000000442, 0.00011215299999999678, 0.00011194400000000271, 0.00011243100000000311, 0.0001120419999999997, 0.00011179199999999945, 0.00011151400000000006, 0.00011229199999999995, 0.00011219400000000296, 0.0001122499999999943, 0.00011197200000000185, 0.00011198600000000142, 0.00011240299999999703, 0.00011159800000000442, 0.00011198600000000142, 0.00011165299999999628, 0.000112209000000002, 0.0001118890000000039, 0.00011220800000000253, 0.00011179099999999997, 0.00011208399999999841]</msg>
<status status="PASS" starttime="20201030 18:28:56.793" endtime="20201030 18:28:56.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.781" endtime="20201030 18:28:56.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:56.814" endtime="20201030 18:28:56.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.804" endtime="20201030 18:28:56.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.801" endtime="20201030 18:28:56.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.308" endtime="20201030 18:28:56.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.307" endtime="20201030 18:28:56.839"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.862" endtime="20201030 18:28:56.883"></status>
</kw>
<msg timestamp="20201030 18:28:56.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.859" endtime="20201030 18:28:56.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.886" endtime="20201030 18:28:56.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.893" endtime="20201030 18:28:56.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.851" endtime="20201030 18:28:56.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.846" endtime="20201030 18:28:56.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.916" endtime="20201030 18:28:57.254"></status>
</kw>
<msg timestamp="20201030 18:28:57.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039664708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039777792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.913" endtime="20201030 18:28:57.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039664708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039777792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.263" endtime="20201030 18:28:57.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.282" endtime="20201030 18:28:57.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.905" endtime="20201030 18:28:57.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.901" endtime="20201030 18:28:57.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:57.299" level="INFO">${RESULT} = [{'diff': 0.00011308399999999941}, {'diff': 0.00011268100000000336}, {'diff': 0.00011320800000000353}, {'diff': 0.00011326400000000181}, {'diff': 0.00011248600000000192}, {'diff': 0.000112528000000000...</msg>
<status status="PASS" starttime="20201030 18:28:57.290" endtime="20201030 18:28:57.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:57.309" level="INFO">${ACCURACY} = {'diff': [0.00011308399999999941, 0.00011268100000000336, 0.00011320800000000353, 0.00011326400000000181, 0.00011248600000000192, 0.00011252800000000063, 0.00011319400000000396, 0.00011272199999999566...</msg>
<status status="PASS" starttime="20201030 18:28:57.301" endtime="20201030 18:28:57.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.320" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 18:28:57.318" endtime="20201030 18:28:57.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.325" level="INFO">VALUE: [0.00011308399999999941, 0.00011268100000000336, 0.00011320800000000353, 0.00011326400000000181, 0.00011248600000000192, 0.00011252800000000063, 0.00011319400000000396, 0.00011272199999999566, 0.00011320800000000353, 0.00011336099999999932, 0.00011332000000000009, 0.00011301400000000156, 0.00011320799999999659, 0.000112596999999999, 0.00011306999999999984, 0.00011269400000000346, 0.00011266699999999685, 0.00011334699999999975, 0.00011320899999999606, 0.00011268100000000336, 0.00011311099999999907, 0.00011319399999999702, 0.00011266699999999685, 0.00011333300000000018, 0.00011330500000000104, 0.00011312499999999864, 0.00011252800000000063, 0.00011291599999999763, 0.00011300000000000199, 0.00011319499999999649, 0.00011318000000000439, 0.000112596999999999, 0.00011302800000000113, 0.00011313799999999874, 0.00011284699999999925, 0.00011334699999999975, 0.00011293100000000361, 0.00011320799999999659, 0.00011316599999999788, 0.00011345899999999631, 0.00011299999999999505, 0.00011270800000000303, 0.00011326400000000181, 0.00011326400000000181, 0.00011320899999999606, 0.00011281900000000011, 0.00011265300000000422, 0.00011270799999999609, 0.0001133749999999989, 0.00011297200000000285]</msg>
<status status="PASS" starttime="20201030 18:28:57.322" endtime="20201030 18:28:57.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.311" endtime="20201030 18:28:57.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:57.338" endtime="20201030 18:28:57.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.334" endtime="20201030 18:28:57.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.331" endtime="20201030 18:28:57.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.841" endtime="20201030 18:28:57.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.840" endtime="20201030 18:28:57.363"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.386" endtime="20201030 18:28:57.407"></status>
</kw>
<msg timestamp="20201030 18:28:57.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.383" endtime="20201030 18:28:57.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.410" endtime="20201030 18:28:57.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.417" endtime="20201030 18:28:57.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.375" endtime="20201030 18:28:57.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.370" endtime="20201030 18:28:57.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.440" endtime="20201030 18:28:57.779"></status>
</kw>
<msg timestamp="20201030 18:28:57.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039591403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039705472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.437" endtime="20201030 18:28:57.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039591403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039705472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.788" endtime="20201030 18:28:57.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.806" endtime="20201030 18:28:57.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.430" endtime="20201030 18:28:57.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.425" endtime="20201030 18:28:57.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:57.823" level="INFO">${RESULT} = [{'diff': 0.00011406900000000136}, {'diff': 0.00011400000000000299}, {'diff': 0.00011443099999999817}, {'diff': 0.00011436100000000032}, {'diff': 0.00011430599999999458}, {'diff': 0.000114444000000005...</msg>
<status status="PASS" starttime="20201030 18:28:57.814" endtime="20201030 18:28:57.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:57.834" level="INFO">${ACCURACY} = {'diff': [0.00011406900000000136, 0.00011400000000000299, 0.00011443099999999817, 0.00011436100000000032, 0.00011430599999999458, 0.00011444400000000521, 0.00011404099999999529, 0.00011355600000000077...</msg>
<status status="PASS" starttime="20201030 18:28:57.825" endtime="20201030 18:28:57.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.845" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 18:28:57.843" endtime="20201030 18:28:57.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.850" level="INFO">VALUE: [0.00011406900000000136, 0.00011400000000000299, 0.00011443099999999817, 0.00011436100000000032, 0.00011430599999999458, 0.00011444400000000521, 0.00011404099999999529, 0.00011355600000000077, 0.00011402699999999572, 0.00011448699999999645, 0.00011422300000000357, 0.00011443099999999817, 0.00011384799999999973, 0.00011447199999999741, 0.00011365299999999828, 0.00011445799999999784, 0.00011416699999999835, 0.00011423600000000367, 0.00011438899999999946, 0.00011419500000000443, 0.00011377800000000188, 0.00011398599999999648, 0.0001143749999999999, 0.0001143749999999999, 0.00011441599999999913, 0.00011397300000000332, 0.00011402799999999519, 0.00011436100000000032, 0.00011388899999999896, 0.0001137090000000035, 0.00011436100000000032, 0.00011394499999999724, 0.00011386099999999982, 0.00011443000000000564, 0.00011375000000000274, 0.00011408300000000093, 0.00011400000000000299, 0.00011370899999999656, 0.00011429199999999501, 0.0001140970000000005, 0.0001138049999999946, 0.00011432000000000109, 0.00011415299999999878, 0.00011420799999999759, 0.00011352799999999469, 0.00011432000000000109, 0.000113597, 0.00011416699999999835, 0.0001140970000000005, 0.00011408300000000093]</msg>
<status status="PASS" starttime="20201030 18:28:57.847" endtime="20201030 18:28:57.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.836" endtime="20201030 18:28:57.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:57.863" endtime="20201030 18:28:57.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.859" endtime="20201030 18:28:57.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.856" endtime="20201030 18:28:57.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.365" endtime="20201030 18:28:57.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.364" endtime="20201030 18:28:57.888"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.911" endtime="20201030 18:28:57.932"></status>
</kw>
<msg timestamp="20201030 18:28:57.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.907" endtime="20201030 18:28:57.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.935" endtime="20201030 18:28:57.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.942" endtime="20201030 18:28:57.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.900" endtime="20201030 18:28:57.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.894" endtime="20201030 18:28:57.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.965" endtime="20201030 18:28:58.305"></status>
</kw>
<msg timestamp="20201030 18:28:58.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039742347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039857819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.962" endtime="20201030 18:28:58.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039742347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039857819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.315" endtime="20201030 18:28:58.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.333" endtime="20201030 18:28:58.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.955" endtime="20201030 18:28:58.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.950" endtime="20201030 18:28:58.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:58.350" level="INFO">${RESULT} = [{'diff': 0.00011547200000000535}, {'diff': 0.0001153750000000009}, {'diff': 0.00011473599999999723}, {'diff': 0.0001147220000000046}, {'diff': 0.00011549999999999755}, {'diff': 0.00011491700000000604...</msg>
<status status="PASS" starttime="20201030 18:28:58.342" endtime="20201030 18:28:58.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:58.359" level="INFO">${ACCURACY} = {'diff': [0.00011547200000000535, 0.0001153750000000009, 0.00011473599999999723, 0.0001147220000000046, 0.00011549999999999755, 0.00011491700000000604, 0.00011545799999999884, 0.00011526399999999687, ...</msg>
<status status="PASS" starttime="20201030 18:28:58.352" endtime="20201030 18:28:58.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.370" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 18:28:58.368" endtime="20201030 18:28:58.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.375" level="INFO">VALUE: [0.00011547200000000535, 0.0001153750000000009, 0.00011473599999999723, 0.0001147220000000046, 0.00011549999999999755, 0.00011491700000000604, 0.00011545799999999884, 0.00011526399999999687, 0.00011511099999999413, 0.00011516599999999988, 0.00011476399999999637, 0.00011486100000000082, 0.00011540200000000056, 0.00011540300000000003, 0.00011461099999999363, 0.00011533400000000166, 0.00011455600000000177, 0.00011508300000000193, 0.00011533300000000218, 0.00011484700000000125, 0.00011550000000000449, 0.00011522199999999816, 0.00011540300000000003, 0.00011486100000000082, 0.00011537499999999395, 0.00011519399999999902, 0.00011544399999999927, 0.00011454100000000272, 0.00011551400000000406, 0.00011543099999999917, 0.00011522199999999816, 0.00011493099999999867, 0.00011523599999999773, 0.00011550000000000449, 0.0001150550000000028, 0.00011523599999999773, 0.00011490299999999953, 0.00011500000000000399, 0.00011477799999999594, 0.00011526400000000381, 0.00011497199999999791, 0.00011480500000000254, 0.0001148750000000004, 0.00011484700000000125, 0.00011508300000000193, 0.00011519399999999902, 0.0001154169999999996, 0.000114597000000001, 0.00011481900000000211, 0.00011525000000000424]</msg>
<status status="PASS" starttime="20201030 18:28:58.373" endtime="20201030 18:28:58.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.361" endtime="20201030 18:28:58.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:58.388" endtime="20201030 18:28:58.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.384" endtime="20201030 18:28:58.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.381" endtime="20201030 18:28:58.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.890" endtime="20201030 18:28:58.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.889" endtime="20201030 18:28:58.413"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.436" endtime="20201030 18:28:58.459"></status>
</kw>
<msg timestamp="20201030 18:28:58.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.433" endtime="20201030 18:28:58.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.462" endtime="20201030 18:28:58.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.469" endtime="20201030 18:28:58.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.426" endtime="20201030 18:28:58.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.420" endtime="20201030 18:28:58.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.492" endtime="20201030 18:28:58.831"></status>
</kw>
<msg timestamp="20201030 18:28:58.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041431514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041547208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.489" endtime="20201030 18:28:58.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041431514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041547208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.840" endtime="20201030 18:28:58.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.858" endtime="20201030 18:28:58.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.482" endtime="20201030 18:28:58.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.477" endtime="20201030 18:28:58.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:58.875" level="INFO">${RESULT} = [{'diff': 0.00011569399999999952}, {'diff': 0.00011569499999999899}, {'diff': 0.00011555600000000277}, {'diff': 0.0001162499999999983}, {'diff': 0.000115597000000002}, {'diff': 0.0001160970000000025},...</msg>
<status status="PASS" starttime="20201030 18:28:58.867" endtime="20201030 18:28:58.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:58.885" level="INFO">${ACCURACY} = {'diff': [0.00011569399999999952, 0.00011569499999999899, 0.00011555600000000277, 0.0001162499999999983, 0.000115597000000002, 0.0001160970000000025, 0.00011588900000000096, 0.00011595799999999934, 0....</msg>
<status status="PASS" starttime="20201030 18:28:58.877" endtime="20201030 18:28:58.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.895" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 18:28:58.893" endtime="20201030 18:28:58.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.901" level="INFO">VALUE: [0.00011569399999999952, 0.00011569499999999899, 0.00011555600000000277, 0.0001162499999999983, 0.000115597000000002, 0.0001160970000000025, 0.00011588900000000096, 0.00011595799999999934, 0.00011594399999999977, 0.00011581900000000311, 0.00011607000000000284, 0.00011566699999999985, 0.00011618099999999992, 0.00011588900000000096, 0.0001162499999999983, 0.00011627799999999744, 0.00011562500000000114, 0.00011598600000000542, 0.00011626399999999787, 0.00011591600000000063, 0.0001164170000000006, 0.00011577699999999747, 0.00011647200000000635, 0.00011650000000000549, 0.00011588900000000096, 0.00011561100000000157, 0.00011636100000000232, 0.00011611100000000207, 0.00011615300000000078, 0.00011649999999999855, 0.00011554099999999679, 0.00011573600000000517, 0.00011599999999999805, 0.00011618099999999992, 0.00011612500000000164, 0.00011620799999999959, 0.00011583300000000268, 0.00011584699999999531, 0.00011626300000000533, 0.00011618099999999992, 0.00011616699999999341, 0.00011623600000000567, 0.00011627799999999744, 0.00011602800000000413, 0.00011615300000000078, 0.00011648599999999898, 0.0001160699999999959, 0.000115597000000002, 0.00011631900000000361, 0.00011619400000000002]</msg>
<status status="PASS" starttime="20201030 18:28:58.898" endtime="20201030 18:28:58.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.886" endtime="20201030 18:28:58.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:58.915" endtime="20201030 18:28:58.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.909" endtime="20201030 18:28:58.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.906" endtime="20201030 18:28:58.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.415" endtime="20201030 18:28:58.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.414" endtime="20201030 18:28:58.940"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.963" endtime="20201030 18:28:58.984"></status>
</kw>
<msg timestamp="20201030 18:28:58.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.959" endtime="20201030 18:28:58.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.987" endtime="20201030 18:28:58.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.994" endtime="20201030 18:28:58.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.952" endtime="20201030 18:28:58.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.946" endtime="20201030 18:28:59.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.017" endtime="20201030 18:28:59.357"></status>
</kw>
<msg timestamp="20201030 18:28:59.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039689903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039807014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.014" endtime="20201030 18:28:59.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039689903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039807014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.366" endtime="20201030 18:28:59.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.384" endtime="20201030 18:28:59.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.007" endtime="20201030 18:28:59.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.002" endtime="20201030 18:28:59.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:59.402" level="INFO">${RESULT} = [{'diff': 0.00011711100000000307}, {'diff': 0.00011687499999999545}, {'diff': 0.00011731999999999715}, {'diff': 0.00011723599999999973}, {'diff': 0.00011702799999999819}, {'diff': 0.000117417000000001...</msg>
<status status="PASS" starttime="20201030 18:28:59.393" endtime="20201030 18:28:59.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:59.414" level="INFO">${ACCURACY} = {'diff': [0.00011711100000000307, 0.00011687499999999545, 0.00011731999999999715, 0.00011723599999999973, 0.00011702799999999819, 0.0001174170000000016, 0.0001165829999999965, 0.00011723599999999973, ...</msg>
<status status="PASS" starttime="20201030 18:28:59.404" endtime="20201030 18:28:59.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.425" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 18:28:59.423" endtime="20201030 18:28:59.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.431" level="INFO">VALUE: [0.00011711100000000307, 0.00011687499999999545, 0.00011731999999999715, 0.00011723599999999973, 0.00011702799999999819, 0.0001174170000000016, 0.0001165829999999965, 0.00011723599999999973, 0.00011747200000000041, 0.00011730500000000504, 0.00011705600000000427, 0.00011723599999999973, 0.00011715300000000178, 0.0001173750000000029, 0.00011711099999999613, 0.00011672199999999966, 0.00011727799999999844, 0.00011661100000000257, 0.00011711100000000307, 0.00011708399999999647, 0.00011727799999999844, 0.00011715300000000178, 0.00011673599999999923, 0.00011701400000000556, 0.00011720800000000059, 0.00011658399999999597, 0.00011690300000000153, 0.00011655499999999736, 0.00011743100000000117, 0.00011699999999999905, 0.0001169170000000011, 0.00011729200000000495, 0.00011711100000000307, 0.00011711200000000255, 0.00011661200000000205, 0.00011686100000000282, 0.00011698599999999948, 0.00011725000000000624, 0.00011677800000000488, 0.00011744400000000127, 0.00011676399999999837, 0.0001171249999999957, 0.00011722299999999963, 0.00011695800000000034, 0.00011656900000000386, 0.00011694500000000024, 0.00011655499999999736, 0.0001165829999999965, 0.00011713899999999527, 0.00011701399999999862]</msg>
<status status="PASS" starttime="20201030 18:28:59.428" endtime="20201030 18:28:59.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.416" endtime="20201030 18:28:59.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:59.443" endtime="20201030 18:28:59.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.439" endtime="20201030 18:28:59.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.436" endtime="20201030 18:28:59.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.942" endtime="20201030 18:28:59.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.941" endtime="20201030 18:28:59.469"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.492" endtime="20201030 18:28:59.513"></status>
</kw>
<msg timestamp="20201030 18:28:59.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.488" endtime="20201030 18:28:59.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.516" endtime="20201030 18:28:59.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.522" endtime="20201030 18:28:59.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.481" endtime="20201030 18:28:59.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.475" endtime="20201030 18:28:59.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.546" endtime="20201030 18:28:59.885"></status>
</kw>
<msg timestamp="20201030 18:28:59.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039951236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040069167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.543" endtime="20201030 18:28:59.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039951236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040069167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.894" endtime="20201030 18:28:59.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.912" endtime="20201030 18:28:59.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.535" endtime="20201030 18:28:59.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.531" endtime="20201030 18:28:59.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:59.929" level="INFO">${RESULT} = [{'diff': 0.00011793100000000167}, {'diff': 0.00011761100000000357}, {'diff': 0.00011818100000000192}, {'diff': 0.00011761100000000357}, {'diff': 0.00011805499999999886}, {'diff': 0.000117527999999998...</msg>
<status status="PASS" starttime="20201030 18:28:59.921" endtime="20201030 18:28:59.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:59.940" level="INFO">${ACCURACY} = {'diff': [0.00011793100000000167, 0.00011761100000000357, 0.00011818100000000192, 0.00011761100000000357, 0.00011805499999999886, 0.00011752799999999869, 0.00011837499999999695, 0.00011769400000000152...</msg>
<status status="PASS" starttime="20201030 18:28:59.932" endtime="20201030 18:28:59.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.951" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 18:28:59.949" endtime="20201030 18:28:59.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.957" level="INFO">VALUE: [0.00011793100000000167, 0.00011761100000000357, 0.00011818100000000192, 0.00011761100000000357, 0.00011805499999999886, 0.00011752799999999869, 0.00011837499999999695, 0.00011769400000000152, 0.00011752700000000615, 0.00011836199999999686, 0.00011780599999999808, 0.00011759699999999706, 0.00011791600000000263, 0.00011780600000000502, 0.0001182630000000004, 0.00011855599999999883, 0.0001177499999999998, 0.00011823699999999326, 0.00011845800000000184, 0.0001182370000000002, 0.00011779199999999851, 0.00011752799999999869, 0.0001179579999999944, 0.0001179449999999943, 0.00011787499999999645, 0.00011755599999999783, 0.00011802799999999919, 0.00011766599999999544, 0.00011754199999999826, 0.00011818100000000192, 0.00011823600000000073, 0.00011833399999999772, 0.0001177499999999998, 0.00011850000000000055, 0.00011816700000000235, 0.00011823600000000073, 0.0001177369999999997, 0.00011822200000000116, 0.00011751399999999912, 0.00011763900000000271, 0.00011811099999999713, 0.00011769400000000152, 0.00011802799999999919, 0.00011795800000000134, 0.0001183750000000039, 0.0001180699999999979, 0.00011836100000000432, 0.00011805499999999886, 0.00011848700000000045, 0.00011772200000000066]</msg>
<status status="PASS" starttime="20201030 18:28:59.954" endtime="20201030 18:28:59.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.942" endtime="20201030 18:28:59.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:59.969" endtime="20201030 18:28:59.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.965" endtime="20201030 18:28:59.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.962" endtime="20201030 18:28:59.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.471" endtime="20201030 18:28:59.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.470" endtime="20201030 18:28:59.994"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.017" endtime="20201030 18:29:00.039"></status>
</kw>
<msg timestamp="20201030 18:29:00.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.014" endtime="20201030 18:29:00.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.042" endtime="20201030 18:29:00.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.049" endtime="20201030 18:29:00.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.007" endtime="20201030 18:29:00.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.001" endtime="20201030 18:29:00.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.072" endtime="20201030 18:29:00.412"></status>
</kw>
<msg timestamp="20201030 18:29:00.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040165194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040284194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.069" endtime="20201030 18:29:00.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040165194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040284194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.422" endtime="20201030 18:29:00.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.440" endtime="20201030 18:29:00.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.062" endtime="20201030 18:29:00.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.057" endtime="20201030 18:29:00.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:00.457" level="INFO">${RESULT} = [{'diff': 0.00011900000000000105}, {'diff': 0.00011912500000000464}, {'diff': 0.0001191950000000025}, {'diff': 0.00011879199999999951}, {'diff': 0.0001191950000000025}, {'diff': 0.0001187500000000008}...</msg>
<status status="PASS" starttime="20201030 18:29:00.449" endtime="20201030 18:29:00.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:00.466" level="INFO">${ACCURACY} = {'diff': [0.00011900000000000105, 0.00011912500000000464, 0.0001191950000000025, 0.00011879199999999951, 0.0001191950000000025, 0.0001187500000000008, 0.00011852799999999969, 0.00011852700000000022, 0...</msg>
<status status="PASS" starttime="20201030 18:29:00.460" endtime="20201030 18:29:00.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.477" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 18:29:00.475" endtime="20201030 18:29:00.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.483" level="INFO">VALUE: [0.00011900000000000105, 0.00011912500000000464, 0.0001191950000000025, 0.00011879199999999951, 0.0001191950000000025, 0.0001187500000000008, 0.00011852799999999969, 0.00011852700000000022, 0.0001190970000000055, 0.00011854099999999979, 0.00011934699999999882, 0.00011933299999999925, 0.00011855599999999883, 0.0001191249999999977, 0.00011927700000000097, 0.0001192500000000013, 0.00011851400000000012, 0.0001191249999999977, 0.00011887499999999745, 0.00011894400000000277, 0.00011920900000000206, 0.0001187500000000008, 0.00011918100000000292, 0.00011886099999999789, 0.00011854199999999926, 0.00011879199999999951, 0.00011919499999999555, 0.00011902800000000019, 0.0001192500000000013, 0.00011912500000000464, 0.0001190699999999989, 0.00011905599999999933, 0.00011877700000000047, 0.00011919400000000302, 0.00011887499999999745, 0.00011908399999999847, 0.00011933300000000618, 0.00011895900000000181, 0.00011905599999999933, 0.00011866700000000285, 0.00011872200000000166, 0.00011869400000000252, 0.00011901400000000062, 0.00011923600000000173, 0.0001194029999999971, 0.00011936099999999839, 0.00011923600000000173, 0.00011880600000000602, 0.00011863899999999677, 0.00011909699999999857]</msg>
<status status="PASS" starttime="20201030 18:29:00.480" endtime="20201030 18:29:00.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.468" endtime="20201030 18:29:00.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:00.496" endtime="20201030 18:29:00.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.491" endtime="20201030 18:29:00.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.489" endtime="20201030 18:29:00.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.997" endtime="20201030 18:29:00.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.995" endtime="20201030 18:29:00.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.073" endtime="20201030 18:29:00.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:00.531" endtime="20201030 18:29:00.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.526" endtime="20201030 18:29:00.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.524" endtime="20201030 18:29:00.555"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:06.946" endtime="20201030 18:29:00.556" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:00.573" endtime="20201030 18:29:00.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.569" endtime="20201030 18:29:00.596"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.631" endtime="20201030 18:29:00.647"></status>
</kw>
<msg timestamp="20201030 18:29:00.648" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.628" endtime="20201030 18:29:00.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.655" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.650" endtime="20201030 18:29:00.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.661" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:00.657" endtime="20201030 18:29:00.662"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:00.621" endtime="20201030 18:29:00.664"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:00.614" endtime="20201030 18:29:00.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.611" endtime="20201030 18:29:00.666"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:00.674" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:00.673" endtime="20201030 18:29:00.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.668" endtime="20201030 18:29:00.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.610" endtime="20201030 18:29:00.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.608" endtime="20201030 18:29:00.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.678" endtime="20201030 18:29:00.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.602" endtime="20201030 18:29:00.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.597" endtime="20201030 18:29:00.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.566" endtime="20201030 18:29:00.685"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.709" endtime="20201030 18:29:00.725"></status>
</kw>
<msg timestamp="20201030 18:29:00.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.706" endtime="20201030 18:29:00.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.729" endtime="20201030 18:29:00.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.735" endtime="20201030 18:29:00.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.699" endtime="20201030 18:29:00.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.693" endtime="20201030 18:29:00.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.761" endtime="20201030 18:29:01.110"></status>
</kw>
<msg timestamp="20201030 18:29:01.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129555014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129576319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.755" endtime="20201030 18:29:01.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129555014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129576319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.120" endtime="20201030 18:29:01.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.140" endtime="20201030 18:29:01.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.748" endtime="20201030 18:29:01.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.743" endtime="20201030 18:29:01.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:01.161" level="INFO">${RESULT} = [{'diff': 2.130499999999924e-05}, {'diff': 2.1638999999989972e-05}, {'diff': 2.197199999998123e-05}, {'diff': 2.166700000000299e-05}, {'diff': 2.115299999999598e-05}, {'diff': 2.1138999999975594e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:01.151" endtime="20201030 18:29:01.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:01.172" level="INFO">${ACCURACY} = {'diff': [2.130499999999924e-05, 2.1638999999989972e-05, 2.197199999998123e-05, 2.166700000000299e-05, 2.115299999999598e-05, 2.1138999999975594e-05, 2.136099999999752e-05, 2.113900000000335e-05, 2.14...</msg>
<status status="PASS" starttime="20201030 18:29:01.164" endtime="20201030 18:29:01.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.185" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 18:29:01.183" endtime="20201030 18:29:01.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.192" level="INFO">VALUE: [2.130499999999924e-05, 2.1638999999989972e-05, 2.197199999998123e-05, 2.166700000000299e-05, 2.115299999999598e-05, 2.1138999999975594e-05, 2.136099999999752e-05, 2.113900000000335e-05, 2.147299999999408e-05, 2.112500000001072e-05, 2.1305999999998715e-05, 2.1319999999991346e-05, 2.181900000000625e-05, 2.1778000000000075e-05, 2.1458000000001975e-05, 2.1638999999989972e-05, 2.1957999999988598e-05, 2.133300000001226e-05, 2.13200000000191e-05, 2.1959000000015827e-05, 2.1638999999989972e-05, 2.1514000000000255e-05, 2.0973000000007458e-05, 2.145900000000145e-05, 2.1319999999991346e-05, 2.1943999999995967e-05, 2.1277999999985697e-05, 2.1263999999993066e-05, 2.115299999999598e-05, 2.1318999999991872e-05, 2.1820000000005724e-05, 2.1986000000001615e-05, 2.1124999999982963e-05, 2.113900000000335e-05, 2.2028000000007264e-05, 2.162499999999734e-05, 2.113900000000335e-05, 2.1124999999982963e-05, 2.0972000000007984e-05, 2.1638999999989972e-05, 2.180500000001362e-05, 2.120899999999426e-05, 2.1305999999998715e-05, 2.1639000000017727e-05, 2.1972999999980702e-05, 2.1514000000000255e-05, 2.115299999999598e-05, 2.1986000000001615e-05, 2.1485999999987238e-05, 2.194499999999544e-05]</msg>
<status status="PASS" starttime="20201030 18:29:01.188" endtime="20201030 18:29:01.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.174" endtime="20201030 18:29:01.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:01.209" endtime="20201030 18:29:01.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.203" endtime="20201030 18:29:01.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.199" endtime="20201030 18:29:01.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.689" endtime="20201030 18:29:01.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.687" endtime="20201030 18:29:01.237"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.266" endtime="20201030 18:29:01.282"></status>
</kw>
<msg timestamp="20201030 18:29:01.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.262" endtime="20201030 18:29:01.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.285" endtime="20201030 18:29:01.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.291" endtime="20201030 18:29:01.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.252" endtime="20201030 18:29:01.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.245" endtime="20201030 18:29:01.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.315" endtime="20201030 18:29:01.653"></status>
</kw>
<msg timestamp="20201030 18:29:01.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048292417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048314194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.312" endtime="20201030 18:29:01.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048292417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048314194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.663" endtime="20201030 18:29:01.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.682" endtime="20201030 18:29:01.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.304" endtime="20201030 18:29:01.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.300" endtime="20201030 18:29:01.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:01.699" level="INFO">${RESULT} = [{'diff': 2.17770000000006e-05}, {'diff': 2.113899999999641e-05}, {'diff': 2.1805999999999215e-05}, {'diff': 2.180499999999974e-05}, {'diff': 2.115300000000292e-05}, {'diff': 2.1986000000001615e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:01.690" endtime="20201030 18:29:01.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:01.708" level="INFO">${ACCURACY} = {'diff': [2.17770000000006e-05, 2.113899999999641e-05, 2.1805999999999215e-05, 2.180499999999974e-05, 2.115300000000292e-05, 2.1986000000001615e-05, 2.1985999999994676e-05, 2.1986000000001615e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 18:29:01.701" endtime="20201030 18:29:01.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.719" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 18:29:01.717" endtime="20201030 18:29:01.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.725" level="INFO">VALUE: [2.17770000000006e-05, 2.113899999999641e-05, 2.1805999999999215e-05, 2.180499999999974e-05, 2.115300000000292e-05, 2.1986000000001615e-05, 2.1985999999994676e-05, 2.1986000000001615e-05, 2.166699999999605e-05, 2.180499999999974e-05, 2.197300000000152e-05, 2.1819999999998785e-05, 2.131900000000575e-05, 2.1957999999995537e-05, 2.163900000000385e-05, 2.163899999999691e-05, 2.163900000000385e-05, 2.197300000000152e-05, 2.118100000000206e-05, 2.1305999999998715e-05, 2.179100000000017e-05, 2.1819999999998785e-05, 2.129099999999967e-05, 2.1472000000001545e-05, 2.1306000000005654e-05, 2.1305999999998715e-05, 2.112499999999684e-05, 2.1208000000001725e-05, 2.1972000000002045e-05, 2.163899999999691e-05, 2.1986000000001615e-05, 2.1986000000001615e-05, 2.1915999999996827e-05, 2.1819999999998785e-05, 2.1305999999998715e-05, 2.1277999999999575e-05, 2.115299999999598e-05, 2.1319999999998285e-05, 2.165300000000342e-05, 2.1319999999998285e-05, 2.115299999999598e-05, 2.1986000000001615e-05, 2.1805999999999215e-05, 2.1151999999996507e-05, 2.1986000000001615e-05, 2.1637999999997437e-05, 2.184699999999845e-05, 2.1680000000003086e-05, 2.1457999999995037e-05, 2.1306000000005654e-05]</msg>
<status status="PASS" starttime="20201030 18:29:01.722" endtime="20201030 18:29:01.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.710" endtime="20201030 18:29:01.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:01.742" endtime="20201030 18:29:01.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.738" endtime="20201030 18:29:01.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.730" endtime="20201030 18:29:01.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.240" endtime="20201030 18:29:01.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.238" endtime="20201030 18:29:01.774"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.797" endtime="20201030 18:29:01.814"></status>
</kw>
<msg timestamp="20201030 18:29:01.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.794" endtime="20201030 18:29:01.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.818" endtime="20201030 18:29:01.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.825" endtime="20201030 18:29:01.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.787" endtime="20201030 18:29:01.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.781" endtime="20201030 18:29:01.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.849" endtime="20201030 18:29:02.186"></status>
</kw>
<msg timestamp="20201030 18:29:02.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047307806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047328764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.845" endtime="20201030 18:29:02.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047307806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047328764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.196" endtime="20201030 18:29:02.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.215" endtime="20201030 18:29:02.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.838" endtime="20201030 18:29:02.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.833" endtime="20201030 18:29:02.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:02.232" level="INFO">${RESULT} = [{'diff': 2.0958000000001475e-05}, {'diff': 2.1957999999995537e-05}, {'diff': 2.1472000000001545e-05}, {'diff': 2.197300000000152e-05}, {'diff': 2.1000000000000185e-05}, {'diff': 2.1958000000002476e-0...</msg>
<status status="PASS" starttime="20201030 18:29:02.223" endtime="20201030 18:29:02.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:02.243" level="INFO">${ACCURACY} = {'diff': [2.0958000000001475e-05, 2.1957999999995537e-05, 2.1472000000001545e-05, 2.197300000000152e-05, 2.1000000000000185e-05, 2.1958000000002476e-05, 2.10969999999977e-05, 2.166699999999605e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:29:02.234" endtime="20201030 18:29:02.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.254" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 18:29:02.252" endtime="20201030 18:29:02.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.259" level="INFO">VALUE: [2.0958000000001475e-05, 2.1957999999995537e-05, 2.1472000000001545e-05, 2.197300000000152e-05, 2.1000000000000185e-05, 2.1958000000002476e-05, 2.10969999999977e-05, 2.166699999999605e-05, 2.2000000000001185e-05, 2.1971999999995107e-05, 2.1486000000001115e-05, 2.1972000000002045e-05, 2.115299999999598e-05, 2.1152000000003446e-05, 2.1000000000000185e-05, 2.1514000000000255e-05, 2.1319999999998285e-05, 2.109700000000464e-05, 2.10969999999977e-05, 2.1972000000002045e-05, 2.19169999999963e-05, 2.169500000000213e-05, 2.1806000000006154e-05, 2.0944000000001906e-05, 2.1166000000003016e-05, 2.1486000000001115e-05, 2.1986000000001615e-05, 2.1292000000006084e-05, 2.1957999999995537e-05, 2.181899999999931e-05, 2.1458000000001975e-05, 2.129099999999967e-05, 2.1222000000001295e-05, 2.197300000000152e-05, 2.1458000000001975e-05, 2.1152000000003446e-05, 2.115300000000292e-05, 2.198700000000109e-05, 2.112500000000378e-05, 2.1972000000002045e-05, 2.1555999999998965e-05, 2.163900000000385e-05, 2.115300000000292e-05, 2.152700000000035e-05, 2.198699999999415e-05, 2.152700000000035e-05, 2.197300000000152e-05, 2.1693999999995717e-05, 2.165299999999648e-05, 2.1820000000005724e-05]</msg>
<status status="PASS" starttime="20201030 18:29:02.256" endtime="20201030 18:29:02.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.245" endtime="20201030 18:29:02.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:02.272" endtime="20201030 18:29:02.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.268" endtime="20201030 18:29:02.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.265" endtime="20201030 18:29:02.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.776" endtime="20201030 18:29:02.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.775" endtime="20201030 18:29:02.297"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.320" endtime="20201030 18:29:02.335"></status>
</kw>
<msg timestamp="20201030 18:29:02.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.317" endtime="20201030 18:29:02.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.339" endtime="20201030 18:29:02.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.345" endtime="20201030 18:29:02.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.309" endtime="20201030 18:29:02.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.304" endtime="20201030 18:29:02.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.368" endtime="20201030 18:29:02.707"></status>
</kw>
<msg timestamp="20201030 18:29:02.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039754, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039775986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:02.365" endtime="20201030 18:29:02.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039754, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039775986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:02.717" endtime="20201030 18:29:02.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.736" endtime="20201030 18:29:02.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.358" endtime="20201030 18:29:02.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.353" endtime="20201030 18:29:02.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:02.753" level="INFO">${RESULT} = [{'diff': 2.1986000000001615e-05}, {'diff': 2.1986000000001615e-05}, {'diff': 2.166700000000299e-05}, {'diff': 2.180499999999974e-05}, {'diff': 2.115300000000292e-05}, {'diff': 2.1805999999999215e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:02.744" endtime="20201030 18:29:02.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:02.764" level="INFO">${ACCURACY} = {'diff': [2.1986000000001615e-05, 2.1986000000001615e-05, 2.166700000000299e-05, 2.180499999999974e-05, 2.115300000000292e-05, 2.1805999999999215e-05, 2.1472000000001545e-05, 2.1305999999998715e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:29:02.755" endtime="20201030 18:29:02.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.775" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 18:29:02.773" endtime="20201030 18:29:02.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.781" level="INFO">VALUE: [2.1986000000001615e-05, 2.1986000000001615e-05, 2.166700000000299e-05, 2.180499999999974e-05, 2.115300000000292e-05, 2.1805999999999215e-05, 2.1472000000001545e-05, 2.1305999999998715e-05, 2.1972000000002045e-05, 2.1972000000002045e-05, 2.116700000000249e-05, 2.115299999999598e-05, 2.112499999999684e-05, 2.188899999999716e-05, 2.162500000000428e-05, 2.1472000000001545e-05, 2.1472000000001545e-05, 2.180499999999974e-05, 2.129099999999967e-05, 2.1805999999999215e-05, 2.131899999999881e-05, 2.1972000000002045e-05, 2.1472000000001545e-05, 2.181900000000625e-05, 2.1193999999995217e-05, 2.155499999999949e-05, 2.1458000000001975e-05, 2.1306000000005654e-05, 2.1471999999994607e-05, 2.163899999999691e-05, 2.130499999999924e-05, 2.1277999999999575e-05, 2.1971999999995107e-05, 2.112500000000378e-05, 2.159700000000514e-05, 2.1805999999999215e-05, 2.163899999999691e-05, 2.161099999999777e-05, 2.1471999999994607e-05, 2.1208000000001725e-05, 2.1291999999999145e-05, 2.1972000000002045e-05, 2.118099999999512e-05, 2.1458000000001975e-05, 2.165300000000342e-05, 2.1556000000005904e-05, 2.1985999999994676e-05, 2.1306000000005654e-05, 2.163899999999691e-05, 2.113900000000335e-05]</msg>
<status status="PASS" starttime="20201030 18:29:02.777" endtime="20201030 18:29:02.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.766" endtime="20201030 18:29:02.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:02.793" endtime="20201030 18:29:02.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.789" endtime="20201030 18:29:02.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.786" endtime="20201030 18:29:02.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.299" endtime="20201030 18:29:02.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.298" endtime="20201030 18:29:02.818"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.842" endtime="20201030 18:29:02.857"></status>
</kw>
<msg timestamp="20201030 18:29:02.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.838" endtime="20201030 18:29:02.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.861" endtime="20201030 18:29:02.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.868" endtime="20201030 18:29:02.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.831" endtime="20201030 18:29:02.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.825" endtime="20201030 18:29:02.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.891" endtime="20201030 18:29:03.231"></status>
</kw>
<msg timestamp="20201030 18:29:03.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040770778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040792792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.888" endtime="20201030 18:29:03.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040770778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040792792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.241" endtime="20201030 18:29:03.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.260" endtime="20201030 18:29:03.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.881" endtime="20201030 18:29:03.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.876" endtime="20201030 18:29:03.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:03.277" level="INFO">${RESULT} = [{'diff': 2.2014000000000755e-05}, {'diff': 2.2014000000000755e-05}, {'diff': 2.113899999999641e-05}, {'diff': 2.14169999999958e-05}, {'diff': 2.180499999999974e-05}, {'diff': 2.1194000000002156e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:03.268" endtime="20201030 18:29:03.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:03.286" level="INFO">${ACCURACY} = {'diff': [2.2014000000000755e-05, 2.2014000000000755e-05, 2.113899999999641e-05, 2.14169999999958e-05, 2.180499999999974e-05, 2.1194000000002156e-05, 2.163900000000385e-05, 2.1972000000002045e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 18:29:03.279" endtime="20201030 18:29:03.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.297" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 18:29:03.295" endtime="20201030 18:29:03.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.303" level="INFO">VALUE: [2.2014000000000755e-05, 2.2014000000000755e-05, 2.113899999999641e-05, 2.14169999999958e-05, 2.180499999999974e-05, 2.1194000000002156e-05, 2.163900000000385e-05, 2.1972000000002045e-05, 2.179100000000017e-05, 2.113899999999641e-05, 2.1805999999999215e-05, 2.1805999999999215e-05, 2.0971999999994106e-05, 2.1848000000004864e-05, 2.1472000000001545e-05, 2.115300000000292e-05, 2.1805999999999215e-05, 2.112499999999684e-05, 2.1291999999999145e-05, 2.1778000000000075e-05, 2.1305999999998715e-05, 2.1805999999999215e-05, 2.1306000000005654e-05, 2.1958000000002476e-05, 2.1986000000001615e-05, 2.115300000000292e-05, 2.161099999999777e-05, 2.1764000000000505e-05, 2.1791999999999645e-05, 2.1486000000001115e-05, 2.097300000000052e-05, 2.129099999999967e-05, 2.1291999999999145e-05, 2.183299999999888e-05, 2.130499999999924e-05, 2.112500000000378e-05, 2.181900000000625e-05, 2.1986000000001615e-05, 2.1457999999995037e-05, 2.1652000000003946e-05, 2.163900000000385e-05, 2.163900000000385e-05, 2.1486000000001115e-05, 2.1499999999993746e-05, 2.181899999999931e-05, 2.2000000000001185e-05, 2.115300000000292e-05, 2.1458000000001975e-05, 2.147300000000102e-05, 2.112500000000378e-05]</msg>
<status status="PASS" starttime="20201030 18:29:03.300" endtime="20201030 18:29:03.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.288" endtime="20201030 18:29:03.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:03.316" endtime="20201030 18:29:03.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.311" endtime="20201030 18:29:03.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.309" endtime="20201030 18:29:03.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.820" endtime="20201030 18:29:03.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.819" endtime="20201030 18:29:03.341"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.364" endtime="20201030 18:29:03.379"></status>
</kw>
<msg timestamp="20201030 18:29:03.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.360" endtime="20201030 18:29:03.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.382" endtime="20201030 18:29:03.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.388" endtime="20201030 18:29:03.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.353" endtime="20201030 18:29:03.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.347" endtime="20201030 18:29:03.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.414" endtime="20201030 18:29:03.751"></status>
</kw>
<msg timestamp="20201030 18:29:03.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039745153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039766639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.410" endtime="20201030 18:29:03.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039745153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039766639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.760" endtime="20201030 18:29:03.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.779" endtime="20201030 18:29:03.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.403" endtime="20201030 18:29:03.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.398" endtime="20201030 18:29:03.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:03.797" level="INFO">${RESULT} = [{'diff': 2.1486000000001115e-05}, {'diff': 2.1305999999998715e-05}, {'diff': 2.1791999999999645e-05}, {'diff': 2.115300000000292e-05}, {'diff': 2.1986000000001615e-05}, {'diff': 2.1486000000001115e-0...</msg>
<status status="PASS" starttime="20201030 18:29:03.788" endtime="20201030 18:29:03.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:03.806" level="INFO">${ACCURACY} = {'diff': [2.1486000000001115e-05, 2.1305999999998715e-05, 2.1791999999999645e-05, 2.115300000000292e-05, 2.1986000000001615e-05, 2.1486000000001115e-05, 2.183299999999888e-05, 2.1985999999994676e-05, ...</msg>
<status status="PASS" starttime="20201030 18:29:03.799" endtime="20201030 18:29:03.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.817" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 18:29:03.815" endtime="20201030 18:29:03.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.823" level="INFO">VALUE: [2.1486000000001115e-05, 2.1305999999998715e-05, 2.1791999999999645e-05, 2.115300000000292e-05, 2.1986000000001615e-05, 2.1486000000001115e-05, 2.183299999999888e-05, 2.1985999999994676e-05, 2.1707999999995287e-05, 2.165299999999648e-05, 2.1486000000001115e-05, 2.1486000000001115e-05, 2.166700000000299e-05, 2.1000000000000185e-05, 2.1819999999998785e-05, 2.1291999999999145e-05, 2.1819999999998785e-05, 2.148700000000059e-05, 2.1334000000004794e-05, 2.162500000000428e-05, 2.112499999999684e-05, 2.180499999999974e-05, 2.1986000000001615e-05, 2.147300000000102e-05, 2.1486000000001115e-05, 2.165300000000342e-05, 2.1971999999995107e-05, 2.163899999999691e-05, 2.1305999999998715e-05, 2.1805999999999215e-05, 2.130499999999924e-05, 2.1834000000005294e-05, 2.113900000000335e-05, 2.1250000000000435e-05, 2.1151999999996507e-05, 2.194500000000238e-05, 2.1319999999998285e-05, 2.184699999999845e-05, 2.2014000000000755e-05, 2.0943999999994967e-05, 2.163899999999691e-05, 2.113900000000335e-05, 2.129099999999967e-05, 2.184699999999845e-05, 2.168100000000256e-05, 2.1791999999999645e-05, 2.1805999999999215e-05, 2.1791999999999645e-05, 2.1986000000001615e-05, 2.1791999999999645e-05]</msg>
<status status="PASS" starttime="20201030 18:29:03.819" endtime="20201030 18:29:03.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.808" endtime="20201030 18:29:03.826"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:03.837" endtime="20201030 18:29:03.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.831" endtime="20201030 18:29:03.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.828" endtime="20201030 18:29:03.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.343" endtime="20201030 18:29:03.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.342" endtime="20201030 18:29:03.862"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.886" endtime="20201030 18:29:03.902"></status>
</kw>
<msg timestamp="20201030 18:29:03.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.882" endtime="20201030 18:29:03.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.905" endtime="20201030 18:29:03.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.911" endtime="20201030 18:29:03.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.875" endtime="20201030 18:29:03.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.869" endtime="20201030 18:29:03.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.935" endtime="20201030 18:29:04.274"></status>
</kw>
<msg timestamp="20201030 18:29:04.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041495236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041517208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.932" endtime="20201030 18:29:04.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041495236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041517208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.283" endtime="20201030 18:29:04.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.302" endtime="20201030 18:29:04.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.924" endtime="20201030 18:29:04.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.920" endtime="20201030 18:29:04.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:04.319" level="INFO">${RESULT} = [{'diff': 2.1972000000002045e-05}, {'diff': 2.1306000000005654e-05}, {'diff': 2.162499999999734e-05}, {'diff': 2.181899999999931e-05}, {'diff': 2.112499999999684e-05}, {'diff': 2.113899999999641e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:04.310" endtime="20201030 18:29:04.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:04.330" level="INFO">${ACCURACY} = {'diff': [2.1972000000002045e-05, 2.1306000000005654e-05, 2.162499999999734e-05, 2.181899999999931e-05, 2.112499999999684e-05, 2.113899999999641e-05, 2.112500000000378e-05, 2.1972000000002045e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 18:29:04.321" endtime="20201030 18:29:04.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.341" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 18:29:04.339" endtime="20201030 18:29:04.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.346" level="INFO">VALUE: [2.1972000000002045e-05, 2.1306000000005654e-05, 2.162499999999734e-05, 2.181899999999931e-05, 2.112499999999684e-05, 2.113899999999641e-05, 2.112500000000378e-05, 2.1972000000002045e-05, 2.111099999999727e-05, 2.1264000000000005e-05, 2.1972000000002045e-05, 2.115300000000292e-05, 2.1791999999999645e-05, 2.197300000000152e-05, 2.1444000000002406e-05, 2.1972000000002045e-05, 2.1652000000003946e-05, 2.130499999999924e-05, 2.179100000000017e-05, 2.1291999999999145e-05, 2.1652000000003946e-05, 2.1166000000003016e-05, 2.113900000000335e-05, 2.1291999999999145e-05, 2.118099999999512e-05, 2.180499999999974e-05, 2.1291999999999145e-05, 2.1458000000001975e-05, 2.1972000000002045e-05, 2.1305999999998715e-05, 2.1472000000001545e-05, 2.181899999999931e-05, 2.181899999999931e-05, 2.129099999999967e-05, 2.1986000000001615e-05, 2.163899999999691e-05, 2.1471999999994607e-05, 2.113900000000335e-05, 2.113899999999641e-05, 2.165300000000342e-05, 2.119499999999469e-05, 2.12770000000001e-05, 2.113900000000335e-05, 2.112499999999684e-05, 2.1472000000001545e-05, 2.113900000000335e-05, 2.161100000000471e-05, 2.165300000000342e-05, 2.1221999999994356e-05, 2.1791999999999645e-05]</msg>
<status status="PASS" starttime="20201030 18:29:04.343" endtime="20201030 18:29:04.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.332" endtime="20201030 18:29:04.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:04.359" endtime="20201030 18:29:04.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.355" endtime="20201030 18:29:04.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.352" endtime="20201030 18:29:04.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.864" endtime="20201030 18:29:04.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.863" endtime="20201030 18:29:04.384"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.407" endtime="20201030 18:29:04.422"></status>
</kw>
<msg timestamp="20201030 18:29:04.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.404" endtime="20201030 18:29:04.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.426" endtime="20201030 18:29:04.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.432" endtime="20201030 18:29:04.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.396" endtime="20201030 18:29:04.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.391" endtime="20201030 18:29:04.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.456" endtime="20201030 18:29:04.794"></status>
</kw>
<msg timestamp="20201030 18:29:04.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039840444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039868722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.452" endtime="20201030 18:29:04.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039840444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039868722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.804" endtime="20201030 18:29:04.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.823" endtime="20201030 18:29:04.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.445" endtime="20201030 18:29:04.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.440" endtime="20201030 18:29:04.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:04.841" level="INFO">${RESULT} = [{'diff': 2.8277999999999637e-05}, {'diff': 2.8804999999999803e-05}, {'diff': 2.8972000000002107e-05}, {'diff': 2.8805999999999277e-05}, {'diff': 2.8291999999999207e-05}, {'diff': 2.8486000000001177e-...</msg>
<status status="PASS" starttime="20201030 18:29:04.832" endtime="20201030 18:29:04.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:04.854" level="INFO">${ACCURACY} = {'diff': [2.8277999999999637e-05, 2.8804999999999803e-05, 2.8972000000002107e-05, 2.8805999999999277e-05, 2.8291999999999207e-05, 2.8486000000001177e-05, 2.8596999999998263e-05, 2.8958000000002537e-05...</msg>
<status status="PASS" starttime="20201030 18:29:04.843" endtime="20201030 18:29:04.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.867" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 18:29:04.864" endtime="20201030 18:29:04.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.873" level="INFO">VALUE: [2.8277999999999637e-05, 2.8804999999999803e-05, 2.8972000000002107e-05, 2.8805999999999277e-05, 2.8291999999999207e-05, 2.8486000000001177e-05, 2.8596999999998263e-05, 2.8958000000002537e-05, 2.8318999999998873e-05, 2.8860999999998083e-05, 2.8750000000000997e-05, 2.863900000000391e-05, 2.8972000000002107e-05, 2.8472000000001607e-05, 2.8152999999996042e-05, 2.8318999999998873e-05, 2.813900000000341e-05, 2.8986000000001677e-05, 2.8972000000002107e-05, 2.8819999999998847e-05, 2.8458999999994572e-05, 2.865199999999707e-05, 2.8138999999996472e-05, 2.8458000000002037e-05, 2.863900000000391e-05, 2.8874999999997653e-05, 2.808300000000513e-05, 2.8138999999996472e-05, 2.8486000000001177e-05, 2.8638999999996972e-05, 2.815300000000298e-05, 2.8624999999997403e-05, 2.8291999999999207e-05, 2.862500000000434e-05, 2.8986000000001677e-05, 2.819399999999528e-05, 2.8582999999998693e-05, 2.8986000000001677e-05, 2.8471999999994668e-05, 2.8972000000002107e-05, 2.844399999999553e-05, 2.8068999999998623e-05, 2.8472000000001607e-05, 2.8263000000000593e-05, 2.815300000000298e-05, 2.8971999999995168e-05, 2.8277000000000163e-05, 2.8902999999996792e-05, 2.8638999999996972e-05, 2.8514000000000317e-05]</msg>
<status status="PASS" starttime="20201030 18:29:04.869" endtime="20201030 18:29:04.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.856" endtime="20201030 18:29:04.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:04.889" endtime="20201030 18:29:04.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.884" endtime="20201030 18:29:04.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.880" endtime="20201030 18:29:04.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.386" endtime="20201030 18:29:04.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.385" endtime="20201030 18:29:04.914"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.939" endtime="20201030 18:29:04.954"></status>
</kw>
<msg timestamp="20201030 18:29:04.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.935" endtime="20201030 18:29:04.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.958" endtime="20201030 18:29:04.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.964" endtime="20201030 18:29:04.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.927" endtime="20201030 18:29:04.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.921" endtime="20201030 18:29:04.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.988" endtime="20201030 18:29:05.329"></status>
</kw>
<msg timestamp="20201030 18:29:05.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041910833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041939806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.985" endtime="20201030 18:29:05.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041910833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041939806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.339" endtime="20201030 18:29:05.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.358" endtime="20201030 18:29:05.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.977" endtime="20201030 18:29:05.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.973" endtime="20201030 18:29:05.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:05.375" level="INFO">${RESULT} = [{'diff': 2.897300000000158e-05}, {'diff': 2.8638999999996972e-05}, {'diff': 2.8652999999996542e-05}, {'diff': 2.8624999999997403e-05}, {'diff': 2.8277999999999637e-05}, {'diff': 2.8610999999997833e-0...</msg>
<status status="PASS" starttime="20201030 18:29:05.366" endtime="20201030 18:29:05.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:05.385" level="INFO">${ACCURACY} = {'diff': [2.897300000000158e-05, 2.8638999999996972e-05, 2.8652999999996542e-05, 2.8624999999997403e-05, 2.8277999999999637e-05, 2.8610999999997833e-05, 2.8304999999999303e-05, 2.8305999999998777e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:05.377" endtime="20201030 18:29:05.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.396" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 18:29:05.393" endtime="20201030 18:29:05.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.401" level="INFO">VALUE: [2.897300000000158e-05, 2.8638999999996972e-05, 2.8652999999996542e-05, 2.8624999999997403e-05, 2.8277999999999637e-05, 2.8610999999997833e-05, 2.8304999999999303e-05, 2.8305999999998777e-05, 2.8264000000000067e-05, 2.863900000000391e-05, 2.8778000000000137e-05, 2.845900000000151e-05, 2.8778000000000137e-05, 2.8791999999999707e-05, 2.8444000000002467e-05, 2.8138999999996472e-05, 2.845900000000151e-05, 2.8152999999996042e-05, 2.8304999999999303e-05, 2.8458000000002037e-05, 2.8971999999995168e-05, 2.845900000000151e-05, 2.8500000000000747e-05, 2.8958999999995072e-05, 2.8305999999998777e-05, 2.8500000000000747e-05, 2.8985999999994738e-05, 2.8624999999997403e-05, 2.8430000000002897e-05, 2.862500000000434e-05, 2.8152999999996042e-05, 2.8472000000001607e-05, 2.8791999999999707e-05, 2.8958000000002537e-05, 2.8652999999996542e-05, 2.869500000000219e-05, 2.812500000000384e-05, 2.847300000000108e-05, 2.8305999999998777e-05, 2.8805999999999277e-05, 2.8986000000001677e-05, 2.8305999999998777e-05, 2.8958000000002537e-05, 2.8472000000001607e-05, 2.9000000000001247e-05, 2.8804999999999803e-05, 2.895900000000201e-05, 2.813900000000341e-05, 2.812500000000384e-05, 2.863900000000391e-05]</msg>
<status status="PASS" starttime="20201030 18:29:05.398" endtime="20201030 18:29:05.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.387" endtime="20201030 18:29:05.404"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:05.414" endtime="20201030 18:29:05.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.409" endtime="20201030 18:29:05.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.407" endtime="20201030 18:29:05.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.917" endtime="20201030 18:29:05.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.915" endtime="20201030 18:29:05.439"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.462" endtime="20201030 18:29:05.478"></status>
</kw>
<msg timestamp="20201030 18:29:05.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.459" endtime="20201030 18:29:05.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.482" endtime="20201030 18:29:05.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.488" endtime="20201030 18:29:05.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.452" endtime="20201030 18:29:05.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.446" endtime="20201030 18:29:05.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.513" endtime="20201030 18:29:05.853"></status>
</kw>
<msg timestamp="20201030 18:29:05.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040675917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040704542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.510" endtime="20201030 18:29:05.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040675917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040704542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.862" endtime="20201030 18:29:05.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.881" endtime="20201030 18:29:05.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.503" endtime="20201030 18:29:05.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.498" endtime="20201030 18:29:05.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:05.899" level="INFO">${RESULT} = [{'diff': 2.862500000000434e-05}, {'diff': 2.893100000000287e-05}, {'diff': 2.894500000000244e-05}, {'diff': 2.8818999999999373e-05}, {'diff': 2.8472000000001607e-05}, {'diff': 2.8472000000001607e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:05.890" endtime="20201030 18:29:05.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:05.908" level="INFO">${ACCURACY} = {'diff': [2.862500000000434e-05, 2.893100000000287e-05, 2.894500000000244e-05, 2.8818999999999373e-05, 2.8472000000001607e-05, 2.8472000000001607e-05, 2.8818999999999373e-05, 2.8791000000000233e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:29:05.901" endtime="20201030 18:29:05.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.919" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 18:29:05.917" endtime="20201030 18:29:05.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.924" level="INFO">VALUE: [2.862500000000434e-05, 2.893100000000287e-05, 2.894500000000244e-05, 2.8818999999999373e-05, 2.8472000000001607e-05, 2.8472000000001607e-05, 2.8818999999999373e-05, 2.8791000000000233e-05, 2.8638999999996972e-05, 2.862500000000434e-05, 2.8624999999997403e-05, 2.8138999999996472e-05, 2.8305999999998777e-05, 2.8110999999997333e-05, 2.8666000000003578e-05, 2.8250000000000497e-05, 2.8541999999999457e-05, 2.893100000000287e-05, 2.8805999999999277e-05, 2.8152000000003508e-05, 2.8138999999996472e-05, 2.8610999999997833e-05, 2.813900000000341e-05, 2.811100000000427e-05, 2.8471999999994668e-05, 2.9014000000000817e-05, 2.8333999999997916e-05, 2.8986000000001677e-05, 2.8304999999999303e-05, 2.8124999999996902e-05, 2.8305999999998777e-05, 2.8986000000001677e-05, 2.8638999999996972e-05, 2.862500000000434e-05, 2.8958999999995072e-05, 2.816700000000255e-05, 2.8986000000001677e-05, 2.8596999999998263e-05, 2.8152999999996042e-05, 2.8124999999996902e-05, 2.8624999999997403e-05, 2.8472000000001607e-05, 2.8985999999994738e-05, 2.8290999999999733e-05, 2.865300000000348e-05, 2.863900000000391e-05, 2.8290999999999733e-05, 2.812500000000384e-05, 2.8610999999997833e-05, 2.8804999999999803e-05]</msg>
<status status="PASS" starttime="20201030 18:29:05.921" endtime="20201030 18:29:05.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.910" endtime="20201030 18:29:05.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:05.939" endtime="20201030 18:29:05.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.933" endtime="20201030 18:29:05.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.930" endtime="20201030 18:29:05.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.442" endtime="20201030 18:29:05.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.440" endtime="20201030 18:29:05.965"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.993" endtime="20201030 18:29:06.010"></status>
</kw>
<msg timestamp="20201030 18:29:06.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.989" endtime="20201030 18:29:06.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.013" endtime="20201030 18:29:06.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.019" endtime="20201030 18:29:06.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.981" endtime="20201030 18:29:06.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.974" endtime="20201030 18:29:06.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.043" endtime="20201030 18:29:06.382"></status>
</kw>
<msg timestamp="20201030 18:29:06.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046336222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046364681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.040" endtime="20201030 18:29:06.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046336222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046364681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.392" endtime="20201030 18:29:06.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.410" endtime="20201030 18:29:06.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.032" endtime="20201030 18:29:06.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.028" endtime="20201030 18:29:06.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:06.428" level="INFO">${RESULT} = [{'diff': 2.8458999999994572e-05}, {'diff': 2.8444999999995002e-05}, {'diff': 2.8124999999996902e-05}, {'diff': 2.9000000000001247e-05}, {'diff': 2.8458000000002037e-05}, {'diff': 2.8820000000005785e-...</msg>
<status status="PASS" starttime="20201030 18:29:06.419" endtime="20201030 18:29:06.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:06.438" level="INFO">${ACCURACY} = {'diff': [2.8458999999994572e-05, 2.8444999999995002e-05, 2.8124999999996902e-05, 2.9000000000001247e-05, 2.8458000000002037e-05, 2.8820000000005785e-05, 2.8805999999999277e-05, 2.897300000000158e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:06.430" endtime="20201030 18:29:06.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.452" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 18:29:06.449" endtime="20201030 18:29:06.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.458" level="INFO">VALUE: [2.8458999999994572e-05, 2.8444999999995002e-05, 2.8124999999996902e-05, 2.9000000000001247e-05, 2.8458000000002037e-05, 2.8820000000005785e-05, 2.8805999999999277e-05, 2.897300000000158e-05, 2.8820000000005785e-05, 2.8458000000002037e-05, 2.8472000000001607e-05, 2.84579999999951e-05, 2.8138999999996472e-05, 2.8305999999998777e-05, 2.813900000000341e-05, 2.8778000000000137e-05, 2.812500000000384e-05, 2.8972000000002107e-05, 2.8124999999996902e-05, 2.8792000000006646e-05, 2.8305999999998777e-05, 2.845900000000151e-05, 2.9014000000000817e-05, 2.89579999999956e-05, 2.8777000000000663e-05, 2.8958000000002537e-05, 2.890300000000373e-05, 2.8540999999999983e-05, 2.8110999999997333e-05, 2.862500000000434e-05, 2.815199999999657e-05, 2.8458000000002037e-05, 2.813900000000341e-05, 2.8305999999998777e-05, 2.8472000000001607e-05, 2.8291999999999207e-05, 2.8680000000003147e-05, 2.8624999999997403e-05, 2.8638999999996972e-05, 2.89170000000033e-05, 2.8778000000000137e-05, 2.8304999999999303e-05, 2.8346999999998013e-05, 2.8972999999994642e-05, 2.8972000000002107e-05, 2.9013000000001343e-05, 2.8958000000002537e-05, 2.8458000000002037e-05, 2.8124999999996902e-05, 2.8319999999998346e-05]</msg>
<status status="PASS" starttime="20201030 18:29:06.454" endtime="20201030 18:29:06.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.440" endtime="20201030 18:29:06.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:06.473" endtime="20201030 18:29:06.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.468" endtime="20201030 18:29:06.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.464" endtime="20201030 18:29:06.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.968" endtime="20201030 18:29:06.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.967" endtime="20201030 18:29:06.499"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.522" endtime="20201030 18:29:06.538"></status>
</kw>
<msg timestamp="20201030 18:29:06.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.519" endtime="20201030 18:29:06.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.542" endtime="20201030 18:29:06.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.548" endtime="20201030 18:29:06.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.512" endtime="20201030 18:29:06.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.506" endtime="20201030 18:29:06.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.571" endtime="20201030 18:29:06.910"></status>
</kw>
<msg timestamp="20201030 18:29:06.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041427569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041455861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.568" endtime="20201030 18:29:06.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041427569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041455861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.920" endtime="20201030 18:29:06.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.939" endtime="20201030 18:29:06.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.561" endtime="20201030 18:29:06.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.556" endtime="20201030 18:29:06.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:06.956" level="INFO">${RESULT} = [{'diff': 2.8291999999999207e-05}, {'diff': 2.8819999999998847e-05}, {'diff': 2.9000000000001247e-05}, {'diff': 2.8486000000001177e-05}, {'diff': 2.813900000000341e-05}, {'diff': 2.8791999999999707e-0...</msg>
<status status="PASS" starttime="20201030 18:29:06.947" endtime="20201030 18:29:06.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:06.971" level="INFO">${ACCURACY} = {'diff': [2.8291999999999207e-05, 2.8819999999998847e-05, 2.9000000000001247e-05, 2.8486000000001177e-05, 2.813900000000341e-05, 2.8791999999999707e-05, 2.8458000000002037e-05, 2.8958000000002537e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:06.958" endtime="20201030 18:29:06.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.983" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 18:29:06.980" endtime="20201030 18:29:06.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.989" level="INFO">VALUE: [2.8291999999999207e-05, 2.8819999999998847e-05, 2.9000000000001247e-05, 2.8486000000001177e-05, 2.813900000000341e-05, 2.8791999999999707e-05, 2.8458000000002037e-05, 2.8958000000002537e-05, 2.8972000000002107e-05, 2.8305999999998777e-05, 2.8818999999999373e-05, 2.8680999999995682e-05, 2.844399999999553e-05, 2.8305999999998777e-05, 2.8291999999999207e-05, 2.8472000000001607e-05, 2.8112000000003745e-05, 2.8472999999994142e-05, 2.812500000000384e-05, 2.8638999999996972e-05, 2.8291000000006672e-05, 2.8124999999996902e-05, 2.9000000000001247e-05, 2.8332999999998443e-05, 2.8124999999996902e-05, 2.812500000000384e-05, 2.8972000000002107e-05, 2.8472000000001607e-05, 2.815300000000298e-05, 2.8624999999997403e-05, 2.8471999999994668e-05, 2.8804999999999803e-05, 2.8805999999999277e-05, 2.8638999999996972e-05, 2.8638999999996972e-05, 2.8805999999999277e-05, 2.8916999999996362e-05, 2.8486000000001177e-05, 2.8471999999994668e-05, 2.8458000000002037e-05, 2.8986000000001677e-05, 2.8290999999999733e-05, 2.8290999999999733e-05, 2.8277999999999637e-05, 2.8290999999999733e-05, 2.8848000000004925e-05, 2.8486000000001177e-05, 2.865199999999707e-05, 2.8804999999999803e-05, 2.8138999999996472e-05]</msg>
<status status="PASS" starttime="20201030 18:29:06.985" endtime="20201030 18:29:06.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.973" endtime="20201030 18:29:06.997"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:07.007" endtime="20201030 18:29:07.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.003" endtime="20201030 18:29:07.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.000" endtime="20201030 18:29:07.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.501" endtime="20201030 18:29:07.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.500" endtime="20201030 18:29:07.035"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.064" endtime="20201030 18:29:07.102"></status>
</kw>
<msg timestamp="20201030 18:29:07.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.060" endtime="20201030 18:29:07.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.110" endtime="20201030 18:29:07.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.122" endtime="20201030 18:29:07.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.052" endtime="20201030 18:29:07.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.043" endtime="20201030 18:29:07.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.165" endtime="20201030 18:29:07.515"></status>
</kw>
<msg timestamp="20201030 18:29:07.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051360292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051388444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.159" endtime="20201030 18:29:07.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051360292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051388444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.524" endtime="20201030 18:29:07.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.543" endtime="20201030 18:29:07.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.146" endtime="20201030 18:29:07.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.137" endtime="20201030 18:29:07.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:07.560" level="INFO">${RESULT} = [{'diff': 2.815199999999657e-05}, {'diff': 2.8986000000001677e-05}, {'diff': 2.9041000000000483e-05}, {'diff': 2.813900000000341e-05}, {'diff': 2.815199999999657e-05}, {'diff': 2.844500000000194e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:07.551" endtime="20201030 18:29:07.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:07.570" level="INFO">${ACCURACY} = {'diff': [2.815199999999657e-05, 2.8986000000001677e-05, 2.9041000000000483e-05, 2.813900000000341e-05, 2.815199999999657e-05, 2.844500000000194e-05, 2.8986000000001677e-05, 2.8820000000005785e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:29:07.562" endtime="20201030 18:29:07.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.580" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 18:29:07.578" endtime="20201030 18:29:07.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.586" level="INFO">VALUE: [2.815199999999657e-05, 2.8986000000001677e-05, 2.9041000000000483e-05, 2.813900000000341e-05, 2.815199999999657e-05, 2.844500000000194e-05, 2.8986000000001677e-05, 2.8820000000005785e-05, 2.8458000000002037e-05, 2.9000000000001247e-05, 2.8804999999999803e-05, 2.8277000000000163e-05, 2.8555999999999027e-05, 2.813900000000341e-05, 2.8804999999999803e-05, 2.8318999999998873e-05, 2.8138999999996472e-05, 2.8152999999996042e-05, 2.8764000000000567e-05, 2.8804999999999803e-05, 2.8471999999994668e-05, 2.8846999999998513e-05, 2.862500000000434e-05, 2.8846999999998513e-05, 2.813900000000341e-05, 2.8860999999998083e-05, 2.891599999999689e-05, 2.8208000000001787e-05, 2.8971999999995168e-05, 2.8805999999999277e-05, 2.8472000000001607e-05, 2.8610999999997833e-05, 2.8291999999999207e-05, 2.866700000000305e-05, 2.897300000000158e-05, 2.819500000000169e-05, 2.862500000000434e-05, 2.8806000000006216e-05, 2.8986000000001677e-05, 2.9000000000001247e-05, 2.8986000000001677e-05, 2.8124999999996902e-05, 2.8458000000002037e-05, 2.8999999999994308e-05, 2.8805999999999277e-05, 2.8471999999994668e-05, 2.8638999999996972e-05, 2.8972000000002107e-05, 2.8486000000001177e-05, 2.834700000000495e-05]</msg>
<status status="PASS" starttime="20201030 18:29:07.583" endtime="20201030 18:29:07.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.571" endtime="20201030 18:29:07.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:07.598" endtime="20201030 18:29:07.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.594" endtime="20201030 18:29:07.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.591" endtime="20201030 18:29:07.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.038" endtime="20201030 18:29:07.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.036" endtime="20201030 18:29:07.623"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.646" endtime="20201030 18:29:07.663"></status>
</kw>
<msg timestamp="20201030 18:29:07.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.642" endtime="20201030 18:29:07.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.666" endtime="20201030 18:29:07.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.672" endtime="20201030 18:29:07.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.635" endtime="20201030 18:29:07.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.630" endtime="20201030 18:29:07.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.696" endtime="20201030 18:29:08.040"></status>
</kw>
<msg timestamp="20201030 18:29:08.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041135889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041164681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.692" endtime="20201030 18:29:08.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041135889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041164681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.050" endtime="20201030 18:29:08.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.069" endtime="20201030 18:29:08.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.685" endtime="20201030 18:29:08.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.680" endtime="20201030 18:29:08.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:08.087" level="INFO">${RESULT} = [{'diff': 2.8791999999999707e-05}, {'diff': 2.8138999999996472e-05}, {'diff': 2.8610999999997833e-05}, {'diff': 2.8290999999999733e-05}, {'diff': 2.8347999999997486e-05}, {'diff': 2.8290999999999733e-...</msg>
<status status="PASS" starttime="20201030 18:29:08.078" endtime="20201030 18:29:08.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:08.097" level="INFO">${ACCURACY} = {'diff': [2.8791999999999707e-05, 2.8138999999996472e-05, 2.8610999999997833e-05, 2.8290999999999733e-05, 2.8347999999997486e-05, 2.8290999999999733e-05, 2.8291999999999207e-05, 2.836100000000452e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:08.089" endtime="20201030 18:29:08.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.108" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 18:29:08.106" endtime="20201030 18:29:08.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.113" level="INFO">VALUE: [2.8791999999999707e-05, 2.8138999999996472e-05, 2.8610999999997833e-05, 2.8290999999999733e-05, 2.8347999999997486e-05, 2.8290999999999733e-05, 2.8291999999999207e-05, 2.836100000000452e-05, 2.8972000000002107e-05, 2.8277000000000163e-05, 2.895900000000201e-05, 2.8610999999997833e-05, 2.8124999999996902e-05, 2.8972000000002107e-05, 2.8458000000002037e-05, 2.862500000000434e-05, 2.863900000000391e-05, 2.815300000000298e-05, 2.8124999999996902e-05, 2.8124999999996902e-05, 2.9000000000001247e-05, 2.863900000000391e-05, 2.8292000000006146e-05, 2.845900000000151e-05, 2.8486000000001177e-05, 2.863900000000391e-05, 2.897300000000158e-05, 2.8291999999999207e-05, 2.8444000000002467e-05, 2.844399999999553e-05, 2.8638999999996972e-05, 2.8472000000001607e-05, 2.8958000000002537e-05, 2.8596999999998263e-05, 2.8819999999998847e-05, 2.838900000000366e-05, 2.8291999999999207e-05, 2.8805999999999277e-05, 2.9000000000001247e-05, 2.8624999999997403e-05, 2.8374999999997152e-05, 2.8069000000005562e-05, 2.895900000000201e-05, 2.8971999999995168e-05, 2.819500000000169e-05, 2.868100000000262e-05, 2.8972000000002107e-05, 2.8820000000005785e-05, 2.8805999999999277e-05, 2.8958000000002537e-05]</msg>
<status status="PASS" starttime="20201030 18:29:08.110" endtime="20201030 18:29:08.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.099" endtime="20201030 18:29:08.116"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:08.128" endtime="20201030 18:29:08.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.122" endtime="20201030 18:29:08.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.119" endtime="20201030 18:29:08.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.625" endtime="20201030 18:29:08.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.624" endtime="20201030 18:29:08.153"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.176" endtime="20201030 18:29:08.194"></status>
</kw>
<msg timestamp="20201030 18:29:08.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.173" endtime="20201030 18:29:08.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.198" endtime="20201030 18:29:08.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.204" endtime="20201030 18:29:08.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.165" endtime="20201030 18:29:08.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.160" endtime="20201030 18:29:08.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.228" endtime="20201030 18:29:08.578"></status>
</kw>
<msg timestamp="20201030 18:29:08.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040685347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040720681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.225" endtime="20201030 18:29:08.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040685347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040720681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.589" endtime="20201030 18:29:08.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.609" endtime="20201030 18:29:08.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.217" endtime="20201030 18:29:08.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.213" endtime="20201030 18:29:08.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:08.626" level="INFO">${RESULT} = [{'diff': 3.533400000000492e-05}, {'diff': 3.56250000000044e-05}, {'diff': 3.582000000000585e-05}, {'diff': 3.5304999999999365e-05}, {'diff': 3.513900000000347e-05}, {'diff': 3.56250000000044e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:08.618" endtime="20201030 18:29:08.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:08.637" level="INFO">${ACCURACY} = {'diff': [3.533400000000492e-05, 3.56250000000044e-05, 3.582000000000585e-05, 3.5304999999999365e-05, 3.513900000000347e-05, 3.56250000000044e-05, 3.513900000000347e-05, 3.530599999999884e-05, 3.51530...</msg>
<status status="PASS" starttime="20201030 18:29:08.629" endtime="20201030 18:29:08.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.648" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 18:29:08.646" endtime="20201030 18:29:08.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.654" level="INFO">VALUE: [3.533400000000492e-05, 3.56250000000044e-05, 3.582000000000585e-05, 3.5304999999999365e-05, 3.513900000000347e-05, 3.56250000000044e-05, 3.513900000000347e-05, 3.530599999999884e-05, 3.515300000000304e-05, 3.530600000000578e-05, 3.547300000000114e-05, 3.595900000000207e-05, 3.548600000000124e-05, 3.5318999999998935e-05, 3.597199999999523e-05, 3.530599999999884e-05, 3.56250000000044e-05, 3.531999999999841e-05, 3.563900000000397e-05, 3.580599999999934e-05, 3.5777000000000725e-05, 3.513900000000347e-05, 3.547300000000114e-05, 3.5972999999994704e-05, 3.5791000000000295e-05, 3.52779999999997e-05, 3.5610999999997894e-05, 3.588900000000422e-05, 3.619500000000275e-05, 3.545799999999516e-05, 3.5304999999999365e-05, 3.5138999999996534e-05, 3.54580000000021e-05, 3.595799999999566e-05, 3.595799999999566e-05, 3.591600000000389e-05, 3.547200000000167e-05, 3.531999999999841e-05, 3.598600000000174e-05, 3.513900000000347e-05, 3.543000000000296e-05, 3.598600000000174e-05, 3.5791000000000295e-05, 3.56380000000045e-05, 3.5180999999995244e-05, 3.597300000000164e-05, 3.515300000000304e-05, 3.56380000000045e-05, 3.613900000000447e-05, 3.51250000000039e-05]</msg>
<status status="PASS" starttime="20201030 18:29:08.651" endtime="20201030 18:29:08.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.639" endtime="20201030 18:29:08.657"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:08.666" endtime="20201030 18:29:08.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.662" endtime="20201030 18:29:08.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.659" endtime="20201030 18:29:08.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.155" endtime="20201030 18:29:08.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.154" endtime="20201030 18:29:08.691"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.714" endtime="20201030 18:29:08.730"></status>
</kw>
<msg timestamp="20201030 18:29:08.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.711" endtime="20201030 18:29:08.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.734" endtime="20201030 18:29:08.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.740" endtime="20201030 18:29:08.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.703" endtime="20201030 18:29:08.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.698" endtime="20201030 18:29:08.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.763" endtime="20201030 18:29:09.109"></status>
</kw>
<msg timestamp="20201030 18:29:09.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039908375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039943472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.760" endtime="20201030 18:29:09.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039908375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039943472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.119" endtime="20201030 18:29:09.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.137" endtime="20201030 18:29:09.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.753" endtime="20201030 18:29:09.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.748" endtime="20201030 18:29:09.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:09.155" level="INFO">${RESULT} = [{'diff': 3.5096999999997824e-05}, {'diff': 3.5304999999999365e-05}, {'diff': 3.56380000000045e-05}, {'diff': 3.580599999999934e-05}, {'diff': 3.530599999999884e-05}, {'diff': 3.515300000000304e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:09.146" endtime="20201030 18:29:09.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:09.166" level="INFO">${ACCURACY} = {'diff': [3.5096999999997824e-05, 3.5304999999999365e-05, 3.56380000000045e-05, 3.580599999999934e-05, 3.530599999999884e-05, 3.515300000000304e-05, 3.505600000000553e-05, 3.5624999999997464e-05, 3.57...</msg>
<status status="PASS" starttime="20201030 18:29:09.157" endtime="20201030 18:29:09.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.177" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 18:29:09.175" endtime="20201030 18:29:09.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.182" level="INFO">VALUE: [3.5096999999997824e-05, 3.5304999999999365e-05, 3.56380000000045e-05, 3.580599999999934e-05, 3.530599999999884e-05, 3.515300000000304e-05, 3.505600000000553e-05, 3.5624999999997464e-05, 3.579199999999977e-05, 3.522199999999448e-05, 3.5610999999997894e-05, 3.57780000000002e-05, 3.511100000000433e-05, 3.5624999999997464e-05, 3.5388999999996784e-05, 3.579199999999977e-05, 3.563900000000397e-05, 3.516600000000314e-05, 3.595900000000207e-05, 3.5096999999997824e-05, 3.599999999999437e-05, 3.5624999999997464e-05, 3.5124999999996964e-05, 3.547200000000167e-05, 3.5610999999997894e-05, 3.5096999999997824e-05, 3.5610999999997894e-05, 3.51250000000039e-05, 3.57780000000002e-05, 3.5624999999997464e-05, 3.548600000000124e-05, 3.52779999999997e-05, 3.5610999999997894e-05, 3.544400000000253e-05, 3.56250000000044e-05, 3.545799999999516e-05, 3.5124999999996964e-05, 3.5304999999999365e-05, 3.5290999999999795e-05, 3.611199999999787e-05, 3.513900000000347e-05, 3.544399999999559e-05, 3.5110999999997394e-05, 3.5458999999994634e-05, 3.57780000000002e-05, 3.573600000000149e-05, 3.5610999999997894e-05, 3.5958999999995134e-05, 3.52779999999997e-05, 3.516700000000261e-05]</msg>
<status status="PASS" starttime="20201030 18:29:09.179" endtime="20201030 18:29:09.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.168" endtime="20201030 18:29:09.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:09.195" endtime="20201030 18:29:09.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.190" endtime="20201030 18:29:09.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.188" endtime="20201030 18:29:09.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.693" endtime="20201030 18:29:09.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.692" endtime="20201030 18:29:09.220"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.243" endtime="20201030 18:29:09.260"></status>
</kw>
<msg timestamp="20201030 18:29:09.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.239" endtime="20201030 18:29:09.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.263" endtime="20201030 18:29:09.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.269" endtime="20201030 18:29:09.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.232" endtime="20201030 18:29:09.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.226" endtime="20201030 18:29:09.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.293" endtime="20201030 18:29:09.657"></status>
</kw>
<msg timestamp="20201030 18:29:09.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039919069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039954375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.289" endtime="20201030 18:29:09.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039919069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039954375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.667" endtime="20201030 18:29:09.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.686" endtime="20201030 18:29:09.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.282" endtime="20201030 18:29:09.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.278" endtime="20201030 18:29:09.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:09.704" level="INFO">${RESULT} = [{'diff': 3.530599999999884e-05}, {'diff': 3.52779999999997e-05}, {'diff': 3.522300000000089e-05}, {'diff': 3.59580000000026e-05}, {'diff': 3.59580000000026e-05}, {'diff': 3.5290999999999795e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:09.695" endtime="20201030 18:29:09.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:09.713" level="INFO">${ACCURACY} = {'diff': [3.530599999999884e-05, 3.52779999999997e-05, 3.522300000000089e-05, 3.59580000000026e-05, 3.59580000000026e-05, 3.5290999999999795e-05, 3.541700000000286e-05, 3.5290999999999795e-05, 3.54590...</msg>
<status status="PASS" starttime="20201030 18:29:09.706" endtime="20201030 18:29:09.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.724" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 18:29:09.722" endtime="20201030 18:29:09.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.730" level="INFO">VALUE: [3.530599999999884e-05, 3.52779999999997e-05, 3.522300000000089e-05, 3.59580000000026e-05, 3.59580000000026e-05, 3.5290999999999795e-05, 3.541700000000286e-05, 3.5290999999999795e-05, 3.545900000000157e-05, 3.52779999999997e-05, 3.529199999999927e-05, 3.59580000000026e-05, 3.600000000000131e-05, 3.5791000000000295e-05, 3.59580000000026e-05, 3.5846999999998574e-05, 3.5624999999997464e-05, 3.52779999999997e-05, 3.5624999999997464e-05, 3.544399999999559e-05, 3.586199999999762e-05, 3.5110999999997394e-05, 3.51250000000039e-05, 3.57780000000002e-05, 3.5554999999999615e-05, 3.597200000000217e-05, 3.529199999999927e-05, 3.5624999999997464e-05, 3.59580000000026e-05, 3.598600000000174e-05, 3.561100000000483e-05, 3.513900000000347e-05, 3.51250000000039e-05, 3.580599999999934e-05, 3.544400000000253e-05, 3.592999999999652e-05, 3.5638999999997034e-05, 3.5638999999997034e-05, 3.530599999999884e-05, 3.5138999999996534e-05, 3.59580000000026e-05, 3.566600000000364e-05, 3.597200000000217e-05, 3.59580000000026e-05, 3.561100000000483e-05, 3.597200000000217e-05, 3.52779999999997e-05, 3.513900000000347e-05, 3.595799999999566e-05, 3.530599999999884e-05]</msg>
<status status="PASS" starttime="20201030 18:29:09.727" endtime="20201030 18:29:09.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.715" endtime="20201030 18:29:09.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:09.743" endtime="20201030 18:29:09.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.738" endtime="20201030 18:29:09.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.736" endtime="20201030 18:29:09.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.222" endtime="20201030 18:29:09.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.221" endtime="20201030 18:29:09.768"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.792" endtime="20201030 18:29:09.811"></status>
</kw>
<msg timestamp="20201030 18:29:09.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.788" endtime="20201030 18:29:09.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.814" endtime="20201030 18:29:09.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.821" endtime="20201030 18:29:09.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.781" endtime="20201030 18:29:09.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.775" endtime="20201030 18:29:09.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.845" endtime="20201030 18:29:10.195"></status>
</kw>
<msg timestamp="20201030 18:29:10.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042311792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042347069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.841" endtime="20201030 18:29:10.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042311792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042347069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.205" endtime="20201030 18:29:10.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.224" endtime="20201030 18:29:10.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.834" endtime="20201030 18:29:10.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.829" endtime="20201030 18:29:10.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:10.242" level="INFO">${RESULT} = [{'diff': 3.5277000000000225e-05}, {'diff': 3.545900000000157e-05}, {'diff': 3.505599999999859e-05}, {'diff': 3.5445000000002e-05}, {'diff': 3.529199999999927e-05}, {'diff': 3.56250000000044e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:10.233" endtime="20201030 18:29:10.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:10.252" level="INFO">${ACCURACY} = {'diff': [3.5277000000000225e-05, 3.545900000000157e-05, 3.505599999999859e-05, 3.5445000000002e-05, 3.529199999999927e-05, 3.56250000000044e-05, 3.5791000000000295e-05, 3.529199999999927e-05, 3.51379...</msg>
<status status="PASS" starttime="20201030 18:29:10.244" endtime="20201030 18:29:10.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.263" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 18:29:10.261" endtime="20201030 18:29:10.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.268" level="INFO">VALUE: [3.5277000000000225e-05, 3.545900000000157e-05, 3.505599999999859e-05, 3.5445000000002e-05, 3.529199999999927e-05, 3.56250000000044e-05, 3.5791000000000295e-05, 3.529199999999927e-05, 3.513799999999706e-05, 3.595799999999566e-05, 3.538799999999731e-05, 3.556999999999866e-05, 3.52779999999997e-05, 3.563799999999756e-05, 3.529199999999927e-05, 3.57780000000002e-05, 3.580599999999934e-05, 3.5138999999996534e-05, 3.544399999999559e-05, 3.513900000000347e-05, 3.545900000000157e-05, 3.57780000000002e-05, 3.5124999999996964e-05, 3.520800000000185e-05, 3.6138999999997534e-05, 3.561199999999737e-05, 3.5610999999997894e-05, 3.57780000000002e-05, 3.579199999999977e-05, 3.561100000000483e-05, 3.586100000000508e-05, 3.529199999999927e-05, 3.5332999999998504e-05, 3.530599999999884e-05, 3.5290999999999795e-05, 3.563900000000397e-05, 3.57780000000002e-05, 3.530600000000578e-05, 3.601400000000088e-05, 3.595799999999566e-05, 3.5124999999996964e-05, 3.5318999999998935e-05, 3.597200000000217e-05, 3.54580000000021e-05, 3.5290999999999795e-05, 3.563900000000397e-05, 3.51250000000039e-05, 3.5124999999996964e-05, 3.563799999999756e-05, 3.598600000000174e-05]</msg>
<status status="PASS" starttime="20201030 18:29:10.265" endtime="20201030 18:29:10.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.254" endtime="20201030 18:29:10.271"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:10.283" endtime="20201030 18:29:10.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.277" endtime="20201030 18:29:10.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.274" endtime="20201030 18:29:10.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.770" endtime="20201030 18:29:10.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.769" endtime="20201030 18:29:10.308"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.331" endtime="20201030 18:29:10.349"></status>
</kw>
<msg timestamp="20201030 18:29:10.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.328" endtime="20201030 18:29:10.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.353" endtime="20201030 18:29:10.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.359" endtime="20201030 18:29:10.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.320" endtime="20201030 18:29:10.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.315" endtime="20201030 18:29:10.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.383" endtime="20201030 18:29:10.743"></status>
</kw>
<msg timestamp="20201030 18:29:10.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040555403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040590542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.380" endtime="20201030 18:29:10.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040555403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040590542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.753" endtime="20201030 18:29:10.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.772" endtime="20201030 18:29:10.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.372" endtime="20201030 18:29:10.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.367" endtime="20201030 18:29:10.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:10.789" level="INFO">${RESULT} = [{'diff': 3.513900000000347e-05}, {'diff': 3.56250000000044e-05}, {'diff': 3.5791000000000295e-05}, {'diff': 3.5638999999997034e-05}, {'diff': 3.5638999999997034e-05}, {'diff': 3.5790999999993356e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:10.780" endtime="20201030 18:29:10.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:10.799" level="INFO">${ACCURACY} = {'diff': [3.513900000000347e-05, 3.56250000000044e-05, 3.5791000000000295e-05, 3.5638999999997034e-05, 3.5638999999997034e-05, 3.5790999999993356e-05, 3.547300000000114e-05, 3.5290999999999795e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:29:10.791" endtime="20201030 18:29:10.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.810" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 18:29:10.808" endtime="20201030 18:29:10.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.816" level="INFO">VALUE: [3.513900000000347e-05, 3.56250000000044e-05, 3.5791000000000295e-05, 3.5638999999997034e-05, 3.5638999999997034e-05, 3.5790999999993356e-05, 3.547300000000114e-05, 3.5290999999999795e-05, 3.52779999999997e-05, 3.580600000000628e-05, 3.5930999999995994e-05, 3.5804999999999865e-05, 3.579199999999977e-05, 3.56250000000044e-05, 3.5624999999997464e-05, 3.526400000000013e-05, 3.544400000000253e-05, 3.5638999999997034e-05, 3.530600000000578e-05, 3.526400000000013e-05, 3.529199999999927e-05, 3.5790999999993356e-05, 3.566700000000311e-05, 3.57780000000002e-05, 3.583399999999848e-05, 3.5804999999999865e-05, 3.526400000000013e-05, 3.6124999999997964e-05, 3.5138999999996534e-05, 3.601400000000088e-05, 3.52779999999997e-05, 3.597200000000217e-05, 3.597199999999523e-05, 3.5554999999999615e-05, 3.523700000000046e-05, 3.5610999999997894e-05, 3.59580000000026e-05, 3.568100000000268e-05, 3.563799999999756e-05, 3.5388999999996784e-05, 3.5124999999996964e-05, 3.5791000000000295e-05, 3.526400000000013e-05, 3.547199999999473e-05, 3.547200000000167e-05, 3.545799999999516e-05, 3.565300000000354e-05, 3.5138999999996534e-05, 3.579199999999977e-05, 3.548600000000124e-05]</msg>
<status status="PASS" starttime="20201030 18:29:10.813" endtime="20201030 18:29:10.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.801" endtime="20201030 18:29:10.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:10.828" endtime="20201030 18:29:10.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.824" endtime="20201030 18:29:10.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.821" endtime="20201030 18:29:10.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.310" endtime="20201030 18:29:10.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.309" endtime="20201030 18:29:10.853"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.876" endtime="20201030 18:29:10.892"></status>
</kw>
<msg timestamp="20201030 18:29:10.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.872" endtime="20201030 18:29:10.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.895" endtime="20201030 18:29:10.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.901" endtime="20201030 18:29:10.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.865" endtime="20201030 18:29:10.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.860" endtime="20201030 18:29:10.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.924" endtime="20201030 18:29:11.266"></status>
</kw>
<msg timestamp="20201030 18:29:11.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039476403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039511875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.921" endtime="20201030 18:29:11.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039476403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039511875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.275" endtime="20201030 18:29:11.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.294" endtime="20201030 18:29:11.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.914" endtime="20201030 18:29:11.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.909" endtime="20201030 18:29:11.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:11.311" level="INFO">${RESULT} = [{'diff': 3.547200000000167e-05}, {'diff': 3.59580000000026e-05}, {'diff': 3.52779999999997e-05}, {'diff': 3.508399999999773e-05}, {'diff': 3.5138000000004e-05}, {'diff': 3.5138999999996534e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:29:11.302" endtime="20201030 18:29:11.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:11.322" level="INFO">${ACCURACY} = {'diff': [3.547200000000167e-05, 3.59580000000026e-05, 3.52779999999997e-05, 3.508399999999773e-05, 3.5138000000004e-05, 3.5138999999996534e-05, 3.513900000000347e-05, 3.515300000000304e-05, 3.5290999...</msg>
<status status="PASS" starttime="20201030 18:29:11.313" endtime="20201030 18:29:11.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.333" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 18:29:11.331" endtime="20201030 18:29:11.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.338" level="INFO">VALUE: [3.547200000000167e-05, 3.59580000000026e-05, 3.52779999999997e-05, 3.508399999999773e-05, 3.5138000000004e-05, 3.5138999999996534e-05, 3.513900000000347e-05, 3.515300000000304e-05, 3.5290999999999795e-05, 3.59580000000026e-05, 3.597300000000164e-05, 3.544399999999559e-05, 3.526400000000013e-05, 3.51250000000039e-05, 3.5472999999994204e-05, 3.525000000000056e-05, 3.5124999999996964e-05, 3.5304999999999365e-05, 3.5958999999995134e-05, 3.5290999999999795e-05, 3.530599999999884e-05, 3.6096999999998824e-05, 3.5332999999998504e-05, 3.5444999999995064e-05, 3.5124999999996964e-05, 3.548600000000124e-05, 3.5804999999999865e-05, 3.5110999999997394e-05, 3.5624999999997464e-05, 3.5290999999999795e-05, 3.580599999999934e-05, 3.594400000000303e-05, 3.545900000000157e-05, 3.5124999999996964e-05, 3.5776999999993786e-05, 3.52779999999997e-05, 3.591600000000389e-05, 3.530599999999884e-05, 3.563799999999756e-05, 3.5610999999997894e-05, 3.5804999999999865e-05, 3.550000000000081e-05, 3.598600000000174e-05, 3.6013000000001405e-05, 3.5124999999996964e-05, 3.5972999999994704e-05, 3.5305000000006304e-05, 3.547199999999473e-05, 3.5068999999998685e-05, 3.615199999999763e-05]</msg>
<status status="PASS" starttime="20201030 18:29:11.335" endtime="20201030 18:29:11.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.324" endtime="20201030 18:29:11.341"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:11.351" endtime="20201030 18:29:11.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.346" endtime="20201030 18:29:11.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.344" endtime="20201030 18:29:11.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.855" endtime="20201030 18:29:11.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.854" endtime="20201030 18:29:11.376"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.399" endtime="20201030 18:29:11.416"></status>
</kw>
<msg timestamp="20201030 18:29:11.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.395" endtime="20201030 18:29:11.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.419" endtime="20201030 18:29:11.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.426" endtime="20201030 18:29:11.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.388" endtime="20201030 18:29:11.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.382" endtime="20201030 18:29:11.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.453" endtime="20201030 18:29:11.801"></status>
</kw>
<msg timestamp="20201030 18:29:11.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040005375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040041181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.447" endtime="20201030 18:29:11.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040005375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040041181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.810" endtime="20201030 18:29:11.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.829" endtime="20201030 18:29:11.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.438" endtime="20201030 18:29:11.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.434" endtime="20201030 18:29:11.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:11.846" level="INFO">${RESULT} = [{'diff': 3.580599999999934e-05}, {'diff': 3.57780000000002e-05}, {'diff': 3.5124999999996964e-05}, {'diff': 3.556999999999866e-05}, {'diff': 3.5110999999997394e-05}, {'diff': 3.598600000000174e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:11.837" endtime="20201030 18:29:11.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:11.855" level="INFO">${ACCURACY} = {'diff': [3.580599999999934e-05, 3.57780000000002e-05, 3.5124999999996964e-05, 3.556999999999866e-05, 3.5110999999997394e-05, 3.598600000000174e-05, 3.5916999999996424e-05, 3.5304999999999365e-05, 3.5...</msg>
<status status="PASS" starttime="20201030 18:29:11.848" endtime="20201030 18:29:11.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.866" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 18:29:11.864" endtime="20201030 18:29:11.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.872" level="INFO">VALUE: [3.580599999999934e-05, 3.57780000000002e-05, 3.5124999999996964e-05, 3.556999999999866e-05, 3.5110999999997394e-05, 3.598600000000174e-05, 3.5916999999996424e-05, 3.5304999999999365e-05, 3.5791000000000295e-05, 3.52779999999997e-05, 3.595799999999566e-05, 3.59580000000026e-05, 3.5180999999995244e-05, 3.544400000000253e-05, 3.597300000000164e-05, 3.5638999999997034e-05, 3.595900000000207e-05, 3.5624999999997464e-05, 3.602800000000045e-05, 3.59580000000026e-05, 3.581999999999891e-05, 3.581999999999891e-05, 3.6124999999997964e-05, 3.5138999999996534e-05, 3.526400000000013e-05, 3.545900000000157e-05, 3.517999999999577e-05, 3.54580000000021e-05, 3.5444999999995064e-05, 3.5791000000000295e-05, 3.579199999999977e-05, 3.579199999999977e-05, 3.56250000000044e-05, 3.5138999999996534e-05, 3.52779999999997e-05, 3.6110999999998394e-05, 3.5930999999995994e-05, 3.5472999999994204e-05, 3.5944999999995564e-05, 3.548600000000124e-05, 3.547199999999473e-05, 3.565300000000354e-05, 3.52779999999997e-05, 3.52779999999997e-05, 3.5930999999995994e-05, 3.597199999999523e-05, 3.5096999999997824e-05, 3.5610999999997894e-05, 3.573600000000149e-05, 3.59580000000026e-05]</msg>
<status status="PASS" starttime="20201030 18:29:11.869" endtime="20201030 18:29:11.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.857" endtime="20201030 18:29:11.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:11.884" endtime="20201030 18:29:11.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.880" endtime="20201030 18:29:11.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.877" endtime="20201030 18:29:11.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.378" endtime="20201030 18:29:11.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.377" endtime="20201030 18:29:11.910"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.932" endtime="20201030 18:29:11.956"></status>
</kw>
<msg timestamp="20201030 18:29:11.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.929" endtime="20201030 18:29:11.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.960" endtime="20201030 18:29:11.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.968" endtime="20201030 18:29:11.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.922" endtime="20201030 18:29:11.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.916" endtime="20201030 18:29:11.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.000" endtime="20201030 18:29:12.340"></status>
</kw>
<msg timestamp="20201030 18:29:12.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045561625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045604306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.996" endtime="20201030 18:29:12.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045561625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045604306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.349" endtime="20201030 18:29:12.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.368" endtime="20201030 18:29:12.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.986" endtime="20201030 18:29:12.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.981" endtime="20201030 18:29:12.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:12.385" level="INFO">${RESULT} = [{'diff': 4.2680999999995806e-05}, {'diff': 4.2332999999998566e-05}, {'diff': 4.229199999999933e-05}, {'diff': 4.254199999999958e-05}, {'diff': 4.279199999999983e-05}, {'diff': 4.2110999999997456e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:12.376" endtime="20201030 18:29:12.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:12.394" level="INFO">${ACCURACY} = {'diff': [4.2680999999995806e-05, 4.2332999999998566e-05, 4.229199999999933e-05, 4.254199999999958e-05, 4.279199999999983e-05, 4.2110999999997456e-05, 4.2624999999997526e-05, 4.268000000000327e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:29:12.387" endtime="20201030 18:29:12.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.405" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 18:29:12.403" endtime="20201030 18:29:12.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.411" level="INFO">VALUE: [4.2680999999995806e-05, 4.2332999999998566e-05, 4.229199999999933e-05, 4.254199999999958e-05, 4.279199999999983e-05, 4.2110999999997456e-05, 4.2624999999997526e-05, 4.268000000000327e-05, 4.2304999999999426e-05, 4.24860000000013e-05, 4.247200000000173e-05, 4.23059999999989e-05, 4.2111000000004395e-05, 4.226400000000019e-05, 4.247200000000173e-05, 4.2791000000000357e-05, 4.2111000000004395e-05, 4.275000000000112e-05, 4.295799999999572e-05, 4.261199999999743e-05, 4.2110999999997456e-05, 4.2124999999997026e-05, 4.2139000000003535e-05, 4.2652999999996666e-05, 4.279199999999983e-05, 4.294400000000309e-05, 4.297200000000223e-05, 4.23059999999989e-05, 4.229199999999933e-05, 4.2624999999997526e-05, 4.2110999999997456e-05, 4.28059999999994e-05, 4.2638999999997096e-05, 4.2638999999997096e-05, 4.2124999999997026e-05, 4.229199999999933e-05, 4.295800000000266e-05, 4.294399999999615e-05, 4.2624999999997526e-05, 4.2472999999994265e-05, 4.2318999999998996e-05, 4.294399999999615e-05, 4.2458999999994695e-05, 4.2318999999998996e-05, 4.2166999999995736e-05, 4.2473000000001204e-05, 4.2124999999997026e-05, 4.2804999999999926e-05, 4.2638999999997096e-05, 4.2277000000000287e-05]</msg>
<status status="PASS" starttime="20201030 18:29:12.407" endtime="20201030 18:29:12.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.396" endtime="20201030 18:29:12.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:12.429" endtime="20201030 18:29:12.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.423" endtime="20201030 18:29:12.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.421" endtime="20201030 18:29:12.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.912" endtime="20201030 18:29:12.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.911" endtime="20201030 18:29:12.454"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.477" endtime="20201030 18:29:12.493"></status>
</kw>
<msg timestamp="20201030 18:29:12.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.473" endtime="20201030 18:29:12.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.496" endtime="20201030 18:29:12.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.503" endtime="20201030 18:29:12.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.466" endtime="20201030 18:29:12.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.461" endtime="20201030 18:29:12.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.526" endtime="20201030 18:29:12.860"></status>
</kw>
<msg timestamp="20201030 18:29:12.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039693514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039735972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.522" endtime="20201030 18:29:12.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039693514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039735972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.869" endtime="20201030 18:29:12.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.888" endtime="20201030 18:29:12.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.515" endtime="20201030 18:29:12.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.511" endtime="20201030 18:29:12.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:12.905" level="INFO">${RESULT} = [{'diff': 4.245800000000216e-05}, {'diff': 4.243000000000302e-05}, {'diff': 4.245800000000216e-05}, {'diff': 4.227799999999976e-05}, {'diff': 4.24860000000013e-05}, {'diff': 4.21660000000032e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:12.896" endtime="20201030 18:29:12.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:12.916" level="INFO">${ACCURACY} = {'diff': [4.245800000000216e-05, 4.243000000000302e-05, 4.245800000000216e-05, 4.227799999999976e-05, 4.24860000000013e-05, 4.21660000000032e-05, 4.247200000000173e-05, 4.229199999999933e-05, 4.213900...</msg>
<status status="PASS" starttime="20201030 18:29:12.907" endtime="20201030 18:29:12.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.926" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 18:29:12.924" endtime="20201030 18:29:12.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.932" level="INFO">VALUE: [4.245800000000216e-05, 4.243000000000302e-05, 4.245800000000216e-05, 4.227799999999976e-05, 4.24860000000013e-05, 4.21660000000032e-05, 4.247200000000173e-05, 4.229199999999933e-05, 4.2139000000003535e-05, 4.295800000000266e-05, 4.294400000000309e-05, 4.277800000000026e-05, 4.227799999999976e-05, 4.229199999999933e-05, 4.2931000000002995e-05, 4.23059999999989e-05, 4.300000000000137e-05, 4.2959000000002134e-05, 4.227799999999976e-05, 4.229199999999933e-05, 4.2138999999996596e-05, 4.2624999999997526e-05, 4.2139000000003535e-05, 4.2139000000003535e-05, 4.227799999999976e-05, 4.3124999999998026e-05, 4.3124999999998026e-05, 4.2959000000002134e-05, 4.215199999999669e-05, 4.279199999999983e-05, 4.295799999999572e-05, 4.247200000000173e-05, 4.295799999999572e-05, 4.2416999999995986e-05, 4.247200000000173e-05, 4.2472999999994265e-05, 4.315200000000463e-05, 4.215200000000363e-05, 4.23059999999989e-05, 4.297200000000223e-05, 4.2124999999997026e-05, 4.294399999999615e-05, 4.229199999999933e-05, 4.258400000000523e-05, 4.232000000000541e-05, 4.215199999999669e-05, 4.258400000000523e-05, 4.2804999999999926e-05, 4.233399999999804e-05, 4.265199999999719e-05]</msg>
<status status="PASS" starttime="20201030 18:29:12.929" endtime="20201030 18:29:12.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.917" endtime="20201030 18:29:12.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:12.944" endtime="20201030 18:29:12.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.940" endtime="20201030 18:29:12.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.938" endtime="20201030 18:29:12.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.456" endtime="20201030 18:29:12.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.455" endtime="20201030 18:29:12.969"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.992" endtime="20201030 18:29:13.008"></status>
</kw>
<msg timestamp="20201030 18:29:13.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.989" endtime="20201030 18:29:13.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.012" endtime="20201030 18:29:13.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.018" endtime="20201030 18:29:13.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.981" endtime="20201030 18:29:13.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.976" endtime="20201030 18:29:13.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.041" endtime="20201030 18:29:13.376"></status>
</kw>
<msg timestamp="20201030 18:29:13.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039545264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039588264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.038" endtime="20201030 18:29:13.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039545264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039588264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.386" endtime="20201030 18:29:13.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.405" endtime="20201030 18:29:13.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.031" endtime="20201030 18:29:13.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.026" endtime="20201030 18:29:13.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:13.422" level="INFO">${RESULT} = [{'diff': 4.300000000000137e-05}, {'diff': 4.248599999999436e-05}, {'diff': 4.283399999999854e-05}, {'diff': 4.2874999999997776e-05}, {'diff': 4.2582999999998816e-05}, {'diff': 4.2430999999995556e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:13.413" endtime="20201030 18:29:13.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:13.433" level="INFO">${ACCURACY} = {'diff': [4.300000000000137e-05, 4.248599999999436e-05, 4.283399999999854e-05, 4.2874999999997776e-05, 4.2582999999998816e-05, 4.2430999999995556e-05, 4.244400000000259e-05, 4.2125000000003965e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:29:13.424" endtime="20201030 18:29:13.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.444" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 18:29:13.442" endtime="20201030 18:29:13.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.450" level="INFO">VALUE: [4.300000000000137e-05, 4.248599999999436e-05, 4.283399999999854e-05, 4.2874999999997776e-05, 4.2582999999998816e-05, 4.2430999999995556e-05, 4.244400000000259e-05, 4.2125000000003965e-05, 4.2124999999997026e-05, 4.227799999999976e-05, 4.3124999999998026e-05, 4.2332999999998566e-05, 4.2791000000000357e-05, 4.2944999999995626e-05, 4.2945000000002564e-05, 4.2959000000002134e-05, 4.3138999999997596e-05, 4.300000000000137e-05, 4.2624999999997526e-05, 4.215200000000363e-05, 4.2791000000000357e-05, 4.229199999999933e-05, 4.2290999999999856e-05, 4.2459000000001634e-05, 4.227799999999976e-05, 4.226400000000019e-05, 4.226400000000019e-05, 4.300000000000137e-05, 4.279199999999983e-05, 4.229199999999933e-05, 4.2139000000003535e-05, 4.277800000000026e-05, 4.2945000000002564e-05, 4.2417000000002925e-05, 4.2417000000002925e-05, 4.295799999999572e-05, 4.2458999999994695e-05, 4.230600000000584e-05, 4.3110999999998456e-05, 4.2110999999997456e-05, 4.3096999999998886e-05, 4.2110999999997456e-05, 4.3110999999998456e-05, 4.295800000000266e-05, 4.279199999999983e-05, 4.2290999999999856e-05, 4.2445000000002064e-05, 4.2125000000003965e-05, 4.297200000000223e-05, 4.227799999999976e-05]</msg>
<status status="PASS" starttime="20201030 18:29:13.446" endtime="20201030 18:29:13.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.435" endtime="20201030 18:29:13.453"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:13.462" endtime="20201030 18:29:13.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.458" endtime="20201030 18:29:13.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.455" endtime="20201030 18:29:13.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.971" endtime="20201030 18:29:13.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.970" endtime="20201030 18:29:13.487"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.510" endtime="20201030 18:29:13.526"></status>
</kw>
<msg timestamp="20201030 18:29:13.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.506" endtime="20201030 18:29:13.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.530" endtime="20201030 18:29:13.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.536" endtime="20201030 18:29:13.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.499" endtime="20201030 18:29:13.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.494" endtime="20201030 18:29:13.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.560" endtime="20201030 18:29:13.902"></status>
</kw>
<msg timestamp="20201030 18:29:13.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039674139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039716944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.556" endtime="20201030 18:29:13.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039674139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039716944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.912" endtime="20201030 18:29:13.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.931" endtime="20201030 18:29:13.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.549" endtime="20201030 18:29:13.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.544" endtime="20201030 18:29:13.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:13.949" level="INFO">${RESULT} = [{'diff': 4.2804999999999926e-05}, {'diff': 4.297200000000223e-05}, {'diff': 4.2097000000004825e-05}, {'diff': 4.297200000000223e-05}, {'diff': 4.3125000000004965e-05}, {'diff': 4.229199999999933e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:13.940" endtime="20201030 18:29:13.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:13.959" level="INFO">${ACCURACY} = {'diff': [4.2804999999999926e-05, 4.297200000000223e-05, 4.2097000000004825e-05, 4.297200000000223e-05, 4.3125000000004965e-05, 4.229199999999933e-05, 4.2097000000004825e-05, 4.2625000000004465e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:29:13.951" endtime="20201030 18:29:13.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.970" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 18:29:13.968" endtime="20201030 18:29:13.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.976" level="INFO">VALUE: [4.2804999999999926e-05, 4.297200000000223e-05, 4.2097000000004825e-05, 4.297200000000223e-05, 4.3125000000004965e-05, 4.229199999999933e-05, 4.2097000000004825e-05, 4.2625000000004465e-05, 4.244400000000259e-05, 4.3096999999998886e-05, 4.2653000000003605e-05, 4.2804999999999926e-05, 4.280600000000634e-05, 4.2639000000004035e-05, 4.2973000000001704e-05, 4.2804999999999926e-05, 4.250000000000087e-05, 4.2639000000004035e-05, 4.2277000000000287e-05, 4.2597000000005325e-05, 4.250000000000087e-05, 4.2986999999994335e-05, 4.28059999999994e-05, 4.2791000000000357e-05, 4.229199999999933e-05, 4.204200000000602e-05, 4.226400000000019e-05, 4.2389000000003785e-05, 4.2346999999998136e-05, 4.2944999999995626e-05, 4.227799999999976e-05, 4.2639000000004035e-05, 4.2791000000000357e-05, 4.2987000000001274e-05, 4.26660000000037e-05, 4.2290999999999856e-05, 4.277700000000079e-05, 4.26939999999959e-05, 4.276400000000069e-05, 4.2666999999996236e-05, 4.2945000000002564e-05, 4.23059999999989e-05, 4.2624999999997526e-05, 4.2624999999997526e-05, 4.279199999999983e-05, 4.279199999999983e-05, 4.2444999999995126e-05, 4.279199999999983e-05, 4.3138999999997596e-05, 4.2959000000002134e-05]</msg>
<status status="PASS" starttime="20201030 18:29:13.973" endtime="20201030 18:29:13.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.961" endtime="20201030 18:29:13.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:13.988" endtime="20201030 18:29:14.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.984" endtime="20201030 18:29:14.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.981" endtime="20201030 18:29:14.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.489" endtime="20201030 18:29:14.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.488" endtime="20201030 18:29:14.015"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.037" endtime="20201030 18:29:14.056"></status>
</kw>
<msg timestamp="20201030 18:29:14.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.034" endtime="20201030 18:29:14.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.059" endtime="20201030 18:29:14.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.066" endtime="20201030 18:29:14.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.027" endtime="20201030 18:29:14.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.021" endtime="20201030 18:29:14.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.089" endtime="20201030 18:29:14.430"></status>
</kw>
<msg timestamp="20201030 18:29:14.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042782125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042824569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.086" endtime="20201030 18:29:14.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042782125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042824569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.440" endtime="20201030 18:29:14.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.461" endtime="20201030 18:29:14.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.078" endtime="20201030 18:29:14.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.074" endtime="20201030 18:29:14.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:14.479" level="INFO">${RESULT} = [{'diff': 4.244400000000259e-05}, {'diff': 4.2445000000002064e-05}, {'diff': 4.2430999999995556e-05}, {'diff': 4.2610999999997956e-05}, {'diff': 4.277800000000026e-05}, {'diff': 4.227799999999976e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:14.470" endtime="20201030 18:29:14.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:14.488" level="INFO">${ACCURACY} = {'diff': [4.244400000000259e-05, 4.2445000000002064e-05, 4.2430999999995556e-05, 4.2610999999997956e-05, 4.277800000000026e-05, 4.227799999999976e-05, 4.2124999999997026e-05, 4.294399999999615e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:29:14.481" endtime="20201030 18:29:14.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.499" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 18:29:14.497" endtime="20201030 18:29:14.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.505" level="INFO">VALUE: [4.244400000000259e-05, 4.2445000000002064e-05, 4.2430999999995556e-05, 4.2610999999997956e-05, 4.277800000000026e-05, 4.227799999999976e-05, 4.2124999999997026e-05, 4.294399999999615e-05, 4.297199999999529e-05, 4.229199999999933e-05, 4.293000000000352e-05, 4.243000000000302e-05, 4.2959000000002134e-05, 4.259799999999786e-05, 4.229199999999933e-05, 4.227799999999976e-05, 4.2610999999997956e-05, 4.2610999999997956e-05, 4.2027000000000037e-05, 4.2625000000004465e-05, 4.2889000000004285e-05, 4.2125000000003965e-05, 4.2431000000002494e-05, 4.223600000000105e-05, 4.295800000000266e-05, 4.2277000000000287e-05, 4.2625000000004465e-05, 4.244400000000259e-05, 4.294400000000309e-05, 4.229199999999933e-05, 4.2610999999997956e-05, 4.294400000000309e-05, 4.2096999999997886e-05, 4.2097000000004825e-05, 4.2417000000002925e-05, 4.2110999999997456e-05, 4.3124999999998026e-05, 4.258399999999829e-05, 4.2389000000003785e-05, 4.23059999999989e-05, 4.241599999999651e-05, 4.2610999999997956e-05, 4.229199999999933e-05, 4.2945000000002564e-05, 4.209799999999736e-05, 4.2459000000001634e-05, 4.2459000000001634e-05, 4.2138999999996596e-05, 4.295799999999572e-05, 4.247199999999479e-05]</msg>
<status status="PASS" starttime="20201030 18:29:14.502" endtime="20201030 18:29:14.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.490" endtime="20201030 18:29:14.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:14.519" endtime="20201030 18:29:14.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.513" endtime="20201030 18:29:14.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.511" endtime="20201030 18:29:14.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.017" endtime="20201030 18:29:14.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.015" endtime="20201030 18:29:14.544"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.567" endtime="20201030 18:29:14.584"></status>
</kw>
<msg timestamp="20201030 18:29:14.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.564" endtime="20201030 18:29:14.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.587" endtime="20201030 18:29:14.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.594" endtime="20201030 18:29:14.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.556" endtime="20201030 18:29:14.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.551" endtime="20201030 18:29:14.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.618" endtime="20201030 18:29:14.955"></status>
</kw>
<msg timestamp="20201030 18:29:14.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040116931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040159722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.615" endtime="20201030 18:29:14.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040116931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040159722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.964" endtime="20201030 18:29:14.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.983" endtime="20201030 18:29:14.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.607" endtime="20201030 18:29:14.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.602" endtime="20201030 18:29:14.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:15.000" level="INFO">${RESULT} = [{'diff': 4.2791000000000357e-05}, {'diff': 4.2167000000002675e-05}, {'diff': 4.276400000000069e-05}, {'diff': 4.2139000000003535e-05}, {'diff': 4.263800000000456e-05}, {'diff': 4.2305000000006365e-05...</msg>
<status status="PASS" starttime="20201030 18:29:14.991" endtime="20201030 18:29:15.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:15.011" level="INFO">${ACCURACY} = {'diff': [4.2791000000000357e-05, 4.2167000000002675e-05, 4.276400000000069e-05, 4.2139000000003535e-05, 4.263800000000456e-05, 4.2305000000006365e-05, 4.295799999999572e-05, 4.277800000000026e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:29:15.003" endtime="20201030 18:29:15.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.022" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 18:29:15.020" endtime="20201030 18:29:15.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.027" level="INFO">VALUE: [4.2791000000000357e-05, 4.2167000000002675e-05, 4.276400000000069e-05, 4.2139000000003535e-05, 4.263800000000456e-05, 4.2305000000006365e-05, 4.295799999999572e-05, 4.277800000000026e-05, 4.242999999999608e-05, 4.229199999999933e-05, 4.2959000000002134e-05, 4.29860000000018e-05, 4.2625000000004465e-05, 4.226400000000019e-05, 4.227799999999976e-05, 4.294400000000309e-05, 4.211200000000387e-05, 4.2791000000000357e-05, 4.226400000000019e-05, 4.2402999999996416e-05, 4.250000000000087e-05, 4.250000000000087e-05, 4.277700000000079e-05, 4.227799999999976e-05, 4.231999999999847e-05, 4.2124999999997026e-05, 4.2973000000001704e-05, 4.2624999999997526e-05, 4.257000000000566e-05, 4.277800000000026e-05, 4.2625000000004465e-05, 4.2459000000001634e-05, 4.2459000000001634e-05, 4.245799999999522e-05, 4.261199999999743e-05, 4.2125000000003965e-05, 4.276400000000069e-05, 4.227799999999976e-05, 4.2361000000004645e-05, 4.2416999999995986e-05, 4.2917000000003425e-05, 4.2846999999998636e-05, 4.2804999999999926e-05, 4.2611000000004895e-05, 4.229199999999933e-05, 4.227799999999976e-05, 4.2638999999997096e-05, 4.2290999999999856e-05, 4.2444999999995126e-05, 4.2431000000002494e-05]</msg>
<status status="PASS" starttime="20201030 18:29:15.024" endtime="20201030 18:29:15.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.013" endtime="20201030 18:29:15.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:15.040" endtime="20201030 18:29:15.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.035" endtime="20201030 18:29:15.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.033" endtime="20201030 18:29:15.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.546" endtime="20201030 18:29:15.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.545" endtime="20201030 18:29:15.065"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.087" endtime="20201030 18:29:15.104"></status>
</kw>
<msg timestamp="20201030 18:29:15.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.084" endtime="20201030 18:29:15.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.107" endtime="20201030 18:29:15.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.113" endtime="20201030 18:29:15.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.077" endtime="20201030 18:29:15.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.071" endtime="20201030 18:29:15.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.136" endtime="20201030 18:29:15.472"></status>
</kw>
<msg timestamp="20201030 18:29:15.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039534972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039578125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.133" endtime="20201030 18:29:15.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039534972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039578125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.481" endtime="20201030 18:29:15.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.502" endtime="20201030 18:29:15.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.126" endtime="20201030 18:29:15.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.121" endtime="20201030 18:29:15.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:15.523" level="INFO">${RESULT} = [{'diff': 4.3152999999997166e-05}, {'diff': 4.28059999999994e-05}, {'diff': 4.272200000000198e-05}, {'diff': 4.277800000000026e-05}, {'diff': 4.2638999999997096e-05}, {'diff': 4.277800000000026e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:15.512" endtime="20201030 18:29:15.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:15.535" level="INFO">${ACCURACY} = {'diff': [4.3152999999997166e-05, 4.28059999999994e-05, 4.272200000000198e-05, 4.277800000000026e-05, 4.2638999999997096e-05, 4.277800000000026e-05, 4.297200000000223e-05, 4.2290999999999856e-05, 4.22...</msg>
<status status="PASS" starttime="20201030 18:29:15.525" endtime="20201030 18:29:15.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.546" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 18:29:15.544" endtime="20201030 18:29:15.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.552" level="INFO">VALUE: [4.3152999999997166e-05, 4.28059999999994e-05, 4.272200000000198e-05, 4.277800000000026e-05, 4.2638999999997096e-05, 4.277800000000026e-05, 4.297200000000223e-05, 4.2290999999999856e-05, 4.2290999999999856e-05, 4.2110999999997456e-05, 4.23059999999989e-05, 4.28059999999994e-05, 4.295799999999572e-05, 4.242999999999608e-05, 4.2596999999998386e-05, 4.2290999999999856e-05, 4.297199999999529e-05, 4.245800000000216e-05, 4.247200000000173e-05, 4.2472999999994265e-05, 4.2804999999999926e-05, 4.23059999999989e-05, 4.247200000000173e-05, 4.247200000000173e-05, 4.2667000000003175e-05, 4.277800000000026e-05, 4.2153000000003105e-05, 4.2638999999997096e-05, 4.229199999999933e-05, 4.2804999999999926e-05, 4.297200000000223e-05, 4.279199999999983e-05, 4.247200000000173e-05, 4.2138999999996596e-05, 4.2444999999995126e-05, 4.2152999999996166e-05, 4.229199999999933e-05, 4.2638999999997096e-05, 4.29860000000018e-05, 4.213799999999712e-05, 4.2653000000003605e-05, 4.3124999999998026e-05, 4.281999999999897e-05, 4.265200000000413e-05, 4.2290999999999856e-05, 4.2611000000004895e-05, 4.2791000000000357e-05, 4.3110999999998456e-05, 4.206999999999822e-05, 4.2652999999996666e-05]</msg>
<status status="PASS" starttime="20201030 18:29:15.549" endtime="20201030 18:29:15.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.537" endtime="20201030 18:29:15.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:15.564" endtime="20201030 18:29:15.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.560" endtime="20201030 18:29:15.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.558" endtime="20201030 18:29:15.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.067" endtime="20201030 18:29:15.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.066" endtime="20201030 18:29:15.590"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.612" endtime="20201030 18:29:15.629"></status>
</kw>
<msg timestamp="20201030 18:29:15.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.609" endtime="20201030 18:29:15.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.632" endtime="20201030 18:29:15.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.639" endtime="20201030 18:29:15.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.602" endtime="20201030 18:29:15.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.596" endtime="20201030 18:29:15.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.662" endtime="20201030 18:29:15.999"></status>
</kw>
<msg timestamp="20201030 18:29:16.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040106875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040155972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.659" endtime="20201030 18:29:16.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040106875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040155972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.009" endtime="20201030 18:29:16.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.027" endtime="20201030 18:29:16.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.652" endtime="20201030 18:29:16.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.647" endtime="20201030 18:29:16.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:16.045" level="INFO">${RESULT} = [{'diff': 4.909699999999795e-05}, {'diff': 4.929199999999939e-05}, {'diff': 5.00270000000011e-05}, {'diff': 5.011099999999852e-05}, {'diff': 4.980599999999946e-05}, {'diff': 4.9945000000002626e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:16.036" endtime="20201030 18:29:16.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:16.054" level="INFO">${ACCURACY} = {'diff': [4.909699999999795e-05, 4.929199999999939e-05, 5.00270000000011e-05, 5.011099999999852e-05, 4.980599999999946e-05, 4.9945000000002626e-05, 4.948600000000136e-05, 5.000000000000143e-05, 4.9610...</msg>
<status status="PASS" starttime="20201030 18:29:16.047" endtime="20201030 18:29:16.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.065" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 18:29:16.063" endtime="20201030 18:29:16.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.070" level="INFO">VALUE: [4.909699999999795e-05, 4.929199999999939e-05, 5.00270000000011e-05, 5.011099999999852e-05, 4.980599999999946e-05, 4.9945000000002626e-05, 4.948600000000136e-05, 5.000000000000143e-05, 4.961099999999802e-05, 4.930599999999896e-05, 4.930599999999896e-05, 4.929199999999939e-05, 5.011099999999852e-05, 5.0014000000001e-05, 4.961099999999802e-05, 4.9957999999995784e-05, 5.015299999999723e-05, 4.994499999999569e-05, 4.927799999999982e-05, 4.9125000000004027e-05, 4.947200000000179e-05, 4.9971999999995353e-05, 4.911099999999752e-05, 4.994499999999569e-05, 4.9401999999997004e-05, 4.9457999999995284e-05, 5.013899999999766e-05, 4.926400000000025e-05, 4.993099999999612e-05, 4.993099999999612e-05, 5.009699999999895e-05, 4.998600000000186e-05, 4.962499999999759e-05, 4.963899999999716e-05, 4.948599999999442e-05, 4.927799999999982e-05, 4.9945000000002626e-05, 4.980599999999946e-05, 4.936100000000471e-05, 5.013899999999766e-05, 4.961099999999802e-05, 4.994400000000315e-05, 4.963899999999716e-05, 4.943000000000308e-05, 4.963899999999716e-05, 4.911100000000446e-05, 4.911099999999752e-05, 4.979199999999989e-05, 4.958299999999888e-05, 4.998599999999492e-05]</msg>
<status status="PASS" starttime="20201030 18:29:16.067" endtime="20201030 18:29:16.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.056" endtime="20201030 18:29:16.073"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:16.083" endtime="20201030 18:29:16.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.078" endtime="20201030 18:29:16.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.076" endtime="20201030 18:29:16.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.592" endtime="20201030 18:29:16.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.590" endtime="20201030 18:29:16.107"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.130" endtime="20201030 18:29:16.150"></status>
</kw>
<msg timestamp="20201030 18:29:16.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.127" endtime="20201030 18:29:16.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.153" endtime="20201030 18:29:16.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.160" endtime="20201030 18:29:16.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.120" endtime="20201030 18:29:16.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.114" endtime="20201030 18:29:16.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.183" endtime="20201030 18:29:16.528"></status>
</kw>
<msg timestamp="20201030 18:29:16.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040875139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040964764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.180" endtime="20201030 18:29:16.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040875139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040964764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.538" endtime="20201030 18:29:16.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.556" endtime="20201030 18:29:16.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.172" endtime="20201030 18:29:16.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.168" endtime="20201030 18:29:16.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:16.573" level="INFO">${RESULT} = [{'diff': 8.96250000000029e-05}, {'diff': 9.005600000000502e-05}, {'diff': 8.958299999999725e-05}, {'diff': 8.995800000000109e-05}, {'diff': 8.986199999999611e-05}, {'diff': 8.96670000000016e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:16.565" endtime="20201030 18:29:16.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:16.583" level="INFO">${ACCURACY} = {'diff': [8.96250000000029e-05, 9.005600000000502e-05, 8.958299999999725e-05, 8.995800000000109e-05, 8.986199999999611e-05, 8.96670000000016e-05, 8.940300000000179e-05, 9.030599999999833e-05, 8.968000...</msg>
<status status="PASS" starttime="20201030 18:29:16.576" endtime="20201030 18:29:16.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.593" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 18:29:16.591" endtime="20201030 18:29:16.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.599" level="INFO">VALUE: [8.96250000000029e-05, 9.005600000000502e-05, 8.958299999999725e-05, 8.995800000000109e-05, 8.986199999999611e-05, 8.96670000000016e-05, 8.940300000000179e-05, 9.030599999999833e-05, 8.96800000000017e-05, 9.026399999999962e-05, 8.952799999999844e-05, 9.005599999999808e-05, 9.001399999999937e-05, 8.961099999999639e-05, 8.994400000000152e-05, 8.963900000000247e-05, 9.02079999999944e-05, 9.023600000000048e-05, 9.034800000000398e-05, 8.934699999999657e-05, 9.015300000000254e-05, 9.002799999999894e-05, 9.034699999999757e-05, 9.034700000000451e-05, 9.008399999999722e-05, 8.94999999999993e-05, 8.99999999999998e-05, 8.947200000000016e-05, 9.019400000000177e-05, 8.973599999999998e-05, 8.952799999999844e-05, 9.013799999999655e-05, 8.963900000000247e-05, 8.947299999999964e-05, 8.938899999999528e-05, 9.005499999999861e-05, 9.008300000000469e-05, 8.99859999999933e-05, 8.944400000000102e-05, 8.972200000000041e-05, 8.963900000000247e-05, 9.022200000000091e-05, 9.0332999999998e-05, 9.01120000000033e-05, 8.991599999999544e-05, 8.961099999999639e-05, 8.979100000000573e-05, 8.984699999999707e-05, 8.94450000000005e-05, 8.973699999999946e-05]</msg>
<status status="PASS" starttime="20201030 18:29:16.596" endtime="20201030 18:29:16.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.584" endtime="20201030 18:29:16.602"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:16.613" endtime="20201030 18:29:16.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.607" endtime="20201030 18:29:16.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.605" endtime="20201030 18:29:16.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.110" endtime="20201030 18:29:16.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.108" endtime="20201030 18:29:16.638"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.661" endtime="20201030 18:29:16.681"></status>
</kw>
<msg timestamp="20201030 18:29:16.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.657" endtime="20201030 18:29:16.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.684" endtime="20201030 18:29:16.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.690" endtime="20201030 18:29:16.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.650" endtime="20201030 18:29:16.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.644" endtime="20201030 18:29:16.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.714" endtime="20201030 18:29:17.061"></status>
</kw>
<msg timestamp="20201030 18:29:17.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03975425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03984525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:16.711" endtime="20201030 18:29:17.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03975425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03984525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:17.071" endtime="20201030 18:29:17.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.089" endtime="20201030 18:29:17.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.703" endtime="20201030 18:29:17.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.699" endtime="20201030 18:29:17.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:17.107" level="INFO">${RESULT} = [{'diff': 9.10000000000008e-05}, {'diff': 9.140300000000379e-05}, {'diff': 9.093099999999549e-05}, {'diff': 9.095800000000209e-05}, {'diff': 9.058299999999825e-05}, {'diff': 9.08050000000063e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:17.098" endtime="20201030 18:29:17.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:17.122" level="INFO">${ACCURACY} = {'diff': [9.10000000000008e-05, 9.140300000000379e-05, 9.093099999999549e-05, 9.095800000000209e-05, 9.058299999999825e-05, 9.08050000000063e-05, 9.041699999999542e-05, 9.052699999999997e-05, 9.140299...</msg>
<status status="PASS" starttime="20201030 18:29:17.109" endtime="20201030 18:29:17.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.132" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 18:29:17.130" endtime="20201030 18:29:17.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.138" level="INFO">VALUE: [9.10000000000008e-05, 9.140300000000379e-05, 9.093099999999549e-05, 9.095800000000209e-05, 9.058299999999825e-05, 9.08050000000063e-05, 9.041699999999542e-05, 9.052699999999997e-05, 9.140299999999685e-05, 9.123600000000148e-05, 9.048600000000073e-05, 9.055599999999858e-05, 9.133399999999847e-05, 9.093000000000295e-05, 9.094499999999506e-05, 9.065300000000304e-05, 9.088899999999678e-05, 9.11800000000032e-05, 9.11800000000032e-05, 9.051399999999987e-05, 9.113900000000397e-05, 9.090300000000329e-05, 9.11250000000044e-05, 9.08199999999984e-05, 9.11250000000044e-05, 9.102799999999994e-05, 9.111100000000483e-05, 9.133399999999847e-05, 9.11250000000044e-05, 9.111099999999789e-05, 9.113800000000449e-05, 9.048600000000073e-05, 9.051399999999987e-05, 9.081899999999893e-05, 9.11800000000032e-05, 9.108299999999875e-05, 9.088900000000372e-05, 9.059799999999729e-05, 9.051399999999987e-05, 9.058299999999825e-05, 9.065200000000356e-05, 9.130599999999933e-05, 9.138899999999728e-05, 9.088899999999678e-05, 9.082000000000534e-05, 9.13199999999989e-05, 9.044400000000202e-05, 9.038899999999628e-05, 9.052799999999944e-05, 9.12079999999954e-05]</msg>
<status status="PASS" starttime="20201030 18:29:17.135" endtime="20201030 18:29:17.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.123" endtime="20201030 18:29:17.141"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:17.150" endtime="20201030 18:29:17.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.146" endtime="20201030 18:29:17.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.143" endtime="20201030 18:29:17.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.640" endtime="20201030 18:29:17.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.639" endtime="20201030 18:29:17.176"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.198" endtime="20201030 18:29:17.218"></status>
</kw>
<msg timestamp="20201030 18:29:17.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.195" endtime="20201030 18:29:17.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.222" endtime="20201030 18:29:17.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.228" endtime="20201030 18:29:17.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.187" endtime="20201030 18:29:17.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.182" endtime="20201030 18:29:17.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.251" endtime="20201030 18:29:17.589"></status>
</kw>
<msg timestamp="20201030 18:29:17.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039865514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039956972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.248" endtime="20201030 18:29:17.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039865514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039956972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.598" endtime="20201030 18:29:17.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.617" endtime="20201030 18:29:17.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.240" endtime="20201030 18:29:17.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.236" endtime="20201030 18:29:17.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:17.634" level="INFO">${RESULT} = [{'diff': 9.145800000000259e-05}, {'diff': 9.223599999999554e-05}, {'diff': 9.2027999999994e-05}, {'diff': 9.237499999999871e-05}, {'diff': 9.208299999999975e-05}, {'diff': 9.191599999999744e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:17.625" endtime="20201030 18:29:17.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:17.719" level="INFO">${ACCURACY} = {'diff': [9.145800000000259e-05, 9.223599999999554e-05, 9.2027999999994e-05, 9.237499999999871e-05, 9.208299999999975e-05, 9.191599999999744e-05, 9.155500000000011e-05, 9.145800000000259e-05, 9.145899...</msg>
<status status="PASS" starttime="20201030 18:29:17.636" endtime="20201030 18:29:17.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.730" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 18:29:17.728" endtime="20201030 18:29:17.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.735" level="INFO">VALUE: [9.145800000000259e-05, 9.223599999999554e-05, 9.2027999999994e-05, 9.237499999999871e-05, 9.208299999999975e-05, 9.191599999999744e-05, 9.155500000000011e-05, 9.145800000000259e-05, 9.145899999999513e-05, 9.218099999999674e-05, 9.145799999999565e-05, 9.231900000000043e-05, 9.147200000000216e-05, 9.21529999999976e-05, 9.165199999999762e-05, 9.169399999999633e-05, 9.237499999999871e-05, 9.245800000000359e-05, 9.168100000000318e-05, 9.156899999999968e-05, 9.220899999999588e-05, 9.213899999999803e-05, 9.207000000000659e-05, 9.169500000000275e-05, 9.208299999999975e-05, 9.192999999999701e-05, 9.152800000000044e-05, 9.187499999999821e-05, 9.155500000000011e-05, 9.197199999999572e-05, 9.202800000000094e-05, 9.241700000000436e-05, 9.209699999999932e-05, 9.227799999999425e-05, 9.20000000000018e-05, 9.229200000000076e-05, 9.138900000000422e-05, 9.158400000000566e-05, 9.243099999999699e-05, 9.154200000000001e-05, 9.234799999999904e-05, 9.151400000000087e-05, 9.141699999999642e-05, 9.230600000000033e-05, 9.166699999999667e-05, 9.176400000000112e-05, 9.184799999999854e-05, 9.172199999999547e-05, 9.159700000000576e-05, 9.206900000000018e-05]</msg>
<status status="PASS" starttime="20201030 18:29:17.732" endtime="20201030 18:29:17.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.721" endtime="20201030 18:29:17.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:17.748" endtime="20201030 18:29:17.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.743" endtime="20201030 18:29:17.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.741" endtime="20201030 18:29:17.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.178" endtime="20201030 18:29:17.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.176" endtime="20201030 18:29:17.774"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.821" endtime="20201030 18:29:17.858"></status>
</kw>
<msg timestamp="20201030 18:29:17.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.809" endtime="20201030 18:29:17.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.874" endtime="20201030 18:29:17.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.893" endtime="20201030 18:29:17.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.795" endtime="20201030 18:29:17.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.781" endtime="20201030 18:29:17.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.929" endtime="20201030 18:29:18.272"></status>
</kw>
<msg timestamp="20201030 18:29:18.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067374611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067467125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.926" endtime="20201030 18:29:18.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067374611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067467125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.282" endtime="20201030 18:29:18.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.300" endtime="20201030 18:29:18.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.918" endtime="20201030 18:29:18.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.908" endtime="20201030 18:29:18.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:18.317" level="INFO">${RESULT} = [{'diff': 9.251400000000187e-05}, {'diff': 9.326299999999621e-05}, {'diff': 9.315300000001248e-05}, {'diff': 9.272200000000341e-05}, {'diff': 9.277800000000169e-05}, {'diff': 9.291599999999844e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:18.309" endtime="20201030 18:29:18.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:18.327" level="INFO">${ACCURACY} = {'diff': [9.251400000000187e-05, 9.326299999999621e-05, 9.315300000001248e-05, 9.272200000000341e-05, 9.277800000000169e-05, 9.291599999999844e-05, 9.327800000000219e-05, 9.273599999999604e-05, 9.3083...</msg>
<status status="PASS" starttime="20201030 18:29:18.319" endtime="20201030 18:29:18.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.338" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 18:29:18.335" endtime="20201030 18:29:18.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.345" level="INFO">VALUE: [9.251400000000187e-05, 9.326299999999621e-05, 9.315300000001248e-05, 9.272200000000341e-05, 9.277800000000169e-05, 9.291599999999844e-05, 9.327800000000219e-05, 9.273599999999604e-05, 9.308300000000769e-05, 9.305499999999467e-05, 9.28879999999993e-05, 9.254199999998713e-05, 9.255599999999364e-05, 9.300000000000974e-05, 9.319500000000425e-05, 9.280600000000083e-05, 9.25130000000024e-05, 9.326399999999568e-05, 9.254200000000101e-05, 9.323599999999654e-05, 9.294399999999758e-05, 9.312499999999946e-05, 9.273599999999604e-05, 9.243099999999005e-05, 9.294400000001146e-05, 9.2333e-05, 9.324999999998917e-05, 9.313899999999209e-05, 9.325000000000305e-05, 9.251400000000187e-05, 9.244499999999656e-05, 9.330600000000133e-05, 9.329099999999535e-05, 9.251400000000187e-05, 9.229199999999382e-05, 9.3333000000001e-05, 9.273599999999604e-05, 9.273599999999604e-05, 9.302699999999553e-05, 9.243000000000445e-05, 9.30130000000029e-05, 9.311099999999295e-05, 9.243100000000393e-05, 9.241699999999742e-05, 9.293100000000443e-05, 9.32079999999974e-05, 9.305599999999414e-05, 9.300000000000974e-05, 9.292999999999108e-05, 9.230600000000033e-05]</msg>
<status status="PASS" starttime="20201030 18:29:18.340" endtime="20201030 18:29:18.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.328" endtime="20201030 18:29:18.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:18.358" endtime="20201030 18:29:18.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.354" endtime="20201030 18:29:18.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.351" endtime="20201030 18:29:18.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.776" endtime="20201030 18:29:18.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.775" endtime="20201030 18:29:18.384"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.406" endtime="20201030 18:29:18.426"></status>
</kw>
<msg timestamp="20201030 18:29:18.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.403" endtime="20201030 18:29:18.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.430" endtime="20201030 18:29:18.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.436" endtime="20201030 18:29:18.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.396" endtime="20201030 18:29:18.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.390" endtime="20201030 18:29:18.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.460" endtime="20201030 18:29:18.806"></status>
</kw>
<msg timestamp="20201030 18:29:18.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039948806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040042764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.456" endtime="20201030 18:29:18.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039948806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040042764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.815" endtime="20201030 18:29:18.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.834" endtime="20201030 18:29:18.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.449" endtime="20201030 18:29:18.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.444" endtime="20201030 18:29:18.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:18.851" level="INFO">${RESULT} = [{'diff': 9.395799999999815e-05}, {'diff': 9.388899999999978e-05}, {'diff': 9.344399999999808e-05}, {'diff': 9.351399999999593e-05}, {'diff': 9.413900000000003e-05}, {'diff': 9.341699999999842e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:18.842" endtime="20201030 18:29:18.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:18.862" level="INFO">${ACCURACY} = {'diff': [9.395799999999815e-05, 9.388899999999978e-05, 9.344399999999808e-05, 9.351399999999593e-05, 9.413900000000003e-05, 9.341699999999842e-05, 9.409800000000079e-05, 9.352800000000244e-05, 9.3820...</msg>
<status status="PASS" starttime="20201030 18:29:18.853" endtime="20201030 18:29:18.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.873" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 18:29:18.870" endtime="20201030 18:29:18.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.878" level="INFO">VALUE: [9.395799999999815e-05, 9.388899999999978e-05, 9.344399999999808e-05, 9.351399999999593e-05, 9.413900000000003e-05, 9.341699999999842e-05, 9.409800000000079e-05, 9.352800000000244e-05, 9.38200000000014e-05, 9.404200000000251e-05, 9.336100000000014e-05, 9.417999999999926e-05, 9.422199999999797e-05, 9.338899999999928e-05, 9.427800000000319e-05, 9.425000000000405e-05, 9.341699999999842e-05, 9.3333000000001e-05, 9.349999999999636e-05, 9.418099999999874e-05, 9.356999999999421e-05, 9.338899999999928e-05, 9.338899999999928e-05, 9.341699999999842e-05, 9.419499999999831e-05, 9.4027999999996e-05, 9.401299999999696e-05, 9.351400000000287e-05, 9.426400000000362e-05, 9.419499999999831e-05, 9.38330000000015e-05, 9.40130000000039e-05, 9.34859999999968e-05, 9.377799999999575e-05, 9.434700000000157e-05, 9.422199999999797e-05, 9.423600000000448e-05, 9.395900000000457e-05, 9.401400000000337e-05, 9.352800000000244e-05, 9.337499999999971e-05, 9.386100000000064e-05, 9.412500000000046e-05, 9.430600000000233e-05, 9.351400000000287e-05, 9.338899999999928e-05, 9.338899999999928e-05, 9.436100000000114e-05, 9.409700000000132e-05, 9.379200000000226e-05]</msg>
<status status="PASS" starttime="20201030 18:29:18.875" endtime="20201030 18:29:18.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.864" endtime="20201030 18:29:18.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:18.890" endtime="20201030 18:29:18.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.886" endtime="20201030 18:29:18.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.883" endtime="20201030 18:29:18.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.386" endtime="20201030 18:29:18.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.384" endtime="20201030 18:29:18.915"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.938" endtime="20201030 18:29:18.958"></status>
</kw>
<msg timestamp="20201030 18:29:18.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.935" endtime="20201030 18:29:18.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.962" endtime="20201030 18:29:18.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.968" endtime="20201030 18:29:18.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.927" endtime="20201030 18:29:18.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.922" endtime="20201030 18:29:18.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.991" endtime="20201030 18:29:19.337"></status>
</kw>
<msg timestamp="20201030 18:29:19.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039653736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039748125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.987" endtime="20201030 18:29:19.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039653736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039748125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.347" endtime="20201030 18:29:19.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.366" endtime="20201030 18:29:19.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.980" endtime="20201030 18:29:19.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.976" endtime="20201030 18:29:19.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:19.384" level="INFO">${RESULT} = [{'diff': 9.438900000000028e-05}, {'diff': 9.531999999999596e-05}, {'diff': 9.45279999999965e-05}, {'diff': 9.462500000000096e-05}, {'diff': 9.512500000000146e-05}, {'diff': 9.483400000000197e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:19.375" endtime="20201030 18:29:19.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:19.395" level="INFO">${ACCURACY} = {'diff': [9.438900000000028e-05, 9.531999999999596e-05, 9.45279999999965e-05, 9.462500000000096e-05, 9.512500000000146e-05, 9.483400000000197e-05, 9.477699999999728e-05, 9.494499999999906e-05, 9.44169...</msg>
<status status="PASS" starttime="20201030 18:29:19.386" endtime="20201030 18:29:19.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.406" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 18:29:19.404" endtime="20201030 18:29:19.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.412" level="INFO">VALUE: [9.438900000000028e-05, 9.531999999999596e-05, 9.45279999999965e-05, 9.462500000000096e-05, 9.512500000000146e-05, 9.483400000000197e-05, 9.477699999999728e-05, 9.494499999999906e-05, 9.441699999999942e-05, 9.480500000000336e-05, 9.524999999999811e-05, 9.46530000000001e-05, 9.444499999999856e-05, 9.504199999999657e-05, 9.456900000000268e-05, 9.51530000000006e-05, 9.445799999999865e-05, 9.486100000000164e-05, 9.438900000000028e-05, 9.466699999999967e-05, 9.451400000000387e-05, 9.519499999999931e-05, 9.469499999999881e-05, 9.463899999999359e-05, 9.519500000000625e-05, 9.449999999999736e-05, 9.484699999999513e-05, 9.511100000000189e-05, 9.434700000000157e-05, 9.536100000000214e-05, 9.511100000000189e-05, 9.458300000000225e-05, 9.507000000000265e-05, 9.476400000000412e-05, 9.448600000000473e-05, 9.44870000000042e-05, 9.477800000000369e-05, 9.527800000000419e-05, 9.499999999999786e-05, 9.531999999999596e-05, 9.484800000000154e-05, 9.483299999999556e-05, 9.512499999999452e-05, 9.5027999999997e-05, 9.524999999999811e-05, 9.454100000000354e-05, 9.509700000000232e-05, 9.436100000000114e-05, 9.523599999999854e-05, 9.522199999999897e-05]</msg>
<status status="PASS" starttime="20201030 18:29:19.409" endtime="20201030 18:29:19.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.397" endtime="20201030 18:29:19.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:19.424" endtime="20201030 18:29:19.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.420" endtime="20201030 18:29:19.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.418" endtime="20201030 18:29:19.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.918" endtime="20201030 18:29:19.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.916" endtime="20201030 18:29:19.450"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.473" endtime="20201030 18:29:19.493"></status>
</kw>
<msg timestamp="20201030 18:29:19.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.469" endtime="20201030 18:29:19.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.496" endtime="20201030 18:29:19.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.503" endtime="20201030 18:29:19.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.462" endtime="20201030 18:29:19.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.456" endtime="20201030 18:29:19.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.527" endtime="20201030 18:29:19.870"></status>
</kw>
<msg timestamp="20201030 18:29:19.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040266833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040362847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.523" endtime="20201030 18:29:19.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040266833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040362847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.880" endtime="20201030 18:29:19.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.898" endtime="20201030 18:29:19.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.515" endtime="20201030 18:29:19.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.511" endtime="20201030 18:29:19.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:19.915" level="INFO">${RESULT} = [{'diff': 9.601399999999843e-05}, {'diff': 9.576399999999818e-05}, {'diff': 9.590299999999441e-05}, {'diff': 9.563900000000153e-05}, {'diff': 9.594500000000006e-05}, {'diff': 9.623599999999954e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:19.907" endtime="20201030 18:29:19.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:19.925" level="INFO">${ACCURACY} = {'diff': [9.601399999999843e-05, 9.576399999999818e-05, 9.590299999999441e-05, 9.563900000000153e-05, 9.594500000000006e-05, 9.623599999999954e-05, 9.623599999999954e-05, 9.591600000000144e-05, 9.6070...</msg>
<status status="PASS" starttime="20201030 18:29:19.917" endtime="20201030 18:29:19.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.935" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 18:29:19.933" endtime="20201030 18:29:19.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.941" level="INFO">VALUE: [9.601399999999843e-05, 9.576399999999818e-05, 9.590299999999441e-05, 9.563900000000153e-05, 9.594500000000006e-05, 9.623599999999954e-05, 9.623599999999954e-05, 9.591600000000144e-05, 9.607000000000365e-05, 9.565200000000162e-05, 9.606899999999724e-05, 9.608400000000322e-05, 9.612499999999552e-05, 9.601399999999843e-05, 9.618100000000074e-05, 9.568100000000024e-05, 9.633399999999653e-05, 9.626399999999868e-05, 9.634699999999663e-05, 9.609800000000279e-05, 9.595800000000015e-05, 9.579199999999732e-05, 9.55279999999975e-05, 9.607000000000365e-05, 9.638899999999534e-05, 9.53880000000018e-05, 9.6333000000004e-05, 9.612500000000246e-05, 9.540300000000085e-05, 9.541700000000042e-05, 9.62080000000004e-05, 9.619500000000031e-05, 9.599999999999886e-05, 9.599999999999886e-05, 9.601299999999896e-05, 9.59729999999992e-05, 9.604200000000451e-05, 9.544400000000008e-05, 9.537500000000171e-05, 9.605499999999767e-05, 9.601299999999896e-05, 9.636200000000261e-05, 9.555599999999664e-05, 9.629099999999835e-05, 9.569400000000033e-05, 9.609700000000332e-05, 9.541700000000042e-05, 9.543099999999999e-05, 9.608300000000375e-05, 9.56530000000011e-05]</msg>
<status status="PASS" starttime="20201030 18:29:19.938" endtime="20201030 18:29:19.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.926" endtime="20201030 18:29:19.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:19.953" endtime="20201030 18:29:19.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.949" endtime="20201030 18:29:19.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.946" endtime="20201030 18:29:19.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.452" endtime="20201030 18:29:19.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.451" endtime="20201030 18:29:19.978"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.002" endtime="20201030 18:29:20.022"></status>
</kw>
<msg timestamp="20201030 18:29:20.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.997" endtime="20201030 18:29:20.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.025" endtime="20201030 18:29:20.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.031" endtime="20201030 18:29:20.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.990" endtime="20201030 18:29:20.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.985" endtime="20201030 18:29:20.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.054" endtime="20201030 18:29:20.389"></status>
</kw>
<msg timestamp="20201030 18:29:20.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0412155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041312556, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:20.051" endtime="20201030 18:29:20.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0412155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041312556, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:20.399" endtime="20201030 18:29:20.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.418" endtime="20201030 18:29:20.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.044" endtime="20201030 18:29:20.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.039" endtime="20201030 18:29:20.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:20.436" level="INFO">${RESULT} = [{'diff': 9.705599999999814e-05}, {'diff': 9.656899999999774e-05}, {'diff': 9.674999999999961e-05}, {'diff': 9.699999999999986e-05}, {'diff': 9.68609999999967e-05}, {'diff': 9.819400000000283e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:20.427" endtime="20201030 18:29:20.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:20.445" level="INFO">${ACCURACY} = {'diff': [9.705599999999814e-05, 9.656899999999774e-05, 9.674999999999961e-05, 9.699999999999986e-05, 9.68609999999967e-05, 9.819400000000283e-05, 9.805499999999967e-05, 9.723600000000054e-05, 9.71110...</msg>
<status status="PASS" starttime="20201030 18:29:20.438" endtime="20201030 18:29:20.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.456" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 18:29:20.454" endtime="20201030 18:29:20.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.462" level="INFO">VALUE: [9.705599999999814e-05, 9.656899999999774e-05, 9.674999999999961e-05, 9.699999999999986e-05, 9.68609999999967e-05, 9.819400000000283e-05, 9.805499999999967e-05, 9.723600000000054e-05, 9.711100000000389e-05, 9.67080000000009e-05, 9.691699999999498e-05, 9.834699999999863e-05, 9.688900000000278e-05, 9.701399999999943e-05, 9.715299999999566e-05, 9.69860000000003e-05, 9.693099999999455e-05, 9.719400000000183e-05, 9.697200000000072e-05, 9.709799999999685e-05, 9.711100000000389e-05, 9.709699999999738e-05, 9.743000000000251e-05, 9.738799999999687e-05, 9.666700000000167e-05, 9.733299999999806e-05, 9.68059999999979e-05, 9.673600000000004e-05, 9.668000000000176e-05, 9.699999999999986e-05, 9.674999999999961e-05, 9.787500000000421e-05, 9.738899999999634e-05, 9.762500000000396e-05, 9.704199999999857e-05, 9.730600000000533e-05, 9.733299999999806e-05, 9.741700000000242e-05, 9.72080000000014e-05, 9.819500000000231e-05, 9.713899999999609e-05, 9.69860000000003e-05, 9.83880000000048e-05, 9.677699999999928e-05, 9.822200000000197e-05, 9.779099999999985e-05, 9.726300000000021e-05, 9.722200000000097e-05, 9.769500000000181e-05, 9.798599999999436e-05]</msg>
<status status="PASS" starttime="20201030 18:29:20.459" endtime="20201030 18:29:20.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.447" endtime="20201030 18:29:20.465"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:20.477" endtime="20201030 18:29:20.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.470" endtime="20201030 18:29:20.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.467" endtime="20201030 18:29:20.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.980" endtime="20201030 18:29:20.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.979" endtime="20201030 18:29:20.503"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.526" endtime="20201030 18:29:20.545"></status>
</kw>
<msg timestamp="20201030 18:29:20.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.523" endtime="20201030 18:29:20.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.548" endtime="20201030 18:29:20.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.555" endtime="20201030 18:29:20.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.515" endtime="20201030 18:29:20.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.510" endtime="20201030 18:29:20.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.589" endtime="20201030 18:29:20.946"></status>
</kw>
<msg timestamp="20201030 18:29:20.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040278694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0403775, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:20.585" endtime="20201030 18:29:20.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040278694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0403775, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:20.955" endtime="20201030 18:29:20.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.974" endtime="20201030 18:29:20.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.570" endtime="20201030 18:29:20.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.563" endtime="20201030 18:29:20.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:20.991" level="INFO">${RESULT} = [{'diff': 9.88059999999999e-05}, {'diff': 9.829199999999982e-05}, {'diff': 9.82080000000024e-05}, {'diff': 9.797199999999479e-05}, {'diff': 9.84860000000018e-05}, {'diff': 9.826399999999375e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:29:20.982" endtime="20201030 18:29:20.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:21.002" level="INFO">${ACCURACY} = {'diff': [9.88059999999999e-05, 9.829199999999982e-05, 9.82080000000024e-05, 9.797199999999479e-05, 9.84860000000018e-05, 9.826399999999375e-05, 9.93609999999992e-05, 9.806999999999871e-05, 9.77500000...</msg>
<status status="PASS" starttime="20201030 18:29:20.993" endtime="20201030 18:29:21.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.013" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 18:29:21.011" endtime="20201030 18:29:21.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.019" level="INFO">VALUE: [9.88059999999999e-05, 9.829199999999982e-05, 9.82080000000024e-05, 9.797199999999479e-05, 9.84860000000018e-05, 9.826399999999375e-05, 9.93609999999992e-05, 9.806999999999871e-05, 9.775000000000061e-05, 9.77359999999941e-05, 9.826400000000068e-05, 9.759699999999788e-05, 9.790299999999641e-05, 9.86939999999964e-05, 9.911099999999895e-05, 9.91530000000046e-05, 9.759699999999788e-05, 9.823600000000154e-05, 9.822199999999504e-05, 9.837500000000471e-05, 9.74730000000007e-05, 9.779199999999932e-05, 9.826400000000068e-05, 9.931900000000049e-05, 9.867999999999683e-05, 9.787500000000421e-05, 9.8415999999997e-05, 9.88059999999999e-05, 9.793000000000301e-05, 9.833299999999906e-05, 9.745800000000165e-05, 9.940299999999791e-05, 9.806899999999924e-05, 9.834700000000557e-05, 9.933300000000006e-05, 9.756899999999874e-05, 9.809800000000479e-05, 9.911099999999895e-05, 9.79860000000013e-05, 9.741700000000242e-05, 9.794400000000258e-05, 9.8028e-05, 9.931999999999996e-05, 9.86530000000041e-05, 9.888899999999784e-05, 9.805499999999967e-05, 9.756999999999821e-05, 9.93060000000004e-05, 9.809699999999838e-05, 9.74860000000008e-05]</msg>
<status status="PASS" starttime="20201030 18:29:21.015" endtime="20201030 18:29:21.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.004" endtime="20201030 18:29:21.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:21.031" endtime="20201030 18:29:21.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.027" endtime="20201030 18:29:21.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.024" endtime="20201030 18:29:21.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.505" endtime="20201030 18:29:21.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.504" endtime="20201030 18:29:21.056"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.079" endtime="20201030 18:29:21.100"></status>
</kw>
<msg timestamp="20201030 18:29:21.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.076" endtime="20201030 18:29:21.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.103" endtime="20201030 18:29:21.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.110" endtime="20201030 18:29:21.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.069" endtime="20201030 18:29:21.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.063" endtime="20201030 18:29:21.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.134" endtime="20201030 18:29:21.485"></status>
</kw>
<msg timestamp="20201030 18:29:21.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040066819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040166611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.131" endtime="20201030 18:29:21.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040066819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040166611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.494" endtime="20201030 18:29:21.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.513" endtime="20201030 18:29:21.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.123" endtime="20201030 18:29:21.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.119" endtime="20201030 18:29:21.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:21.532" level="INFO">${RESULT} = [{'diff': 9.979200000000132e-05}, {'diff': 9.987499999999927e-05}, {'diff': 0.00010019400000000483}, {'diff': 9.990300000000535e-05}, {'diff': 9.87080000000029e-05}, {'diff': 0.0001002359999999966}, {...</msg>
<status status="PASS" starttime="20201030 18:29:21.523" endtime="20201030 18:29:21.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:21.543" level="INFO">${ACCURACY} = {'diff': [9.979200000000132e-05, 9.987499999999927e-05, 0.00010019400000000483, 9.990300000000535e-05, 9.87080000000029e-05, 0.0001002359999999966, 9.972199999999654e-05, 9.950000000000236e-05, 9.9027...</msg>
<status status="PASS" starttime="20201030 18:29:21.534" endtime="20201030 18:29:21.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.554" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 18:29:21.552" endtime="20201030 18:29:21.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.559" level="INFO">VALUE: [9.979200000000132e-05, 9.987499999999927e-05, 0.00010019400000000483, 9.990300000000535e-05, 9.87080000000029e-05, 0.0001002359999999966, 9.972199999999654e-05, 9.950000000000236e-05, 9.902700000000153e-05, 9.993000000000501e-05, 9.843000000000351e-05, 9.954099999999466e-05, 9.988899999999884e-05, 9.972200000000347e-05, 9.990300000000535e-05, 9.938899999999834e-05, 9.863900000000453e-05, 9.873600000000204e-05, 0.00010047199999999729, 9.975000000000261e-05, 9.851400000000093e-05, 0.00010040299999999891, 9.916700000000417e-05, 9.990299999999841e-05, 9.895900000000263e-05, 9.959699999999988e-05, 0.00010022200000000397, 9.973600000000304e-05, 9.856899999999974e-05, 9.977800000000175e-05, 0.00010029199999999489, 9.863899999999759e-05, 9.938899999999834e-05, 9.861100000000539e-05, 9.937500000000571e-05, 9.881999999999946e-05, 9.947200000000322e-05, 9.861099999999845e-05, 0.00010012499999999952, 9.895900000000263e-05, 9.843099999999605e-05, 9.972200000000347e-05, 9.966699999999773e-05, 0.00010013899999999909, 9.944499999999662e-05, 9.95280000000015e-05, 0.00010000000000000286, 9.855500000000017e-05, 0.00010045800000000465, 9.968000000000476e-05]</msg>
<status status="PASS" starttime="20201030 18:29:21.556" endtime="20201030 18:29:21.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.545" endtime="20201030 18:29:21.562"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:21.572" endtime="20201030 18:29:21.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.567" endtime="20201030 18:29:21.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.565" endtime="20201030 18:29:21.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.059" endtime="20201030 18:29:21.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.057" endtime="20201030 18:29:21.597"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.620" endtime="20201030 18:29:21.641"></status>
</kw>
<msg timestamp="20201030 18:29:21.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.617" endtime="20201030 18:29:21.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.644" endtime="20201030 18:29:21.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.650" endtime="20201030 18:29:21.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.609" endtime="20201030 18:29:21.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.604" endtime="20201030 18:29:21.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.674" endtime="20201030 18:29:22.030"></status>
</kw>
<msg timestamp="20201030 18:29:22.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040171472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040272125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.671" endtime="20201030 18:29:22.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040171472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040272125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.039" endtime="20201030 18:29:22.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.058" endtime="20201030 18:29:22.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.663" endtime="20201030 18:29:22.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.659" endtime="20201030 18:29:22.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:22.075" level="INFO">${RESULT} = [{'diff': 0.00010065299999999916}, {'diff': 0.0001006939999999984}, {'diff': 0.00010059700000000088}, {'diff': 0.0001008060000000019}, {'diff': 0.00010095899999999769}, {'diff': 0.00010030500000000192...</msg>
<status status="PASS" starttime="20201030 18:29:22.066" endtime="20201030 18:29:22.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:22.084" level="INFO">${ACCURACY} = {'diff': [0.00010065299999999916, 0.0001006939999999984, 0.00010059700000000088, 0.0001008060000000019, 0.00010095899999999769, 0.00010030500000000192, 0.00010115299999999966, 9.945799999999672e-05, 0...</msg>
<status status="PASS" starttime="20201030 18:29:22.077" endtime="20201030 18:29:22.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.095" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 18:29:22.093" endtime="20201030 18:29:22.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.100" level="INFO">VALUE: [0.00010065299999999916, 0.0001006939999999984, 0.00010059700000000088, 0.0001008060000000019, 0.00010095899999999769, 0.00010030500000000192, 0.00010115299999999966, 9.945799999999672e-05, 0.00010075000000000361, 0.0001013060000000024, 0.00010061100000000045, 0.0001006939999999984, 0.00010140299999999991, 0.00010069400000000533, 0.00010104099999999616, 0.00010120799999999847, 0.0001008610000000007, 0.00010054200000000207, 0.00010041699999999848, 0.00010044399999999815, 0.00010120799999999847, 0.00010088900000000678, 0.0001004730000000037, 0.00010120899999999794, 0.0001012359999999976, 0.00010058300000000131, 0.00010045800000000465, 0.00010073600000000404, 0.00010127700000000378, 0.00010102799999999607, 0.00010055500000000217, 0.00010083400000000103, 0.00010054200000000207, 0.00010031999999999403, 0.00010037499999999977, 0.00010040200000000638, 0.00010111100000000095, 0.00010065199999999969, 0.00010038799999999987, 0.00010045799999999772, 0.00010127799999999632, 0.00010094399999999865, 0.00010109700000000138, 0.00010088899999999984, 0.00010134700000000163, 0.00010069400000000533, 0.00010129100000000335, 0.00010122199999999804, 0.00010145799999999872, 0.00010120799999999847]</msg>
<status status="PASS" starttime="20201030 18:29:22.097" endtime="20201030 18:29:22.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.086" endtime="20201030 18:29:22.103"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:22.113" endtime="20201030 18:29:22.135"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.108" endtime="20201030 18:29:22.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.106" endtime="20201030 18:29:22.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.599" endtime="20201030 18:29:22.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.598" endtime="20201030 18:29:22.138"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.162" endtime="20201030 18:29:22.183"></status>
</kw>
<msg timestamp="20201030 18:29:22.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.158" endtime="20201030 18:29:22.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.187" endtime="20201030 18:29:22.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.193" endtime="20201030 18:29:22.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.150" endtime="20201030 18:29:22.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.145" endtime="20201030 18:29:22.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.217" endtime="20201030 18:29:22.570"></status>
</kw>
<msg timestamp="20201030 18:29:22.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041733597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041835042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.213" endtime="20201030 18:29:22.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041733597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041835042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.579" endtime="20201030 18:29:22.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.598" endtime="20201030 18:29:22.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.206" endtime="20201030 18:29:22.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.201" endtime="20201030 18:29:22.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:22.615" level="INFO">${RESULT} = [{'diff': 0.00010144500000000556}, {'diff': 0.0001018339999999951}, {'diff': 0.00010154199999999614}, {'diff': 0.00010231999999999603}, {'diff': 0.00010224999999999818}, {'diff': 0.0001016799999999998...</msg>
<status status="PASS" starttime="20201030 18:29:22.606" endtime="20201030 18:29:22.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:22.624" level="INFO">${ACCURACY} = {'diff': [0.00010144500000000556, 0.0001018339999999951, 0.00010154199999999614, 0.00010231999999999603, 0.00010224999999999818, 0.00010167999999999983, 0.00010241699999999354, 0.00010174999999999768,...</msg>
<status status="PASS" starttime="20201030 18:29:22.617" endtime="20201030 18:29:22.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.635" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 18:29:22.633" endtime="20201030 18:29:22.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.640" level="INFO">VALUE: [0.00010144500000000556, 0.0001018339999999951, 0.00010154199999999614, 0.00010231999999999603, 0.00010224999999999818, 0.00010167999999999983, 0.00010241699999999354, 0.00010174999999999768, 0.0001021939999999999, 0.00010190300000000041, 0.00010197199999999879, 0.00010213900000000109, 0.00010188900000000084, 0.00010183400000000203, 0.00010179200000000332, 0.00010143099999999905, 0.00010218000000000033, 0.00010143099999999905, 0.00010159799999999441, 0.00010198599999999836, 0.00010162500000000102, 0.00010224999999999818, 0.00010216700000000023, 0.0001023610000000022, 0.0001014860000000048, 0.00010195899999999869, 0.0001014730000000047, 0.0001013610000000012, 0.000101416, 0.00010229199999999689, 0.00010230499999999698, 0.0001018610000000017, 0.0001016939999999994, 0.00010154200000000307, 0.00010169499999999887, 0.00010138900000000034, 0.00010143099999999905, 0.00010161100000000145, 0.0001023480000000021, 0.00010229199999999689, 0.00010161100000000145, 0.0001022359999999986, 0.000101513999999997, 0.00010212500000000152, 0.00010197199999999879, 0.00010229199999999689, 0.00010138900000000034, 0.00010151400000000393, 0.00010138900000000034, 0.0001016939999999994]</msg>
<status status="PASS" starttime="20201030 18:29:22.637" endtime="20201030 18:29:22.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.626" endtime="20201030 18:29:22.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:22.658" endtime="20201030 18:29:22.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.648" endtime="20201030 18:29:22.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.646" endtime="20201030 18:29:22.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.140" endtime="20201030 18:29:22.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.139" endtime="20201030 18:29:22.683"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.706" endtime="20201030 18:29:22.727"></status>
</kw>
<msg timestamp="20201030 18:29:22.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.703" endtime="20201030 18:29:22.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.730" endtime="20201030 18:29:22.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.737" endtime="20201030 18:29:22.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.695" endtime="20201030 18:29:22.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.690" endtime="20201030 18:29:22.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.760" endtime="20201030 18:29:23.112"></status>
</kw>
<msg timestamp="20201030 18:29:23.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040246958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040349903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.757" endtime="20201030 18:29:23.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040246958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040349903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.123" endtime="20201030 18:29:23.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.141" endtime="20201030 18:29:23.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.749" endtime="20201030 18:29:23.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.745" endtime="20201030 18:29:23.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:23.158" level="INFO">${RESULT} = [{'diff': 0.00010294500000000012}, {'diff': 0.00010263900000000159}, {'diff': 0.00010297299999999926}, {'diff': 0.00010283300000000356}, {'diff': 0.00010269499999999987}, {'diff': 0.000102389000000001...</msg>
<status status="PASS" starttime="20201030 18:29:23.150" endtime="20201030 18:29:23.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:23.169" level="INFO">${ACCURACY} = {'diff': [0.00010294500000000012, 0.00010263900000000159, 0.00010297299999999926, 0.00010283300000000356, 0.00010269499999999987, 0.00010238900000000134, 0.00010337499999999583, 0.00010256900000000374...</msg>
<status status="PASS" starttime="20201030 18:29:23.160" endtime="20201030 18:29:23.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.180" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 18:29:23.177" endtime="20201030 18:29:23.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.185" level="INFO">VALUE: [0.00010294500000000012, 0.00010263900000000159, 0.00010297299999999926, 0.00010283300000000356, 0.00010269499999999987, 0.00010238900000000134, 0.00010337499999999583, 0.00010256900000000374, 0.00010295800000000022, 0.00010276399999999825, 0.00010254199999999714, 0.00010311100000000295, 0.00010231999999999603, 0.00010270899999999944, 0.00010329199999999789, 0.00010317999999999439, 0.00010266700000000073, 0.00010243100000000005, 0.0001031810000000008, 0.00010277799999999782, 0.00010247199999999929, 0.00010326399999999875, 0.00010248599999999886, 0.0001030410000000051, 0.00010329200000000482, 0.00010245899999999919, 0.00010254199999999714, 0.00010238900000000134, 0.00010234799999999517, 0.00010234700000000263, 0.00010287500000000227, 0.00010288900000000184, 0.00010299999999999893, 0.00010305499999999773, 0.00010309699999999644, 0.00010286200000000217, 0.00010238900000000134, 0.00010306999999999678, 0.00010319500000000037, 0.00010274999999999868, 0.00010299999999999893, 0.00010263900000000159, 0.00010272199999999954, 0.00010247299999999876, 0.0001028610000000027, 0.00010263900000000159, 0.00010237500000000177, 0.0001030139999999985, 0.00010261099999999551, 0.000103028000000005]</msg>
<status status="PASS" starttime="20201030 18:29:23.182" endtime="20201030 18:29:23.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.170" endtime="20201030 18:29:23.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:23.201" endtime="20201030 18:29:23.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.197" endtime="20201030 18:29:23.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.194" endtime="20201030 18:29:23.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.685" endtime="20201030 18:29:23.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.684" endtime="20201030 18:29:23.227"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.249" endtime="20201030 18:29:23.269"></status>
</kw>
<msg timestamp="20201030 18:29:23.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.246" endtime="20201030 18:29:23.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.272" endtime="20201030 18:29:23.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.279" endtime="20201030 18:29:23.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.239" endtime="20201030 18:29:23.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.233" endtime="20201030 18:29:23.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.302" endtime="20201030 18:29:23.658"></status>
</kw>
<msg timestamp="20201030 18:29:23.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039959319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040063639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.299" endtime="20201030 18:29:23.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039959319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040063639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.667" endtime="20201030 18:29:23.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.686" endtime="20201030 18:29:23.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.291" endtime="20201030 18:29:23.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.287" endtime="20201030 18:29:23.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:23.703" level="INFO">${RESULT} = [{'diff': 0.00010431999999999803}, {'diff': 0.00010437499999999683}, {'diff': 0.0001036810000000013}, {'diff': 0.00010413800000000362}, {'diff': 0.00010430499999999898}, {'diff': 0.0001038609999999967...</msg>
<status status="PASS" starttime="20201030 18:29:23.694" endtime="20201030 18:29:23.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:23.714" level="INFO">${ACCURACY} = {'diff': [0.00010431999999999803, 0.00010437499999999683, 0.0001036810000000013, 0.00010413800000000362, 0.00010430499999999898, 0.00010386099999999676, 0.00010425000000000018, 0.00010425000000000018,...</msg>
<status status="PASS" starttime="20201030 18:29:23.705" endtime="20201030 18:29:23.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.726" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 18:29:23.723" endtime="20201030 18:29:23.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.731" level="INFO">VALUE: [0.00010431999999999803, 0.00010437499999999683, 0.0001036810000000013, 0.00010413800000000362, 0.00010430499999999898, 0.00010386099999999676, 0.00010425000000000018, 0.00010425000000000018, 0.00010337500000000277, 0.00010376399999999925, 0.0001042360000000006, 0.00010337499999999583, 0.00010425000000000018, 0.00010390200000000294, 0.00010337499999999583, 0.0001038889999999959, 0.00010420800000000147, 0.0001040139999999995, 0.00010343000000000158, 0.00010358399999999685, 0.0001038889999999959, 0.00010413900000000309, 0.00010369499999999393, 0.00010426399999999975, 0.00010426399999999975, 0.00010390300000000241, 0.00010405600000000514, 0.00010349999999999943, 0.00010397300000000026, 0.00010408299999999787, 0.00010363900000000259, 0.0001035559999999977, 0.00010397300000000026, 0.00010402799999999907, 0.00010413900000000309, 0.0001042360000000006, 0.00010425000000000018, 0.00010388900000000284, 0.00010426399999999975, 0.0001036810000000013, 0.00010391700000000198, 0.00010355500000000517, 0.00010443100000000205, 0.00010430499999999898, 0.00010365300000000216, 0.0001036810000000013, 0.00010390200000000294, 0.00010358399999999685, 0.00010337499999999583, 0.00010408299999999787]</msg>
<status status="PASS" starttime="20201030 18:29:23.728" endtime="20201030 18:29:23.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.716" endtime="20201030 18:29:23.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:23.744" endtime="20201030 18:29:23.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.739" endtime="20201030 18:29:23.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.737" endtime="20201030 18:29:23.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.229" endtime="20201030 18:29:23.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.227" endtime="20201030 18:29:23.769"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.792" endtime="20201030 18:29:23.814"></status>
</kw>
<msg timestamp="20201030 18:29:23.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.789" endtime="20201030 18:29:23.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.817" endtime="20201030 18:29:23.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.825" endtime="20201030 18:29:23.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.781" endtime="20201030 18:29:23.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.776" endtime="20201030 18:29:23.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.861" endtime="20201030 18:29:24.201"></status>
</kw>
<msg timestamp="20201030 18:29:24.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040703458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040807819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.856" endtime="20201030 18:29:24.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040703458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040807819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:24.211" endtime="20201030 18:29:24.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.229" endtime="20201030 18:29:24.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.847" endtime="20201030 18:29:24.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.840" endtime="20201030 18:29:24.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:24.246" level="INFO">${RESULT} = [{'diff': 0.0001043610000000042}, {'diff': 0.00010533299999999912}, {'diff': 0.00010522200000000204}, {'diff': 0.00010447200000000129}, {'diff': 0.00010495800000000222}, {'diff': 0.0001045419999999991...</msg>
<status status="PASS" starttime="20201030 18:29:24.237" endtime="20201030 18:29:24.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:24.255" level="INFO">${ACCURACY} = {'diff': [0.0001043610000000042, 0.00010533299999999912, 0.00010522200000000204, 0.00010447200000000129, 0.00010495800000000222, 0.00010454199999999914, 0.00010529100000000041, 0.00010458299999999837,...</msg>
<status status="PASS" starttime="20201030 18:29:24.248" endtime="20201030 18:29:24.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.266" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 18:29:24.263" endtime="20201030 18:29:24.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.271" level="INFO">VALUE: [0.0001043610000000042, 0.00010533299999999912, 0.00010522200000000204, 0.00010447200000000129, 0.00010495800000000222, 0.00010454199999999914, 0.00010529100000000041, 0.00010458299999999837, 0.00010459800000000435, 0.00010513799999999768, 0.00010438900000000334, 0.00010473599999999417, 0.00010443100000000205, 0.00010476400000000025, 0.00010531999999999903, 0.00010494399999999571, 0.00010527800000000032, 0.00010472300000000101, 0.0001053339999999986, 0.00010444500000000162, 0.00010512500000000452, 0.00010509800000000485, 0.00010476400000000025, 0.0001050689999999993, 0.0001050140000000005, 0.00010437499999999683, 0.00010444500000000162, 0.0001052360000000016, 0.00010457000000000521, 0.00010494400000000265, 0.00010463899999999665, 0.00010519500000000237, 0.00010534699999999869, 0.0001045559999999987, 0.00010461099999999751, 0.00010525000000000118, 0.00010512499999999758, 0.00010442999999999564, 0.00010472200000000154, 0.00010498600000000136, 0.0001048480000000046, 0.00010495799999999528, 0.00010520800000000247, 0.00010518000000000333, 0.00010526300000000127, 0.00010500000000000093, 0.00010458299999999837, 0.0001049160000000035, 0.00010487499999999733, 0.00010465300000000316]</msg>
<status status="PASS" starttime="20201030 18:29:24.268" endtime="20201030 18:29:24.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.257" endtime="20201030 18:29:24.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:24.283" endtime="20201030 18:29:24.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.279" endtime="20201030 18:29:24.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.277" endtime="20201030 18:29:24.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.771" endtime="20201030 18:29:24.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.770" endtime="20201030 18:29:24.308"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.331" endtime="20201030 18:29:24.352"></status>
</kw>
<msg timestamp="20201030 18:29:24.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.327" endtime="20201030 18:29:24.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.355" endtime="20201030 18:29:24.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.361" endtime="20201030 18:29:24.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.320" endtime="20201030 18:29:24.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.315" endtime="20201030 18:29:24.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.385" endtime="20201030 18:29:24.728"></status>
</kw>
<msg timestamp="20201030 18:29:24.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041014403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041119889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:24.381" endtime="20201030 18:29:24.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041014403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041119889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:24.738" endtime="20201030 18:29:24.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.756" endtime="20201030 18:29:24.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.374" endtime="20201030 18:29:24.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.370" endtime="20201030 18:29:24.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:24.773" level="INFO">${RESULT} = [{'diff': 0.00010548600000000186}, {'diff': 0.00010544499999999568}, {'diff': 0.00010629200000000089}, {'diff': 0.00010630600000000046}, {'diff': 0.00010552800000000057}, {'diff': 0.000105638999999997...</msg>
<status status="PASS" starttime="20201030 18:29:24.764" endtime="20201030 18:29:24.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:24.782" level="INFO">${ACCURACY} = {'diff': [0.00010548600000000186, 0.00010544499999999568, 0.00010629200000000089, 0.00010630600000000046, 0.00010552800000000057, 0.00010563899999999765, 0.0001063339999999996, 0.00010544500000000262,...</msg>
<status status="PASS" starttime="20201030 18:29:24.775" endtime="20201030 18:29:24.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.793" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 18:29:24.791" endtime="20201030 18:29:24.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.798" level="INFO">VALUE: [0.00010548600000000186, 0.00010544499999999568, 0.00010629200000000089, 0.00010630600000000046, 0.00010552800000000057, 0.00010563899999999765, 0.0001063339999999996, 0.00010544500000000262, 0.00010534799999999817, 0.00010562499999999808, 0.00010584699999999919, 0.00010565300000000416, 0.00010556999999999928, 0.00010637499999999883, 0.00010541699999999654, 0.0001057360000000021, 0.00010587499999999833, 0.00010565299999999722, 0.00010636199999999874, 0.00010633300000000012, 0.00010615300000000466, 0.00010579200000000039, 0.00010623599999999567, 0.00010597200000000279, 0.00010619399999999696, 0.00010600000000000193, 0.00010561099999999851, 0.00010552800000000057, 0.00010634699999999969, 0.00010572200000000254, 0.00010575000000000168, 0.00010558399999999885, 0.00010598600000000236, 0.00010612499999999858, 0.00010607000000000671, 0.0001062360000000026, 0.00010620799999999653, 0.00010609699999999944, 0.00010608299999999987, 0.00010584699999999919, 0.00010547199999999535, 0.00010616700000000423, 0.0001060560000000002, 0.00010640200000000544, 0.00010563900000000459, 0.00010569399999999646, 0.00010611099999999901, 0.0001055689999999998, 0.0001060560000000002, 0.00010545900000000219]</msg>
<status status="PASS" starttime="20201030 18:29:24.795" endtime="20201030 18:29:24.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.784" endtime="20201030 18:29:24.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:24.812" endtime="20201030 18:29:24.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.806" endtime="20201030 18:29:24.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.804" endtime="20201030 18:29:24.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.310" endtime="20201030 18:29:24.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.309" endtime="20201030 18:29:24.837"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.860" endtime="20201030 18:29:24.881"></status>
</kw>
<msg timestamp="20201030 18:29:24.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.856" endtime="20201030 18:29:24.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.884" endtime="20201030 18:29:24.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.890" endtime="20201030 18:29:24.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.849" endtime="20201030 18:29:24.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.844" endtime="20201030 18:29:24.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.913" endtime="20201030 18:29:25.261"></status>
</kw>
<msg timestamp="20201030 18:29:25.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039530972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039637986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:24.910" endtime="20201030 18:29:25.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039530972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039637986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.270" endtime="20201030 18:29:25.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.288" endtime="20201030 18:29:25.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.903" endtime="20201030 18:29:25.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.898" endtime="20201030 18:29:25.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:25.305" level="INFO">${RESULT} = [{'diff': 0.0001070140000000025}, {'diff': 0.00010736100000000026}, {'diff': 0.00010723599999999667}, {'diff': 0.00010708300000000087}, {'diff': 0.00010729200000000189}, {'diff': 0.0001064029999999979...</msg>
<status status="PASS" starttime="20201030 18:29:25.297" endtime="20201030 18:29:25.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:25.315" level="INFO">${ACCURACY} = {'diff': [0.0001070140000000025, 0.00010736100000000026, 0.00010723599999999667, 0.00010708300000000087, 0.00010729200000000189, 0.00010640299999999797, 0.00010682000000000053, 0.00010669500000000387,...</msg>
<status status="PASS" starttime="20201030 18:29:25.307" endtime="20201030 18:29:25.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.326" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 18:29:25.324" endtime="20201030 18:29:25.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.332" level="INFO">VALUE: [0.0001070140000000025, 0.00010736100000000026, 0.00010723599999999667, 0.00010708300000000087, 0.00010729200000000189, 0.00010640299999999797, 0.00010682000000000053, 0.00010669500000000387, 0.0001065690000000008, 0.0001063889999999984, 0.00010713799999999968, 0.00010655500000000123, 0.00010730599999999452, 0.00010675000000000268, 0.00010740299999999897, 0.00010661099999999951, 0.00010691700000000498, 0.00010687499999999933, 0.00010722200000000404, 0.0001063339999999996, 0.00010663899999999865, 0.00010676400000000225, 0.00010679100000000191, 0.00010673699999999564, 0.00010726400000000275, 0.00010655500000000123, 0.00010649999999999549, 0.00010636099999999926, 0.00010691599999999857, 0.00010648600000000286, 0.00010641599999999807, 0.00010647200000000329, 0.00010663899999999865, 0.00010673599999999617, 0.00010655500000000123, 0.0001072360000000036, 0.00010641699999999754, 0.00010631900000000055, 0.00010700000000000293, 0.00010729199999999495, 0.00010655599999999377, 0.00010654100000000166, 0.0001069160000000055, 0.00010641699999999754, 0.00010736100000000026, 0.00010665200000000569, 0.00010638900000000534, 0.00010702800000000207, 0.00010733300000000112, 0.00010709700000000044]</msg>
<status status="PASS" starttime="20201030 18:29:25.329" endtime="20201030 18:29:25.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.317" endtime="20201030 18:29:25.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:25.345" endtime="20201030 18:29:25.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.341" endtime="20201030 18:29:25.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.338" endtime="20201030 18:29:25.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.840" endtime="20201030 18:29:25.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.838" endtime="20201030 18:29:25.370"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.393" endtime="20201030 18:29:25.414"></status>
</kw>
<msg timestamp="20201030 18:29:25.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.390" endtime="20201030 18:29:25.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.417" endtime="20201030 18:29:25.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.423" endtime="20201030 18:29:25.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.382" endtime="20201030 18:29:25.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.376" endtime="20201030 18:29:25.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.446" endtime="20201030 18:29:25.794"></status>
</kw>
<msg timestamp="20201030 18:29:25.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040017083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04012475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:25.443" endtime="20201030 18:29:25.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040017083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04012475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:25.803" endtime="20201030 18:29:25.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.821" endtime="20201030 18:29:25.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.436" endtime="20201030 18:29:25.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.431" endtime="20201030 18:29:25.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:25.838" level="INFO">${RESULT} = [{'diff': 0.00010766699999999879}, {'diff': 0.00010834800000000117}, {'diff': 0.00010794499999999818}, {'diff': 0.00010829199999999595}, {'diff': 0.00010795799999999828}, {'diff': 0.000108194999999998...</msg>
<status status="PASS" starttime="20201030 18:29:25.830" endtime="20201030 18:29:25.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:25.849" level="INFO">${ACCURACY} = {'diff': [0.00010766699999999879, 0.00010834800000000117, 0.00010794499999999818, 0.00010829199999999595, 0.00010795799999999828, 0.00010819499999999843, 0.00010786099999999382, 0.00010775000000000368...</msg>
<status status="PASS" starttime="20201030 18:29:25.840" endtime="20201030 18:29:25.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.860" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 18:29:25.857" endtime="20201030 18:29:25.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.865" level="INFO">VALUE: [0.00010766699999999879, 0.00010834800000000117, 0.00010794499999999818, 0.00010829199999999595, 0.00010795799999999828, 0.00010819499999999843, 0.00010786099999999382, 0.00010775000000000368, 0.00010831900000000255, 0.00010826399999999681, 0.00010818099999999886, 0.0001075690000000018, 0.00010772200000000454, 0.00010817999999999939, 0.00010830500000000298, 0.00010744399999999821, 0.00010747199999999735, 0.00010841600000000007, 0.00010820799999999853, 0.00010744499999999768, 0.00010767999999999889, 0.00010794399999999871, 0.00010743000000000558, 0.00010827800000000332, 0.00010811100000000101, 0.0001080690000000023, 0.00010802800000000307, 0.00010830599999999552, 0.00010802800000000307, 0.00010754100000000266, 0.00010750000000000343, 0.00010749999999999649, 0.00010805500000000273, 0.00010818099999999886, 0.00010777800000000282, 0.00010818099999999886, 0.00010752800000000257, 0.00010829200000000289, 0.00010763899999999965, 0.00010777799999999588, 0.00010741700000000548, 0.00010820799999999853, 0.00010798599999999742, 0.00010836100000000126, 0.0001076810000000053, 0.00010762500000000008, 0.00010802800000000307, 0.00010741699999999854, 0.00010811100000000101, 0.00010820799999999853]</msg>
<status status="PASS" starttime="20201030 18:29:25.862" endtime="20201030 18:29:25.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.851" endtime="20201030 18:29:25.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:25.877" endtime="20201030 18:29:25.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.873" endtime="20201030 18:29:25.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.871" endtime="20201030 18:29:25.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.372" endtime="20201030 18:29:25.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.371" endtime="20201030 18:29:25.903"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.925" endtime="20201030 18:29:25.946"></status>
</kw>
<msg timestamp="20201030 18:29:25.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.922" endtime="20201030 18:29:25.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.950" endtime="20201030 18:29:25.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.956" endtime="20201030 18:29:25.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.915" endtime="20201030 18:29:25.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.909" endtime="20201030 18:29:25.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.979" endtime="20201030 18:29:26.328"></status>
</kw>
<msg timestamp="20201030 18:29:26.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039907972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040017222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.976" endtime="20201030 18:29:26.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039907972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040017222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.337" endtime="20201030 18:29:26.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.356" endtime="20201030 18:29:26.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.969" endtime="20201030 18:29:26.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.964" endtime="20201030 18:29:26.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:26.373" level="INFO">${RESULT} = [{'diff': 0.00010924999999999824}, {'diff': 0.00010837500000000083}, {'diff': 0.00010926399999999781}, {'diff': 0.00010870900000000544}, {'diff': 0.00010916700000000029}, {'diff': 0.000109207999999999...</msg>
<status status="PASS" starttime="20201030 18:29:26.364" endtime="20201030 18:29:26.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:26.382" level="INFO">${ACCURACY} = {'diff': [0.00010924999999999824, 0.00010837500000000083, 0.00010926399999999781, 0.00010870900000000544, 0.00010916700000000029, 0.00010920799999999953, 0.0001090549999999968, 0.00010912500000000158,...</msg>
<status status="PASS" starttime="20201030 18:29:26.375" endtime="20201030 18:29:26.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.393" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 18:29:26.391" endtime="20201030 18:29:26.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.398" level="INFO">VALUE: [0.00010924999999999824, 0.00010837500000000083, 0.00010926399999999781, 0.00010870900000000544, 0.00010916700000000029, 0.00010920799999999953, 0.0001090549999999968, 0.00010912500000000158, 0.00010861100000000151, 0.00010862500000000108, 0.00010929199999999695, 0.00010905599999999627, 0.00010843099999999911, 0.00010915299999999378, 0.00010908299999999593, 0.00010848599999999792, 0.00010888800000000143, 0.00010852800000000357, 0.00010901399999999756, 0.00010862500000000108, 0.00010858400000000185, 0.00010851399999999706, 0.0001087769999999974, 0.00010899999999999799, 0.00010876399999999731, 0.00010872200000000554, 0.00010867999999999989, 0.00010926400000000475, 0.00010883300000000262, 0.00010919399999999996, 0.00010894399999999971, 0.00010856999999999534, 0.00010918000000000039, 0.00010883300000000262, 0.00010909700000000244, 0.00010844399999999921, 0.0001092219999999991, 0.00010902799999999713, 0.00010909700000000244, 0.00010907000000000278, 0.0001087219999999986, 0.00010879100000000391, 0.00010859800000000142, 0.0001092219999999991, 0.00010913900000000115, 0.00010851300000000452, 0.0001083890000000004, 0.0001092219999999991, 0.00010933300000000312, 0.0001090549999999968]</msg>
<status status="PASS" starttime="20201030 18:29:26.395" endtime="20201030 18:29:26.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.384" endtime="20201030 18:29:26.401"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:26.410" endtime="20201030 18:29:26.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.406" endtime="20201030 18:29:26.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.404" endtime="20201030 18:29:26.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.905" endtime="20201030 18:29:26.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.904" endtime="20201030 18:29:26.436"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.459" endtime="20201030 18:29:26.480"></status>
</kw>
<msg timestamp="20201030 18:29:26.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.455" endtime="20201030 18:29:26.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.483" endtime="20201030 18:29:26.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.489" endtime="20201030 18:29:26.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.448" endtime="20201030 18:29:26.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.442" endtime="20201030 18:29:26.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.516" endtime="20201030 18:29:26.852"></status>
</kw>
<msg timestamp="20201030 18:29:26.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041436972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041546958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.513" endtime="20201030 18:29:26.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041436972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041546958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.861" endtime="20201030 18:29:26.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.880" endtime="20201030 18:29:26.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.505" endtime="20201030 18:29:26.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.499" endtime="20201030 18:29:26.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:26.896" level="INFO">${RESULT} = [{'diff': 0.00010998599999999942}, {'diff': 0.00011031900000000455}, {'diff': 0.00010990300000000147}, {'diff': 0.00011006999999999684}, {'diff': 0.00010952700000000509}, {'diff': 0.000109610999999995...</msg>
<status status="PASS" starttime="20201030 18:29:26.888" endtime="20201030 18:29:26.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:26.905" level="INFO">${ACCURACY} = {'diff': [0.00010998599999999942, 0.00011031900000000455, 0.00010990300000000147, 0.00011006999999999684, 0.00010952700000000509, 0.00010961099999999557, 0.00010984799999999573, 0.00010943100000000011...</msg>
<status status="PASS" starttime="20201030 18:29:26.899" endtime="20201030 18:29:26.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.916" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 18:29:26.914" endtime="20201030 18:29:26.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.922" level="INFO">VALUE: [0.00010998599999999942, 0.00011031900000000455, 0.00010990300000000147, 0.00011006999999999684, 0.00010952700000000509, 0.00010961099999999557, 0.00010984799999999573, 0.00010943100000000011, 0.00010945899999999925, 0.00011011099999999607, 0.00010987500000000233, 0.00011007000000000378, 0.000109514000000005, 0.00010945900000000619, 0.00010993000000000114, 0.00010973599999999917, 0.00011030500000000498, 0.00010968000000000089, 0.00010949999999999849, 0.00010980499999999754, 0.00011019400000000096, 0.00010954200000000414, 0.00010958300000000337, 0.00010954200000000414, 0.0001094169999999936, 0.00011004099999999822, 0.0001097219999999996, 0.0001095419999999972, 0.00010951299999999858, 0.00011030499999999804, 0.00011026399999999881, 0.00010987500000000233, 0.00010965299999999428, 0.00011030499999999804, 0.00010963899999999471, 0.0001097219999999996, 0.00011031899999999761, 0.0001097219999999996, 0.0001098890000000019, 0.00010965300000000122, 0.00011030600000000446, 0.000109902000000002, 0.00011040300000000197, 0.00011029199999999795, 0.00011000000000000593, 0.00011020799999999359, 0.00010962500000000208, 0.00011019400000000096, 0.00010955599999999677, 0.00010945799999999978]</msg>
<status status="PASS" starttime="20201030 18:29:26.918" endtime="20201030 18:29:26.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.907" endtime="20201030 18:29:26.925"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:26.936" endtime="20201030 18:29:26.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.930" endtime="20201030 18:29:26.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.927" endtime="20201030 18:29:26.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.438" endtime="20201030 18:29:26.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.436" endtime="20201030 18:29:26.961"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.983" endtime="20201030 18:29:27.003"></status>
</kw>
<msg timestamp="20201030 18:29:27.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.980" endtime="20201030 18:29:27.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.007" endtime="20201030 18:29:27.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.013" endtime="20201030 18:29:27.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.973" endtime="20201030 18:29:27.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.967" endtime="20201030 18:29:27.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.036" endtime="20201030 18:29:27.370"></status>
</kw>
<msg timestamp="20201030 18:29:27.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039709889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039820569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.033" endtime="20201030 18:29:27.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039709889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039820569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.379" endtime="20201030 18:29:27.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.398" endtime="20201030 18:29:27.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.026" endtime="20201030 18:29:27.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.021" endtime="20201030 18:29:27.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:27.415" level="INFO">${RESULT} = [{'diff': 0.00011068000000000189}, {'diff': 0.00011070800000000103}, {'diff': 0.0001108890000000029}, {'diff': 0.0001109169999999951}, {'diff': 0.0001110969999999975}, {'diff': 0.00011126399999999981}...</msg>
<status status="PASS" starttime="20201030 18:29:27.406" endtime="20201030 18:29:27.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:27.425" level="INFO">${ACCURACY} = {'diff': [0.00011068000000000189, 0.00011070800000000103, 0.0001108890000000029, 0.0001109169999999951, 0.0001110969999999975, 0.00011126399999999981, 0.00011043100000000111, 0.00011084800000000367, 0...</msg>
<status status="PASS" starttime="20201030 18:29:27.417" endtime="20201030 18:29:27.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.436" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 18:29:27.434" endtime="20201030 18:29:27.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.442" level="INFO">VALUE: [0.00011068000000000189, 0.00011070800000000103, 0.0001108890000000029, 0.0001109169999999951, 0.0001110969999999975, 0.00011126399999999981, 0.00011043100000000111, 0.00011084800000000367, 0.00011051399999999906, 0.00011098600000000042, 0.00011129099999999947, 0.00011095800000000128, 0.00011059700000000394, 0.00011094500000000118, 0.00011084700000000419, 0.00011044400000000121, 0.00011112499999999664, 0.00011070800000000103, 0.00011127799999999938, 0.00011091599999999563, 0.00011073600000000017, 0.00011086099999999682, 0.00011099999999999999, 0.00011084699999999725, 0.00011055599999999777, 0.00011080599999999802, 0.00011086100000000376, 0.000110596999999997, 0.00011080499999999854, 0.00011084699999999725, 0.00011138899999999646, 0.00011106899999999836, 0.00011127799999999938, 0.00011097300000000032, 0.00011048599999999992, 0.00011047200000000035, 0.00011049999999999949, 0.0001108890000000029, 0.00011045900000000025, 0.00011073600000000017, 0.000111209000000001, 0.00011137499999999689, 0.00011049999999999949, 0.00011068100000000136, 0.00011138799999999699, 0.00011106899999999836, 0.00011141700000000254, 0.00011079099999999897, 0.00011066599999999538, 0.0001110969999999975]</msg>
<status status="PASS" starttime="20201030 18:29:27.439" endtime="20201030 18:29:27.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.427" endtime="20201030 18:29:27.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:27.454" endtime="20201030 18:29:27.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.450" endtime="20201030 18:29:27.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.447" endtime="20201030 18:29:27.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.963" endtime="20201030 18:29:27.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.962" endtime="20201030 18:29:27.479"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.502" endtime="20201030 18:29:27.522"></status>
</kw>
<msg timestamp="20201030 18:29:27.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.499" endtime="20201030 18:29:27.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.525" endtime="20201030 18:29:27.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.531" endtime="20201030 18:29:27.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.491" endtime="20201030 18:29:27.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.486" endtime="20201030 18:29:27.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.554" endtime="20201030 18:29:27.905"></status>
</kw>
<msg timestamp="20201030 18:29:27.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039516556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039628764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.551" endtime="20201030 18:29:27.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039516556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039628764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.915" endtime="20201030 18:29:27.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.933" endtime="20201030 18:29:27.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.544" endtime="20201030 18:29:27.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.539" endtime="20201030 18:29:27.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:27.951" level="INFO">${RESULT} = [{'diff': 0.00011220799999999559}, {'diff': 0.00011156899999999886}, {'diff': 0.0001118890000000039}, {'diff': 0.00011212499999999764}, {'diff': 0.00011227800000000038}, {'diff': 0.0001117500000000007...</msg>
<status status="PASS" starttime="20201030 18:29:27.942" endtime="20201030 18:29:27.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:27.965" level="INFO">${ACCURACY} = {'diff': [0.00011220799999999559, 0.00011156899999999886, 0.0001118890000000039, 0.00011212499999999764, 0.00011227800000000038, 0.00011175000000000074, 0.00011152799999999963, 0.00011163900000000365,...</msg>
<status status="PASS" starttime="20201030 18:29:27.953" endtime="20201030 18:29:27.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.977" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 18:29:27.974" endtime="20201030 18:29:27.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.982" level="INFO">VALUE: [0.00011220799999999559, 0.00011156899999999886, 0.0001118890000000039, 0.00011212499999999764, 0.00011227800000000038, 0.00011175000000000074, 0.00011152799999999963, 0.00011163900000000365, 0.0001120969999999985, 0.0001123890000000044, 0.00011234699999999875, 0.00011234699999999875, 0.00011156899999999886, 0.0001124169999999966, 0.00011165200000000375, 0.00011244399999999627, 0.00011236099999999832, 0.00011230500000000004, 0.00011231999999999909, 0.00011234699999999875, 0.00011245899999999531, 0.0001124169999999966, 0.00011223600000000167, 0.00011222300000000157, 0.00011218100000000286, 0.00011181999999999859, 0.00011230599999999952, 0.00011194500000000218, 0.00011240199999999756, 0.00011186099999999782, 0.000112209000000002, 0.00011223599999999473, 0.00011147200000000135, 0.00011170800000000203, 0.00011188799999999749, 0.00011145800000000178, 0.00011158299999999843, 0.00011195800000000228, 0.00011190299999999653, 0.0001118890000000039, 0.00011212499999999764, 0.000111902000000004, 0.00011184700000000519, 0.00011158300000000537, 0.00011208400000000535, 0.00011179200000000639, 0.000111596999999998, 0.00011147199999999441, 0.00011236099999999832, 0.00011168099999999542]</msg>
<status status="PASS" starttime="20201030 18:29:27.979" endtime="20201030 18:29:27.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.967" endtime="20201030 18:29:27.985"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:27.995" endtime="20201030 18:29:28.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.990" endtime="20201030 18:29:28.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.988" endtime="20201030 18:29:28.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.482" endtime="20201030 18:29:28.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.480" endtime="20201030 18:29:28.020"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.044" endtime="20201030 18:29:28.065"></status>
</kw>
<msg timestamp="20201030 18:29:28.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.040" endtime="20201030 18:29:28.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.069" endtime="20201030 18:29:28.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.075" endtime="20201030 18:29:28.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.033" endtime="20201030 18:29:28.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.027" endtime="20201030 18:29:28.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.099" endtime="20201030 18:29:28.450"></status>
</kw>
<msg timestamp="20201030 18:29:28.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04075975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040872431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:28.096" endtime="20201030 18:29:28.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04075975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040872431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:28.460" endtime="20201030 18:29:28.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.479" endtime="20201030 18:29:28.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.088" endtime="20201030 18:29:28.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.084" endtime="20201030 18:29:28.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:28.496" level="INFO">${RESULT} = [{'diff': 0.00011268100000000336}, {'diff': 0.00011272199999999566}, {'diff': 0.00011259799999999848}, {'diff': 0.000112902000000005}, {'diff': 0.00011300000000000199}, {'diff': 0.00011261099999999857...</msg>
<status status="PASS" starttime="20201030 18:29:28.487" endtime="20201030 18:29:28.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:28.505" level="INFO">${ACCURACY} = {'diff': [0.00011268100000000336, 0.00011272199999999566, 0.00011259799999999848, 0.000112902000000005, 0.00011300000000000199, 0.00011261099999999857, 0.00011343099999999717, 0.00011276300000000183, ...</msg>
<status status="PASS" starttime="20201030 18:29:28.498" endtime="20201030 18:29:28.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.516" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 18:29:28.514" endtime="20201030 18:29:28.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.522" level="INFO">VALUE: [0.00011268100000000336, 0.00011272199999999566, 0.00011259799999999848, 0.000112902000000005, 0.00011300000000000199, 0.00011261099999999857, 0.00011343099999999717, 0.00011276300000000183, 0.00011293000000000414, 0.00011275000000000174, 0.00011279200000000045, 0.00011251300000000158, 0.00011330500000000104, 0.00011323599999999573, 0.00011318100000000386, 0.0001129169999999971, 0.00011247300000000182, 0.00011330600000000052, 0.00011244399999999627, 0.00011327800000000138, 0.0001125550000000003, 0.00011263899999999771, 0.00011313899999999821, 0.00011244500000000268, 0.00011263899999999771, 0.00011255599999999977, 0.0001125550000000003, 0.00011297200000000285, 0.00011329100000000147, 0.00011327800000000138, 0.00011311200000000549, 0.0001133749999999989, 0.00011338899999999846, 0.000112596999999999, 0.00011250000000000149, 0.00011330599999999358, 0.00011277800000000088, 0.00011259700000000594, 0.00011247199999999541, 0.00011338899999999846, 0.0001125550000000003, 0.00011323600000000267, 0.00011344400000000421, 0.00011245800000000278, 0.00011263899999999771, 0.00011272299999999513, 0.00011325000000000224, 0.00011319399999999702, 0.00011319400000000396, 0.00011294399999999677]</msg>
<status status="PASS" starttime="20201030 18:29:28.519" endtime="20201030 18:29:28.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.507" endtime="20201030 18:29:28.525"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:28.535" endtime="20201030 18:29:28.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.530" endtime="20201030 18:29:28.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.528" endtime="20201030 18:29:28.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.023" endtime="20201030 18:29:28.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.021" endtime="20201030 18:29:28.560"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.583" endtime="20201030 18:29:28.606"></status>
</kw>
<msg timestamp="20201030 18:29:28.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.580" endtime="20201030 18:29:28.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.610" endtime="20201030 18:29:28.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.616" endtime="20201030 18:29:28.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.572" endtime="20201030 18:29:28.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.566" endtime="20201030 18:29:28.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.640" endtime="20201030 18:29:28.989"></status>
</kw>
<msg timestamp="20201030 18:29:28.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041857764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041972153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:28.636" endtime="20201030 18:29:28.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041857764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041972153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:28.999" endtime="20201030 18:29:29.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.017" endtime="20201030 18:29:29.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.629" endtime="20201030 18:29:29.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.624" endtime="20201030 18:29:29.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:29.035" level="INFO">${RESULT} = [{'diff': 0.00011438899999999946}, {'diff': 0.00011441700000000554}, {'diff': 0.00011380600000000102}, {'diff': 0.00011429100000000247}, {'diff': 0.00011412499999999964}, {'diff': 0.000113763999999995...</msg>
<status status="PASS" starttime="20201030 18:29:29.026" endtime="20201030 18:29:29.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:29.044" level="INFO">${ACCURACY} = {'diff': [0.00011438899999999946, 0.00011441700000000554, 0.00011380600000000102, 0.00011429100000000247, 0.00011412499999999964, 0.00011376399999999537, 0.00011433300000000118, 0.0001137770000000024,...</msg>
<status status="PASS" starttime="20201030 18:29:29.037" endtime="20201030 18:29:29.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.055" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 18:29:29.053" endtime="20201030 18:29:29.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.061" level="INFO">VALUE: [0.00011438899999999946, 0.00011441700000000554, 0.00011380600000000102, 0.00011429100000000247, 0.00011412499999999964, 0.00011376399999999537, 0.00011433300000000118, 0.0001137770000000024, 0.00011412500000000658, 0.00011427800000000238, 0.00011436100000000032, 0.00011348599999999598, 0.00011441599999999913, 0.00011441599999999913, 0.00011436099999999338, 0.00011383400000000016, 0.000114209000000004, 0.0001142369999999962, 0.00011443000000000564, 0.00011390299999999853, 0.00011395899999999681, 0.00011350000000000249, 0.00011434700000000075, 0.0001134299999999977, 0.00011416599999999888, 0.00011362499999999914, 0.00011416700000000529, 0.00011398600000000342, 0.00011422199999999716, 0.00011399999999999605, 0.00011347200000000335, 0.00011404199999999476, 0.00011369400000000446, 0.0001143749999999999, 0.00011433300000000118, 0.0001144169999999986, 0.00011402800000000213, 0.00011351399999999512, 0.00011384700000000025, 0.00011408400000000041, 0.00011380599999999408, 0.0001143749999999999, 0.00011438899999999946, 0.00011354100000000172, 0.00011423600000000367, 0.00011422199999999716, 0.0001140420000000017, 0.00011384700000000025, 0.00011395800000000428, 0.00011386099999999982]</msg>
<status status="PASS" starttime="20201030 18:29:29.058" endtime="20201030 18:29:29.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.046" endtime="20201030 18:29:29.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:29.075" endtime="20201030 18:29:29.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.069" endtime="20201030 18:29:29.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.066" endtime="20201030 18:29:29.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.562" endtime="20201030 18:29:29.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.561" endtime="20201030 18:29:29.100"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.123" endtime="20201030 18:29:29.145"></status>
</kw>
<msg timestamp="20201030 18:29:29.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.120" endtime="20201030 18:29:29.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.149" endtime="20201030 18:29:29.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.155" endtime="20201030 18:29:29.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.113" endtime="20201030 18:29:29.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.107" endtime="20201030 18:29:29.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.179" endtime="20201030 18:29:29.529"></status>
</kw>
<msg timestamp="20201030 18:29:29.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040367667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040482139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.176" endtime="20201030 18:29:29.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040367667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040482139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.538" endtime="20201030 18:29:29.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.557" endtime="20201030 18:29:29.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.168" endtime="20201030 18:29:29.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.163" endtime="20201030 18:29:29.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:29.574" level="INFO">${RESULT} = [{'diff': 0.00011447199999999741}, {'diff': 0.00011518099999999892}, {'diff': 0.00011455600000000177}, {'diff': 0.00011449999999999655}, {'diff': 0.00011458400000000091}, {'diff': 0.000114652999999999...</msg>
<status status="PASS" starttime="20201030 18:29:29.565" endtime="20201030 18:29:29.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:29.585" level="INFO">${ACCURACY} = {'diff': [0.00011447199999999741, 0.00011518099999999892, 0.00011455600000000177, 0.00011449999999999655, 0.00011458400000000091, 0.00011465299999999928, 0.00011508400000000141, 0.00011512500000000064...</msg>
<status status="PASS" starttime="20201030 18:29:29.576" endtime="20201030 18:29:29.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.596" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 18:29:29.594" endtime="20201030 18:29:29.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.602" level="INFO">VALUE: [0.00011447199999999741, 0.00011518099999999892, 0.00011455600000000177, 0.00011449999999999655, 0.00011458400000000091, 0.00011465299999999928, 0.00011508400000000141, 0.00011512500000000064, 0.00011465299999999928, 0.00011473600000000417, 0.00011481900000000211, 0.0001147499999999968, 0.00011452700000000315, 0.00011448599999999698, 0.00011530500000000304, 0.00011513900000000021, 0.00011545899999999831, 0.00011531999999999515, 0.00011447199999999741, 0.00011534700000000175, 0.00011481900000000211, 0.00011523599999999773, 0.0001153750000000009, 0.00011543000000000664, 0.00011497199999999791, 0.00011534800000000123, 0.00011512500000000064, 0.00011504100000000322, 0.00011459699999999406, 0.00011511100000000107, 0.00011445800000000478, 0.000114597000000001, 0.00011477699999999647, 0.00011444400000000521, 0.00011445799999999784, 0.00011537499999999395, 0.00011475000000000374, 0.00011473599999999723, 0.00011458400000000091, 0.00011519400000000596, 0.00011544499999999874, 0.00011509800000000098, 0.00011520899999999806, 0.0001149169999999991, 0.00011497199999999791, 0.00011518099999999892, 0.00011527800000000338, 0.00011447199999999741, 0.00011513900000000021, 0.00011488899999999996]</msg>
<status status="PASS" starttime="20201030 18:29:29.598" endtime="20201030 18:29:29.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.587" endtime="20201030 18:29:29.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:29.614" endtime="20201030 18:29:29.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.610" endtime="20201030 18:29:29.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.607" endtime="20201030 18:29:29.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.103" endtime="20201030 18:29:29.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.101" endtime="20201030 18:29:29.640"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.663" endtime="20201030 18:29:29.685"></status>
</kw>
<msg timestamp="20201030 18:29:29.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.659" endtime="20201030 18:29:29.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.688" endtime="20201030 18:29:29.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.695" endtime="20201030 18:29:29.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.652" endtime="20201030 18:29:29.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.646" endtime="20201030 18:29:29.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.721" endtime="20201030 18:29:30.069"></status>
</kw>
<msg timestamp="20201030 18:29:30.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040587486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040703556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.717" endtime="20201030 18:29:30.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040587486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040703556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.078" endtime="20201030 18:29:30.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.097" endtime="20201030 18:29:30.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.709" endtime="20201030 18:29:30.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.704" endtime="20201030 18:29:30.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:30.115" level="INFO">${RESULT} = [{'diff': 0.00011607000000000284}, {'diff': 0.00011566600000000038}, {'diff': 0.00011548600000000492}, {'diff': 0.00011597299999999838}, {'diff': 0.00011554100000000372}, {'diff': 0.000115429999999999...</msg>
<status status="PASS" starttime="20201030 18:29:30.106" endtime="20201030 18:29:30.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:30.126" level="INFO">${ACCURACY} = {'diff': [0.00011607000000000284, 0.00011566600000000038, 0.00011548600000000492, 0.00011597299999999838, 0.00011554100000000372, 0.0001154299999999997, 0.00011594399999999977, 0.00011579199999999651,...</msg>
<status status="PASS" starttime="20201030 18:29:30.117" endtime="20201030 18:29:30.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.137" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 18:29:30.135" endtime="20201030 18:29:30.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.142" level="INFO">VALUE: [0.00011607000000000284, 0.00011566600000000038, 0.00011548600000000492, 0.00011597299999999838, 0.00011554100000000372, 0.0001154299999999997, 0.00011594399999999977, 0.00011579199999999651, 0.00011580600000000302, 0.00011630500000000404, 0.0001157369999999977, 0.00011586100000000182, 0.0001160699999999959, 0.00011597199999999891, 0.00011608300000000293, 0.0001156249999999942, 0.00011561100000000157, 0.00011638900000000146, 0.00011573599999999823, 0.00011558400000000191, 0.00011620799999999959, 0.00011588900000000096, 0.0001158049999999966, 0.0001164170000000006, 0.00011619500000000643, 0.00011633299999999624, 0.00011555599999999583, 0.00011634699999999581, 0.00011544399999999927, 0.00011616600000000088, 0.0001163750000000019, 0.00011594499999999924, 0.00011630600000000352, 0.00011597199999999891, 0.00011552799999999669, 0.00011558300000000243, 0.00011586100000000182, 0.00011616600000000088, 0.00011555599999999583, 0.00011554100000000372, 0.00011626400000000481, 0.00011588900000000096, 0.00011597199999999891, 0.00011565300000000028, 0.00011599999999999805, 0.00011633300000000318, 0.00011590300000000053, 0.00011581899999999618, 0.00011611099999999513, 0.00011648599999999898]</msg>
<status status="PASS" starttime="20201030 18:29:30.139" endtime="20201030 18:29:30.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.128" endtime="20201030 18:29:30.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:30.155" endtime="20201030 18:29:30.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.151" endtime="20201030 18:29:30.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.148" endtime="20201030 18:29:30.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.642" endtime="20201030 18:29:30.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.641" endtime="20201030 18:29:30.180"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.204" endtime="20201030 18:29:30.226"></status>
</kw>
<msg timestamp="20201030 18:29:30.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.200" endtime="20201030 18:29:30.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.229" endtime="20201030 18:29:30.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.236" endtime="20201030 18:29:30.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.193" endtime="20201030 18:29:30.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.187" endtime="20201030 18:29:30.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.260" endtime="20201030 18:29:30.610"></status>
</kw>
<msg timestamp="20201030 18:29:30.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040567194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040684389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.256" endtime="20201030 18:29:30.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040567194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040684389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.620" endtime="20201030 18:29:30.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.639" endtime="20201030 18:29:30.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.249" endtime="20201030 18:29:30.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.244" endtime="20201030 18:29:30.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:30.657" level="INFO">${RESULT} = [{'diff': 0.00011719500000000049}, {'diff': 0.00011722299999999963}, {'diff': 0.00011679099999999804}, {'diff': 0.00011695899999999981}, {'diff': 0.0001167090000000065}, {'diff': 0.0001170560000000042...</msg>
<status status="PASS" starttime="20201030 18:29:30.648" endtime="20201030 18:29:30.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:30.666" level="INFO">${ACCURACY} = {'diff': [0.00011719500000000049, 0.00011722299999999963, 0.00011679099999999804, 0.00011695899999999981, 0.0001167090000000065, 0.00011705600000000427, 0.00011711100000000307, 0.00011663900000000171,...</msg>
<status status="PASS" starttime="20201030 18:29:30.659" endtime="20201030 18:29:30.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.677" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 18:29:30.675" endtime="20201030 18:29:30.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.683" level="INFO">VALUE: [0.00011719500000000049, 0.00011722299999999963, 0.00011679099999999804, 0.00011695899999999981, 0.0001167090000000065, 0.00011705600000000427, 0.00011711100000000307, 0.00011663900000000171, 0.00011690200000000206, 0.00011662500000000214, 0.0001167499999999988, 0.0001165829999999965, 0.0001173620000000028, 0.00011652799999999769, 0.00011732000000000409, 0.00011652799999999769, 0.00011695899999999981, 0.00011694400000000077, 0.00011731999999999715, 0.00011686099999999588, 0.00011683400000000316, 0.00011701399999999862, 0.00011711200000000255, 0.00011740300000000203, 0.00011670899999999956, 0.00011649999999999855, 0.00011709699999999656, 0.00011748599999999998, 0.00011665299999999434, 0.00011704199999999776, 0.0001168750000000024, 0.00011708300000000393, 0.00011668100000000042, 0.00011677799999999794, 0.00011666700000000085, 0.00011719500000000049, 0.00011643100000000017, 0.00011663900000000171, 0.00011727699999999897, 0.00011665299999999434, 0.00011661099999999563, 0.00011723599999999973, 0.00011715299999999484, 0.0001173750000000029, 0.0001174579999999939, 0.00011716600000000188, 0.00011734700000000375, 0.00011744500000000074, 0.0001170420000000047, 0.00011745800000000084]</msg>
<status status="PASS" starttime="20201030 18:29:30.680" endtime="20201030 18:29:30.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.668" endtime="20201030 18:29:30.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:30.695" endtime="20201030 18:29:30.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.691" endtime="20201030 18:29:30.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.689" endtime="20201030 18:29:30.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.183" endtime="20201030 18:29:30.721"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.181" endtime="20201030 18:29:30.721"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.745" endtime="20201030 18:29:30.770"></status>
</kw>
<msg timestamp="20201030 18:29:30.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.742" endtime="20201030 18:29:30.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.773" endtime="20201030 18:29:30.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.780" endtime="20201030 18:29:30.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.734" endtime="20201030 18:29:30.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.728" endtime="20201030 18:29:30.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.803" endtime="20201030 18:29:31.154"></status>
</kw>
<msg timestamp="20201030 18:29:31.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043958986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044077486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.800" endtime="20201030 18:29:31.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043958986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044077486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:31.164" endtime="20201030 18:29:31.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.183" endtime="20201030 18:29:31.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.793" endtime="20201030 18:29:31.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.788" endtime="20201030 18:29:31.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:31.200" level="INFO">${RESULT} = [{'diff': 0.00011850000000000055}, {'diff': 0.00011815299999999584}, {'diff': 0.00011794400000000177}, {'diff': 0.00011768100000000142}, {'diff': 0.00011827699999999997}, {'diff': 0.000117763999999999...</msg>
<status status="PASS" starttime="20201030 18:29:31.191" endtime="20201030 18:29:31.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:31.209" level="INFO">${ACCURACY} = {'diff': [0.00011850000000000055, 0.00011815299999999584, 0.00011794400000000177, 0.00011768100000000142, 0.00011827699999999997, 0.00011776399999999937, 0.00011831899999999868, 0.00011811100000000407...</msg>
<status status="PASS" starttime="20201030 18:29:31.202" endtime="20201030 18:29:31.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.220" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 18:29:31.218" endtime="20201030 18:29:31.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.226" level="INFO">VALUE: [0.00011850000000000055, 0.00011815299999999584, 0.00011794400000000177, 0.00011768100000000142, 0.00011827699999999997, 0.00011776399999999937, 0.00011831899999999868, 0.00011811100000000407, 0.00011765300000000228, 0.0001178750000000034, 0.0001180970000000045, 0.00011800000000000005, 0.00011829099999999954, 0.00011804199999999876, 0.0001175829999999975, 0.00011847200000000141, 0.00011769400000000152, 0.00011815299999999584, 0.00011829099999999954, 0.00011827799999999944, 0.00011768000000000195, 0.00011794500000000124, 0.00011802799999999919, 0.00011848599999999404, 0.00011833300000000518, 0.00011820899999999412, 0.00011805499999999886, 0.00011831999999999815, 0.00011783399999999722, 0.00011819499999999455, 0.00011819400000000202, 0.0001183049999999991, 0.0001181249999999967, 0.00011840300000000303, 0.00011815300000000278, 0.00011766700000000185, 0.00011786100000000382, 0.00011823599999999379, 0.00011830600000000552, 0.00011766700000000185, 0.00011838899999999652, 0.00011798600000000048, 0.00011793100000000167, 0.0001175829999999975, 0.00011754099999999879, 0.00011791599999999569, 0.00011749999999999955, 0.00011779200000000545, 0.00011801399999999962, 0.00011811100000000407]</msg>
<status status="PASS" starttime="20201030 18:29:31.223" endtime="20201030 18:29:31.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.211" endtime="20201030 18:29:31.229"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:31.240" endtime="20201030 18:29:31.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.234" endtime="20201030 18:29:31.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.232" endtime="20201030 18:29:31.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.723" endtime="20201030 18:29:31.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.722" endtime="20201030 18:29:31.266"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.289" endtime="20201030 18:29:31.312"></status>
</kw>
<msg timestamp="20201030 18:29:31.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.286" endtime="20201030 18:29:31.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.316" endtime="20201030 18:29:31.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.322" endtime="20201030 18:29:31.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.278" endtime="20201030 18:29:31.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.272" endtime="20201030 18:29:31.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.346" endtime="20201030 18:29:31.705"></status>
</kw>
<msg timestamp="20201030 18:29:31.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040709903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040828986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:31.343" endtime="20201030 18:29:31.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040709903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040828986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:31.715" endtime="20201030 18:29:31.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.734" endtime="20201030 18:29:31.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.335" endtime="20201030 18:29:31.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.331" endtime="20201030 18:29:31.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:31.751" level="INFO">${RESULT} = [{'diff': 0.000119082999999999}, {'diff': 0.00011904100000000029}, {'diff': 0.00011923600000000173}, {'diff': 0.00011940300000000403}, {'diff': 0.00011883399999999822}, {'diff': 0.00011855499999999936...</msg>
<status status="PASS" starttime="20201030 18:29:31.743" endtime="20201030 18:29:31.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:31.762" level="INFO">${ACCURACY} = {'diff': [0.000119082999999999, 0.00011904100000000029, 0.00011923600000000173, 0.00011940300000000403, 0.00011883399999999822, 0.00011855499999999936, 0.00011894400000000277, 0.00011900000000000105, ...</msg>
<status status="PASS" starttime="20201030 18:29:31.754" endtime="20201030 18:29:31.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.774" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 18:29:31.772" endtime="20201030 18:29:31.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.780" level="INFO">VALUE: [0.000119082999999999, 0.00011904100000000029, 0.00011923600000000173, 0.00011940300000000403, 0.00011883399999999822, 0.00011855499999999936, 0.00011894400000000277, 0.00011900000000000105, 0.00011919400000000302, 0.0001194449999999958, 0.00011862500000000414, 0.00011937499999999795, 0.00011932000000000609, 0.0001189579999999954, 0.00011891699999999616, 0.00011897200000000191, 0.00011916700000000335, 0.00011855599999999883, 0.00011850000000000055, 0.00011862500000000414, 0.00011848600000000098, 0.00011883299999999875, 0.00011898600000000148, 0.0001189449999999953, 0.00011898600000000148, 0.00011936099999999839, 0.00011865200000000381, 0.00011886099999999789, 0.0001193050000000001, 0.0001185829999999985, 0.00011927699999999403, 0.00011933399999999872, 0.0001188049999999996, 0.00011847200000000141, 0.00011850000000000055, 0.00011848599999999404, 0.00011888899999999702, 0.00011936100000000532, 0.00011865299999999634, 0.0001186379999999973, 0.00011887499999999745, 0.00011870900000000156, 0.00011897200000000191, 0.00011869399999999558, 0.00011923600000000173, 0.00011852799999999969, 0.00011890300000000353, 0.00011877799999999994, 0.00011937499999999795, 0.00011863899999999677]</msg>
<status status="PASS" starttime="20201030 18:29:31.777" endtime="20201030 18:29:31.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.764" endtime="20201030 18:29:31.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:31.793" endtime="20201030 18:29:31.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.789" endtime="20201030 18:29:31.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.786" endtime="20201030 18:29:31.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.268" endtime="20201030 18:29:31.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.267" endtime="20201030 18:29:31.819"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.842" endtime="20201030 18:29:31.866"></status>
</kw>
<msg timestamp="20201030 18:29:31.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.839" endtime="20201030 18:29:31.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.869" endtime="20201030 18:29:31.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.875" endtime="20201030 18:29:31.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.831" endtime="20201030 18:29:31.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.825" endtime="20201030 18:29:31.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.899" endtime="20201030 18:29:32.259"></status>
</kw>
<msg timestamp="20201030 18:29:32.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040757569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040877708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:31.896" endtime="20201030 18:29:32.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040757569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040877708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:32.269" endtime="20201030 18:29:32.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.287" endtime="20201030 18:29:32.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.889" endtime="20201030 18:29:32.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.884" endtime="20201030 18:29:32.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:32.305" level="INFO">${RESULT} = [{'diff': 0.00012013899999999827}, {'diff': 0.00011955500000000036}, {'diff': 0.00012019499999999655}, {'diff': 0.00011965300000000428}, {'diff': 0.00011983299999999975}, {'diff': 0.000120292000000001...</msg>
<status status="PASS" starttime="20201030 18:29:32.296" endtime="20201030 18:29:32.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:32.316" level="INFO">${ACCURACY} = {'diff': [0.00012013899999999827, 0.00011955500000000036, 0.00012019499999999655, 0.00011965300000000428, 0.00011983299999999975, 0.00012029200000000101, 0.00012036099999999939, 0.00011956899999999993...</msg>
<status status="PASS" starttime="20201030 18:29:32.307" endtime="20201030 18:29:32.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.327" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 18:29:32.325" endtime="20201030 18:29:32.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.332" level="INFO">VALUE: [0.00012013899999999827, 0.00011955500000000036, 0.00012019499999999655, 0.00011965300000000428, 0.00011983299999999975, 0.00012029200000000101, 0.00012036099999999939, 0.00011956899999999993, 0.00011970899999999562, 0.0001200699999999999, 0.0001199449999999963, 0.00011986099999999889, 0.00012042999999999776, 0.00012001399999999468, 0.00012019400000000402, 0.00011952800000000069, 0.0001202500000000023, 0.00012004199999999382, 0.00011956899999999993, 0.00012005600000000033, 0.00011954100000000079, 0.0001200699999999999, 0.0001204449999999968, 0.00011976400000000137, 0.00011947200000000241, 0.00012036100000000632, 0.00012004200000000076, 0.00012004200000000076, 0.00011991699999999716, 0.00012031900000000068, 0.00011983399999999922, 0.00012048600000000298, 0.00011950000000000155, 0.00011961099999999864, 0.00012015299999999784, 0.00011986099999999889, 0.00011981999999999965, 0.0001204170000000046, 0.00012005600000000033, 0.00011970900000000256, 0.00012043100000000417, 0.00011999999999999511, 0.00012037499999999896, 0.00012011099999999914, 0.00012033300000000025, 0.00012051400000000212, 0.00011988899999999802, 0.00011950000000000155, 0.00011963800000000524, 0.0001199449999999963]</msg>
<status status="PASS" starttime="20201030 18:29:32.329" endtime="20201030 18:29:32.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.318" endtime="20201030 18:29:32.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:32.345" endtime="20201030 18:29:32.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.341" endtime="20201030 18:29:32.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.338" endtime="20201030 18:29:32.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.821" endtime="20201030 18:29:32.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.820" endtime="20201030 18:29:32.371"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.400" endtime="20201030 18:29:32.423"></status>
</kw>
<msg timestamp="20201030 18:29:32.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.394" endtime="20201030 18:29:32.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.427" endtime="20201030 18:29:32.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.435" endtime="20201030 18:29:32.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.384" endtime="20201030 18:29:32.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.377" endtime="20201030 18:29:32.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.465" endtime="20201030 18:29:32.806"></status>
</kw>
<msg timestamp="20201030 18:29:32.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047611542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047732458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:32.462" endtime="20201030 18:29:32.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047611542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047732458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:32.815" endtime="20201030 18:29:32.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.834" endtime="20201030 18:29:32.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.454" endtime="20201030 18:29:32.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.449" endtime="20201030 18:29:32.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:32.851" level="INFO">${RESULT} = [{'diff': 0.00012091599999999869}, {'diff': 0.00012113899999999928}, {'diff': 0.0001206249999999992}, {'diff': 0.00012117999999999851}, {'diff': 0.000121083000000001}, {'diff': 0.00012120900000000406}...</msg>
<status status="PASS" starttime="20201030 18:29:32.843" endtime="20201030 18:29:32.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:32.860" level="INFO">${ACCURACY} = {'diff': [0.00012091599999999869, 0.00012113899999999928, 0.0001206249999999992, 0.00012117999999999851, 0.000121083000000001, 0.00012120900000000406, 0.00012129199999999507, 0.00012118099999999798, 0...</msg>
<status status="PASS" starttime="20201030 18:29:32.853" endtime="20201030 18:29:32.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.871" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 18:29:32.869" endtime="20201030 18:29:32.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.876" level="INFO">VALUE: [0.00012091599999999869, 0.00012113899999999928, 0.0001206249999999992, 0.00012117999999999851, 0.000121083000000001, 0.00012120900000000406, 0.00012129199999999507, 0.00012118099999999798, 0.00012129200000000201, 0.0001207500000000028, 0.00012134700000000082, 0.00012136099999999345, 0.00012123600000000373, 0.00012056900000000093, 0.00012120899999999712, 0.00012079199999999457, 0.00012127700000000297, 0.00012137499999999996, 0.00012051400000000212, 0.00012061100000000657, 0.0001214029999999991, 0.00012137499999999996, 0.00012069499999999705, 0.00012113899999999928, 0.00012048600000000298, 0.00012055500000000136, 0.00012081900000000118, 0.00012068099999999748, 0.00012091599999999869, 0.00012054200000000126, 0.00012106900000000143, 0.00012116699999999841, 0.00012088900000000596, 0.00012109700000000057, 0.00012094399999999783, 0.0001209029999999986, 0.00012054200000000126, 0.00012148600000000398, 0.00012134700000000082, 0.0001205830000000005, 0.00012051400000000212, 0.00012054100000000179, 0.00012124999999999636, 0.00012123599999999679, 0.00012143100000000517, 0.0001213050000000021, 0.00012080599999999414, 0.00012090199999999912, 0.00012047199999999647, 0.0001211249999999997]</msg>
<status status="PASS" starttime="20201030 18:29:32.873" endtime="20201030 18:29:32.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.862" endtime="20201030 18:29:32.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:32.889" endtime="20201030 18:29:32.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.884" endtime="20201030 18:29:32.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.882" endtime="20201030 18:29:32.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.373" endtime="20201030 18:29:32.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.372" endtime="20201030 18:29:32.914"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.937" endtime="20201030 18:29:32.964"></status>
</kw>
<msg timestamp="20201030 18:29:32.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.934" endtime="20201030 18:29:32.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.967" endtime="20201030 18:29:32.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.974" endtime="20201030 18:29:32.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.926" endtime="20201030 18:29:32.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.921" endtime="20201030 18:29:32.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.997" endtime="20201030 18:29:33.345"></status>
</kw>
<msg timestamp="20201030 18:29:33.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04534275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045464403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:32.994" endtime="20201030 18:29:33.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04534275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045464403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:33.355" endtime="20201030 18:29:33.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.373" endtime="20201030 18:29:33.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.987" endtime="20201030 18:29:33.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.982" endtime="20201030 18:29:33.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:33.390" level="INFO">${RESULT} = [{'diff': 0.00012165299999999934}, {'diff': 0.00012199999999999711}, {'diff': 0.0001222359999999978}, {'diff': 0.00012213900000000028}, {'diff': 0.00012211100000000114}, {'diff': 0.0001222639999999969...</msg>
<status status="PASS" starttime="20201030 18:29:33.381" endtime="20201030 18:29:33.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:33.399" level="INFO">${ACCURACY} = {'diff': [0.00012165299999999934, 0.00012199999999999711, 0.0001222359999999978, 0.00012213900000000028, 0.00012211100000000114, 0.00012226399999999693, 0.00012184800000000079, 0.00012219399999999908,...</msg>
<status status="PASS" starttime="20201030 18:29:33.392" endtime="20201030 18:29:33.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.410" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 18:29:33.407" endtime="20201030 18:29:33.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.415" level="INFO">VALUE: [0.00012165299999999934, 0.00012199999999999711, 0.0001222359999999978, 0.00012213900000000028, 0.00012211100000000114, 0.00012226399999999693, 0.00012184800000000079, 0.00012219399999999908, 0.0001217500000000038, 0.0001222500000000043, 0.00012222199999999822, 0.00012161100000000064, 0.00012152800000000269, 0.00012205599999999539, 0.00012159700000000107, 0.0001222909999999966, 0.00012183300000000175, 0.00012215299999999985, 0.0001215700000000014, 0.00012158400000000097, 0.00012216699999999941, 0.00012222199999999822, 0.0001224449999999988, 0.00012211100000000114, 0.00012238800000000105, 0.00012219499999999855, 0.00012183300000000175, 0.00012198699999999701, 0.00012216699999999941, 0.00012165299999999934, 0.00012248600000000498, 0.00012216700000000635, 0.00012216699999999941, 0.0001221250000000007, 0.00012226399999999693, 0.00012201399999999668, 0.00012198599999999754, 0.00012241699999999966, 0.00012202800000000319, 0.00012144500000000474, 0.00012161200000000011, 0.00012158400000000097, 0.00012179100000000304, 0.00012152700000000322, 0.0001223329999999953, 0.00012163899999999978, 0.0001222779999999965, 0.00012188900000000003, 0.00012243100000000617, 0.0001223199999999952]</msg>
<status status="PASS" starttime="20201030 18:29:33.412" endtime="20201030 18:29:33.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.401" endtime="20201030 18:29:33.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:33.429" endtime="20201030 18:29:33.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.423" endtime="20201030 18:29:33.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.421" endtime="20201030 18:29:33.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.916" endtime="20201030 18:29:33.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.915" endtime="20201030 18:29:33.454"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.476" endtime="20201030 18:29:33.498"></status>
</kw>
<msg timestamp="20201030 18:29:33.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:33.473" endtime="20201030 18:29:33.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:33.502" endtime="20201030 18:29:33.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.508" endtime="20201030 18:29:33.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.466" endtime="20201030 18:29:33.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.460" endtime="20201030 18:29:33.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.531" endtime="20201030 18:29:33.881"></status>
</kw>
<msg timestamp="20201030 18:29:33.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039864694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039987208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:33.528" endtime="20201030 18:29:33.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039864694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039987208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:33.891" endtime="20201030 18:29:33.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.909" endtime="20201030 18:29:33.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.521" endtime="20201030 18:29:33.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.516" endtime="20201030 18:29:33.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:33.928" level="INFO">${RESULT} = [{'diff': 0.00012251400000000412}, {'diff': 0.00012313900000000128}, {'diff': 0.00012288899999999409}, {'diff': 0.00012288900000000103}, {'diff': 0.0001234160000000012}, {'diff': 0.0001230690000000034...</msg>
<status status="PASS" starttime="20201030 18:29:33.919" endtime="20201030 18:29:33.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:33.938" level="INFO">${ACCURACY} = {'diff': [0.00012251400000000412, 0.00012313900000000128, 0.00012288899999999409, 0.00012288900000000103, 0.0001234160000000012, 0.00012306900000000343, 0.00012309700000000257, 0.0001231250000000017, ...</msg>
<status status="PASS" starttime="20201030 18:29:33.930" endtime="20201030 18:29:33.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.949" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 18:29:33.947" endtime="20201030 18:29:33.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.955" level="INFO">VALUE: [0.00012251400000000412, 0.00012313900000000128, 0.00012288899999999409, 0.00012288900000000103, 0.0001234160000000012, 0.00012306900000000343, 0.00012309700000000257, 0.0001231250000000017, 0.0001231250000000017, 0.00012256900000000293, 0.00012287500000000146, 0.00012319400000000008, 0.0001232779999999975, 0.000122777999999997, 0.00012322199999999922, 0.00012351400000000512, 0.00012341700000000067, 0.00012276399999999743, 0.00012308299999999606, 0.00012331899999999674, 0.0001234160000000012, 0.00012300000000000505, 0.00012290200000000112, 0.00012273600000000523, 0.00012284699999999538, 0.00012313899999999434, 0.0001228050000000036, 0.00012341700000000067, 0.00012284700000000232, 0.00012295899999999887, 0.00012298599999999854, 0.00012311100000000214, 0.00012336100000000239, 0.00012337500000000196, 0.00012337499999999502, 0.00012265300000000035, 0.00012258299999999556, 0.00012255600000000283, 0.00012287500000000146, 0.00012333300000000325, 0.00012274999999999786, 0.00012254199999999632, 0.00012298600000000548, 0.0001229030000000006, 0.00012288900000000103, 0.00012265300000000035, 0.00012333300000000325, 0.00012305499999999692, 0.00012298599999999854, 0.0001234030000000011]</msg>
<status status="PASS" starttime="20201030 18:29:33.951" endtime="20201030 18:29:33.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.940" endtime="20201030 18:29:33.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:33.967" endtime="20201030 18:29:33.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.963" endtime="20201030 18:29:33.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.961" endtime="20201030 18:29:33.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.456" endtime="20201030 18:29:33.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.455" endtime="20201030 18:29:33.993"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.016" endtime="20201030 18:29:34.037"></status>
</kw>
<msg timestamp="20201030 18:29:34.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.013" endtime="20201030 18:29:34.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.041" endtime="20201030 18:29:34.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.047" endtime="20201030 18:29:34.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.005" endtime="20201030 18:29:34.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.999" endtime="20201030 18:29:34.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.071" endtime="20201030 18:29:34.408"></status>
</kw>
<msg timestamp="20201030 18:29:34.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041138708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041263014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:34.067" endtime="20201030 18:29:34.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041138708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041263014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:34.417" endtime="20201030 18:29:34.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.436" endtime="20201030 18:29:34.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.060" endtime="20201030 18:29:34.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.055" endtime="20201030 18:29:34.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:34.453" level="INFO">${RESULT} = [{'diff': 0.00012430599999999764}, {'diff': 0.00012443100000000124}, {'diff': 0.00012444400000000133}, {'diff': 0.00012380600000000408}, {'diff': 0.00012430499999999817}, {'diff': 0.000124096999999996...</msg>
<status status="PASS" starttime="20201030 18:29:34.444" endtime="20201030 18:29:34.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:34.463" level="INFO">${ACCURACY} = {'diff': [0.00012430599999999764, 0.00012443100000000124, 0.00012444400000000133, 0.00012380600000000408, 0.00012430499999999817, 0.00012409699999999663, 0.0001234449999999998, 0.00012383300000000375,...</msg>
<status status="PASS" starttime="20201030 18:29:34.455" endtime="20201030 18:29:34.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.474" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 18:29:34.472" endtime="20201030 18:29:34.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.480" level="INFO">VALUE: [0.00012430599999999764, 0.00012443100000000124, 0.00012444400000000133, 0.00012380600000000408, 0.00012430499999999817, 0.00012409699999999663, 0.0001234449999999998, 0.00012383300000000375, 0.0001236529999999944, 0.00012370800000000015, 0.00012380499999999767, 0.0001234579999999999, 0.00012443100000000124, 0.0001240129999999992, 0.00012350000000000555, 0.00012424999999999936, 0.00012355500000000436, 0.00012380499999999767, 0.00012438900000000253, 0.0001239030000000016, 0.0001244450000000008, 0.00012355600000000383, 0.00012355500000000436, 0.00012433400000000372, 0.00012429199999999807, 0.0001234999999999986, 0.00012355499999999742, 0.00012441700000000167, 0.0001234999999999986, 0.00012416699999999448, 0.0001242229999999997, 0.00012424999999999936, 0.00012420800000000065, 0.00012387500000000246, 0.00012365200000000187, 0.00012352799999999775, 0.0001241250000000027, 0.00012402799999999825, 0.0001239580000000004, 0.00012426399999999893, 0.00012427699999999903, 0.00012384700000000332, 0.00012381900000000418, 0.00012422199999999328, 0.0001239580000000004, 0.00012386099999999595, 0.00012397199999999997, 0.00012366700000000092, 0.00012438899999999559, 0.00012379199999999757]</msg>
<status status="PASS" starttime="20201030 18:29:34.477" endtime="20201030 18:29:34.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.465" endtime="20201030 18:29:34.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:34.492" endtime="20201030 18:29:34.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.488" endtime="20201030 18:29:34.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.485" endtime="20201030 18:29:34.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.995" endtime="20201030 18:29:34.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.994" endtime="20201030 18:29:34.517"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.540" endtime="20201030 18:29:34.560"></status>
</kw>
<msg timestamp="20201030 18:29:34.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.536" endtime="20201030 18:29:34.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.563" endtime="20201030 18:29:34.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.570" endtime="20201030 18:29:34.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.529" endtime="20201030 18:29:34.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.523" endtime="20201030 18:29:34.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.593" endtime="20201030 18:29:34.935"></status>
</kw>
<msg timestamp="20201030 18:29:34.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039610014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039734972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:34.589" endtime="20201030 18:29:34.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039610014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039734972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:34.944" endtime="20201030 18:29:34.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.963" endtime="20201030 18:29:34.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.582" endtime="20201030 18:29:34.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.578" endtime="20201030 18:29:34.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:34.980" level="INFO">${RESULT} = [{'diff': 0.0001249580000000014}, {'diff': 0.00012501399999999968}, {'diff': 0.0001253889999999966}, {'diff': 0.00012505499999999892}, {'diff': 0.0001253329999999983}, {'diff': 0.0001249580000000014},...</msg>
<status status="PASS" starttime="20201030 18:29:34.971" endtime="20201030 18:29:34.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:34.989" level="INFO">${ACCURACY} = {'diff': [0.0001249580000000014, 0.00012501399999999968, 0.0001253889999999966, 0.00012505499999999892, 0.0001253329999999983, 0.0001249580000000014, 0.0001252230000000007, 0.0001249580000000014, 0.00...</msg>
<status status="PASS" starttime="20201030 18:29:34.982" endtime="20201030 18:29:34.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.000" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 18:29:34.998" endtime="20201030 18:29:35.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.006" level="INFO">VALUE: [0.0001249580000000014, 0.00012501399999999968, 0.0001253889999999966, 0.00012505499999999892, 0.0001253329999999983, 0.0001249580000000014, 0.0001252230000000007, 0.0001249580000000014, 0.00012530599999999864, 0.000124568999999998, 0.000125292000000006, 0.00012466699999999498, 0.00012445900000000037, 0.00012498600000000054, 0.00012452799999999875, 0.00012481899999999824, 0.00012522200000000122, 0.00012508299999999806, 0.00012534700000000482, 0.00012545799999999496, 0.0001253329999999983, 0.00012504199999999882, 0.00012536200000000386, 0.00012544400000000233, 0.00012477699999999953, 0.00012482000000000465, 0.00012469499999999412, 0.0001254580000000019, 0.00012536100000000439, 0.00012520800000000165, 0.00012504099999999935, 0.00012469400000000158, 0.00012486100000000389, 0.00012498600000000054, 0.00012491700000000217, 0.0001254450000000018, 0.0001252909999999996, 0.0001247230000000002, 0.0001253889999999966, 0.00012448600000000004, 0.00012504200000000576, 0.00012493100000000174, 0.0001252360000000008, 0.00012518099999999505, 0.0001252779999999995, 0.00012463900000000278, 0.00012487500000000346, 0.00012508399999999753, 0.00012454199999999832, 0.00012531900000000568]</msg>
<status status="PASS" starttime="20201030 18:29:35.003" endtime="20201030 18:29:35.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.991" endtime="20201030 18:29:35.009"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:35.018" endtime="20201030 18:29:35.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.014" endtime="20201030 18:29:35.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.011" endtime="20201030 18:29:35.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.519" endtime="20201030 18:29:35.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.518" endtime="20201030 18:29:35.044"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.067" endtime="20201030 18:29:35.089"></status>
</kw>
<msg timestamp="20201030 18:29:35.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.063" endtime="20201030 18:29:35.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.092" endtime="20201030 18:29:35.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.099" endtime="20201030 18:29:35.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.056" endtime="20201030 18:29:35.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.050" endtime="20201030 18:29:35.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.123" endtime="20201030 18:29:35.462"></status>
</kw>
<msg timestamp="20201030 18:29:35.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041805889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041931819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.120" endtime="20201030 18:29:35.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041805889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041931819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.471" endtime="20201030 18:29:35.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.490" endtime="20201030 18:29:35.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.112" endtime="20201030 18:29:35.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.107" endtime="20201030 18:29:35.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:35.507" level="INFO">${RESULT} = [{'diff': 0.00012593000000000326}, {'diff': 0.0001256250000000042}, {'diff': 0.00012637499999999802}, {'diff': 0.0001262910000000006}, {'diff': 0.00012555600000000583}, {'diff': 0.00012641699999999673...</msg>
<status status="PASS" starttime="20201030 18:29:35.498" endtime="20201030 18:29:35.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:35.516" level="INFO">${ACCURACY} = {'diff': [0.00012593000000000326, 0.0001256250000000042, 0.00012637499999999802, 0.0001262910000000006, 0.00012555600000000583, 0.00012641699999999673, 0.00012604100000000035, 0.00012644499999999587, ...</msg>
<status status="PASS" starttime="20201030 18:29:35.509" endtime="20201030 18:29:35.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.528" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 18:29:35.526" endtime="20201030 18:29:35.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.535" level="INFO">VALUE: [0.00012593000000000326, 0.0001256250000000042, 0.00012637499999999802, 0.0001262910000000006, 0.00012555600000000583, 0.00012641699999999673, 0.00012604100000000035, 0.00012644499999999587, 0.00012565199999999693, 0.00012647199999999553, 0.00012554199999999932, 0.00012582000000000565, 0.00012618100000000299, 0.00012634699999999888, 0.00012620800000000265, 0.00012586099999999795, 0.00012556999999999846, 0.0001264160000000042, 0.0001262360000000018, 0.00012561100000000464, 0.00012640299999999716, 0.0001262360000000018, 0.00012587499999999752, 0.000125680000000003, 0.00012642999999999682, 0.0001255559999999989, 0.00012613900000000428, 0.00012645799999999596, 0.00012601400000000068, 0.0001254580000000019, 0.00012565199999999693, 0.00012602800000000025, 0.00012570900000000162, 0.00012583399999999828, 0.00012562499999999727, 0.00012640199999999768, 0.0001258329999999988, 0.00012636099999999845, 0.000125568999999999, 0.00012597200000000197, 0.00012572199999999478, 0.0001257360000000013, 0.0001261120000000046, 0.00012570900000000162, 0.00012636099999999845, 0.00012559700000000507, 0.0001258889999999971, 0.00012630500000000017, 0.00012566600000000344, 0.00012597199999999503]</msg>
<status status="PASS" starttime="20201030 18:29:35.531" endtime="20201030 18:29:35.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.519" endtime="20201030 18:29:35.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:35.550" endtime="20201030 18:29:35.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.544" endtime="20201030 18:29:35.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.542" endtime="20201030 18:29:35.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.046" endtime="20201030 18:29:35.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.045" endtime="20201030 18:29:35.575"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.598" endtime="20201030 18:29:35.619"></status>
</kw>
<msg timestamp="20201030 18:29:35.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.595" endtime="20201030 18:29:35.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.623" endtime="20201030 18:29:35.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.629" endtime="20201030 18:29:35.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.588" endtime="20201030 18:29:35.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.582" endtime="20201030 18:29:35.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.652" endtime="20201030 18:29:36.004"></status>
</kw>
<msg timestamp="20201030 18:29:36.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040230917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040358167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.649" endtime="20201030 18:29:36.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040230917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040358167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.013" endtime="20201030 18:29:36.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.032" endtime="20201030 18:29:36.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.642" endtime="20201030 18:29:36.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.637" endtime="20201030 18:29:36.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:36.050" level="INFO">${RESULT} = [{'diff': 0.00012725000000000236}, {'diff': 0.0001266250000000052}, {'diff': 0.00012676400000000143}, {'diff': 0.00012704200000000082}, {'diff': 0.00012676400000000143}, {'diff': 0.0001271519999999984...</msg>
<status status="PASS" starttime="20201030 18:29:36.041" endtime="20201030 18:29:36.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:36.060" level="INFO">${ACCURACY} = {'diff': [0.00012725000000000236, 0.0001266250000000052, 0.00012676400000000143, 0.00012704200000000082, 0.00012676400000000143, 0.00012715199999999843, 0.00012730600000000064, 0.00012686100000000589,...</msg>
<status status="PASS" starttime="20201030 18:29:36.052" endtime="20201030 18:29:36.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.071" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 18:29:36.069" endtime="20201030 18:29:36.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.077" level="INFO">VALUE: [0.00012725000000000236, 0.0001266250000000052, 0.00012676400000000143, 0.00012704200000000082, 0.00012676400000000143, 0.00012715199999999843, 0.00012730600000000064, 0.00012686100000000589, 0.00012654200000000032, 0.0001274580000000039, 0.00012718100000000399, 0.0001272780000000015, 0.00012726400000000193, 0.00012662499999999827, 0.00012693000000000426, 0.00012724999999999542, 0.00012730500000000117, 0.00012661100000000564, 0.00012695799999999646, 0.0001267360000000023, 0.0001265700000000064, 0.00012716699999999748, 0.0001268329999999998, 0.00012669400000000358, 0.0001270560000000004, 0.0001273889999999986, 0.0001273330000000003, 0.00012675000000000186, 0.000126778000000001, 0.00012742999999999782, 0.00012658299999999956, 0.00012655500000000042, 0.00012676400000000143, 0.00012706999999999996, 0.00012658299999999956, 0.0001268199999999997, 0.00012687499999999852, 0.0001270690000000005, 0.00012718099999999705, 0.00012684799999999885, 0.00012729200000000107, 0.0001273889999999986, 0.00012725000000000236, 0.00012695899999999594, 0.00012686099999999895, 0.0001274580000000039, 0.0001274859999999961, 0.00012648600000000204, 0.0001271250000000057, 0.00012673599999999535]</msg>
<status status="PASS" starttime="20201030 18:29:36.074" endtime="20201030 18:29:36.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.062" endtime="20201030 18:29:36.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:36.089" endtime="20201030 18:29:36.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.085" endtime="20201030 18:29:36.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.082" endtime="20201030 18:29:36.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.577" endtime="20201030 18:29:36.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.576" endtime="20201030 18:29:36.115"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.138" endtime="20201030 18:29:36.161"></status>
</kw>
<msg timestamp="20201030 18:29:36.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.135" endtime="20201030 18:29:36.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.164" endtime="20201030 18:29:36.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.171" endtime="20201030 18:29:36.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.127" endtime="20201030 18:29:36.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.121" endtime="20201030 18:29:36.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.194" endtime="20201030 18:29:36.543"></status>
</kw>
<msg timestamp="20201030 18:29:36.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040856611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040985083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.191" endtime="20201030 18:29:36.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040856611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040985083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.553" endtime="20201030 18:29:36.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.571" endtime="20201030 18:29:36.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.184" endtime="20201030 18:29:36.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.179" endtime="20201030 18:29:36.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:36.589" level="INFO">${RESULT} = [{'diff': 0.00012847199999999753}, {'diff': 0.00012845900000000438}, {'diff': 0.0001283889999999996}, {'diff': 0.00012757000000000046}, {'diff': 0.00012776400000000243}, {'diff': 0.0001275409999999949...</msg>
<status status="PASS" starttime="20201030 18:29:36.580" endtime="20201030 18:29:36.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:36.600" level="INFO">${ACCURACY} = {'diff': [0.00012847199999999753, 0.00012845900000000438, 0.0001283889999999996, 0.00012757000000000046, 0.00012776400000000243, 0.0001275409999999949, 0.0001280560000000014, 0.00012758400000000003, 0...</msg>
<status status="PASS" starttime="20201030 18:29:36.591" endtime="20201030 18:29:36.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.611" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 18:29:36.609" endtime="20201030 18:29:36.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.616" level="INFO">VALUE: [0.00012847199999999753, 0.00012845900000000438, 0.0001283889999999996, 0.00012757000000000046, 0.00012776400000000243, 0.0001275409999999949, 0.0001280560000000014, 0.00012758400000000003, 0.00012854200000000232, 0.00012845799999999796, 0.0001282360000000038, 0.0001284309999999983, 0.00012834700000000088, 0.00012841700000000567, 0.00012807000000000096, 0.00012772200000000372, 0.000128263999999996, 0.00012813899999999934, 0.00012769499999999712, 0.00012833400000000078, 0.00012808300000000106, 0.00012801400000000268, 0.0001283059999999947, 0.00012826400000000293, 0.00012756899999999405, 0.0001276109999999997, 0.00012831900000000174, 0.00012834800000000035, 0.00012761199999999917, 0.00012840299999999916, 0.0001278330000000008, 0.00012802800000000225, 0.00012791599999999875, 0.00012759700000000013, 0.0001280969999999937, 0.0001283889999999996, 0.0001277079999999972, 0.00012776300000000296, 0.00012802800000000225, 0.00012797199999999703, 0.00012847200000000447, 0.00012801399999999574, 0.00012847200000000447, 0.0001283889999999996, 0.00012752800000000175, 0.0001276250000000062, 0.00012858300000000156, 0.00012815199999999943, 0.0001284309999999983, 0.0001279859999999966]</msg>
<status status="PASS" starttime="20201030 18:29:36.613" endtime="20201030 18:29:36.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.602" endtime="20201030 18:29:36.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:36.629" endtime="20201030 18:29:36.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.624" endtime="20201030 18:29:36.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.622" endtime="20201030 18:29:36.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.117" endtime="20201030 18:29:36.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.116" endtime="20201030 18:29:36.654"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.677" endtime="20201030 18:29:36.700"></status>
</kw>
<msg timestamp="20201030 18:29:36.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.674" endtime="20201030 18:29:36.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.704" endtime="20201030 18:29:36.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.710" endtime="20201030 18:29:36.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.667" endtime="20201030 18:29:36.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.661" endtime="20201030 18:29:36.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.734" endtime="20201030 18:29:37.085"></status>
</kw>
<msg timestamp="20201030 18:29:37.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040490972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040619569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.731" endtime="20201030 18:29:37.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040490972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040619569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:37.095" endtime="20201030 18:29:37.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.113" endtime="20201030 18:29:37.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.723" endtime="20201030 18:29:37.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.718" endtime="20201030 18:29:37.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:37.131" level="INFO">${RESULT} = [{'diff': 0.00012859700000000113}, {'diff': 0.00012894499999999837}, {'diff': 0.00012934800000000135}, {'diff': 0.0001288059999999952}, {'diff': 0.00012930500000000317}, {'diff': 0.0001289589999999979...</msg>
<status status="PASS" starttime="20201030 18:29:37.122" endtime="20201030 18:29:37.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:37.140" level="INFO">${ACCURACY} = {'diff': [0.00012859700000000113, 0.00012894499999999837, 0.00012934800000000135, 0.0001288059999999952, 0.00012930500000000317, 0.00012895899999999794, 0.0001292780000000035, 0.00012883400000000128, ...</msg>
<status status="PASS" starttime="20201030 18:29:37.133" endtime="20201030 18:29:37.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.151" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 18:29:37.149" endtime="20201030 18:29:37.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.157" level="INFO">VALUE: [0.00012859700000000113, 0.00012894499999999837, 0.00012934800000000135, 0.0001288059999999952, 0.00012930500000000317, 0.00012895899999999794, 0.0001292780000000035, 0.00012883400000000128, 0.0001288189999999953, 0.00012923699999999733, 0.00012941600000000025, 0.0001293059999999957, 0.0001293890000000006, 0.00012881999999999477, 0.00012855599999999495, 0.0001286110000000007, 0.00012902800000000325, 0.0001292079999999987, 0.0001290279999999963, 0.00012940300000000016, 0.0001292079999999987, 0.00012855499999999548, 0.00012916699999999948, 0.00012899999999999717, 0.0001291529999999999, 0.00012886100000000095, 0.00012872199999999778, 0.00012891599999999975, 0.00012890299999999966, 0.00012899999999999717, 0.0001294309999999993, 0.00012901399999999674, 0.00012917999999999957, 0.00012923599999999785, 0.00012929200000000307, 0.00012909700000000163, 0.00012887500000000052, 0.00012936100000000145, 0.00012867999999999907, 0.0001289439999999989, 0.00012876400000000343, 0.00012908299999999512, 0.00012859700000000113, 0.00012924999999999742, 0.00012944499999999887, 0.00012876400000000343, 0.0001293890000000006, 0.00012891699999999923, 0.0001294439999999994, 0.00012886100000000095]</msg>
<status status="PASS" starttime="20201030 18:29:37.154" endtime="20201030 18:29:37.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.142" endtime="20201030 18:29:37.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:37.170" endtime="20201030 18:29:37.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.165" endtime="20201030 18:29:37.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.163" endtime="20201030 18:29:37.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.657" endtime="20201030 18:29:37.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.655" endtime="20201030 18:29:37.195"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.218" endtime="20201030 18:29:37.242"></status>
</kw>
<msg timestamp="20201030 18:29:37.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.215" endtime="20201030 18:29:37.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.246" endtime="20201030 18:29:37.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.252" endtime="20201030 18:29:37.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.207" endtime="20201030 18:29:37.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.201" endtime="20201030 18:29:37.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.276" endtime="20201030 18:29:37.625"></status>
</kw>
<msg timestamp="20201030 18:29:37.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042180583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042310569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:37.273" endtime="20201030 18:29:37.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042180583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042310569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:37.635" endtime="20201030 18:29:37.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.654" endtime="20201030 18:29:37.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.265" endtime="20201030 18:29:37.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.261" endtime="20201030 18:29:37.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:37.671" level="INFO">${RESULT} = [{'diff': 0.0001299859999999986}, {'diff': 0.00012984700000000238}, {'diff': 0.00013044499999999987}, {'diff': 0.0001302079999999997}, {'diff': 0.0001295279999999968}, {'diff': 0.0001302230000000057},...</msg>
<status status="PASS" starttime="20201030 18:29:37.662" endtime="20201030 18:29:37.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:37.681" level="INFO">${ACCURACY} = {'diff': [0.0001299859999999986, 0.00012984700000000238, 0.00013044499999999987, 0.0001302079999999997, 0.0001295279999999968, 0.0001302230000000057, 0.00012986100000000195, 0.00012973599999999835, 0....</msg>
<status status="PASS" starttime="20201030 18:29:37.673" endtime="20201030 18:29:37.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.692" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 18:29:37.690" endtime="20201030 18:29:37.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.697" level="INFO">VALUE: [0.0001299859999999986, 0.00012984700000000238, 0.00013044499999999987, 0.0001302079999999997, 0.0001295279999999968, 0.0001302230000000057, 0.00012986100000000195, 0.00012973599999999835, 0.00012995899999999894, 0.0001302230000000057, 0.0001297360000000053, 0.00012966699999999998, 0.0001300409999999974, 0.0001296110000000017, 0.00013009700000000263, 0.00013012500000000177, 0.00013011099999999526, 0.00012958299999999562, 0.0001303479999999954, 0.00013041600000000125, 0.00013001399999999774, 0.00012979199999999663, 0.0001299169999999933, 0.00013040300000000116, 0.0001297639999999975, 0.00012969499999999912, 0.00013009700000000263, 0.00012987499999999458, 0.00013013900000000134, 0.00013034700000000288, 0.0001303189999999968, 0.0001302079999999997, 0.00012984800000000185, 0.00012999999999999817, 0.00013037499999999508, 0.00013018000000000057, 0.00012994499999999937, 0.00012959700000000213, 0.00012956899999999605, 0.00013007000000000296, 0.00012983400000000228, 0.00012966699999999998, 0.00013037500000000202, 0.00012973599999999835, 0.00012976400000000443, 0.00012991700000000023, 0.00013037500000000202, 0.00013009700000000263, 0.000129860999999995, 0.0001300690000000035]</msg>
<status status="PASS" starttime="20201030 18:29:37.694" endtime="20201030 18:29:37.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.683" endtime="20201030 18:29:37.700"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:37.712" endtime="20201030 18:29:37.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.706" endtime="20201030 18:29:37.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.703" endtime="20201030 18:29:37.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.197" endtime="20201030 18:29:37.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.196" endtime="20201030 18:29:37.737"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.760" endtime="20201030 18:29:37.783"></status>
</kw>
<msg timestamp="20201030 18:29:37.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.757" endtime="20201030 18:29:37.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.786" endtime="20201030 18:29:37.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.793" endtime="20201030 18:29:37.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.749" endtime="20201030 18:29:37.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.743" endtime="20201030 18:29:37.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.816" endtime="20201030 18:29:38.178"></status>
</kw>
<msg timestamp="20201030 18:29:38.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040602514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040733889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:37.813" endtime="20201030 18:29:38.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040602514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040733889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.188" endtime="20201030 18:29:38.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.206" endtime="20201030 18:29:38.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.806" endtime="20201030 18:29:38.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.801" endtime="20201030 18:29:38.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:38.224" level="INFO">${RESULT} = [{'diff': 0.00013137500000000302}, {'diff': 0.0001312769999999991}, {'diff': 0.00013127799999999856}, {'diff': 0.000130651999999995}, {'diff': 0.0001314860000000001}, {'diff': 0.00013124999999999942},...</msg>
<status status="PASS" starttime="20201030 18:29:38.215" endtime="20201030 18:29:38.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:38.238" level="INFO">${ACCURACY} = {'diff': [0.00013137500000000302, 0.0001312769999999991, 0.00013127799999999856, 0.000130651999999995, 0.0001314860000000001, 0.00013124999999999942, 0.00013081999999999677, 0.000130778000000005, 0.00...</msg>
<status status="PASS" starttime="20201030 18:29:38.226" endtime="20201030 18:29:38.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.250" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 18:29:38.247" endtime="20201030 18:29:38.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.255" level="INFO">VALUE: [0.00013137500000000302, 0.0001312769999999991, 0.00013127799999999856, 0.000130651999999995, 0.0001314860000000001, 0.00013124999999999942, 0.00013081999999999677, 0.000130778000000005, 0.00013122299999999976, 0.00013095899999999994, 0.0001314310000000013, 0.00013072199999999978, 0.00013099999999999917, 0.00013116700000000148, 0.00013080600000000414, 0.00013058400000000303, 0.0001310279999999983, 0.00013140300000000216, 0.0001310409999999984, 0.00013112500000000277, 0.000131263999999999, 0.00013056999999999652, 0.00013133299999999737, 0.0001310839999999966, 0.00013058300000000356, 0.00013062500000000227, 0.00013126299999999952, 0.0001307639999999985, 0.00013111199999999573, 0.00013093000000000132, 0.00013147200000000053, 0.00013099999999999917, 0.00013061099999999576, 0.00013058299999999662, 0.00013073599999999935, 0.00013140299999999522, 0.00013063900000000184, 0.0001313890000000026, 0.00013073599999999935, 0.00013090199999999524, 0.00013084699999999644, 0.0001313609999999965, 0.0001306530000000014, 0.00013069400000000064, 0.00013141700000000173, 0.00013063900000000184, 0.0001307080000000002, 0.00013119500000000062, 0.00013084699999999644, 0.00013143000000000182]</msg>
<status status="PASS" starttime="20201030 18:29:38.252" endtime="20201030 18:29:38.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.240" endtime="20201030 18:29:38.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:38.268" endtime="20201030 18:29:38.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.263" endtime="20201030 18:29:38.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.261" endtime="20201030 18:29:38.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.739" endtime="20201030 18:29:38.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.738" endtime="20201030 18:29:38.293"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.316" endtime="20201030 18:29:38.339"></status>
</kw>
<msg timestamp="20201030 18:29:38.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.313" endtime="20201030 18:29:38.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.343" endtime="20201030 18:29:38.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.349" endtime="20201030 18:29:38.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.306" endtime="20201030 18:29:38.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.300" endtime="20201030 18:29:38.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.373" endtime="20201030 18:29:38.723"></status>
</kw>
<msg timestamp="20201030 18:29:38.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040729181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040860681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.370" endtime="20201030 18:29:38.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040729181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040860681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.733" endtime="20201030 18:29:38.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.751" endtime="20201030 18:29:38.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.362" endtime="20201030 18:29:38.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.357" endtime="20201030 18:29:38.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:38.769" level="INFO">${RESULT} = [{'diff': 0.00013149999999999967}, {'diff': 0.00013197200000000103}, {'diff': 0.00013180499999999873}, {'diff': 0.0001319860000000006}, {'diff': 0.00013167999999999513}, {'diff': 0.0001322360000000008...</msg>
<status status="PASS" starttime="20201030 18:29:38.760" endtime="20201030 18:29:38.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:38.780" level="INFO">${ACCURACY} = {'diff': [0.00013149999999999967, 0.00013197200000000103, 0.00013180499999999873, 0.0001319860000000006, 0.00013167999999999513, 0.00013223600000000085, 0.00013191600000000275, 0.00013194500000000137,...</msg>
<status status="PASS" starttime="20201030 18:29:38.771" endtime="20201030 18:29:38.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.791" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 18:29:38.789" endtime="20201030 18:29:38.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.796" level="INFO">VALUE: [0.00013149999999999967, 0.00013197200000000103, 0.00013180499999999873, 0.0001319860000000006, 0.00013167999999999513, 0.00013223600000000085, 0.00013191600000000275, 0.00013194500000000137, 0.00013251300000000077, 0.00013145900000000044, 0.00013212499999999683, 0.00013200000000000017, 0.00013205499999999898, 0.0001323609999999975, 0.00013227799999999956, 0.00013222299999999382, 0.0001323189999999988, 0.0001316530000000024, 0.00013250000000000067, 0.00013208299999999812, 0.0001322780000000065, 0.00013205499999999898, 0.0001321389999999964, 0.00013250000000000067, 0.000132264, 0.00013161099999999676, 0.00013212499999999683, 0.00013172299999999332, 0.0001322080000000017, 0.00013179099999999916, 0.00013240299999999622, 0.0001320409999999994, 0.00013174999999999992, 0.00013184699999999744, 0.0001321389999999964, 0.00013200000000000017, 0.00013222200000000128, 0.00013162499999999633, 0.0001324589999999945, 0.00013226300000000052, 0.00013222300000000076, 0.000132264, 0.00013204199999999888, 0.00013225000000000042, 0.00013158300000000456, 0.00013155599999999795, 0.00013169400000000164, 0.0001319719999999941, 0.0001319169999999953, 0.0001324169999999958]</msg>
<status status="PASS" starttime="20201030 18:29:38.793" endtime="20201030 18:29:38.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.782" endtime="20201030 18:29:38.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:38.809" endtime="20201030 18:29:38.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.805" endtime="20201030 18:29:38.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.802" endtime="20201030 18:29:38.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.295" endtime="20201030 18:29:38.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.294" endtime="20201030 18:29:38.834"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.858" endtime="20201030 18:29:38.881"></status>
</kw>
<msg timestamp="20201030 18:29:38.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.854" endtime="20201030 18:29:38.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.884" endtime="20201030 18:29:38.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.890" endtime="20201030 18:29:38.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.847" endtime="20201030 18:29:38.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.841" endtime="20201030 18:29:38.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.914" endtime="20201030 18:29:39.266"></status>
</kw>
<msg timestamp="20201030 18:29:39.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040538083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040671361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.911" endtime="20201030 18:29:39.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040538083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040671361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.275" endtime="20201030 18:29:39.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.294" endtime="20201030 18:29:39.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.904" endtime="20201030 18:29:39.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.899" endtime="20201030 18:29:39.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:39.312" level="INFO">${RESULT} = [{'diff': 0.00013327800000000056}, {'diff': 0.00013333299999999937}, {'diff': 0.000133264000000001}, {'diff': 0.000133473000000002}, {'diff': 0.0001329310000000028}, {'diff': 0.00013297200000000203}, ...</msg>
<status status="PASS" starttime="20201030 18:29:39.303" endtime="20201030 18:29:39.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:39.322" level="INFO">${ACCURACY} = {'diff': [0.00013327800000000056, 0.00013333299999999937, 0.000133264000000001, 0.000133473000000002, 0.0001329310000000028, 0.00013297200000000203, 0.00013284699999999844, 0.00013259700000000513, 0.0...</msg>
<status status="PASS" starttime="20201030 18:29:39.314" endtime="20201030 18:29:39.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.333" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 18:29:39.331" endtime="20201030 18:29:39.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.338" level="INFO">VALUE: [0.00013327800000000056, 0.00013333299999999937, 0.000133264000000001, 0.000133473000000002, 0.0001329310000000028, 0.00013297200000000203, 0.00013284699999999844, 0.00013259700000000513, 0.00013255599999999895, 0.0001333609999999985, 0.00013344500000000287, 0.00013266700000000298, 0.0001326110000000047, 0.00013280499999999973, 0.00013309799999999816, 0.00013301400000000074, 0.0001330280000000003, 0.00013273599999999441, 0.00013255499999999948, 0.0001329860000000016, 0.00013356900000000005, 0.00013245799999999502, 0.00013343099999999636, 0.0001334169999999968, 0.00013263900000000384, 0.0001332080000000027, 0.00013312499999999783, 0.0001333189999999998, 0.0001333189999999998, 0.00013256999999999852, 0.00013268100000000255, 0.00013281999999999877, 0.0001329440000000029, 0.00013329200000000013, 0.0001333059999999997, 0.00013338899999999765, 0.00013350000000000167, 0.00013273600000000135, 0.00013333400000000578, 0.0001334860000000021, 0.00013266599999999656, 0.0001335280000000008, 0.00013300000000000117, 0.00013268000000000307, 0.0001329860000000016, 0.0001333890000000046, 0.0001326809999999956, 0.00013319400000000314, 0.0001334860000000021, 0.00013327800000000056]</msg>
<status status="PASS" starttime="20201030 18:29:39.335" endtime="20201030 18:29:39.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.324" endtime="20201030 18:29:39.341"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:39.351" endtime="20201030 18:29:39.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.346" endtime="20201030 18:29:39.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.344" endtime="20201030 18:29:39.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.837" endtime="20201030 18:29:39.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.835" endtime="20201030 18:29:39.376"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.400" endtime="20201030 18:29:39.424"></status>
</kw>
<msg timestamp="20201030 18:29:39.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.396" endtime="20201030 18:29:39.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.427" endtime="20201030 18:29:39.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.434" endtime="20201030 18:29:39.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.389" endtime="20201030 18:29:39.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.383" endtime="20201030 18:29:39.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.458" endtime="20201030 18:29:39.806"></status>
</kw>
<msg timestamp="20201030 18:29:39.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041992792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042126375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.454" endtime="20201030 18:29:39.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041992792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042126375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.815" endtime="20201030 18:29:39.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.834" endtime="20201030 18:29:39.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.447" endtime="20201030 18:29:39.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.442" endtime="20201030 18:29:39.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:39.851" level="INFO">${RESULT} = [{'diff': 0.00013358299999999962}, {'diff': 0.00013431999999999333}, {'diff': 0.00013412499999999883}, {'diff': 0.0001335839999999991}, {'diff': 0.00013372200000000278}, {'diff': 0.0001342920000000011...</msg>
<status status="PASS" starttime="20201030 18:29:39.842" endtime="20201030 18:29:39.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:39.861" level="INFO">${ACCURACY} = {'diff': [0.00013358299999999962, 0.00013431999999999333, 0.00013412499999999883, 0.0001335839999999991, 0.00013372200000000278, 0.00013429200000000113, 0.00013362499999999833, 0.00013394500000000337,...</msg>
<status status="PASS" starttime="20201030 18:29:39.853" endtime="20201030 18:29:39.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.872" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 18:29:39.869" endtime="20201030 18:29:39.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.877" level="INFO">VALUE: [0.00013358299999999962, 0.00013431999999999333, 0.00013412499999999883, 0.0001335839999999991, 0.00013372200000000278, 0.00013429200000000113, 0.00013362499999999833, 0.00013394500000000337, 0.00013433399999999984, 0.00013375000000000192, 0.00013433300000000037, 0.00013423600000000285, 0.00013440200000000568, 0.00013420799999999677, 0.00013369500000000312, 0.00013441599999999831, 0.00013444500000000387, 0.000133860999999999, 0.000134264000000002, 0.00013359799999999866, 0.00013433300000000037, 0.00013422299999999582, 0.00013361200000000517, 0.00013449999999999573, 0.0001343890000000056, 0.00013369499999999618, 0.00013402700000000184, 0.0001338890000000051, 0.00013429200000000113, 0.00013355599999999995, 0.00013388799999999867, 0.00013441700000000473, 0.00013384699999999944, 0.00013440299999999822, 0.00013425000000000242, 0.0001340410000000014, 0.00013377800000000106, 0.00013437499999999908, 0.00013377800000000106, 0.0001337090000000027, 0.00013441599999999831, 0.000134264000000002, 0.00013359700000000613, 0.0001344719999999966, 0.00013422200000000328, 0.00013441599999999831, 0.00013424999999999548, 0.00013383299999999987, 0.0001345280000000018, 0.0001345280000000018]</msg>
<status status="PASS" starttime="20201030 18:29:39.874" endtime="20201030 18:29:39.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.862" endtime="20201030 18:29:39.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:39.891" endtime="20201030 18:29:39.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.886" endtime="20201030 18:29:39.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.883" endtime="20201030 18:29:39.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.379" endtime="20201030 18:29:39.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.377" endtime="20201030 18:29:39.917"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.940" endtime="20201030 18:29:39.963"></status>
</kw>
<msg timestamp="20201030 18:29:39.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.937" endtime="20201030 18:29:39.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.967" endtime="20201030 18:29:39.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.973" endtime="20201030 18:29:39.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.929" endtime="20201030 18:29:39.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.923" endtime="20201030 18:29:39.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.997" endtime="20201030 18:29:40.345"></status>
</kw>
<msg timestamp="20201030 18:29:40.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040729097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040864222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.994" endtime="20201030 18:29:40.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040729097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040864222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:40.354" endtime="20201030 18:29:40.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.373" endtime="20201030 18:29:40.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.986" endtime="20201030 18:29:40.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.981" endtime="20201030 18:29:40.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:40.391" level="INFO">${RESULT} = [{'diff': 0.00013512499999999983}, {'diff': 0.0001345970000000002}, {'diff': 0.0001354169999999988}, {'diff': 0.00013520799999999777}, {'diff': 0.00013548699999999664}, {'diff': 0.00013523599999999691...</msg>
<status status="PASS" starttime="20201030 18:29:40.382" endtime="20201030 18:29:40.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:40.401" level="INFO">${ACCURACY} = {'diff': [0.00013512499999999983, 0.0001345970000000002, 0.0001354169999999988, 0.00013520799999999777, 0.00013548699999999664, 0.00013523599999999691, 0.0001346389999999989, 0.00013509800000000016, 0...</msg>
<status status="PASS" starttime="20201030 18:29:40.393" endtime="20201030 18:29:40.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.413" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 18:29:40.410" endtime="20201030 18:29:40.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.418" level="INFO">VALUE: [0.00013512499999999983, 0.0001345970000000002, 0.0001354169999999988, 0.00013520799999999777, 0.00013548699999999664, 0.00013523599999999691, 0.0001346389999999989, 0.00013509800000000016, 0.00013542999999999888, 0.00013504200000000188, 0.00013555600000000195, 0.00013526399999999605, 0.0001354169999999988, 0.00013552799999999587, 0.0001350410000000024, 0.00013487499999999958, 0.0001346389999999989, 0.00013537500000000008, 0.00013542999999999888, 0.00013522200000000428, 0.0001353480000000004, 0.0001350970000000007, 0.00013544399999999845, 0.0001354310000000053, 0.0001354169999999988, 0.00013525000000000342, 0.00013462499999999933, 0.00013458300000000062, 0.0001352919999999952, 0.00013512499999999983, 0.00013522200000000428, 0.0001353890000000066, 0.00013461099999999976, 0.00013533300000000137, 0.0001350139999999958, 0.00013469499999999718, 0.00013500000000000317, 0.00013504200000000188, 0.00013487499999999958, 0.000134861, 0.0001349169999999983, 0.0001345280000000018, 0.00013545800000000496, 0.00013462499999999933, 0.00013512499999999983, 0.00013480500000000173, 0.0001350139999999958, 0.00013461099999999976, 0.00013526300000000352, 0.0001347080000000042]</msg>
<status status="PASS" starttime="20201030 18:29:40.415" endtime="20201030 18:29:40.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.403" endtime="20201030 18:29:40.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:40.431" endtime="20201030 18:29:40.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.426" endtime="20201030 18:29:40.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.424" endtime="20201030 18:29:40.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.919" endtime="20201030 18:29:40.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.918" endtime="20201030 18:29:40.456"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.479" endtime="20201030 18:29:40.502"></status>
</kw>
<msg timestamp="20201030 18:29:40.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:40.476" endtime="20201030 18:29:40.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:40.506" endtime="20201030 18:29:40.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.512" endtime="20201030 18:29:40.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.469" endtime="20201030 18:29:40.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.463" endtime="20201030 18:29:40.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.536" endtime="20201030 18:29:40.885"></status>
</kw>
<msg timestamp="20201030 18:29:40.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040779458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040915042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:40.533" endtime="20201030 18:29:40.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040779458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040915042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:40.895" endtime="20201030 18:29:40.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.914" endtime="20201030 18:29:40.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.525" endtime="20201030 18:29:40.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.521" endtime="20201030 18:29:40.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:40.931" level="INFO">${RESULT} = [{'diff': 0.0001355840000000011}, {'diff': 0.0001356389999999999}, {'diff': 0.00013620799999999877}, {'diff': 0.00013605600000000245}, {'diff': 0.00013622299999999782}, {'diff': 0.0001361939999999992}...</msg>
<status status="PASS" starttime="20201030 18:29:40.922" endtime="20201030 18:29:40.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:40.942" level="INFO">${ACCURACY} = {'diff': [0.0001355840000000011, 0.0001356389999999999, 0.00013620799999999877, 0.00013605600000000245, 0.00013622299999999782, 0.0001361939999999992, 0.00013645799999999902, 0.0001360689999999956, 0....</msg>
<status status="PASS" starttime="20201030 18:29:40.933" endtime="20201030 18:29:40.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.953" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 18:29:40.951" endtime="20201030 18:29:40.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.959" level="INFO">VALUE: [0.0001355840000000011, 0.0001356389999999999, 0.00013620799999999877, 0.00013605600000000245, 0.00013622299999999782, 0.0001361939999999992, 0.00013645799999999902, 0.0001360689999999956, 0.0001365280000000038, 0.00013562500000000033, 0.0001364719999999986, 0.00013644399999999945, 0.00013604099999999647, 0.00013650000000000467, 0.00013569499999999818, 0.00013655499999999654, 0.00013617999999999963, 0.00013622299999999782, 0.00013629099999999672, 0.00013627799999999662, 0.00013565299999999947, 0.00013640300000000022, 0.0001364019999999938, 0.00013626399999999705, 0.00013634700000000194, 0.0001364860000000051, 0.00013627799999999662, 0.0001361390000000004, 0.0001359169999999993, 0.00013569500000000512, 0.00013598599999999766, 0.00013643099999999936, 0.0001358190000000023, 0.00013644399999999945, 0.0001358060000000022, 0.00013658300000000262, 0.00013638800000000117, 0.00013641600000000031, 0.00013565299999999947, 0.00013641600000000031, 0.00013648599999999816, 0.0001355280000000028, 0.00013654199999999644, 0.0001365280000000038, 0.00013566599999999956, 0.0001365410000000039, 0.0001364169999999998, 0.00013565299999999947, 0.00013641600000000031, 0.00013624999999999748]</msg>
<status status="PASS" starttime="20201030 18:29:40.956" endtime="20201030 18:29:40.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.944" endtime="20201030 18:29:40.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:40.972" endtime="20201030 18:29:40.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.967" endtime="20201030 18:29:40.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.965" endtime="20201030 18:29:40.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.459" endtime="20201030 18:29:40.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.457" endtime="20201030 18:29:40.997"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.021" endtime="20201030 18:29:41.044"></status>
</kw>
<msg timestamp="20201030 18:29:41.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.017" endtime="20201030 18:29:41.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.047" endtime="20201030 18:29:41.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.054" endtime="20201030 18:29:41.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.010" endtime="20201030 18:29:41.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.004" endtime="20201030 18:29:41.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.079" endtime="20201030 18:29:41.431"></status>
</kw>
<msg timestamp="20201030 18:29:41.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040934028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041071347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:41.075" endtime="20201030 18:29:41.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040934028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041071347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:41.440" endtime="20201030 18:29:41.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.459" endtime="20201030 18:29:41.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.068" endtime="20201030 18:29:41.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.063" endtime="20201030 18:29:41.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:41.477" level="INFO">${RESULT} = [{'diff': 0.0001373190000000038}, {'diff': 0.00013687500000000158}, {'diff': 0.00013737499999999514}, {'diff': 0.0001365970000000022}, {'diff': 0.00013722199999999934}, {'diff': 0.0001366390000000009}...</msg>
<status status="PASS" starttime="20201030 18:29:41.468" endtime="20201030 18:29:41.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:41.486" level="INFO">${ACCURACY} = {'diff': [0.0001373190000000038, 0.00013687500000000158, 0.00013737499999999514, 0.0001365970000000022, 0.00013722199999999934, 0.0001366390000000009, 0.00013724999999999848, 0.00013677800000000406, 0...</msg>
<status status="PASS" starttime="20201030 18:29:41.479" endtime="20201030 18:29:41.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.497" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 18:29:41.495" endtime="20201030 18:29:41.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.502" level="INFO">VALUE: [0.0001373190000000038, 0.00013687500000000158, 0.00013737499999999514, 0.0001365970000000022, 0.00013722199999999934, 0.0001366390000000009, 0.00013724999999999848, 0.00013677800000000406, 0.00013666700000000004, 0.00013698599999999866, 0.000136861000000002, 0.0001365139999999973, 0.0001371390000000014, 0.00013672199999999884, 0.00013658399999999515, 0.00013740299999999428, 0.00013724999999999848, 0.0001372919999999972, 0.00013734700000000294, 0.00013737500000000208, 0.00013734700000000294, 0.0001375139999999983, 0.0001365840000000021, 0.00013694499999999943, 0.0001365970000000022, 0.00013745800000000002, 0.00013720899999999925, 0.00013677800000000406, 0.0001370139999999978, 0.0001367640000000045, 0.00013693099999999986, 0.0001368339999999954, 0.00013748599999999916, 0.00013720799999999977, 0.00013662500000000133, 0.00013676399999999755, 0.00013744400000000045, 0.0001374170000000008, 0.00013712500000000183, 0.00013656999999999558, 0.00013707000000000302, 0.00013723600000000585, 0.0001366809999999996, 0.0001371390000000014, 0.00013694399999999995, 0.00013670799999999927, 0.0001373060000000037, 0.00013680599999999626, 0.00013754199999999744, 0.00013737500000000208]</msg>
<status status="PASS" starttime="20201030 18:29:41.499" endtime="20201030 18:29:41.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.488" endtime="20201030 18:29:41.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:41.515" endtime="20201030 18:29:41.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.511" endtime="20201030 18:29:41.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.508" endtime="20201030 18:29:41.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.999" endtime="20201030 18:29:41.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.998" endtime="20201030 18:29:41.541"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.566" endtime="20201030 18:29:41.591"></status>
</kw>
<msg timestamp="20201030 18:29:41.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.563" endtime="20201030 18:29:41.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.595" endtime="20201030 18:29:41.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.601" endtime="20201030 18:29:41.605"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.555" endtime="20201030 18:29:41.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.547" endtime="20201030 18:29:41.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.625" endtime="20201030 18:29:41.975"></status>
</kw>
<msg timestamp="20201030 18:29:41.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044723806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044862347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:41.622" endtime="20201030 18:29:41.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044723806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044862347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:41.984" endtime="20201030 18:29:42.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.003" endtime="20201030 18:29:42.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.614" endtime="20201030 18:29:42.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.609" endtime="20201030 18:29:42.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:42.021" level="INFO">${RESULT} = [{'diff': 0.00013854099999999897}, {'diff': 0.0001383610000000035}, {'diff': 0.00013783299999999693}, {'diff': 0.00013848600000000016}, {'diff': 0.00013797299999999957}, {'diff': 0.0001383750000000030...</msg>
<status status="PASS" starttime="20201030 18:29:42.012" endtime="20201030 18:29:42.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:42.030" level="INFO">${ACCURACY} = {'diff': [0.00013854099999999897, 0.0001383610000000035, 0.00013783299999999693, 0.00013848600000000016, 0.00013797299999999957, 0.00013837500000000308, 0.00013799999999999923, 0.00013783299999999693,...</msg>
<status status="PASS" starttime="20201030 18:29:42.023" endtime="20201030 18:29:42.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.041" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 18:29:42.039" endtime="20201030 18:29:42.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.047" level="INFO">VALUE: [0.00013854099999999897, 0.0001383610000000035, 0.00013783299999999693, 0.00013848600000000016, 0.00013797299999999957, 0.00013837500000000308, 0.00013799999999999923, 0.00013783299999999693, 0.0001384590000000005, 0.0001380280000000053, 0.00013784700000000344, 0.0001376810000000006, 0.00013790300000000172, 0.00013829099999999872, 0.00013788900000000215, 0.00013831899999999786, 0.00013759699999999625, 0.00013845800000000102, 0.00013841600000000231, 0.00013798599999999966, 0.00013793100000000086, 0.0001375689999999971, 0.00013804099999999847, 0.0001375689999999971, 0.00013840299999999528, 0.00013833300000000437, 0.00013841600000000231, 0.0001378480000000029, 0.0001376390000000019, 0.00013855599999999801, 0.00013848600000000016, 0.00013832000000000427, 0.00013837499999999614, 0.00013855599999999801, 0.00013776299999999908, 0.00013787500000000258, 0.00013829200000000513, 0.000137652000000002, 0.00013794500000000043, 0.0001381390000000024, 0.00013808299999999718, 0.00013777799999999812, 0.00013787499999999564, 0.00013847300000000007, 0.0001379170000000013, 0.0001384170000000018, 0.0001384720000000006, 0.00013831899999999786, 0.00013779099999999822, 0.0001384720000000006]</msg>
<status status="PASS" starttime="20201030 18:29:42.044" endtime="20201030 18:29:42.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.032" endtime="20201030 18:29:42.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:42.061" endtime="20201030 18:29:42.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.055" endtime="20201030 18:29:42.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.052" endtime="20201030 18:29:42.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.543" endtime="20201030 18:29:42.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.542" endtime="20201030 18:29:42.087"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.111" endtime="20201030 18:29:42.135"></status>
</kw>
<msg timestamp="20201030 18:29:42.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.108" endtime="20201030 18:29:42.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.138" endtime="20201030 18:29:42.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.145" endtime="20201030 18:29:42.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.100" endtime="20201030 18:29:42.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.094" endtime="20201030 18:29:42.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.169" endtime="20201030 18:29:42.518"></status>
</kw>
<msg timestamp="20201030 18:29:42.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042712389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042851653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.165" endtime="20201030 18:29:42.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042712389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042851653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.527" endtime="20201030 18:29:42.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.546" endtime="20201030 18:29:42.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.158" endtime="20201030 18:29:42.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.153" endtime="20201030 18:29:42.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:42.563" level="INFO">${RESULT} = [{'diff': 0.00013926400000000005}, {'diff': 0.00013919500000000168}, {'diff': 0.0001391940000000022}, {'diff': 0.0001395840000000051}, {'diff': 0.00013891600000000282}, {'diff': 0.00013856999999999758...</msg>
<status status="PASS" starttime="20201030 18:29:42.555" endtime="20201030 18:29:42.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:42.574" level="INFO">${ACCURACY} = {'diff': [0.00013926400000000005, 0.00013919500000000168, 0.0001391940000000022, 0.0001395840000000051, 0.00013891600000000282, 0.00013856999999999758, 0.00013933400000000484, 0.0001388060000000052, 0...</msg>
<status status="PASS" starttime="20201030 18:29:42.566" endtime="20201030 18:29:42.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.585" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 18:29:42.583" endtime="20201030 18:29:42.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.591" level="INFO">VALUE: [0.00013926400000000005, 0.00013919500000000168, 0.0001391940000000022, 0.0001395840000000051, 0.00013891600000000282, 0.00013856999999999758, 0.00013933400000000484, 0.0001388060000000052, 0.00013906900000000555, 0.0001390689999999986, 0.0001392919999999992, 0.00013947199999999466, 0.00013931899999999886, 0.00013913899999999646, 0.00013890299999999578, 0.00013919399999999527, 0.00013848600000000016, 0.00013872200000000084, 0.00013880599999999826, 0.00013876399999999955, 0.00013943099999999542, 0.00013926300000000058, 0.00013923600000000091, 0.00013893000000000238, 0.00013923600000000091, 0.0001390139999999998, 0.00013870800000000127, 0.00013886099999999707, 0.0001386799999999952, 0.00013883299999999793, 0.00013933300000000537, 0.00013888900000000315, 0.00013887499999999664, 0.0001389170000000023, 0.00013879099999999922, 0.00013887500000000358, 0.00013922200000000134, 0.00013887499999999664, 0.0001392219999999944, 0.00013933300000000537, 0.00013888900000000315, 0.00013863800000000343, 0.0001392370000000004, 0.00013956999999999858, 0.00013909699999999775, 0.00013952799999999987, 0.00013954199999999944, 0.00013887500000000358, 0.0001386810000000016, 0.0001391390000000034]</msg>
<status status="PASS" starttime="20201030 18:29:42.588" endtime="20201030 18:29:42.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.576" endtime="20201030 18:29:42.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:42.603" endtime="20201030 18:29:42.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.599" endtime="20201030 18:29:42.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.596" endtime="20201030 18:29:42.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.089" endtime="20201030 18:29:42.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.088" endtime="20201030 18:29:42.629"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.652" endtime="20201030 18:29:42.675"></status>
</kw>
<msg timestamp="20201030 18:29:42.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.649" endtime="20201030 18:29:42.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.679" endtime="20201030 18:29:42.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.685" endtime="20201030 18:29:42.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.641" endtime="20201030 18:29:42.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.635" endtime="20201030 18:29:42.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.709" endtime="20201030 18:29:43.058"></status>
</kw>
<msg timestamp="20201030 18:29:43.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040824653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040965014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.706" endtime="20201030 18:29:43.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040824653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040965014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.068" endtime="20201030 18:29:43.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.087" endtime="20201030 18:29:43.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.699" endtime="20201030 18:29:43.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.694" endtime="20201030 18:29:43.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:43.104" level="INFO">${RESULT} = [{'diff': 0.00014036099999999857}, {'diff': 0.00013959699999999825}, {'diff': 0.00013994399999999602}, {'diff': 0.00014023600000000191}, {'diff': 0.00014052800000000087}, {'diff': 0.000140485999999995...</msg>
<status status="PASS" starttime="20201030 18:29:43.095" endtime="20201030 18:29:43.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:43.115" level="INFO">${ACCURACY} = {'diff': [0.00014036099999999857, 0.00013959699999999825, 0.00013994399999999602, 0.00014023600000000191, 0.00014052800000000087, 0.00014048599999999523, 0.00014004199999999994, 0.00013958300000000562...</msg>
<status status="PASS" starttime="20201030 18:29:43.106" endtime="20201030 18:29:43.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.127" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 18:29:43.124" endtime="20201030 18:29:43.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.133" level="INFO">VALUE: [0.00014036099999999857, 0.00013959699999999825, 0.00013994399999999602, 0.00014023600000000191, 0.00014052800000000087, 0.00014048599999999523, 0.00014004199999999994, 0.00013958300000000562, 0.0001397089999999948, 0.00013981999999999883, 0.00014040300000000422, 0.00014020799999999584, 0.0001403889999999977, 0.00014038900000000465, 0.00014026400000000105, 0.00014005500000000004, 0.0001403050000000003, 0.00014020900000000225, 0.00014016600000000407, 0.00014025000000000148, 0.00013974999999999405, 0.00014043100000000336, 0.00014002800000000037, 0.0001405140000000013, 0.00014020800000000277, 0.0001399720000000021, 0.00013997300000000157, 0.00014041699999999685, 0.00013995799999999559, 0.00014022200000000234, 0.00013993099999999592, 0.0001400140000000008, 0.0001401249999999979, 0.0001398339999999984, 0.00014055600000000001, 0.00014037499999999814, 0.00014045800000000302, 0.0001396799999999962, 0.00013965299999999653, 0.00014047299999999513, 0.00014040299999999728, 0.0001399720000000021, 0.00013995800000000252, 0.00013993000000000339, 0.00013958300000000562, 0.000139861000000005, 0.00013959800000000466, 0.00014052799999999394, 0.00014006999999999908, 0.00014009799999999822]</msg>
<status status="PASS" starttime="20201030 18:29:43.129" endtime="20201030 18:29:43.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.117" endtime="20201030 18:29:43.136"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:43.146" endtime="20201030 18:29:43.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.142" endtime="20201030 18:29:43.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.139" endtime="20201030 18:29:43.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.631" endtime="20201030 18:29:43.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.630" endtime="20201030 18:29:43.172"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.195" endtime="20201030 18:29:43.218"></status>
</kw>
<msg timestamp="20201030 18:29:43.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.192" endtime="20201030 18:29:43.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.222" endtime="20201030 18:29:43.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.228" endtime="20201030 18:29:43.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.184" endtime="20201030 18:29:43.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.179" endtime="20201030 18:29:43.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.252" endtime="20201030 18:29:43.609"></status>
</kw>
<msg timestamp="20201030 18:29:43.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040651667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040792278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.249" endtime="20201030 18:29:43.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040651667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040792278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.618" endtime="20201030 18:29:43.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.637" endtime="20201030 18:29:43.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.241" endtime="20201030 18:29:43.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.236" endtime="20201030 18:29:43.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:43.654" level="INFO">${RESULT} = [{'diff': 0.00014061099999999882}, {'diff': 0.000141444999999997}, {'diff': 0.00014075000000000198}, {'diff': 0.00014116600000000507}, {'diff': 0.00014129100000000172}, {'diff': 0.00014095800000000352...</msg>
<status status="PASS" starttime="20201030 18:29:43.645" endtime="20201030 18:29:43.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:43.664" level="INFO">${ACCURACY} = {'diff': [0.00014061099999999882, 0.000141444999999997, 0.00014075000000000198, 0.00014116600000000507, 0.00014129100000000172, 0.00014095800000000352, 0.0001406390000000049, 0.00014151399999999537, 0...</msg>
<status status="PASS" starttime="20201030 18:29:43.656" endtime="20201030 18:29:43.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.675" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 18:29:43.672" endtime="20201030 18:29:43.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.680" level="INFO">VALUE: [0.00014061099999999882, 0.000141444999999997, 0.00014075000000000198, 0.00014116600000000507, 0.00014129100000000172, 0.00014095800000000352, 0.0001406390000000049, 0.00014151399999999537, 0.0001412089999999963, 0.00014140300000000522, 0.00014081999999999983, 0.0001410140000000018, 0.00014100000000000223, 0.00014104100000000147, 0.00014056999999999958, 0.00014105600000000051, 0.00014119500000000368, 0.00014077799999999419, 0.00014081899999999342, 0.00014093099999999692, 0.00014111099999999932, 0.00014095800000000352, 0.00014095800000000352, 0.00014140299999999828, 0.0001414590000000035, 0.00014070799999999634, 0.00014132000000000033, 0.00014087499999999864, 0.00014132000000000033, 0.0001416249999999994, 0.0001411249999999989, 0.00014136099999999957, 0.000140959000000003, 0.00014069500000000318, 0.00014125000000000248, 0.0001406810000000036, 0.00014092999999999745, 0.00014109699999999975, 0.00014133300000000043, 0.00014157000000000058, 0.00014126400000000205, 0.000140959000000003, 0.00014148599999999623, 0.00014126300000000258, 0.00014129100000000172, 0.00014066700000000404, 0.00014136199999999904, 0.00014123600000000291, 0.00014140299999999828, 0.0001412219999999964]</msg>
<status status="PASS" starttime="20201030 18:29:43.677" endtime="20201030 18:29:43.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.665" endtime="20201030 18:29:43.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:43.693" endtime="20201030 18:29:43.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.688" endtime="20201030 18:29:43.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.686" endtime="20201030 18:29:43.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.174" endtime="20201030 18:29:43.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.173" endtime="20201030 18:29:43.718"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.741" endtime="20201030 18:29:43.766"></status>
</kw>
<msg timestamp="20201030 18:29:43.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.738" endtime="20201030 18:29:43.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.770" endtime="20201030 18:29:43.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.776" endtime="20201030 18:29:43.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.730" endtime="20201030 18:29:43.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.725" endtime="20201030 18:29:43.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.800" endtime="20201030 18:29:44.150"></status>
</kw>
<msg timestamp="20201030 18:29:44.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042008458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042150653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.796" endtime="20201030 18:29:44.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042008458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042150653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.159" endtime="20201030 18:29:44.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.179" endtime="20201030 18:29:44.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.789" endtime="20201030 18:29:44.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.784" endtime="20201030 18:29:44.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:44.196" level="INFO">${RESULT} = [{'diff': 0.00014219500000000468}, {'diff': 0.00014180600000000126}, {'diff': 0.00014207000000000108}, {'diff': 0.0001416249999999994}, {'diff': 0.00014190299999999878}, {'diff': 0.0001421389999999994...</msg>
<status status="PASS" starttime="20201030 18:29:44.187" endtime="20201030 18:29:44.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:44.206" level="INFO">${ACCURACY} = {'diff': [0.00014219500000000468, 0.00014180600000000126, 0.00014207000000000108, 0.0001416249999999994, 0.00014190299999999878, 0.00014213899999999946, 0.0001415690000000011, 0.00014192999999999845, ...</msg>
<status status="PASS" starttime="20201030 18:29:44.199" endtime="20201030 18:29:44.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.217" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 18:29:44.215" endtime="20201030 18:29:44.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.222" level="INFO">VALUE: [0.00014219500000000468, 0.00014180600000000126, 0.00014207000000000108, 0.0001416249999999994, 0.00014190299999999878, 0.00014213899999999946, 0.0001415690000000011, 0.00014192999999999845, 0.00014161099999999982, 0.00014191699999999835, 0.00014186100000000007, 0.00014224999999999655, 0.00014225000000000348, 0.00014211099999999338, 0.0001421669999999986, 0.00014176400000000255, 0.00014161099999999982, 0.0001418889999999992, 0.00014247299999999713, 0.00014250000000000373, 0.000142041999999995, 0.00014194399999999802, 0.00014190300000000572, 0.0001421249999999999, 0.00014231900000000186, 0.0001416390000000059, 0.00014202800000000237, 0.00014188900000000615, 0.00014161099999999982, 0.00014231900000000186, 0.00014257000000000158, 0.00014256999999999465, 0.00014208300000000118, 0.0001420140000000028, 0.0001418889999999992, 0.00014231900000000186, 0.0001420969999999938, 0.00014173599999999648, 0.00014250000000000373, 0.00014222200000000434, 0.00014142999999999795, 0.00014226400000000305, 0.0001414590000000035, 0.0001420690000000016, 0.000142347000000001, 0.00014242999999999895, 0.00014218099999999817, 0.00014240299999999928, 0.00014220799999999784, 0.00014200000000000323]</msg>
<status status="PASS" starttime="20201030 18:29:44.219" endtime="20201030 18:29:44.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.208" endtime="20201030 18:29:44.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:44.237" endtime="20201030 18:29:44.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.231" endtime="20201030 18:29:44.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.228" endtime="20201030 18:29:44.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.720" endtime="20201030 18:29:44.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.719" endtime="20201030 18:29:44.262"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.285" endtime="20201030 18:29:44.309"></status>
</kw>
<msg timestamp="20201030 18:29:44.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.282" endtime="20201030 18:29:44.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.312" endtime="20201030 18:29:44.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.319" endtime="20201030 18:29:44.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.275" endtime="20201030 18:29:44.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.269" endtime="20201030 18:29:44.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.343" endtime="20201030 18:29:44.691"></status>
</kw>
<msg timestamp="20201030 18:29:44.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040654431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040797833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.339" endtime="20201030 18:29:44.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040654431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040797833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.701" endtime="20201030 18:29:44.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.721" endtime="20201030 18:29:44.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.332" endtime="20201030 18:29:44.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.327" endtime="20201030 18:29:44.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:44.742" level="INFO">${RESULT} = [{'diff': 0.0001434020000000008}, {'diff': 0.00014281900000000236}, {'diff': 0.00014259800000000072}, {'diff': 0.0001429999999999973}, {'diff': 0.00014295799999999859}, {'diff': 0.00014281899999999542...</msg>
<status status="PASS" starttime="20201030 18:29:44.732" endtime="20201030 18:29:44.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:44.755" level="INFO">${ACCURACY} = {'diff': [0.0001434020000000008, 0.00014281900000000236, 0.00014259800000000072, 0.0001429999999999973, 0.00014295799999999859, 0.00014281899999999542, 0.00014348600000000516, 0.00014290299999999978, ...</msg>
<status status="PASS" starttime="20201030 18:29:44.744" endtime="20201030 18:29:44.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.770" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 18:29:44.766" endtime="20201030 18:29:44.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.778" level="INFO">VALUE: [0.0001434020000000008, 0.00014281900000000236, 0.00014259800000000072, 0.0001429999999999973, 0.00014295799999999859, 0.00014281899999999542, 0.00014348600000000516, 0.00014290299999999978, 0.00014261100000000082, 0.00014265299999999953, 0.0001432219999999984, 0.00014297199999999816, 0.0001433749999999942, 0.00014263899999999996, 0.00014318099999999917, 0.0001433340000000019, 0.00014295799999999859, 0.00014286100000000107, 0.00014318099999999917, 0.00014337500000000114, 0.0001430549999999961, 0.00014325000000000448, 0.00014257000000000158, 0.00014338800000000124, 0.00014293100000000586, 0.00014326399999999712, 0.00014337500000000114, 0.00014263899999999996, 0.00014286100000000107, 0.00014259800000000072, 0.0001426799999999992, 0.00014304200000000294, 0.0001429999999999973, 0.00014284800000000097, 0.00014345799999999909, 0.0001429449999999985, 0.00014330499999999635, 0.00014347300000000507, 0.00014330600000000276, 0.00014341699999999985, 0.00014309800000000122, 0.00014319399999999927, 0.00014300000000000423, 0.00014345799999999909, 0.000143444999999999, 0.0001424999999999968, 0.0001433879999999943, 0.00014341699999999985, 0.00014345799999999909, 0.0001425690000000021]</msg>
<status status="PASS" starttime="20201030 18:29:44.774" endtime="20201030 18:29:44.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.758" endtime="20201030 18:29:44.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:44.796" endtime="20201030 18:29:44.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.790" endtime="20201030 18:29:44.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.785" endtime="20201030 18:29:44.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.264" endtime="20201030 18:29:44.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.263" endtime="20201030 18:29:44.822"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.845" endtime="20201030 18:29:44.869"></status>
</kw>
<msg timestamp="20201030 18:29:44.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.842" endtime="20201030 18:29:44.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.872" endtime="20201030 18:29:44.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.878" endtime="20201030 18:29:44.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.834" endtime="20201030 18:29:44.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.828" endtime="20201030 18:29:44.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.902" endtime="20201030 18:29:45.252"></status>
</kw>
<msg timestamp="20201030 18:29:45.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041145611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041289653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.899" endtime="20201030 18:29:45.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041145611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041289653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:45.262" endtime="20201030 18:29:45.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.281" endtime="20201030 18:29:45.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.892" endtime="20201030 18:29:45.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.887" endtime="20201030 18:29:45.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:45.298" level="INFO">${RESULT} = [{'diff': 0.00014404200000000394}, {'diff': 0.00014402699999999796}, {'diff': 0.0001445549999999976}, {'diff': 0.00014373599999999848}, {'diff': 0.00014400000000000523}, {'diff': 0.0001443469999999960...</msg>
<status status="PASS" starttime="20201030 18:29:45.289" endtime="20201030 18:29:45.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:45.310" level="INFO">${ACCURACY} = {'diff': [0.00014404200000000394, 0.00014402699999999796, 0.0001445549999999976, 0.00014373599999999848, 0.00014400000000000523, 0.00014434699999999606, 0.00014431900000000386, 0.00014374999999999805,...</msg>
<status status="PASS" starttime="20201030 18:29:45.301" endtime="20201030 18:29:45.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.321" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 18:29:45.318" endtime="20201030 18:29:45.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.326" level="INFO">VALUE: [0.00014404200000000394, 0.00014402699999999796, 0.0001445549999999976, 0.00014373599999999848, 0.00014400000000000523, 0.00014434699999999606, 0.00014431900000000386, 0.00014374999999999805, 0.0001436250000000014, 0.00014426399999999812, 0.00014429199999999726, 0.00014359700000000225, 0.00014451399999999837, 0.00014383399999999547, 0.00014448600000000617, 0.00014400000000000523, 0.0001438050000000038, 0.00014397199999999916, 0.00014402699999999796, 0.00014395899999999906, 0.00014368099999999967, 0.0001443340000000029, 0.00014426299999999864, 0.00014441700000000085, 0.00014374999999999805, 0.00014398599999999873, 0.0001436670000000001, 0.00014387500000000164, 0.00014426399999999812, 0.00014411099999999538, 0.00014438800000000224, 0.00014397199999999916, 0.0001436250000000014, 0.00014354099999999703, 0.00014404099999999753, 0.00014402699999999796, 0.00014436099999999563, 0.00014419499999999974, 0.0001443329999999965, 0.0001442920000000042, 0.00014443100000000042, 0.00014438899999999477, 0.00014387500000000164, 0.00014427799999999769, 0.00014411100000000232, 0.00014397199999999916, 0.00014359799999999479, 0.00014451399999999837, 0.00014395800000000653, 0.00014419400000000027]</msg>
<status status="PASS" starttime="20201030 18:29:45.323" endtime="20201030 18:29:45.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.311" endtime="20201030 18:29:45.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:45.339" endtime="20201030 18:29:45.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.335" endtime="20201030 18:29:45.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.332" endtime="20201030 18:29:45.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.824" endtime="20201030 18:29:45.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.823" endtime="20201030 18:29:45.365"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.388" endtime="20201030 18:29:45.411"></status>
</kw>
<msg timestamp="20201030 18:29:45.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.385" endtime="20201030 18:29:45.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.415" endtime="20201030 18:29:45.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.421" endtime="20201030 18:29:45.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.377" endtime="20201030 18:29:45.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.371" endtime="20201030 18:29:45.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.445" endtime="20201030 18:29:45.797"></status>
</kw>
<msg timestamp="20201030 18:29:45.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040636819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040782014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:45.442" endtime="20201030 18:29:45.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040636819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040782014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:45.806" endtime="20201030 18:29:45.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.825" endtime="20201030 18:29:45.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.434" endtime="20201030 18:29:45.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.430" endtime="20201030 18:29:45.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:45.843" level="INFO">${RESULT} = [{'diff': 0.00014519500000000074}, {'diff': 0.00014541700000000185}, {'diff': 0.00014519500000000074}, {'diff': 0.0001453890000000027}, {'diff': 0.00014517999999999476}, {'diff': 0.0001455409999999990...</msg>
<status status="PASS" starttime="20201030 18:29:45.834" endtime="20201030 18:29:45.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:45.852" level="INFO">${ACCURACY} = {'diff': [0.00014519500000000074, 0.00014541700000000185, 0.00014519500000000074, 0.0001453890000000027, 0.00014517999999999476, 0.00014554099999999903, 0.00014540299999999534, 0.00014526400000000605,...</msg>
<status status="PASS" starttime="20201030 18:29:45.845" endtime="20201030 18:29:45.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.863" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 18:29:45.861" endtime="20201030 18:29:45.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.869" level="INFO">VALUE: [0.00014519500000000074, 0.00014541700000000185, 0.00014519500000000074, 0.0001453890000000027, 0.00014517999999999476, 0.00014554099999999903, 0.00014540299999999534, 0.00014526400000000605, 0.00014497200000000016, 0.00014534799999999654, 0.00014502799999999844, 0.00014523599999999998, 0.0001450969999999968, 0.00014498599999999973, 0.00014541600000000238, 0.00014511100000000332, 0.000145347000000004, 0.0001451670000000016, 0.00014497299999999963, 0.0001455419999999985, 0.00014541700000000185, 0.00014456899999999717, 0.00014466600000000163, 0.00014479099999999828, 0.00014501399999999887, 0.00014433300000000343, 0.00014463900000000196, 0.00014524999999999955, 0.00014524999999999955, 0.00014530599999999783, 0.00014526399999999912, 0.00014529199999999826, 0.00014526399999999912, 0.0001454999999999998, 0.00014541700000000185, 0.00014490300000000178, 0.00014541700000000185, 0.00014462499999999545, 0.00014473699999999895, 0.0001454999999999998, 0.00014469400000000077, 0.00014469399999999383, 0.00014476400000000555, 0.0001446800000000012, 0.0001448879999999958, 0.00014524999999999955, 0.00014504100000000547, 0.000145429999999995, 0.00014509700000000375, 0.00014537500000000314]</msg>
<status status="PASS" starttime="20201030 18:29:45.866" endtime="20201030 18:29:45.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.854" endtime="20201030 18:29:45.872"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:45.882" endtime="20201030 18:29:45.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.877" endtime="20201030 18:29:45.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.875" endtime="20201030 18:29:45.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.367" endtime="20201030 18:29:45.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.366" endtime="20201030 18:29:45.907"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.930" endtime="20201030 18:29:45.955"></status>
</kw>
<msg timestamp="20201030 18:29:45.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.927" endtime="20201030 18:29:45.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.959" endtime="20201030 18:29:45.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.965" endtime="20201030 18:29:45.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.919" endtime="20201030 18:29:45.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.914" endtime="20201030 18:29:45.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.989" endtime="20201030 18:29:46.342"></status>
</kw>
<msg timestamp="20201030 18:29:46.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042181944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042328278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:45.985" endtime="20201030 18:29:46.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042181944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042328278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:46.351" endtime="20201030 18:29:46.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.370" endtime="20201030 18:29:46.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.978" endtime="20201030 18:29:46.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.973" endtime="20201030 18:29:46.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:46.388" level="INFO">${RESULT} = [{'diff': 0.00014633399999999797}, {'diff': 0.0001459169999999954}, {'diff': 0.00014640299999999634}, {'diff': 0.0001459580000000016}, {'diff': 0.00014602699999999996}, {'diff': 0.00014640300000000328...</msg>
<status status="PASS" starttime="20201030 18:29:46.379" endtime="20201030 18:29:46.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:46.397" level="INFO">${ACCURACY} = {'diff': [0.00014633399999999797, 0.0001459169999999954, 0.00014640299999999634, 0.0001459580000000016, 0.00014602699999999996, 0.00014640300000000328, 0.00014586100000000407, 0.0001459580000000016, 0...</msg>
<status status="PASS" starttime="20201030 18:29:46.390" endtime="20201030 18:29:46.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.408" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 18:29:46.406" endtime="20201030 18:29:46.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.413" level="INFO">VALUE: [0.00014633399999999797, 0.0001459169999999954, 0.00014640299999999634, 0.0001459580000000016, 0.00014602699999999996, 0.00014640300000000328, 0.00014586100000000407, 0.0001459580000000016, 0.00014612499999999695, 0.00014648600000000123, 0.00014630599999999883, 0.00014629199999999926, 0.00014612499999999695, 0.00014623600000000098, 0.00014575000000000005, 0.0001461529999999961, 0.00014591700000000235, 0.00014630499999999935, 0.00014644399999999558, 0.00014634699999999806, 0.00014661099999999788, 0.00014594400000000202, 0.00014641599999999644, 0.0001465549999999996, 0.00014590299999999584, 0.00014555599999999808, 0.0001455969999999973, 0.00014580499999999885, 0.00014565200000000306, 0.0001458890000000032, 0.00014618100000000217, 0.00014554099999999903, 0.00014619400000000227, 0.0001464870000000007, 0.00014641599999999644, 0.00014636099999999763, 0.00014594399999999508, 0.00014563900000000296, 0.00014581899999999842, 0.00014636099999999763, 0.0001464859999999943, 0.00014648600000000123, 0.00014602799999999944, 0.00014643100000000242, 0.000146445000000002, 0.00014577799999999919, 0.00014582000000000483, 0.00014640300000000328, 0.00014575000000000005, 0.0001459450000000015]</msg>
<status status="PASS" starttime="20201030 18:29:46.410" endtime="20201030 18:29:46.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.399" endtime="20201030 18:29:46.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:46.428" endtime="20201030 18:29:46.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.422" endtime="20201030 18:29:46.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.419" endtime="20201030 18:29:46.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.909" endtime="20201030 18:29:46.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.908" endtime="20201030 18:29:46.454"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.477" endtime="20201030 18:29:46.499"></status>
</kw>
<msg timestamp="20201030 18:29:46.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:46.474" endtime="20201030 18:29:46.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:46.502" endtime="20201030 18:29:46.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.508" endtime="20201030 18:29:46.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.466" endtime="20201030 18:29:46.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.461" endtime="20201030 18:29:46.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.532" endtime="20201030 18:29:46.865"></status>
</kw>
<msg timestamp="20201030 18:29:46.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04136925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041516389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:46.528" endtime="20201030 18:29:46.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04136925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041516389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:46.875" endtime="20201030 18:29:46.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.893" endtime="20201030 18:29:46.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.521" endtime="20201030 18:29:46.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.516" endtime="20201030 18:29:46.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:46.910" level="INFO">${RESULT} = [{'diff': 0.00014713899999999752}, {'diff': 0.0001466949999999953}, {'diff': 0.0001475550000000006}, {'diff': 0.0001476250000000054}, {'diff': 0.00014752700000000146}, {'diff': 0.00014715199999999762}...</msg>
<status status="PASS" starttime="20201030 18:29:46.901" endtime="20201030 18:29:46.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:46.921" level="INFO">${ACCURACY} = {'diff': [0.00014713899999999752, 0.0001466949999999953, 0.0001475550000000006, 0.0001476250000000054, 0.00014752700000000146, 0.00014715199999999762, 0.0001474580000000031, 0.0001469859999999948, 0.0...</msg>
<status status="PASS" starttime="20201030 18:29:46.912" endtime="20201030 18:29:46.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.931" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 18:29:46.929" endtime="20201030 18:29:46.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:46.937" level="INFO">VALUE: [0.00014713899999999752, 0.0001466949999999953, 0.0001475550000000006, 0.0001476250000000054, 0.00014752700000000146, 0.00014715199999999762, 0.0001474580000000031, 0.0001469859999999948, 0.0001475420000000005, 0.0001472090000000023, 0.00014691700000000335, 0.00014681900000000636, 0.0001469450000000025, 0.0001466250000000044, 0.00014719399999999633, 0.0001470000000000013, 0.00014744400000000352, 0.0001470550000000001, 0.0001474729999999952, 0.00014705599999999958, 0.00014668100000000267, 0.00014673600000000148, 0.00014693000000000345, 0.0001473749999999982, 0.00014704100000000053, 0.00014673600000000148, 0.00014679199999999976, 0.00014747200000000266, 0.00014706899999999967, 0.00014695799999999565, 0.00014751400000000137, 0.00014722300000000188, 0.00014744400000000352, 0.0001470000000000013, 0.0001472499999999946, 0.000146736999999994, 0.00014661199999999736, 0.00014666699999999616, 0.0001468050000000068, 0.0001473890000000047, 0.00014713899999999752, 0.00014670800000000234, 0.00014676400000000062, 0.00014693099999999598, 0.00014745900000000256, 0.00014686100000000507, 0.0001475000000000018, 0.00014672300000000138, 0.00014675000000000105, 0.00014736099999999863]</msg>
<status status="PASS" starttime="20201030 18:29:46.934" endtime="20201030 18:29:46.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.922" endtime="20201030 18:29:46.940"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:46.949" endtime="20201030 18:29:46.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.945" endtime="20201030 18:29:46.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.942" endtime="20201030 18:29:46.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.456" endtime="20201030 18:29:46.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.455" endtime="20201030 18:29:46.974"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:46.997" endtime="20201030 18:29:47.018"></status>
</kw>
<msg timestamp="20201030 18:29:47.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:46.993" endtime="20201030 18:29:47.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:47.022" endtime="20201030 18:29:47.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.028" endtime="20201030 18:29:47.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.986" endtime="20201030 18:29:47.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.981" endtime="20201030 18:29:47.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.051" endtime="20201030 18:29:47.387"></status>
</kw>
<msg timestamp="20201030 18:29:47.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039649292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039797028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:47.048" endtime="20201030 18:29:47.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039649292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039797028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:47.396" endtime="20201030 18:29:47.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.414" endtime="20201030 18:29:47.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.041" endtime="20201030 18:29:47.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.036" endtime="20201030 18:29:47.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:47.432" level="INFO">${RESULT} = [{'diff': 0.00014773599999999554}, {'diff': 0.00014761099999999888}, {'diff': 0.00014837500000000614}, {'diff': 0.00014793099999999698}, {'diff': 0.00014798600000000273}, {'diff': 0.000148054999999994...</msg>
<status status="PASS" starttime="20201030 18:29:47.423" endtime="20201030 18:29:47.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:47.442" level="INFO">${ACCURACY} = {'diff': [0.00014773599999999554, 0.00014761099999999888, 0.00014837500000000614, 0.00014793099999999698, 0.00014798600000000273, 0.00014805499999999416, 0.00014805600000000058, 0.0001480000000000023,...</msg>
<status status="PASS" starttime="20201030 18:29:47.434" endtime="20201030 18:29:47.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.453" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 18:29:47.451" endtime="20201030 18:29:47.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.459" level="INFO">VALUE: [0.00014773599999999554, 0.00014761099999999888, 0.00014837500000000614, 0.00014793099999999698, 0.00014798600000000273, 0.00014805499999999416, 0.00014805600000000058, 0.0001480000000000023, 0.00014804100000000153, 0.00014777699999999477, 0.00014838899999999877, 0.00014793100000000392, 0.0001477499999999951, 0.00014788899999999827, 0.00014761099999999888, 0.00014831900000000092, 0.0001483200000000004, 0.0001476529999999976, 0.00014813899999999852, 0.0001481529999999981, 0.00014856900000000117, 0.00014794399999999708, 0.0001479299999999975, 0.0001485420000000015, 0.0001482220000000034, 0.00014812499999999895, 0.00014755600000000008, 0.00014834700000000006, 0.00014804199999999407, 0.0001483330000000005, 0.0001479169999999974, 0.00014820800000000384, 0.00014780600000000033, 0.00014823599999999604, 0.00014836099999999963, 0.0001481529999999981, 0.00014806900000000067, 0.00014838899999999877, 0.00014818099999999723, 0.00014805600000000058, 0.00014804199999999407, 0.00014795899999999612, 0.00014793099999999698, 0.00014786099999999913, 0.0001478199999999999, 0.00014765200000000506, 0.0001482369999999955, 0.00014777800000000119, 0.00014852800000000194, 0.0001479450000000035]</msg>
<status status="PASS" starttime="20201030 18:29:47.456" endtime="20201030 18:29:47.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.444" endtime="20201030 18:29:47.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:47.471" endtime="20201030 18:29:47.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.467" endtime="20201030 18:29:47.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.464" endtime="20201030 18:29:47.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.976" endtime="20201030 18:29:47.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:46.975" endtime="20201030 18:29:47.496"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.519" endtime="20201030 18:29:47.541"></status>
</kw>
<msg timestamp="20201030 18:29:47.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:47.515" endtime="20201030 18:29:47.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:47.544" endtime="20201030 18:29:47.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.551" endtime="20201030 18:29:47.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.508" endtime="20201030 18:29:47.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.503" endtime="20201030 18:29:47.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.577" endtime="20201030 18:29:47.915"></status>
</kw>
<msg timestamp="20201030 18:29:47.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039608833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039757958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:47.572" endtime="20201030 18:29:47.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039608833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039757958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:47.924" endtime="20201030 18:29:47.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.943" endtime="20201030 18:29:47.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.563" endtime="20201030 18:29:47.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.559" endtime="20201030 18:29:47.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:47.960" level="INFO">${RESULT} = [{'diff': 0.00014912499999999995}, {'diff': 0.00014883400000000047}, {'diff': 0.0001486949999999973}, {'diff': 0.00014919399999999833}, {'diff': 0.0001492079999999979}, {'diff': 0.00014923599999999704...</msg>
<status status="PASS" starttime="20201030 18:29:47.951" endtime="20201030 18:29:47.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:47.969" level="INFO">${ACCURACY} = {'diff': [0.00014912499999999995, 0.00014883400000000047, 0.0001486949999999973, 0.00014919399999999833, 0.0001492079999999979, 0.00014923599999999704, 0.00014958400000000122, 0.00014870800000000434, ...</msg>
<status status="PASS" starttime="20201030 18:29:47.962" endtime="20201030 18:29:47.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.980" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 18:29:47.977" endtime="20201030 18:29:47.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.985" level="INFO">VALUE: [0.00014912499999999995, 0.00014883400000000047, 0.0001486949999999973, 0.00014919399999999833, 0.0001492079999999979, 0.00014923599999999704, 0.00014958400000000122, 0.00014870800000000434, 0.00014879200000000176, 0.00014949999999999686, 0.00014955600000000208, 0.00014904100000000253, 0.00014894499999999755, 0.00014879200000000176, 0.00014926400000000312, 0.00014847200000000366, 0.00014949999999999686, 0.00014911100000000038, 0.000149527999999996, 0.00014863899999999902, 0.00014923599999999704, 0.0001491529999999991, 0.0001492770000000032, 0.00014931900000000192, 0.00014875000000000305, 0.0001489450000000045, 0.00014956899999999523, 0.0001494169999999989, 0.00014945799999999815, 0.00014862499999999945, 0.00014859799999999979, 0.00014944499999999805, 0.00014926399999999618, 0.00014863899999999902, 0.00014957000000000165, 0.0001490970000000008, 0.00014936100000000063, 0.00014930500000000235, 0.00014856900000000117, 0.0001490970000000008, 0.00014922199999999747, 0.00014945900000000456, 0.00014877800000000219, 0.0001495420000000025, 0.00014858300000000074, 0.00014912499999999995, 0.00014851399999999543, 0.0001494859999999973, 0.00014891599999999894, 0.00014922199999999747]</msg>
<status status="PASS" starttime="20201030 18:29:47.982" endtime="20201030 18:29:47.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.970" endtime="20201030 18:29:47.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:47.997" endtime="20201030 18:29:48.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.993" endtime="20201030 18:29:48.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.991" endtime="20201030 18:29:48.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.498" endtime="20201030 18:29:48.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.497" endtime="20201030 18:29:48.023"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.045" endtime="20201030 18:29:48.068"></status>
</kw>
<msg timestamp="20201030 18:29:48.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.042" endtime="20201030 18:29:48.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.071" endtime="20201030 18:29:48.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.078" endtime="20201030 18:29:48.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.035" endtime="20201030 18:29:48.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.029" endtime="20201030 18:29:48.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.101" endtime="20201030 18:29:48.437"></status>
</kw>
<msg timestamp="20201030 18:29:48.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041208278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041357833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.098" endtime="20201030 18:29:48.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041208278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041357833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.446" endtime="20201030 18:29:48.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.465" endtime="20201030 18:29:48.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.091" endtime="20201030 18:29:48.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.086" endtime="20201030 18:29:48.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:48.482" level="INFO">${RESULT} = [{'diff': 0.00014955499999999566}, {'diff': 0.00015020899999999837}, {'diff': 0.0001503609999999947}, {'diff': 0.00014979199999999582}, {'diff': 0.00015045799999999915}, {'diff': 0.0001503330000000025...</msg>
<status status="PASS" starttime="20201030 18:29:48.473" endtime="20201030 18:29:48.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:48.491" level="INFO">${ACCURACY} = {'diff': [0.00014955499999999566, 0.00015020899999999837, 0.0001503609999999947, 0.00014979199999999582, 0.00015045799999999915, 0.0001503330000000025, 0.0001503620000000011, 0.0001502079999999989, 0....</msg>
<status status="PASS" starttime="20201030 18:29:48.484" endtime="20201030 18:29:48.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.502" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 18:29:48.500" endtime="20201030 18:29:48.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.507" level="INFO">VALUE: [0.00014955499999999566, 0.00015020899999999837, 0.0001503609999999947, 0.00014979199999999582, 0.00015045799999999915, 0.0001503330000000025, 0.0001503620000000011, 0.0001502079999999989, 0.00014994499999999855, 0.00014977799999999625, 0.00014952699999999652, 0.00015044499999999905, 0.00014984699999999462, 0.00015023700000000445, 0.00014965200000000012, 0.0001499580000000056, 0.00015044399999999958, 0.0001502499999999976, 0.00015018099999999923, 0.00015051399999999743, 0.00015034699999999512, 0.00014976400000000362, 0.00015001399999999693, 0.0001501530000000001, 0.0001501660000000002, 0.0001500970000000018, 0.0001500970000000018, 0.00015029099999999684, 0.00015023599999999804, 0.00015022299999999794, 0.00014986100000000113, 0.00014994399999999908, 0.00015008300000000224, 0.00015034800000000154, 0.0001502499999999976, 0.00015026399999999718, 0.0001500970000000018, 0.00014962500000000045, 0.0001503750000000012, 0.00015022199999999847, 0.0001500000000000043, 0.00015030600000000283, 0.00015031999999999546, 0.00015051400000000437, 0.00014984700000000156, 0.00015011099999999444, 0.00015044399999999958, 0.00015002800000000344, 0.00014955600000000208, 0.00014954199999999557]</msg>
<status status="PASS" starttime="20201030 18:29:48.504" endtime="20201030 18:29:48.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.493" endtime="20201030 18:29:48.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:48.525" endtime="20201030 18:29:48.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.515" endtime="20201030 18:29:48.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.513" endtime="20201030 18:29:48.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.025" endtime="20201030 18:29:48.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.023" endtime="20201030 18:29:48.551"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.573" endtime="20201030 18:29:48.595"></status>
</kw>
<msg timestamp="20201030 18:29:48.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.570" endtime="20201030 18:29:48.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.598" endtime="20201030 18:29:48.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.604" endtime="20201030 18:29:48.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.563" endtime="20201030 18:29:48.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.557" endtime="20201030 18:29:48.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.628" endtime="20201030 18:29:48.962"></status>
</kw>
<msg timestamp="20201030 18:29:48.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039578167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039728764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.624" endtime="20201030 18:29:48.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039578167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039728764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.971" endtime="20201030 18:29:48.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.989" endtime="20201030 18:29:48.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.617" endtime="20201030 18:29:48.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.612" endtime="20201030 18:29:48.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:49.006" level="INFO">${RESULT} = [{'diff': 0.0001505970000000023}, {'diff': 0.00015122199999999947}, {'diff': 0.00015102699999999802}, {'diff': 0.000151430000000001}, {'diff': 0.00015077699999999777}, {'diff': 0.0001513750000000022},...</msg>
<status status="PASS" starttime="20201030 18:29:48.998" endtime="20201030 18:29:49.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:49.017" level="INFO">${ACCURACY} = {'diff': [0.0001505970000000023, 0.00015122199999999947, 0.00015102699999999802, 0.000151430000000001, 0.00015077699999999777, 0.0001513750000000022, 0.00015058300000000274, 0.0001505829999999958, 0.0...</msg>
<status status="PASS" starttime="20201030 18:29:49.008" endtime="20201030 18:29:49.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.028" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 18:29:49.025" endtime="20201030 18:29:49.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.033" level="INFO">VALUE: [0.0001505970000000023, 0.00015122199999999947, 0.00015102699999999802, 0.000151430000000001, 0.00015077699999999777, 0.0001513750000000022, 0.00015058300000000274, 0.0001505829999999958, 0.00015070800000000634, 0.00015081900000000342, 0.00015111099999999544, 0.00015122199999999947, 0.00015120800000000684, 0.000151430000000001, 0.00015118100000000023, 0.00015063900000000102, 0.00015119400000000033, 0.0001506249999999945, 0.00015149999999999886, 0.0001507079999999994, 0.00015105499999999716, 0.0001507079999999994, 0.00015151399999999843, 0.00015133400000000297, 0.00015144500000000005, 0.00015122199999999947, 0.00015047199999999872, 0.00015073599999999854, 0.00015123599999999904, 0.00015125000000000555, 0.00015140300000000134, 0.00015086100000000213, 0.0001508059999999964, 0.00015151399999999843, 0.00015138899999999483, 0.0001510279999999975, 0.0001508200000000029, 0.00015137499999999526, 0.00015062500000000145, 0.0001512499999999986, 0.00015062500000000145, 0.00015130499999999741, 0.00015133400000000297, 0.00015127799999999775, 0.0001511949999999998, 0.00015068099999999973, 0.00015106900000000367, 0.00015130499999999741, 0.00015101399999999793, 0.00015106899999999673]</msg>
<status status="PASS" starttime="20201030 18:29:49.030" endtime="20201030 18:29:49.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.018" endtime="20201030 18:29:49.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:49.045" endtime="20201030 18:29:49.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.041" endtime="20201030 18:29:49.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.039" endtime="20201030 18:29:49.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.553" endtime="20201030 18:29:49.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.551" endtime="20201030 18:29:49.070"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.093" endtime="20201030 18:29:49.114"></status>
</kw>
<msg timestamp="20201030 18:29:49.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.089" endtime="20201030 18:29:49.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.118" endtime="20201030 18:29:49.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.124" endtime="20201030 18:29:49.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.082" endtime="20201030 18:29:49.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.077" endtime="20201030 18:29:49.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.147" endtime="20201030 18:29:49.482"></status>
</kw>
<msg timestamp="20201030 18:29:49.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039434278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039586083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:49.144" endtime="20201030 18:29:49.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039434278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039586083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:49.491" endtime="20201030 18:29:49.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.510" endtime="20201030 18:29:49.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.137" endtime="20201030 18:29:49.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.132" endtime="20201030 18:29:49.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:49.527" level="INFO">${RESULT} = [{'diff': 0.00015180499999999791}, {'diff': 0.00015188900000000227}, {'diff': 0.00015249999999999986}, {'diff': 0.00015206899999999773}, {'diff': 0.000152527999999999}, {'diff': 0.000152527999999999},...</msg>
<status status="PASS" starttime="20201030 18:29:49.518" endtime="20201030 18:29:49.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:49.537" level="INFO">${ACCURACY} = {'diff': [0.00015180499999999791, 0.00015188900000000227, 0.00015249999999999986, 0.00015206899999999773, 0.000152527999999999, 0.000152527999999999, 0.0001523200000000044, 0.00015163800000000255, 0.0...</msg>
<status status="PASS" starttime="20201030 18:29:49.529" endtime="20201030 18:29:49.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.548" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 18:29:49.546" endtime="20201030 18:29:49.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.554" level="INFO">VALUE: [0.00015180499999999791, 0.00015188900000000227, 0.00015249999999999986, 0.00015206899999999773, 0.000152527999999999, 0.000152527999999999, 0.0001523200000000044, 0.00015163800000000255, 0.00015177699999999877, 0.00015176399999999868, 0.00015222200000000047, 0.00015199999999999936, 0.0001516660000000017, 0.000151833000000004, 0.00015173599999999954, 0.00015247200000000072, 0.00015236100000000363, 0.0001522780000000057, 0.0001522499999999996, 0.00015234699999999712, 0.00015213899999999558, 0.00015238899999999583, 0.00015205599999999764, 0.00015154199999999757, 0.00015229199999999832, 0.0001515970000000033, 0.00015233299999999755, 0.00015184699999999662, 0.00015193100000000098, 0.00015229099999999884, 0.00015162500000000245, 0.0001519170000000014, 0.00015169400000000083, 0.00015240300000000234, 0.0001522080000000009, 0.0001523609999999967, 0.00015168000000000126, 0.00015227799999999875, 0.0001524029999999954, 0.0001521530000000021, 0.0001523200000000044, 0.0001519029999999949, 0.000152527999999999, 0.000152042000000005, 0.0001520279999999985, 0.00015240300000000234, 0.00015163900000000202, 0.0001515420000000045, 0.00015237499999999626, 0.00015155599999999714]</msg>
<status status="PASS" starttime="20201030 18:29:49.551" endtime="20201030 18:29:49.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.539" endtime="20201030 18:29:49.557"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:49.566" endtime="20201030 18:29:49.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.562" endtime="20201030 18:29:49.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.559" endtime="20201030 18:29:49.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.072" endtime="20201030 18:29:49.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.071" endtime="20201030 18:29:49.591"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.613" endtime="20201030 18:29:49.635"></status>
</kw>
<msg timestamp="20201030 18:29:49.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.610" endtime="20201030 18:29:49.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.638" endtime="20201030 18:29:49.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.645" endtime="20201030 18:29:49.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.603" endtime="20201030 18:29:49.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.597" endtime="20201030 18:29:49.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.668" endtime="20201030 18:29:50.006"></status>
</kw>
<msg timestamp="20201030 18:29:50.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039333042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039486639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:49.664" endtime="20201030 18:29:50.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039333042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039486639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:50.015" endtime="20201030 18:29:50.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.034" endtime="20201030 18:29:50.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.657" endtime="20201030 18:29:50.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.653" endtime="20201030 18:29:50.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:50.051" level="INFO">${RESULT} = [{'diff': 0.00015359699999999837}, {'diff': 0.0001535699999999987}, {'diff': 0.00015305499999999916}, {'diff': 0.0001532630000000007}, {'diff': 0.00015344500000000205}, {'diff': 0.0001530279999999995}...</msg>
<status status="PASS" starttime="20201030 18:29:50.042" endtime="20201030 18:29:50.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:50.060" level="INFO">${ACCURACY} = {'diff': [0.00015359699999999837, 0.0001535699999999987, 0.00015305499999999916, 0.0001532630000000007, 0.00015344500000000205, 0.0001530279999999995, 0.0001529860000000008, 0.00015283299999999805, 0....</msg>
<status status="PASS" starttime="20201030 18:29:50.053" endtime="20201030 18:29:50.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.070" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 18:29:50.068" endtime="20201030 18:29:50.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.076" level="INFO">VALUE: [0.00015359699999999837, 0.0001535699999999987, 0.00015305499999999916, 0.0001532630000000007, 0.00015344500000000205, 0.0001530279999999995, 0.0001529860000000008, 0.00015283299999999805, 0.00015294400000000208, 0.00015308400000000472, 0.00015293099999999504, 0.00015262500000000345, 0.00015295800000000165, 0.00015356899999999923, 0.00015284699999999762, 0.00015313899999999658, 0.00015359800000000479, 0.00015304199999999907, 0.0001527080000000014, 0.00015265299999999565, 0.00015308399999999778, 0.00015293100000000198, 0.00015293099999999504, 0.00015290300000000284, 0.0001533609999999977, 0.00015295800000000165, 0.0001524860000000003, 0.00015337499999999726, 0.00015326400000000018, 0.0001528059999999984, 0.0001530829999999983, 0.00015322199999999453, 0.00015291699999999547, 0.00015283399999999753, 0.00015284699999999762, 0.00015347200000000172, 0.0001534029999999964, 0.00015319499999999486, 0.0001534170000000029, 0.00015344400000000258, 0.00015308300000000524, 0.0001527780000000062, 0.00015355600000000608, 0.00015293099999999504, 0.0001529300000000025, 0.0001529860000000008, 0.0001528059999999984, 0.00015322300000000094, 0.00015347200000000172, 0.0001526809999999948]</msg>
<status status="PASS" starttime="20201030 18:29:50.073" endtime="20201030 18:29:50.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.061" endtime="20201030 18:29:50.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:50.095" endtime="20201030 18:29:50.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.090" endtime="20201030 18:29:50.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.088" endtime="20201030 18:29:50.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.593" endtime="20201030 18:29:50.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.592" endtime="20201030 18:29:50.120"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.142" endtime="20201030 18:29:50.166"></status>
</kw>
<msg timestamp="20201030 18:29:50.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:50.139" endtime="20201030 18:29:50.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:50.169" endtime="20201030 18:29:50.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.175" endtime="20201030 18:29:50.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.132" endtime="20201030 18:29:50.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.126" endtime="20201030 18:29:50.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.199" endtime="20201030 18:29:50.534"></status>
</kw>
<msg timestamp="20201030 18:29:50.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041122694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041276917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:50.195" endtime="20201030 18:29:50.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041122694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041276917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:50.543" endtime="20201030 18:29:50.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.562" endtime="20201030 18:29:50.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.188" endtime="20201030 18:29:50.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.183" endtime="20201030 18:29:50.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:50.579" level="INFO">${RESULT} = [{'diff': 0.00015422300000000194}, {'diff': 0.00015438899999999783}, {'diff': 0.0001543479999999986}, {'diff': 0.00015447200000000272}, {'diff': 0.00015433299999999955}, {'diff': 0.0001541390000000045...</msg>
<status status="PASS" starttime="20201030 18:29:50.570" endtime="20201030 18:29:50.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:50.591" level="INFO">${ACCURACY} = {'diff': [0.00015422300000000194, 0.00015438899999999783, 0.0001543479999999986, 0.00015447200000000272, 0.00015433299999999955, 0.00015413900000000452, 0.0001540829999999993, 0.00015434699999999912, ...</msg>
<status status="PASS" starttime="20201030 18:29:50.582" endtime="20201030 18:29:50.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.602" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 18:29:50.600" endtime="20201030 18:29:50.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.607" level="INFO">VALUE: [0.00015422300000000194, 0.00015438899999999783, 0.0001543479999999986, 0.00015447200000000272, 0.00015433299999999955, 0.00015413900000000452, 0.0001540829999999993, 0.00015434699999999912, 0.0001538750000000047, 0.00015366699999999622, 0.00015443099999999654, 0.00015438899999999783, 0.00015363899999999708, 0.0001544860000000023, 0.00015423600000000204, 0.00015451400000000143, 0.00015412499999999801, 0.00015356899999999923, 0.0001544029999999974, 0.00015404200000000007, 0.00015450000000000186, 0.00015418100000000323, 0.00015444399999999664, 0.0001537080000000024, 0.00015384699999999862, 0.0001540280000000005, 0.00015437499999999826, 0.00015372200000000197, 0.000154528000000001, 0.0001537500000000011, 0.00015402700000000102, 0.00015434699999999912, 0.00015455600000000014, 0.00015451400000000143, 0.00015405599999999964, 0.00015411099999999844, 0.00015441600000000444, 0.0001540280000000005, 0.00015455600000000014, 0.00015430500000000041, 0.00015427800000000075, 0.00015405500000000016, 0.00015413900000000452, 0.00015366700000000316, 0.00015427800000000075, 0.00015373600000000154, 0.0001542359999999951, 0.0001537779999999933, 0.0001540829999999993, 0.00015412499999999801]</msg>
<status status="PASS" starttime="20201030 18:29:50.604" endtime="20201030 18:29:50.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.593" endtime="20201030 18:29:50.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:50.621" endtime="20201030 18:29:50.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.615" endtime="20201030 18:29:50.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.613" endtime="20201030 18:29:50.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.122" endtime="20201030 18:29:50.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.121" endtime="20201030 18:29:50.646"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.669" endtime="20201030 18:29:50.691"></status>
</kw>
<msg timestamp="20201030 18:29:50.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:50.666" endtime="20201030 18:29:50.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:50.694" endtime="20201030 18:29:50.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.701" endtime="20201030 18:29:50.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.659" endtime="20201030 18:29:50.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.653" endtime="20201030 18:29:50.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.724" endtime="20201030 18:29:51.058"></status>
</kw>
<msg timestamp="20201030 18:29:51.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039649111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039804125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:50.721" endtime="20201030 18:29:51.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039649111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039804125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:51.068" endtime="20201030 18:29:51.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.086" endtime="20201030 18:29:51.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.713" endtime="20201030 18:29:51.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.709" endtime="20201030 18:29:51.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:51.103" level="INFO">${RESULT} = [{'diff': 0.00015501400000000193}, {'diff': 0.0001554579999999972}, {'diff': 0.00015519400000000433}, {'diff': 0.00015488899999999833}, {'diff': 0.00015530500000000141}, {'diff': 0.0001550830000000003...</msg>
<status status="PASS" starttime="20201030 18:29:51.094" endtime="20201030 18:29:51.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:51.113" level="INFO">${ACCURACY} = {'diff': [0.00015501400000000193, 0.0001554579999999972, 0.00015519400000000433, 0.00015488899999999833, 0.00015530500000000141, 0.0001550830000000003, 0.00015537499999999926, 0.00015494399999999714, ...</msg>
<status status="PASS" starttime="20201030 18:29:51.105" endtime="20201030 18:29:51.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.124" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 18:29:51.122" endtime="20201030 18:29:51.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.129" level="INFO">VALUE: [0.00015501400000000193, 0.0001554579999999972, 0.00015519400000000433, 0.00015488899999999833, 0.00015530500000000141, 0.0001550830000000003, 0.00015537499999999926, 0.00015494399999999714, 0.00015527699999999534, 0.00015530500000000141, 0.00015509699999999987, 0.00015536100000000663, 0.00015515299999999815, 0.00015498599999999585, 0.00015511099999999944, 0.0001552909999999949, 0.00015532000000000046, 0.00015481999999999996, 0.0001550410000000016, 0.00015515299999999815, 0.0001547229999999955, 0.00015538899999999883, 0.00015458399999999928, 0.00015527800000000175, 0.00015523600000000304, 0.00015545899999999668, 0.00015524999999999567, 0.00015488899999999833, 0.00015527800000000175, 0.00015542999999999807, 0.00015551400000000243, 0.00015462499999999851, 0.00015534699999999318, 0.0001549300000000045, 0.00015523600000000304, 0.00015461099999999894, 0.00015529199999999438, 0.00015504200000000107, 0.0001548060000000004, 0.00015483300000000005, 0.00015463900000000502, 0.00015461099999999894, 0.00015470899999999593, 0.0001552359999999961, 0.00015462500000000545, 0.00015516699999999772, 0.0001549170000000044, 0.00015472199999999603, 0.00015531900000000098, 0.0001548609999999992]</msg>
<status status="PASS" starttime="20201030 18:29:51.126" endtime="20201030 18:29:51.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.115" endtime="20201030 18:29:51.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:51.142" endtime="20201030 18:29:51.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.138" endtime="20201030 18:29:51.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.135" endtime="20201030 18:29:51.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.649" endtime="20201030 18:29:51.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.647" endtime="20201030 18:29:51.167"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.190" endtime="20201030 18:29:51.212"></status>
</kw>
<msg timestamp="20201030 18:29:51.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.186" endtime="20201030 18:29:51.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.215" endtime="20201030 18:29:51.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.221" endtime="20201030 18:29:51.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.179" endtime="20201030 18:29:51.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.173" endtime="20201030 18:29:51.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.244" endtime="20201030 18:29:51.578"></status>
</kw>
<msg timestamp="20201030 18:29:51.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039572847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039728653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:51.241" endtime="20201030 18:29:51.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039572847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039728653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:51.587" endtime="20201030 18:29:51.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.605" endtime="20201030 18:29:51.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.234" endtime="20201030 18:29:51.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.229" endtime="20201030 18:29:51.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:51.622" level="INFO">${RESULT} = [{'diff': 0.0001558060000000014}, {'diff': 0.00015608400000000078}, {'diff': 0.00015600000000000336}, {'diff': 0.0001556809999999978}, {'diff': 0.00015637500000000026}, {'diff': 0.0001558339999999936}...</msg>
<status status="PASS" starttime="20201030 18:29:51.614" endtime="20201030 18:29:51.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:51.633" level="INFO">${ACCURACY} = {'diff': [0.0001558060000000014, 0.00015608400000000078, 0.00015600000000000336, 0.0001556809999999978, 0.00015637500000000026, 0.0001558339999999936, 0.00015561099999999994, 0.000156528000000003, 0.0...</msg>
<status status="PASS" starttime="20201030 18:29:51.625" endtime="20201030 18:29:51.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.644" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 18:29:51.642" endtime="20201030 18:29:51.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.650" level="INFO">VALUE: [0.0001558060000000014, 0.00015608400000000078, 0.00015600000000000336, 0.0001556809999999978, 0.00015637500000000026, 0.0001558339999999936, 0.00015561099999999994, 0.000156528000000003, 0.00015592999999999857, 0.0001562359999999971, 0.00015562499999999951, 0.0001563610000000007, 0.00015595899999999718, 0.00015597199999999728, 0.00015570900000000387, 0.00015600000000000336, 0.00015605600000000164, 0.00015563899999999908, 0.000156430000000006, 0.00015556900000000123, 0.0001560410000000026, 0.00015559700000000037, 0.00015619400000000533, 0.00015652799999999606, 0.0001556530000000056, 0.00015566699999999822, 0.00015633300000000155, 0.00015588899999999933, 0.00015605500000000216, 0.0001561939999999984, 0.00015566699999999822, 0.00015556900000000123, 0.00015549999999999592, 0.00015606900000000173, 0.0001564029999999994, 0.00015583300000000105, 0.0001562779999999958, 0.00015572200000000397, 0.00015609800000000035, 0.00015620900000000437, 0.00015598599999999685, 0.00015654200000000257, 0.00015574999999999617, 0.00015590199999999943, 0.0001555830000000008, 0.00015638899999999983, 0.00015566699999999822, 0.0001560700000000012, 0.00015593099999999804, 0.00015601400000000293]</msg>
<status status="PASS" starttime="20201030 18:29:51.646" endtime="20201030 18:29:51.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.635" endtime="20201030 18:29:51.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:51.662" endtime="20201030 18:29:51.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.658" endtime="20201030 18:29:51.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.655" endtime="20201030 18:29:51.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.169" endtime="20201030 18:29:51.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.168" endtime="20201030 18:29:51.687"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.710" endtime="20201030 18:29:51.732"></status>
</kw>
<msg timestamp="20201030 18:29:51.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.706" endtime="20201030 18:29:51.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.735" endtime="20201030 18:29:51.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.741" endtime="20201030 18:29:51.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.699" endtime="20201030 18:29:51.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.693" endtime="20201030 18:29:51.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.764" endtime="20201030 18:29:52.101"></status>
</kw>
<msg timestamp="20201030 18:29:52.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039554153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039711361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:51.761" endtime="20201030 18:29:52.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039554153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039711361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:52.110" endtime="20201030 18:29:52.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.128" endtime="20201030 18:29:52.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.754" endtime="20201030 18:29:52.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.749" endtime="20201030 18:29:52.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:52.145" level="INFO">${RESULT} = [{'diff': 0.00015720799999999896}, {'diff': 0.000157222999999998}, {'diff': 0.00015695800000000565}, {'diff': 0.0001570559999999957}, {'diff': 0.00015677800000000325}, {'diff': 0.0001568610000000012},...</msg>
<status status="PASS" starttime="20201030 18:29:52.137" endtime="20201030 18:29:52.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:52.154" level="INFO">${ACCURACY} = {'diff': [0.00015720799999999896, 0.000157222999999998, 0.00015695800000000565, 0.0001570559999999957, 0.00015677800000000325, 0.0001568610000000012, 0.0001575139999999975, 0.00015763900000000108, 0.0...</msg>
<status status="PASS" starttime="20201030 18:29:52.147" endtime="20201030 18:29:52.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.165" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 18:29:52.163" endtime="20201030 18:29:52.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.170" level="INFO">VALUE: [0.00015720799999999896, 0.000157222999999998, 0.00015695800000000565, 0.0001570559999999957, 0.00015677800000000325, 0.0001568610000000012, 0.0001575139999999975, 0.00015763900000000108, 0.0001575830000000028, 0.00015759700000000237, 0.00015758299999999587, 0.000157610999999995, 0.00015661100000000094, 0.0001572500000000046, 0.00015663900000000008, 0.00015748599999999835, 0.00015729200000000332, 0.00015677800000000325, 0.00015648599999999735, 0.00015748599999999835, 0.00015658400000000128, 0.00015733299999999562, 0.00015661100000000094, 0.00015708299999999537, 0.00015665299999999965, 0.0001567359999999976, 0.00015702699999999709, 0.00015722199999999853, 0.00015755600000000314, 0.00015683400000000153, 0.0001567359999999976, 0.00015670799999999846, 0.0001575559999999962, 0.00015715300000000015, 0.00015755499999999673, 0.0001574860000000053, 0.00015724999999999767, 0.0001569449999999986, 0.00015665299999999965, 0.00015684699999999469, 0.00015738800000000136, 0.0001570410000000036, 0.0001572359999999981, 0.00015681900000000248, 0.00015722200000000547, 0.00015713900000000058, 0.00015758299999999587, 0.00015679200000000282, 0.0001569029999999999, 0.0001575559999999962]</msg>
<status status="PASS" starttime="20201030 18:29:52.167" endtime="20201030 18:29:52.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.156" endtime="20201030 18:29:52.173"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:52.183" endtime="20201030 18:29:52.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.178" endtime="20201030 18:29:52.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.176" endtime="20201030 18:29:52.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.689" endtime="20201030 18:29:52.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.688" endtime="20201030 18:29:52.207"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.230" endtime="20201030 18:29:52.255"></status>
</kw>
<msg timestamp="20201030 18:29:52.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.227" endtime="20201030 18:29:52.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.258" endtime="20201030 18:29:52.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.265" endtime="20201030 18:29:52.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.220" endtime="20201030 18:29:52.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.214" endtime="20201030 18:29:52.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.288" endtime="20201030 18:29:52.634"></status>
</kw>
<msg timestamp="20201030 18:29:52.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040862361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041020653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:52.284" endtime="20201030 18:29:52.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040862361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041020653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:52.643" endtime="20201030 18:29:52.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.661" endtime="20201030 18:29:52.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.277" endtime="20201030 18:29:52.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.273" endtime="20201030 18:29:52.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:52.678" level="INFO">${RESULT} = [{'diff': 0.00015829199999999738}, {'diff': 0.0001583339999999961}, {'diff': 0.00015854099999999816}, {'diff': 0.00015797199999999928}, {'diff': 0.00015770899999999893}, {'diff': 0.0001576250000000015...</msg>
<status status="PASS" starttime="20201030 18:29:52.670" endtime="20201030 18:29:52.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:52.687" level="INFO">${ACCURACY} = {'diff': [0.00015829199999999738, 0.0001583339999999961, 0.00015854099999999816, 0.00015797199999999928, 0.00015770899999999893, 0.00015762500000000151, 0.0001584580000000002, 0.00015856900000000423, ...</msg>
<status status="PASS" starttime="20201030 18:29:52.680" endtime="20201030 18:29:52.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.698" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 18:29:52.696" endtime="20201030 18:29:52.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.703" level="INFO">VALUE: [0.00015829199999999738, 0.0001583339999999961, 0.00015854099999999816, 0.00015797199999999928, 0.00015770899999999893, 0.00015762500000000151, 0.0001584580000000002, 0.00015856900000000423, 0.00015799999999999842, 0.00015834799999999566, 0.00015791700000000047, 0.00015831899999999705, 0.00015851400000000543, 0.00015855500000000466, 0.00015804099999999766, 0.0001580280000000045, 0.00015776399999999774, 0.00015841700000000097, 0.0001583889999999949, 0.00015765300000000065, 0.00015770899999999893, 0.0001578889999999944, 0.00015849999999999892, 0.00015820799999999996, 0.0001581109999999955, 0.000158013999999998, 0.0001579449999999996, 0.00015783300000000305, 0.00015812500000000201, 0.00015751299999999802, 0.00015766700000000022, 0.00015845899999999968, 0.00015797299999999875, 0.00015768000000000032, 0.00015781900000000348, 0.00015827700000000527, 0.00015854199999999763, 0.00015799999999999842, 0.00015818000000000082, 0.00015770799999999946, 0.00015797199999999928, 0.00015812500000000201, 0.00015823699999999857, 0.00015852699999999859, 0.0001585689999999973, 0.00015822199999999953, 0.00015826400000000518, 0.00015770799999999946, 0.00015808299999999637, 0.00015793100000000004]</msg>
<status status="PASS" starttime="20201030 18:29:52.700" endtime="20201030 18:29:52.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.689" endtime="20201030 18:29:52.706"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:52.717" endtime="20201030 18:29:52.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.711" endtime="20201030 18:29:52.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.709" endtime="20201030 18:29:52.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.210" endtime="20201030 18:29:52.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.208" endtime="20201030 18:29:52.742"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.768" endtime="20201030 18:29:52.793"></status>
</kw>
<msg timestamp="20201030 18:29:52.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.762" endtime="20201030 18:29:52.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.797" endtime="20201030 18:29:52.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.805" endtime="20201030 18:29:52.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.754" endtime="20201030 18:29:52.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.749" endtime="20201030 18:29:52.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.838" endtime="20201030 18:29:53.224"></status>
</kw>
<msg timestamp="20201030 18:29:53.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044234403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044393278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:52.831" endtime="20201030 18:29:53.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044234403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044393278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:53.234" endtime="20201030 18:29:53.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.252" endtime="20201030 18:29:53.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.820" endtime="20201030 18:29:53.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.815" endtime="20201030 18:29:53.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:53.269" level="INFO">${RESULT} = [{'diff': 0.00015887500000000276}, {'diff': 0.0001586810000000008}, {'diff': 0.00015884700000000362}, {'diff': 0.000159401999999996}, {'diff': 0.00015863900000000208}, {'diff': 0.00015861100000000294}...</msg>
<status status="PASS" starttime="20201030 18:29:53.260" endtime="20201030 18:29:53.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:53.279" level="INFO">${ACCURACY} = {'diff': [0.00015887500000000276, 0.0001586810000000008, 0.00015884700000000362, 0.000159401999999996, 0.00015863900000000208, 0.00015861100000000294, 0.00015890200000000243, 0.00015936099999999676, 0...</msg>
<status status="PASS" starttime="20201030 18:29:53.271" endtime="20201030 18:29:53.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.290" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 18:29:53.288" endtime="20201030 18:29:53.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.295" level="INFO">VALUE: [0.00015887500000000276, 0.0001586810000000008, 0.00015884700000000362, 0.000159401999999996, 0.00015863900000000208, 0.00015861100000000294, 0.00015890200000000243, 0.00015936099999999676, 0.00015894500000000061, 0.00015927699999999934, 0.000158528000000005, 0.000159223, 0.00015912499999999608, 0.00015924999999999967, 0.00015918000000000182, 0.0001593889999999959, 0.00015938900000000283, 0.00015932000000000446, 0.0001596659999999958, 0.00015936099999999676, 0.00015940200000000293, 0.00015929199999999838, 0.00015943100000000154, 0.00015952699999999959, 0.0001587359999999996, 0.00015887500000000276, 0.00015865300000000165, 0.00015916699999999478, 0.0001593889999999959, 0.0001595559999999982, 0.00015883299999999712, 0.0001592360000000001, 0.00015962499999999658, 0.00015948600000000035, 0.000158610999999996, 0.0001591810000000013, 0.0001588889999999954, 0.00015912500000000301, 0.00015874999999999917, 0.00015887500000000276, 0.0001593610000000037, 0.00015859699999999644, 0.000159528000000006, 0.00015933299999999762, 0.00015948600000000035, 0.00015943000000000207, 0.00015931899999999805, 0.00015865200000000218, 0.00015893000000000157, 0.00015949999999999992]</msg>
<status status="PASS" starttime="20201030 18:29:53.292" endtime="20201030 18:29:53.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.281" endtime="20201030 18:29:53.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:53.307" endtime="20201030 18:29:53.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.303" endtime="20201030 18:29:53.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.301" endtime="20201030 18:29:53.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.744" endtime="20201030 18:29:53.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.743" endtime="20201030 18:29:53.332"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.355" endtime="20201030 18:29:53.379"></status>
</kw>
<msg timestamp="20201030 18:29:53.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.352" endtime="20201030 18:29:53.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.382" endtime="20201030 18:29:53.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.388" endtime="20201030 18:29:53.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.344" endtime="20201030 18:29:53.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.339" endtime="20201030 18:29:53.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.411" endtime="20201030 18:29:53.770"></status>
</kw>
<msg timestamp="20201030 18:29:53.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039344944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039505111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:53.408" endtime="20201030 18:29:53.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039344944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039505111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:53.780" endtime="20201030 18:29:53.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.798" endtime="20201030 18:29:53.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.401" endtime="20201030 18:29:53.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.396" endtime="20201030 18:29:53.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:53.815" level="INFO">${RESULT} = [{'diff': 0.00016016700000000272}, {'diff': 0.00016048600000000135}, {'diff': 0.00016058299999999887}, {'diff': 0.00015986200000000367}, {'diff': 0.00016013899999999665}, {'diff': 0.000159708000000001...</msg>
<status status="PASS" starttime="20201030 18:29:53.806" endtime="20201030 18:29:53.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:53.830" level="INFO">${ACCURACY} = {'diff': [0.00016016700000000272, 0.00016048600000000135, 0.00016058299999999887, 0.00015986200000000367, 0.00016013899999999665, 0.00015970800000000146, 0.00016005600000000564, 0.00016036200000000417...</msg>
<status status="PASS" starttime="20201030 18:29:53.817" endtime="20201030 18:29:53.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.840" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 18:29:53.838" endtime="20201030 18:29:53.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.846" level="INFO">VALUE: [0.00016016700000000272, 0.00016048600000000135, 0.00016058299999999887, 0.00015986200000000367, 0.00016013899999999665, 0.00015970800000000146, 0.00016005600000000564, 0.00016036200000000417, 0.00016005499999999923, 0.00016005500000000616, 0.00015966700000000222, 0.00016001300000000052, 0.000159610999999997, 0.00016056999999999877, 0.00016034700000000512, 0.00016034699999999819, 0.00016047300000000125, 0.00016032000000000546, 0.00016034699999999819, 0.00016033299999999862, 0.00015976399999999974, 0.00016054199999999963, 0.0001605689999999993, 0.0001597360000000006, 0.00015963899999999615, 0.00016012499999999708, 0.00015981899999999855, 0.0001601659999999963, 0.00016045900000000168, 0.00015970800000000146, 0.00016050000000000092, 0.00016037500000000426, 0.00016044500000000211, 0.00015994500000000161, 0.000159610999999997, 0.00016024999999999373, 0.00016058299999999887, 0.00016020900000000143, 0.00015991599999999606, 0.00015976399999999974, 0.0001602360000000011, 0.00015966700000000222, 0.00016052800000000006, 0.00016019500000000186, 0.00015973700000000007, 0.00015986099999999726, 0.00016031999999999852, 0.00015966700000000222, 0.00015975000000000017, 0.00016036200000000417]</msg>
<status status="PASS" starttime="20201030 18:29:53.843" endtime="20201030 18:29:53.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.831" endtime="20201030 18:29:53.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:53.858" endtime="20201030 18:29:53.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.854" endtime="20201030 18:29:53.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.851" endtime="20201030 18:29:53.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.334" endtime="20201030 18:29:53.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.333" endtime="20201030 18:29:53.886"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.910" endtime="20201030 18:29:53.935"></status>
</kw>
<msg timestamp="20201030 18:29:53.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.906" endtime="20201030 18:29:53.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.938" endtime="20201030 18:29:53.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.944" endtime="20201030 18:29:53.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.899" endtime="20201030 18:29:53.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.893" endtime="20201030 18:29:53.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.967" endtime="20201030 18:29:54.318"></status>
</kw>
<msg timestamp="20201030 18:29:54.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044732958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044894389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:53.964" endtime="20201030 18:29:54.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044732958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044894389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:54.327" endtime="20201030 18:29:54.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.346" endtime="20201030 18:29:54.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.957" endtime="20201030 18:29:54.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.952" endtime="20201030 18:29:54.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:54.363" level="INFO">${RESULT} = [{'diff': 0.0001614309999999966}, {'diff': 0.00016081899999999955}, {'diff': 0.0001611109999999985}, {'diff': 0.00016159699999999944}, {'diff': 0.0001615560000000002}, {'diff': 0.0001612360000000021},...</msg>
<status status="PASS" starttime="20201030 18:29:54.354" endtime="20201030 18:29:54.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:54.372" level="INFO">${ACCURACY} = {'diff': [0.0001614309999999966, 0.00016081899999999955, 0.0001611109999999985, 0.00016159699999999944, 0.0001615560000000002, 0.0001612360000000021, 0.00016144400000000364, 0.00016122200000000253, 0....</msg>
<status status="PASS" starttime="20201030 18:29:54.365" endtime="20201030 18:29:54.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.382" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 18:29:54.380" endtime="20201030 18:29:54.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.388" level="INFO">VALUE: [0.0001614309999999966, 0.00016081899999999955, 0.0001611109999999985, 0.00016159699999999944, 0.0001615560000000002, 0.0001612360000000021, 0.00016144400000000364, 0.00016122200000000253, 0.00016115199999999774, 0.0001612910000000009, 0.00016130500000000048, 0.00016070800000000246, 0.0001615560000000002, 0.00016161199999999848, 0.00016098700000000132, 0.00016126300000000177, 0.00016129200000000038, 0.00016142999999999713, 0.0001609439999999962, 0.00016084699999999869, 0.00016129200000000038, 0.00016137499999999833, 0.00016158299999999987, 0.00016065299999999672, 0.00016147300000000225, 0.00016123599999999516, 0.00016059800000000485, 0.00016076400000000074, 0.00016133299999999962, 0.00016118099999999635, 0.00016134699999999919, 0.00016127700000000134, 0.00016066600000000375, 0.00016074999999999423, 0.00016155500000000073, 0.00016063899999999715, 0.0001607780000000003, 0.00016102800000000056, 0.0001615140000000015, 0.00016069500000000236, 0.00016075000000000117, 0.00016097200000000228, 0.00016054100000000016, 0.00016059699999999844, 0.00016141699999999704, 0.00016162499999999858, 0.00016131900000000005, 0.00016131999999999952, 0.00016144500000000311, 0.00016158299999999987]</msg>
<status status="PASS" starttime="20201030 18:29:54.385" endtime="20201030 18:29:54.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.373" endtime="20201030 18:29:54.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:54.400" endtime="20201030 18:29:54.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.396" endtime="20201030 18:29:54.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.393" endtime="20201030 18:29:54.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.889" endtime="20201030 18:29:54.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.887" endtime="20201030 18:29:54.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.685" endtime="20201030 18:29:54.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:54.435" endtime="20201030 18:29:54.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.431" endtime="20201030 18:29:54.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.428" endtime="20201030 18:29:54.460"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:00.560" endtime="20201030 18:29:54.460" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:28:04.411" endtime="20201030 18:29:54.469"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.612" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:29:54.628" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:29:56.629" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:29:54.608" endtime="20201030 18:29:56.630"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.636" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 18:29:56.633" endtime="20201030 18:29:56.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.605" endtime="20201030 18:29:56.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:56.643" endtime="20201030 18:29:56.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.640" endtime="20201030 18:29:56.972"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.001" endtime="20201030 18:29:57.017"></status>
</kw>
<msg timestamp="20201030 18:29:57.018" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.998" endtime="20201030 18:29:57.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.025" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.021" endtime="20201030 18:29:57.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.033" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:57.027" endtime="20201030 18:29:57.034"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:56.991" endtime="20201030 18:29:57.035"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:56.986" endtime="20201030 18:29:57.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.983" endtime="20201030 18:29:57.038"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:57.046" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:57.044" endtime="20201030 18:29:57.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.040" endtime="20201030 18:29:57.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.982" endtime="20201030 18:29:57.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.980" endtime="20201030 18:29:57.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.049" endtime="20201030 18:29:57.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.977" endtime="20201030 18:29:57.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.057" endtime="20201030 18:29:57.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.973" endtime="20201030 18:29:57.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.602" endtime="20201030 18:29:57.063"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:57.076" endtime="20201030 18:29:57.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.072" endtime="20201030 18:29:57.099"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.132" endtime="20201030 18:29:57.147"></status>
</kw>
<msg timestamp="20201030 18:29:57.149" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.129" endtime="20201030 18:29:57.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.155" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.151" endtime="20201030 18:29:57.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.162" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:57.157" endtime="20201030 18:29:57.162"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:57.122" endtime="20201030 18:29:57.164"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:57.115" endtime="20201030 18:29:57.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.113" endtime="20201030 18:29:57.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:57.174" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:57.173" endtime="20201030 18:29:57.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.168" endtime="20201030 18:29:57.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.111" endtime="20201030 18:29:57.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.109" endtime="20201030 18:29:57.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.179" endtime="20201030 18:29:57.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.105" endtime="20201030 18:29:57.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.101" endtime="20201030 18:29:57.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.070" endtime="20201030 18:29:57.186"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.208" endtime="20201030 18:30:03.345"></status>
</kw>
<msg timestamp="20201030 18:30:03.346" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.204" endtime="20201030 18:30:03.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.352" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.348" endtime="20201030 18:30:03.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.354" endtime="20201030 18:30:03.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.197" endtime="20201030 18:30:03.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.192" endtime="20201030 18:30:03.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:03.368" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 18:30:03.363" endtime="20201030 18:30:03.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.378" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:03.375" endtime="20201030 18:30:03.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.382" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:03.380" endtime="20201030 18:30:03.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.370" endtime="20201030 18:30:03.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.394" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:03.392" endtime="20201030 18:30:03.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.398" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:03.396" endtime="20201030 18:30:03.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.386" endtime="20201030 18:30:03.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.410" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:03.408" endtime="20201030 18:30:03.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.415" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 18:30:03.413" endtime="20201030 18:30:03.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.402" endtime="20201030 18:30:03.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.433" endtime="20201030 18:30:03.791"></status>
</kw>
<msg timestamp="20201030 18:30:03.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.122921361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.223259861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.430" endtime="20201030 18:30:03.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.122921361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.223259861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.800" endtime="20201030 18:30:03.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.818" endtime="20201030 18:30:03.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.423" endtime="20201030 18:30:03.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.418" endtime="20201030 18:30:03.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:03.836" level="INFO">${FILTERED} = [{'diff': 0.1003385}, {'diff': 0.100281444}, {'diff': 0.10025962500000002}, {'diff': 0.10026784699999997}, {'diff': 0.10027444399999996}, {'diff': 0.10026923700000001}, {'diff': 0.100268417}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:30:03.827" endtime="20201030 18:30:03.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:03.846" level="INFO">${RESULT} = {'diff': [0.1003385, 0.100281444, 0.10025962500000002, 0.10026784699999997, 0.10027444399999996, 0.10026923700000001, 0.100268417, 0.100272264, 0.10027745799999999, 0.10027672200000004, 0.100258930999...</msg>
<status status="PASS" starttime="20201030 18:30:03.839" endtime="20201030 18:30:03.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.856" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:03.854" endtime="20201030 18:30:03.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.861" level="INFO">VALUE: [0.1003385, 0.100281444, 0.10025962500000002, 0.10026784699999997, 0.10027444399999996, 0.10026923700000001, 0.100268417, 0.100272264, 0.10027745799999999, 0.10027672200000004, 0.10025893099999994, 0.10027288899999998, 0.10027094400000003, 0.100269889, 0.10026615299999997, 0.10026704099999995, 0.10026397200000003, 0.10027247299999997, 0.10026790299999977, 0.10026955499999968, 0.10026938899999971, 0.10026916699999999, 0.10026793099999987, 0.10027206999999994, 0.10027558300000017, 0.10025872199999997, 0.1002625690000003, 0.10026527800000018, 0.10026486099999987, 0.10026452700000021, 0.10026091699999995, 0.10024993100000001, 0.100261084, 0.10026459700000023, 0.10026355500000017, 0.10026493100000033, 0.10025870899999978, 0.10025534700000005, 0.10025056899999951, 0.10025305500000048, 0.10026472200000036, 0.10025745800000063, 0.10025948700000065, 0.10025765299999989, 0.10026045800000016, 0.1002566379999994, 0.10025772200000027, 0.10025120800000042, 0.10026812500000037, 0.10026551399999928, 0.10025683299999955]</msg>
<status status="PASS" starttime="20201030 18:30:03.859" endtime="20201030 18:30:03.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.848" endtime="20201030 18:30:03.865"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:03.874" endtime="20201030 18:30:03.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.870" endtime="20201030 18:30:03.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.867" endtime="20201030 18:30:03.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.188" endtime="20201030 18:30:03.899"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:57.064" endtime="20201030 18:30:03.900" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:03.916" endtime="20201030 18:30:03.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.912" endtime="20201030 18:30:03.940"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.974" endtime="20201030 18:30:03.990"></status>
</kw>
<msg timestamp="20201030 18:30:03.991" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.971" endtime="20201030 18:30:03.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.998" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.994" endtime="20201030 18:30:03.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.006" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:04.001" endtime="20201030 18:30:04.007"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:03.963" endtime="20201030 18:30:04.009"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:03.955" endtime="20201030 18:30:04.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.953" endtime="20201030 18:30:04.011"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:04.020" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:04.019" endtime="20201030 18:30:04.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.013" endtime="20201030 18:30:04.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.951" endtime="20201030 18:30:04.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.949" endtime="20201030 18:30:04.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.025" endtime="20201030 18:30:04.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.945" endtime="20201030 18:30:04.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.941" endtime="20201030 18:30:04.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.910" endtime="20201030 18:30:04.033"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.057" endtime="20201030 18:30:10.196"></status>
</kw>
<msg timestamp="20201030 18:30:10.197" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.053" endtime="20201030 18:30:10.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.203" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.199" endtime="20201030 18:30:10.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.206" endtime="20201030 18:30:10.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.046" endtime="20201030 18:30:10.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.040" endtime="20201030 18:30:10.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:10.218" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 18:30:10.214" endtime="20201030 18:30:10.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.229" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:10.226" endtime="20201030 18:30:10.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.233" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:10.231" endtime="20201030 18:30:10.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.220" endtime="20201030 18:30:10.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.245" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:10.243" endtime="20201030 18:30:10.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.249" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:10.247" endtime="20201030 18:30:10.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.237" endtime="20201030 18:30:10.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.261" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:10.259" endtime="20201030 18:30:10.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.266" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 18:30:10.263" endtime="20201030 18:30:10.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.253" endtime="20201030 18:30:10.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.287" endtime="20201030 18:30:10.647"></status>
</kw>
<msg timestamp="20201030 18:30:10.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131625458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.231956028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:10.283" endtime="20201030 18:30:10.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131625458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.231956028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:10.656" endtime="20201030 18:30:10.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.674" endtime="20201030 18:30:10.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.274" endtime="20201030 18:30:10.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.269" endtime="20201030 18:30:10.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:10.691" level="INFO">${FILTERED} = [{'diff': 0.10033057000000001}, {'diff': 0.10058344499999997}, {'diff': 0.09995674999999998}, {'diff': 0.10027401300000005}, {'diff': 0.100268111}, {'diff': 0.10027129099999998}, {'diff': 0.1002757079...</msg>
<status status="PASS" starttime="20201030 18:30:10.682" endtime="20201030 18:30:10.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:10.700" level="INFO">${RESULT} = {'diff': [0.10033057000000001, 0.10058344499999997, 0.09995674999999998, 0.10027401300000005, 0.100268111, 0.10027129099999998, 0.10027570799999996, 0.10026870899999996, 0.10026230599999997, 0.1002659...</msg>
<status status="PASS" starttime="20201030 18:30:10.693" endtime="20201030 18:30:10.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.710" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:10.708" endtime="20201030 18:30:10.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.715" level="INFO">VALUE: [0.10033057000000001, 0.10058344499999997, 0.09995674999999998, 0.10027401300000005, 0.100268111, 0.10027129099999998, 0.10027570799999996, 0.10026870899999996, 0.10026230599999997, 0.10026598599999992, 0.1002620139999999, 0.10025811100000004, 0.10025993099999986, 0.10026363900000002, 0.10028516700000001, 0.10026936099999983, 0.10026676400000012, 0.10027845800000001, 0.100277014, 0.10028633300000012, 0.100273375, 0.10025419500000021, 0.10027306899999999, 0.10028316700000017, 0.10027794499999976, 0.10028466700000038, 0.10027601399999986, 0.10026343099999968, 0.10027418100000007, 0.10028295899999984, 0.10028695799999987, 0.10028504199999988, 0.10027474999999964, 0.10027973600000006, 0.10028425000000007, 0.10027095899999994, 0.10026741699999997, 0.10028268100000037, 0.10028011099999956, 0.10028997199999967, 0.100281764, 0.10028915299999941, 0.10028974999999996, 0.10029226400000013, 0.10027898600000018, 0.1002869310000003, 0.10027577700000023, 0.10027333299999963, 0.10027397300000018, 0.10027273599999997, 0.10027393099999937]</msg>
<status status="PASS" starttime="20201030 18:30:10.712" endtime="20201030 18:30:10.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.702" endtime="20201030 18:30:10.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:10.727" endtime="20201030 18:30:10.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.723" endtime="20201030 18:30:10.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.721" endtime="20201030 18:30:10.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.035" endtime="20201030 18:30:10.752"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:03.904" endtime="20201030 18:30:10.754" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:10.771" endtime="20201030 18:30:10.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.766" endtime="20201030 18:30:10.795"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.827" endtime="20201030 18:30:10.843"></status>
</kw>
<msg timestamp="20201030 18:30:10.844" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.824" endtime="20201030 18:30:10.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.851" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.846" endtime="20201030 18:30:10.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.857" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:10.853" endtime="20201030 18:30:10.858"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:10.817" endtime="20201030 18:30:10.859"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:10.811" endtime="20201030 18:30:10.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.808" endtime="20201030 18:30:10.862"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:10.869" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:10.868" endtime="20201030 18:30:10.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.863" endtime="20201030 18:30:10.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.806" endtime="20201030 18:30:10.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.805" endtime="20201030 18:30:10.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.873" endtime="20201030 18:30:10.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.801" endtime="20201030 18:30:10.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.796" endtime="20201030 18:30:10.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.763" endtime="20201030 18:30:10.880"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.901" endtime="20201030 18:30:17.038"></status>
</kw>
<msg timestamp="20201030 18:30:17.040" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.898" endtime="20201030 18:30:17.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.046" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.042" endtime="20201030 18:30:17.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.049" endtime="20201030 18:30:17.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.891" endtime="20201030 18:30:17.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.885" endtime="20201030 18:30:17.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:17.061" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 18:30:17.057" endtime="20201030 18:30:17.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.071" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:17.069" endtime="20201030 18:30:17.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.078" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:17.075" endtime="20201030 18:30:17.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.063" endtime="20201030 18:30:17.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.089" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:17.087" endtime="20201030 18:30:17.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.094" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:17.092" endtime="20201030 18:30:17.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.081" endtime="20201030 18:30:17.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.105" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:17.103" endtime="20201030 18:30:17.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.110" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 18:30:17.108" endtime="20201030 18:30:17.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.097" endtime="20201030 18:30:17.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.128" endtime="20201030 18:30:17.477"></status>
</kw>
<msg timestamp="20201030 18:30:17.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.120918069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.221577931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.125" endtime="20201030 18:30:17.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.120918069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.221577931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.486" endtime="20201030 18:30:17.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.504" endtime="20201030 18:30:17.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.118" endtime="20201030 18:30:17.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.113" endtime="20201030 18:30:17.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:17.521" level="INFO">${FILTERED} = [{'diff': 0.100659862}, {'diff': 0.099964931}, {'diff': 0.10027361099999998}, {'diff': 0.10027391699999999}, {'diff': 0.10028211099999995}, {'diff': 0.10027362500000003}, {'diff': 0.10027207000000005}...</msg>
<status status="PASS" starttime="20201030 18:30:17.512" endtime="20201030 18:30:17.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:17.531" level="INFO">${RESULT} = {'diff': [0.100659862, 0.099964931, 0.10027361099999998, 0.10027391699999999, 0.10028211099999995, 0.10027362500000003, 0.10027207000000005, 0.10026969500000005, 0.10026980600000002, 0.100268485999999...</msg>
<status status="PASS" starttime="20201030 18:30:17.523" endtime="20201030 18:30:17.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.541" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:17.539" endtime="20201030 18:30:17.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.546" level="INFO">VALUE: [0.100659862, 0.099964931, 0.10027361099999998, 0.10027391699999999, 0.10028211099999995, 0.10027362500000003, 0.10027207000000005, 0.10026969500000005, 0.10026980600000002, 0.10026848599999982, 0.10026173599999999, 0.10027265299999999, 0.10026633299999999, 0.10025976299999995, 0.10025586099999995, 0.100247223, 0.1002542500000001, 0.10024252700000003, 0.10025122200000025, 0.10025906899999981, 0.10026499999999983, 0.10025148699999997, 0.10025444399999994, 0.10024651400000018, 0.10025469500000028, 0.10026372200000022, 0.10026090300000012, 0.10025426400000015, 0.10024829199999985, 0.1002565139999998, 0.10026555600000009, 0.10026191700000009, 0.10028244499999994, 0.10027270899999996, 0.10026876399999995, 0.10026962500000014, 0.10027422199999991, 0.10026849999999987, 0.10026645800000056, 0.10027087499999965, 0.10027009700000011, 0.10027130600000067, 0.10026041700000032, 0.10025409800000062, 0.10027001400000035, 0.10026977700000028, 0.10027058299999947, 0.10027295800000058, 0.1002678880000003, 0.1002638469999999, 0.1002692629999995]</msg>
<status status="PASS" starttime="20201030 18:30:17.543" endtime="20201030 18:30:17.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.533" endtime="20201030 18:30:17.549"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:17.558" endtime="20201030 18:30:17.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.554" endtime="20201030 18:30:17.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.552" endtime="20201030 18:30:17.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.881" endtime="20201030 18:30:17.583"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:10.758" endtime="20201030 18:30:17.585" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:17.601" endtime="20201030 18:30:17.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.597" endtime="20201030 18:30:17.624"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.657" endtime="20201030 18:30:17.672"></status>
</kw>
<msg timestamp="20201030 18:30:17.673" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.653" endtime="20201030 18:30:17.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.682" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.676" endtime="20201030 18:30:17.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.688" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:17.684" endtime="20201030 18:30:17.689"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:17.646" endtime="20201030 18:30:17.691"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:17.640" endtime="20201030 18:30:17.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.637" endtime="20201030 18:30:17.693"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:17.701" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:17.700" endtime="20201030 18:30:17.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.695" endtime="20201030 18:30:17.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.636" endtime="20201030 18:30:17.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.634" endtime="20201030 18:30:17.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.704" endtime="20201030 18:30:17.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.630" endtime="20201030 18:30:17.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.626" endtime="20201030 18:30:17.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.594" endtime="20201030 18:30:17.712"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.738" endtime="20201030 18:30:23.875"></status>
</kw>
<msg timestamp="20201030 18:30:23.876" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.735" endtime="20201030 18:30:23.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.882" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.878" endtime="20201030 18:30:23.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.885" endtime="20201030 18:30:23.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.727" endtime="20201030 18:30:23.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.717" endtime="20201030 18:30:23.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:23.898" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 18:30:23.894" endtime="20201030 18:30:23.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.908" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:23.905" endtime="20201030 18:30:23.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.912" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:23.910" endtime="20201030 18:30:23.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.899" endtime="20201030 18:30:23.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.924" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:23.922" endtime="20201030 18:30:23.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.928" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:23.926" endtime="20201030 18:30:23.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.916" endtime="20201030 18:30:23.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.940" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:23.938" endtime="20201030 18:30:23.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.944" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 18:30:23.942" endtime="20201030 18:30:23.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.932" endtime="20201030 18:30:23.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.963" endtime="20201030 18:30:24.337"></status>
</kw>
<msg timestamp="20201030 18:30:24.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128274681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.229121556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:23.959" endtime="20201030 18:30:24.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128274681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.229121556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.347" endtime="20201030 18:30:24.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.365" endtime="20201030 18:30:24.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.952" endtime="20201030 18:30:24.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.948" endtime="20201030 18:30:24.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:24.383" level="INFO">${FILTERED} = [{'diff': 0.100846875}, {'diff': 0.099752444}, {'diff': 0.10025812500000003}, {'diff': 0.10025287499999996}, {'diff': 0.10025874999999995}, {'diff': 0.100247278}, {'diff': 0.10024776300000005}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:30:24.374" endtime="20201030 18:30:24.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:24.393" level="INFO">${RESULT} = {'diff': [0.100846875, 0.099752444, 0.10025812500000003, 0.10025287499999996, 0.10025874999999995, 0.100247278, 0.10024776300000005, 0.10027748599999997, 0.10026169399999996, 0.10024397200000013, 0.10...</msg>
<status status="PASS" starttime="20201030 18:30:24.385" endtime="20201030 18:30:24.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.403" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:24.401" endtime="20201030 18:30:24.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.409" level="INFO">VALUE: [0.100846875, 0.099752444, 0.10025812500000003, 0.10025287499999996, 0.10025874999999995, 0.100247278, 0.10024776300000005, 0.10027748599999997, 0.10026169399999996, 0.10024397200000013, 0.1002591810000002, 0.10025936099999999, 0.100269194, 0.10026555600000009, 0.10026427800000004, 0.1002605969999999, 0.10026234699999992, 0.10026766599999992, 0.10027215299999992, 0.10027455600000001, 0.10027045799999978, 0.10027507000000035, 0.10027212500000005, 0.10027988900000029, 0.1002738889999999, 0.10026426399999977, 0.10027298599999979, 0.1002779859999996, 0.10026444400000001, 0.10026957000000003, 0.10026486099999987, 0.10026468100000008, 0.10026788899999994, 0.10026684699999988, 0.10026583299999992, 0.10027265299999977, 0.10026747299999972, 0.10026215300000008, 0.10026401299999943, 0.10026133299999973, 0.10026327800000079, 0.10025969500000009, 0.10026761099999959, 0.10025481999999997, 0.100249861, 0.10025245799999993, 0.10026377800000041, 0.10026681900000067, 0.10025251400000013, 0.1002635560000007, 0.10025223599999933]</msg>
<status status="PASS" starttime="20201030 18:30:24.406" endtime="20201030 18:30:24.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.395" endtime="20201030 18:30:24.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:24.421" endtime="20201030 18:30:24.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.417" endtime="20201030 18:30:24.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.414" endtime="20201030 18:30:24.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.713" endtime="20201030 18:30:24.447"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:17.589" endtime="20201030 18:30:24.448" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:24.466" endtime="20201030 18:30:24.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.462" endtime="20201030 18:30:24.489"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.523" endtime="20201030 18:30:24.544"></status>
</kw>
<msg timestamp="20201030 18:30:24.545" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.520" endtime="20201030 18:30:24.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.552" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.547" endtime="20201030 18:30:24.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.558" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:24.554" endtime="20201030 18:30:24.559"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:24.512" endtime="20201030 18:30:24.561"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:24.505" endtime="20201030 18:30:24.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.503" endtime="20201030 18:30:24.563"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:24.571" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:24.570" endtime="20201030 18:30:24.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.565" endtime="20201030 18:30:24.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.501" endtime="20201030 18:30:24.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.499" endtime="20201030 18:30:24.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.575" endtime="20201030 18:30:24.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.495" endtime="20201030 18:30:24.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.491" endtime="20201030 18:30:24.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.459" endtime="20201030 18:30:24.582"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.603" endtime="20201030 18:30:30.746"></status>
</kw>
<msg timestamp="20201030 18:30:30.747" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.600" endtime="20201030 18:30:30.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.753" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.749" endtime="20201030 18:30:30.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.756" endtime="20201030 18:30:30.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.593" endtime="20201030 18:30:30.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.587" endtime="20201030 18:30:30.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:30.769" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 18:30:30.765" endtime="20201030 18:30:30.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.780" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:30.777" endtime="20201030 18:30:30.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.784" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:30.782" endtime="20201030 18:30:30.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.771" endtime="20201030 18:30:30.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.796" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:30.794" endtime="20201030 18:30:30.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.801" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:30.799" endtime="20201030 18:30:30.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.788" endtime="20201030 18:30:30.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.813" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:30.811" endtime="20201030 18:30:30.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.817" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 18:30:30.815" endtime="20201030 18:30:30.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.804" endtime="20201030 18:30:30.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.837" endtime="20201030 18:30:31.218"></status>
</kw>
<msg timestamp="20201030 18:30:31.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129042375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.230089528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:30.833" endtime="20201030 18:30:31.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129042375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.230089528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:31.227" endtime="20201030 18:30:31.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.245" endtime="20201030 18:30:31.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.826" endtime="20201030 18:30:31.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.821" endtime="20201030 18:30:31.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:31.262" level="INFO">${FILTERED} = [{'diff': 0.101047153}, {'diff': 0.099533278}, {'diff': 0.100245111}, {'diff': 0.10023763900000005}, {'diff': 0.10024283300000003}, {'diff': 0.10025624999999994}, {'diff': 0.100244569}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201030 18:30:31.254" endtime="20201030 18:30:31.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:31.271" level="INFO">${RESULT} = {'diff': [0.101047153, 0.099533278, 0.100245111, 0.10023763900000005, 0.10024283300000003, 0.10025624999999994, 0.100244569, 0.10024711099999994, 0.10024273599999989, 0.10025459699999995, 0.1002564580...</msg>
<status status="PASS" starttime="20201030 18:30:31.264" endtime="20201030 18:30:31.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.282" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:31.279" endtime="20201030 18:30:31.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.287" level="INFO">VALUE: [0.101047153, 0.099533278, 0.100245111, 0.10023763900000005, 0.10024283300000003, 0.10025624999999994, 0.100244569, 0.10024711099999994, 0.10024273599999989, 0.10025459699999995, 0.10025645800000005, 0.10026256999999994, 0.10026394500000002, 0.1002578890000001, 0.10025499999999998, 0.10024497200000004, 0.10026399999999991, 0.10026522300000007, 0.10026600000000019, 0.10025966599999991, 0.10025673599999996, 0.100256334, 0.10025245900000002, 0.10026408299999989, 0.10026173600000021, 0.10025683299999999, 0.10025916699999993, 0.10025388900000021, 0.10025870899999978, 0.10025561199999977, 0.10025779199999985, 0.10026654199999996, 0.10026208400000014, 0.10026829199999998, 0.10026548599999963, 0.10025702799999969, 0.10024216699999977, 0.10024884700000003, 0.10025052799999967, 0.10026047299999963, 0.10026086099999976, 0.10026115299999994, 0.10025348599999973, 0.10025262499999954, 0.10025786100000023, 0.1002558889999996, 0.10025579199999957, 0.10026008300000022, 0.10025927700000015, 0.10025641600000057, 0.10025151399999999]</msg>
<status status="PASS" starttime="20201030 18:30:31.284" endtime="20201030 18:30:31.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.273" endtime="20201030 18:30:31.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:31.299" endtime="20201030 18:30:31.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.295" endtime="20201030 18:30:31.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.292" endtime="20201030 18:30:31.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.583" endtime="20201030 18:30:31.324"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:24.453" endtime="20201030 18:30:31.326" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:31.342" endtime="20201030 18:30:31.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.339" endtime="20201030 18:30:31.366"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.401" endtime="20201030 18:30:31.417"></status>
</kw>
<msg timestamp="20201030 18:30:31.418" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.397" endtime="20201030 18:30:31.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.424" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.420" endtime="20201030 18:30:31.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:31.431" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:31.427" endtime="20201030 18:30:31.432"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:31.390" endtime="20201030 18:30:31.434"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:31.384" endtime="20201030 18:30:31.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.381" endtime="20201030 18:30:31.436"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:31.444" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:31.443" endtime="20201030 18:30:31.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.438" endtime="20201030 18:30:31.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.378" endtime="20201030 18:30:31.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.376" endtime="20201030 18:30:31.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.447" endtime="20201030 18:30:31.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.372" endtime="20201030 18:30:31.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.367" endtime="20201030 18:30:31.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.336" endtime="20201030 18:30:31.455"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:31.476" endtime="20201030 18:30:37.614"></status>
</kw>
<msg timestamp="20201030 18:30:37.615" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:31.473" endtime="20201030 18:30:37.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.621" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.617" endtime="20201030 18:30:37.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.629" endtime="20201030 18:30:37.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.465" endtime="20201030 18:30:37.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.460" endtime="20201030 18:30:37.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:37.642" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 18:30:37.638" endtime="20201030 18:30:37.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.652" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:37.650" endtime="20201030 18:30:37.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.657" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:37.655" endtime="20201030 18:30:37.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.644" endtime="20201030 18:30:37.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.669" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:37.667" endtime="20201030 18:30:37.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.674" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:37.671" endtime="20201030 18:30:37.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.661" endtime="20201030 18:30:37.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.688" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:37.683" endtime="20201030 18:30:37.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.692" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 18:30:37.690" endtime="20201030 18:30:37.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.677" endtime="20201030 18:30:37.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.712" endtime="20201030 18:30:38.088"></status>
</kw>
<msg timestamp="20201030 18:30:38.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125283278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.226606819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:37.708" endtime="20201030 18:30:38.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125283278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.226606819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:38.098" endtime="20201030 18:30:38.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:38.117" endtime="20201030 18:30:38.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.701" endtime="20201030 18:30:38.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.696" endtime="20201030 18:30:38.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:38.135" level="INFO">${FILTERED} = [{'diff': 0.10132354099999999}, {'diff': 0.10042133299999997}, {'diff': 0.099102986}, {'diff': 0.100256931}, {'diff': 0.10025554199999998}, {'diff': 0.10026033300000003}, {'diff': 0.10025186100000005}...</msg>
<status status="PASS" starttime="20201030 18:30:38.126" endtime="20201030 18:30:38.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:38.144" level="INFO">${RESULT} = {'diff': [0.10132354099999999, 0.10042133299999997, 0.099102986, 0.100256931, 0.10025554199999998, 0.10026033300000003, 0.10025186100000005, 0.10025115200000001, 0.1002513610000001, 0.1002667500000000...</msg>
<status status="PASS" starttime="20201030 18:30:38.137" endtime="20201030 18:30:38.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.154" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:38.152" endtime="20201030 18:30:38.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:38.160" level="INFO">VALUE: [0.10132354099999999, 0.10042133299999997, 0.099102986, 0.100256931, 0.10025554199999998, 0.10026033300000003, 0.10025186100000005, 0.10025115200000001, 0.1002513610000001, 0.10026675000000007, 0.10025906900000003, 0.10025734699999989, 0.10027283400000009, 0.10026502799999992, 0.10025823700000003, 0.1002477639999999, 0.10025581999999988, 0.1002624860000001, 0.10026845900000025, 0.1002645000000002, 0.10026623599999995, 0.10026770800000007, 0.10027973600000006, 0.10027742999999978, 0.100251847, 0.10024493000000012, 0.10026266699999997, 0.10026648599999977, 0.10026694399999991, 0.10028004200000007, 0.10025797200000008, 0.10026581999999973, 0.10025084699999987, 0.10026008299999978, 0.10026400000000013, 0.10025474999999995, 0.10026523600000026, 0.10025843099999987, 0.10026599999999997, 0.10026942999999999, 0.10025952800000049, 0.10026461100000006, 0.10026205499999996, 0.10026656900000042, 0.10026372200000022, 0.10025666700000002, 0.10026268100000024, 0.1002458879999999, 0.10023777800000033, 0.10024374999999974, 0.10025088899999979]</msg>
<status status="PASS" starttime="20201030 18:30:38.157" endtime="20201030 18:30:38.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.146" endtime="20201030 18:30:38.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:38.174" endtime="20201030 18:30:38.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.168" endtime="20201030 18:30:38.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:38.165" endtime="20201030 18:30:38.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:31.456" endtime="20201030 18:30:38.199"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:31.330" endtime="20201030 18:30:38.201" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:29:54.497" endtime="20201030 18:30:38.218"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 18:26:58.414" endtime="20201030 18:30:38.312"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_samr21-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
