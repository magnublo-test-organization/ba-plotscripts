<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201029 09:33:04.954" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.219" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:06.236" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:08.272" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:06.215" endtime="20201029 09:33:08.273"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.279" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:33:08.275" endtime="20201029 09:33:08.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.213" endtime="20201029 09:33:08.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:08.285" endtime="20201029 09:33:08.621"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.283" endtime="20201029 09:33:08.623"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.653" endtime="20201029 09:33:08.668"></status>
</kw>
<msg timestamp="20201029 09:33:08.670" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.649" endtime="20201029 09:33:08.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.677" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.672" endtime="20201029 09:33:08.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.685" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:08.680" endtime="20201029 09:33:08.686"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:08.643" endtime="20201029 09:33:08.688"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:08.637" endtime="20201029 09:33:08.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.635" endtime="20201029 09:33:08.690"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:08.698" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:08.697" endtime="20201029 09:33:08.699"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.692" endtime="20201029 09:33:08.700"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.633" endtime="20201029 09:33:08.700"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.631" endtime="20201029 09:33:08.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.702" endtime="20201029 09:33:08.705"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.628" endtime="20201029 09:33:08.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.708" endtime="20201029 09:33:08.712"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.624" endtime="20201029 09:33:08.714"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.209" endtime="20201029 09:33:08.714"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:08.730" endtime="20201029 09:33:08.752"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.727" endtime="20201029 09:33:08.754"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.787" endtime="20201029 09:33:08.802"></status>
</kw>
<msg timestamp="20201029 09:33:08.803" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.784" endtime="20201029 09:33:08.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.810" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.805" endtime="20201029 09:33:08.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.816" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:08.812" endtime="20201029 09:33:08.817"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:08.776" endtime="20201029 09:33:08.818"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:08.770" endtime="20201029 09:33:08.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.767" endtime="20201029 09:33:08.821"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:08.828" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:08.827" endtime="20201029 09:33:08.829"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.823" endtime="20201029 09:33:08.830"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.765" endtime="20201029 09:33:08.830"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.763" endtime="20201029 09:33:08.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.832" endtime="20201029 09:33:08.835"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.759" endtime="20201029 09:33:08.837"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.755" endtime="20201029 09:33:08.838"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.724" endtime="20201029 09:33:08.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.856" endtime="20201029 09:33:08.866"></status>
</kw>
<msg timestamp="20201029 09:33:08.867" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.852" endtime="20201029 09:33:08.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.873" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.869" endtime="20201029 09:33:08.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.875" endtime="20201029 09:33:08.881"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.845" endtime="20201029 09:33:08.882"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.841" endtime="20201029 09:33:08.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.893" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 09:33:08.891" endtime="20201029 09:33:08.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.898" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 09:33:08.895" endtime="20201029 09:33:08.898"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.885" endtime="20201029 09:33:08.900"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:08.715" endtime="20201029 09:33:08.901" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:33:05.218" endtime="20201029 09:33:08.908"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.041" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:09.056" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:11.104" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:09.037" endtime="20201029 09:33:11.106"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.112" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:33:11.108" endtime="20201029 09:33:11.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.034" endtime="20201029 09:33:11.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:11.118" endtime="20201029 09:33:11.460"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.116" endtime="20201029 09:33:11.462"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.491" endtime="20201029 09:33:11.507"></status>
</kw>
<msg timestamp="20201029 09:33:11.508" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.488" endtime="20201029 09:33:11.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.515" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.510" endtime="20201029 09:33:11.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.521" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:11.517" endtime="20201029 09:33:11.522"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:11.481" endtime="20201029 09:33:11.524"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:11.476" endtime="20201029 09:33:11.525"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.473" endtime="20201029 09:33:11.526"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:11.536" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:11.533" endtime="20201029 09:33:11.537"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.528" endtime="20201029 09:33:11.537"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.472" endtime="20201029 09:33:11.537"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.470" endtime="20201029 09:33:11.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.540" endtime="20201029 09:33:11.543"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.467" endtime="20201029 09:33:11.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.546" endtime="20201029 09:33:11.550"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.463" endtime="20201029 09:33:11.552"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.032" endtime="20201029 09:33:11.552"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:11.566" endtime="20201029 09:33:11.588"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.562" endtime="20201029 09:33:11.589"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.623" endtime="20201029 09:33:11.639"></status>
</kw>
<msg timestamp="20201029 09:33:11.640" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.620" endtime="20201029 09:33:11.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.648" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.643" endtime="20201029 09:33:11.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.654" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:11.650" endtime="20201029 09:33:11.655"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:11.613" endtime="20201029 09:33:11.657"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:11.605" endtime="20201029 09:33:11.659"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.603" endtime="20201029 09:33:11.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:11.668" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:11.666" endtime="20201029 09:33:11.669"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.661" endtime="20201029 09:33:11.669"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.601" endtime="20201029 09:33:11.670"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.599" endtime="20201029 09:33:11.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.672" endtime="20201029 09:33:11.675"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.595" endtime="20201029 09:33:11.677"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.591" endtime="20201029 09:33:11.678"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.560" endtime="20201029 09:33:11.679"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.766" endtime="20201029 09:33:11.777"></status>
</kw>
<msg timestamp="20201029 09:33:11.778" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.762" endtime="20201029 09:33:11.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.784" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.780" endtime="20201029 09:33:11.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.786" endtime="20201029 09:33:11.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.694" endtime="20201029 09:33:11.792"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.688" endtime="20201029 09:33:11.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.810" endtime="20201029 09:33:12.166"></status>
</kw>
<msg timestamp="20201029 09:33:12.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.189986986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.190003139, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:11.807" endtime="20201029 09:33:12.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.189986986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.190003139, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:12.176" endtime="20201029 09:33:12.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.195" endtime="20201029 09:33:12.199"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.799" endtime="20201029 09:33:12.200"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.795" endtime="20201029 09:33:12.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:12.213" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.870000000212205e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.730000000...</msg>
<status status="PASS" starttime="20201029 09:33:12.203" endtime="20201029 09:33:12.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:12.224" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 4.720000000013602e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.870000000212205e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4...</msg>
<status status="PASS" starttime="20201029 09:33:12.215" endtime="20201029 09:33:12.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.235" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:12.232" endtime="20201029 09:33:12.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.240" level="INFO">VALUE: [0, 4.720000000013602e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.870000000212205e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.869999999934649e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.860000000217468e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.860000000217468e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:12.237" endtime="20201029 09:33:12.241"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.226" endtime="20201029 09:33:12.242"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.684" endtime="20201029 09:33:12.244"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.682" endtime="20201029 09:33:12.244"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.265" endtime="20201029 09:33:12.277"></status>
</kw>
<msg timestamp="20201029 09:33:12.279" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.261" endtime="20201029 09:33:12.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.286" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.281" endtime="20201029 09:33:12.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.289" endtime="20201029 09:33:12.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.254" endtime="20201029 09:33:12.295"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.249" endtime="20201029 09:33:12.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.316" endtime="20201029 09:33:12.683"></status>
</kw>
<msg timestamp="20201029 09:33:12.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.190554056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.190554528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.312" endtime="20201029 09:33:12.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.190554056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.190554528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.695" endtime="20201029 09:33:12.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.718" endtime="20201029 09:33:12.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.303" endtime="20201029 09:33:12.723"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.298" endtime="20201029 09:33:12.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:12.736" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.869999999934649e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.859999999939912e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:12.726" endtime="20201029 09:33:12.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:12.749" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.860000000217468e-07, 4.720000000013602e-07, 4.8599...</msg>
<status status="PASS" starttime="20201029 09:33:12.738" endtime="20201029 09:33:12.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.760" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:12.757" endtime="20201029 09:33:12.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.766" level="INFO">VALUE: [4.720000000013602e-07, 4.869999999934649e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.860000000217468e-07, 4.859999999939912e-07, 4.860000000217468e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.859999999107245e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.859999999107245e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.860000000217468e-07]</msg>
<status status="PASS" starttime="20201029 09:33:12.762" endtime="20201029 09:33:12.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.751" endtime="20201029 09:33:12.768"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.246" endtime="20201029 09:33:12.770"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.245" endtime="20201029 09:33:12.770"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.790" endtime="20201029 09:33:12.801"></status>
</kw>
<msg timestamp="20201029 09:33:12.802" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.787" endtime="20201029 09:33:12.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.809" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.805" endtime="20201029 09:33:12.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.811" endtime="20201029 09:33:12.816"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.780" endtime="20201029 09:33:12.818"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.775" endtime="20201029 09:33:12.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.837" endtime="20201029 09:33:13.194"></status>
</kw>
<msg timestamp="20201029 09:33:13.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.681188542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.681189014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.834" endtime="20201029 09:33:13.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.681188542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.681189014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.205" endtime="20201029 09:33:13.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.228" endtime="20201029 09:33:13.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.825" endtime="20201029 09:33:13.234"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.820" endtime="20201029 09:33:13.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:13.246" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}...</msg>
<status status="PASS" starttime="20201029 09:33:13.237" endtime="20201029 09:33:13.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:13.257" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 09:33:13.248" endtime="20201029 09:33:13.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.268" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:13.266" endtime="20201029 09:33:13.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.275" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.870000001044872e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:13.270" endtime="20201029 09:33:13.276"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.259" endtime="20201029 09:33:13.277"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.772" endtime="20201029 09:33:13.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.771" endtime="20201029 09:33:13.279"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.299" endtime="20201029 09:33:13.311"></status>
</kw>
<msg timestamp="20201029 09:33:13.312" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.296" endtime="20201029 09:33:13.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.318" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.314" endtime="20201029 09:33:13.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.320" endtime="20201029 09:33:13.324"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.289" endtime="20201029 09:33:13.326"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.284" endtime="20201029 09:33:13.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.344" endtime="20201029 09:33:13.696"></status>
</kw>
<msg timestamp="20201029 09:33:13.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.195272097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.195272583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.340" endtime="20201029 09:33:13.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.195272097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.195272583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.708" endtime="20201029 09:33:13.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.730" endtime="20201029 09:33:13.734"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.333" endtime="20201029 09:33:13.736"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.328" endtime="20201029 09:33:13.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:13.749" level="INFO">${RESULT} = [{'diff': 4.860000000217468e-07}, {'diff': 4.729999998343004e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:33:13.739" endtime="20201029 09:33:13.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:13.770" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000217468e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 09:33:13.752" endtime="20201029 09:33:13.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.780" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:13.778" endtime="20201029 09:33:13.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.786" level="INFO">VALUE: [4.860000000217468e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:13.782" endtime="20201029 09:33:13.787"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.772" endtime="20201029 09:33:13.788"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.281" endtime="20201029 09:33:13.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.280" endtime="20201029 09:33:13.790"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.810" endtime="20201029 09:33:13.823"></status>
</kw>
<msg timestamp="20201029 09:33:13.824" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.807" endtime="20201029 09:33:13.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.830" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.826" endtime="20201029 09:33:13.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.832" endtime="20201029 09:33:13.836"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.800" endtime="20201029 09:33:13.838"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.795" endtime="20201029 09:33:13.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.856" endtime="20201029 09:33:14.231"></status>
</kw>
<msg timestamp="20201029 09:33:14.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.694487097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.694487583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.852" endtime="20201029 09:33:14.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.694487097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.694487583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.244" endtime="20201029 09:33:14.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.271" endtime="20201029 09:33:14.278"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.845" endtime="20201029 09:33:14.281"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.841" endtime="20201029 09:33:14.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.298" level="INFO">${RESULT} = [{'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 09:33:14.285" endtime="20201029 09:33:14.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.312" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.8...</msg>
<status status="PASS" starttime="20201029 09:33:14.301" endtime="20201029 09:33:14.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.326" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:14.323" endtime="20201029 09:33:14.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.334" level="INFO">VALUE: [4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 09:33:14.330" endtime="20201029 09:33:14.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.315" endtime="20201029 09:33:14.338"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.792" endtime="20201029 09:33:14.341"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.791" endtime="20201029 09:33:14.341"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.370" endtime="20201029 09:33:14.384"></status>
</kw>
<msg timestamp="20201029 09:33:14.386" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.365" endtime="20201029 09:33:14.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.395" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.389" endtime="20201029 09:33:14.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.398" endtime="20201029 09:33:14.403"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.355" endtime="20201029 09:33:14.406"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.349" endtime="20201029 09:33:14.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.424" endtime="20201029 09:33:14.813"></status>
</kw>
<msg timestamp="20201029 09:33:14.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.195722806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.195723278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.421" endtime="20201029 09:33:14.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.195722806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.195723278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.829" endtime="20201029 09:33:14.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.859" endtime="20201029 09:33:14.864"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.414" endtime="20201029 09:33:14.865"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.409" endtime="20201029 09:33:14.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.878" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.73000000056345e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:14.868" endtime="20201029 09:33:14.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.892" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85...</msg>
<status status="PASS" starttime="20201029 09:33:14.881" endtime="20201029 09:33:14.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.903" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:14.901" endtime="20201029 09:33:14.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.909" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07]</msg>
<status status="PASS" starttime="20201029 09:33:14.906" endtime="20201029 09:33:14.910"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.894" endtime="20201029 09:33:14.912"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.344" endtime="20201029 09:33:14.913"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.343" endtime="20201029 09:33:14.914"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.934" endtime="20201029 09:33:14.946"></status>
</kw>
<msg timestamp="20201029 09:33:14.947" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.931" endtime="20201029 09:33:14.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.953" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.949" endtime="20201029 09:33:14.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.956" endtime="20201029 09:33:14.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.924" endtime="20201029 09:33:14.961"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.919" endtime="20201029 09:33:14.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.979" endtime="20201029 09:33:15.357"></status>
</kw>
<msg timestamp="20201029 09:33:15.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.745907097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.745907569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.976" endtime="20201029 09:33:15.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.745907097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.745907569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.368" endtime="20201029 09:33:15.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.390" endtime="20201029 09:33:15.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.968" endtime="20201029 09:33:15.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.964" endtime="20201029 09:33:15.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:15.409" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.859999997997022e-07}...</msg>
<status status="PASS" starttime="20201029 09:33:15.399" endtime="20201029 09:33:15.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:15.421" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:33:15.411" endtime="20201029 09:33:15.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.431" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:15.429" endtime="20201029 09:33:15.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.437" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 09:33:15.433" endtime="20201029 09:33:15.438"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.423" endtime="20201029 09:33:15.439"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.915" endtime="20201029 09:33:15.441"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.915" endtime="20201029 09:33:15.441"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.461" endtime="20201029 09:33:15.473"></status>
</kw>
<msg timestamp="20201029 09:33:15.474" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.458" endtime="20201029 09:33:15.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.480" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.476" endtime="20201029 09:33:15.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.482" endtime="20201029 09:33:15.486"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.451" endtime="20201029 09:33:15.488"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.446" endtime="20201029 09:33:15.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.505" endtime="20201029 09:33:15.886"></status>
</kw>
<msg timestamp="20201029 09:33:15.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.298494944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.298495417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.502" endtime="20201029 09:33:15.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.298494944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.298495417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.897" endtime="20201029 09:33:15.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.920" endtime="20201029 09:33:15.924"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.495" endtime="20201029 09:33:15.925"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.490" endtime="20201029 09:33:15.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:15.938" level="INFO">${RESULT} = [{'diff': 4.729999996122558e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7200000041769385e-07}, {'diff': 4.73000000056345e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:33:15.929" endtime="20201029 09:33:15.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:15.949" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.729999996122558e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.719...</msg>
<status status="PASS" starttime="20201029 09:33:15.941" endtime="20201029 09:33:15.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.959" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:15.957" endtime="20201029 09:33:15.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.965" level="INFO">VALUE: [4.729999996122558e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.859999997997022e-07]</msg>
<status status="PASS" starttime="20201029 09:33:15.962" endtime="20201029 09:33:15.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.951" endtime="20201029 09:33:15.968"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.443" endtime="20201029 09:33:15.969"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.442" endtime="20201029 09:33:15.969"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.990" endtime="20201029 09:33:16.002"></status>
</kw>
<msg timestamp="20201029 09:33:16.005" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.986" endtime="20201029 09:33:16.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.011" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.007" endtime="20201029 09:33:16.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.013" endtime="20201029 09:33:16.017"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.979" endtime="20201029 09:33:16.018"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.974" endtime="20201029 09:33:16.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.036" endtime="20201029 09:33:16.414"></status>
</kw>
<msg timestamp="20201029 09:33:16.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.813243444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.813243931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.033" endtime="20201029 09:33:16.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.813243444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.813243931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.425" endtime="20201029 09:33:16.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.447" endtime="20201029 09:33:16.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.026" endtime="20201029 09:33:16.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.021" endtime="20201029 09:33:16.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:16.465" level="INFO">${RESULT} = [{'diff': 4.870000003265318e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 09:33:16.456" endtime="20201029 09:33:16.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:16.480" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.870000003265318e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 09:33:16.467" endtime="20201029 09:33:16.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.490" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:16.488" endtime="20201029 09:33:16.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.496" level="INFO">VALUE: [4.870000003265318e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.729999991681666e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 09:33:16.493" endtime="20201029 09:33:16.497"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.482" endtime="20201029 09:33:16.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.971" endtime="20201029 09:33:16.500"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.970" endtime="20201029 09:33:16.500"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.520" endtime="20201029 09:33:16.532"></status>
</kw>
<msg timestamp="20201029 09:33:16.533" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.517" endtime="20201029 09:33:16.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.539" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.535" endtime="20201029 09:33:16.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.541" endtime="20201029 09:33:16.545"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.510" endtime="20201029 09:33:16.547"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.505" endtime="20201029 09:33:16.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.573" endtime="20201029 09:33:16.946"></status>
</kw>
<msg timestamp="20201029 09:33:16.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.333704167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.333704653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.568" endtime="20201029 09:33:16.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.333704167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.333704653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.958" endtime="20201029 09:33:16.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.980" endtime="20201029 09:33:16.984"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.557" endtime="20201029 09:33:16.986"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.551" endtime="20201029 09:33:16.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:16.998" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:33:16.989" endtime="20201029 09:33:16.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:17.010" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7300...</msg>
<status status="PASS" starttime="20201029 09:33:17.000" endtime="20201029 09:33:17.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.020" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:17.018" endtime="20201029 09:33:17.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.026" level="INFO">VALUE: [4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07]</msg>
<status status="PASS" starttime="20201029 09:33:17.023" endtime="20201029 09:33:17.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.012" endtime="20201029 09:33:17.028"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.502" endtime="20201029 09:33:17.030"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.501" endtime="20201029 09:33:17.030"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.050" endtime="20201029 09:33:17.061"></status>
</kw>
<msg timestamp="20201029 09:33:17.062" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.047" endtime="20201029 09:33:17.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.068" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.064" endtime="20201029 09:33:17.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.070" endtime="20201029 09:33:17.074"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.040" endtime="20201029 09:33:17.076"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.035" endtime="20201029 09:33:17.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.093" endtime="20201029 09:33:17.456"></status>
</kw>
<msg timestamp="20201029 09:33:17.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.851752319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.851752792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.090" endtime="20201029 09:33:17.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.851752319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.851752792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.467" endtime="20201029 09:33:17.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.490" endtime="20201029 09:33:17.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.083" endtime="20201029 09:33:17.495"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.078" endtime="20201029 09:33:17.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:17.507" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, ...</msg>
<status status="PASS" starttime="20201029 09:33:17.498" endtime="20201029 09:33:17.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:17.518" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860...</msg>
<status status="PASS" starttime="20201029 09:33:17.510" endtime="20201029 09:33:17.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.528" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:17.526" endtime="20201029 09:33:17.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.534" level="INFO">VALUE: [4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 09:33:17.530" endtime="20201029 09:33:17.535"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.520" endtime="20201029 09:33:17.536"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.032" endtime="20201029 09:33:17.537"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.031" endtime="20201029 09:33:17.538"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.558" endtime="20201029 09:33:17.571"></status>
</kw>
<msg timestamp="20201029 09:33:17.572" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.554" endtime="20201029 09:33:17.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.578" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.574" endtime="20201029 09:33:17.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.581" endtime="20201029 09:33:17.584"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.547" endtime="20201029 09:33:17.586"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.543" endtime="20201029 09:33:17.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.604" endtime="20201029 09:33:17.983"></status>
</kw>
<msg timestamp="20201029 09:33:17.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.372688014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.372688486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.600" endtime="20201029 09:33:17.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.372688014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.372688486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.994" endtime="20201029 09:33:18.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.016" endtime="20201029 09:33:18.020"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.593" endtime="20201029 09:33:18.022"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.589" endtime="20201029 09:33:18.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:18.034" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 09:33:18.025" endtime="20201029 09:33:18.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:18.046" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 09:33:18.036" endtime="20201029 09:33:18.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.056" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:18.054" endtime="20201029 09:33:18.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.062" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07]</msg>
<status status="PASS" starttime="20201029 09:33:18.058" endtime="20201029 09:33:18.062"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.048" endtime="20201029 09:33:18.064"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.540" endtime="20201029 09:33:18.065"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.539" endtime="20201029 09:33:18.066"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.086" endtime="20201029 09:33:18.097"></status>
</kw>
<msg timestamp="20201029 09:33:18.099" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.082" endtime="20201029 09:33:18.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.105" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.101" endtime="20201029 09:33:18.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.107" endtime="20201029 09:33:18.111"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.075" endtime="20201029 09:33:18.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.071" endtime="20201029 09:33:18.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.130" endtime="20201029 09:33:18.509"></status>
</kw>
<msg timestamp="20201029 09:33:18.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.872877903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.872878375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.127" endtime="20201029 09:33:18.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.872877903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.872878375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.520" endtime="20201029 09:33:18.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.543" endtime="20201029 09:33:18.547"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.120" endtime="20201029 09:33:18.549"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.115" endtime="20201029 09:33:18.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:18.561" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:18.552" endtime="20201029 09:33:18.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:18.573" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.719999...</msg>
<status status="PASS" starttime="20201029 09:33:18.563" endtime="20201029 09:33:18.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.583" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:18.581" endtime="20201029 09:33:18.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.589" level="INFO">VALUE: [4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.870000003265318e-07]</msg>
<status status="PASS" starttime="20201029 09:33:18.586" endtime="20201029 09:33:18.590"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.575" endtime="20201029 09:33:18.591"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.067" endtime="20201029 09:33:18.593"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.067" endtime="20201029 09:33:18.593"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.613" endtime="20201029 09:33:18.625"></status>
</kw>
<msg timestamp="20201029 09:33:18.626" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.610" endtime="20201029 09:33:18.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.632" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.628" endtime="20201029 09:33:18.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.634" endtime="20201029 09:33:18.638"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.603" endtime="20201029 09:33:18.640"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.598" endtime="20201029 09:33:18.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.657" endtime="20201029 09:33:19.054"></status>
</kw>
<msg timestamp="20201029 09:33:19.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.390070403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.390070889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.654" endtime="20201029 09:33:19.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.390070403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.390070889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.071" endtime="20201029 09:33:19.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.093" endtime="20201029 09:33:19.097"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.647" endtime="20201029 09:33:19.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.642" endtime="20201029 09:33:19.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:19.111" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000002437914e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:19.102" endtime="20201029 09:33:19.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:19.122" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.86000000...</msg>
<status status="PASS" starttime="20201029 09:33:19.113" endtime="20201029 09:33:19.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.132" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:19.129" endtime="20201029 09:33:19.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.137" level="INFO">VALUE: [4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:19.134" endtime="20201029 09:33:19.138"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.123" endtime="20201029 09:33:19.140"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.595" endtime="20201029 09:33:19.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.594" endtime="20201029 09:33:19.141"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.161" endtime="20201029 09:33:19.175"></status>
</kw>
<msg timestamp="20201029 09:33:19.176" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.158" endtime="20201029 09:33:19.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.182" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.178" endtime="20201029 09:33:19.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.184" endtime="20201029 09:33:19.188"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.151" endtime="20201029 09:33:19.189"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.146" endtime="20201029 09:33:19.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.207" endtime="20201029 09:33:19.595"></status>
</kw>
<msg timestamp="20201029 09:33:19.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.907501319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.907501806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.204" endtime="20201029 09:33:19.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.907501319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.907501806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.607" endtime="20201029 09:33:19.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.630" endtime="20201029 09:33:19.633"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.197" endtime="20201029 09:33:19.635"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.192" endtime="20201029 09:33:19.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:19.647" level="INFO">${RESULT} = [{'diff': 4.870000003265318e-07}, {'diff': 4.729999991681666e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000002437914e-07}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:19.638" endtime="20201029 09:33:19.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:19.659" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.870000003265318e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.8699...</msg>
<status status="PASS" starttime="20201029 09:33:19.649" endtime="20201029 09:33:19.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.669" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:19.667" endtime="20201029 09:33:19.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.675" level="INFO">VALUE: [4.870000003265318e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.860000002437914e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 09:33:19.671" endtime="20201029 09:33:19.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.661" endtime="20201029 09:33:19.677"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.143" endtime="20201029 09:33:19.679"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.142" endtime="20201029 09:33:19.679"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.699" endtime="20201029 09:33:19.711"></status>
</kw>
<msg timestamp="20201029 09:33:19.712" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.695" endtime="20201029 09:33:19.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.718" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.714" endtime="20201029 09:33:19.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.720" endtime="20201029 09:33:19.724"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.688" endtime="20201029 09:33:19.725"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.684" endtime="20201029 09:33:19.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.743" endtime="20201029 09:33:20.120"></status>
</kw>
<msg timestamp="20201029 09:33:20.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.445571958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.445572431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.740" endtime="20201029 09:33:20.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.445571958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.445572431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.131" endtime="20201029 09:33:20.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.154" endtime="20201029 09:33:20.157"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.733" endtime="20201029 09:33:20.159"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.728" endtime="20201029 09:33:20.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:20.171" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:20.162" endtime="20201029 09:33:20.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:20.183" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199...</msg>
<status status="PASS" starttime="20201029 09:33:20.173" endtime="20201029 09:33:20.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.193" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:20.191" endtime="20201029 09:33:20.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.199" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:20.196" endtime="20201029 09:33:20.200"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.185" endtime="20201029 09:33:20.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.681" endtime="20201029 09:33:20.203"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.680" endtime="20201029 09:33:20.203"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.223" endtime="20201029 09:33:20.235"></status>
</kw>
<msg timestamp="20201029 09:33:20.236" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.220" endtime="20201029 09:33:20.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.242" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.238" endtime="20201029 09:33:20.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.245" endtime="20201029 09:33:20.248"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.213" endtime="20201029 09:33:20.250"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.208" endtime="20201029 09:33:20.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.267" endtime="20201029 09:33:20.660"></status>
</kw>
<msg timestamp="20201029 09:33:20.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.971495722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.971496208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.264" endtime="20201029 09:33:20.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.971495722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.971496208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.672" endtime="20201029 09:33:20.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.694" endtime="20201029 09:33:20.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.257" endtime="20201029 09:33:20.700"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.253" endtime="20201029 09:33:20.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:20.712" level="INFO">${RESULT} = [{'diff': 4.85999999355613e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000002437914e-07}, {'di...</msg>
<status status="PASS" starttime="20201029 09:33:20.703" endtime="20201029 09:33:20.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:20.724" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.85999999355613e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.71999999...</msg>
<status status="PASS" starttime="20201029 09:33:20.714" endtime="20201029 09:33:20.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.735" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:20.733" endtime="20201029 09:33:20.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.741" level="INFO">VALUE: [4.85999999355613e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.870000012147102e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.720000017499615e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07]</msg>
<status status="PASS" starttime="20201029 09:33:20.737" endtime="20201029 09:33:20.741"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.726" endtime="20201029 09:33:20.743"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.205" endtime="20201029 09:33:20.744"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.204" endtime="20201029 09:33:20.745"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.765" endtime="20201029 09:33:20.777"></status>
</kw>
<msg timestamp="20201029 09:33:20.778" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.762" endtime="20201029 09:33:20.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.785" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.781" endtime="20201029 09:33:20.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.787" endtime="20201029 09:33:20.791"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.754" endtime="20201029 09:33:20.792"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.750" endtime="20201029 09:33:20.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.810" endtime="20201029 09:33:21.184"></status>
</kw>
<msg timestamp="20201029 09:33:21.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.486038208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.486038681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.807" endtime="20201029 09:33:21.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.486038208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.486038681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.195" endtime="20201029 09:33:21.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.217" endtime="20201029 09:33:21.221"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.800" endtime="20201029 09:33:21.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.795" endtime="20201029 09:33:21.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:21.235" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.860000011319698e-07}, {'diff': 4.860000011319698e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:21.226" endtime="20201029 09:33:21.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:21.251" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.71999999...</msg>
<status status="PASS" starttime="20201029 09:33:21.237" endtime="20201029 09:33:21.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.261" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:21.259" endtime="20201029 09:33:21.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.266" level="INFO">VALUE: [4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.869999994383534e-07, 4.870000012147102e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.870000012147102e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.860000011319698e-07]</msg>
<status status="PASS" starttime="20201029 09:33:21.263" endtime="20201029 09:33:21.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.253" endtime="20201029 09:33:21.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.746" endtime="20201029 09:33:21.270"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.746" endtime="20201029 09:33:21.271"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.291" endtime="20201029 09:33:21.301"></status>
</kw>
<msg timestamp="20201029 09:33:21.303" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.287" endtime="20201029 09:33:21.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.309" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.305" endtime="20201029 09:33:21.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.311" endtime="20201029 09:33:21.315"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.280" endtime="20201029 09:33:21.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.276" endtime="20201029 09:33:21.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.334" endtime="20201029 09:33:21.709"></status>
</kw>
<msg timestamp="20201029 09:33:21.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.018330069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.018330556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.331" endtime="20201029 09:33:21.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.018330069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.018330556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.720" endtime="20201029 09:33:21.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.742" endtime="20201029 09:33:21.746"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.323" endtime="20201029 09:33:21.747"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.319" endtime="20201029 09:33:21.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:21.760" level="INFO">${RESULT} = [{'diff': 4.870000012147102e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000011319698e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07},...</msg>
<status status="PASS" starttime="20201029 09:33:21.750" endtime="20201029 09:33:21.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:21.772" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.870000012147102e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199...</msg>
<status status="PASS" starttime="20201029 09:33:21.762" endtime="20201029 09:33:21.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.782" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:21.780" endtime="20201029 09:33:21.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.788" level="INFO">VALUE: [4.870000012147102e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.870000012147102e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.870000012147102e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 09:33:21.784" endtime="20201029 09:33:21.788"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.774" endtime="20201029 09:33:21.790"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.272" endtime="20201029 09:33:21.791"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.271" endtime="20201029 09:33:21.792"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.812" endtime="20201029 09:33:21.823"></status>
</kw>
<msg timestamp="20201029 09:33:21.824" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.808" endtime="20201029 09:33:21.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.830" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.826" endtime="20201029 09:33:21.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.832" endtime="20201029 09:33:21.836"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.801" endtime="20201029 09:33:21.837"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.797" endtime="20201029 09:33:21.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.856" endtime="20201029 09:33:22.222"></status>
</kw>
<msg timestamp="20201029 09:33:22.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.531629819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.531630306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.852" endtime="20201029 09:33:22.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.531629819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.531630306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.233" endtime="20201029 09:33:22.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.256" endtime="20201029 09:33:22.259"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.845" endtime="20201029 09:33:22.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.840" endtime="20201029 09:33:22.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:22.273" level="INFO">${RESULT} = [{'diff': 4.869999994383534e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000011319698e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {...</msg>
<status status="PASS" starttime="20201029 09:33:22.264" endtime="20201029 09:33:22.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:22.284" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.869999994383534e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.730...</msg>
<status status="PASS" starttime="20201029 09:33:22.275" endtime="20201029 09:33:22.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.294" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:22.292" endtime="20201029 09:33:22.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.299" level="INFO">VALUE: [4.869999994383534e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.870000012147102e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.869999994383534e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 09:33:22.296" endtime="20201029 09:33:22.300"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.286" endtime="20201029 09:33:22.302"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.794" endtime="20201029 09:33:22.303"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.793" endtime="20201029 09:33:22.304"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.680" endtime="20201029 09:33:22.304"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:11.553" endtime="20201029 09:33:22.305" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:22.322" endtime="20201029 09:33:22.344"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.319" endtime="20201029 09:33:22.346"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.380" endtime="20201029 09:33:22.398"></status>
</kw>
<msg timestamp="20201029 09:33:22.399" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.377" endtime="20201029 09:33:22.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.406" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.401" endtime="20201029 09:33:22.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.412" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:22.408" endtime="20201029 09:33:22.413"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:22.370" endtime="20201029 09:33:22.415"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:22.363" endtime="20201029 09:33:22.416"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.361" endtime="20201029 09:33:22.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:22.424" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:22.423" endtime="20201029 09:33:22.425"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.419" endtime="20201029 09:33:22.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.357" endtime="20201029 09:33:22.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.356" endtime="20201029 09:33:22.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.428" endtime="20201029 09:33:22.431"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.352" endtime="20201029 09:33:22.433"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.347" endtime="20201029 09:33:22.434"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.316" endtime="20201029 09:33:22.435"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.456" endtime="20201029 09:33:22.469"></status>
</kw>
<msg timestamp="20201029 09:33:22.471" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.453" endtime="20201029 09:33:22.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.477" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.473" endtime="20201029 09:33:22.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.479" endtime="20201029 09:33:22.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.446" endtime="20201029 09:33:22.484"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.441" endtime="20201029 09:33:22.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.502" endtime="20201029 09:33:22.916"></status>
</kw>
<msg timestamp="20201029 09:33:22.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124829167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.124837917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.499" endtime="20201029 09:33:22.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.124829167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.124837917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.927" endtime="20201029 09:33:22.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.946" endtime="20201029 09:33:22.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.492" endtime="20201029 09:33:22.951"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.487" endtime="20201029 09:33:22.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:22.963" level="INFO">${RESULT} = [{'diff': 8.750000000001812e-06}, {'diff': 8.639000000004726e-06}, {'diff': 8.917000000011055e-06}, {'diff': 9.263999999994943e-06}, {'diff': 9.097999999999051e-06}, {'diff': 8.680999999996497e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:22.954" endtime="20201029 09:33:22.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:22.973" level="INFO">${OVERHEAD} = {'diff': [8.750000000001812e-06, 8.639000000004726e-06, 8.917000000011055e-06, 9.263999999994943e-06, 9.097999999999051e-06, 8.680999999996497e-06, 9.431000000004186e-06, 8.597000000012955e-06, 8.7640...</msg>
<status status="PASS" starttime="20201029 09:33:22.966" endtime="20201029 09:33:22.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.983" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:22.981" endtime="20201029 09:33:22.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.988" level="INFO">VALUE: [8.750000000001812e-06, 8.639000000004726e-06, 8.917000000011055e-06, 9.263999999994943e-06, 9.097999999999051e-06, 8.680999999996497e-06, 9.431000000004186e-06, 8.597000000012955e-06, 8.76400000000832e-06, 9.250000000002312e-06, 9.069000000000438e-06, 8.667000000017744e-06, 9.500000000023379e-06, 9.597000000000078e-06, 9.52800000000864e-06, 8.943999999982966e-06, 8.763999999994443e-06, 9.263999999981065e-06, 9.429999999976957e-06, 8.736000000009181e-06, 9.431000000004186e-06, 9.05600000000728e-06, 9.278000000001452e-06, 8.763999999994443e-06, 9.26400000000882e-06, 9.263999999981065e-06, 9.097999999985174e-06, 8.903000000004546e-06, 9.097000000013455e-06, 9.097999999985174e-06, 9.111000000006086e-06, 8.750000000001812e-06, 9.290999999994609e-06, 8.777000000015356e-06, 8.959000000002826e-06, 9.25000000001619e-06, 8.596999999999078e-06, 8.930999999989808e-06, 9.444999999996817e-06, 8.931000000017564e-06, 9.082999999993069e-06, 8.929999999990335e-06, 9.305999999986714e-06, 9.263999999981065e-06, 9.083000000020824e-06, 8.750000000001812e-06, 9.235999999995803e-06, 9.26400000000882e-06, 9.278000000001452e-06, 9.083000000020824e-06]</msg>
<status status="PASS" starttime="20201029 09:33:22.985" endtime="20201029 09:33:22.989"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.975" endtime="20201029 09:33:22.991"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.438" endtime="20201029 09:33:22.992"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.437" endtime="20201029 09:33:22.993"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.013" endtime="20201029 09:33:23.026"></status>
</kw>
<msg timestamp="20201029 09:33:23.027" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.009" endtime="20201029 09:33:23.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.033" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.029" endtime="20201029 09:33:23.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.036" endtime="20201029 09:33:23.040"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.002" endtime="20201029 09:33:23.041"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.998" endtime="20201029 09:33:23.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.062" endtime="20201029 09:33:23.443"></status>
</kw>
<msg timestamp="20201029 09:33:23.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125432028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125440625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.058" endtime="20201029 09:33:23.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.125432028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.125440625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.454" endtime="20201029 09:33:23.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.476" endtime="20201029 09:33:23.480"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.049" endtime="20201029 09:33:23.482"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.044" endtime="20201029 09:33:23.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:23.494" level="INFO">${RESULT} = [{'diff': 8.596999999999078e-06}, {'diff': 8.930999999989808e-06}, {'diff': 9.444999999996817e-06}, {'diff': 8.931000000017564e-06}, {'diff': 9.082999999993069e-06}, {'diff': 8.929999999990335e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:23.485" endtime="20201029 09:33:23.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:23.505" level="INFO">${OVERHEAD} = {'diff': [8.596999999999078e-06, 8.930999999989808e-06, 9.444999999996817e-06, 8.931000000017564e-06, 9.082999999993069e-06, 8.929999999990335e-06, 9.305999999986714e-06, 9.263999999981065e-06, 9.0830...</msg>
<status status="PASS" starttime="20201029 09:33:23.497" endtime="20201029 09:33:23.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.515" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:23.513" endtime="20201029 09:33:23.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.522" level="INFO">VALUE: [8.596999999999078e-06, 8.930999999989808e-06, 9.444999999996817e-06, 8.931000000017564e-06, 9.082999999993069e-06, 8.929999999990335e-06, 9.305999999986714e-06, 9.263999999981065e-06, 9.083000000020824e-06, 8.750000000001812e-06, 9.235999999995803e-06, 9.26400000000882e-06, 9.278000000001452e-06, 9.083000000020824e-06, 9.597000000027833e-06, 8.973000000023212e-06, 8.875000000019284e-06, 8.750000000001812e-06, 9.276999999974223e-06, 9.111000000006086e-06, 9.166000000004892e-06, 9.597999999999551e-06, 9.26400000000882e-06, 9.082999999909802e-06, 9.278000000056963e-06, 9.235999999912536e-06, 8.750000000001812e-06, 9.429999999976957e-06, 8.610999999936197e-06, 9.26400000000882e-06, 9.263000000037103e-06, 9.26400000000882e-06, 9.429999999976957e-06, 9.417000000011555e-06, 8.528000000063152e-06, 8.777999999987074e-06, 8.707999999968408e-06, 9.070000000055423e-06, 9.26400000000882e-06, 9.083000000020824e-06, 8.944000000066232e-06, 8.930999999989808e-06, 9.111000000006086e-06, 8.569000000013816e-06, 8.596999999999078e-06, 8.639000000032482e-06, 9.26400000000882e-06, 8.944000000066232e-06, 8.61100000004722e-06, 8.61100000004722e-06, 9.096999999957944e-06, 9.458999999933937e-06, 9.097000000068967e-06, 9.249999999960679e-06, 9.417000000011555e-06, 8.610999999936197e-06, 9.111999999977805e-06, 8.612000000018938e-06, 9.415999999928815e-06, 9.097000000068967e-06, 8.777999999987074e-06, 8.777000000015356e-06, 9.083000000020824e-06, 9.443999999914077e-06]</msg>
<status status="PASS" starttime="20201029 09:33:23.518" endtime="20201029 09:33:23.523"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.507" endtime="20201029 09:33:23.525"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.994" endtime="20201029 09:33:23.526"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.994" endtime="20201029 09:33:23.526"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.547" endtime="20201029 09:33:23.559"></status>
</kw>
<msg timestamp="20201029 09:33:23.561" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.543" endtime="20201029 09:33:23.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.567" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.563" endtime="20201029 09:33:23.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.569" endtime="20201029 09:33:23.573"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.536" endtime="20201029 09:33:23.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.532" endtime="20201029 09:33:23.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.592" endtime="20201029 09:33:23.960"></status>
</kw>
<msg timestamp="20201029 09:33:23.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.671906236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.671915333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.589" endtime="20201029 09:33:23.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.671906236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.671915333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.971" endtime="20201029 09:33:23.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.993" endtime="20201029 09:33:23.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.582" endtime="20201029 09:33:23.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.577" endtime="20201029 09:33:24.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:24.011" level="INFO">${RESULT} = [{'diff': 9.096999999957944e-06}, {'diff': 9.458999999933937e-06}, {'diff': 9.097000000068967e-06}, {'diff': 9.249999999960679e-06}, {'diff': 9.417000000011555e-06}, {'diff': 8.610999999936197e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:24.001" endtime="20201029 09:33:24.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:24.023" level="INFO">${OVERHEAD} = {'diff': [9.096999999957944e-06, 9.458999999933937e-06, 9.097000000068967e-06, 9.249999999960679e-06, 9.417000000011555e-06, 8.610999999936197e-06, 9.111999999977805e-06, 8.612000000018938e-06, 9.4159...</msg>
<status status="PASS" starttime="20201029 09:33:24.013" endtime="20201029 09:33:24.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.033" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:24.031" endtime="20201029 09:33:24.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.039" level="INFO">VALUE: [9.096999999957944e-06, 9.458999999933937e-06, 9.097000000068967e-06, 9.249999999960679e-06, 9.417000000011555e-06, 8.610999999936197e-06, 9.111999999977805e-06, 8.612000000018938e-06, 9.415999999928815e-06, 9.097000000068967e-06, 8.777999999987074e-06, 8.777000000015356e-06, 9.083000000020824e-06, 9.443999999914077e-06, 9.292000000105105e-06, 9.125000000054229e-06, 8.944000000177255e-06, 8.94399999995521e-06, 8.930000000129112e-06, 8.776999999904334e-06, 8.653000000080624e-06, 8.777999999987074e-06, 9.111000000006086e-06, 8.776999999904334e-06, 8.959000000086093e-06, 9.04099999998742e-06, 9.278000000056963e-06, 8.666999999906722e-06, 9.429999999976957e-06, 9.096999999957944e-06, 8.930999999989808e-06, 9.111000000006086e-06, 9.624999999902073e-06, 9.304999999848462e-06, 9.431000000059697e-06, 8.74999999989079e-06, 8.958000000003352e-06, 9.26400000000882e-06, 8.762999999856191e-06, 9.26400000000882e-06, 9.598000000110574e-06, 8.62499999998434e-06, 9.26400000000882e-06, 8.597999999970796e-06, 9.096999999957944e-06, 9.278000000056963e-06, 9.41600000015086e-06, 9.415999999928815e-06, 9.458999999933937e-06, 8.930000000129112e-06, 8.930999999989808e-06, 8.930999999989808e-06, 9.444000000025099e-06, 9.111000000006086e-06, 9.6670000000465e-06, 8.94399999995521e-06, 9.263999999786776e-06, 9.444999999885795e-06, 8.94399999995521e-06, 9.249999999960679e-06, 9.611000000075975e-06, 9.096999999957944e-06, 8.596999999888055e-06, 9.429999999976957e-06]</msg>
<status status="PASS" starttime="20201029 09:33:24.036" endtime="20201029 09:33:24.040"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.025" endtime="20201029 09:33:24.041"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.528" endtime="20201029 09:33:24.043"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.527" endtime="20201029 09:33:24.043"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.063" endtime="20201029 09:33:24.076"></status>
</kw>
<msg timestamp="20201029 09:33:24.077" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.060" endtime="20201029 09:33:24.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.084" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.080" endtime="20201029 09:33:24.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.086" endtime="20201029 09:33:24.090"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.053" endtime="20201029 09:33:24.092"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.048" endtime="20201029 09:33:24.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.112" endtime="20201029 09:33:24.479"></status>
</kw>
<msg timestamp="20201029 09:33:24.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.195584361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.195593292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.108" endtime="20201029 09:33:24.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.195584361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.195593292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.490" endtime="20201029 09:33:24.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.512" endtime="20201029 09:33:24.516"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.100" endtime="20201029 09:33:24.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.095" endtime="20201029 09:33:24.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:24.531" level="INFO">${RESULT} = [{'diff': 8.930999999989808e-06}, {'diff': 8.930999999989808e-06}, {'diff': 9.444000000025099e-06}, {'diff': 9.111000000006086e-06}, {'diff': 9.6670000000465e-06}, {'diff': 8.94399999995521e-06}, {'di...</msg>
<status status="PASS" starttime="20201029 09:33:24.520" endtime="20201029 09:33:24.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:24.547" level="INFO">${OVERHEAD} = {'diff': [8.930999999989808e-06, 8.930999999989808e-06, 9.444000000025099e-06, 9.111000000006086e-06, 9.6670000000465e-06, 8.94399999995521e-06, 9.263999999786776e-06, 9.444999999885795e-06, 8.9439999...</msg>
<status status="PASS" starttime="20201029 09:33:24.539" endtime="20201029 09:33:24.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.557" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:24.555" endtime="20201029 09:33:24.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.563" level="INFO">VALUE: [8.930999999989808e-06, 8.930999999989808e-06, 9.444000000025099e-06, 9.111000000006086e-06, 9.6670000000465e-06, 8.94399999995521e-06, 9.263999999786776e-06, 9.444999999885795e-06, 8.94399999995521e-06, 9.249999999960679e-06, 9.611000000075975e-06, 9.096999999957944e-06, 8.596999999888055e-06, 9.429999999976957e-06, 8.750000000112834e-06, 9.319999999979345e-06, 8.72200000001655e-06, 9.415999999928815e-06, 8.762999999856191e-06, 8.610999999936197e-06, 9.429999999976957e-06, 8.610999999936197e-06, 9.125000000054229e-06, 8.91600000008097e-06, 9.26400000000882e-06, 9.097000000179989e-06, 9.429999999976957e-06, 9.431000000059697e-06, 9.44500000010784e-06, 9.26400000000882e-06, 9.402999999963413e-06, 8.764000000160976e-06, 8.610999999936197e-06, 9.096999999957944e-06, 8.611000000158242e-06, 9.429999999976957e-06, 8.958000000003352e-06, 9.611000000075975e-06, 8.91600000008097e-06, 9.443999999803054e-06, 9.055999999896258e-06, 8.763999999938932e-06, 9.097000000179989e-06, 8.930999999989808e-06, 8.94500000003795e-06, 8.875000000019284e-06, 8.930999999989808e-06, 8.74999999989079e-06, 9.098000000040685e-06, 9.111000000006086e-06, 8.916999999941666e-06, 9.38899999991527e-06, 9.276999999974223e-06, 9.444000000025099e-06, 9.402999999963413e-06, 9.292000000105105e-06, 8.94500000003795e-06, 9.402999999963413e-06, 8.596999999888055e-06, 9.26400000000882e-06, 8.763999999938932e-06, 9.332999999944747e-06, 8.929999999907068e-06, 8.763999999938932e-06]</msg>
<status status="PASS" starttime="20201029 09:33:24.560" endtime="20201029 09:33:24.564"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.549" endtime="20201029 09:33:24.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.045" endtime="20201029 09:33:24.567"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.044" endtime="20201029 09:33:24.567"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.587" endtime="20201029 09:33:24.601"></status>
</kw>
<msg timestamp="20201029 09:33:24.602" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.584" endtime="20201029 09:33:24.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.608" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.604" endtime="20201029 09:33:24.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.610" endtime="20201029 09:33:24.614"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.577" endtime="20201029 09:33:24.615"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.572" endtime="20201029 09:33:24.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.635" endtime="20201029 09:33:25.011"></status>
</kw>
<msg timestamp="20201029 09:33:25.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.702208333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.70221725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:24.632" endtime="20201029 09:33:25.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.702208333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.70221725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:25.022" endtime="20201029 09:33:25.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.044" endtime="20201029 09:33:25.048"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.623" endtime="20201029 09:33:25.049"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.618" endtime="20201029 09:33:25.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:25.062" level="INFO">${RESULT} = [{'diff': 8.916999999941666e-06}, {'diff': 9.38899999991527e-06}, {'diff': 9.276999999974223e-06}, {'diff': 9.444000000025099e-06}, {'diff': 9.402999999963413e-06}, {'diff': 9.292000000105105e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:25.052" endtime="20201029 09:33:25.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:25.073" level="INFO">${OVERHEAD} = {'diff': [8.916999999941666e-06, 9.38899999991527e-06, 9.276999999974223e-06, 9.444000000025099e-06, 9.402999999963413e-06, 9.292000000105105e-06, 8.94500000003795e-06, 9.402999999963413e-06, 8.596999...</msg>
<status status="PASS" starttime="20201029 09:33:25.064" endtime="20201029 09:33:25.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.083" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:25.081" endtime="20201029 09:33:25.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.089" level="INFO">VALUE: [8.916999999941666e-06, 9.38899999991527e-06, 9.276999999974223e-06, 9.444000000025099e-06, 9.402999999963413e-06, 9.292000000105105e-06, 8.94500000003795e-06, 9.402999999963413e-06, 8.596999999888055e-06, 9.26400000000882e-06, 8.763999999938932e-06, 9.332999999944747e-06, 8.929999999907068e-06, 8.763999999938932e-06, 9.4170000002336e-06, 9.429999999976957e-06, 9.429999999976957e-06, 9.110999999784042e-06, 8.77799999976503e-06, 8.763999999938932e-06, 9.250000000182723e-06, 9.263999999564732e-06, 9.458000000073241e-06, 8.930999999989808e-06, 9.096999999957944e-06, 9.429999999976957e-06, 8.929999999907068e-06, 8.929999999907068e-06, 9.444999999885795e-06, 8.959000000086093e-06, 8.611000000158242e-06, 9.0699999999444e-06, 8.597000000332145e-06, 9.096999999957944e-06, 9.277999999834918e-06, 8.638999999810437e-06, 9.096999999957944e-06, 9.277999999834918e-06, 9.429999999976957e-06, 8.763999999938932e-06, 9.278000000279008e-06, 9.098000000040685e-06, 9.096999999957944e-06, 9.26400000000882e-06, 9.652999999776313e-06, 8.763999999938932e-06, 9.125000000054229e-06, 8.583000000061958e-06, 8.750000000112834e-06, 8.750000000112834e-06, 8.929999999907068e-06, 8.764000000383021e-06, 9.429999999976957e-06, 8.943999999733165e-06, 8.889000000067426e-06, 9.431000000059697e-06, 9.444999999885795e-06, 9.429999999976957e-06, 9.430000000421046e-06, 9.402999999963413e-06, 8.597000000332145e-06, 8.763999999938932e-06, 9.471999999899339e-06, 9.277999999834918e-06]</msg>
<status status="PASS" starttime="20201029 09:33:25.085" endtime="20201029 09:33:25.090"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.075" endtime="20201029 09:33:25.091"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.569" endtime="20201029 09:33:25.093"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.568" endtime="20201029 09:33:25.093"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.115" endtime="20201029 09:33:25.129"></status>
</kw>
<msg timestamp="20201029 09:33:25.130" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.112" endtime="20201029 09:33:25.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.136" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.132" endtime="20201029 09:33:25.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.139" endtime="20201029 09:33:25.142"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.104" endtime="20201029 09:33:25.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.098" endtime="20201029 09:33:25.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.162" endtime="20201029 09:33:25.554"></status>
</kw>
<msg timestamp="20201029 09:33:25.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.215832028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.215840958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.158" endtime="20201029 09:33:25.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.215832028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.215840958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.565" endtime="20201029 09:33:25.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.587" endtime="20201029 09:33:25.591"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.151" endtime="20201029 09:33:25.592"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.147" endtime="20201029 09:33:25.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:25.605" level="INFO">${RESULT} = [{'diff': 8.929999999907068e-06}, {'diff': 8.764000000383021e-06}, {'diff': 9.429999999976957e-06}, {'diff': 8.943999999733165e-06}, {'diff': 8.889000000067426e-06}, {'diff': 9.431000000059697e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:25.596" endtime="20201029 09:33:25.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:25.617" level="INFO">${OVERHEAD} = {'diff': [8.929999999907068e-06, 8.764000000383021e-06, 9.429999999976957e-06, 8.943999999733165e-06, 8.889000000067426e-06, 9.431000000059697e-06, 9.444999999885795e-06, 9.429999999976957e-06, 9.4300...</msg>
<status status="PASS" starttime="20201029 09:33:25.608" endtime="20201029 09:33:25.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.627" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:25.625" endtime="20201029 09:33:25.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.633" level="INFO">VALUE: [8.929999999907068e-06, 8.764000000383021e-06, 9.429999999976957e-06, 8.943999999733165e-06, 8.889000000067426e-06, 9.431000000059697e-06, 9.444999999885795e-06, 9.429999999976957e-06, 9.430000000421046e-06, 9.402999999963413e-06, 8.597000000332145e-06, 8.763999999938932e-06, 9.471999999899339e-06, 9.277999999834918e-06, 9.458000000073241e-06, 8.916999999719621e-06, 8.583000000061958e-06, 9.26400000000882e-06, 8.596999999888055e-06, 9.583000000201736e-06, 8.597000000332145e-06, 8.944000000177255e-06, 8.930999999989808e-06, 8.959000000086093e-06, 9.291000000022365e-06, 9.110999999784042e-06, 9.277999999834918e-06, 8.72200000001655e-06, 8.778000000209119e-06, 9.26400000000882e-06, 9.26400000000882e-06, 8.847999999783696e-06, 9.110999999784042e-06, 8.763999999938932e-06, 8.763999999938932e-06, 9.26400000000882e-06, 9.096999999957944e-06, 8.91700000016371e-06, 9.611999999936671e-06, 8.763999999938932e-06, 9.110999999784042e-06, 9.458000000073241e-06, 9.278000000279008e-06, 8.763999999938932e-06, 9.26400000000882e-06, 9.096999999957944e-06, 9.431000000059697e-06, 8.999999999925734e-06, 8.638999999810437e-06, 8.77799999976503e-06, 8.916999999719621e-06, 9.26400000000882e-06, 8.929999999907068e-06, 8.776999999682289e-06, 8.763999999938932e-06, 9.084000000214587e-06, 9.431000000059697e-06, 9.110999999784042e-06, 9.444999999885795e-06, 9.26400000000882e-06, 9.26400000000882e-06, 9.082999999687758e-06, 8.750000000112834e-06, 9.291000000022365e-06]</msg>
<status status="PASS" starttime="20201029 09:33:25.630" endtime="20201029 09:33:25.634"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.619" endtime="20201029 09:33:25.635"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.095" endtime="20201029 09:33:25.637"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.094" endtime="20201029 09:33:25.637"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.657" endtime="20201029 09:33:25.670"></status>
</kw>
<msg timestamp="20201029 09:33:25.671" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.654" endtime="20201029 09:33:25.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.678" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.674" endtime="20201029 09:33:25.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.680" endtime="20201029 09:33:25.684"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.647" endtime="20201029 09:33:25.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.642" endtime="20201029 09:33:25.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.703" endtime="20201029 09:33:26.071"></status>
</kw>
<msg timestamp="20201029 09:33:26.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.733693097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.733702014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.700" endtime="20201029 09:33:26.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.733693097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.733702014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.082" endtime="20201029 09:33:26.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.104" endtime="20201029 09:33:26.108"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.693" endtime="20201029 09:33:26.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.688" endtime="20201029 09:33:26.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:26.122" level="INFO">${RESULT} = [{'diff': 8.916999999719621e-06}, {'diff': 9.26400000000882e-06}, {'diff': 8.929999999907068e-06}, {'diff': 8.776999999682289e-06}, {'diff': 8.763999999938932e-06}, {'diff': 9.084000000214587e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:26.113" endtime="20201029 09:33:26.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:26.140" level="INFO">${OVERHEAD} = {'diff': [8.916999999719621e-06, 9.26400000000882e-06, 8.929999999907068e-06, 8.776999999682289e-06, 8.763999999938932e-06, 9.084000000214587e-06, 9.431000000059697e-06, 9.110999999784042e-06, 9.44499...</msg>
<status status="PASS" starttime="20201029 09:33:26.124" endtime="20201029 09:33:26.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.150" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:26.148" endtime="20201029 09:33:26.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.161" level="INFO">VALUE: [8.916999999719621e-06, 9.26400000000882e-06, 8.929999999907068e-06, 8.776999999682289e-06, 8.763999999938932e-06, 9.084000000214587e-06, 9.431000000059697e-06, 9.110999999784042e-06, 9.444999999885795e-06, 9.26400000000882e-06, 9.26400000000882e-06, 9.082999999687758e-06, 8.750000000112834e-06, 9.291000000022365e-06, 9.443999999803054e-06, 9.111999999866782e-06, 9.277999999834918e-06, 9.625000000124118e-06, 8.680999999732819e-06, 9.125000000054229e-06, 9.098000000040685e-06, 8.97199999982945e-06, 9.096999999957944e-06, 9.61099999985393e-06, 9.332999999944747e-06, 8.945000000259995e-06, 9.277999999834918e-06, 9.111000000228131e-06, 9.41600000015086e-06, 8.77799999976503e-06, 9.278000000279008e-06, 8.583000000061958e-06, 8.930999999989808e-06, 9.429999999976957e-06, 8.860999999971142e-06, 9.429999999976957e-06, 9.41699999978951e-06, 9.443999999803054e-06, 9.096999999957944e-06, 9.458000000073241e-06, 8.778000000209119e-06, 8.750000000112834e-06, 9.26400000000882e-06, 8.930999999989808e-06, 8.736000000286737e-06, 9.443999999803054e-06, 8.943999999733165e-06, 9.222000000086439e-06, 9.26400000000882e-06, 9.431000000059697e-06, 8.638999999810437e-06, 8.597999999970796e-06, 8.91700000016371e-06, 9.431000000059697e-06, 8.943999999733165e-06, 8.541999999778227e-06, 9.098000000040685e-06, 9.096999999957944e-06, 8.930999999989808e-06, 9.291000000022365e-06, 8.945000000259995e-06, 9.096999999957944e-06, 8.610999999714153e-06, 8.791999999591127e-06]</msg>
<status status="PASS" starttime="20201029 09:33:26.155" endtime="20201029 09:33:26.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.142" endtime="20201029 09:33:26.164"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.639" endtime="20201029 09:33:26.167"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.638" endtime="20201029 09:33:26.167"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.197" endtime="20201029 09:33:26.210"></status>
</kw>
<msg timestamp="20201029 09:33:26.211" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.192" endtime="20201029 09:33:26.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.217" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.213" endtime="20201029 09:33:26.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.220" endtime="20201029 09:33:26.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.183" endtime="20201029 09:33:26.225"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.175" endtime="20201029 09:33:26.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.243" endtime="20201029 09:33:26.618"></status>
</kw>
<msg timestamp="20201029 09:33:26.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.266583444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.266592083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.240" endtime="20201029 09:33:26.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.266583444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.266592083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.629" endtime="20201029 09:33:26.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.652" endtime="20201029 09:33:26.655"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.233" endtime="20201029 09:33:26.657"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.228" endtime="20201029 09:33:26.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:26.669" level="INFO">${RESULT} = [{'diff': 8.638999999810437e-06}, {'diff': 8.597999999970796e-06}, {'diff': 8.91700000016371e-06}, {'diff': 9.431000000059697e-06}, {'diff': 8.943999999733165e-06}, {'diff': 8.541999999778227e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:26.660" endtime="20201029 09:33:26.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:26.680" level="INFO">${OVERHEAD} = {'diff': [8.638999999810437e-06, 8.597999999970796e-06, 8.91700000016371e-06, 9.431000000059697e-06, 8.943999999733165e-06, 8.541999999778227e-06, 9.098000000040685e-06, 9.096999999957944e-06, 8.93099...</msg>
<status status="PASS" starttime="20201029 09:33:26.671" endtime="20201029 09:33:26.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.690" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:26.687" endtime="20201029 09:33:26.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.695" level="INFO">VALUE: [8.638999999810437e-06, 8.597999999970796e-06, 8.91700000016371e-06, 9.431000000059697e-06, 8.943999999733165e-06, 8.541999999778227e-06, 9.098000000040685e-06, 9.096999999957944e-06, 8.930999999989808e-06, 9.291000000022365e-06, 8.945000000259995e-06, 9.096999999957944e-06, 8.610999999714153e-06, 8.791999999591127e-06, 8.958000000003352e-06, 9.250000000182723e-06, 9.26400000000882e-06, 9.249999999738634e-06, 8.91700000016371e-06, 8.763999999938932e-06, 9.083000000131847e-06, 8.763999999938932e-06, 8.611999999796893e-06, 8.584000000144698e-06, 8.749999999668745e-06, 8.763999999938932e-06, 9.111999999866782e-06, 9.304999999848462e-06, 8.77799999976503e-06, 8.778000000209119e-06, 9.082999999687758e-06, 9.098000000040685e-06, 8.583999999700609e-06, 8.930000000351157e-06, 9.26400000000882e-06, 8.776999999682289e-06, 9.625000000124118e-06, 9.429999999976957e-06, 8.819999999687411e-06, 9.083000000131847e-06, 9.26400000000882e-06, 9.110999999784042e-06, 9.444000000247144e-06, 9.458000000073241e-06, 9.055000000035562e-06, 8.887999999984686e-06, 8.597000000332145e-06, 9.096999999957944e-06, 9.431000000059697e-06, 9.278000000279008e-06, 9.26400000000882e-06, 8.596999999888055e-06, 9.083000000131847e-06, 9.277999999834918e-06, 8.929999999907068e-06, 9.111000000228131e-06, 8.763999999938932e-06, 9.41699999978951e-06, 9.096999999957944e-06, 8.832999999874858e-06, 8.763999999938932e-06, 9.443999999803054e-06, 9.26400000000882e-06, 8.56900000023586e-06]</msg>
<status status="PASS" starttime="20201029 09:33:26.692" endtime="20201029 09:33:26.696"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.682" endtime="20201029 09:33:26.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.171" endtime="20201029 09:33:26.699"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.169" endtime="20201029 09:33:26.700"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.721" endtime="20201029 09:33:26.733"></status>
</kw>
<msg timestamp="20201029 09:33:26.734" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.716" endtime="20201029 09:33:26.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.741" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.736" endtime="20201029 09:33:26.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.744" endtime="20201029 09:33:26.749"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.709" endtime="20201029 09:33:26.750"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.705" endtime="20201029 09:33:26.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.769" endtime="20201029 09:33:27.146"></status>
</kw>
<msg timestamp="20201029 09:33:27.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.796361986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.79637125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:26.766" endtime="20201029 09:33:27.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.796361986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.79637125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:27.158" endtime="20201029 09:33:27.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.187" endtime="20201029 09:33:27.195"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.759" endtime="20201029 09:33:27.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.754" endtime="20201029 09:33:27.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:27.222" level="INFO">${RESULT} = [{'diff': 9.26400000000882e-06}, {'diff': 8.596999999888055e-06}, {'diff': 9.083000000131847e-06}, {'diff': 9.277999999834918e-06}, {'diff': 8.929999999907068e-06}, {'diff': 9.111000000228131e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:27.204" endtime="20201029 09:33:27.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:27.240" level="INFO">${OVERHEAD} = {'diff': [9.26400000000882e-06, 8.596999999888055e-06, 9.083000000131847e-06, 9.277999999834918e-06, 8.929999999907068e-06, 9.111000000228131e-06, 8.763999999938932e-06, 9.41699999978951e-06, 9.096999...</msg>
<status status="PASS" starttime="20201029 09:33:27.226" endtime="20201029 09:33:27.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.256" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:27.253" endtime="20201029 09:33:27.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.265" level="INFO">VALUE: [9.26400000000882e-06, 8.596999999888055e-06, 9.083000000131847e-06, 9.277999999834918e-06, 8.929999999907068e-06, 9.111000000228131e-06, 8.763999999938932e-06, 9.41699999978951e-06, 9.096999999957944e-06, 8.832999999874858e-06, 8.763999999938932e-06, 9.443999999803054e-06, 9.26400000000882e-06, 8.56900000023586e-06, 9.66599999951967e-06, 9.278000000279008e-06, 9.26400000000882e-06, 9.26299999992608e-06, 9.278000000279008e-06, 9.26400000000882e-06, 9.084000000214587e-06, 8.776999999682289e-06, 9.277000000196267e-06, 9.278000000279008e-06, 8.792000000035216e-06, 8.944999999371817e-06, 8.847999999339606e-06, 9.277000000196267e-06, 9.250000000626812e-06, 9.110999999784042e-06, 8.596999999888055e-06, 9.429999999532868e-06, 9.084000000214587e-06, 9.096999999513855e-06, 8.930999999989808e-06, 8.944999999371817e-06, 8.792000000035216e-06, 8.610999999270064e-06, 8.77799999976503e-06, 9.430999999615608e-06, 9.110999999784042e-06, 8.944000000177255e-06, 8.972000000717628e-06, 9.26400000000882e-06, 9.4170000002336e-06, 8.77799999976503e-06, 9.26400000000882e-06, 8.929999999907068e-06, 9.180000000164057e-06, 8.596999999888055e-06, 9.249999999738634e-06, 8.930999999989808e-06, 8.930999999989808e-06, 9.096999999513855e-06, 8.916999999719621e-06, 9.597000000027833e-06, 9.443999999803054e-06, 9.292000000549194e-06, 9.459000000155982e-06, 9.430999999615608e-06, 9.430999999615608e-06, 8.792000000035216e-06, 9.458000000073241e-06, 9.429999999532868e-06]</msg>
<status status="PASS" starttime="20201029 09:33:27.260" endtime="20201029 09:33:27.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.244" endtime="20201029 09:33:27.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.701" endtime="20201029 09:33:27.271"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.700" endtime="20201029 09:33:27.272"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.303" endtime="20201029 09:33:27.320"></status>
</kw>
<msg timestamp="20201029 09:33:27.322" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.298" endtime="20201029 09:33:27.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.332" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.325" endtime="20201029 09:33:27.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.335" endtime="20201029 09:33:27.341"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.288" endtime="20201029 09:33:27.344"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.281" endtime="20201029 09:33:27.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.369" endtime="20201029 09:33:27.748"></status>
</kw>
<msg timestamp="20201029 09:33:27.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.310345236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.310354486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.365" endtime="20201029 09:33:27.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.310345236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.310354486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.760" endtime="20201029 09:33:27.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.783" endtime="20201029 09:33:27.786"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.356" endtime="20201029 09:33:27.788"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.348" endtime="20201029 09:33:27.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:27.801" level="INFO">${RESULT} = [{'diff': 9.249999999738634e-06}, {'diff': 8.930999999989808e-06}, {'diff': 8.930999999989808e-06}, {'diff': 9.096999999513855e-06}, {'diff': 8.916999999719621e-06}, {'diff': 9.597000000027833e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:27.791" endtime="20201029 09:33:27.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:27.813" level="INFO">${OVERHEAD} = {'diff': [9.249999999738634e-06, 8.930999999989808e-06, 8.930999999989808e-06, 9.096999999513855e-06, 8.916999999719621e-06, 9.597000000027833e-06, 9.443999999803054e-06, 9.292000000549194e-06, 9.4590...</msg>
<status status="PASS" starttime="20201029 09:33:27.803" endtime="20201029 09:33:27.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.823" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:27.821" endtime="20201029 09:33:27.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.829" level="INFO">VALUE: [9.249999999738634e-06, 8.930999999989808e-06, 8.930999999989808e-06, 9.096999999513855e-06, 8.916999999719621e-06, 9.597000000027833e-06, 9.443999999803054e-06, 9.292000000549194e-06, 9.459000000155982e-06, 9.430999999615608e-06, 9.430999999615608e-06, 8.792000000035216e-06, 9.458000000073241e-06, 9.429999999532868e-06, 8.792000000035216e-06, 8.596999999888055e-06, 8.611000000158242e-06, 8.929999999907068e-06, 8.541999999778227e-06, 8.596999999888055e-06, 8.56900000023586e-06, 9.278000000279008e-06, 8.583999999700609e-06, 9.61100000029802e-06, 8.763999999494843e-06, 9.291000000466454e-06, 9.26400000000882e-06, 9.278000000279008e-06, 8.764000000383021e-06, 9.138999999436237e-06, 8.611000000158242e-06, 9.249999999738634e-06, 8.735999999842647e-06, 9.096999999513855e-06, 8.776999999682289e-06, 8.9170000006078e-06, 8.76300000030028e-06, 9.430000000421046e-06, 9.319000000118649e-06, 9.431000000503786e-06, 9.278000000279008e-06, 8.735999999842647e-06, 9.597000000027833e-06, 8.625000000428429e-06, 9.597000000027833e-06, 8.596999999888055e-06, 8.596999999888055e-06, 9.110999999784042e-06, 9.097000000402033e-06, 8.750000000112834e-06, 9.458000000073241e-06, 9.110999999784042e-06, 9.26400000000882e-06, 9.597000000027833e-06, 8.972000000717628e-06, 9.430999999615608e-06, 9.4170000002336e-06, 8.763999999494843e-06, 9.401999999880672e-06, 8.944000000177255e-06, 9.61100000029802e-06, 9.249999999738634e-06, 8.945000000259995e-06, 9.110999999784042e-06]</msg>
<status status="PASS" starttime="20201029 09:33:27.826" endtime="20201029 09:33:27.830"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.815" endtime="20201029 09:33:27.832"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.275" endtime="20201029 09:33:27.833"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.273" endtime="20201029 09:33:27.833"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.854" endtime="20201029 09:33:27.866"></status>
</kw>
<msg timestamp="20201029 09:33:27.867" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.850" endtime="20201029 09:33:27.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.873" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.869" endtime="20201029 09:33:27.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.875" endtime="20201029 09:33:27.879"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.843" endtime="20201029 09:33:27.881"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.838" endtime="20201029 09:33:27.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.899" endtime="20201029 09:33:28.285"></status>
</kw>
<msg timestamp="20201029 09:33:28.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.884906681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.884916139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.895" endtime="20201029 09:33:28.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.884906681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.884916139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.296" endtime="20201029 09:33:28.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.319" endtime="20201029 09:33:28.323"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.888" endtime="20201029 09:33:28.325"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.884" endtime="20201029 09:33:28.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:28.337" level="INFO">${RESULT} = [{'diff': 9.458000000073241e-06}, {'diff': 9.110999999784042e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.597000000027833e-06}, {'diff': 8.972000000717628e-06}, {'diff': 9.430999999615608e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:28.328" endtime="20201029 09:33:28.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:28.348" level="INFO">${OVERHEAD} = {'diff': [9.458000000073241e-06, 9.110999999784042e-06, 9.26400000000882e-06, 9.597000000027833e-06, 8.972000000717628e-06, 9.430999999615608e-06, 9.4170000002336e-06, 8.763999999494843e-06, 9.4019999...</msg>
<status status="PASS" starttime="20201029 09:33:28.339" endtime="20201029 09:33:28.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.358" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:28.356" endtime="20201029 09:33:28.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.363" level="INFO">VALUE: [9.458000000073241e-06, 9.110999999784042e-06, 9.26400000000882e-06, 9.597000000027833e-06, 8.972000000717628e-06, 9.430999999615608e-06, 9.4170000002336e-06, 8.763999999494843e-06, 9.401999999880672e-06, 8.944000000177255e-06, 9.61100000029802e-06, 9.249999999738634e-06, 8.945000000259995e-06, 9.110999999784042e-06, 8.805000000222662e-06, 8.763999999494843e-06, 9.26400000000882e-06, 8.76300000030028e-06, 9.249999999738634e-06, 8.929999999907068e-06, 9.291999999661016e-06, 9.486000000613615e-06, 9.570000000458379e-06, 9.139000000324415e-06, 9.110999999784042e-06, 9.000000000369823e-06, 8.583999999700609e-06, 9.11200000075496e-06, 8.541000000583665e-06, 9.193999999546065e-06, 9.097000000402033e-06, 8.764000000383021e-06, 9.111999999866782e-06, 9.26299999992608e-06, 9.125000000054229e-06, 8.945000000259995e-06, 8.750000000112834e-06, 8.958999999642003e-06, 8.930999999989808e-06, 8.833000000763036e-06, 8.943999999289076e-06, 8.929999999907068e-06, 8.945000000259995e-06, 8.930999999989808e-06, 8.792000000035216e-06, 9.443999999803054e-06, 8.847000000145044e-06, 9.304999999848462e-06, 8.930999999989808e-06, 8.945000000259995e-06, 9.26400000000882e-06, 9.194999999628806e-06, 9.597000000027833e-06, 8.790999999952476e-06, 9.110999999784042e-06, 9.430999999615608e-06, 9.443999999803054e-06, 9.111999999866782e-06, 9.278000000279008e-06, 9.026999999939278e-06, 9.110999999784042e-06, 9.444000000691233e-06, 9.082999999243668e-06, 8.596999999888055e-06]</msg>
<status status="PASS" starttime="20201029 09:33:28.360" endtime="20201029 09:33:28.365"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.350" endtime="20201029 09:33:28.367"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.835" endtime="20201029 09:33:28.368"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.834" endtime="20201029 09:33:28.369"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.389" endtime="20201029 09:33:28.403"></status>
</kw>
<msg timestamp="20201029 09:33:28.404" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.385" endtime="20201029 09:33:28.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.411" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.407" endtime="20201029 09:33:28.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.413" endtime="20201029 09:33:28.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.378" endtime="20201029 09:33:28.418"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.374" endtime="20201029 09:33:28.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.436" endtime="20201029 09:33:28.820"></status>
</kw>
<msg timestamp="20201029 09:33:28.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.422211361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.422220625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.433" endtime="20201029 09:33:28.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.422211361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.422220625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.831" endtime="20201029 09:33:28.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.853" endtime="20201029 09:33:28.857"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.426" endtime="20201029 09:33:28.859"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.421" endtime="20201029 09:33:28.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:28.871" level="INFO">${RESULT} = [{'diff': 9.26400000000882e-06}, {'diff': 9.194999999628806e-06}, {'diff': 9.597000000027833e-06}, {'diff': 8.790999999952476e-06}, {'diff': 9.110999999784042e-06}, {'diff': 9.430999999615608e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:28.862" endtime="20201029 09:33:28.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:28.883" level="INFO">${OVERHEAD} = {'diff': [9.26400000000882e-06, 9.194999999628806e-06, 9.597000000027833e-06, 8.790999999952476e-06, 9.110999999784042e-06, 9.430999999615608e-06, 9.443999999803054e-06, 9.111999999866782e-06, 9.27800...</msg>
<status status="PASS" starttime="20201029 09:33:28.873" endtime="20201029 09:33:28.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.893" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:28.891" endtime="20201029 09:33:28.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.898" level="INFO">VALUE: [9.26400000000882e-06, 9.194999999628806e-06, 9.597000000027833e-06, 8.790999999952476e-06, 9.110999999784042e-06, 9.430999999615608e-06, 9.443999999803054e-06, 9.111999999866782e-06, 9.278000000279008e-06, 9.026999999939278e-06, 9.110999999784042e-06, 9.444000000691233e-06, 9.082999999243668e-06, 8.596999999888055e-06, 9.444999999885795e-06, 9.430000000421046e-06, 9.084000000214587e-06, 8.597999999970796e-06, 9.597000000027833e-06, 8.750000000112834e-06, 8.929999999907068e-06, 8.611000000158242e-06, 8.750000000112834e-06, 8.750000000112834e-06, 8.930999999989808e-06, 9.16699999997661e-06, 9.26400000000882e-06, 8.929999999907068e-06, 9.096999999513855e-06, 9.26400000000882e-06, 9.429999999532868e-06, 8.957999999559263e-06, 9.096999999513855e-06, 8.81900000049285e-06, 8.750000000112834e-06, 9.097000000402033e-06, 8.596999999888055e-06, 8.959000000530182e-06, 9.333000000388836e-06, 9.443999999803054e-06, 8.957999999559263e-06, 8.930999999989808e-06, 9.249999999738634e-06, 9.443999999803054e-06, 9.277999999390829e-06, 9.138999999436237e-06, 9.41600000015086e-06, 9.430000000421046e-06, 9.278000000279008e-06, 9.249999999738634e-06, 9.32000000020139e-06, 9.125000000054229e-06, 8.929999999907068e-06, 8.556000000048414e-06, 9.429999999532868e-06, 8.762999999412102e-06, 8.930999999989808e-06, 9.250000000626812e-06, 9.402999999963413e-06, 8.959000000530182e-06, 8.945000000259995e-06, 9.430999999615608e-06, 8.930999999989808e-06, 9.110999999784042e-06]</msg>
<status status="PASS" starttime="20201029 09:33:28.895" endtime="20201029 09:33:28.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.885" endtime="20201029 09:33:28.901"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.370" endtime="20201029 09:33:28.902"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.370" endtime="20201029 09:33:28.903"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.923" endtime="20201029 09:33:28.936"></status>
</kw>
<msg timestamp="20201029 09:33:28.937" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.919" endtime="20201029 09:33:28.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.943" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.939" endtime="20201029 09:33:28.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.945" endtime="20201029 09:33:28.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.912" endtime="20201029 09:33:28.950"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.908" endtime="20201029 09:33:28.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.969" endtime="20201029 09:33:29.357"></status>
</kw>
<msg timestamp="20201029 09:33:29.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.948865833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.948875153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.966" endtime="20201029 09:33:29.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.948865833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.948875153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.370" endtime="20201029 09:33:29.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.392" endtime="20201029 09:33:29.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.958" endtime="20201029 09:33:29.398"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.953" endtime="20201029 09:33:29.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:29.410" level="INFO">${RESULT} = [{'diff': 9.32000000020139e-06}, {'diff': 9.125000000054229e-06}, {'diff': 8.929999999907068e-06}, {'diff': 8.556000000048414e-06}, {'diff': 9.429999999532868e-06}, {'diff': 8.762999999412102e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:29.401" endtime="20201029 09:33:29.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:29.422" level="INFO">${OVERHEAD} = {'diff': [9.32000000020139e-06, 9.125000000054229e-06, 8.929999999907068e-06, 8.556000000048414e-06, 9.429999999532868e-06, 8.762999999412102e-06, 8.930999999989808e-06, 9.250000000626812e-06, 9.40299...</msg>
<status status="PASS" starttime="20201029 09:33:29.412" endtime="20201029 09:33:29.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.432" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:29.430" endtime="20201029 09:33:29.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.438" level="INFO">VALUE: [9.32000000020139e-06, 9.125000000054229e-06, 8.929999999907068e-06, 8.556000000048414e-06, 9.429999999532868e-06, 8.762999999412102e-06, 8.930999999989808e-06, 9.250000000626812e-06, 9.402999999963413e-06, 8.959000000530182e-06, 8.945000000259995e-06, 9.430999999615608e-06, 8.930999999989808e-06, 9.110999999784042e-06, 8.929999999907068e-06, 9.277000000196267e-06, 8.764000000383021e-06, 8.944000000177255e-06, 9.416999999345421e-06, 8.944000000177255e-06, 8.9170000006078e-06, 9.361000000041031e-06, 9.097000000402033e-06, 8.540999999695487e-06, 9.597000000027833e-06, 9.430999999615608e-06, 8.72199999957246e-06, 9.443999999803054e-06, 8.945000000259995e-06, 8.638999999810437e-06, 9.597000000027833e-06, 8.832999999874858e-06, 9.458000000073241e-06, 9.541999999918005e-06, 9.361000000041031e-06, 9.277000000196267e-06, 8.750000000112834e-06, 9.444999999885795e-06, 8.763999999494843e-06, 8.750000000112834e-06, 8.763999999494843e-06, 8.930999999989808e-06, 9.4170000002336e-06, 9.097000000402033e-06, 8.708000000190452e-06, 9.096999999513855e-06, 8.77799999976503e-06, 9.388999999693226e-06, 8.944000000177255e-06, 9.26400000000882e-06, 9.097999999596595e-06, 8.610999999270064e-06, 9.250000000626812e-06, 9.096999999513855e-06, 9.430000000421046e-06, 8.77799999976503e-06, 9.430000000421046e-06, 8.792000000035216e-06, 9.26400000000882e-06, 8.611000000158242e-06, 8.945000000259995e-06, 8.9170000006078e-06, 9.110999999784042e-06, 9.430000000421046e-06]</msg>
<status status="PASS" starttime="20201029 09:33:29.435" endtime="20201029 09:33:29.439"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.424" endtime="20201029 09:33:29.440"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.904" endtime="20201029 09:33:29.442"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.904" endtime="20201029 09:33:29.442"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.462" endtime="20201029 09:33:29.475"></status>
</kw>
<msg timestamp="20201029 09:33:29.476" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.459" endtime="20201029 09:33:29.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.483" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.479" endtime="20201029 09:33:29.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.485" endtime="20201029 09:33:29.489"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.452" endtime="20201029 09:33:29.490"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.447" endtime="20201029 09:33:29.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.508" endtime="20201029 09:33:29.899"></status>
</kw>
<msg timestamp="20201029 09:33:29.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.472021833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.472030931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.505" endtime="20201029 09:33:29.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.472021833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.472030931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.911" endtime="20201029 09:33:29.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.932" endtime="20201029 09:33:29.936"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.497" endtime="20201029 09:33:29.938"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.493" endtime="20201029 09:33:29.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:29.950" level="INFO">${RESULT} = [{'diff': 9.097999999596595e-06}, {'diff': 8.610999999270064e-06}, {'diff': 9.250000000626812e-06}, {'diff': 9.096999999513855e-06}, {'diff': 9.430000000421046e-06}, {'diff': 8.77799999976503e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:29.941" endtime="20201029 09:33:29.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:29.961" level="INFO">${OVERHEAD} = {'diff': [9.097999999596595e-06, 8.610999999270064e-06, 9.250000000626812e-06, 9.096999999513855e-06, 9.430000000421046e-06, 8.77799999976503e-06, 9.430000000421046e-06, 8.792000000035216e-06, 9.26400...</msg>
<status status="PASS" starttime="20201029 09:33:29.952" endtime="20201029 09:33:29.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.972" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:29.970" endtime="20201029 09:33:29.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.978" level="INFO">VALUE: [9.097999999596595e-06, 8.610999999270064e-06, 9.250000000626812e-06, 9.096999999513855e-06, 9.430000000421046e-06, 8.77799999976503e-06, 9.430000000421046e-06, 8.792000000035216e-06, 9.26400000000882e-06, 8.611000000158242e-06, 8.945000000259995e-06, 8.9170000006078e-06, 9.110999999784042e-06, 9.430000000421046e-06, 8.77799999976503e-06, 9.084000000214587e-06, 9.416999999345421e-06, 8.929999999907068e-06, 8.611000000158242e-06, 9.250000000626812e-06, 9.083000000131847e-06, 9.236000000356626e-06, 8.930999999989808e-06, 9.430999999615608e-06, 9.26400000000882e-06, 8.750000000112834e-06, 8.902999999449435e-06, 9.430000000421046e-06, 9.083000000131847e-06, 9.597000000027833e-06, 8.596999999888055e-06, 9.125000000054229e-06, 9.096999999513855e-06, 9.430999999615608e-06, 9.582999999757646e-06, 8.916999999719621e-06, 8.764000000383021e-06, 9.236999999551188e-06, 8.764000000383021e-06, 9.26400000000882e-06, 8.750000000112834e-06, 9.11100000067222e-06, 8.764000000383021e-06, 9.26400000000882e-06, 9.125000000054229e-06, 9.4170000002336e-06, 9.096999999513855e-06, 8.584000000588787e-06, 9.249999999738634e-06, 9.237000000439366e-06, 9.138999999436237e-06, 8.930999999989808e-06, 8.943999999289076e-06, 9.430999999615608e-06, 8.930999999989808e-06, 8.764000000383021e-06, 9.638999999950215e-06, 8.916999999719621e-06, 9.097000000402033e-06, 8.916999999719621e-06, 9.125000000054229e-06, 8.764000000383021e-06, 8.944000000177255e-06, 9.346999999770844e-06]</msg>
<status status="PASS" starttime="20201029 09:33:29.974" endtime="20201029 09:33:29.978"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.963" endtime="20201029 09:33:29.980"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.444" endtime="20201029 09:33:29.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.443" endtime="20201029 09:33:29.982"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.002" endtime="20201029 09:33:30.016"></status>
</kw>
<msg timestamp="20201029 09:33:30.018" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.998" endtime="20201029 09:33:30.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.024" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.020" endtime="20201029 09:33:30.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.026" endtime="20201029 09:33:30.030"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.991" endtime="20201029 09:33:30.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.987" endtime="20201029 09:33:30.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.050" endtime="20201029 09:33:30.427"></status>
</kw>
<msg timestamp="20201029 09:33:30.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.001849764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.001858903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.046" endtime="20201029 09:33:30.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.001849764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.001858903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.438" endtime="20201029 09:33:30.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.460" endtime="20201029 09:33:30.463"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.039" endtime="20201029 09:33:30.465"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.034" endtime="20201029 09:33:30.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:30.477" level="INFO">${RESULT} = [{'diff': 9.138999999436237e-06}, {'diff': 8.930999999989808e-06}, {'diff': 8.943999999289076e-06}, {'diff': 9.430999999615608e-06}, {'diff': 8.930999999989808e-06}, {'diff': 8.764000000383021e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:30.468" endtime="20201029 09:33:30.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:30.489" level="INFO">${OVERHEAD} = {'diff': [9.138999999436237e-06, 8.930999999989808e-06, 8.943999999289076e-06, 9.430999999615608e-06, 8.930999999989808e-06, 8.764000000383021e-06, 9.638999999950215e-06, 8.916999999719621e-06, 9.0970...</msg>
<status status="PASS" starttime="20201029 09:33:30.479" endtime="20201029 09:33:30.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.499" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:30.497" endtime="20201029 09:33:30.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.505" level="INFO">VALUE: [9.138999999436237e-06, 8.930999999989808e-06, 8.943999999289076e-06, 9.430999999615608e-06, 8.930999999989808e-06, 8.764000000383021e-06, 9.638999999950215e-06, 8.916999999719621e-06, 9.097000000402033e-06, 8.916999999719621e-06, 9.125000000054229e-06, 8.764000000383021e-06, 8.944000000177255e-06, 9.346999999770844e-06, 8.929999999907068e-06, 9.431000000503786e-06, 8.930999999989808e-06, 8.957999999559263e-06, 8.97199999982945e-06, 8.596999999888055e-06, 9.291999999661016e-06, 9.125000000054229e-06, 8.945000000259995e-06, 9.26400000000882e-06, 9.277000000196267e-06, 9.610999999409842e-06, 8.596999999888055e-06, 8.597999999970796e-06, 8.611000000158242e-06, 9.625000000568207e-06, 8.819999999687411e-06, 9.610999999409842e-06, 8.763999999494843e-06, 9.624999999680028e-06, 9.0699999999444e-06, 9.26400000000882e-06, 9.277999999390829e-06, 8.77799999976503e-06, 8.792000000035216e-06, 8.597999999970796e-06, 9.695000000142784e-06, 8.596999999888055e-06, 9.597000000027833e-06, 9.389000000581404e-06, 9.110999999784042e-06, 9.097000000402033e-06, 9.401999999880672e-06, 9.459000000155982e-06, 9.347999999853585e-06, 9.47199999945525e-06, 8.944000000177255e-06, 8.625000000428429e-06, 8.56900000023586e-06, 9.430000000421046e-06, 9.277999999390829e-06, 8.611000000158242e-06, 8.583999999700609e-06, 9.292000000549194e-06, 8.513999999237853e-06, 9.61100000029802e-06, 8.72199999957246e-06, 8.833999999957598e-06, 8.929999999907068e-06, 9.375000000311218e-06]</msg>
<status status="PASS" starttime="20201029 09:33:30.502" endtime="20201029 09:33:30.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.491" endtime="20201029 09:33:30.507"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.984" endtime="20201029 09:33:30.509"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.983" endtime="20201029 09:33:30.509"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.529" endtime="20201029 09:33:30.542"></status>
</kw>
<msg timestamp="20201029 09:33:30.543" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.526" endtime="20201029 09:33:30.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.549" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.545" endtime="20201029 09:33:30.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.552" endtime="20201029 09:33:30.555"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.518" endtime="20201029 09:33:30.557"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.514" endtime="20201029 09:33:30.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.576" endtime="20201029 09:33:30.959"></status>
</kw>
<msg timestamp="20201029 09:33:30.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.533913292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.533922236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.573" endtime="20201029 09:33:30.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.533913292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.533922236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.971" endtime="20201029 09:33:30.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.993" endtime="20201029 09:33:30.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.565" endtime="20201029 09:33:30.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.560" endtime="20201029 09:33:31.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.011" level="INFO">${RESULT} = [{'diff': 8.944000000177255e-06}, {'diff': 8.625000000428429e-06}, {'diff': 8.56900000023586e-06}, {'diff': 9.430000000421046e-06}, {'diff': 9.277999999390829e-06}, {'diff': 8.611000000158242e-06}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:31.001" endtime="20201029 09:33:31.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:31.027" level="INFO">${OVERHEAD} = {'diff': [8.944000000177255e-06, 8.625000000428429e-06, 8.56900000023586e-06, 9.430000000421046e-06, 9.277999999390829e-06, 8.611000000158242e-06, 8.583999999700609e-06, 9.292000000549194e-06, 8.51399...</msg>
<status status="PASS" starttime="20201029 09:33:31.013" endtime="20201029 09:33:31.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.037" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:31.034" endtime="20201029 09:33:31.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.042" level="INFO">VALUE: [8.944000000177255e-06, 8.625000000428429e-06, 8.56900000023586e-06, 9.430000000421046e-06, 9.277999999390829e-06, 8.611000000158242e-06, 8.583999999700609e-06, 9.292000000549194e-06, 8.513999999237853e-06, 9.61100000029802e-06, 8.72199999957246e-06, 8.833999999957598e-06, 8.929999999907068e-06, 9.375000000311218e-06, 9.583000000645825e-06, 9.278000000279008e-06, 8.764000000383021e-06, 8.930999999989808e-06, 8.722000000460639e-06, 9.097000001290212e-06, 8.9170000006078e-06, 9.096999999513855e-06, 9.11100000067222e-06, 9.110999998895863e-06, 9.083000000131847e-06, 8.764000000383021e-06, 9.264000000897e-06, 9.278000000279008e-06, 8.763999998606664e-06, 9.431000000503786e-06, 8.610999998381885e-06, 9.083000000131847e-06, 9.37499999942304e-06, 8.791000000840654e-06, 9.430000000421046e-06, 9.070000000832579e-06, 9.291999999661016e-06, 9.096999999513855e-06, 8.597000000776234e-06, 9.610999999409842e-06, 9.347999998965406e-06, 9.263999999120642e-06, 8.596999998999877e-06, 9.402999999963413e-06, 9.083000000131847e-06, 9.278000000279008e-06, 8.596999998999877e-06, 8.639000000698616e-06, 9.263999999120642e-06, 8.77799999976503e-06, 9.278000000279008e-06, 8.902000001143051e-06, 8.944999999371817e-06, 8.597000000776234e-06, 9.431000000503786e-06, 8.5700000003186e-06, 9.097000001290212e-06, 8.582999999617869e-06, 9.264000000897e-06, 8.77799999976503e-06, 9.054999999591473e-06, 9.43099999872743e-06, 9.416999999345421e-06, 8.62499999954025e-06]</msg>
<status status="PASS" starttime="20201029 09:33:31.039" endtime="20201029 09:33:31.043"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.028" endtime="20201029 09:33:31.045"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.511" endtime="20201029 09:33:31.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.510" endtime="20201029 09:33:31.046"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.066" endtime="20201029 09:33:31.079"></status>
</kw>
<msg timestamp="20201029 09:33:31.080" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.063" endtime="20201029 09:33:31.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.086" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.082" endtime="20201029 09:33:31.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.089" endtime="20201029 09:33:31.092"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.056" endtime="20201029 09:33:31.094"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.051" endtime="20201029 09:33:31.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.112" endtime="20201029 09:33:31.509"></status>
</kw>
<msg timestamp="20201029 09:33:31.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.048658903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.048668181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.109" endtime="20201029 09:33:31.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.048658903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.048668181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.521" endtime="20201029 09:33:31.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.544" endtime="20201029 09:33:31.548"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.102" endtime="20201029 09:33:31.550"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.097" endtime="20201029 09:33:31.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.563" level="INFO">${RESULT} = [{'diff': 9.278000000279008e-06}, {'diff': 8.902000001143051e-06}, {'diff': 8.944999999371817e-06}, {'diff': 8.597000000776234e-06}, {'diff': 9.431000000503786e-06}, {'diff': 8.5700000003186e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:31.553" endtime="20201029 09:33:31.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:31.574" level="INFO">${OVERHEAD} = {'diff': [9.278000000279008e-06, 8.902000001143051e-06, 8.944999999371817e-06, 8.597000000776234e-06, 9.431000000503786e-06, 8.5700000003186e-06, 9.097000001290212e-06, 8.582999999617869e-06, 9.264000...</msg>
<status status="PASS" starttime="20201029 09:33:31.565" endtime="20201029 09:33:31.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.584" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:31.582" endtime="20201029 09:33:31.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.590" level="INFO">VALUE: [9.278000000279008e-06, 8.902000001143051e-06, 8.944999999371817e-06, 8.597000000776234e-06, 9.431000000503786e-06, 8.5700000003186e-06, 9.097000001290212e-06, 8.582999999617869e-06, 9.264000000897e-06, 8.77799999976503e-06, 9.054999999591473e-06, 9.43099999872743e-06, 9.416999999345421e-06, 8.62499999954025e-06, 8.750000001001013e-06, 9.42999999864469e-06, 9.11100000067222e-06, 8.610999998381885e-06, 9.11100000067222e-06, 9.30500000073664e-06, 8.764000000383021e-06, 9.083000000131847e-06, 8.9170000006078e-06, 9.11100000067222e-06, 8.985999999211458e-06, 9.152000000511862e-06, 8.582999999617869e-06, 9.389000000581404e-06, 8.749999999224656e-06, 8.596999998999877e-06, 8.959000000530182e-06, 8.556000000936592e-06, 9.443999999803054e-06, 9.486000001501793e-06, 8.930999999989808e-06, 9.097999999596595e-06, 9.431000000503786e-06, 8.77799999976503e-06, 8.735999999842647e-06, 9.263999999120642e-06, 8.930999999989808e-06, 9.264000000897e-06, 8.583999999700609e-06, 8.790999999064297e-06, 9.430000000421046e-06, 8.847000000145044e-06, 8.943999999289076e-06, 8.583000001394225e-06, 9.444999999885795e-06, 8.583000001394225e-06, 9.291999999661016e-06, 9.11100000067222e-06, 9.45900000104416e-06, 9.444999999885795e-06, 9.263999999120642e-06, 9.431000000503786e-06, 8.97199999982945e-06, 8.764000000383021e-06, 9.583000000645825e-06, 9.264000000897e-06, 8.945000001148173e-06, 9.11100000067222e-06, 8.596999998999877e-06, 9.278000000279008e-06]</msg>
<status status="PASS" starttime="20201029 09:33:31.586" endtime="20201029 09:33:31.591"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.576" endtime="20201029 09:33:31.592"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.048" endtime="20201029 09:33:31.594"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.047" endtime="20201029 09:33:31.594"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.615" endtime="20201029 09:33:31.631"></status>
</kw>
<msg timestamp="20201029 09:33:31.632" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.611" endtime="20201029 09:33:31.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.638" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.634" endtime="20201029 09:33:31.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.641" endtime="20201029 09:33:31.645"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.604" endtime="20201029 09:33:31.646"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.599" endtime="20201029 09:33:31.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.665" endtime="20201029 09:33:32.056"></status>
</kw>
<msg timestamp="20201029 09:33:32.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.575865722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.575875014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.662" endtime="20201029 09:33:32.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.575865722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.575875014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.068" endtime="20201029 09:33:32.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.091" endtime="20201029 09:33:32.094"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.655" endtime="20201029 09:33:32.096"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.650" endtime="20201029 09:33:32.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.109" level="INFO">${RESULT} = [{'diff': 9.291999999661016e-06}, {'diff': 9.11100000067222e-06}, {'diff': 9.45900000104416e-06}, {'diff': 9.444999999885795e-06}, {'diff': 9.263999999120642e-06}, {'diff': 9.431000000503786e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:32.099" endtime="20201029 09:33:32.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:32.121" level="INFO">${OVERHEAD} = {'diff': [9.291999999661016e-06, 9.11100000067222e-06, 9.45900000104416e-06, 9.444999999885795e-06, 9.263999999120642e-06, 9.431000000503786e-06, 8.97199999982945e-06, 8.764000000383021e-06, 9.5830000...</msg>
<status status="PASS" starttime="20201029 09:33:32.111" endtime="20201029 09:33:32.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.131" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:32.129" endtime="20201029 09:33:32.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.137" level="INFO">VALUE: [9.291999999661016e-06, 9.11100000067222e-06, 9.45900000104416e-06, 9.444999999885795e-06, 9.263999999120642e-06, 9.431000000503786e-06, 8.97199999982945e-06, 8.764000000383021e-06, 9.583000000645825e-06, 9.264000000897e-06, 8.945000001148173e-06, 9.11100000067222e-06, 8.596999998999877e-06, 9.278000000279008e-06, 9.43099999872743e-06, 8.77799999976503e-06, 9.444999999885795e-06, 9.070000000832579e-06, 8.749999999224656e-06, 9.430000000421046e-06, 9.611999999492582e-06, 8.930000001683425e-06, 9.43099999872743e-06, 8.9170000006078e-06, 8.625000001316607e-06, 8.930999999989808e-06, 9.611999999492582e-06, 9.486000001501793e-06, 8.985999999211458e-06, 9.096999999513855e-06, 8.930999999989808e-06, 9.264000000897e-06, 8.583000001394225e-06, 8.945000001148173e-06, 8.763999998606664e-06, 8.91600000052506e-06, 9.333000001277014e-06, 8.611000000158242e-06, 8.930999999989808e-06, 9.11100000067222e-06, 9.37499999942304e-06, 9.431000000503786e-06, 8.762999998523924e-06, 8.750000001001013e-06, 9.084000000214587e-06, 8.943999999289076e-06, 9.430000000421046e-06, 8.77799999976503e-06, 9.11100000067222e-06, 9.278000000279008e-06, 8.763999998606664e-06, 9.597000000027833e-06, 9.096999999513855e-06, 9.444999999885795e-06, 9.556000000188192e-06, 8.612000000240982e-06, 9.416000001039038e-06, 9.264000000897e-06, 8.598000000858974e-06, 9.11100000067222e-06, 9.278000000279008e-06, 8.598000000858974e-06, 9.430000000421046e-06, 9.096999999513855e-06]</msg>
<status status="PASS" starttime="20201029 09:33:32.133" endtime="20201029 09:33:32.138"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.123" endtime="20201029 09:33:32.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.596" endtime="20201029 09:33:32.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.595" endtime="20201029 09:33:32.141"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.162" endtime="20201029 09:33:32.177"></status>
</kw>
<msg timestamp="20201029 09:33:32.178" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.158" endtime="20201029 09:33:32.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.184" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.180" endtime="20201029 09:33:32.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.187" endtime="20201029 09:33:32.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.151" endtime="20201029 09:33:32.193"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.146" endtime="20201029 09:33:32.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.211" endtime="20201029 09:33:32.607"></status>
</kw>
<msg timestamp="20201029 09:33:32.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.115951278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.115960042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.208" endtime="20201029 09:33:32.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.115951278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.115960042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.619" endtime="20201029 09:33:32.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.642" endtime="20201029 09:33:32.645"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.200" endtime="20201029 09:33:32.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.195" endtime="20201029 09:33:32.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.660" level="INFO">${RESULT} = [{'diff': 8.763999998606664e-06}, {'diff': 9.597000000027833e-06}, {'diff': 9.096999999513855e-06}, {'diff': 9.444999999885795e-06}, {'diff': 9.556000000188192e-06}, {'diff': 8.612000000240982e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:32.650" endtime="20201029 09:33:32.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:32.673" level="INFO">${OVERHEAD} = {'diff': [8.763999998606664e-06, 9.597000000027833e-06, 9.096999999513855e-06, 9.444999999885795e-06, 9.556000000188192e-06, 8.612000000240982e-06, 9.416000001039038e-06, 9.264000000897e-06, 8.5980000...</msg>
<status status="PASS" starttime="20201029 09:33:32.662" endtime="20201029 09:33:32.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.683" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:32.681" endtime="20201029 09:33:32.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.689" level="INFO">VALUE: [8.763999998606664e-06, 9.597000000027833e-06, 9.096999999513855e-06, 9.444999999885795e-06, 9.556000000188192e-06, 8.612000000240982e-06, 9.416000001039038e-06, 9.264000000897e-06, 8.598000000858974e-06, 9.11100000067222e-06, 9.278000000279008e-06, 8.598000000858974e-06, 9.430000000421046e-06, 9.096999999513855e-06, 9.083000000131847e-06, 8.847000000145044e-06, 9.43099999872743e-06, 9.096999999513855e-06, 9.472000000343428e-06, 8.943999999289076e-06, 8.929999999907068e-06, 8.583999999700609e-06, 9.11100000067222e-06, 9.249999999738634e-06, 8.847000000145044e-06, 8.597000000776234e-06, 9.306000000819381e-06, 8.736000001619004e-06, 9.096999999513855e-06, 9.431000000503786e-06, 8.764000000383021e-06, 9.096999999513855e-06, 9.096999999513855e-06, 9.263999999120642e-06, 9.443999999803054e-06, 9.431000000503786e-06, 9.42999999864469e-06, 8.555999999160235e-06, 9.098000001372952e-06, 8.56900000023586e-06, 8.749999999224656e-06, 9.45800000096142e-06, 8.819999999687411e-06, 9.096999999513855e-06, 8.77799999976503e-06, 9.264000000897e-06, 8.596999998999877e-06, 8.929999999907068e-06, 9.083000000131847e-06, 9.51400000026581e-06, 9.292000001437373e-06, 8.735999999842647e-06, 8.790999999064297e-06, 9.457999999185063e-06, 9.096999999513855e-06, 9.083000000131847e-06, 9.138999999436237e-06, 8.582999999617869e-06, 8.930999999989808e-06, 9.278000000279008e-06, 9.416999999345421e-06, 9.597000000027833e-06, 8.985999999211458e-06, 8.791000000840654e-06]</msg>
<status status="PASS" starttime="20201029 09:33:32.685" endtime="20201029 09:33:32.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.675" endtime="20201029 09:33:32.691"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.143" endtime="20201029 09:33:32.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.142" endtime="20201029 09:33:32.693"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.714" endtime="20201029 09:33:32.729"></status>
</kw>
<msg timestamp="20201029 09:33:32.730" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.710" endtime="20201029 09:33:32.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.736" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.732" endtime="20201029 09:33:32.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.738" endtime="20201029 09:33:32.743"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.703" endtime="20201029 09:33:32.745"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.698" endtime="20201029 09:33:32.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.766" endtime="20201029 09:33:33.183"></status>
</kw>
<msg timestamp="20201029 09:33:33.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.650736375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.650745667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.761" endtime="20201029 09:33:33.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.650736375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.650745667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.194" endtime="20201029 09:33:33.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.217" endtime="20201029 09:33:33.221"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.752" endtime="20201029 09:33:33.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.747" endtime="20201029 09:33:33.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:33.235" level="INFO">${RESULT} = [{'diff': 9.292000001437373e-06}, {'diff': 8.735999999842647e-06}, {'diff': 8.790999999064297e-06}, {'diff': 9.457999999185063e-06}, {'diff': 9.096999999513855e-06}, {'diff': 9.083000000131847e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:33.226" endtime="20201029 09:33:33.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:33.246" level="INFO">${OVERHEAD} = {'diff': [9.292000001437373e-06, 8.735999999842647e-06, 8.790999999064297e-06, 9.457999999185063e-06, 9.096999999513855e-06, 9.083000000131847e-06, 9.138999999436237e-06, 8.582999999617869e-06, 8.9309...</msg>
<status status="PASS" starttime="20201029 09:33:33.237" endtime="20201029 09:33:33.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.257" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:33.254" endtime="20201029 09:33:33.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.262" level="INFO">VALUE: [9.292000001437373e-06, 8.735999999842647e-06, 8.790999999064297e-06, 9.457999999185063e-06, 9.096999999513855e-06, 9.083000000131847e-06, 9.138999999436237e-06, 8.582999999617869e-06, 8.930999999989808e-06, 9.278000000279008e-06, 9.416999999345421e-06, 9.597000000027833e-06, 8.985999999211458e-06, 8.791000000840654e-06, 8.958000000447441e-06, 8.597000000776234e-06, 9.278000000279008e-06, 9.249999999738634e-06, 9.096999999513855e-06, 8.9170000006078e-06, 9.431000000503786e-06, 8.77799999976503e-06, 9.333999999583398e-06, 9.569000001263817e-06, 8.764000000383021e-06, 9.361000000041031e-06, 9.416999999345421e-06, 9.278000000279008e-06, 8.764000000383021e-06, 8.930999999989808e-06, 9.068999998973482e-06, 9.264000000897e-06, 9.290999999578275e-06, 8.929999999907068e-06, 9.278000000279008e-06, 8.916999998831443e-06, 9.096999999513855e-06, 9.083000000131847e-06, 8.860999999527053e-06, 9.431000000503786e-06, 8.930999999989808e-06, 8.944999999371817e-06, 9.262999999037902e-06, 9.264000000897e-06, 9.443999999803054e-06, 8.944000001065433e-06, 9.249999999738634e-06, 9.249999999738634e-06, 8.944000001065433e-06, 9.430000000421046e-06, 8.596999998999877e-06, 9.110999998895863e-06, 8.930999999989808e-06, 8.750000001001013e-06, 8.583000001394225e-06, 9.431000000503786e-06, 9.430000000421046e-06, 9.264000000897e-06, 9.110999998895863e-06, 8.959000000530182e-06, 8.597000000776234e-06, 8.611000000158242e-06, 9.417000001121778e-06, 9.416999999345421e-06]</msg>
<status status="PASS" starttime="20201029 09:33:33.259" endtime="20201029 09:33:33.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.248" endtime="20201029 09:33:33.265"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.695" endtime="20201029 09:33:33.266"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.694" endtime="20201029 09:33:33.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.436" endtime="20201029 09:33:33.267"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:22.310" endtime="20201029 09:33:33.269" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:33.286" endtime="20201029 09:33:33.308"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.282" endtime="20201029 09:33:33.310"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.346" endtime="20201029 09:33:33.364"></status>
</kw>
<msg timestamp="20201029 09:33:33.365" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.342" endtime="20201029 09:33:33.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.372" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.368" endtime="20201029 09:33:33.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.379" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:33.375" endtime="20201029 09:33:33.379"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:33.335" endtime="20201029 09:33:33.381"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:33.328" endtime="20201029 09:33:33.383"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.325" endtime="20201029 09:33:33.384"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:33.392" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:33.390" endtime="20201029 09:33:33.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.386" endtime="20201029 09:33:33.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.322" endtime="20201029 09:33:33.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.320" endtime="20201029 09:33:33.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.396" endtime="20201029 09:33:33.400"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.316" endtime="20201029 09:33:33.401"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.311" endtime="20201029 09:33:33.403"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.280" endtime="20201029 09:33:33.404"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.427" endtime="20201029 09:33:33.451"></status>
</kw>
<msg timestamp="20201029 09:33:33.452" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.424" endtime="20201029 09:33:33.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.459" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.455" endtime="20201029 09:33:33.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.461" endtime="20201029 09:33:33.465"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.416" endtime="20201029 09:33:33.467"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.410" endtime="20201029 09:33:33.468"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.473" endtime="20201029 09:33:33.477"></status>
</kw>
<msg timestamp="20201029 09:33:33.479" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:33:33.470" endtime="20201029 09:33:33.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.489" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:33.487" endtime="20201029 09:33:33.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.494" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:33.491" endtime="20201029 09:33:33.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.480" endtime="20201029 09:33:33.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.506" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:33.503" endtime="20201029 09:33:33.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.511" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:33.509" endtime="20201029 09:33:33.514"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.497" endtime="20201029 09:33:33.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.532" endtime="20201029 09:33:33.890"></status>
</kw>
<msg timestamp="20201029 09:33:33.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132846056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132862361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.529" endtime="20201029 09:33:33.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132846056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132862361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.900" endtime="20201029 09:33:33.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.919" endtime="20201029 09:33:33.923"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.521" endtime="20201029 09:33:33.924"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.517" endtime="20201029 09:33:33.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:33.936" level="INFO">${RESULT} = [{'diff': 1.6305000000021996e-05}, {'diff': 1.6862000000006372e-05}, {'diff': 1.6541999999980517e-05}, {'diff': 1.652800000001564e-05}, {'diff': 1.5958000000010353e-05}, {'diff': 1.6347999999999363e-0...</msg>
<status status="PASS" starttime="20201029 09:33:33.927" endtime="20201029 09:33:33.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:33.946" level="INFO">${OVERHEAD} = {'diff': [1.6305000000021996e-05, 1.6862000000006372e-05, 1.6541999999980517e-05, 1.652800000001564e-05, 1.5958000000010353e-05, 1.6347999999999363e-05, 1.6721999999996795e-05, 1.652800000001564e-05, ...</msg>
<status status="PASS" starttime="20201029 09:33:33.938" endtime="20201029 09:33:33.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.958" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 09:33:33.955" endtime="20201029 09:33:33.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.963" level="INFO">VALUE: [1.6305000000021996e-05, 1.6862000000006372e-05, 1.6541999999980517e-05, 1.652800000001564e-05, 1.5958000000010353e-05, 1.6347999999999363e-05, 1.6721999999996795e-05, 1.652800000001564e-05, 1.687499999999953e-05, 1.6694000000011533e-05, 1.5861000000005898e-05, 1.6193999999997155e-05, 1.688899999999216e-05, 1.6305999999993714e-05, 1.6526999999988412e-05, 1.5833999999992354e-05, 1.668099999999062e-05, 1.6014000000008632e-05, 1.584699999998551e-05, 1.6028000000001263e-05, 1.634699999999989e-05, 1.6693999999983777e-05, 1.6542000000008272e-05, 1.6861000000006898e-05, 1.6028000000001263e-05, 1.584699999998551e-05, 1.6695000000011007e-05, 1.6028000000001263e-05, 1.5903000000011547e-05, 1.636099999999252e-05, 1.636099999999252e-05, 1.6222000000010173e-05, 1.602700000000179e-05, 1.6193999999997155e-05, 1.636099999999252e-05, 1.5833000000020636e-05, 1.6195000000024384e-05, 1.587499999999853e-05, 1.6319000000014627e-05, 1.6694000000011533e-05, 1.6028000000001263e-05, 1.6847000000014267e-05, 1.6694000000011533e-05, 1.5861000000005898e-05, 1.5861000000005898e-05, 1.6526999999988412e-05, 1.6361000000020276e-05, 1.604099999999442e-05, 1.6513999999995255e-05, 1.6513999999995255e-05]</msg>
<status status="PASS" starttime="20201029 09:33:33.960" endtime="20201029 09:33:33.964"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.948" endtime="20201029 09:33:33.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.405" endtime="20201029 09:33:33.967"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:33.273" endtime="20201029 09:33:33.969" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:33.988" endtime="20201029 09:33:34.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.983" endtime="20201029 09:33:34.012"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.046" endtime="20201029 09:33:34.064"></status>
</kw>
<msg timestamp="20201029 09:33:34.065" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.042" endtime="20201029 09:33:34.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.072" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.068" endtime="20201029 09:33:34.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.079" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:34.075" endtime="20201029 09:33:34.079"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:34.034" endtime="20201029 09:33:34.081"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:34.028" endtime="20201029 09:33:34.083"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.025" endtime="20201029 09:33:34.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:34.092" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:34.090" endtime="20201029 09:33:34.093"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.085" endtime="20201029 09:33:34.093"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.023" endtime="20201029 09:33:34.093"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.022" endtime="20201029 09:33:34.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.095" endtime="20201029 09:33:34.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.017" endtime="20201029 09:33:34.101"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.013" endtime="20201029 09:33:34.102"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.980" endtime="20201029 09:33:34.103"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.125" endtime="20201029 09:33:34.237"></status>
</kw>
<msg timestamp="20201029 09:33:34.239" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.122" endtime="20201029 09:33:34.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.245" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.241" endtime="20201029 09:33:34.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.247" endtime="20201029 09:33:34.251"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.114" endtime="20201029 09:33:34.253"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.108" endtime="20201029 09:33:34.255"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.259" endtime="20201029 09:33:34.264"></status>
</kw>
<msg timestamp="20201029 09:33:34.265" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:33:34.256" endtime="20201029 09:33:34.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.277" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:34.273" endtime="20201029 09:33:34.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.282" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:34.280" endtime="20201029 09:33:34.283"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.267" endtime="20201029 09:33:34.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.294" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:34.292" endtime="20201029 09:33:34.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.299" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:34.297" endtime="20201029 09:33:34.300"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.285" endtime="20201029 09:33:34.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.318" endtime="20201029 09:33:34.680"></status>
</kw>
<msg timestamp="20201029 09:33:34.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130896681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130952333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.315" endtime="20201029 09:33:34.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130896681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130952333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.690" endtime="20201029 09:33:34.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.708" endtime="20201029 09:33:34.712"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.308" endtime="20201029 09:33:34.714"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.303" endtime="20201029 09:33:34.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:34.726" level="INFO">${RESULT} = [{'diff': 5.565200000001713e-05}, {'diff': 5.5901999999996566e-05}, {'diff': 5.59309999999813e-05}, {'diff': 5.6083999999984036e-05}, {'diff': 5.593100000000906e-05}, {'diff': 5.5901999999996566e-05},...</msg>
<status status="PASS" starttime="20201029 09:33:34.717" endtime="20201029 09:33:34.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:34.736" level="INFO">${OVERHEAD} = {'diff': [5.565200000001713e-05, 5.5901999999996566e-05, 5.59309999999813e-05, 5.6083999999984036e-05, 5.593100000000906e-05, 5.5901999999996566e-05, 5.592999999998183e-05, 5.593000000000958e-05, 5.59...</msg>
<status status="PASS" starttime="20201029 09:33:34.728" endtime="20201029 09:33:34.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.749" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 09:33:34.745" endtime="20201029 09:33:34.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.755" level="INFO">VALUE: [5.565200000001713e-05, 5.5901999999996566e-05, 5.59309999999813e-05, 5.6083999999984036e-05, 5.593100000000906e-05, 5.5901999999996566e-05, 5.592999999998183e-05, 5.593000000000958e-05, 5.5944000000002214e-05, 5.607000000001916e-05, 5.590299999999604e-05, 5.611099999999758e-05, 5.5915999999989197e-05, 5.608299999998456e-05, 5.6055999999998773e-05, 5.609800000000442e-05, 5.593000000000958e-05, 5.590299999999604e-05, 5.593100000000906e-05, 5.608400000001179e-05, 5.591699999998867e-05, 5.593000000000958e-05, 5.594499999997393e-05, 5.588900000000341e-05, 5.593000000000958e-05, 5.594500000000169e-05, 5.5917000000016426e-05, 5.608400000001179e-05, 5.608400000001179e-05, 5.5901999999996566e-05, 5.609699999997719e-05, 5.5917000000016426e-05, 5.609700000000495e-05, 5.6013999999993125e-05, 5.591699999998867e-05, 5.594500000000169e-05, 5.593000000000958e-05, 5.5861000000018146e-05, 5.5917000000016426e-05, 5.593100000000906e-05, 5.608400000001179e-05, 5.609700000000495e-05, 5.6069999999991404e-05, 5.59309999999813e-05, 5.611099999999758e-05, 5.609699999997719e-05, 5.592999999998183e-05, 5.609700000000495e-05, 5.608299999998456e-05, 5.5915999999989197e-05]</msg>
<status status="PASS" starttime="20201029 09:33:34.751" endtime="20201029 09:33:34.755"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.738" endtime="20201029 09:33:34.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.104" endtime="20201029 09:33:34.759"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:33.973" endtime="20201029 09:33:34.760" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:34.778" endtime="20201029 09:33:34.799"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.774" endtime="20201029 09:33:34.801"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.835" endtime="20201029 09:33:34.855"></status>
</kw>
<msg timestamp="20201029 09:33:34.856" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.832" endtime="20201029 09:33:34.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.865" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.859" endtime="20201029 09:33:34.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.873" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:34.868" endtime="20201029 09:33:34.873"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:34.824" endtime="20201029 09:33:34.876"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:34.817" endtime="20201029 09:33:34.878"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.815" endtime="20201029 09:33:34.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:34.887" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:34.885" endtime="20201029 09:33:34.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.880" endtime="20201029 09:33:34.888"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.813" endtime="20201029 09:33:34.888"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.811" endtime="20201029 09:33:34.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.890" endtime="20201029 09:33:34.894"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.807" endtime="20201029 09:33:34.895"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.803" endtime="20201029 09:33:34.897"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.771" endtime="20201029 09:33:34.898"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.923" endtime="20201029 09:33:35.243"></status>
</kw>
<msg timestamp="20201029 09:33:35.244" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.917" endtime="20201029 09:33:35.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.250" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.246" endtime="20201029 09:33:35.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.253" endtime="20201029 09:33:35.257"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.910" endtime="20201029 09:33:35.258"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.904" endtime="20201029 09:33:35.260"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.264" endtime="20201029 09:33:35.269"></status>
</kw>
<msg timestamp="20201029 09:33:35.270" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:33:35.262" endtime="20201029 09:33:35.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.280" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:35.278" endtime="20201029 09:33:35.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.285" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:35.283" endtime="20201029 09:33:35.285"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.272" endtime="20201029 09:33:35.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.297" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:35.295" endtime="20201029 09:33:35.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.307" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:35.299" endtime="20201029 09:33:35.308"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.288" endtime="20201029 09:33:35.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.327" endtime="20201029 09:33:35.707"></status>
</kw>
<msg timestamp="20201029 09:33:35.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142378028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142477819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.323" endtime="20201029 09:33:35.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142378028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142477819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.717" endtime="20201029 09:33:35.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.735" endtime="20201029 09:33:35.739"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.316" endtime="20201029 09:33:35.741"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.311" endtime="20201029 09:33:35.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:35.753" level="INFO">${RESULT} = [{'diff': 9.979100000001573e-05}, {'diff': 9.905600000001402e-05}, {'diff': 9.905599999998627e-05}, {'diff': 9.904199999999364e-05}, {'diff': 9.905499999998679e-05}, {'diff': 9.904099999999416e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:35.744" endtime="20201029 09:33:35.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:35.768" level="INFO">${OVERHEAD} = {'diff': [9.979100000001573e-05, 9.905600000001402e-05, 9.905599999998627e-05, 9.904199999999364e-05, 9.905499999998679e-05, 9.904099999999416e-05, 9.9028000000001e-05, 9.904100000002192e-05, 9.901399...</msg>
<status status="PASS" starttime="20201029 09:33:35.755" endtime="20201029 09:33:35.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.783" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 09:33:35.780" endtime="20201029 09:33:35.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.788" level="INFO">VALUE: [9.979100000001573e-05, 9.905600000001402e-05, 9.905599999998627e-05, 9.904199999999364e-05, 9.905499999998679e-05, 9.904099999999416e-05, 9.9028000000001e-05, 9.904100000002192e-05, 9.901399999998062e-05, 9.905600000001402e-05, 9.904099999999416e-05, 9.904199999999364e-05, 9.905599999998627e-05, 9.9028000000001e-05, 9.908299999999981e-05, 9.905499999998679e-05, 9.905599999998627e-05, 9.886100000000564e-05, 9.902700000000153e-05, 9.904199999999364e-05, 9.88889999999909e-05, 9.904100000002192e-05, 9.905599999998627e-05, 9.905500000001455e-05, 9.891700000003167e-05, 9.904199999999364e-05, 9.906900000000718e-05, 9.906900000000718e-05, 9.906899999995167e-05, 9.9028000000001e-05, 9.90699999999789e-05, 9.901400000000837e-05, 9.904199999999364e-05, 9.908299999999981e-05, 9.898600000002311e-05, 9.887499999999827e-05, 9.901400000000837e-05, 9.9028000000001e-05, 9.902700000002929e-05, 9.901400000000837e-05, 9.9028000000001e-05, 9.887499999999827e-05, 9.901399999995286e-05, 9.901400000000837e-05, 9.905600000004178e-05, 9.902799999994549e-05, 9.9028000000001e-05, 9.9028000000001e-05, 9.905599999998627e-05, 9.898600000002311e-05]</msg>
<status status="PASS" starttime="20201029 09:33:35.785" endtime="20201029 09:33:35.789"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.771" endtime="20201029 09:33:35.791"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.899" endtime="20201029 09:33:35.792"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:34.765" endtime="20201029 09:33:35.794" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:35.812" endtime="20201029 09:33:35.834"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.808" endtime="20201029 09:33:35.835"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.870" endtime="20201029 09:33:35.889"></status>
</kw>
<msg timestamp="20201029 09:33:35.891" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.866" endtime="20201029 09:33:35.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.897" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.893" endtime="20201029 09:33:35.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.904" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:35.900" endtime="20201029 09:33:35.905"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:35.858" endtime="20201029 09:33:35.906"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:35.852" endtime="20201029 09:33:35.908"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.849" endtime="20201029 09:33:35.909"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:35.917" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:35.915" endtime="20201029 09:33:35.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.911" endtime="20201029 09:33:35.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.847" endtime="20201029 09:33:35.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.845" endtime="20201029 09:33:35.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.920" endtime="20201029 09:33:35.924"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.841" endtime="20201029 09:33:35.925"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.837" endtime="20201029 09:33:35.927"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.805" endtime="20201029 09:33:35.928"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.952" endtime="20201029 09:33:35.978"></status>
</kw>
<msg timestamp="20201029 09:33:35.979" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.949" endtime="20201029 09:33:35.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.986" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.981" endtime="20201029 09:33:35.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.988" endtime="20201029 09:33:35.992"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.939" endtime="20201029 09:33:35.993"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.933" endtime="20201029 09:33:35.995"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.999" endtime="20201029 09:33:36.004"></status>
</kw>
<msg timestamp="20201029 09:33:36.005" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:33:35.997" endtime="20201029 09:33:36.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.018" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:36.015" endtime="20201029 09:33:36.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.024" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:36.021" endtime="20201029 09:33:36.025"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.007" endtime="20201029 09:33:36.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.039" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:36.036" endtime="20201029 09:33:36.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.045" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:36.042" endtime="20201029 09:33:36.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.029" endtime="20201029 09:33:36.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.071" endtime="20201029 09:33:36.445"></status>
</kw>
<msg timestamp="20201029 09:33:36.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132755903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132758097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.066" endtime="20201029 09:33:36.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132755903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132758097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.456" endtime="20201029 09:33:36.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.477" endtime="20201029 09:33:36.482"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.057" endtime="20201029 09:33:36.484"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.051" endtime="20201029 09:33:36.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:36.498" level="INFO">${RESULT} = [{'diff': 2.193999999983154e-06}, {'diff': 2.165999999997892e-06}, {'diff': 2.209000000003014e-06}, {'diff': 2.1940000000109094e-06}, {'diff': 2.193999999983154e-06}, {'diff': 2.1809999999899965e-06},...</msg>
<status status="PASS" starttime="20201029 09:33:36.488" endtime="20201029 09:33:36.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:36.511" level="INFO">${OVERHEAD} = {'diff': [2.193999999983154e-06, 2.165999999997892e-06, 2.209000000003014e-06, 2.1940000000109094e-06, 2.193999999983154e-06, 2.1809999999899965e-06, 2.2080000000035405e-06, 2.195000000010383e-06, 2.1...</msg>
<status status="PASS" starttime="20201029 09:33:36.501" endtime="20201029 09:33:36.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.526" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 09:33:36.523" endtime="20201029 09:33:36.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.532" level="INFO">VALUE: [2.193999999983154e-06, 2.165999999997892e-06, 2.209000000003014e-06, 2.1940000000109094e-06, 2.193999999983154e-06, 2.1809999999899965e-06, 2.2080000000035405e-06, 2.195000000010383e-06, 2.1809999999899965e-06, 2.179999999990523e-06, 2.193999999983154e-06, 2.1940000000109094e-06, 2.1940000000109094e-06, 2.209000000003014e-06, 2.2359999999888025e-06, 2.1949999999826275e-06, 2.1940000000109094e-06, 2.209000000003014e-06, 2.1379999999848742e-06, 2.2080000000035405e-06, 2.1940000000109094e-06, 2.1949999999826275e-06, 2.2080000000035405e-06, 2.1949999999826275e-06, 2.209000000003014e-06, 2.179999999990523e-06, 2.1940000000109094e-06, 2.1669999999973655e-06, 2.1669999999973655e-06, 2.2080000000035405e-06, 2.1809999999899965e-06, 2.193999999983154e-06, 2.1669999999973655e-06, 2.209000000003014e-06, 2.193999999983154e-06, 2.195000000010383e-06, 2.2080000000035405e-06, 2.2219999999961715e-06, 2.236999999988276e-06, 2.1940000000109094e-06, 2.195000000010383e-06, 2.1949999999826275e-06, 2.193999999983154e-06, 2.1800000000182784e-06, 2.222000000023927e-06, 2.1940000000109094e-06, 2.193999999983154e-06, 2.1390000000121034e-06, 2.2080000000035405e-06, 2.222000000023927e-06]</msg>
<status status="PASS" starttime="20201029 09:33:36.528" endtime="20201029 09:33:36.533"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.514" endtime="20201029 09:33:36.535"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.929" endtime="20201029 09:33:36.537"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:35.798" endtime="20201029 09:33:36.539" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:36.560" endtime="20201029 09:33:36.583"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.555" endtime="20201029 09:33:36.585"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.618" endtime="20201029 09:33:36.634"></status>
</kw>
<msg timestamp="20201029 09:33:36.635" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.615" endtime="20201029 09:33:36.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.642" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.637" endtime="20201029 09:33:36.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.648" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:36.644" endtime="20201029 09:33:36.649"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:36.608" endtime="20201029 09:33:36.651"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:36.601" endtime="20201029 09:33:36.652"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.598" endtime="20201029 09:33:36.653"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:36.661" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:36.659" endtime="20201029 09:33:36.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.655" endtime="20201029 09:33:36.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.597" endtime="20201029 09:33:36.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.595" endtime="20201029 09:33:36.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.664" endtime="20201029 09:33:36.668"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.591" endtime="20201029 09:33:36.669"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.586" endtime="20201029 09:33:36.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.552" endtime="20201029 09:33:36.671"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.695" endtime="20201029 09:33:36.805"></status>
</kw>
<msg timestamp="20201029 09:33:36.806" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.692" endtime="20201029 09:33:36.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.813" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.809" endtime="20201029 09:33:36.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.815" endtime="20201029 09:33:36.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.685" endtime="20201029 09:33:36.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.677" endtime="20201029 09:33:36.822"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.826" endtime="20201029 09:33:36.831"></status>
</kw>
<msg timestamp="20201029 09:33:36.832" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:33:36.823" endtime="20201029 09:33:36.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.842" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:36.839" endtime="20201029 09:33:36.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.846" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:36.844" endtime="20201029 09:33:36.847"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.833" endtime="20201029 09:33:36.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.858" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:36.856" endtime="20201029 09:33:36.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.863" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:36.860" endtime="20201029 09:33:36.863"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.850" endtime="20201029 09:33:36.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.882" endtime="20201029 09:33:37.235"></status>
</kw>
<msg timestamp="20201029 09:33:37.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128474569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128487028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.878" endtime="20201029 09:33:37.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128474569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128487028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.245" endtime="20201029 09:33:37.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.263" endtime="20201029 09:33:37.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.871" endtime="20201029 09:33:37.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.866" endtime="20201029 09:33:37.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:37.280" level="INFO">${RESULT} = [{'diff': 1.2458999999992448e-05}, {'diff': 1.2444000000000344e-05}, {'diff': 1.2457999999992975e-05}, {'diff': 1.2472000000013361e-05}, {'diff': 1.245800000002073e-05}, {'diff': 1.251299999999178e-05...</msg>
<status status="PASS" starttime="20201029 09:33:37.272" endtime="20201029 09:33:37.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:37.291" level="INFO">${OVERHEAD} = {'diff': [1.2458999999992448e-05, 1.2444000000000344e-05, 1.2457999999992975e-05, 1.2472000000013361e-05, 1.245800000002073e-05, 1.251299999999178e-05, 1.2444000000000344e-05, 1.24169999999868e-05, 1....</msg>
<status status="PASS" starttime="20201029 09:33:37.282" endtime="20201029 09:33:37.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.303" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 09:33:37.300" endtime="20201029 09:33:37.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.308" level="INFO">VALUE: [1.2458999999992448e-05, 1.2444000000000344e-05, 1.2457999999992975e-05, 1.2472000000013361e-05, 1.245800000002073e-05, 1.251299999999178e-05, 1.2444000000000344e-05, 1.24169999999868e-05, 1.2444999999999817e-05, 1.2444999999999817e-05, 1.2486000000005992e-05, 1.2444000000000344e-05, 1.2457999999992975e-05, 1.2457999999992975e-05, 1.2457999999992975e-05, 1.2513999999991254e-05, 1.247299999998508e-05, 1.2457999999992975e-05, 1.2402999999994169e-05, 1.243099999997943e-05, 1.245800000002073e-05, 1.2444999999999817e-05, 1.2471999999985606e-05, 1.245800000002073e-05, 1.2499999999998623e-05, 1.2457999999992975e-05, 1.2457999999992975e-05, 1.2457999999992975e-05, 1.2457999999992975e-05, 1.2459000000020204e-05, 1.2457999999992975e-05, 1.2457999999992975e-05, 1.245800000002073e-05, 1.2444999999999817e-05, 1.2459000000020204e-05, 1.247299999998508e-05, 1.2430000000007713e-05, 1.245800000002073e-05, 1.2444000000000344e-05, 1.2458999999992448e-05, 1.2459000000020204e-05, 1.2457999999992975e-05, 1.247299999998508e-05, 1.2457999999992975e-05, 1.2457999999992975e-05, 1.24169999999868e-05, 1.2472000000013361e-05, 1.2486000000005992e-05, 1.2458999999992448e-05, 1.2457999999992975e-05]</msg>
<status status="PASS" starttime="20201029 09:33:37.305" endtime="20201029 09:33:37.309"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.293" endtime="20201029 09:33:37.311"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.672" endtime="20201029 09:33:37.312"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:36.544" endtime="20201029 09:33:37.314" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:37.331" endtime="20201029 09:33:37.353"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.327" endtime="20201029 09:33:37.354"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.402" endtime="20201029 09:33:37.426"></status>
</kw>
<msg timestamp="20201029 09:33:37.428" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.397" endtime="20201029 09:33:37.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.434" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.430" endtime="20201029 09:33:37.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.441" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:37.437" endtime="20201029 09:33:37.442"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:37.386" endtime="20201029 09:33:37.444"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:37.379" endtime="20201029 09:33:37.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.372" endtime="20201029 09:33:37.446"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:37.454" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:37.453" endtime="20201029 09:33:37.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.448" endtime="20201029 09:33:37.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.370" endtime="20201029 09:33:37.458"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.368" endtime="20201029 09:33:37.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.460" endtime="20201029 09:33:37.463"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.361" endtime="20201029 09:33:37.465"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.356" endtime="20201029 09:33:37.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.325" endtime="20201029 09:33:37.467"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.489" endtime="20201029 09:33:37.811"></status>
</kw>
<msg timestamp="20201029 09:33:37.813" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.486" endtime="20201029 09:33:37.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.819" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.815" endtime="20201029 09:33:37.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.821" endtime="20201029 09:33:37.825"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.479" endtime="20201029 09:33:37.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.473" endtime="20201029 09:33:37.828"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.833" endtime="20201029 09:33:37.837"></status>
</kw>
<msg timestamp="20201029 09:33:37.839" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 09:33:37.830" endtime="20201029 09:33:37.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.849" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:37.846" endtime="20201029 09:33:37.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.853" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:37.851" endtime="20201029 09:33:37.854"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.840" endtime="20201029 09:33:37.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.865" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:37.863" endtime="20201029 09:33:37.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.870" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:37.868" endtime="20201029 09:33:37.871"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.857" endtime="20201029 09:33:37.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.890" endtime="20201029 09:33:38.252"></status>
</kw>
<msg timestamp="20201029 09:33:38.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.156141056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.156163944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.886" endtime="20201029 09:33:38.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.156141056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.156163944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.262" endtime="20201029 09:33:38.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.280" endtime="20201029 09:33:38.284"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.878" endtime="20201029 09:33:38.285"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.874" endtime="20201029 09:33:38.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:38.297" level="INFO">${RESULT} = [{'diff': 2.2887999999998687e-05}, {'diff': 2.2916000000011705e-05}, {'diff': 2.288899999999816e-05}, {'diff': 2.288899999999816e-05}, {'diff': 2.288899999999816e-05}, {'diff': 2.287500000000553e-05},...</msg>
<status status="PASS" starttime="20201029 09:33:38.288" endtime="20201029 09:33:38.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:38.309" level="INFO">${OVERHEAD} = {'diff': [2.2887999999998687e-05, 2.2916000000011705e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.287500000000553e-05, 2.287500000000553e-05, 2.2874999999977774e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 09:33:38.300" endtime="20201029 09:33:38.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.320" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 09:33:38.318" endtime="20201029 09:33:38.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.326" level="INFO">VALUE: [2.2887999999998687e-05, 2.2916000000011705e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.287500000000553e-05, 2.287500000000553e-05, 2.2874999999977774e-05, 2.28610000000129e-05, 2.287500000000553e-05, 2.288899999999816e-05, 2.284800000001974e-05, 2.2901999999991318e-05, 2.2818999999979495e-05, 2.2902999999990792e-05, 2.291700000001118e-05, 2.2887999999998687e-05, 2.2902999999963036e-05, 2.2875000000033285e-05, 2.2901999999991318e-05, 2.2903000000018547e-05, 2.291599999998395e-05, 2.2875000000033285e-05, 2.2944000000024722e-05, 2.2805999999986337e-05, 2.2903000000018547e-05, 2.2805999999986337e-05, 2.2889000000025916e-05, 2.2875000000033285e-05, 2.2875000000033285e-05, 2.2888999999970405e-05, 2.283299999999988e-05, 2.2887999999998687e-05, 2.2889000000025916e-05, 2.2902999999963036e-05, 2.2875000000033285e-05, 2.2874999999977774e-05, 2.2874999999977774e-05, 2.2875000000033285e-05, 2.2887999999998687e-05, 2.2862000000012372e-05, 2.2888999999970405e-05, 2.2874999999977774e-05, 2.2903000000018547e-05, 2.293100000000381e-05, 2.2887999999998687e-05, 2.2860999999985143e-05, 2.2888999999970405e-05, 2.2889000000025916e-05, 2.294399999996921e-05]</msg>
<status status="PASS" starttime="20201029 09:33:38.323" endtime="20201029 09:33:38.327"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.311" endtime="20201029 09:33:38.328"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.468" endtime="20201029 09:33:38.330"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:37.318" endtime="20201029 09:33:38.331" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:38.348" endtime="20201029 09:33:38.370"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.345" endtime="20201029 09:33:38.372"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.405" endtime="20201029 09:33:38.426"></status>
</kw>
<msg timestamp="20201029 09:33:38.427" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.402" endtime="20201029 09:33:38.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.435" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.430" endtime="20201029 09:33:38.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.441" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:38.437" endtime="20201029 09:33:38.442"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:38.395" endtime="20201029 09:33:38.444"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:38.388" endtime="20201029 09:33:38.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.385" endtime="20201029 09:33:38.446"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:38.456" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:38.454" endtime="20201029 09:33:38.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.448" endtime="20201029 09:33:38.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.384" endtime="20201029 09:33:38.458"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.382" endtime="20201029 09:33:38.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.460" endtime="20201029 09:33:38.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.378" endtime="20201029 09:33:38.468"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.373" endtime="20201029 09:33:38.470"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.342" endtime="20201029 09:33:38.470"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.482" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:38.500" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:40.547" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:38.478" endtime="20201029 09:33:40.548"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.554" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:33:40.551" endtime="20201029 09:33:40.555"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.472" endtime="20201029 09:33:40.557"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:40.564" endtime="20201029 09:33:40.586"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.560" endtime="20201029 09:33:40.588"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.610" endtime="20201029 09:33:40.620"></status>
</kw>
<msg timestamp="20201029 09:33:40.621" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.607" endtime="20201029 09:33:40.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.628" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.623" endtime="20201029 09:33:40.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.630" endtime="20201029 09:33:40.634"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.599" endtime="20201029 09:33:40.636"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.594" endtime="20201029 09:33:40.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.657" endtime="20201029 09:33:41.004"></status>
</kw>
<msg timestamp="20201029 09:33:41.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035794236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.03579675, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 09:33:40.651" endtime="20201029 09:33:41.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035794236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.03579675, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 09:33:41.014" endtime="20201029 09:33:41.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.033" endtime="20201029 09:33:41.037"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.643" endtime="20201029 09:33:41.038"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.638" endtime="20201029 09:33:41.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:41.049" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 1.6485999999996115e-05}, {'diff': 1.6485999999996115e-05}, {'diff': 1.6486000000003054e-05}, {'diff': 1.6472000000003484e-05}, {'diff': 1.6471999999996545e-05}, {'diff': 1.66529...</msg>
<status status="PASS" starttime="20201029 09:33:41.041" endtime="20201029 09:33:41.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:41.058" level="INFO">${RESULT} = {'diff': [0, 1.6485999999996115e-05, 1.6485999999996115e-05, 1.6486000000003054e-05, 1.6472000000003484e-05, 1.6471999999996545e-05, 1.665299999999842e-05, 1.6471999999996545e-05, 1.6443999999997405e-...</msg>
<status status="PASS" starttime="20201029 09:33:41.051" endtime="20201029 09:33:41.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.069" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:41.067" endtime="20201029 09:33:41.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.074" level="INFO">VALUE: [0, 1.6485999999996115e-05, 1.6485999999996115e-05, 1.6486000000003054e-05, 1.6472000000003484e-05, 1.6471999999996545e-05, 1.665299999999842e-05, 1.6471999999996545e-05, 1.6443999999997405e-05, 1.6486000000003054e-05, 1.6471999999996545e-05, 1.6485999999996115e-05, 1.6457999999996975e-05, 1.6514000000002194e-05, 1.662499999999928e-05, 1.643099999999731e-05, 1.6485999999996115e-05, 1.6514000000002194e-05, 1.6458000000003914e-05, 1.6514000000002194e-05, 1.6457999999996975e-05, 1.6471999999996545e-05, 1.663899999999885e-05, 1.6458000000003914e-05, 1.6486000000003054e-05, 1.6485999999996115e-05, 1.655500000000143e-05, 1.6500000000002624e-05, 1.6486000000003054e-05, 1.6471999999996545e-05, 1.6679999999998085e-05, 1.6499999999995685e-05, 1.6486000000003054e-05, 1.6487000000002527e-05, 1.6487000000002527e-05, 1.6499999999995685e-05, 1.6487000000002527e-05, 1.6528000000001764e-05, 1.665299999999842e-05, 1.6457999999996975e-05, 1.6485999999996115e-05, 1.6472000000003484e-05, 1.6486000000003054e-05, 1.6499999999995685e-05, 1.6485999999996115e-05, 1.6500000000002624e-05, 1.6653000000005358e-05, 1.641699999999774e-05, 1.6471999999996545e-05, 1.6513999999995255e-05]</msg>
<status status="PASS" starttime="20201029 09:33:41.071" endtime="20201029 09:33:41.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.060" endtime="20201029 09:33:41.077"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.590" endtime="20201029 09:33:41.078"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.559" endtime="20201029 09:33:41.079"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:41.084" endtime="20201029 09:33:41.106"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.081" endtime="20201029 09:33:41.107"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.128" endtime="20201029 09:33:41.137"></status>
</kw>
<msg timestamp="20201029 09:33:41.138" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.125" endtime="20201029 09:33:41.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.145" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.141" endtime="20201029 09:33:41.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.147" endtime="20201029 09:33:41.151"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.117" endtime="20201029 09:33:41.152"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.112" endtime="20201029 09:33:41.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.171" endtime="20201029 09:33:41.513"></status>
</kw>
<msg timestamp="20201029 09:33:41.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033763403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033794889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.168" endtime="20201029 09:33:41.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033763403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033794889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.522" endtime="20201029 09:33:41.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.542" endtime="20201029 09:33:41.546"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.159" endtime="20201029 09:33:41.547"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.155" endtime="20201029 09:33:41.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:41.558" level="INFO">${PHILIP_RES} = [{'diff': 3.148600000000418e-05}, {'diff': 3.0388999999998723e-05}, {'diff': 3.072199999999692e-05}, {'diff': 3.184700000000151e-05}, {'diff': 3.038799999999925e-05}, {'diff': 3.072300000000333e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:33:41.550" endtime="20201029 09:33:41.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:41.568" level="INFO">${RESULT} = {'diff': [3.148600000000418e-05, 3.0388999999998723e-05, 3.072199999999692e-05, 3.184700000000151e-05, 3.038799999999925e-05, 3.072300000000333e-05, 3.184700000000151e-05, 3.040199999999882e-05, 3.069...</msg>
<status status="PASS" starttime="20201029 09:33:41.560" endtime="20201029 09:33:41.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.578" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:41.576" endtime="20201029 09:33:41.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.584" level="INFO">VALUE: [3.148600000000418e-05, 3.0388999999998723e-05, 3.072199999999692e-05, 3.184700000000151e-05, 3.038799999999925e-05, 3.072300000000333e-05, 3.184700000000151e-05, 3.040199999999882e-05, 3.069400000000472e-05, 3.186100000000108e-05, 3.0305000000001303e-05, 3.070900000000376e-05, 3.187500000000065e-05, 3.0374999999999153e-05, 3.070899999999682e-05, 3.184700000000151e-05, 3.0360999999999583e-05, 3.070799999999735e-05, 3.186100000000108e-05, 3.0374999999999153e-05, 3.07370000000029e-05, 3.17779999999962e-05, 3.040199999999882e-05, 3.068100000000462e-05, 3.1874999999993714e-05, 3.0388999999998723e-05, 3.070800000000429e-05, 3.187500000000065e-05, 3.038900000000566e-05, 3.069399999999778e-05, 3.183300000000194e-05, 3.0374999999999153e-05, 3.067999999999821e-05, 3.184700000000151e-05, 3.0374999999999153e-05, 3.072199999999692e-05, 3.186100000000108e-05, 3.0374999999999153e-05, 3.070799999999735e-05, 3.183300000000194e-05, 3.0360999999999583e-05, 3.0750000000003e-05, 3.183399999999448e-05, 3.0388999999998723e-05, 3.070900000000376e-05, 3.183399999999448e-05, 3.0362000000005995e-05, 3.066599999999864e-05, 3.183400000000142e-05, 3.0360999999999583e-05]</msg>
<status status="PASS" starttime="20201029 09:33:41.581" endtime="20201029 09:33:41.585"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.569" endtime="20201029 09:33:41.586"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.108" endtime="20201029 09:33:41.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.079" endtime="20201029 09:33:41.588"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:41.594" endtime="20201029 09:33:41.615"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.590" endtime="20201029 09:33:41.617"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.640" endtime="20201029 09:33:41.650"></status>
</kw>
<msg timestamp="20201029 09:33:41.651" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.637" endtime="20201029 09:33:41.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.658" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.654" endtime="20201029 09:33:41.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.660" endtime="20201029 09:33:41.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.628" endtime="20201029 09:33:41.665"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.622" endtime="20201029 09:33:41.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.683" endtime="20201029 09:33:42.026"></status>
</kw>
<msg timestamp="20201029 09:33:42.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036284986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036329889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.680" endtime="20201029 09:33:42.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036284986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036329889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.036" endtime="20201029 09:33:42.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.055" endtime="20201029 09:33:42.058"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.673" endtime="20201029 09:33:42.060"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.668" endtime="20201029 09:33:42.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:42.070" level="INFO">${PHILIP_RES} = [{'diff': 4.4902999999998916e-05}, {'diff': 4.4666999999998236e-05}, {'diff': 4.4847000000000636e-05}, {'diff': 4.4861000000000206e-05}, {'diff': 4.477800000000226e-05}, {'diff': 4.580599999999546e-05...</msg>
<status status="PASS" starttime="20201029 09:33:42.063" endtime="20201029 09:33:42.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:42.080" level="INFO">${RESULT} = {'diff': [4.4902999999998916e-05, 4.4666999999998236e-05, 4.4847000000000636e-05, 4.4861000000000206e-05, 4.477800000000226e-05, 4.580599999999546e-05, 4.579099999999642e-05, 4.577800000000326e-05, 4....</msg>
<status status="PASS" starttime="20201029 09:33:42.073" endtime="20201029 09:33:42.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.092" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:42.088" endtime="20201029 09:33:42.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.097" level="INFO">VALUE: [4.4902999999998916e-05, 4.4666999999998236e-05, 4.4847000000000636e-05, 4.4861000000000206e-05, 4.477800000000226e-05, 4.580599999999546e-05, 4.579099999999642e-05, 4.577800000000326e-05, 4.576400000000369e-05, 4.579199999999589e-05, 4.580499999999599e-05, 4.58060000000024e-05, 4.577800000000326e-05, 4.580599999999546e-05, 4.587499999999384e-05, 4.579200000000283e-05, 4.579200000000283e-05, 4.583400000000154e-05, 4.579199999999589e-05, 4.579100000000336e-05, 4.5861000000001206e-05, 4.577799999999632e-05, 4.579200000000283e-05, 4.5861000000001206e-05, 4.579200000000283e-05, 4.577699999999685e-05, 4.58060000000024e-05, 4.576300000000422e-05, 4.579199999999589e-05, 4.580499999999599e-05, 4.576400000000369e-05, 4.577700000000379e-05, 4.573599999999761e-05, 4.580499999999599e-05, 4.579200000000283e-05, 4.579100000000336e-05, 4.576399999999675e-05, 4.577699999999685e-05, 4.577800000000326e-05, 4.572200000000498e-05, 4.576399999999675e-05, 4.577799999999632e-05, 4.5875000000000776e-05, 4.573600000000455e-05, 4.577799999999632e-05, 4.580500000000293e-05, 4.579200000000283e-05, 4.579200000000283e-05, 4.581999999999503e-05, 4.580500000000293e-05]</msg>
<status status="PASS" starttime="20201029 09:33:42.094" endtime="20201029 09:33:42.098"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.082" endtime="20201029 09:33:42.100"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.618" endtime="20201029 09:33:42.101"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.589" endtime="20201029 09:33:42.102"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:42.107" endtime="20201029 09:33:42.130"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.104" endtime="20201029 09:33:42.136"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.162" endtime="20201029 09:33:42.174"></status>
</kw>
<msg timestamp="20201029 09:33:42.175" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.157" endtime="20201029 09:33:42.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.182" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.177" endtime="20201029 09:33:42.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.184" endtime="20201029 09:33:42.188"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.149" endtime="20201029 09:33:42.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.143" endtime="20201029 09:33:42.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.207" endtime="20201029 09:33:42.545"></status>
</kw>
<msg timestamp="20201029 09:33:42.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044686139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044746361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.204" endtime="20201029 09:33:42.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044686139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044746361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.556" endtime="20201029 09:33:42.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.575" endtime="20201029 09:33:42.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.197" endtime="20201029 09:33:42.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.192" endtime="20201029 09:33:42.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:42.591" level="INFO">${PHILIP_RES} = [{'diff': 6.0221999999998665e-05}, {'diff': 6.0930000000000706e-05}, {'diff': 6.0971999999999416e-05}, {'diff': 6.077700000000491e-05}, {'diff': 6.091700000000061e-05}, {'diff': 6.20279999999987e-05},...</msg>
<status status="PASS" starttime="20201029 09:33:42.584" endtime="20201029 09:33:42.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:42.607" level="INFO">${RESULT} = {'diff': [6.0221999999998665e-05, 6.0930000000000706e-05, 6.0971999999999416e-05, 6.077700000000491e-05, 6.091700000000061e-05, 6.20279999999987e-05, 6.194400000000128e-05, 6.18750000000029e-05, 6.193...</msg>
<status status="PASS" starttime="20201029 09:33:42.593" endtime="20201029 09:33:42.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.618" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:42.616" endtime="20201029 09:33:42.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.623" level="INFO">VALUE: [6.0221999999998665e-05, 6.0930000000000706e-05, 6.0971999999999416e-05, 6.077700000000491e-05, 6.091700000000061e-05, 6.20279999999987e-05, 6.194400000000128e-05, 6.18750000000029e-05, 6.193100000000118e-05, 6.188799999999606e-05, 6.195900000000032e-05, 6.191600000000214e-05, 6.194400000000128e-05, 6.195900000000032e-05, 6.194399999999434e-05, 6.19300000000017e-05, 6.194400000000128e-05, 6.19300000000017e-05, 6.194399999999434e-05, 6.193100000000118e-05, 6.19300000000017e-05, 6.195800000000085e-05, 6.197199999999348e-05, 6.19300000000017e-05, 6.191700000000161e-05, 6.194500000000075e-05, 6.191600000000214e-05, 6.191699999999467e-05, 6.191700000000161e-05, 6.194400000000128e-05, 6.18750000000029e-05, 6.191600000000214e-05, 6.193100000000118e-05, 6.194400000000128e-05, 6.194400000000128e-05, 6.194500000000075e-05, 6.191600000000214e-05, 6.188899999999553e-05, 6.194500000000075e-05, 6.194400000000128e-05, 6.193100000000118e-05, 6.194400000000128e-05, 6.193099999999424e-05, 6.190300000000204e-05, 6.19300000000017e-05, 6.194500000000075e-05, 6.195900000000032e-05, 6.192999999999477e-05, 6.190300000000204e-05, 6.197200000000042e-05]</msg>
<status status="PASS" starttime="20201029 09:33:42.620" endtime="20201029 09:33:42.624"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.609" endtime="20201029 09:33:42.626"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.138" endtime="20201029 09:33:42.627"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.102" endtime="20201029 09:33:42.627"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:42.633" endtime="20201029 09:33:42.655"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.630" endtime="20201029 09:33:42.657"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.677" endtime="20201029 09:33:42.689"></status>
</kw>
<msg timestamp="20201029 09:33:42.691" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.674" endtime="20201029 09:33:42.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.697" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.693" endtime="20201029 09:33:42.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.699" endtime="20201029 09:33:42.703"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.667" endtime="20201029 09:33:42.704"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.662" endtime="20201029 09:33:42.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.725" endtime="20201029 09:33:43.061"></status>
</kw>
<msg timestamp="20201029 09:33:43.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034130597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034208181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.721" endtime="20201029 09:33:43.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034130597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034208181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.070" endtime="20201029 09:33:43.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.092" endtime="20201029 09:33:43.097"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.712" endtime="20201029 09:33:43.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.707" endtime="20201029 09:33:43.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:43.112" level="INFO">${PHILIP_RES} = [{'diff': 7.75839999999986e-05}, {'diff': 7.695900000000144e-05}, {'diff': 7.813900000000484e-05}, {'diff': 7.711099999999776e-05}, {'diff': 7.69719999999946e-05}, {'diff': 7.818000000000408e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:43.103" endtime="20201029 09:33:43.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:43.125" level="INFO">${RESULT} = {'diff': [7.75839999999986e-05, 7.695900000000144e-05, 7.813900000000484e-05, 7.711099999999776e-05, 7.69719999999946e-05, 7.818000000000408e-05, 7.71389999999969e-05, 7.697200000000154e-05, 7.8124999...</msg>
<status status="PASS" starttime="20201029 09:33:43.115" endtime="20201029 09:33:43.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.136" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:43.134" endtime="20201029 09:33:43.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.142" level="INFO">VALUE: [7.75839999999986e-05, 7.695900000000144e-05, 7.813900000000484e-05, 7.711099999999776e-05, 7.69719999999946e-05, 7.818000000000408e-05, 7.71389999999969e-05, 7.697200000000154e-05, 7.812499999999833e-05, 7.70969999999982e-05, 7.698599999999417e-05, 7.812499999999833e-05, 7.716700000000298e-05, 7.697200000000154e-05, 7.811099999999876e-05, 7.716700000000298e-05, 7.702799999999982e-05, 7.812499999999833e-05, 7.712499999999733e-05, 7.697300000000101e-05, 7.815299999999747e-05, 7.716700000000298e-05, 7.701400000000025e-05, 7.81389999999979e-05, 7.712499999999733e-05, 7.697200000000154e-05, 7.812499999999833e-05, 7.712499999999733e-05, 7.695799999999503e-05, 7.817999999999714e-05, 7.715299999999647e-05, 7.697200000000154e-05, 7.81389999999979e-05, 7.712499999999733e-05, 7.702799999999982e-05, 7.81389999999979e-05, 7.715299999999647e-05, 7.697200000000154e-05, 7.812499999999833e-05, 7.715299999999647e-05, 7.694399999999546e-05, 7.812499999999833e-05, 7.712499999999733e-05, 7.702700000000035e-05, 7.812499999999833e-05, 7.712500000000427e-05, 7.695799999999503e-05, 7.80969999999992e-05, 7.719499999999518e-05, 7.697200000000154e-05]</msg>
<status status="PASS" starttime="20201029 09:33:43.139" endtime="20201029 09:33:43.143"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.127" endtime="20201029 09:33:43.144"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.658" endtime="20201029 09:33:43.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.628" endtime="20201029 09:33:43.146"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:43.152" endtime="20201029 09:33:43.173"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.148" endtime="20201029 09:33:43.175"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.196" endtime="20201029 09:33:43.208"></status>
</kw>
<msg timestamp="20201029 09:33:43.209" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.192" endtime="20201029 09:33:43.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.215" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.212" endtime="20201029 09:33:43.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.218" endtime="20201029 09:33:43.221"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.185" endtime="20201029 09:33:43.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.180" endtime="20201029 09:33:43.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.241" endtime="20201029 09:33:43.578"></status>
</kw>
<msg timestamp="20201029 09:33:43.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033523264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033618486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.237" endtime="20201029 09:33:43.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033523264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033618486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.588" endtime="20201029 09:33:43.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.606" endtime="20201029 09:33:43.610"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.230" endtime="20201029 09:33:43.611"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.226" endtime="20201029 09:33:43.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:43.622" level="INFO">${PHILIP_RES} = [{'diff': 9.522200000000591e-05}, {'diff': 9.536100000000214e-05}, {'diff': 9.611100000000289e-05}, {'diff': 9.52079999999994e-05}, {'diff': 9.523599999999854e-05}, {'diff': 9.522199999999897e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:43.614" endtime="20201029 09:33:43.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:43.631" level="INFO">${RESULT} = {'diff': [9.522200000000591e-05, 9.536100000000214e-05, 9.611100000000289e-05, 9.52079999999994e-05, 9.523599999999854e-05, 9.522199999999897e-05, 9.523599999999854e-05, 9.536100000000214e-05, 9.61520...</msg>
<status status="PASS" starttime="20201029 09:33:43.624" endtime="20201029 09:33:43.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.642" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:43.639" endtime="20201029 09:33:43.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.647" level="INFO">VALUE: [9.522200000000591e-05, 9.536100000000214e-05, 9.611100000000289e-05, 9.52079999999994e-05, 9.523599999999854e-05, 9.522199999999897e-05, 9.523599999999854e-05, 9.536100000000214e-05, 9.615200000000212e-05, 9.527800000000419e-05, 9.523599999999854e-05, 9.522199999999897e-05, 9.529199999999682e-05, 9.537500000000171e-05, 9.618000000000126e-05, 9.520899999999888e-05, 9.520899999999888e-05, 9.520899999999888e-05, 9.51530000000006e-05, 9.536100000000214e-05, 9.619500000000031e-05, 9.523599999999854e-05, 9.52079999999994e-05, 9.524999999999811e-05, 9.524999999999811e-05, 9.541600000000094e-05, 9.618100000000074e-05, 9.523599999999854e-05, 9.522299999999845e-05, 9.523599999999854e-05, 9.523599999999854e-05, 9.540300000000085e-05, 9.626399999999868e-05, 9.526400000000462e-05, 9.525000000000505e-05, 9.525000000000505e-05, 9.531899999999649e-05, 9.540300000000085e-05, 9.62080000000004e-05, 9.531899999999649e-05, 9.522199999999897e-05, 9.52079999999994e-05, 9.522199999999897e-05, 9.544400000000008e-05, 9.61809999999938e-05, 9.522300000000539e-05, 9.518099999999974e-05, 9.523599999999854e-05, 9.523699999999802e-05, 9.540300000000085e-05]</msg>
<status status="PASS" starttime="20201029 09:33:43.644" endtime="20201029 09:33:43.648"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.633" endtime="20201029 09:33:43.649"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.176" endtime="20201029 09:33:43.651"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.147" endtime="20201029 09:33:43.651"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:43.657" endtime="20201029 09:33:43.678"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.653" endtime="20201029 09:33:43.680"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.701" endtime="20201029 09:33:43.714"></status>
</kw>
<msg timestamp="20201029 09:33:43.716" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.697" endtime="20201029 09:33:43.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.722" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.718" endtime="20201029 09:33:43.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.724" endtime="20201029 09:33:43.729"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.690" endtime="20201029 09:33:43.731"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.685" endtime="20201029 09:33:43.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.749" endtime="20201029 09:33:44.090"></status>
</kw>
<msg timestamp="20201029 09:33:44.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033941875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034056167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.746" endtime="20201029 09:33:44.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033941875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034056167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.100" endtime="20201029 09:33:44.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.118" endtime="20201029 09:33:44.121"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.738" endtime="20201029 09:33:44.123"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.733" endtime="20201029 09:33:44.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:44.133" level="INFO">${PHILIP_RES} = [{'diff': 0.00011429199999999501}, {'diff': 0.00011345900000000325}, {'diff': 0.00011426400000000281}, {'diff': 0.00011344399999999727}, {'diff': 0.00011426400000000281}, {'diff': 0.000113472000000003...</msg>
<status status="PASS" starttime="20201029 09:33:44.126" endtime="20201029 09:33:44.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:44.142" level="INFO">${RESULT} = {'diff': [0.00011429199999999501, 0.00011345900000000325, 0.00011426400000000281, 0.00011344399999999727, 0.00011426400000000281, 0.00011347200000000335, 0.0001142499999999963, 0.00011348600000000292,...</msg>
<status status="PASS" starttime="20201029 09:33:44.135" endtime="20201029 09:33:44.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.153" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:44.150" endtime="20201029 09:33:44.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.158" level="INFO">VALUE: [0.00011429199999999501, 0.00011345900000000325, 0.00011426400000000281, 0.00011344399999999727, 0.00011426400000000281, 0.00011347200000000335, 0.0001142499999999963, 0.00011348600000000292, 0.00011426400000000281, 0.00011347200000000335, 0.00011426399999999587, 0.00011350000000000249, 0.0001142770000000029, 0.00011347199999999641, 0.00011426400000000281, 0.00011354100000000172, 0.00011427699999999597, 0.00011344399999999727, 0.00011433300000000118, 0.00011345800000000378, 0.00011427699999999597, 0.00011348599999999598, 0.00011429200000000195, 0.00011348600000000292, 0.00011420799999999759, 0.00011348599999999598, 0.00011427800000000238, 0.00011347200000000335, 0.00011427799999999544, 0.00011347199999999641, 0.00011425000000000324, 0.00011345800000000378, 0.00011427799999999544, 0.00011349999999999555, 0.00011429100000000247, 0.00011348600000000292, 0.00011429199999999501, 0.00011348599999999598, 0.00011420799999999759, 0.00011350000000000249, 0.00011429099999999554, 0.00011347199999999641, 0.00011436100000000032, 0.00011348700000000239, 0.00011422199999999716, 0.00011347199999999641, 0.00011427800000000238, 0.00011344400000000421, 0.00011433300000000118, 0.00011347199999999641]</msg>
<status status="PASS" starttime="20201029 09:33:44.155" endtime="20201029 09:33:44.159"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.144" endtime="20201029 09:33:44.160"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.681" endtime="20201029 09:33:44.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.652" endtime="20201029 09:33:44.162"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:44.168" endtime="20201029 09:33:44.189"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.164" endtime="20201029 09:33:44.191"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.216" endtime="20201029 09:33:44.233"></status>
</kw>
<msg timestamp="20201029 09:33:44.234" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.212" endtime="20201029 09:33:44.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.243" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.238" endtime="20201029 09:33:44.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.246" endtime="20201029 09:33:44.251"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.204" endtime="20201029 09:33:44.254"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.198" endtime="20201029 09:33:44.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.276" endtime="20201029 09:33:44.627"></status>
</kw>
<msg timestamp="20201029 09:33:44.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038986417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039119361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.272" endtime="20201029 09:33:44.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038986417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039119361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.636" endtime="20201029 09:33:44.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.654" endtime="20201029 09:33:44.658"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.264" endtime="20201029 09:33:44.660"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.257" endtime="20201029 09:33:44.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:44.670" level="INFO">${PHILIP_RES} = [{'diff': 0.00013294399999999595}, {'diff': 0.00013345799999999602}, {'diff': 0.00013465299999999847}, {'diff': 0.0001334440000000034}, {'diff': 0.00013458300000000062}, {'diff': 0.0001334580000000029...</msg>
<status status="PASS" starttime="20201029 09:33:44.663" endtime="20201029 09:33:44.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:44.680" level="INFO">${RESULT} = {'diff': [0.00013294399999999595, 0.00013345799999999602, 0.00013465299999999847, 0.0001334440000000034, 0.00013458300000000062, 0.00013345800000000296, 0.00013461099999999976, 0.00013344399999999645,...</msg>
<status status="PASS" starttime="20201029 09:33:44.672" endtime="20201029 09:33:44.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.690" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:44.688" endtime="20201029 09:33:44.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.697" level="INFO">VALUE: [0.00013294399999999595, 0.00013345799999999602, 0.00013465299999999847, 0.0001334440000000034, 0.00013458300000000062, 0.00013345800000000296, 0.00013461099999999976, 0.00013344399999999645, 0.0001345970000000002, 0.0001334169999999968, 0.0001346389999999989, 0.00013350000000000167, 0.00013461099999999976, 0.0001334719999999956, 0.0001345970000000002, 0.00013347200000000253, 0.0001346389999999989, 0.00013342999999999688, 0.0001346110000000067, 0.00013344499999999593, 0.00013454199999999444, 0.0001334589999999955, 0.00013452799999999487, 0.0001334860000000021, 0.00013454200000000138, 0.00013340299999999722, 0.0001345410000000019, 0.0001333890000000046, 0.0001345840000000001, 0.0001334310000000033, 0.00013455600000000095, 0.00013341599999999731, 0.00013455500000000148, 0.0001334719999999956, 0.0001346389999999989, 0.00013345800000000296, 0.0001345970000000002, 0.0001334310000000033, 0.0001345840000000001, 0.00013344499999999593, 0.00013454200000000138, 0.000133473000000002, 0.00013463799999999942, 0.00013350000000000167, 0.00013459799999999966, 0.0001334719999999956, 0.0001346389999999989, 0.00013351400000000124, 0.00013462499999999933, 0.00013347299999999507]</msg>
<status status="PASS" starttime="20201029 09:33:44.692" endtime="20201029 09:33:44.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.681" endtime="20201029 09:33:44.700"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.192" endtime="20201029 09:33:44.701"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.163" endtime="20201029 09:33:44.701"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:44.707" endtime="20201029 09:33:44.729"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.703" endtime="20201029 09:33:44.731"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.751" endtime="20201029 09:33:44.767"></status>
</kw>
<msg timestamp="20201029 09:33:44.769" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.748" endtime="20201029 09:33:44.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.775" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.771" endtime="20201029 09:33:44.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.777" endtime="20201029 09:33:44.781"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.741" endtime="20201029 09:33:44.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.736" endtime="20201029 09:33:44.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.807" endtime="20201029 09:33:45.151"></status>
</kw>
<msg timestamp="20201029 09:33:45.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034255444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034411056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.803" endtime="20201029 09:33:45.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034255444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034411056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:45.161" endtime="20201029 09:33:45.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.179" endtime="20201029 09:33:45.183"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.795" endtime="20201029 09:33:45.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.790" endtime="20201029 09:33:45.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:45.196" level="INFO">${PHILIP_RES} = [{'diff': 0.00015561199999999942}, {'diff': 0.00015263900000000302}, {'diff': 0.00015261199999999642}, {'diff': 0.00015265299999999565}, {'diff': 0.00015263899999999608}, {'diff': 0.000152681000000001...</msg>
<status status="PASS" starttime="20201029 09:33:45.188" endtime="20201029 09:33:45.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:45.206" level="INFO">${RESULT} = {'diff': [0.00015561199999999942, 0.00015263900000000302, 0.00015261199999999642, 0.00015265299999999565, 0.00015263899999999608, 0.00015268100000000173, 0.00015477800000000125, 0.0001526249999999965,...</msg>
<status status="PASS" starttime="20201029 09:33:45.198" endtime="20201029 09:33:45.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.217" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:45.215" endtime="20201029 09:33:45.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.222" level="INFO">VALUE: [0.00015561199999999942, 0.00015263900000000302, 0.00015261199999999642, 0.00015265299999999565, 0.00015263899999999608, 0.00015268100000000173, 0.00015477800000000125, 0.0001526249999999965, 0.0001526660000000027, 0.00015266700000000216, 0.00015263899999999608, 0.00015265299999999565, 0.00015480500000000091, 0.00015265299999999565, 0.00015268100000000173, 0.00015268000000000226, 0.00015269400000000183, 0.00015263899999999608, 0.00015479100000000134, 0.00015263900000000302, 0.00015263899999999608, 0.00015266700000000216, 0.00015262500000000345, 0.0001526530000000026, 0.00015481999999999996, 0.00015265200000000312, 0.0001527500000000001, 0.00015269499999999436, 0.00015272300000000044, 0.00015263900000000302, 0.00015476399999999474, 0.0001527080000000014, 0.0001526530000000026, 0.00015263900000000302, 0.00015261199999999642, 0.00015265299999999565, 0.00015477800000000125, 0.00015262500000000345, 0.00015266599999999575, 0.0001526809999999948, 0.00015263900000000302, 0.0001525550000000056, 0.0001547500000000021, 0.0001526379999999966, 0.00015266700000000216, 0.00015263900000000302, 0.00015262500000000345, 0.00015263900000000302, 0.0001547909999999944, 0.0001526530000000026]</msg>
<status status="PASS" starttime="20201029 09:33:45.219" endtime="20201029 09:33:45.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.208" endtime="20201029 09:33:45.225"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.732" endtime="20201029 09:33:45.226"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.702" endtime="20201029 09:33:45.227"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:45.233" endtime="20201029 09:33:45.255"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.229" endtime="20201029 09:33:45.256"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.277" endtime="20201029 09:33:45.296"></status>
</kw>
<msg timestamp="20201029 09:33:45.297" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:45.274" endtime="20201029 09:33:45.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.303" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:45.299" endtime="20201029 09:33:45.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.306" endtime="20201029 09:33:45.310"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.267" endtime="20201029 09:33:45.312"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.261" endtime="20201029 09:33:45.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.330" endtime="20201029 09:33:45.688"></status>
</kw>
<msg timestamp="20201029 09:33:45.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034758681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034932569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:45.326" endtime="20201029 09:33:45.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034758681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034932569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:45.697" endtime="20201029 09:33:45.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.715" endtime="20201029 09:33:45.719"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.319" endtime="20201029 09:33:45.720"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.314" endtime="20201029 09:33:45.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:45.731" level="INFO">${PHILIP_RES} = [{'diff': 0.00017388799999999704}, {'diff': 0.00017572300000000263}, {'diff': 0.00017386099999999738}, {'diff': 0.00017388899999999652}, {'diff': 0.00017570800000000358}, {'diff': 0.000173888999999996...</msg>
<status status="PASS" starttime="20201029 09:33:45.723" endtime="20201029 09:33:45.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:45.742" level="INFO">${RESULT} = {'diff': [0.00017388799999999704, 0.00017572300000000263, 0.00017386099999999738, 0.00017388899999999652, 0.00017570800000000358, 0.00017388899999999652, 0.00017386099999999738, 0.00017566700000000435...</msg>
<status status="PASS" starttime="20201029 09:33:45.733" endtime="20201029 09:33:45.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.752" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:45.750" endtime="20201029 09:33:45.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.757" level="INFO">VALUE: [0.00017388799999999704, 0.00017572300000000263, 0.00017386099999999738, 0.00017388899999999652, 0.00017570800000000358, 0.00017388899999999652, 0.00017386099999999738, 0.00017566700000000435, 0.00017388800000000398, 0.00017388899999999652, 0.00017566599999999793, 0.00017386100000000432, 0.00017387499999999695, 0.0001756249999999987, 0.00017388800000000398, 0.0001739029999999961, 0.00017570799999999664, 0.00017388900000000346, 0.00017387499999999695, 0.00017565299999999784, 0.00017384799999999728, 0.0001739170000000026, 0.0001756799999999975, 0.00017386100000000432, 0.0001738750000000039, 0.00017569399999999707, 0.00017387499999999695, 0.00017388799999999704, 0.0001756950000000035, 0.0001739029999999961, 0.0001738750000000039, 0.00017570900000000306, 0.00017386099999999738, 0.00017390300000000303, 0.00017568100000000392, 0.0001738750000000039, 0.00017386099999999738, 0.00017566599999999793, 0.00017390300000000303, 0.0001738469999999978, 0.00017566599999999793, 0.00017387499999999695, 0.00017386100000000432, 0.00017570800000000358, 0.00017394399999999532, 0.0001738750000000039, 0.0001756799999999975, 0.00017388899999999652, 0.0001738750000000039, 0.00017572300000000263]</msg>
<status status="PASS" starttime="20201029 09:33:45.754" endtime="20201029 09:33:45.758"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.744" endtime="20201029 09:33:45.760"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.257" endtime="20201029 09:33:45.761"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.228" endtime="20201029 09:33:45.762"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:45.767" endtime="20201029 09:33:45.789"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.764" endtime="20201029 09:33:45.791"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.811" endtime="20201029 09:33:45.830"></status>
</kw>
<msg timestamp="20201029 09:33:45.831" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:45.808" endtime="20201029 09:33:45.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.838" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:45.834" endtime="20201029 09:33:45.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.841" endtime="20201029 09:33:45.845"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.801" endtime="20201029 09:33:45.847"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.796" endtime="20201029 09:33:45.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.865" endtime="20201029 09:33:46.202"></status>
</kw>
<msg timestamp="20201029 09:33:46.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034257056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034454458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:45.862" endtime="20201029 09:33:46.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034257056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034454458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:46.211" endtime="20201029 09:33:46.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.230" endtime="20201029 09:33:46.233"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.854" endtime="20201029 09:33:46.235"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.850" endtime="20201029 09:33:46.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:46.245" level="INFO">${PHILIP_RES} = [{'diff': 0.0001974019999999993}, {'diff': 0.00019798600000000416}, {'diff': 0.00019795799999999808}, {'diff': 0.00019792999999999894}, {'diff': 0.00019794500000000492}, {'diff': 0.0001979579999999980...</msg>
<status status="PASS" starttime="20201029 09:33:46.238" endtime="20201029 09:33:46.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:46.255" level="INFO">${RESULT} = {'diff': [0.0001974019999999993, 0.00019798600000000416, 0.00019795799999999808, 0.00019792999999999894, 0.00019794500000000492, 0.00019795799999999808, 0.00019793099999999841, 0.0001979590000000045, ...</msg>
<status status="PASS" starttime="20201029 09:33:46.247" endtime="20201029 09:33:46.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.265" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:46.263" endtime="20201029 09:33:46.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.270" level="INFO">VALUE: [0.0001974019999999993, 0.00019798600000000416, 0.00019795799999999808, 0.00019792999999999894, 0.00019794500000000492, 0.00019795799999999808, 0.00019793099999999841, 0.0001979590000000045, 0.0001979439999999985, 0.00019788800000000023, 0.00019790299999999927, 0.00019791599999999937, 0.00019790299999999927, 0.00019791699999999884, 0.0001979439999999985, 0.00019791699999999884, 0.00019798600000000416, 0.00019793099999999841, 0.00019801300000000382, 0.00019793000000000588, 0.00019795799999999808, 0.0001980140000000033, 0.00019791599999999937, 0.00019801399999999636, 0.00019794500000000492, 0.00019794499999999798, 0.00019793099999999841, 0.00019792999999999894, 0.0001979439999999985, 0.0001979999999999968, 0.00019795800000000502, 0.00019798599999999722, 0.00019797199999999765, 0.00019793099999999841, 0.00019793099999999841, 0.00019786100000000056, 0.00019793099999999841, 0.00019795899999999755, 0.00019794500000000492, 0.00019797299999999712, 0.0001980270000000034, 0.0001979720000000046, 0.00019792999999999894, 0.00019797199999999765, 0.00019788900000000664, 0.0001979439999999985, 0.00019791599999999937, 0.00019793099999999841, 0.00019788900000000664, 0.00019797199999999765]</msg>
<status status="PASS" starttime="20201029 09:33:46.267" endtime="20201029 09:33:46.271"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.256" endtime="20201029 09:33:46.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.792" endtime="20201029 09:33:46.274"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.762" endtime="20201029 09:33:46.274"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:46.280" endtime="20201029 09:33:46.301"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.276" endtime="20201029 09:33:46.303"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.324" endtime="20201029 09:33:46.344"></status>
</kw>
<msg timestamp="20201029 09:33:46.345" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.320" endtime="20201029 09:33:46.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.360" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.355" endtime="20201029 09:33:46.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.362" endtime="20201029 09:33:46.367"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.313" endtime="20201029 09:33:46.369"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.308" endtime="20201029 09:33:46.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.387" endtime="20201029 09:33:46.738"></status>
</kw>
<msg timestamp="20201029 09:33:46.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033540611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033759069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:46.384" endtime="20201029 09:33:46.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033540611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033759069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:46.747" endtime="20201029 09:33:46.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.765" endtime="20201029 09:33:46.768"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.376" endtime="20201029 09:33:46.770"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.371" endtime="20201029 09:33:46.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:46.780" level="INFO">${PHILIP_RES} = [{'diff': 0.0002184580000000047}, {'diff': 0.0002201530000000007}, {'diff': 0.00022012500000000157}, {'diff': 0.00022015200000000124}, {'diff': 0.00022008300000000286}, {'diff': 0.00022008300000000286...</msg>
<status status="PASS" starttime="20201029 09:33:46.773" endtime="20201029 09:33:46.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:46.791" level="INFO">${RESULT} = {'diff': [0.0002184580000000047, 0.0002201530000000007, 0.00022012500000000157, 0.00022015200000000124, 0.00022008300000000286, 0.00022008300000000286, 0.00022013900000000114, 0.00022009700000000243, ...</msg>
<status status="PASS" starttime="20201029 09:33:46.782" endtime="20201029 09:33:46.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.801" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:46.799" endtime="20201029 09:33:46.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.806" level="INFO">VALUE: [0.0002184580000000047, 0.0002201530000000007, 0.00022012500000000157, 0.00022015200000000124, 0.00022008300000000286, 0.00022008300000000286, 0.00022013900000000114, 0.00022009700000000243, 0.00022009700000000243, 0.000220111000000002, 0.00022012500000000157, 0.00022009700000000243, 0.00022015200000000124, 0.00022009700000000243, 0.00022012500000000157, 0.000220111000000002, 0.00022009700000000243, 0.00022013900000000114, 0.0002201389999999942, 0.00022012499999999463, 0.0002200839999999954, 0.0002200969999999955, 0.00022012499999999463, 0.00022012499999999463, 0.0002201660000000008, 0.00022008300000000286, 0.00022011099999999506, 0.00022012500000000157, 0.0002200969999999955, 0.0002200969999999955, 0.00022002699999999764, 0.00022012499999999463, 0.00022012500000000157, 0.00022013900000000114, 0.00022012500000000157, 0.00022009700000000243, 0.00022005500000000372, 0.00022009700000000243, 0.00022012500000000157, 0.00022013900000000114, 0.00022009700000000243, 0.000220111000000002, 0.00022009700000000243, 0.00022008300000000286, 0.00022013900000000114, 0.00022008299999999592, 0.00022006999999999582, 0.00022006899999999635, 0.00022002699999999764, 0.0002200969999999955]</msg>
<status status="PASS" starttime="20201029 09:33:46.803" endtime="20201029 09:33:46.807"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.792" endtime="20201029 09:33:46.808"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.304" endtime="20201029 09:33:46.810"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.275" endtime="20201029 09:33:46.810"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:46.816" endtime="20201029 09:33:46.838"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.812" endtime="20201029 09:33:46.839"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.862" endtime="20201029 09:33:46.885"></status>
</kw>
<msg timestamp="20201029 09:33:46.886" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.858" endtime="20201029 09:33:46.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.892" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.888" endtime="20201029 09:33:46.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.895" endtime="20201029 09:33:46.898"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.851" endtime="20201029 09:33:46.900"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.846" endtime="20201029 09:33:46.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.918" endtime="20201029 09:33:47.273"></status>
</kw>
<msg timestamp="20201029 09:33:47.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036852403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037094389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:46.914" endtime="20201029 09:33:47.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036852403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037094389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:47.282" endtime="20201029 09:33:47.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.300" endtime="20201029 09:33:47.304"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.907" endtime="20201029 09:33:47.306"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.903" endtime="20201029 09:33:47.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:47.316" level="INFO">${PHILIP_RES} = [{'diff': 0.0002419859999999996}, {'diff': 0.00024409799999999815}, {'diff': 0.0002422499999999994}, {'diff': 0.00024213900000000232}, {'diff': 0.0002442920000000001}, {'diff': 0.00024229099999999865}...</msg>
<status status="PASS" starttime="20201029 09:33:47.308" endtime="20201029 09:33:47.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:47.325" level="INFO">${RESULT} = {'diff': [0.0002419859999999996, 0.00024409799999999815, 0.0002422499999999994, 0.00024213900000000232, 0.0002442920000000001, 0.00024229099999999865, 0.00024213900000000232, 0.0002443059999999997, 0....</msg>
<status status="PASS" starttime="20201029 09:33:47.318" endtime="20201029 09:33:47.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.335" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:47.333" endtime="20201029 09:33:47.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.342" level="INFO">VALUE: [0.0002419859999999996, 0.00024409799999999815, 0.0002422499999999994, 0.00024213900000000232, 0.0002442920000000001, 0.00024229099999999865, 0.00024213900000000232, 0.0002443059999999997, 0.00024231900000000473, 0.00024208400000000352, 0.00024431999999999926, 0.00024233399999999683, 0.00024218100000000103, 0.0002443050000000002, 0.0002423059999999977, 0.00024212499999999582, 0.0002442920000000001, 0.00024229199999999812, 0.00024212500000000275, 0.00024436199999999797, 0.00024227799999999855, 0.00024212499999999582, 0.00024423600000000184, 0.000242375000000003, 0.00024212500000000275, 0.0002442500000000014, 0.00024229199999999812, 0.00024216599999999505, 0.00024427800000000055, 0.00024227699999999908, 0.0002421530000000019, 0.000244264000000001, 0.00024226399999999898, 0.00024211200000000266, 0.0002442920000000001, 0.00024227699999999908, 0.00024209699999999668, 0.0002442920000000001, 0.00024226399999999898, 0.00024213900000000232, 0.00024423600000000184, 0.00024230500000000516, 0.00024209700000000361, 0.000244264000000001, 0.00024227799999999855, 0.00024218000000000156, 0.0002443059999999997, 0.00024233399999999683, 0.0002421530000000019, 0.000244264000000001]</msg>
<status status="PASS" starttime="20201029 09:33:47.338" endtime="20201029 09:33:47.343"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.327" endtime="20201029 09:33:47.345"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.841" endtime="20201029 09:33:47.346"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.811" endtime="20201029 09:33:47.347"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:47.352" endtime="20201029 09:33:47.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.349" endtime="20201029 09:33:47.376"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.398" endtime="20201029 09:33:47.421"></status>
</kw>
<msg timestamp="20201029 09:33:47.422" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:47.394" endtime="20201029 09:33:47.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.428" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:47.424" endtime="20201029 09:33:47.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.431" endtime="20201029 09:33:47.434"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.387" endtime="20201029 09:33:47.436"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.381" endtime="20201029 09:33:47.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.453" endtime="20201029 09:33:47.796"></status>
</kw>
<msg timestamp="20201029 09:33:47.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035831431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036099417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:47.450" endtime="20201029 09:33:47.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035831431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036099417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:47.805" endtime="20201029 09:33:47.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.824" endtime="20201029 09:33:47.828"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.443" endtime="20201029 09:33:47.830"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.438" endtime="20201029 09:33:47.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:47.841" level="INFO">${PHILIP_RES} = [{'diff': 0.0002679860000000048}, {'diff': 0.0002663750000000062}, {'diff': 0.00026626299999999575}, {'diff': 0.0002663470000000001}, {'diff': 0.00026637499999999925}, {'diff': 0.0002665410000000021},...</msg>
<status status="PASS" starttime="20201029 09:33:47.833" endtime="20201029 09:33:47.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:47.855" level="INFO">${RESULT} = {'diff': [0.0002679860000000048, 0.0002663750000000062, 0.00026626299999999575, 0.0002663470000000001, 0.00026637499999999925, 0.0002665410000000021, 0.0002682909999999969, 0.0002663470000000001, 0.00...</msg>
<status status="PASS" starttime="20201029 09:33:47.843" endtime="20201029 09:33:47.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.866" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:47.863" endtime="20201029 09:33:47.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.871" level="INFO">VALUE: [0.0002679860000000048, 0.0002663750000000062, 0.00026626299999999575, 0.0002663470000000001, 0.00026637499999999925, 0.0002665410000000021, 0.0002682909999999969, 0.0002663470000000001, 0.0002664029999999984, 0.0002663620000000061, 0.0002663470000000001, 0.000266528000000002, 0.00026836099999999474, 0.0002663889999999988, 0.0002663609999999997, 0.0002663889999999988, 0.0002664029999999984, 0.00026655500000000165, 0.00026844399999999963, 0.0002664029999999984, 0.00026637499999999925, 0.0002663479999999996, 0.00026637499999999925, 0.0002665270000000025, 0.000268334000000002, 0.00026633300000000054, 0.0002663470000000001, 0.00026632000000000045, 0.0002663199999999935, 0.00026650000000000285, 0.0002683329999999956, 0.0002663889999999988, 0.00026643099999999753, 0.0002664029999999984, 0.0002664029999999984, 0.0002665140000000024, 0.00026836099999999474, 0.00026640300000000533, 0.0002663610000000066, 0.00026631900000000097, 0.00026637499999999925, 0.0002664860000000033, 0.00026830499999999646, 0.0002663889999999988, 0.00026633300000000054, 0.0002663479999999996, 0.0002663889999999988, 0.00026648599999999634, 0.00026830499999999646, 0.00026633300000000054]</msg>
<status status="PASS" starttime="20201029 09:33:47.868" endtime="20201029 09:33:47.872"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.857" endtime="20201029 09:33:47.873"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.377" endtime="20201029 09:33:47.875"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.347" endtime="20201029 09:33:47.875"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:47.881" endtime="20201029 09:33:47.904"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.877" endtime="20201029 09:33:47.906"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.928" endtime="20201029 09:33:47.952"></status>
</kw>
<msg timestamp="20201029 09:33:47.953" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:47.924" endtime="20201029 09:33:47.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.959" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:47.955" endtime="20201029 09:33:47.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.962" endtime="20201029 09:33:47.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.916" endtime="20201029 09:33:47.967"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.911" endtime="20201029 09:33:47.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.986" endtime="20201029 09:33:48.335"></status>
</kw>
<msg timestamp="20201029 09:33:48.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036605194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036897444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:47.982" endtime="20201029 09:33:48.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036605194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036897444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:48.344" endtime="20201029 09:33:48.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.362" endtime="20201029 09:33:48.366"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.974" endtime="20201029 09:33:48.367"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.970" endtime="20201029 09:33:48.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:48.378" level="INFO">${PHILIP_RES} = [{'diff': 0.00029225000000000084}, {'diff': 0.0002926109999999982}, {'diff': 0.00029458300000000104}, {'diff': 0.00029279200000000005}, {'diff': 0.0002945000000000031}, {'diff': 0.0002927640000000009}...</msg>
<status status="PASS" starttime="20201029 09:33:48.370" endtime="20201029 09:33:48.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:48.390" level="INFO">${RESULT} = {'diff': [0.00029225000000000084, 0.0002926109999999982, 0.00029458300000000104, 0.00029279200000000005, 0.0002945000000000031, 0.0002927640000000009, 0.000294569999999994, 0.00029273600000000177, 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:48.380" endtime="20201029 09:33:48.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.400" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:48.398" endtime="20201029 09:33:48.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.405" level="INFO">VALUE: [0.00029225000000000084, 0.0002926109999999982, 0.00029458300000000104, 0.00029279200000000005, 0.0002945000000000031, 0.0002927640000000009, 0.000294569999999994, 0.00029273600000000177, 0.00029447200000000395, 0.0002927640000000009, 0.00029449999999999615, 0.0002927640000000009, 0.0002945000000000031, 0.00029272199999999526, 0.0002945139999999957, 0.0002927220000000022, 0.00029456900000000147, 0.00029272199999999526, 0.00029452800000000223, 0.00029269400000000306, 0.00029455499999999496, 0.00029273599999999483, 0.00029452700000000276, 0.0002927090000000021, 0.00029454199999999486, 0.0002927220000000022, 0.00029444499999999735, 0.0002926670000000034, 0.0002943749999999995, 0.0002926530000000038, 0.0002945139999999957, 0.00029270800000000263, 0.0002945000000000031, 0.000292665999999997, 0.0002945000000000031, 0.00029275000000000134, 0.0002945000000000031, 0.00029266699999999646, 0.00029455599999999443, 0.0002927640000000009, 0.0002945000000000031, 0.000292763999999994, 0.0002945420000000018, 0.00029267999999999655, 0.00029449999999999615, 0.0002925969999999986, 0.0002945139999999957, 0.00029269400000000306, 0.0002944859999999966, 0.00029269400000000306]</msg>
<status status="PASS" starttime="20201029 09:33:48.402" endtime="20201029 09:33:48.406"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.391" endtime="20201029 09:33:48.407"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.907" endtime="20201029 09:33:48.409"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.876" endtime="20201029 09:33:48.409"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:48.415" endtime="20201029 09:33:48.437"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.411" endtime="20201029 09:33:48.438"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.460" endtime="20201029 09:33:48.485"></status>
</kw>
<msg timestamp="20201029 09:33:48.486" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:48.456" endtime="20201029 09:33:48.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.492" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:48.488" endtime="20201029 09:33:48.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.495" endtime="20201029 09:33:48.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.449" endtime="20201029 09:33:48.500"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.444" endtime="20201029 09:33:48.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.518" endtime="20201029 09:33:48.868"></status>
</kw>
<msg timestamp="20201029 09:33:48.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034608264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034926681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:48.514" endtime="20201029 09:33:48.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034608264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034926681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:48.878" endtime="20201029 09:33:48.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.896" endtime="20201029 09:33:48.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.507" endtime="20201029 09:33:48.901"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.503" endtime="20201029 09:33:48.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:48.911" level="INFO">${PHILIP_RES} = [{'diff': 0.0003184170000000014}, {'diff': 0.00032081999999999944}, {'diff': 0.0003186530000000021}, {'diff': 0.0003207910000000008}, {'diff': 0.00031861100000000336}, {'diff': 0.0003207500000000016},...</msg>
<status status="PASS" starttime="20201029 09:33:48.904" endtime="20201029 09:33:48.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:48.920" level="INFO">${RESULT} = {'diff': [0.0003184170000000014, 0.00032081999999999944, 0.0003186530000000021, 0.0003207910000000008, 0.00031861100000000336, 0.0003207500000000016, 0.0003186390000000025, 0.00032072200000000245, 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:48.913" endtime="20201029 09:33:48.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.931" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:48.929" endtime="20201029 09:33:48.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.937" level="INFO">VALUE: [0.0003184170000000014, 0.00032081999999999944, 0.0003186530000000021, 0.0003207910000000008, 0.00031861100000000336, 0.0003207500000000016, 0.0003186390000000025, 0.00032072200000000245, 0.0003186530000000021, 0.00032077800000000073, 0.0003186530000000021, 0.00032076400000000116, 0.00031861100000000336, 0.0003207910000000008, 0.0003186390000000025, 0.0003208050000000004, 0.00031859799999999633, 0.00032081999999999944, 0.0003186810000000012, 0.0003207910000000008, 0.0003186390000000025, 0.00032076400000000116, 0.0003186390000000025, 0.00032087499999999824, 0.0003186390000000025, 0.00032081899999999997, 0.00031865299999999513, 0.0003208060000000068, 0.00031865199999999566, 0.0003207920000000003, 0.0003187229999999999, 0.00032081899999999997, 0.0003186520000000026, 0.00032076400000000116, 0.000318542000000005, 0.00032077800000000073, 0.0003185559999999976, 0.000320736000000002, 0.0003186390000000025, 0.0003207500000000016, 0.00031866700000000164, 0.0003207500000000016, 0.0003185689999999977, 0.0003207500000000016, 0.00031855600000000456, 0.00032077700000000126, 0.00031858399999999676, 0.0003207219999999955, 0.00031859699999999685, 0.0003208050000000004]</msg>
<status status="PASS" starttime="20201029 09:33:48.934" endtime="20201029 09:33:48.938"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.922" endtime="20201029 09:33:48.939"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.439" endtime="20201029 09:33:48.941"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.410" endtime="20201029 09:33:48.941"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:48.947" endtime="20201029 09:33:48.970"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.943" endtime="20201029 09:33:48.972"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.993" endtime="20201029 09:33:49.021"></status>
</kw>
<msg timestamp="20201029 09:33:49.022" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:48.990" endtime="20201029 09:33:49.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.028" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:49.024" endtime="20201029 09:33:49.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.030" endtime="20201029 09:33:49.034"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.982" endtime="20201029 09:33:49.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.977" endtime="20201029 09:33:49.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.053" endtime="20201029 09:33:49.401"></status>
</kw>
<msg timestamp="20201029 09:33:49.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035424958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035770736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:49.050" endtime="20201029 09:33:49.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035424958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035770736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:49.410" endtime="20201029 09:33:49.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.428" endtime="20201029 09:33:49.432"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.043" endtime="20201029 09:33:49.434"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.038" endtime="20201029 09:33:49.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:49.445" level="INFO">${PHILIP_RES} = [{'diff': 0.000345777999999998}, {'diff': 0.000345889000000002}, {'diff': 0.0003458059999999971}, {'diff': 0.00034579099999999807}, {'diff': 0.00034899999999999515}, {'diff': 0.0003458479999999958}, {...</msg>
<status status="PASS" starttime="20201029 09:33:49.437" endtime="20201029 09:33:49.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:49.455" level="INFO">${RESULT} = {'diff': [0.000345777999999998, 0.000345889000000002, 0.0003458059999999971, 0.00034579099999999807, 0.00034899999999999515, 0.0003458479999999958, 0.00034587500000000243, 0.00034587500000000243, 0.00...</msg>
<status status="PASS" starttime="20201029 09:33:49.447" endtime="20201029 09:33:49.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.465" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:49.463" endtime="20201029 09:33:49.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.471" level="INFO">VALUE: [0.000345777999999998, 0.000345889000000002, 0.0003458059999999971, 0.00034579099999999807, 0.00034899999999999515, 0.0003458479999999958, 0.00034587500000000243, 0.00034587500000000243, 0.0003458470000000033, 0.0003458609999999959, 0.000348971999999996, 0.0003458879999999956, 0.00034591700000000114, 0.00034587500000000243, 0.0003458200000000036, 0.00034584800000000276, 0.0003490000000000021, 0.0003458470000000033, 0.00034587500000000243, 0.0003459450000000003, 0.00034588899999999506, 0.00034590300000000157, 0.00034908300000000003, 0.0003458609999999959, 0.0003458609999999959, 0.0003458749999999955, 0.000345889000000002, 0.00034593000000000124, 0.0003490420000000008, 0.00034591700000000114, 0.0003459440000000008, 0.0003458479999999958, 0.0003458749999999955, 0.0003458749999999955, 0.00034895799999999644, 0.0003459020000000021, 0.00034586100000000286, 0.00034586200000000233, 0.00034584800000000276, 0.00034591700000000114, 0.00034897200000000295, 0.00034574999999999884, 0.00034587500000000243, 0.0003458609999999959, 0.0003458609999999959, 0.00034587500000000243, 0.0003490000000000021, 0.0003458050000000046, 0.0003458050000000046, 0.00034580600000000405]</msg>
<status status="PASS" starttime="20201029 09:33:49.468" endtime="20201029 09:33:49.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.456" endtime="20201029 09:33:49.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.973" endtime="20201029 09:33:49.475"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.942" endtime="20201029 09:33:49.475"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:49.481" endtime="20201029 09:33:49.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.478" endtime="20201029 09:33:49.505"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.528" endtime="20201029 09:33:49.557"></status>
</kw>
<msg timestamp="20201029 09:33:49.559" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:49.525" endtime="20201029 09:33:49.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.565" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:49.561" endtime="20201029 09:33:49.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.567" endtime="20201029 09:33:49.571"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.517" endtime="20201029 09:33:49.573"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.512" endtime="20201029 09:33:49.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.591" endtime="20201029 09:33:49.939"></status>
</kw>
<msg timestamp="20201029 09:33:49.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036635583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037011986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:49.588" endtime="20201029 09:33:49.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036635583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037011986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:49.948" endtime="20201029 09:33:49.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.966" endtime="20201029 09:33:49.970"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.580" endtime="20201029 09:33:49.972"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.576" endtime="20201029 09:33:49.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:49.984" level="INFO">${PHILIP_RES} = [{'diff': 0.0003764029999999974}, {'diff': 0.00037311100000000236}, {'diff': 0.00037308399999999575}, {'diff': 0.00037600000000000133}, {'diff': 0.00037309699999999585}, {'diff': 0.0003730970000000028...</msg>
<status status="PASS" starttime="20201029 09:33:49.975" endtime="20201029 09:33:49.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:49.994" level="INFO">${RESULT} = {'diff': [0.0003764029999999974, 0.00037311100000000236, 0.00037308399999999575, 0.00037600000000000133, 0.00037309699999999585, 0.0003730970000000028, 0.0003759170000000034, 0.00037304099999999757, 0...</msg>
<status status="PASS" starttime="20201029 09:33:49.986" endtime="20201029 09:33:49.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.004" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:50.002" endtime="20201029 09:33:50.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.011" level="INFO">VALUE: [0.0003764029999999974, 0.00037311100000000236, 0.00037308399999999575, 0.00037600000000000133, 0.00037309699999999585, 0.0003730970000000028, 0.0003759170000000034, 0.00037304099999999757, 0.0003730559999999966, 0.0003758889999999973, 0.0003730830000000032, 0.00037301299999999843, 0.0003759170000000034, 0.00037302799999999747, 0.00037302799999999747, 0.00037586099999999817, 0.000373026999999998, 0.0003730559999999966, 0.00037587499999999774, 0.00037306900000000365, 0.0003730830000000032, 0.0003759029999999969, 0.00037304199999999704, 0.0003730139999999979, 0.00037598600000000176, 0.0003731390000000015, 0.00037305499999999714, 0.000375930999999996, 0.0003730700000000031, 0.00037309800000000226, 0.000375930999999996, 0.00037308399999999575, 0.0003730280000000044, 0.0003759300000000035, 0.0003730970000000028, 0.0003730139999999979, 0.0003759029999999969, 0.00037302799999999747, 0.0003730689999999967, 0.00037587499999999774, 0.00037312500000000193, 0.0003730550000000041, 0.000375915999999997, 0.00037299999999999833, 0.0003731390000000015, 0.0003758750000000047, 0.0003730550000000041, 0.0003730829999999963, 0.00037588799999999783, 0.00037306900000000365]</msg>
<status status="PASS" starttime="20201029 09:33:50.006" endtime="20201029 09:33:50.012"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.995" endtime="20201029 09:33:50.014"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.507" endtime="20201029 09:33:50.016"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.476" endtime="20201029 09:33:50.016"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:50.022" endtime="20201029 09:33:50.043"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.018" endtime="20201029 09:33:50.045"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:50.065" endtime="20201029 09:33:50.095"></status>
</kw>
<msg timestamp="20201029 09:33:50.096" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:50.062" endtime="20201029 09:33:50.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.102" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:50.098" endtime="20201029 09:33:50.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:50.105" endtime="20201029 09:33:50.108"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.055" endtime="20201029 09:33:50.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.050" endtime="20201029 09:33:50.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:50.128" endtime="20201029 09:33:50.483"></status>
</kw>
<msg timestamp="20201029 09:33:50.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033743167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034148139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:50.124" endtime="20201029 09:33:50.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033743167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034148139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:50.492" endtime="20201029 09:33:50.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:50.511" endtime="20201029 09:33:50.515"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.117" endtime="20201029 09:33:50.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.113" endtime="20201029 09:33:50.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:50.527" level="INFO">${PHILIP_RES} = [{'diff': 0.00040497200000000344}, {'diff': 0.0004052359999999963}, {'diff': 0.0004052220000000037}, {'diff': 0.0004051519999999989}, {'diff': 0.00040516699999999795}, {'diff': 0.000405195000000004}, ...</msg>
<status status="PASS" starttime="20201029 09:33:50.520" endtime="20201029 09:33:50.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:50.538" level="INFO">${RESULT} = {'diff': [0.00040497200000000344, 0.0004052359999999963, 0.0004052220000000037, 0.0004051519999999989, 0.00040516699999999795, 0.000405195000000004, 0.00040520899999999666, 0.0004051529999999984, 0.00...</msg>
<status status="PASS" starttime="20201029 09:33:50.530" endtime="20201029 09:33:50.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.549" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:50.547" endtime="20201029 09:33:50.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.555" level="INFO">VALUE: [0.00040497200000000344, 0.0004052359999999963, 0.0004052220000000037, 0.0004051519999999989, 0.00040516699999999795, 0.000405195000000004, 0.00040520899999999666, 0.0004051529999999984, 0.00040519400000000455, 0.00040527699999999556, 0.0004052080000000041, 0.0004052079999999972, 0.00040509799999999957, 0.000405195000000004, 0.0004051809999999975, 0.00040525000000000283, 0.0004050970000000001, 0.0004052079999999972, 0.00040523700000000273, 0.00040512499999999924, 0.0004051949999999971, 0.0004052630000000029, 0.0004052499999999959, 0.00040525000000000283, 0.00040523600000000326, 0.00040519400000000455, 0.00040526399999999546, 0.000405195000000004, 0.0004052229999999962, 0.0004052640000000024, 0.00040522199999999675, 0.000405195000000004, 0.0004052369999999958, 0.00040523600000000326, 0.0004051809999999975, 0.0004051809999999975, 0.00040512499999999924, 0.00040513900000000574, 0.00040511099999999967, 0.0004051939999999976, 0.0004052090000000036, 0.00040527799999999503, 0.00040527800000000197, 0.00040516699999999795, 0.00040515200000000584, 0.0004052359999999963, 0.00040522199999999675, 0.00040522199999999675, 0.0004052079999999972, 0.0004051660000000054]</msg>
<status status="PASS" starttime="20201029 09:33:50.551" endtime="20201029 09:33:50.556"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.540" endtime="20201029 09:33:50.558"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.046" endtime="20201029 09:33:50.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.017" endtime="20201029 09:33:50.560"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:50.565" endtime="20201029 09:33:50.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.562" endtime="20201029 09:33:50.589"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:50.610" endtime="20201029 09:33:50.642"></status>
</kw>
<msg timestamp="20201029 09:33:50.643" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:50.607" endtime="20201029 09:33:50.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.650" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:50.646" endtime="20201029 09:33:50.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:50.652" endtime="20201029 09:33:50.656"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.599" endtime="20201029 09:33:50.658"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.594" endtime="20201029 09:33:50.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:50.676" endtime="20201029 09:33:51.029"></status>
</kw>
<msg timestamp="20201029 09:33:51.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034963097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035394667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:50.673" endtime="20201029 09:33:51.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:51.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034963097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035394667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:51.038" endtime="20201029 09:33:51.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:51.057" endtime="20201029 09:33:51.061"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.665" endtime="20201029 09:33:51.063"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.661" endtime="20201029 09:33:51.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:51.074" level="INFO">${PHILIP_RES} = [{'diff': 0.0004315699999999992}, {'diff': 0.00043131899999999945}, {'diff': 0.0004314590000000021}, {'diff': 0.00043447199999999825}, {'diff': 0.00043442999999999954}, {'diff': 0.00043442999999999954...</msg>
<status status="PASS" starttime="20201029 09:33:51.066" endtime="20201029 09:33:51.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:51.085" level="INFO">${RESULT} = {'diff': [0.0004315699999999992, 0.00043131899999999945, 0.0004314590000000021, 0.00043447199999999825, 0.00043442999999999954, 0.00043442999999999954, 0.00043441599999999997, 0.00043433399999999456, ...</msg>
<status status="PASS" starttime="20201029 09:33:51.076" endtime="20201029 09:33:51.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:51.096" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:51.093" endtime="20201029 09:33:51.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:51.101" level="INFO">VALUE: [0.0004315699999999992, 0.00043131899999999945, 0.0004314590000000021, 0.00043447199999999825, 0.00043442999999999954, 0.00043442999999999954, 0.00043441599999999997, 0.00043433399999999456, 0.00043447199999999825, 0.00043440299999999987, 0.00043429199999999585, 0.00043440299999999987, 0.00043438899999999336, 0.0004343890000000003, 0.000434430999999999, 0.00043447199999999825, 0.0004344579999999987, 0.00043452799999999653, 0.00043441599999999997, 0.0004344579999999987, 0.0004344729999999977, 0.00043441699999999944, 0.00043443100000000595, 0.0004344449999999986, 0.00043447199999999825, 0.0004343890000000003, 0.00043447199999999825, 0.0004344439999999991, 0.00043450000000000433, 0.00043447199999999825, 0.00043448600000000476, 0.0004344859999999978, 0.0004344580000000056, 0.00043440299999999987, 0.0004343890000000003, 0.00043437500000000073, 0.0004344449999999986, 0.00043442999999999954, 0.0004344579999999987, 0.0004344449999999986, 0.0004344300000000065, 0.00043447199999999825, 0.000434430999999999, 0.0004343470000000016, 0.00043440299999999987, 0.0004344439999999991, 0.00043440299999999987, 0.00043441599999999997, 0.00043440299999999987, 0.00043436100000000116]</msg>
<status status="PASS" starttime="20201029 09:33:51.098" endtime="20201029 09:33:51.103"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.087" endtime="20201029 09:33:51.104"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.590" endtime="20201029 09:33:51.106"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.560" endtime="20201029 09:33:51.106"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:51.112" endtime="20201029 09:33:51.134"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.108" endtime="20201029 09:33:51.136"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:51.157" endtime="20201029 09:33:51.191"></status>
</kw>
<msg timestamp="20201029 09:33:51.192" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:51.154" endtime="20201029 09:33:51.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:51.198" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:51.194" endtime="20201029 09:33:51.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:51.201" endtime="20201029 09:33:51.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.146" endtime="20201029 09:33:51.206"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.141" endtime="20201029 09:33:51.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:51.225" endtime="20201029 09:33:51.587"></status>
</kw>
<msg timestamp="20201029 09:33:51.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035032597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035495444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:51.221" endtime="20201029 09:33:51.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:51.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035032597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035495444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:51.597" endtime="20201029 09:33:51.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:51.615" endtime="20201029 09:33:51.619"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.214" endtime="20201029 09:33:51.620"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.209" endtime="20201029 09:33:51.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:51.631" level="INFO">${PHILIP_RES} = [{'diff': 0.00046284700000000234}, {'diff': 0.0004624299999999998}, {'diff': 0.0004655699999999985}, {'diff': 0.0004625829999999956}, {'diff': 0.00046244399999999936}, {'diff': 0.000465568999999999}, ...</msg>
<status status="PASS" starttime="20201029 09:33:51.623" endtime="20201029 09:33:51.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:51.640" level="INFO">${RESULT} = {'diff': [0.00046284700000000234, 0.0004624299999999998, 0.0004655699999999985, 0.0004625829999999956, 0.00046244399999999936, 0.000465568999999999, 0.00046266699999999994, 0.0004624160000000002, 0.00...</msg>
<status status="PASS" starttime="20201029 09:33:51.633" endtime="20201029 09:33:51.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:51.650" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:51.648" endtime="20201029 09:33:51.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:51.655" level="INFO">VALUE: [0.00046284700000000234, 0.0004624299999999998, 0.0004655699999999985, 0.0004625829999999956, 0.00046244399999999936, 0.000465568999999999, 0.00046266699999999994, 0.0004624160000000002, 0.0004655279999999998, 0.0004625139999999972, 0.000462375000000001, 0.00046562500000000423, 0.00046249999999999764, 0.0004624169999999997, 0.0004656109999999977, 0.0004625829999999956, 0.000462375000000001, 0.000465568999999999, 0.0004625559999999959, 0.0004624589999999984, 0.00046555499999999944, 0.00046255499999999644, 0.0004624579999999989, 0.0004655140000000002, 0.00046254199999999634, 0.00046230599999999566, 0.0004655279999999998, 0.0004624160000000002, 0.000462375000000001, 0.00046548600000000107, 0.0004625420000000033, 0.0004623190000000027, 0.00046548600000000107, 0.00046259699999999515, 0.0004624169999999997, 0.0004655699999999985, 0.00046254199999999634, 0.0004623200000000022, 0.00046558399999999805, 0.0004625699999999955, 0.0004624030000000001, 0.000465568999999999, 0.000462584000000002, 0.00046247299999999797, 0.00046554199999999935, 0.0004625970000000021, 0.00046248699999999754, 0.0004655699999999985, 0.00046261100000000166, 0.0004623610000000014]</msg>
<status status="PASS" starttime="20201029 09:33:51.652" endtime="20201029 09:33:51.663"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.641" endtime="20201029 09:33:51.665"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.137" endtime="20201029 09:33:51.667"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.107" endtime="20201029 09:33:51.667"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:51.673" endtime="20201029 09:33:51.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.669" endtime="20201029 09:33:51.696"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:51.717" endtime="20201029 09:33:51.752"></status>
</kw>
<msg timestamp="20201029 09:33:51.754" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:51.713" endtime="20201029 09:33:51.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:51.760" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:51.756" endtime="20201029 09:33:51.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:51.762" endtime="20201029 09:33:51.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.706" endtime="20201029 09:33:51.767"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.701" endtime="20201029 09:33:51.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:51.785" endtime="20201029 09:33:52.120"></status>
</kw>
<msg timestamp="20201029 09:33:52.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035359889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035856417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:51.782" endtime="20201029 09:33:52.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:52.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035359889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035856417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:52.129" endtime="20201029 09:33:52.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:52.147" endtime="20201029 09:33:52.151"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.775" endtime="20201029 09:33:52.153"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.770" endtime="20201029 09:33:52.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:52.163" level="INFO">${PHILIP_RES} = [{'diff': 0.000496528000000003}, {'diff': 0.0004936250000000045}, {'diff': 0.000493528}, {'diff': 0.0004935419999999996}, {'diff': 0.0004936249999999975}, {'diff': 0.0004938189999999995}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:52.156" endtime="20201029 09:33:52.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:52.172" level="INFO">${RESULT} = {'diff': [0.000496528000000003, 0.0004936250000000045, 0.000493528, 0.0004935419999999996, 0.0004936249999999975, 0.0004938189999999995, 0.0004975829999999959, 0.0004936389999999971, 0.000493653000000...</msg>
<status status="PASS" starttime="20201029 09:33:52.165" endtime="20201029 09:33:52.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:52.182" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:52.180" endtime="20201029 09:33:52.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:52.188" level="INFO">VALUE: [0.000496528000000003, 0.0004936250000000045, 0.000493528, 0.0004935419999999996, 0.0004936249999999975, 0.0004938189999999995, 0.0004975829999999959, 0.0004936389999999971, 0.0004936530000000036, 0.0004935970000000053, 0.0004935969999999984, 0.0004937630000000012, 0.0004975830000000028, 0.0004936110000000049, 0.0004936530000000036, 0.0004935690000000062, 0.0004935549999999997, 0.0004938610000000052, 0.000497611000000002, 0.0004936389999999971, 0.0004935689999999993, 0.0004937360000000016, 0.000493610999999998, 0.0004938469999999986, 0.000497610999999995, 0.0004936670000000032, 0.0004937640000000007, 0.0004935969999999984, 0.0004935559999999992, 0.0004938469999999986, 0.0004976670000000002, 0.0004936250000000045, 0.0004936670000000032, 0.0004936809999999958, 0.0004937230000000015, 0.0004939579999999957, 0.0004976939999999999, 0.0004937640000000007, 0.0004936810000000028, 0.000493721999999995, 0.0004937360000000016, 0.0004938750000000047, 0.000497721999999999, 0.0004937640000000007, 0.0004937360000000016, 0.0004936670000000032, 0.0004936520000000041, 0.0004938190000000064, 0.000497611000000002, 0.0004936659999999968]</msg>
<status status="PASS" starttime="20201029 09:33:52.185" endtime="20201029 09:33:52.189"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.174" endtime="20201029 09:33:52.191"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.697" endtime="20201029 09:33:52.192"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.668" endtime="20201029 09:33:52.193"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:52.198" endtime="20201029 09:33:52.220"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.195" endtime="20201029 09:33:52.222"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:52.244" endtime="20201029 09:33:52.280"></status>
</kw>
<msg timestamp="20201029 09:33:52.281" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:52.241" endtime="20201029 09:33:52.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:52.287" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:52.283" endtime="20201029 09:33:52.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:52.290" endtime="20201029 09:33:52.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.234" endtime="20201029 09:33:52.295"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.228" endtime="20201029 09:33:52.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:52.312" endtime="20201029 09:33:52.646"></status>
</kw>
<msg timestamp="20201029 09:33:52.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035316153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035845667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:52.309" endtime="20201029 09:33:52.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:52.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035316153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035845667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:52.655" endtime="20201029 09:33:52.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:52.673" endtime="20201029 09:33:52.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.302" endtime="20201029 09:33:52.678"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.297" endtime="20201029 09:33:52.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:52.688" level="INFO">${PHILIP_RES} = [{'diff': 0.0005295139999999948}, {'diff': 0.0005268610000000035}, {'diff': 0.0005297079999999968}, {'diff': 0.0005268890000000026}, {'diff': 0.0005296809999999971}, {'diff': 0.0005269999999999997}, {...</msg>
<status status="PASS" starttime="20201029 09:33:52.681" endtime="20201029 09:33:52.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:52.697" level="INFO">${RESULT} = {'diff': [0.0005295139999999948, 0.0005268610000000035, 0.0005297079999999968, 0.0005268890000000026, 0.0005296809999999971, 0.0005269999999999997, 0.0005297499999999955, 0.0005269310000000013, 0.0005...</msg>
<status status="PASS" starttime="20201029 09:33:52.690" endtime="20201029 09:33:52.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:52.708" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:52.705" endtime="20201029 09:33:52.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:52.714" level="INFO">VALUE: [0.0005295139999999948, 0.0005268610000000035, 0.0005297079999999968, 0.0005268890000000026, 0.0005296809999999971, 0.0005269999999999997, 0.0005297499999999955, 0.0005269310000000013, 0.0005297220000000033, 0.0005269589999999935, 0.0005297500000000024, 0.0005268880000000031, 0.0005297919999999942, 0.0005268890000000026, 0.0005297080000000037, 0.000526875000000003, 0.000529764000000002, 0.0005269999999999997, 0.0005297780000000016, 0.0005269860000000001, 0.0005297919999999942, 0.0005270420000000053, 0.0005297499999999955, 0.0005269999999999997, 0.0005297219999999964, 0.000526875000000003, 0.0005297359999999959, 0.000526875000000003, 0.0005296939999999972, 0.0005269300000000018, 0.0005297219999999964, 0.0005270279999999988, 0.0005297079999999968, 0.0005269440000000014, 0.0005298049999999943, 0.0005269170000000017, 0.0005296809999999971, 0.0005269310000000013, 0.0005296389999999984, 0.0005268610000000035, 0.0005296249999999988, 0.0005268610000000035, 0.0005297079999999968, 0.0005268470000000039, 0.0005296249999999988, 0.0005268749999999961, 0.0005296389999999984, 0.0005267499999999994, 0.000529555000000001, 0.0005268610000000035]</msg>
<status status="PASS" starttime="20201029 09:33:52.710" endtime="20201029 09:33:52.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.699" endtime="20201029 09:33:52.717"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.223" endtime="20201029 09:33:52.719"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.194" endtime="20201029 09:33:52.719"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:52.725" endtime="20201029 09:33:52.746"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.721" endtime="20201029 09:33:52.748"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:52.769" endtime="20201029 09:33:52.807"></status>
</kw>
<msg timestamp="20201029 09:33:52.808" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:52.765" endtime="20201029 09:33:52.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:52.814" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:52.810" endtime="20201029 09:33:52.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:52.816" endtime="20201029 09:33:52.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.758" endtime="20201029 09:33:52.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.753" endtime="20201029 09:33:52.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:52.839" endtime="20201029 09:33:53.172"></status>
</kw>
<msg timestamp="20201029 09:33:53.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033723431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034283806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:52.836" endtime="20201029 09:33:53.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:53.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033723431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034283806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:53.181" endtime="20201029 09:33:53.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:53.199" endtime="20201029 09:33:53.203"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.829" endtime="20201029 09:33:53.204"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.824" endtime="20201029 09:33:53.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:53.215" level="INFO">${PHILIP_RES} = [{'diff': 0.0005603750000000018}, {'diff': 0.0005630140000000006}, {'diff': 0.0005609030000000015}, {'diff': 0.000564000000000002}, {'diff': 0.000560917000000001}, {'diff': 0.0005640969999999995}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:53.207" endtime="20201029 09:33:53.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:53.229" level="INFO">${RESULT} = {'diff': [0.0005603750000000018, 0.0005630140000000006, 0.0005609030000000015, 0.000564000000000002, 0.000560917000000001, 0.0005640969999999995, 0.0005609169999999941, 0.0005640690000000004, 0.000560...</msg>
<status status="PASS" starttime="20201029 09:33:53.217" endtime="20201029 09:33:53.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:53.239" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:53.237" endtime="20201029 09:33:53.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:53.245" level="INFO">VALUE: [0.0005603750000000018, 0.0005630140000000006, 0.0005609030000000015, 0.000564000000000002, 0.000560917000000001, 0.0005640969999999995, 0.0005609169999999941, 0.0005640690000000004, 0.000560917000000001, 0.0005639860000000024, 0.0005608749999999954, 0.0005640419999999938, 0.0005609450000000002, 0.0005640269999999947, 0.0005609300000000011, 0.0005639999999999951, 0.0005609029999999945, 0.0005641249999999987, 0.0005609310000000006, 0.0005640420000000007, 0.000560902000000002, 0.0005639719999999959, 0.0005608749999999954, 0.0005639310000000036, 0.0005608610000000028, 0.0005639719999999959, 0.0005608879999999955, 0.000564000000000002, 0.0005609580000000003, 0.0005640560000000003, 0.0005609580000000003, 0.0005640560000000003, 0.0005607779999999979, 0.0005640969999999995, 0.0005609030000000015, 0.000564000000000002, 0.0005608480000000027, 0.0005639449999999963, 0.000560806000000004, 0.000564000000000002, 0.000560888999999995, 0.0005640140000000016, 0.0005609310000000006, 0.0005640420000000007, 0.0005609030000000015, 0.0005639860000000024, 0.0005608750000000023, 0.0005639999999999951, 0.000560917000000008, 0.0005640280000000081]</msg>
<status status="PASS" starttime="20201029 09:33:53.242" endtime="20201029 09:33:53.246"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:53.231" endtime="20201029 09:33:53.248"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.749" endtime="20201029 09:33:53.249"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.720" endtime="20201029 09:33:53.249"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:53.255" endtime="20201029 09:33:53.277"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:53.252" endtime="20201029 09:33:53.278"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:53.299" endtime="20201029 09:33:53.338"></status>
</kw>
<msg timestamp="20201029 09:33:53.340" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:53.295" endtime="20201029 09:33:53.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:53.346" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:53.342" endtime="20201029 09:33:53.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:53.348" endtime="20201029 09:33:53.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:53.288" endtime="20201029 09:33:53.353"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:53.283" endtime="20201029 09:33:53.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:53.371" endtime="20201029 09:33:53.704"></status>
</kw>
<msg timestamp="20201029 09:33:53.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033574333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034168181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:53.367" endtime="20201029 09:33:53.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:53.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033574333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034168181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:53.714" endtime="20201029 09:33:53.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:53.731" endtime="20201029 09:33:53.735"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:53.360" endtime="20201029 09:33:53.737"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:53.356" endtime="20201029 09:33:53.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:53.747" level="INFO">${PHILIP_RES} = [{'diff': 0.000593848000000001}, {'diff': 0.000594235999999998}, {'diff': 0.0005942360000000049}, {'diff': 0.0005942499999999976}, {'diff': 0.0005983189999999999}, {'diff': 0.0005941669999999996}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:53.740" endtime="20201029 09:33:53.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:53.758" level="INFO">${RESULT} = {'diff': [0.000593848000000001, 0.000594235999999998, 0.0005942360000000049, 0.0005942499999999976, 0.0005983189999999999, 0.0005941669999999996, 0.0005941109999999944, 0.0005941250000000009, 0.000594...</msg>
<status status="PASS" starttime="20201029 09:33:53.749" endtime="20201029 09:33:53.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:53.768" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:53.766" endtime="20201029 09:33:53.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:53.773" level="INFO">VALUE: [0.000593848000000001, 0.000594235999999998, 0.0005942360000000049, 0.0005942499999999976, 0.0005983189999999999, 0.0005941669999999996, 0.0005941109999999944, 0.0005941250000000009, 0.0005941939999999993, 0.000594235999999998, 0.0005982780000000007, 0.0005941110000000013, 0.0005941250000000009, 0.0005941809999999992, 0.0005941390000000005, 0.0005941390000000005, 0.0005983609999999986, 0.0005942219999999984, 0.0005941389999999935, 0.0005941669999999996, 0.0005941250000000009, 0.0005940970000000018, 0.0005983329999999995, 0.0005941799999999997, 0.0005941939999999993, 0.0005941800000000066, 0.0005941660000000001, 0.0005942079999999988, 0.0005982780000000007, 0.0005942079999999988, 0.0005941799999999997, 0.0005941660000000001, 0.000594153, 0.0005941669999999996, 0.0005983050000000004, 0.0005942780000000036, 0.0005941520000000006, 0.000594153, 0.0005941669999999996, 0.000594153, 0.000598333999999999, 0.0005941809999999992, 0.000594041999999996, 0.0005940699999999952, 0.0005941949999999988, 0.0005941109999999944, 0.0005982920000000003, 0.000594235999999998, 0.0005942079999999988, 0.0005942500000000045]</msg>
<status status="PASS" starttime="20201029 09:33:53.770" endtime="20201029 09:33:53.775"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:53.760" endtime="20201029 09:33:53.776"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:53.279" endtime="20201029 09:33:53.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:53.250" endtime="20201029 09:33:53.778"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:53.784" endtime="20201029 09:33:53.805"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:53.780" endtime="20201029 09:33:53.807"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:53.828" endtime="20201029 09:33:53.869"></status>
</kw>
<msg timestamp="20201029 09:33:53.871" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:53.824" endtime="20201029 09:33:53.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:53.877" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:53.873" endtime="20201029 09:33:53.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:53.879" endtime="20201029 09:33:53.883"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:53.817" endtime="20201029 09:33:53.884"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:53.812" endtime="20201029 09:33:53.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:53.902" endtime="20201029 09:33:54.260"></status>
</kw>
<msg timestamp="20201029 09:33:54.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033552486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034181139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:53.899" endtime="20201029 09:33:54.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:54.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033552486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034181139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:54.269" endtime="20201029 09:33:54.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:54.288" endtime="20201029 09:33:54.292"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:53.892" endtime="20201029 09:33:54.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:53.887" endtime="20201029 09:33:54.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:54.304" level="INFO">${PHILIP_RES} = [{'diff': 0.0006286529999999999}, {'diff': 0.0006331389999999978}, {'diff': 0.000629360999999995}, {'diff': 0.0006293750000000015}, {'diff': 0.0006331660000000044}, {'diff': 0.0006293199999999957}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:54.297" endtime="20201029 09:33:54.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:54.314" level="INFO">${RESULT} = {'diff': [0.0006286529999999999, 0.0006331389999999978, 0.000629360999999995, 0.0006293750000000015, 0.0006331660000000044, 0.0006293199999999957, 0.0006294449999999993, 0.0006333060000000001, 0.00062...</msg>
<status status="PASS" starttime="20201029 09:33:54.306" endtime="20201029 09:33:54.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:54.324" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:54.322" endtime="20201029 09:33:54.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:54.330" level="INFO">VALUE: [0.0006286529999999999, 0.0006331389999999978, 0.000629360999999995, 0.0006293750000000015, 0.0006331660000000044, 0.0006293199999999957, 0.0006294449999999993, 0.0006333060000000001, 0.000629471999999999, 0.0006294449999999993, 0.000633278000000001, 0.0006294729999999985, 0.0006293610000000019, 0.0006330699999999995, 0.0006292229999999982, 0.0006292359999999983, 0.0006331530000000044, 0.0006293880000000016, 0.0006293199999999957, 0.0006330559999999999, 0.0006292359999999983, 0.0006293049999999967, 0.0006332079999999962, 0.0006293470000000023, 0.0006293750000000015, 0.0006331529999999974, 0.0006293469999999954, 0.0006294439999999998, 0.0006331109999999987, 0.0006292640000000044, 0.0006292630000000049, 0.0006331810000000035, 0.0006292780000000039, 0.0006293330000000028, 0.000633069, 0.0006293190000000032, 0.0006292640000000044, 0.0006331670000000039, 0.0006292920000000035, 0.0006293060000000031, 0.0006331250000000052, 0.0006292639999999974, 0.0006292920000000035, 0.0006331249999999983, 0.0006293750000000015, 0.0006293189999999893, 0.0006331249999999983, 0.0006294169999999932, 0.0006293470000000023, 0.0006331390000000048]</msg>
<status status="PASS" starttime="20201029 09:33:54.327" endtime="20201029 09:33:54.331"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:54.316" endtime="20201029 09:33:54.333"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:53.808" endtime="20201029 09:33:54.334"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:53.779" endtime="20201029 09:33:54.335"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:54.340" endtime="20201029 09:33:54.363"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:54.337" endtime="20201029 09:33:54.364"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:54.385" endtime="20201029 09:33:54.431"></status>
</kw>
<msg timestamp="20201029 09:33:54.433" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:54.382" endtime="20201029 09:33:54.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:54.439" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:54.435" endtime="20201029 09:33:54.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:54.441" endtime="20201029 09:33:54.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:54.375" endtime="20201029 09:33:54.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:54.369" endtime="20201029 09:33:54.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:54.465" endtime="20201029 09:33:54.814"></status>
</kw>
<msg timestamp="20201029 09:33:54.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036431764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037096319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:54.462" endtime="20201029 09:33:54.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:54.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036431764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037096319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:54.824" endtime="20201029 09:33:54.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:54.842" endtime="20201029 09:33:54.846"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:54.454" endtime="20201029 09:33:54.848"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:54.449" endtime="20201029 09:33:54.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:54.858" level="INFO">${PHILIP_RES} = [{'diff': 0.0006645550000000042}, {'diff': 0.0006644579999999997}, {'diff': 0.0006645000000000054}, {'diff': 0.0006646940000000004}, {'diff': 0.0006645980000000024}, {'diff': 0.0006685690000000008}, {...</msg>
<status status="PASS" starttime="20201029 09:33:54.851" endtime="20201029 09:33:54.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:54.869" level="INFO">${RESULT} = {'diff': [0.0006645550000000042, 0.0006644579999999997, 0.0006645000000000054, 0.0006646940000000004, 0.0006645980000000024, 0.0006685690000000008, 0.0006684999999999955, 0.0006685829999999934, 0.0006...</msg>
<status status="PASS" starttime="20201029 09:33:54.861" endtime="20201029 09:33:54.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:54.879" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:54.877" endtime="20201029 09:33:54.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:54.885" level="INFO">VALUE: [0.0006645550000000042, 0.0006644579999999997, 0.0006645000000000054, 0.0006646940000000004, 0.0006645980000000024, 0.0006685690000000008, 0.0006684999999999955, 0.0006685829999999934, 0.0006686109999999995, 0.0006686670000000047, 0.0006686110000000065, 0.0006685420000000011, 0.0006685830000000004, 0.0006684720000000033, 0.0006685689999999939, 0.0006684449999999967, 0.0006685420000000011, 0.0006684449999999967, 0.0006685000000000024, 0.0006684590000000032, 0.0006685420000000011, 0.0006685000000000024, 0.0006684309999999971, 0.0006685280000000016, 0.0006685279999999946, 0.0006684860000000029, 0.0006686249999999991, 0.0006685550000000012, 0.0006684580000000037, 0.0006684859999999959, 0.0006684030000000049, 0.0006685830000000004, 0.0006686530000000052, 0.0006685830000000004, 0.000668514000000002, 0.0006685839999999998, 0.0006685419999999942, 0.0006685979999999925, 0.0006684720000000033, 0.0006685280000000016, 0.0006685550000000012, 0.0006684170000000045, 0.0006685280000000016, 0.0006685700000000072, 0.0006684869999999954, 0.0006685000000000024, 0.0006685409999999947, 0.0006685140000000089, 0.0006685560000000007, 0.0006685419999999942]</msg>
<status status="PASS" starttime="20201029 09:33:54.882" endtime="20201029 09:33:54.886"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:54.870" endtime="20201029 09:33:54.888"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:54.365" endtime="20201029 09:33:54.890"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:54.335" endtime="20201029 09:33:54.890"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:54.896" endtime="20201029 09:33:54.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:54.892" endtime="20201029 09:33:54.919"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:54.946" endtime="20201029 09:33:54.993"></status>
</kw>
<msg timestamp="20201029 09:33:54.994" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:54.943" endtime="20201029 09:33:54.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:55.001" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:54.997" endtime="20201029 09:33:55.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:55.004" endtime="20201029 09:33:55.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:54.934" endtime="20201029 09:33:55.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:54.927" endtime="20201029 09:33:55.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:55.028" endtime="20201029 09:33:55.380"></status>
</kw>
<msg timestamp="20201029 09:33:55.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040329792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041031181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:55.024" endtime="20201029 09:33:55.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:55.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040329792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041031181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:55.389" endtime="20201029 09:33:55.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:55.407" endtime="20201029 09:33:55.411"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:55.017" endtime="20201029 09:33:55.413"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:55.012" endtime="20201029 09:33:55.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:55.424" level="INFO">${PHILIP_RES} = [{'diff': 0.0007013889999999967}, {'diff': 0.0007015000000000007}, {'diff': 0.0007017230000000013}, {'diff': 0.000705639000000001}, {'diff': 0.0007056250000000014}, {'diff': 0.0007056800000000002}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:55.416" endtime="20201029 09:33:55.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:55.433" level="INFO">${RESULT} = {'diff': [0.0007013889999999967, 0.0007015000000000007, 0.0007017230000000013, 0.000705639000000001, 0.0007056250000000014, 0.0007056800000000002, 0.0007056530000000005, 0.0007056809999999997, 0.00070...</msg>
<status status="PASS" starttime="20201029 09:33:55.426" endtime="20201029 09:33:55.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:55.444" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:55.441" endtime="20201029 09:33:55.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:55.451" level="INFO">VALUE: [0.0007013889999999967, 0.0007015000000000007, 0.0007017230000000013, 0.000705639000000001, 0.0007056250000000014, 0.0007056800000000002, 0.0007056530000000005, 0.0007056809999999997, 0.0007056110000000018, 0.0007056660000000006, 0.0007055830000000027, 0.0007055829999999957, 0.0007056250000000014, 0.0007055699999999956, 0.0007056670000000001, 0.0007055969999999953, 0.0007057220000000058, 0.0007057359999999985, 0.000705749999999998, 0.0007057359999999985, 0.0007057909999999973, 0.0007058330000000029, 0.0007057920000000037, 0.0007057919999999968, 0.0007058200000000028, 0.0007058200000000028, 0.0007057359999999985, 0.0007058750000000016, 0.0007057919999999968, 0.0007057639999999976, 0.000705750000000005, 0.000705750000000005, 0.0007058340000000024, 0.0007056949999999923, 0.0007058330000000029, 0.0007057639999999976, 0.0007057639999999976, 0.0007059029999999938, 0.0007058750000000086, 0.0007058610000000021, 0.0007058469999999956, 0.0007057779999999902, 0.0007058190000000103, 0.0007058059999999894, 0.000705750000000005, 0.0007057499999999911, 0.0007058060000000033, 0.0007058190000000103, 0.0007058890000000012, 0.0007058610000000021]</msg>
<status status="PASS" starttime="20201029 09:33:55.446" endtime="20201029 09:33:55.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:55.435" endtime="20201029 09:33:55.454"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:54.921" endtime="20201029 09:33:55.455"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:54.891" endtime="20201029 09:33:55.456"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:55.462" endtime="20201029 09:33:55.484"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:55.458" endtime="20201029 09:33:55.485"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:55.506" endtime="20201029 09:33:55.555"></status>
</kw>
<msg timestamp="20201029 09:33:55.556" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:55.503" endtime="20201029 09:33:55.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:55.562" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:55.558" endtime="20201029 09:33:55.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:55.565" endtime="20201029 09:33:55.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:55.496" endtime="20201029 09:33:55.570"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:55.491" endtime="20201029 09:33:55.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:55.588" endtime="20201029 09:33:55.937"></status>
</kw>
<msg timestamp="20201029 09:33:55.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034717514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035457056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:55.585" endtime="20201029 09:33:55.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:55.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034717514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035457056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:55.946" endtime="20201029 09:33:55.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:55.965" endtime="20201029 09:33:55.969"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:55.578" endtime="20201029 09:33:55.971"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:55.573" endtime="20201029 09:33:55.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:55.981" level="INFO">${PHILIP_RES} = [{'diff': 0.0007395420000000028}, {'diff': 0.0007387220000000042}, {'diff': 0.0007428199999999982}, {'diff': 0.000738875}, {'diff': 0.0007387780000000024}, {'diff': 0.0007429170000000027}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 09:33:55.974" endtime="20201029 09:33:55.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:55.992" level="INFO">${RESULT} = {'diff': [0.0007395420000000028, 0.0007387220000000042, 0.0007428199999999982, 0.000738875, 0.0007387780000000024, 0.0007429170000000027, 0.0007389309999999982, 0.0007387229999999967, 0.00074288899999...</msg>
<status status="PASS" starttime="20201029 09:33:55.983" endtime="20201029 09:33:55.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.003" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:56.001" endtime="20201029 09:33:56.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.008" level="INFO">VALUE: [0.0007395420000000028, 0.0007387220000000042, 0.0007428199999999982, 0.000738875, 0.0007387780000000024, 0.0007429170000000027, 0.0007389309999999982, 0.0007387229999999967, 0.0007428889999999966, 0.0007389159999999992, 0.0007388050000000021, 0.0007429300000000028, 0.0007389449999999978, 0.0007387779999999955, 0.0007428619999999969, 0.0007389170000000056, 0.0007387499999999964, 0.0007429299999999958, 0.0007389999999999966, 0.0007388060000000016, 0.0007429450000000018, 0.000738903000000006, 0.0007387780000000024, 0.0007428609999999974, 0.0007388610000000004, 0.0007386389999999993, 0.0007428189999999987, 0.0007388480000000003, 0.0007384860000000035, 0.0007427220000000012, 0.0007388610000000004, 0.0007386800000000054, 0.0007429300000000028, 0.0007388889999999995, 0.0007386519999999994, 0.0007429169999999957, 0.0007388470000000008, 0.0007386530000000058, 0.0007428190000000057, 0.0007388329999999943, 0.0007387910000000025, 0.0007429170000000096, 0.0007388200000000011, 0.0007387220000000111, 0.0007429440000000093, 0.0007389159999999922, 0.0007387080000000046, 0.0007428619999999969, 0.0007389170000000056, 0.0007387779999999955]</msg>
<status status="PASS" starttime="20201029 09:33:56.005" endtime="20201029 09:33:56.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:55.994" endtime="20201029 09:33:56.012"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:55.487" endtime="20201029 09:33:56.013"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:55.456" endtime="20201029 09:33:56.013"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:56.020" endtime="20201029 09:33:56.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.016" endtime="20201029 09:33:56.043"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.064" endtime="20201029 09:33:56.115"></status>
</kw>
<msg timestamp="20201029 09:33:56.116" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:56.061" endtime="20201029 09:33:56.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.122" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:56.118" endtime="20201029 09:33:56.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.125" endtime="20201029 09:33:56.128"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.054" endtime="20201029 09:33:56.130"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.048" endtime="20201029 09:33:56.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.148" endtime="20201029 09:33:56.498"></status>
</kw>
<msg timestamp="20201029 09:33:56.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034820806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035602708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:56.145" endtime="20201029 09:33:56.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034820806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035602708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:56.508" endtime="20201029 09:33:56.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.526" endtime="20201029 09:33:56.530"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.138" endtime="20201029 09:33:56.532"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.133" endtime="20201029 09:33:56.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:56.542" level="INFO">${PHILIP_RES} = [{'diff': 0.000781901999999994}, {'diff': 0.0007781800000000033}, {'diff': 0.0007780829999999989}, {'diff': 0.000778028}, {'diff': 0.0007780689999999993}, {'diff': 0.0007781249999999976}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:56.535" endtime="20201029 09:33:56.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:56.554" level="INFO">${RESULT} = {'diff': [0.000781901999999994, 0.0007781800000000033, 0.0007780829999999989, 0.000778028, 0.0007780689999999993, 0.0007781249999999976, 0.0007820279999999971, 0.0007780829999999989, 0.000778068999999...</msg>
<status status="PASS" starttime="20201029 09:33:56.545" endtime="20201029 09:33:56.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.564" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:56.562" endtime="20201029 09:33:56.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.570" level="INFO">VALUE: [0.000781901999999994, 0.0007781800000000033, 0.0007780829999999989, 0.000778028, 0.0007780689999999993, 0.0007781249999999976, 0.0007820279999999971, 0.0007780829999999989, 0.0007780689999999993, 0.0007779860000000013, 0.0007779160000000035, 0.0007780689999999993, 0.0007819300000000001, 0.0007780000000000009, 0.0007779580000000022, 0.0007780140000000005, 0.0007780549999999997, 0.0007782919999999999, 0.0007820139999999975, 0.0007779579999999953, 0.0007780969999999984, 0.0007780419999999996, 0.0007781250000000045, 0.0007780829999999989, 0.000781999999999998, 0.0007780410000000001, 0.0007779310000000025, 0.000778028, 0.0007779860000000013, 0.0007781390000000041, 0.0007819719999999988, 0.0007780829999999989, 0.0007779719999999948, 0.0007779590000000017, 0.0007779440000000026, 0.0007782360000000016, 0.0007819579999999993, 0.0007779859999999944, 0.0007780839999999983, 0.000778028, 0.0007780410000000071, 0.0007782500000000081, 0.0007820410000000111, 0.0007780139999999935, 0.0007779449999999882, 0.0007779309999999956, 0.000778028, 0.0007781799999999894, 0.0007820139999999975, 0.0007780140000000074]</msg>
<status status="PASS" starttime="20201029 09:33:56.567" endtime="20201029 09:33:56.571"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.555" endtime="20201029 09:33:56.573"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.044" endtime="20201029 09:33:56.575"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.014" endtime="20201029 09:33:56.575"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:56.581" endtime="20201029 09:33:56.603"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.577" endtime="20201029 09:33:56.605"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.626" endtime="20201029 09:33:56.678"></status>
</kw>
<msg timestamp="20201029 09:33:56.680" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:56.622" endtime="20201029 09:33:56.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:56.686" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:56.682" endtime="20201029 09:33:56.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.688" endtime="20201029 09:33:56.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.615" endtime="20201029 09:33:56.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.610" endtime="20201029 09:33:56.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:56.712" endtime="20201029 09:33:57.066"></status>
</kw>
<msg timestamp="20201029 09:33:57.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034859222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035676569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:56.708" endtime="20201029 09:33:57.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:57.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034859222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035676569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:57.076" endtime="20201029 09:33:57.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:57.094" endtime="20201029 09:33:57.098"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.701" endtime="20201029 09:33:57.100"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.696" endtime="20201029 09:33:57.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:57.110" level="INFO">${PHILIP_RES} = [{'diff': 0.000817346999999996}, {'diff': 0.000821042000000001}, {'diff': 0.0008173189999999969}, {'diff': 0.0008211809999999972}, {'diff': 0.0008173330000000034}, {'diff': 0.000821235999999996}, {'di...</msg>
<status status="PASS" starttime="20201029 09:33:57.103" endtime="20201029 09:33:57.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:57.120" level="INFO">${RESULT} = {'diff': [0.000817346999999996, 0.000821042000000001, 0.0008173189999999969, 0.0008211809999999972, 0.0008173330000000034, 0.000821235999999996, 0.0008174999999999988, 0.0008211949999999968, 0.0008173...</msg>
<status status="PASS" starttime="20201029 09:33:57.113" endtime="20201029 09:33:57.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:57.131" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:57.128" endtime="20201029 09:33:57.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:57.136" level="INFO">VALUE: [0.000817346999999996, 0.000821042000000001, 0.0008173189999999969, 0.0008211809999999972, 0.0008173330000000034, 0.000821235999999996, 0.0008174999999999988, 0.0008211949999999968, 0.0008173890000000017, 0.0008212640000000021, 0.0008173889999999948, 0.0008211940000000043, 0.000817346999999996, 0.0008212910000000018, 0.0008173749999999952, 0.0008211940000000043, 0.000817264000000005, 0.0008210970000000067, 0.0008172910000000047, 0.0008211249999999989, 0.0008173340000000029, 0.0008211389999999985, 0.0008173890000000017, 0.0008211250000000059, 0.0008172639999999981, 0.0008211389999999985, 0.0008175279999999979, 0.000821347, 0.0008174310000000004, 0.0008213190000000009, 0.0008174160000000014, 0.0008211109999999994, 0.0008173330000000034, 0.0008210690000000076, 0.000817264000000012, 0.0008210559999999867, 0.0008173190000000108, 0.0008210969999999929, 0.0008173890000000017, 0.0008210700000000071, 0.0008174310000000073, 0.0008211389999999985, 0.0008172629999999986, 0.0008211529999999911, 0.000817346999999996, 0.0008211250000000059, 0.0008173610000000026, 0.0008211669999999976, 0.0008173610000000026, 0.0008211659999999982]</msg>
<status status="PASS" starttime="20201029 09:33:57.133" endtime="20201029 09:33:57.137"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.122" endtime="20201029 09:33:57.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.606" endtime="20201029 09:33:57.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:56.576" endtime="20201029 09:33:57.141"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:57.147" endtime="20201029 09:33:57.169"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.143" endtime="20201029 09:33:57.171"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:57.192" endtime="20201029 09:33:57.248"></status>
</kw>
<msg timestamp="20201029 09:33:57.250" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:57.188" endtime="20201029 09:33:57.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:57.256" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:57.252" endtime="20201029 09:33:57.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:57.258" endtime="20201029 09:33:57.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.181" endtime="20201029 09:33:57.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.176" endtime="20201029 09:33:57.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:57.281" endtime="20201029 09:33:57.644"></status>
</kw>
<msg timestamp="20201029 09:33:57.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036846319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037704264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:57.278" endtime="20201029 09:33:57.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:57.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036846319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037704264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:57.653" endtime="20201029 09:33:57.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:57.672" endtime="20201029 09:33:57.676"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.271" endtime="20201029 09:33:57.677"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.266" endtime="20201029 09:33:57.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:57.688" level="INFO">${PHILIP_RES} = [{'diff': 0.0008579449999999988}, {'diff': 0.0008626809999999971}, {'diff': 0.0008586670000000005}, {'diff': 0.0008625839999999996}, {'diff': 0.0008585000000000051}, {'diff': 0.0008626109999999992}, {...</msg>
<status status="PASS" starttime="20201029 09:33:57.680" endtime="20201029 09:33:57.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:57.697" level="INFO">${RESULT} = {'diff': [0.0008579449999999988, 0.0008626809999999971, 0.0008586670000000005, 0.0008625839999999996, 0.0008585000000000051, 0.0008626109999999992, 0.0008584439999999999, 0.0008626669999999975, 0.0008...</msg>
<status status="PASS" starttime="20201029 09:33:57.690" endtime="20201029 09:33:57.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:57.708" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:57.706" endtime="20201029 09:33:57.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:57.713" level="INFO">VALUE: [0.0008579449999999988, 0.0008626809999999971, 0.0008586670000000005, 0.0008625839999999996, 0.0008585000000000051, 0.0008626109999999992, 0.0008584439999999999, 0.0008626669999999975, 0.0008585270000000048, 0.0008626799999999976, 0.0008584730000000054, 0.0008627219999999963, 0.0008585280000000042, 0.0008626389999999984, 0.0008583050000000036, 0.0008624439999999969, 0.0008584729999999985, 0.0008625560000000004, 0.0008585000000000051, 0.0008625129999999953, 0.0008585139999999977, 0.0008625410000000014, 0.000858277999999997, 0.0008623889999999981, 0.0008582219999999988, 0.0008623329999999998, 0.000858262999999998, 0.0008624439999999969, 0.0008584170000000002, 0.0008625839999999996, 0.0008585279999999973, 0.0008626109999999992, 0.0008585279999999973, 0.0008625699999999931, 0.0008584030000000076, 0.0008625839999999996, 0.0008582919999999966, 0.0008624450000000033, 0.0008583330000000028, 0.0008624299999999974, 0.0008582639999999975, 0.0008625280000000013, 0.0008583479999999949, 0.0008624309999999968, 0.0008583330000000028, 0.0008624309999999968, 0.0008582089999999987, 0.0008623329999999929, 0.0008582640000000114, 0.0008623469999999994]</msg>
<status status="PASS" starttime="20201029 09:33:57.710" endtime="20201029 09:33:57.715"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.699" endtime="20201029 09:33:57.716"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.172" endtime="20201029 09:33:57.718"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.142" endtime="20201029 09:33:57.718"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:57.724" endtime="20201029 09:33:57.746"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.721" endtime="20201029 09:33:57.748"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:57.771" endtime="20201029 09:33:57.828"></status>
</kw>
<msg timestamp="20201029 09:33:57.829" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:57.767" endtime="20201029 09:33:57.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:57.835" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:57.831" endtime="20201029 09:33:57.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:57.838" endtime="20201029 09:33:57.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.760" endtime="20201029 09:33:57.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.755" endtime="20201029 09:33:57.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:57.861" endtime="20201029 09:33:58.210"></status>
</kw>
<msg timestamp="20201029 09:33:58.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036647181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037545944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:57.858" endtime="20201029 09:33:58.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036647181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037545944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:58.219" endtime="20201029 09:33:58.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.238" endtime="20201029 09:33:58.242"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.851" endtime="20201029 09:33:58.244"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.846" endtime="20201029 09:33:58.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:58.255" level="INFO">${PHILIP_RES} = [{'diff': 0.0008987629999999969}, {'diff': 0.0009036939999999966}, {'diff': 0.0008984720000000043}, {'diff': 0.0008984720000000043}, {'diff': 0.0008984439999999982}, {'diff': 0.0008985280000000026}, {...</msg>
<status status="PASS" starttime="20201029 09:33:58.247" endtime="20201029 09:33:58.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:58.265" level="INFO">${RESULT} = {'diff': [0.0008987629999999969, 0.0009036939999999966, 0.0008984720000000043, 0.0008984720000000043, 0.0008984439999999982, 0.0008985280000000026, 0.0008984440000000052, 0.0009037080000000031, 0.0008...</msg>
<status status="PASS" starttime="20201029 09:33:58.257" endtime="20201029 09:33:58.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.276" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:58.274" endtime="20201029 09:33:58.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.283" level="INFO">VALUE: [0.0008987629999999969, 0.0009036939999999966, 0.0008984720000000043, 0.0008984720000000043, 0.0008984439999999982, 0.0008985280000000026, 0.0008984440000000052, 0.0009037080000000031, 0.0008985560000000017, 0.0008985279999999957, 0.0008984019999999995, 0.0008985000000000035, 0.0008984169999999986, 0.0009035829999999995, 0.0008983480000000002, 0.0008983889999999994, 0.0008984729999999969, 0.0008983890000000064, 0.0008984439999999982, 0.0009035829999999995, 0.0008985139999999961, 0.0008985980000000005, 0.0008985700000000013, 0.0008985279999999957, 0.0008985830000000014, 0.0009036110000000055, 0.0008983889999999925, 0.0008984999999999965, 0.0008984439999999982, 0.0008985279999999957, 0.0008984580000000048, 0.0009034160000000041, 0.0008984580000000048, 0.0008984300000000056, 0.000898597000000001, 0.0008984580000000048, 0.0008984719999999974, 0.0009035969999999921, 0.0008985690000000018, 0.0008984999999999965, 0.0008984719999999974, 0.0008984590000000042, 0.000898403000000006, 0.0009035419999999933, 0.0008985559999999948, 0.0008985829999999945, 0.0008985980000000005, 0.000898514000000003, 0.0008984999999999965, 0.0009036800000000039]</msg>
<status status="PASS" starttime="20201029 09:33:58.279" endtime="20201029 09:33:58.285"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.267" endtime="20201029 09:33:58.286"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.749" endtime="20201029 09:33:58.288"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:57.719" endtime="20201029 09:33:58.288"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:58.294" endtime="20201029 09:33:58.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.290" endtime="20201029 09:33:58.318"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.339" endtime="20201029 09:33:58.398"></status>
</kw>
<msg timestamp="20201029 09:33:58.399" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.336" endtime="20201029 09:33:58.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.406" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.401" endtime="20201029 09:33:58.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.408" endtime="20201029 09:33:58.412"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.328" endtime="20201029 09:33:58.413"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.323" endtime="20201029 09:33:58.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.432" endtime="20201029 09:33:58.781"></status>
</kw>
<msg timestamp="20201029 09:33:58.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035030486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035971194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:58.428" endtime="20201029 09:33:58.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035030486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035971194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:58.790" endtime="20201029 09:33:58.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.808" endtime="20201029 09:33:58.812"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.421" endtime="20201029 09:33:58.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.416" endtime="20201029 09:33:58.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:58.824" level="INFO">${PHILIP_RES} = [{'diff': 0.0009407079999999984}, {'diff': 0.0009457360000000026}, {'diff': 0.0009408610000000012}, {'diff': 0.0009408479999999941}, {'diff': 0.0009458190000000005}, {'diff': 0.000940931000000006}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:58.817" endtime="20201029 09:33:58.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:58.839" level="INFO">${RESULT} = {'diff': [0.0009407079999999984, 0.0009457360000000026, 0.0009408610000000012, 0.0009408479999999941, 0.0009458190000000005, 0.000940931000000006, 0.0009408620000000006, 0.0009456519999999982, 0.00094...</msg>
<status status="PASS" starttime="20201029 09:33:58.827" endtime="20201029 09:33:58.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.850" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:58.847" endtime="20201029 09:33:58.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.855" level="INFO">VALUE: [0.0009407079999999984, 0.0009457360000000026, 0.0009408610000000012, 0.0009408479999999941, 0.0009458190000000005, 0.000940931000000006, 0.0009408620000000006, 0.0009456519999999982, 0.0009409589999999982, 0.0009408890000000003, 0.0009457359999999956, 0.0009408190000000025, 0.0009407230000000044, 0.0009455420000000006, 0.0009407640000000037, 0.0009407360000000045, 0.0009454720000000028, 0.000940736999999997, 0.0009407499999999971, 0.000945722000000003, 0.0009408890000000003, 0.000940833000000002, 0.0009457500000000021, 0.0009408469999999947, 0.0009408610000000012, 0.0009455550000000007, 0.0009407639999999967, 0.0009407080000000054, 0.0009455690000000072, 0.0009407359999999976, 0.0009409029999999929, 0.0009456800000000043, 0.0009409999999999974, 0.0009409720000000121, 0.0009458609999999923, 0.0009409439999999991, 0.0009408889999999864, 0.000945610999999999, 0.0009408610000000012, 0.0009408050000000029, 0.0009454450000000031, 0.0009407500000000041, 0.0009407919999999959, 0.0009456529999999908, 0.0009408329999999882, 0.0009407639999999967, 0.0009456119999999985, 0.0009407079999999984, 0.0009406529999999996, 0.0009455000000000019]</msg>
<status status="PASS" starttime="20201029 09:33:58.852" endtime="20201029 09:33:58.856"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.841" endtime="20201029 09:33:58.858"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.319" endtime="20201029 09:33:58.860"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.289" endtime="20201029 09:33:58.860"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:58.866" endtime="20201029 09:33:58.888"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.862" endtime="20201029 09:33:58.889"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.911" endtime="20201029 09:33:58.972"></status>
</kw>
<msg timestamp="20201029 09:33:58.973" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.907" endtime="20201029 09:33:58.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:58.980" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:58.975" endtime="20201029 09:33:58.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:58.982" endtime="20201029 09:33:58.986"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.900" endtime="20201029 09:33:58.987"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.895" endtime="20201029 09:33:58.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.006" endtime="20201029 09:33:59.356"></status>
</kw>
<msg timestamp="20201029 09:33:59.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034811514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035794736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:59.002" endtime="20201029 09:33:59.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034811514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035794736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:59.365" endtime="20201029 09:33:59.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.384" endtime="20201029 09:33:59.388"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.995" endtime="20201029 09:33:59.390"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.990" endtime="20201029 09:33:59.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:59.400" level="INFO">${PHILIP_RES} = [{'diff': 0.0009832219999999989}, {'diff': 0.0009837779999999977}, {'diff': 0.000982846999999995}, {'diff': 0.0009828340000000019}, {'diff': 0.0009829719999999986}, {'diff': 0.000987944999999997}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:59.393" endtime="20201029 09:33:59.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:59.411" level="INFO">${RESULT} = {'diff': [0.0009832219999999989, 0.0009837779999999977, 0.000982846999999995, 0.0009828340000000019, 0.0009829719999999986, 0.000987944999999997, 0.0009889029999999993, 0.000988847000000001, 0.0009888...</msg>
<status status="PASS" starttime="20201029 09:33:59.402" endtime="20201029 09:33:59.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.422" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:59.420" endtime="20201029 09:33:59.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.428" level="INFO">VALUE: [0.0009832219999999989, 0.0009837779999999977, 0.000982846999999995, 0.0009828340000000019, 0.0009829719999999986, 0.000987944999999997, 0.0009889029999999993, 0.000988847000000001, 0.0009888480000000005, 0.0009889029999999993, 0.000988834000000001, 0.0009887639999999961, 0.000988834000000001, 0.0009889310000000054, 0.0009889440000000055, 0.0009888190000000019, 0.0009889169999999989, 0.0009889999999999968, 0.0009888330000000015, 0.0009889169999999989, 0.0009888750000000002, 0.0009889170000000058, 0.0009889439999999985, 0.0009889720000000046, 0.000988945000000005, 0.0009889170000000058, 0.0009889579999999981, 0.0009889589999999976, 0.000988916999999992, 0.0009888330000000084, 0.0009888329999999945, 0.000988944999999991, 0.0009889170000000058, 0.0009889160000000063, 0.0009889719999999907, 0.0009889589999999976, 0.000989056000000002, 0.0009889859999999973, 0.000988944999999991, 0.0009889029999999993, 0.000988722999999997, 0.0009888050000000093, 0.000988722999999997, 0.0009888480000000005, 0.000988764000000003, 0.000988847000000001, 0.000988847000000001, 0.0009889859999999973, 0.0009889720000000046, 0.0009888889999999928]</msg>
<status status="PASS" starttime="20201029 09:33:59.425" endtime="20201029 09:33:59.429"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.413" endtime="20201029 09:33:59.431"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.891" endtime="20201029 09:33:59.433"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:58.861" endtime="20201029 09:33:59.433"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:59.439" endtime="20201029 09:33:59.461"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.435" endtime="20201029 09:33:59.462"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.484" endtime="20201029 09:33:59.547"></status>
</kw>
<msg timestamp="20201029 09:33:59.549" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:59.481" endtime="20201029 09:33:59.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.555" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:59.551" endtime="20201029 09:33:59.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.557" endtime="20201029 09:33:59.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.473" endtime="20201029 09:33:59.563"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.468" endtime="20201029 09:33:59.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.581" endtime="20201029 09:33:59.934"></status>
</kw>
<msg timestamp="20201029 09:33:59.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034943486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035971083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:59.578" endtime="20201029 09:33:59.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034943486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035971083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:59.944" endtime="20201029 09:33:59.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:59.962" endtime="20201029 09:33:59.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.570" endtime="20201029 09:33:59.968"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.565" endtime="20201029 09:33:59.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:59.979" level="INFO">${PHILIP_RES} = [{'diff': 0.0010275969999999982}, {'diff': 0.0010271389999999964}, {'diff': 0.0010269579999999945}, {'diff': 0.0010271669999999955}, {'diff': 0.0010322499999999984}, {'diff': 0.0010321799999999937}, {...</msg>
<status status="PASS" starttime="20201029 09:33:59.971" endtime="20201029 09:33:59.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:59.988" level="INFO">${RESULT} = {'diff': [0.0010275969999999982, 0.0010271389999999964, 0.0010269579999999945, 0.0010271669999999955, 0.0010322499999999984, 0.0010321799999999937, 0.0010322779999999976, 0.0010323609999999955, 0.0010...</msg>
<status status="PASS" starttime="20201029 09:33:59.981" endtime="20201029 09:33:59.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:59.999" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:59.997" endtime="20201029 09:34:00.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.004" level="INFO">VALUE: [0.0010275969999999982, 0.0010271389999999964, 0.0010269579999999945, 0.0010271669999999955, 0.0010322499999999984, 0.0010321799999999937, 0.0010322779999999976, 0.0010323609999999955, 0.0010323190000000038, 0.0010323199999999963, 0.001032346999999996, 0.001032181, 0.0010322370000000053, 0.0010324589999999995, 0.0010324719999999996, 0.0010322909999999977, 0.0010322910000000046, 0.001032362000000002, 0.0010322909999999977, 0.0010324859999999991, 0.0010323890000000016, 0.0010323890000000016, 0.0010324030000000012, 0.0010324999999999987, 0.001032375000000002, 0.0010323479999999954, 0.001032235999999992, 0.001032347000000003, 0.001032375000000002, 0.0010323609999999955, 0.0010323879999999952, 0.001032346999999989, 0.0010324999999999918, 0.0010325969999999962, 0.001032292000000004, 0.0010322369999999914, 0.0010323189999999899, 0.0010322089999999923, 0.001032264000000005, 0.0010323200000000032, 0.0010322219999999993, 0.0010323610000000094, 0.0010322079999999928, 0.0010322360000000058, 0.0010322219999999993, 0.0010320689999999966, 0.0010320000000000051, 0.0010319859999999986, 0.0010322499999999984, 0.0010320969999999957]</msg>
<status status="PASS" starttime="20201029 09:34:00.001" endtime="20201029 09:34:00.006"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.990" endtime="20201029 09:34:00.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.464" endtime="20201029 09:34:00.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:59.434" endtime="20201029 09:34:00.009"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:00.015" endtime="20201029 09:34:00.037"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.012" endtime="20201029 09:34:00.039"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.060" endtime="20201029 09:34:00.127"></status>
</kw>
<msg timestamp="20201029 09:34:00.128" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.057" endtime="20201029 09:34:00.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.135" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.131" endtime="20201029 09:34:00.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.137" endtime="20201029 09:34:00.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.049" endtime="20201029 09:34:00.143"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.044" endtime="20201029 09:34:00.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.161" endtime="20201029 09:34:00.510"></status>
</kw>
<msg timestamp="20201029 09:34:00.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036290514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037367917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:00.158" endtime="20201029 09:34:00.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036290514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037367917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:00.520" endtime="20201029 09:34:00.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.538" endtime="20201029 09:34:00.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.150" endtime="20201029 09:34:00.544"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.145" endtime="20201029 09:34:00.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:00.555" level="INFO">${PHILIP_RES} = [{'diff': 0.0010774029999999976}, {'diff': 0.0010724029999999996}, {'diff': 0.0010723200000000016}, {'diff': 0.0010772360000000022}, {'diff': 0.001072417000000006}, {'diff': 0.0010723470000000013}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:00.547" endtime="20201029 09:34:00.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:00.564" level="INFO">${RESULT} = {'diff': [0.0010774029999999976, 0.0010724029999999996, 0.0010723200000000016, 0.0010772360000000022, 0.001072417000000006, 0.0010723470000000013, 0.0010774860000000025, 0.0010725139999999966, 0.00107...</msg>
<status status="PASS" starttime="20201029 09:34:00.557" endtime="20201029 09:34:00.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.575" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:00.572" endtime="20201029 09:34:00.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.580" level="INFO">VALUE: [0.0010774029999999976, 0.0010724029999999996, 0.0010723200000000016, 0.0010772360000000022, 0.001072417000000006, 0.0010723470000000013, 0.0010774860000000025, 0.0010725139999999966, 0.0010723610000000008, 0.0010774439999999968, 0.0010724589999999978, 0.001072208000000005, 0.0010774860000000025, 0.0010724169999999991, 0.0010720830000000015, 0.0010774860000000025, 0.0010724309999999987, 0.0010721249999999932, 0.001077471999999996, 0.0010722919999999955, 0.001072207999999998, 0.0010773880000000055, 0.0010725689999999954, 0.0010724589999999978, 0.0010777220000000032, 0.0010725419999999958, 0.0010723329999999948, 0.001077487000000002, 0.0010724159999999927, 0.0010721249999999932, 0.0010773749999999915, 0.0010723750000000004, 0.0010722780000000098, 0.0010774030000000046, 0.0010724439999999918, 0.001072180000000006, 0.0010774029999999907, 0.0010723200000000016, 0.001072194999999998, 0.0010774999999999951, 0.001072360999999994, 0.0010722370000000037, 0.001077471999999996, 0.0010724720000000049, 0.0010723329999999948, 0.0010775420000000008, 0.0010723339999999942, 0.0010721670000000127, 0.0010774030000000046, 0.0010724579999999984]</msg>
<status status="PASS" starttime="20201029 09:34:00.577" endtime="20201029 09:34:00.582"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.566" endtime="20201029 09:34:00.584"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.040" endtime="20201029 09:34:00.585"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.010" endtime="20201029 09:34:00.585"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:00.591" endtime="20201029 09:34:00.613"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.588" endtime="20201029 09:34:00.615"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.638" endtime="20201029 09:34:00.706"></status>
</kw>
<msg timestamp="20201029 09:34:00.707" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.635" endtime="20201029 09:34:00.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:00.714" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:00.709" endtime="20201029 09:34:00.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.716" endtime="20201029 09:34:00.720"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.627" endtime="20201029 09:34:00.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.622" endtime="20201029 09:34:00.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:00.740" endtime="20201029 09:34:01.089"></status>
</kw>
<msg timestamp="20201029 09:34:01.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036577528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037695319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:00.737" endtime="20201029 09:34:01.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036577528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037695319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:01.098" endtime="20201029 09:34:01.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.116" endtime="20201029 09:34:01.120"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.729" endtime="20201029 09:34:01.122"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.724" endtime="20201029 09:34:01.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:01.133" level="INFO">${PHILIP_RES} = [{'diff': 0.001117791}, {'diff': 0.0011174590000000012}, {'diff': 0.0011174170000000025}, {'diff': 0.0011173749999999968}, {'diff': 0.0011177359999999942}, {'diff': 0.001122513999999998}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 09:34:01.125" endtime="20201029 09:34:01.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:01.142" level="INFO">${RESULT} = {'diff': [0.001117791, 0.0011174590000000012, 0.0011174170000000025, 0.0011173749999999968, 0.0011177359999999942, 0.001122513999999998, 0.0011174579999999948, 0.0011175689999999988, 0.001117486000000...</msg>
<status status="PASS" starttime="20201029 09:34:01.135" endtime="20201029 09:34:01.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.153" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:01.151" endtime="20201029 09:34:01.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.160" level="INFO">VALUE: [0.001117791, 0.0011174590000000012, 0.0011174170000000025, 0.0011173749999999968, 0.0011177359999999942, 0.001122513999999998, 0.0011174579999999948, 0.0011175689999999988, 0.0011174860000000009, 0.0011175279999999996, 0.0011175409999999997, 0.001122403000000001, 0.0011174860000000009, 0.001117527, 0.0011175000000000004, 0.001117431000000002, 0.0011175700000000052, 0.0011224719999999994, 0.0011175279999999996, 0.0011175419999999991, 0.0011174589999999943, 0.001117305000000006, 0.001117596999999998, 0.0011223469999999958, 0.001117403000000003, 0.0011173889999999964, 0.0011173480000000041, 0.0011173329999999981, 0.0011174860000000009, 0.0011224580000000067, 0.0011173750000000038, 0.0011173619999999967, 0.0011172639999999928, 0.001117320000000005, 0.0011175280000000065, 0.0011222639999999978, 0.001117431000000002, 0.0011175549999999923, 0.0011175130000000005, 0.0011175419999999991, 0.0011176109999999906, 0.0011224579999999929, 0.0011175699999999983, 0.0011175419999999991, 0.0011175829999999914, 0.0011174729999999938, 0.0011175689999999988, 0.0011224860000000059, 0.0011175000000000074, 0.0011177770000000004]</msg>
<status status="PASS" starttime="20201029 09:34:01.155" endtime="20201029 09:34:01.161"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.144" endtime="20201029 09:34:01.163"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.616" endtime="20201029 09:34:01.164"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:00.586" endtime="20201029 09:34:01.165"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:01.171" endtime="20201029 09:34:01.193"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.167" endtime="20201029 09:34:01.194"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.215" endtime="20201029 09:34:01.287"></status>
</kw>
<msg timestamp="20201029 09:34:01.288" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.212" endtime="20201029 09:34:01.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.296" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.291" endtime="20201029 09:34:01.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.298" endtime="20201029 09:34:01.303"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.205" endtime="20201029 09:34:01.305"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.199" endtime="20201029 09:34:01.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.328" endtime="20201029 09:34:01.746"></status>
</kw>
<msg timestamp="20201029 09:34:01.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034798792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035968014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:01.323" endtime="20201029 09:34:01.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034798792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035968014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:01.755" endtime="20201029 09:34:01.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.774" endtime="20201029 09:34:01.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.314" endtime="20201029 09:34:01.780"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.309" endtime="20201029 09:34:01.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:01.791" level="INFO">${PHILIP_RES} = [{'diff': 0.0011692219999999975}, {'diff': 0.0011643749999999953}, {'diff': 0.0011692219999999975}, {'diff': 0.0011644440000000006}, {'diff': 0.0011692220000000045}, {'diff': 0.001164319000000004}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:01.783" endtime="20201029 09:34:01.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:01.802" level="INFO">${RESULT} = {'diff': [0.0011692219999999975, 0.0011643749999999953, 0.0011692219999999975, 0.0011644440000000006, 0.0011692220000000045, 0.001164319000000004, 0.001169236000000004, 0.001164417000000001, 0.0011692...</msg>
<status status="PASS" starttime="20201029 09:34:01.793" endtime="20201029 09:34:01.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.814" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:01.811" endtime="20201029 09:34:01.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.819" level="INFO">VALUE: [0.0011692219999999975, 0.0011643749999999953, 0.0011692219999999975, 0.0011644440000000006, 0.0011692220000000045, 0.001164319000000004, 0.001169236000000004, 0.001164417000000001, 0.0011692219999999975, 0.0011643469999999961, 0.0011691939999999984, 0.0011643049999999974, 0.001169125, 0.0011645419999999976, 0.001169318999999995, 0.0011646250000000025, 0.0011694030000000064, 0.0011643050000000044, 0.0011692219999999975, 0.001164610999999996, 0.001169319000000002, 0.0011645140000000054, 0.0011693049999999955, 0.0011644719999999997, 0.0011693330000000085, 0.0011645000000000127, 0.0011692769999999963, 0.0011643479999999956, 0.0011692500000000106, 0.0011644729999999992, 0.001169153000000006, 0.0011643469999999961, 0.001169153000000006, 0.001164445, 0.0011693200000000015, 0.0011645420000000045, 0.0011693470000000011, 0.0011644860000000062, 0.001169207999999991, 0.0011643060000000038, 0.001169207999999991, 0.001164458000000007, 0.0011692920000000023, 0.0011645420000000045, 0.0011690140000000099, 0.0011644020000000088, 0.0011692639999999893, 0.0011643890000000018, 0.0011691949999999979, 0.0011644029999999944]</msg>
<status status="PASS" starttime="20201029 09:34:01.816" endtime="20201029 09:34:01.821"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.804" endtime="20201029 09:34:01.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.195" endtime="20201029 09:34:01.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.166" endtime="20201029 09:34:01.824"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:01.831" endtime="20201029 09:34:01.853"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.827" endtime="20201029 09:34:01.854"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.876" endtime="20201029 09:34:01.949"></status>
</kw>
<msg timestamp="20201029 09:34:01.950" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.872" endtime="20201029 09:34:01.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:01.956" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:01.952" endtime="20201029 09:34:01.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.958" endtime="20201029 09:34:01.962"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.865" endtime="20201029 09:34:01.964"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.859" endtime="20201029 09:34:01.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:01.983" endtime="20201029 09:34:02.332"></status>
</kw>
<msg timestamp="20201029 09:34:02.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034894056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036106153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:01.979" endtime="20201029 09:34:02.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034894056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036106153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:02.341" endtime="20201029 09:34:02.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.360" endtime="20201029 09:34:02.364"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.971" endtime="20201029 09:34:02.365"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.967" endtime="20201029 09:34:02.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:02.376" level="INFO">${PHILIP_RES} = [{'diff': 0.0012120970000000023}, {'diff': 0.0012169859999999963}, {'diff': 0.0012120000000000047}, {'diff': 0.0012170419999999946}, {'diff': 0.0012119169999999999}, {'diff': 0.0012170550000000016}, {...</msg>
<status status="PASS" starttime="20201029 09:34:02.368" endtime="20201029 09:34:02.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:02.388" level="INFO">${RESULT} = {'diff': [0.0012120970000000023, 0.0012169859999999963, 0.0012120000000000047, 0.0012170419999999946, 0.0012119169999999999, 0.0012170550000000016, 0.0012118610000000016, 0.0012171529999999986, 0.0012...</msg>
<status status="PASS" starttime="20201029 09:34:02.379" endtime="20201029 09:34:02.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.400" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:02.397" endtime="20201029 09:34:02.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.405" level="INFO">VALUE: [0.0012120970000000023, 0.0012169859999999963, 0.0012120000000000047, 0.0012170419999999946, 0.0012119169999999999, 0.0012170550000000016, 0.0012118610000000016, 0.0012171529999999986, 0.0012119169999999999, 0.0012169579999999972, 0.0012116949999999987, 0.0012170550000000016, 0.0012120139999999974, 0.0012170830000000007, 0.0012120269999999975, 0.0012169439999999976, 0.0012117920000000032, 0.001216834, 0.0012118610000000016, 0.0012169030000000053, 0.001211653, 0.0012169029999999914, 0.001211847000000002, 0.0012171249999999995, 0.0012119160000000073, 0.0012170420000000015, 0.0012118609999999946, 0.0012169860000000032, 0.0012118329999999955, 0.0012168750000000061, 0.001211833999999995, 0.0012169719999999967, 0.0012118340000000088, 0.0012169439999999976, 0.0012116390000000005, 0.0012167089999999964, 0.0012116800000000066, 0.0012168619999999991, 0.0012117499999999976, 0.0012168889999999988, 0.0012117219999999984, 0.0012169309999999905, 0.0012117370000000044, 0.0012167220000000034, 0.0012116949999999987, 0.0012169030000000053, 0.0012117500000000114, 0.0012168330000000005, 0.001211736000000005, 0.0012169439999999976]</msg>
<status status="PASS" starttime="20201029 09:34:02.402" endtime="20201029 09:34:02.413"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.390" endtime="20201029 09:34:02.415"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.855" endtime="20201029 09:34:02.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:01.825" endtime="20201029 09:34:02.417"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:02.423" endtime="20201029 09:34:02.445"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.419" endtime="20201029 09:34:02.447"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.468" endtime="20201029 09:34:02.544"></status>
</kw>
<msg timestamp="20201029 09:34:02.545" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.465" endtime="20201029 09:34:02.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.551" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:02.547" endtime="20201029 09:34:02.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.554" endtime="20201029 09:34:02.557"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.457" endtime="20201029 09:34:02.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.452" endtime="20201029 09:34:02.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.577" endtime="20201029 09:34:02.934"></status>
</kw>
<msg timestamp="20201029 09:34:02.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035033125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036292903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:02.574" endtime="20201029 09:34:02.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035033125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036292903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:02.944" endtime="20201029 09:34:02.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:02.962" endtime="20201029 09:34:02.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.567" endtime="20201029 09:34:02.968"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.562" endtime="20201029 09:34:02.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:02.979" level="INFO">${PHILIP_RES} = [{'diff': 0.001259778000000003}, {'diff': 0.0012601390000000004}, {'diff': 0.0012600980000000012}, {'diff': 0.0012601799999999996}, {'diff': 0.001260180999999999}, {'diff': 0.0012663610000000006}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:02.971" endtime="20201029 09:34:02.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:02.988" level="INFO">${RESULT} = {'diff': [0.001259778000000003, 0.0012601390000000004, 0.0012600980000000012, 0.0012601799999999996, 0.001260180999999999, 0.0012663610000000006, 0.0012602360000000049, 0.0012600559999999955, 0.001259...</msg>
<status status="PASS" starttime="20201029 09:34:02.981" endtime="20201029 09:34:02.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:02.999" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:02.996" endtime="20201029 09:34:03.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.004" level="INFO">VALUE: [0.001259778000000003, 0.0012601390000000004, 0.0012600980000000012, 0.0012601799999999996, 0.001260180999999999, 0.0012663610000000006, 0.0012602360000000049, 0.0012600559999999955, 0.001259943999999999, 0.001260070000000002, 0.001260138000000001, 0.0012662220000000043, 0.0012599859999999977, 0.0012597779999999961, 0.0012598749999999936, 0.0012599999999999972, 0.0012600689999999956, 0.0012660840000000007, 0.0012598890000000001, 0.0012598750000000006, 0.001259944000000006, 0.0012600420000000029, 0.0012601250000000008, 0.0012660969999999938, 0.00125979100000001, 0.0012598050000000027, 0.0012598340000000013, 0.0012598190000000092, 0.001259972000000012, 0.0012661110000000003, 0.00126005500000001, 0.001260153, 0.0012599860000000046, 0.0012600559999999955, 0.0012599860000000046, 0.0012660560000000015, 0.0012600280000000103, 0.0012599579999999916, 0.0012600410000000034, 0.001259861000000001, 0.0012599580000000055, 0.0012660280000000024, 0.0012598050000000027, 0.0012598890000000001, 0.001259959000000005, 0.001259943999999999, 0.0012598749999999936, 0.0012660130000000103, 0.00125979100000001, 0.0012598749999999936]</msg>
<status status="PASS" starttime="20201029 09:34:03.001" endtime="20201029 09:34:03.006"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.990" endtime="20201029 09:34:03.007"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.448" endtime="20201029 09:34:03.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:02.418" endtime="20201029 09:34:03.009"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:03.015" endtime="20201029 09:34:03.037"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.012" endtime="20201029 09:34:03.039"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.060" endtime="20201029 09:34:03.140"></status>
</kw>
<msg timestamp="20201029 09:34:03.141" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.057" endtime="20201029 09:34:03.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.147" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.143" endtime="20201029 09:34:03.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.149" endtime="20201029 09:34:03.153"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.049" endtime="20201029 09:34:03.155"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.044" endtime="20201029 09:34:03.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.173" endtime="20201029 09:34:03.525"></status>
</kw>
<msg timestamp="20201029 09:34:03.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036446208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037760458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:03.170" endtime="20201029 09:34:03.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036446208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037760458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:03.535" endtime="20201029 09:34:03.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.553" endtime="20201029 09:34:03.557"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.162" endtime="20201029 09:34:03.558"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.158" endtime="20201029 09:34:03.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:03.569" level="INFO">${PHILIP_RES} = [{'diff': 0.001314249999999996}, {'diff': 0.0013082639999999965}, {'diff': 0.001308361000000001}, {'diff': 0.0013140130000000028}, {'diff': 0.0013081809999999985}, {'diff': 0.0013081949999999981}, {'d...</msg>
<status status="PASS" starttime="20201029 09:34:03.562" endtime="20201029 09:34:03.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:03.579" level="INFO">${RESULT} = {'diff': [0.001314249999999996, 0.0013082639999999965, 0.001308361000000001, 0.0013140130000000028, 0.0013081809999999985, 0.0013081949999999981, 0.0013140279999999949, 0.0013081250000000003, 0.001308...</msg>
<status status="PASS" starttime="20201029 09:34:03.571" endtime="20201029 09:34:03.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.589" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:03.587" endtime="20201029 09:34:03.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.595" level="INFO">VALUE: [0.001314249999999996, 0.0013082639999999965, 0.001308361000000001, 0.0013140130000000028, 0.0013081809999999985, 0.0013081949999999981, 0.0013140279999999949, 0.0013081250000000003, 0.001308179999999999, 0.001314056000000001, 0.0013082089999999977, 0.0013082079999999982, 0.001314084, 0.001308152, 0.001308179999999999, 0.0013140420000000014, 0.0013081389999999998, 0.0013082360000000043, 0.0013140420000000083, 0.0013081809999999916, 0.0013083889999999931, 0.0013140420000000014, 0.0013083190000000022, 0.0013081110000000007, 0.0013139999999999957, 0.001308249999999997, 0.0013082229999999972, 0.0013139719999999966, 0.001308249999999997, 0.0013081530000000063, 0.0013139719999999966, 0.0013081389999999998, 0.0013082919999999887, 0.0013141110000000067, 0.001308263000000004, 0.001308249999999997, 0.0013139019999999918, 0.0013081659999999995, 0.0013080830000000016, 0.0013139300000000048, 0.0013080550000000024, 0.0013080420000000093, 0.0013138339999999998, 0.0013080830000000016, 0.0013080830000000016, 0.0013138609999999995, 0.0013080139999999962, 0.0013080280000000027, 0.0013137780000000016, 0.001307944999999991]</msg>
<status status="PASS" starttime="20201029 09:34:03.592" endtime="20201029 09:34:03.596"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.581" endtime="20201029 09:34:03.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.040" endtime="20201029 09:34:03.600"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.010" endtime="20201029 09:34:03.600"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:03.606" endtime="20201029 09:34:03.628"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.602" endtime="20201029 09:34:03.629"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.653" endtime="20201029 09:34:03.733"></status>
</kw>
<msg timestamp="20201029 09:34:03.734" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.649" endtime="20201029 09:34:03.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:03.741" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:03.737" endtime="20201029 09:34:03.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.744" endtime="20201029 09:34:03.747"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.642" endtime="20201029 09:34:03.749"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.636" endtime="20201029 09:34:03.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:03.767" endtime="20201029 09:34:04.118"></status>
</kw>
<msg timestamp="20201029 09:34:04.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036871528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038235722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:03.764" endtime="20201029 09:34:04.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036871528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038235722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.128" endtime="20201029 09:34:04.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.146" endtime="20201029 09:34:04.150"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.757" endtime="20201029 09:34:04.152"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.752" endtime="20201029 09:34:04.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:04.162" level="INFO">${PHILIP_RES} = [{'diff': 0.0013641939999999991}, {'diff': 0.0013642079999999987}, {'diff': 0.0013644309999999993}, {'diff': 0.0013642499999999974}, {'diff': 0.0013641519999999935}, {'diff': 0.0013641939999999991}, {...</msg>
<status status="PASS" starttime="20201029 09:34:04.155" endtime="20201029 09:34:04.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:04.172" level="INFO">${RESULT} = {'diff': [0.0013641939999999991, 0.0013642079999999987, 0.0013644309999999993, 0.0013642499999999974, 0.0013641519999999935, 0.0013641939999999991, 0.0013642079999999987, 0.0013641390000000003, 0.0013...</msg>
<status status="PASS" starttime="20201029 09:34:04.165" endtime="20201029 09:34:04.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.182" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:04.180" endtime="20201029 09:34:04.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.190" level="INFO">VALUE: [0.0013641939999999991, 0.0013642079999999987, 0.0013644309999999993, 0.0013642499999999974, 0.0013641519999999935, 0.0013641939999999991, 0.0013642079999999987, 0.0013641390000000003, 0.001364180999999999, 0.0013641949999999986, 0.0013640409999999964, 0.0013641799999999996, 0.0013643340000000018, 0.0013641250000000008, 0.0013641669999999995, 0.0013642499999999974, 0.0013642229999999977, 0.0013642909999999966, 0.0013643609999999945, 0.0013645000000000046, 0.001364375000000001, 0.0013643059999999957, 0.001364180999999992, 0.0013642779999999965, 0.0013642229999999977, 0.0013642360000000048, 0.0013641949999999986, 0.001364292000000003, 0.0013644159999999933, 0.0013642910000000036, 0.0013641530000000068, 0.0013643060000000096, 0.0013644030000000001, 0.0013643889999999936, 0.001364457999999999, 0.0013644299999999998, 0.0013645279999999899, 0.0013643889999999936, 0.0013643610000000084, 0.0013643889999999936, 0.0013643889999999936, 0.0013642779999999965, 0.0013641250000000077, 0.0013643340000000087, 0.0013644450000000058, 0.0013645550000000034, 0.0013645560000000029, 0.001364457999999999, 0.0013643480000000013, 0.0013642779999999965]</msg>
<status status="PASS" starttime="20201029 09:34:04.185" endtime="20201029 09:34:04.191"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.174" endtime="20201029 09:34:04.193"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.631" endtime="20201029 09:34:04.194"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:03.601" endtime="20201029 09:34:04.195"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:04.201" endtime="20201029 09:34:04.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.197" endtime="20201029 09:34:04.224"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.246" endtime="20201029 09:34:04.329"></status>
</kw>
<msg timestamp="20201029 09:34:04.330" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.242" endtime="20201029 09:34:04.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.337" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.332" endtime="20201029 09:34:04.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.339" endtime="20201029 09:34:04.343"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.235" endtime="20201029 09:34:04.345"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.229" endtime="20201029 09:34:04.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.363" endtime="20201029 09:34:04.716"></status>
</kw>
<msg timestamp="20201029 09:34:04.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034902583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036311472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.360" endtime="20201029 09:34:04.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034902583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036311472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.725" endtime="20201029 09:34:04.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.744" endtime="20201029 09:34:04.747"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.352" endtime="20201029 09:34:04.749"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.347" endtime="20201029 09:34:04.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:04.760" level="INFO">${PHILIP_RES} = [{'diff': 0.0014088889999999965}, {'diff': 0.0014086250000000036}, {'diff': 0.0014086249999999967}, {'diff': 0.0014084860000000005}, {'diff': 0.0014087360000000007}, {'diff': 0.0014147080000000006}, {...</msg>
<status status="PASS" starttime="20201029 09:34:04.752" endtime="20201029 09:34:04.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:04.774" level="INFO">${RESULT} = {'diff': [0.0014088889999999965, 0.0014086250000000036, 0.0014086249999999967, 0.0014084860000000005, 0.0014087360000000007, 0.0014147080000000006, 0.0014147779999999985, 0.0014145139999999987, 0.0014...</msg>
<status status="PASS" starttime="20201029 09:34:04.762" endtime="20201029 09:34:04.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.785" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:04.783" endtime="20201029 09:34:04.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.791" level="INFO">VALUE: [0.0014088889999999965, 0.0014086250000000036, 0.0014086249999999967, 0.0014084860000000005, 0.0014087360000000007, 0.0014147080000000006, 0.0014147779999999985, 0.0014145139999999987, 0.0014146530000000018, 0.0014146249999999957, 0.001414776999999999, 0.0014145840000000034, 0.001414694000000001, 0.001414709, 0.0014147080000000006, 0.0014149170000000016, 0.0014148199999999972, 0.0014147499999999993, 0.001414681000000001, 0.001414652999999988, 0.001414874999999996, 0.0014147779999999915, 0.0014145420000000047, 0.0014145420000000047, 0.0014145140000000056, 0.0014146249999999888, 0.0014146389999999953, 0.001414805000000005, 0.0014147219999999933, 0.0014148469999999969, 0.001414763999999999, 0.0014146250000000027, 0.0014146670000000083, 0.001414554999999998, 0.0014146519999999885, 0.001414472, 0.0014145410000000053, 0.001414582999999997, 0.0014146379999999958, 0.0014146800000000015, 0.001414763999999999, 0.0014146670000000083, 0.0014145970000000035, 0.0014148479999999963, 0.0014145970000000035, 0.0014145689999999905, 0.0014146109999999962, 0.0014147640000000128, 0.0014145700000000039, 0.0014145140000000056]</msg>
<status status="PASS" starttime="20201029 09:34:04.787" endtime="20201029 09:34:04.792"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.776" endtime="20201029 09:34:04.794"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.225" endtime="20201029 09:34:04.795"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.196" endtime="20201029 09:34:04.796"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:04.802" endtime="20201029 09:34:04.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.798" endtime="20201029 09:34:04.825"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.846" endtime="20201029 09:34:04.933"></status>
</kw>
<msg timestamp="20201029 09:34:04.934" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.843" endtime="20201029 09:34:04.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:04.940" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:04.936" endtime="20201029 09:34:04.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.943" endtime="20201029 09:34:04.946"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.836" endtime="20201029 09:34:04.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.830" endtime="20201029 09:34:04.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:04.966" endtime="20201029 09:34:05.317"></status>
</kw>
<msg timestamp="20201029 09:34:05.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034956486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036416986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:04.963" endtime="20201029 09:34:05.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034956486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036416986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.326" endtime="20201029 09:34:05.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.345" endtime="20201029 09:34:05.349"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.955" endtime="20201029 09:34:05.350"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.951" endtime="20201029 09:34:05.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:05.361" level="INFO">${PHILIP_RES} = [{'diff': 0.0014604999999999965}, {'diff': 0.0014665420000000012}, {'diff': 0.0014604449999999977}, {'diff': 0.0014602359999999967}, {'diff': 0.0014661519999999983}, {'diff': 0.0014599159999999986}, {...</msg>
<status status="PASS" starttime="20201029 09:34:05.353" endtime="20201029 09:34:05.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:05.372" level="INFO">${RESULT} = {'diff': [0.0014604999999999965, 0.0014665420000000012, 0.0014604449999999977, 0.0014602359999999967, 0.0014661519999999983, 0.0014599159999999986, 0.0014599299999999982, 0.0014662780000000014, 0.0014...</msg>
<status status="PASS" starttime="20201029 09:34:05.363" endtime="20201029 09:34:05.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.383" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:05.381" endtime="20201029 09:34:05.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.388" level="INFO">VALUE: [0.0014604999999999965, 0.0014665420000000012, 0.0014604449999999977, 0.0014602359999999967, 0.0014661519999999983, 0.0014599159999999986, 0.0014599299999999982, 0.0014662780000000014, 0.0014602499999999963, 0.001459999999999996, 0.001466305000000001, 0.001460111, 0.0014599309999999976, 0.0014663060000000006, 0.0014603189999999946, 0.0014601520000000062, 0.0014660969999999995, 0.0014604719999999974, 0.0014601940000000119, 0.0014663609999999994, 0.0014601669999999983, 0.0014600840000000004, 0.0014663609999999994, 0.0014603190000000016, 0.0014601529999999918, 0.001466291999999994, 0.0014602640000000028, 0.0014598470000000002, 0.0014661390000000052, 0.0014600270000000026, 0.00145997199999999, 0.0014662220000000031, 0.0014603480000000002, 0.0014602080000000045, 0.0014663889999999985, 0.0014605979999999935, 0.00146051400000001, 0.0014664580000000038, 0.0014604309999999981, 0.0014603059999999946, 0.0014664590000000033, 0.0014604999999999896, 0.0014604580000000117, 0.0014666110000000065, 0.001460320000000001, 0.001460291999999988, 0.0014664580000000038, 0.0014605830000000014, 0.0014603609999999934, 0.0014664719999999964]</msg>
<status status="PASS" starttime="20201029 09:34:05.385" endtime="20201029 09:34:05.390"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.374" endtime="20201029 09:34:05.392"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.826" endtime="20201029 09:34:05.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:04.797" endtime="20201029 09:34:05.393"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:05.399" endtime="20201029 09:34:05.421"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.396" endtime="20201029 09:34:05.423"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.444" endtime="20201029 09:34:05.533"></status>
</kw>
<msg timestamp="20201029 09:34:05.534" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.441" endtime="20201029 09:34:05.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.541" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:05.536" endtime="20201029 09:34:05.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.543" endtime="20201029 09:34:05.547"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.433" endtime="20201029 09:34:05.549"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.428" endtime="20201029 09:34:05.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.567" endtime="20201029 09:34:05.923"></status>
</kw>
<msg timestamp="20201029 09:34:05.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034752931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036271542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.563" endtime="20201029 09:34:05.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034752931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036271542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:05.933" endtime="20201029 09:34:05.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:05.952" endtime="20201029 09:34:05.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.556" endtime="20201029 09:34:05.957"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.551" endtime="20201029 09:34:05.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:05.968" level="INFO">${PHILIP_RES} = [{'diff': 0.001518610999999996}, {'diff': 0.0015125419999999987}, {'diff': 0.0015126250000000036}, {'diff': 0.0015126390000000031}, {'diff': 0.0015128339999999976}, {'diff': 0.0015128469999999977}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:05.960" endtime="20201029 09:34:05.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:05.977" level="INFO">${RESULT} = {'diff': [0.001518610999999996, 0.0015125419999999987, 0.0015126250000000036, 0.0015126390000000031, 0.0015128339999999976, 0.0015128469999999977, 0.0015196810000000019, 0.0015125830000000048, 0.00151...</msg>
<status status="PASS" starttime="20201029 09:34:05.970" endtime="20201029 09:34:05.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.988" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:05.986" endtime="20201029 09:34:05.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:05.994" level="INFO">VALUE: [0.001518610999999996, 0.0015125419999999987, 0.0015126250000000036, 0.0015126390000000031, 0.0015128339999999976, 0.0015128469999999977, 0.0015196810000000019, 0.0015125830000000048, 0.0015125269999999996, 0.0015126669999999953, 0.001512611000000004, 0.0015128059999999985, 0.0015196669999999954, 0.001512722000000001, 0.0015125969999999975, 0.0015127639999999998, 0.0015127500000000002, 0.0015129720000000013, 0.0015197779999999994, 0.0015126800000000024, 0.0015128060000000054, 0.0015126669999999953, 0.0015125699999999909, 0.0015129159999999892, 0.0015196389999999893, 0.0015128189999999986, 0.0015127639999999998, 0.0015129309999999951, 0.0015128749999999969, 0.001512709000000001, 0.0015195419999999987, 0.0015127360000000006, 0.0015127779999999924, 0.0015126940000000089, 0.001512693999999995, 0.001512916000000003, 0.0015196249999999967, 0.0015126250000000036, 0.001512776999999993, 0.001512582999999998, 0.00151263900000001, 0.0015127639999999998, 0.0015196249999999967, 0.0015127639999999998, 0.0015127639999999998, 0.0015129169999999886, 0.0015127639999999998, 0.0015125420000000056, 0.001519471999999994, 0.001512582999999998]</msg>
<status status="PASS" starttime="20201029 09:34:05.990" endtime="20201029 09:34:05.995"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.979" endtime="20201029 09:34:05.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.424" endtime="20201029 09:34:05.998"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:05.394" endtime="20201029 09:34:05.999"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:06.005" endtime="20201029 09:34:06.026"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.001" endtime="20201029 09:34:06.029"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.061" endtime="20201029 09:34:06.155"></status>
</kw>
<msg timestamp="20201029 09:34:06.156" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.057" endtime="20201029 09:34:06.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.162" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.158" endtime="20201029 09:34:06.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.164" endtime="20201029 09:34:06.168"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.048" endtime="20201029 09:34:06.169"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.042" endtime="20201029 09:34:06.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.187" endtime="20201029 09:34:06.529"></status>
</kw>
<msg timestamp="20201029 09:34:06.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049094778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050668111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.184" endtime="20201029 09:34:06.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049094778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050668111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.538" endtime="20201029 09:34:06.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.556" endtime="20201029 09:34:06.560"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.177" endtime="20201029 09:34:06.562"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.172" endtime="20201029 09:34:06.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:06.572" level="INFO">${PHILIP_RES} = [{'diff': 0.0015733330000000031}, {'diff': 0.0015670970000000034}, {'diff': 0.0015729309999999996}, {'diff': 0.0015670970000000034}, {'diff': 0.0015728610000000018}, {'diff': 0.0015671249999999956}, {...</msg>
<status status="PASS" starttime="20201029 09:34:06.565" endtime="20201029 09:34:06.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:06.581" level="INFO">${RESULT} = {'diff': [0.0015733330000000031, 0.0015670970000000034, 0.0015729309999999996, 0.0015670970000000034, 0.0015728610000000018, 0.0015671249999999956, 0.001572805999999996, 0.0015670269999999986, 0.00157...</msg>
<status status="PASS" starttime="20201029 09:34:06.574" endtime="20201029 09:34:06.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.592" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:06.590" endtime="20201029 09:34:06.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.597" level="INFO">VALUE: [0.0015733330000000031, 0.0015670970000000034, 0.0015729309999999996, 0.0015670970000000034, 0.0015728610000000018, 0.0015671249999999956, 0.001572805999999996, 0.0015670269999999986, 0.0015728470000000022, 0.0015670980000000029, 0.001573000000000005, 0.0015671800000000013, 0.001573083000000003, 0.0015672500000000061, 0.0015729309999999996, 0.0015672909999999984, 0.0015729450000000061, 0.001567110999999996, 0.0015731249999999947, 0.0015671800000000013, 0.0015730410000000111, 0.001567209, 0.001572888999999994, 0.001567110999999996, 0.0015729030000000005, 0.0015671250000000025, 0.0015730139999999976, 0.0015673340000000036, 0.0015730689999999964, 0.0015670549999999978, 0.0015726939999999995, 0.0015669029999999945, 0.001573097999999995, 0.0015674579999999938, 0.0015731120000000015, 0.0015671530000000017, 0.0015728609999999948, 0.001566917000000001, 0.0015729030000000005, 0.0015670970000000034, 0.0015728469999999883, 0.00156734800000001, 0.0015729579999999993, 0.0015671950000000073, 0.001573276999999998, 0.0015674999999999994, 0.0015731810000000068, 0.0015674579999999938, 0.0015733609999999953, 0.001567625000000017]</msg>
<status status="PASS" starttime="20201029 09:34:06.594" endtime="20201029 09:34:06.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.583" endtime="20201029 09:34:06.600"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.031" endtime="20201029 09:34:06.602"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.000" endtime="20201029 09:34:06.602"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:06.608" endtime="20201029 09:34:06.629"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.604" endtime="20201029 09:34:06.631"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.653" endtime="20201029 09:34:06.747"></status>
</kw>
<msg timestamp="20201029 09:34:06.748" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.650" endtime="20201029 09:34:06.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:06.754" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:06.750" endtime="20201029 09:34:06.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.756" endtime="20201029 09:34:06.760"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.643" endtime="20201029 09:34:06.762"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.637" endtime="20201029 09:34:06.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:06.779" endtime="20201029 09:34:07.120"></status>
</kw>
<msg timestamp="20201029 09:34:07.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035394264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037015958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:06.776" endtime="20201029 09:34:07.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035394264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037015958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.129" endtime="20201029 09:34:07.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.148" endtime="20201029 09:34:07.151"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.769" endtime="20201029 09:34:07.153"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.764" endtime="20201029 09:34:07.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:07.164" level="INFO">${PHILIP_RES} = [{'diff': 0.001621694}, {'diff': 0.0016220689999999968}, {'diff': 0.0016280830000000024}, {'diff': 0.0016218470000000026}, {'diff': 0.0016280420000000032}, {'diff': 0.0016218750000000018}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 09:34:07.156" endtime="20201029 09:34:07.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:07.173" level="INFO">${RESULT} = {'diff': [0.001621694, 0.0016220689999999968, 0.0016280830000000024, 0.0016218470000000026, 0.0016280420000000032, 0.0016218750000000018, 0.0016282359999999982, 0.0016218470000000026, 0.00162793000000...</msg>
<status status="PASS" starttime="20201029 09:34:07.166" endtime="20201029 09:34:07.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.184" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:07.181" endtime="20201029 09:34:07.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.190" level="INFO">VALUE: [0.001621694, 0.0016220689999999968, 0.0016280830000000024, 0.0016218470000000026, 0.0016280420000000032, 0.0016218750000000018, 0.0016282359999999982, 0.0016218470000000026, 0.0016279300000000066, 0.001622014000000005, 0.0016279999999999975, 0.0016218190000000035, 0.0016280419999999962, 0.0016218750000000018, 0.00162818, 0.0016218610000000092, 0.0016279589999999983, 0.001622014000000005, 0.0016281110000000015, 0.0016222500000000056, 0.00162830600000001, 0.0016220279999999976, 0.0016282219999999986, 0.0016220839999999959, 0.0016284300000000002, 0.0016222639999999983, 0.0016283200000000025, 0.001622096999999989, 0.0016282360000000051, 0.0016221389999999947, 0.0016282920000000034, 0.0016221810000000003, 0.001628291000000004, 0.0016221530000000012, 0.0016284030000000005, 0.0016222780000000048, 0.0016282640000000043, 0.0016221810000000003, 0.001628291000000004, 0.001622125000000002, 0.0016282780000000108, 0.0016220839999999959, 0.001628319000000003, 0.0016221670000000077, 0.0016281810000000063, 0.0016220279999999976, 0.0016283750000000013, 0.0016224029999999945, 0.0016284440000000067, 0.0016221670000000077]</msg>
<status status="PASS" starttime="20201029 09:34:07.186" endtime="20201029 09:34:07.192"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.175" endtime="20201029 09:34:07.194"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.632" endtime="20201029 09:34:07.195"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:06.603" endtime="20201029 09:34:07.196"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:07.202" endtime="20201029 09:34:07.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.198" endtime="20201029 09:34:07.225"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.246" endtime="20201029 09:34:07.344"></status>
</kw>
<msg timestamp="20201029 09:34:07.345" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.243" endtime="20201029 09:34:07.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.351" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.347" endtime="20201029 09:34:07.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.354" endtime="20201029 09:34:07.357"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.236" endtime="20201029 09:34:07.359"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.230" endtime="20201029 09:34:07.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.377" endtime="20201029 09:34:07.731"></status>
</kw>
<msg timestamp="20201029 09:34:07.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034852375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036535875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.374" endtime="20201029 09:34:07.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034852375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036535875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.740" endtime="20201029 09:34:07.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.759" endtime="20201029 09:34:07.763"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.367" endtime="20201029 09:34:07.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.362" endtime="20201029 09:34:07.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:07.776" level="INFO">${PHILIP_RES} = [{'diff': 0.0016835000000000044}, {'diff': 0.0016761250000000005}, {'diff': 0.0016762499999999972}, {'diff': 0.0016760830000000018}, {'diff': 0.001676221999999998}, {'diff': 0.0016761520000000002}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:07.767" endtime="20201029 09:34:07.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:07.787" level="INFO">${RESULT} = {'diff': [0.0016835000000000044, 0.0016761250000000005, 0.0016762499999999972, 0.0016760830000000018, 0.001676221999999998, 0.0016761520000000002, 0.001683292000000003, 0.0016761949999999984, 0.001676...</msg>
<status status="PASS" starttime="20201029 09:34:07.779" endtime="20201029 09:34:07.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.798" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:07.796" endtime="20201029 09:34:07.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.804" level="INFO">VALUE: [0.0016835000000000044, 0.0016761250000000005, 0.0016762499999999972, 0.0016760830000000018, 0.001676221999999998, 0.0016761520000000002, 0.001683292000000003, 0.0016761949999999984, 0.0016762780000000033, 0.0016761659999999998, 0.0016762770000000038, 0.0016760970000000014, 0.0016833750000000008, 0.0016761669999999992, 0.0016760970000000014, 0.0016763470000000016, 0.0016761520000000002, 0.0016762080000000124, 0.0016833610000000082, 0.0016762779999999894, 0.0016761670000000062, 0.0016760559999999952, 0.0016760690000000023, 0.001675916999999999, 0.0016832360000000046, 0.0016759719999999978, 0.0016761949999999914, 0.0016761669999999923, 0.0016760970000000014, 0.0016760139999999896, 0.0016834440000000062, 0.0016762359999999976, 0.001676222000000005, 0.0016760420000000026, 0.001676139000000007, 0.0016762639999999968, 0.0016832079999999916, 0.001676013000000004, 0.001676027999999996, 0.0016761670000000062, 0.0016759719999999978, 0.0016761389999999932, 0.0016833609999999943, 0.001676208999999998, 0.0016764030000000069, 0.0016760970000000014, 0.0016762500000000041, 0.0016764169999999995, 0.001683485999999998, 0.001676291999999996]</msg>
<status status="PASS" starttime="20201029 09:34:07.801" endtime="20201029 09:34:07.805"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.789" endtime="20201029 09:34:07.807"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.226" endtime="20201029 09:34:07.808"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.197" endtime="20201029 09:34:07.809"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:34:07.815" endtime="20201029 09:34:07.836"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.811" endtime="20201029 09:34:07.838"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.860" endtime="20201029 09:34:07.960"></status>
</kw>
<msg timestamp="20201029 09:34:07.961" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.856" endtime="20201029 09:34:07.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:07.967" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:34:07.963" endtime="20201029 09:34:07.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.969" endtime="20201029 09:34:07.973"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.849" endtime="20201029 09:34:07.975"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.843" endtime="20201029 09:34:07.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:07.993" endtime="20201029 09:34:08.353"></status>
</kw>
<msg timestamp="20201029 09:34:08.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035046736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036778236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:07.990" endtime="20201029 09:34:08.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035046736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036778236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:34:08.362" endtime="20201029 09:34:08.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:34:08.381" endtime="20201029 09:34:08.385"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.982" endtime="20201029 09:34:08.386"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.978" endtime="20201029 09:34:08.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:34:08.397" level="INFO">${PHILIP_RES} = [{'diff': 0.001731499999999997}, {'diff': 0.0017392640000000043}, {'diff': 0.0017326250000000015}, {'diff': 0.0017327779999999973}, {'diff': 0.0017392640000000043}, {'diff': 0.0017326809999999998}, {'...</msg>
<status status="PASS" starttime="20201029 09:34:08.389" endtime="20201029 09:34:08.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:34:08.408" level="INFO">${RESULT} = {'diff': [0.001731499999999997, 0.0017392640000000043, 0.0017326250000000015, 0.0017327779999999973, 0.0017392640000000043, 0.0017326809999999998, 0.0017325000000000049, 0.0017394729999999983, 0.00173...</msg>
<status status="PASS" starttime="20201029 09:34:08.399" endtime="20201029 09:34:08.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.419" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 09:34:08.417" endtime="20201029 09:34:08.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:34:08.425" level="INFO">VALUE: [0.001731499999999997, 0.0017392640000000043, 0.0017326250000000015, 0.0017327779999999973, 0.0017392640000000043, 0.0017326809999999998, 0.0017325000000000049, 0.0017394729999999983, 0.0017327360000000055, 0.0017327779999999973, 0.0017396390000000012, 0.0017325980000000019, 0.0017324439999999997, 0.0017390550000000032, 0.0017324449999999991, 0.001732499999999998, 0.001739207999999992, 0.0017323750000000082, 0.0017322369999999976, 0.0017391110000000015, 0.0017322500000000046, 0.001732334000000002, 0.0017390409999999967, 0.001732290999999997, 0.0017324590000000056, 0.0017390129999999976, 0.0017321669999999928, 0.0017324449999999991, 0.0017392779999999969, 0.0017321110000000084, 0.0017322639999999973, 0.0017389579999999988, 0.0017322359999999981, 0.0017323200000000094, 0.0017390560000000027, 0.0017321530000000002, 0.001732207999999999, 0.001739305999999996, 0.001732499999999998, 0.0017324309999999926, 0.001739388999999994, 0.001732223000000005, 0.0017322780000000038, 0.0017392499999999977, 0.0017323890000000008, 0.0017324309999999926, 0.001739305999999996, 0.0017325970000000024, 0.001732528000000011, 0.001739194999999985]</msg>
<status status="PASS" starttime="20201029 09:34:08.421" endtime="20201029 09:34:08.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:08.410" endtime="20201029 09:34:08.428"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.839" endtime="20201029 09:34:08.429"></status>
</kw>
<status status="PASS" starttime="20201029 09:34:07.810" endtime="20201029 09:34:08.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.557" endtime="20201029 09:34:08.430"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:38.336" endtime="20201029 09:34:08.431" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:33:08.921" endtime="20201029 09:34:08.455"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 09:33:04.964" endtime="20201029 09:34:08.539"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="10" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="10" fail="0">BOARD_samr21-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
