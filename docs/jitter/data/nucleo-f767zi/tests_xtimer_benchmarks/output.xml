<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201010 12:24:53.145" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 12:24:53.705" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 12:24:53.713" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 12:24:54.927" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 12:24:53.704" endtime="20201010 12:24:54.928"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 12:24:54.931" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 12:24:54.929" endtime="20201010 12:24:54.931"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:53.703" endtime="20201010 12:24:54.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:54.933" endtime="20201010 12:24:55.161"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.932" endtime="20201010 12:24:55.162"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.177" endtime="20201010 12:24:55.192"></status>
</kw>
<msg timestamp="20201010 12:24:55.192" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.176" endtime="20201010 12:24:55.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.195" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.193" endtime="20201010 12:24:55.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.198" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:55.196" endtime="20201010 12:24:55.199"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:55.173" endtime="20201010 12:24:55.199"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:55.171" endtime="20201010 12:24:55.200"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.170" endtime="20201010 12:24:55.200"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:55.205" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:55.204" endtime="20201010 12:24:55.205"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.201" endtime="20201010 12:24:55.205"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.169" endtime="20201010 12:24:55.205"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.168" endtime="20201010 12:24:55.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.206" endtime="20201010 12:24:55.208"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.166" endtime="20201010 12:24:55.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.209" endtime="20201010 12:24:55.211"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.163" endtime="20201010 12:24:55.211"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:53.701" endtime="20201010 12:24:55.211"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:55.217" endtime="20201010 12:24:55.237"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.216" endtime="20201010 12:24:55.237"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.251" endtime="20201010 12:24:55.264"></status>
</kw>
<msg timestamp="20201010 12:24:55.265" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.249" endtime="20201010 12:24:55.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.267" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.266" endtime="20201010 12:24:55.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.270" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:55.269" endtime="20201010 12:24:55.271"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:55.247" endtime="20201010 12:24:55.271"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:55.244" endtime="20201010 12:24:55.272"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.243" endtime="20201010 12:24:55.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:55.276" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:55.275" endtime="20201010 12:24:55.276"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.273" endtime="20201010 12:24:55.277"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.242" endtime="20201010 12:24:55.277"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.241" endtime="20201010 12:24:55.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.278" endtime="20201010 12:24:55.279"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.240" endtime="20201010 12:24:55.280"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.238" endtime="20201010 12:24:55.280"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.214" endtime="20201010 12:24:55.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.289" endtime="20201010 12:24:55.298"></status>
</kw>
<msg timestamp="20201010 12:24:55.299" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.287" endtime="20201010 12:24:55.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.301" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.300" endtime="20201010 12:24:55.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.302" endtime="20201010 12:24:55.304"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.283" endtime="20201010 12:24:55.304"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.281" endtime="20201010 12:24:55.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.309" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201010 12:24:55.308" endtime="20201010 12:24:55.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.311" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201010 12:24:55.310" endtime="20201010 12:24:55.311"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.306" endtime="20201010 12:24:55.312"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:24:55.212" endtime="20201010 12:24:55.313" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 12:24:53.255" endtime="20201010 12:24:55.315"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.365" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 12:24:55.373" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 12:24:56.587" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 12:24:55.364" endtime="20201010 12:24:56.588"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.590" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 12:24:56.589" endtime="20201010 12:24:56.590"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.363" endtime="20201010 12:24:56.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:56.593" endtime="20201010 12:24:56.872"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.592" endtime="20201010 12:24:56.873"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.885" endtime="20201010 12:24:56.900"></status>
</kw>
<msg timestamp="20201010 12:24:56.900" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.884" endtime="20201010 12:24:56.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.903" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.902" endtime="20201010 12:24:56.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.906" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:56.904" endtime="20201010 12:24:56.906"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.881" endtime="20201010 12:24:56.907"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.879" endtime="20201010 12:24:56.907"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.878" endtime="20201010 12:24:56.908"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:56.911" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:56.911" endtime="20201010 12:24:56.912"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.909" endtime="20201010 12:24:56.912"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.877" endtime="20201010 12:24:56.912"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.876" endtime="20201010 12:24:56.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.913" endtime="20201010 12:24:56.914"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.875" endtime="20201010 12:24:56.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.916" endtime="20201010 12:24:56.917"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.874" endtime="20201010 12:24:56.918"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.361" endtime="20201010 12:24:56.918"></status>
</kw>
<test id="s1-s2-t1" name="0 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:56.925" endtime="20201010 12:24:56.944"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.922" endtime="20201010 12:24:56.945"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.957" endtime="20201010 12:24:56.971"></status>
</kw>
<msg timestamp="20201010 12:24:56.972" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.956" endtime="20201010 12:24:56.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.975" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.973" endtime="20201010 12:24:56.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.978" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:56.976" endtime="20201010 12:24:56.978"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.953" endtime="20201010 12:24:56.979"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.951" endtime="20201010 12:24:56.979"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.950" endtime="20201010 12:24:56.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:56.983" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:56.983" endtime="20201010 12:24:56.984"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.981" endtime="20201010 12:24:56.984"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.949" endtime="20201010 12:24:56.984"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.948" endtime="20201010 12:24:56.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.985" endtime="20201010 12:24:56.987"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.947" endtime="20201010 12:24:56.987"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.945" endtime="20201010 12:24:56.987"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.921" endtime="20201010 12:24:56.988"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.997" endtime="20201010 12:25:03.012"></status>
</kw>
<msg timestamp="20201010 12:25:03.013" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.995" endtime="20201010 12:25:03.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.018" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:03.016" endtime="20201010 12:25:03.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.021" endtime="20201010 12:25:03.026"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.992" endtime="20201010 12:25:03.027"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.990" endtime="20201010 12:25:03.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:03.033" level="INFO">${RESULT} = {'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:03.029" endtime="20201010 12:25:03.033"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:03.090" level="INFO">${interval} = []</msg>
<status status="PASS" starttime="20201010 12:25:03.035" endtime="20201010 12:25:03.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.098" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:03.096" endtime="20201010 12:25:03.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.102" level="INFO">VALUE: []</msg>
<status status="PASS" starttime="20201010 12:25:03.100" endtime="20201010 12:25:03.103"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.092" endtime="20201010 12:25:03.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.111" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:03.109" endtime="20201010 12:25:03.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.115" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:03.113" endtime="20201010 12:25:03.116"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.105" endtime="20201010 12:25:03.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.131" endtime="20201010 12:25:03.432"></status>
</kw>
<msg timestamp="20201010 12:25:03.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.06286475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.162871153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201010 12:25:03.127" endtime="20201010 12:25:03.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.06286475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.162871153, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201010 12:25:03.436" endtime="20201010 12:25:03.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.443" endtime="20201010 12:25:03.445"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.121" endtime="20201010 12:25:03.446"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.118" endtime="20201010 12:25:03.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:03.450" level="INFO">${FILTERED} = [{'diff': 0.10000640300000008}, {'diff': 0.10000787499999997}, {'diff': 0.10000675000000014}, {'diff': 0.10000670900000008}, {'diff': 0.10000676399999997}, {'diff': 0.10000672200000005}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:03.447" endtime="20201010 12:25:03.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:03.454" level="INFO">${RESULT} = {'diff': [0.10000640300000008, 0.10000787499999997, 0.10000675000000014, 0.10000670900000008, 0.10000676399999997, 0.10000672200000005, 0.1000067360000001, 0.10000673599999987, 0.10000673599999987, 0....</msg>
<status status="PASS" starttime="20201010 12:25:03.451" endtime="20201010 12:25:03.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.458" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:03.457" endtime="20201010 12:25:03.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.461" level="INFO">VALUE: [0.10000640300000008, 0.10000787499999997, 0.10000675000000014, 0.10000670900000008, 0.10000676399999997, 0.10000672200000005, 0.1000067360000001, 0.10000673599999987, 0.10000673599999987, 0.10000680500000003, 0.10000676400000019, 0.10000669499999981, 0.10000677699999994, 0.10000669400000017, 0.10000683300000013, 0.10000672199999983, 0.10000674999999992, 0.10000672200000027, 0.10000681999999994, 4.7199999997360464e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000722200000034, 0.10000677800000002, 0.10000672200000027, 0.1000067360000001, 0.10000670799999956, 0.10000683300000013, 0.10000675000000037, 0.10000680499999959, 4.7199999997360464e-07, 0.10000720800000007, 0.10000676399999975, 0.10000672299999991, 0.10000676399999975, 0.10000673599999921, 0.10000676399999975, 0.10000670899999964, 0.10000676399999975, 0.10000672199999983, 0.10000684699999951, 0.10000677800000002, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201010 12:25:03.460" endtime="20201010 12:25:03.461"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.455" endtime="20201010 12:25:03.462"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.989" endtime="20201010 12:25:03.462"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:24:56.918" endtime="20201010 12:25:03.463" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="5 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:03.470" endtime="20201010 12:25:03.489"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.468" endtime="20201010 12:25:03.490"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.502" endtime="20201010 12:25:03.516"></status>
</kw>
<msg timestamp="20201010 12:25:03.517" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:03.501" endtime="20201010 12:25:03.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.519" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:03.518" endtime="20201010 12:25:03.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.522" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:03.520" endtime="20201010 12:25:03.523"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:03.498" endtime="20201010 12:25:03.523"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:03.496" endtime="20201010 12:25:03.524"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.495" endtime="20201010 12:25:03.524"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:03.528" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:03.527" endtime="20201010 12:25:03.528"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.525" endtime="20201010 12:25:03.528"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.494" endtime="20201010 12:25:03.529"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.493" endtime="20201010 12:25:03.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.529" endtime="20201010 12:25:03.531"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.492" endtime="20201010 12:25:03.531"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.490" endtime="20201010 12:25:03.532"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.467" endtime="20201010 12:25:03.532"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.542" endtime="20201010 12:25:09.568"></status>
</kw>
<msg timestamp="20201010 12:25:09.570" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '10741'}, {'interval': '84225'}, {'interval': '46186'}, {'interval': '37795'}, {'interval': '34698'}...</msg>
<status status="PASS" starttime="20201010 12:25:03.541" endtime="20201010 12:25:09.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.575" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '10741'}, {'interval': '84225'}, {'interval': '46186'}, {'interval': '37795'}, {'interval': '34698'}...</msg>
<status status="PASS" starttime="20201010 12:25:09.572" endtime="20201010 12:25:09.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.577" endtime="20201010 12:25:09.580"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.537" endtime="20201010 12:25:09.581"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.535" endtime="20201010 12:25:09.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:09.588" level="INFO">${RESULT} = {'interval': [10741, 84225, 46186, 37795, 34698], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:09.584" endtime="20201010 12:25:09.588"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:09.598" level="INFO">${interval} = [10741, 84225, 46186, 37795, 34698]</msg>
<status status="PASS" starttime="20201010 12:25:09.590" endtime="20201010 12:25:09.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.605" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:09.603" endtime="20201010 12:25:09.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.610" level="INFO">VALUE: [10741, 84225, 46186, 37795, 34698]</msg>
<status status="PASS" starttime="20201010 12:25:09.608" endtime="20201010 12:25:09.610"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.600" endtime="20201010 12:25:09.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.618" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:09.616" endtime="20201010 12:25:09.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.622" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:09.621" endtime="20201010 12:25:09.623"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.612" endtime="20201010 12:25:09.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.637" endtime="20201010 12:25:09.941"></status>
</kw>
<msg timestamp="20201010 12:25:09.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.063477278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.163483222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:09.634" endtime="20201010 12:25:09.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.063477278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.163483222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:09.945" endtime="20201010 12:25:09.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.953" endtime="20201010 12:25:09.954"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.629" endtime="20201010 12:25:09.955"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.625" endtime="20201010 12:25:09.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:09.959" level="INFO">${FILTERED} = [{'diff': 0.10000594400000007}, {'diff': 0.10000699999999996}, {'diff': 0.10000763899999998}, {'diff': 4.7199999997360464e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.409999999095305e-07}, {'diff...</msg>
<status status="PASS" starttime="20201010 12:25:09.956" endtime="20201010 12:25:09.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:09.964" level="INFO">${RESULT} = {'diff': [0.10000594400000007, 0.10000699999999996, 0.10000763899999998, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999...</msg>
<status status="PASS" starttime="20201010 12:25:09.960" endtime="20201010 12:25:09.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.968" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:09.967" endtime="20201010 12:25:09.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.970" level="INFO">VALUE: [0.10000594400000007, 0.10000699999999996, 0.10000763899999998, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 0.10000712499999986, 0.10000748599999998, 0.10000597300000003, 0.10000706999999975, 0.10000637499999998, 0.10000691600000033, 0.10000679199999984, 0.10000598600000021, 0.10000692999999972, 0.10000756900000018, 0.10000567999999976, 0.100006445, 0.10000816599999984, 0.10000537499999984, 0.10000802799999997, 0.10000598599999977, 0.10000751400000008, 0.10000624999999985, 0.10000730500000055, 0.10000555600000016, 0.10000665300000033, 0.10000805600000007, 0.10000595899999976, 0.1000062779999995, 0.10000763899999932, 0.10000675000000037, 0.10000709699999977, 0.10000608300000025, 0.10000723599999972, 0.100007014, 0.10000537500000029, 0.10000816600000029, 0.10000591699999983, 0.1000065560000003, 0.10000672199999983, 0.10000684799999959, 0.10000683400000021, 0.10000732000000045, 0.1000066249999998]</msg>
<status status="PASS" starttime="20201010 12:25:09.969" endtime="20201010 12:25:09.970"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.965" endtime="20201010 12:25:09.971"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.533" endtime="20201010 12:25:09.971"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:03.464" endtime="20201010 12:25:09.972" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="10 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:09.979" endtime="20201010 12:25:09.999"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.978" endtime="20201010 12:25:09.999"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:10.012" endtime="20201010 12:25:10.026"></status>
</kw>
<msg timestamp="20201010 12:25:10.027" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:10.011" endtime="20201010 12:25:10.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:10.029" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:10.028" endtime="20201010 12:25:10.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:10.033" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:10.030" endtime="20201010 12:25:10.033"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:10.008" endtime="20201010 12:25:10.034"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:10.006" endtime="20201010 12:25:10.035"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.005" endtime="20201010 12:25:10.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:10.039" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:10.038" endtime="20201010 12:25:10.039"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.036" endtime="20201010 12:25:10.039"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.004" endtime="20201010 12:25:10.039"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.003" endtime="20201010 12:25:10.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:10.040" endtime="20201010 12:25:10.042"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.002" endtime="20201010 12:25:10.042"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.000" endtime="20201010 12:25:10.043"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.976" endtime="20201010 12:25:10.043"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:10.052" endtime="20201010 12:25:16.089"></status>
</kw>
<msg timestamp="20201010 12:25:16.090" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '37694'}, {'interval': '23825'}, {'interval': '30414'}, {'interval': '39030'}, {'interval': '45533'...</msg>
<status status="PASS" starttime="20201010 12:25:10.050" endtime="20201010 12:25:16.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.095" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '37694'}, {'interval': '23825'}, {'interval': '30414'}, {'interval': '39030'}, {'interval': '45533'...</msg>
<status status="PASS" starttime="20201010 12:25:16.092" endtime="20201010 12:25:16.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.097" endtime="20201010 12:25:16.101"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.048" endtime="20201010 12:25:16.102"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.046" endtime="20201010 12:25:16.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:16.108" level="INFO">${RESULT} = {'interval': [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:16.104" endtime="20201010 12:25:16.109"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:16.118" level="INFO">${interval} = [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]</msg>
<status status="PASS" starttime="20201010 12:25:16.110" endtime="20201010 12:25:16.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.127" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:16.124" endtime="20201010 12:25:16.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.132" level="INFO">VALUE: [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]</msg>
<status status="PASS" starttime="20201010 12:25:16.130" endtime="20201010 12:25:16.133"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.120" endtime="20201010 12:25:16.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.141" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:16.139" endtime="20201010 12:25:16.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.145" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:16.143" endtime="20201010 12:25:16.146"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.135" endtime="20201010 12:25:16.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.156" endtime="20201010 12:25:16.453"></status>
</kw>
<msg timestamp="20201010 12:25:16.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.064208194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.16421675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201010 12:25:16.154" endtime="20201010 12:25:16.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.064208194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.16421675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201010 12:25:16.457" endtime="20201010 12:25:16.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.465" endtime="20201010 12:25:16.467"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.152" endtime="20201010 12:25:16.467"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.148" endtime="20201010 12:25:16.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:16.471" level="INFO">${FILTERED} = [{'diff': 0.10000855599999992}, {'diff': 5.410000001315751e-07}, {'diff': 5.419999999922709e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'...</msg>
<status status="PASS" starttime="20201010 12:25:16.468" endtime="20201010 12:25:16.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:16.475" level="INFO">${RESULT} = {'diff': [0.10000855599999992, 5.410000001315751e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.41999...</msg>
<status status="PASS" starttime="20201010 12:25:16.472" endtime="20201010 12:25:16.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.480" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:16.479" endtime="20201010 12:25:16.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.482" level="INFO">VALUE: [0.10000855599999992, 5.410000001315751e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 4.73000000056345e-07, 5.409999999095305e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 0.10000615199999974, 0.10000711100000004, 0.1000258469999995, 0.09998804099999958, 0.10000629199999977, 0.1000073480000001, 0.10000615299999982, 0.10000777800000016, 0.10000633299999961, 0.10000609699999963, 0.10000747199999971]</msg>
<status status="PASS" starttime="20201010 12:25:16.481" endtime="20201010 12:25:16.482"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.476" endtime="20201010 12:25:16.483"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.044" endtime="20201010 12:25:16.483"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:09.974" endtime="20201010 12:25:16.484" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="15 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:16.491" endtime="20201010 12:25:16.510"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.489" endtime="20201010 12:25:16.511"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.524" endtime="20201010 12:25:16.538"></status>
</kw>
<msg timestamp="20201010 12:25:16.539" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:16.523" endtime="20201010 12:25:16.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.541" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:16.540" endtime="20201010 12:25:16.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.545" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:16.542" endtime="20201010 12:25:16.545"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:16.520" endtime="20201010 12:25:16.546"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:16.517" endtime="20201010 12:25:16.546"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.516" endtime="20201010 12:25:16.547"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:16.550" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:16.549" endtime="20201010 12:25:16.551"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.547" endtime="20201010 12:25:16.551"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.515" endtime="20201010 12:25:16.551"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.514" endtime="20201010 12:25:16.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.552" endtime="20201010 12:25:16.553"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.513" endtime="20201010 12:25:16.554"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.511" endtime="20201010 12:25:16.554"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.488" endtime="20201010 12:25:16.554"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.563" endtime="20201010 12:25:22.612"></status>
</kw>
<msg timestamp="20201010 12:25:22.613" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '52653'}, {'interval': '31223'}, {'interval': '17873'}, {'interval': '99702'}, {'interval': '86231'...</msg>
<status status="PASS" starttime="20201010 12:25:16.562" endtime="20201010 12:25:22.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.619" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '52653'}, {'interval': '31223'}, {'interval': '17873'}, {'interval': '99702'}, {'interval': '86231'...</msg>
<status status="PASS" starttime="20201010 12:25:22.615" endtime="20201010 12:25:22.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.621" endtime="20201010 12:25:22.624"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.559" endtime="20201010 12:25:22.625"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.557" endtime="20201010 12:25:22.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:22.632" level="INFO">${RESULT} = {'interval': [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:22.628" endtime="20201010 12:25:22.632"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:22.642" level="INFO">${interval} = [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]</msg>
<status status="PASS" starttime="20201010 12:25:22.634" endtime="20201010 12:25:22.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.650" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:22.648" endtime="20201010 12:25:22.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.654" level="INFO">VALUE: [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]</msg>
<status status="PASS" starttime="20201010 12:25:22.652" endtime="20201010 12:25:22.655"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.644" endtime="20201010 12:25:22.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.665" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:22.663" endtime="20201010 12:25:22.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.669" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:22.667" endtime="20201010 12:25:22.670"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.657" endtime="20201010 12:25:22.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.685" endtime="20201010 12:25:22.983"></status>
</kw>
<msg timestamp="20201010 12:25:22.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.064190514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.164198069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:22.681" endtime="20201010 12:25:22.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.064190514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.164198069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:22.987" endtime="20201010 12:25:22.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.995" endtime="20201010 12:25:22.996"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.676" endtime="20201010 12:25:22.997"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.672" endtime="20201010 12:25:22.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:23.001" level="INFO">${FILTERED} = [{'diff': 0.10000755499999991}, {'diff': 0.10000641600000004}, {'diff': 0.10000673599999987}, {'diff': 0.100006708}, {'diff': 0.10000676399999997}, {'diff': 0.10000706999999998}, {'diff': 0.1000078340...</msg>
<status status="PASS" starttime="20201010 12:25:22.998" endtime="20201010 12:25:23.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:23.005" level="INFO">${RESULT} = {'diff': [0.10000755499999991, 0.10000641600000004, 0.10000673599999987, 0.100006708, 0.10000676399999997, 0.10000706999999998, 0.10000783400000013, 5.419999999922709e-07, 5.409999999095305e-07, 4.719...</msg>
<status status="PASS" starttime="20201010 12:25:23.002" endtime="20201010 12:25:23.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:23.009" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:23.008" endtime="20201010 12:25:23.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:23.012" level="INFO">VALUE: [0.10000755499999991, 0.10000641600000004, 0.10000673599999987, 0.100006708, 0.10000676399999997, 0.10000706999999998, 0.10000783400000013, 5.419999999922709e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999994654413e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.10000687500000005, 0.10000715199999988, 0.10000645800000019, 0.10001398599999956, 0.09999950000000002, 0.10000709699999977, 0.10000738899999995, 0.10000616700000009]</msg>
<status status="PASS" starttime="20201010 12:25:23.011" endtime="20201010 12:25:23.013"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.006" endtime="20201010 12:25:23.013"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.555" endtime="20201010 12:25:23.014"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:16.486" endtime="20201010 12:25:23.014" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="20 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:23.021" endtime="20201010 12:25:23.041"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.020" endtime="20201010 12:25:23.041"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:23.054" endtime="20201010 12:25:23.068"></status>
</kw>
<msg timestamp="20201010 12:25:23.069" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:23.053" endtime="20201010 12:25:23.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:23.071" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:23.070" endtime="20201010 12:25:23.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:23.074" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:23.072" endtime="20201010 12:25:23.075"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:23.050" endtime="20201010 12:25:23.075"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:23.048" endtime="20201010 12:25:23.076"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.047" endtime="20201010 12:25:23.076"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:23.080" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:23.079" endtime="20201010 12:25:23.080"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.077" endtime="20201010 12:25:23.081"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.046" endtime="20201010 12:25:23.081"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.045" endtime="20201010 12:25:23.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:23.082" endtime="20201010 12:25:23.083"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.044" endtime="20201010 12:25:23.084"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.042" endtime="20201010 12:25:23.084"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.019" endtime="20201010 12:25:23.084"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:23.094" endtime="20201010 12:25:29.154"></status>
</kw>
<msg timestamp="20201010 12:25:29.155" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '27660'}, {'interval': '24774'}, {'interval': '50283'}, {'interval': '17455'}, {'interval': '56207'...</msg>
<status status="PASS" starttime="20201010 12:25:23.091" endtime="20201010 12:25:29.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.161" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '27660'}, {'interval': '24774'}, {'interval': '50283'}, {'interval': '17455'}, {'interval': '56207'...</msg>
<status status="PASS" starttime="20201010 12:25:29.157" endtime="20201010 12:25:29.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.163" endtime="20201010 12:25:29.166"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.089" endtime="20201010 12:25:29.167"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.087" endtime="20201010 12:25:29.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:29.174" level="INFO">${RESULT} = {'interval': [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:29.170" endtime="20201010 12:25:29.175"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:29.185" level="INFO">${interval} = [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]</msg>
<status status="PASS" starttime="20201010 12:25:29.176" endtime="20201010 12:25:29.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.189" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:29.188" endtime="20201010 12:25:29.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.191" level="INFO">VALUE: [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]</msg>
<status status="PASS" starttime="20201010 12:25:29.190" endtime="20201010 12:25:29.191"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.186" endtime="20201010 12:25:29.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.195" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:29.194" endtime="20201010 12:25:29.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.197" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:29.196" endtime="20201010 12:25:29.197"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.192" endtime="20201010 12:25:29.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.204" endtime="20201010 12:25:29.500"></status>
</kw>
<msg timestamp="20201010 12:25:29.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.064698944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.164706167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:29.203" endtime="20201010 12:25:29.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.064698944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.164706167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:29.504" endtime="20201010 12:25:29.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.512" endtime="20201010 12:25:29.513"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.200" endtime="20201010 12:25:29.514"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.198" endtime="20201010 12:25:29.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:29.518" level="INFO">${FILTERED} = [{'diff': 0.10000722299999998}, {'diff': 0.10000712499999986}, {'diff': 0.10000676300000011}, {'diff': 0.10000636099999993}, {'diff': 0.10000715300000018}, {'diff': 0.10000634699999988}, {'diff': 4.71...</msg>
<status status="PASS" starttime="20201010 12:25:29.515" endtime="20201010 12:25:29.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:29.523" level="INFO">${RESULT} = {'diff': [0.10000722299999998, 0.10000712499999986, 0.10000676300000011, 0.10000636099999993, 0.10000715300000018, 0.10000634699999988, 4.7199999997360464e-07, 5.420000002143155e-07, 0.100007416999999...</msg>
<status status="PASS" starttime="20201010 12:25:29.519" endtime="20201010 12:25:29.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.527" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:29.526" endtime="20201010 12:25:29.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.529" level="INFO">VALUE: [0.10000722299999998, 0.10000712499999986, 0.10000676300000011, 0.10000636099999993, 0.10000715300000018, 0.10000634699999988, 4.7199999997360464e-07, 5.420000002143155e-07, 0.10000741699999982, 0.10000538900000011, 0.10000819500000002, 0.10000644400000036, 0.10001656899999967, 0.09999704099999995, 0.10000662500000024, 0.10000711100000004, 0.1000063889999998, 0.10000716600000015, 0.10000629199999977, 0.10000677800000002, 0.10000704100000002, 0.10000686099999978, 0.10000669500000026, 0.10000677800000002, 0.10000631899999979, 0.10000712500000031, 0.10000637499999998, 0.1000069029999997, 5.410000003536197e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201010 12:25:29.528" endtime="20201010 12:25:29.530"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.523" endtime="20201010 12:25:29.530"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.085" endtime="20201010 12:25:29.530"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:23.016" endtime="20201010 12:25:29.531" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:29.538" endtime="20201010 12:25:29.558"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.537" endtime="20201010 12:25:29.558"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.571" endtime="20201010 12:25:29.586"></status>
</kw>
<msg timestamp="20201010 12:25:29.586" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:29.569" endtime="20201010 12:25:29.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.589" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:29.587" endtime="20201010 12:25:29.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.592" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:29.590" endtime="20201010 12:25:29.593"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:29.567" endtime="20201010 12:25:29.593"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:29.564" endtime="20201010 12:25:29.594"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.563" endtime="20201010 12:25:29.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:29.598" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:29.598" endtime="20201010 12:25:29.599"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.595" endtime="20201010 12:25:29.599"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.562" endtime="20201010 12:25:29.599"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.562" endtime="20201010 12:25:29.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.600" endtime="20201010 12:25:29.602"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.561" endtime="20201010 12:25:29.602"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.559" endtime="20201010 12:25:29.603"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.535" endtime="20201010 12:25:29.603"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.612" endtime="20201010 12:25:35.683"></status>
</kw>
<msg timestamp="20201010 12:25:35.684" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '16291'}, {'interval': '74117'}, {'interval': '74576'}, {'interval': '31746'}, {'interval': '33340'...</msg>
<status status="PASS" starttime="20201010 12:25:29.610" endtime="20201010 12:25:35.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.690" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '16291'}, {'interval': '74117'}, {'interval': '74576'}, {'interval': '31746'}, {'interval': '33340'...</msg>
<status status="PASS" starttime="20201010 12:25:35.686" endtime="20201010 12:25:35.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.692" endtime="20201010 12:25:35.695"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.608" endtime="20201010 12:25:35.696"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.606" endtime="20201010 12:25:35.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:35.704" level="INFO">${RESULT} = {'interval': [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248], 'focus': [...</msg>
<status status="PASS" starttime="20201010 12:25:35.699" endtime="20201010 12:25:35.704"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:35.714" level="INFO">${interval} = [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248]</msg>
<status status="PASS" starttime="20201010 12:25:35.706" endtime="20201010 12:25:35.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.721" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:35.720" endtime="20201010 12:25:35.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.726" level="INFO">VALUE: [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248]</msg>
<status status="PASS" starttime="20201010 12:25:35.724" endtime="20201010 12:25:35.727"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.716" endtime="20201010 12:25:35.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.734" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:35.733" endtime="20201010 12:25:35.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.739" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:35.737" endtime="20201010 12:25:35.739"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.729" endtime="20201010 12:25:35.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.752" endtime="20201010 12:25:36.049"></status>
</kw>
<msg timestamp="20201010 12:25:36.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.065973569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.165981806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:35.751" endtime="20201010 12:25:36.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:36.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.065973569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.165981806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:36.052" endtime="20201010 12:25:36.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:36.060" endtime="20201010 12:25:36.062"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.745" endtime="20201010 12:25:36.062"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.742" endtime="20201010 12:25:36.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:36.067" level="INFO">${FILTERED} = [{'diff': 0.10000823699999994}, {'diff': 0.10000604200000018}, {'diff': 0.10000781999999986}, {'diff': 0.10000631999999987}, {'diff': 0.1000061109999999}, {'diff': 0.10000769499999995}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201010 12:25:36.064" endtime="20201010 12:25:36.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:36.071" level="INFO">${RESULT} = {'diff': [0.10000823699999994, 0.10000604200000018, 0.10000781999999986, 0.10000631999999987, 0.1000061109999999, 0.10000769499999995, 0.10000634699999988, 0.1000061940000001, 0.10000734700000002, 0.1...</msg>
<status status="PASS" starttime="20201010 12:25:36.068" endtime="20201010 12:25:36.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:36.074" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:36.073" endtime="20201010 12:25:36.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:36.077" level="INFO">VALUE: [0.10000823699999994, 0.10000604200000018, 0.10000781999999986, 0.10000631999999987, 0.1000061109999999, 0.10000769499999995, 0.10000634699999988, 0.1000061940000001, 0.10000734700000002, 0.1000060410000001, 0.10000743099999987, 0.10000609700000007, 0.10000573599999996, 0.100041944, 0.09997299999999987, 0.10000590300000001, 0.10000709700000021, 0.10000770800000014, 0.10000677800000002, 0.10000666600000008, 0.10000643099999973, 0.10000608300000025, 0.1000086389999999, 0.10000490299999987, 0.10000722200000034, 0.10000607000000006, 0.10000648599999984, 0.10000712499999986, 0.1000073050000001, 0.10000583400000052, 0.10000669500000026, 0.10000501300000053, 0.10000874999999976, 0.10000761099999966, 0.10001765200000001, 0.09999454200000013, 0.10000729199999991, 0.10000744400000006, 0.10000422199999992, 0.10000954099999948, 0.10000647200000046, 0.10000587499999991, 0.1000063339999997, 0.10000712499999942, 0.10000658399999995, 0.10000716700000023, 0.10000765300000047, 0.10000554199999989, 0.1000070829999995, 0.1000073610000003]</msg>
<status status="PASS" starttime="20201010 12:25:36.076" endtime="20201010 12:25:36.077"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.071" endtime="20201010 12:25:36.078"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.604" endtime="20201010 12:25:36.078"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:29.533" endtime="20201010 12:25:36.079" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="30 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:36.086" endtime="20201010 12:25:36.106"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.085" endtime="20201010 12:25:36.107"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:36.120" endtime="20201010 12:25:36.134"></status>
</kw>
<msg timestamp="20201010 12:25:36.134" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:36.119" endtime="20201010 12:25:36.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:36.137" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:36.136" endtime="20201010 12:25:36.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:36.141" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:36.139" endtime="20201010 12:25:36.141"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:36.116" endtime="20201010 12:25:36.142"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:36.114" endtime="20201010 12:25:36.142"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.113" endtime="20201010 12:25:36.142"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:36.146" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:36.146" endtime="20201010 12:25:36.147"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.143" endtime="20201010 12:25:36.147"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.112" endtime="20201010 12:25:36.147"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.111" endtime="20201010 12:25:36.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:36.148" endtime="20201010 12:25:36.150"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.110" endtime="20201010 12:25:36.150"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.107" endtime="20201010 12:25:36.151"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.083" endtime="20201010 12:25:36.151"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>30</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:36.160" endtime="20201010 12:25:42.242"></status>
</kw>
<msg timestamp="20201010 12:25:42.243" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 30 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '74757'}, {'interval': '70347'}, {'interval': '33034'}, {'interval': '80423'}, {'interval': '79926'...</msg>
<status status="PASS" starttime="20201010 12:25:36.158" endtime="20201010 12:25:42.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.249" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 30 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '74757'}, {'interval': '70347'}, {'interval': '33034'}, {'interval': '80423'}, {'interval': '79926'...</msg>
<status status="PASS" starttime="20201010 12:25:42.246" endtime="20201010 12:25:42.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.252" endtime="20201010 12:25:42.257"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.156" endtime="20201010 12:25:42.258"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.154" endtime="20201010 12:25:42.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:42.266" level="INFO">${RESULT} = {'interval': [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 5814...</msg>
<status status="PASS" starttime="20201010 12:25:42.260" endtime="20201010 12:25:42.266"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:42.276" level="INFO">${interval} = [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 58146, 28867, 669...</msg>
<status status="PASS" starttime="20201010 12:25:42.268" endtime="20201010 12:25:42.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.283" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:42.281" endtime="20201010 12:25:42.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.288" level="INFO">VALUE: [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 58146, 28867, 66958, 17521]</msg>
<status status="PASS" starttime="20201010 12:25:42.286" endtime="20201010 12:25:42.288"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.278" endtime="20201010 12:25:42.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.296" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:42.294" endtime="20201010 12:25:42.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.301" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:42.299" endtime="20201010 12:25:42.301"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.291" endtime="20201010 12:25:42.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.314" endtime="20201010 12:25:42.609"></status>
</kw>
<msg timestamp="20201010 12:25:42.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.066020597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.166027306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:42.312" endtime="20201010 12:25:42.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.066020597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.166027306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:42.613" endtime="20201010 12:25:42.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.620" endtime="20201010 12:25:42.622"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.308" endtime="20201010 12:25:42.623"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.304" endtime="20201010 12:25:42.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:42.627" level="INFO">${FILTERED} = [{'diff': 0.10000670899999986}, {'diff': 0.10000715300000018}, {'diff': 0.10000769399999987}, {'diff': 0.10000656900000005}, {'diff': 0.10000604199999996}, {'diff': 0.10000773600000001}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:42.624" endtime="20201010 12:25:42.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:42.632" level="INFO">${RESULT} = {'diff': [0.10000670899999986, 0.10000715300000018, 0.10000769399999987, 0.10000656900000005, 0.10000604199999996, 0.10000773600000001, 0.10000548600000014, 0.10000666699999994, 0.10000715299999996, 0...</msg>
<status status="PASS" starttime="20201010 12:25:42.628" endtime="20201010 12:25:42.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.636" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:42.635" endtime="20201010 12:25:42.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.638" level="INFO">VALUE: [0.10000670899999986, 0.10000715300000018, 0.10000769399999987, 0.10000656900000005, 0.10000604199999996, 0.10000773600000001, 0.10000548600000014, 0.10000666699999994, 0.10000715299999996, 0.10000741600000018, 0.1000060829999998, 0.10000726399999982, 0.10000711100000004, 5.409999999095305e-07, 5.409999999095305e-07, 4.73000000056345e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7200000041769385e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999995481817e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 5.409999994654413e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.409999994654413e-07, 0.1000068470000004, 0.10000712500000031, 0.10000672200000071]</msg>
<status status="PASS" starttime="20201010 12:25:42.637" endtime="20201010 12:25:42.639"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.633" endtime="20201010 12:25:42.639"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.152" endtime="20201010 12:25:42.640"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:36.081" endtime="20201010 12:25:42.640" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="35 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:42.647" endtime="20201010 12:25:42.667"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.646" endtime="20201010 12:25:42.667"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.680" endtime="20201010 12:25:42.695"></status>
</kw>
<msg timestamp="20201010 12:25:42.696" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:42.678" endtime="20201010 12:25:42.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.698" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:42.697" endtime="20201010 12:25:42.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.701" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:42.699" endtime="20201010 12:25:42.702"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:42.676" endtime="20201010 12:25:42.702"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:42.674" endtime="20201010 12:25:42.703"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.672" endtime="20201010 12:25:42.703"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:42.707" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:42.706" endtime="20201010 12:25:42.707"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.704" endtime="20201010 12:25:42.708"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.672" endtime="20201010 12:25:42.708"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.671" endtime="20201010 12:25:42.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.709" endtime="20201010 12:25:42.710"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.670" endtime="20201010 12:25:42.711"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.668" endtime="20201010 12:25:42.711"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.644" endtime="20201010 12:25:42.711"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>35</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.720" endtime="20201010 12:25:48.813"></status>
</kw>
<msg timestamp="20201010 12:25:48.814" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 35 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '54295'}, {'interval': '37199'}, {'interval': '39990'}, {'interval': '20568'}, {'interval': '10171'...</msg>
<status status="PASS" starttime="20201010 12:25:42.719" endtime="20201010 12:25:48.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.820" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 35 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '54295'}, {'interval': '37199'}, {'interval': '39990'}, {'interval': '20568'}, {'interval': '10171'...</msg>
<status status="PASS" starttime="20201010 12:25:48.816" endtime="20201010 12:25:48.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.822" endtime="20201010 12:25:48.826"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.716" endtime="20201010 12:25:48.827"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.714" endtime="20201010 12:25:48.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:48.835" level="INFO">${RESULT} = {'interval': [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 4353...</msg>
<status status="PASS" starttime="20201010 12:25:48.829" endtime="20201010 12:25:48.835"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:48.845" level="INFO">${interval} = [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 43539, 68459, 281...</msg>
<status status="PASS" starttime="20201010 12:25:48.837" endtime="20201010 12:25:48.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.853" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:48.851" endtime="20201010 12:25:48.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.857" level="INFO">VALUE: [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 43539, 68459, 28154, 76170, 13496, 73105, 63810, 92352, 47335]</msg>
<status status="PASS" starttime="20201010 12:25:48.855" endtime="20201010 12:25:48.858"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.847" endtime="20201010 12:25:48.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.872" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:48.864" endtime="20201010 12:25:48.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.876" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:48.875" endtime="20201010 12:25:48.876"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.860" endtime="20201010 12:25:48.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.883" endtime="20201010 12:25:49.176"></status>
</kw>
<msg timestamp="20201010 12:25:49.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.065583931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.165592528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:48.882" endtime="20201010 12:25:49.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:49.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.065583931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.165592528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:49.180" endtime="20201010 12:25:49.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:49.188" endtime="20201010 12:25:49.190"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.879" endtime="20201010 12:25:49.191"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.878" endtime="20201010 12:25:49.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:49.195" level="INFO">${FILTERED} = [{'diff': 0.10000859699999998}, {'diff': 0.10000670899999986}, {'diff': 0.100006445}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 4.729999998343004e-07}, {'diff': 5.4099...</msg>
<status status="PASS" starttime="20201010 12:25:49.192" endtime="20201010 12:25:49.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:49.199" level="INFO">${RESULT} = {'diff': [0.10000859699999998, 0.10000670899999986, 0.100006445, 5.419999999922709e-07, 5.419999999922709e-07, 4.729999998343004e-07, 5.409999999095305e-07, 0.10000724999999999, 0.1000051390000003, 0....</msg>
<status status="PASS" starttime="20201010 12:25:49.196" endtime="20201010 12:25:49.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:49.203" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:49.202" endtime="20201010 12:25:49.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:49.206" level="INFO">VALUE: [0.10000859699999998, 0.10000670899999986, 0.100006445, 5.419999999922709e-07, 5.419999999922709e-07, 4.729999998343004e-07, 5.409999999095305e-07, 0.10000724999999999, 0.1000051390000003, 0.10002186099999966, 0.09999329200000018, 0.1000067360000001, 0.10000684699999995, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 0.10000734799999922, 0.1000063339999997, 0.10000713899999969, 0.1000050830000001, 0.10000838900000009, 0.10000634799999997, 0.1000069589999999, 0.10000632000000031, 0.10000732000000045, 0.10000637500000042, 0.10000709700000066, 0.10000679099999932, 0.10000683400000021, 0.10000673700000018, 0.10000675000000037, 0.1000063330000005, 0.10000713900000058, 0.10000634799999997]</msg>
<status status="PASS" starttime="20201010 12:25:49.204" endtime="20201010 12:25:49.206"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.200" endtime="20201010 12:25:49.207"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.712" endtime="20201010 12:25:49.207"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:42.642" endtime="20201010 12:25:49.208" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="40 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:49.216" endtime="20201010 12:25:49.235"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.214" endtime="20201010 12:25:49.236"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:49.248" endtime="20201010 12:25:49.263"></status>
</kw>
<msg timestamp="20201010 12:25:49.264" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:49.247" endtime="20201010 12:25:49.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:49.266" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:49.265" endtime="20201010 12:25:49.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:49.269" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:49.267" endtime="20201010 12:25:49.269"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:49.244" endtime="20201010 12:25:49.270"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:49.242" endtime="20201010 12:25:49.270"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.241" endtime="20201010 12:25:49.271"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:49.274" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:49.274" endtime="20201010 12:25:49.275"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.272" endtime="20201010 12:25:49.275"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.240" endtime="20201010 12:25:49.275"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.239" endtime="20201010 12:25:49.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:49.276" endtime="20201010 12:25:49.278"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.238" endtime="20201010 12:25:49.278"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.237" endtime="20201010 12:25:49.279"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.212" endtime="20201010 12:25:49.279"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>40</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:49.287" endtime="20201010 12:25:55.391"></status>
</kw>
<msg timestamp="20201010 12:25:55.391" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 40 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '63910'}, {'interval': '51619'}, {'interval': '66290'}, {'interval': '40380'}, {'interval': '35046'...</msg>
<status status="PASS" starttime="20201010 12:25:49.286" endtime="20201010 12:25:55.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.395" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 40 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '63910'}, {'interval': '51619'}, {'interval': '66290'}, {'interval': '40380'}, {'interval': '35046'...</msg>
<status status="PASS" starttime="20201010 12:25:55.392" endtime="20201010 12:25:55.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.396" endtime="20201010 12:25:55.398"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.283" endtime="20201010 12:25:55.398"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.281" endtime="20201010 12:25:55.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:55.402" level="INFO">${RESULT} = {'interval': [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 1736...</msg>
<status status="PASS" starttime="20201010 12:25:55.399" endtime="20201010 12:25:55.402"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:55.407" level="INFO">${interval} = [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 17369, 86767, 529...</msg>
<status status="PASS" starttime="20201010 12:25:55.403" endtime="20201010 12:25:55.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.410" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:55.409" endtime="20201010 12:25:55.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.412" level="INFO">VALUE: [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674]</msg>
<status status="PASS" starttime="20201010 12:25:55.411" endtime="20201010 12:25:55.413"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.408" endtime="20201010 12:25:55.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.417" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:55.416" endtime="20201010 12:25:55.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.419" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:55.418" endtime="20201010 12:25:55.419"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.414" endtime="20201010 12:25:55.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.426" endtime="20201010 12:25:55.720"></status>
</kw>
<msg timestamp="20201010 12:25:55.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.064641056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.164648667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:55.425" endtime="20201010 12:25:55.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.064641056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.164648667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:55.724" endtime="20201010 12:25:55.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.732" endtime="20201010 12:25:55.734"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.422" endtime="20201010 12:25:55.734"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.421" endtime="20201010 12:25:55.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:55.739" level="INFO">${FILTERED} = [{'diff': 0.10000761100000011}, {'diff': 0.10000668099999999}, {'diff': 0.10000683300000013}, {'diff': 0.10000669500000003}, {'diff': 0.10000676399999997}, {'diff': 0.10000637499999998}, {'diff': 5.41...</msg>
<status status="PASS" starttime="20201010 12:25:55.735" endtime="20201010 12:25:55.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:55.743" level="INFO">${RESULT} = {'diff': [0.10000761100000011, 0.10000668099999999, 0.10000683300000013, 0.10000669500000003, 0.10000676399999997, 0.10000637499999998, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e...</msg>
<status status="PASS" starttime="20201010 12:25:55.740" endtime="20201010 12:25:55.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.747" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:55.746" endtime="20201010 12:25:55.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.750" level="INFO">VALUE: [0.10000761100000011, 0.10000668099999999, 0.10000683300000013, 0.10000669500000003, 0.10000676399999997, 0.10000637499999998, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000700000000018, 0.10000706900000012, 0.10000787499999975, 0.10000623600000003, 0.10000624999999985, 0.10000770899999978, 0.10000675000000037, 0.10000668099999999, 0.10000683299999968, 0.10000676400000019, 0.10000643000000009, 0.10000590300000001, 0.1000068879999998, 0.10000769499999995, 0.1000065969999997, 0.10000688900000032, 0.10000676399999975, 0.10000644399999992, 0.10000572300000021, 0.10000713900000013, 0.10000741700000049, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201010 12:25:55.748" endtime="20201010 12:25:55.750"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.744" endtime="20201010 12:25:55.751"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.280" endtime="20201010 12:25:55.751"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:49.210" endtime="20201010 12:25:55.752" critical="yes"></status>
</test>
<test id="s1-s2-t10" name="50 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:55.759" endtime="20201010 12:25:55.778"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.757" endtime="20201010 12:25:55.779"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.793" endtime="20201010 12:25:55.806"></status>
</kw>
<msg timestamp="20201010 12:25:55.807" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:55.791" endtime="20201010 12:25:55.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.809" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:55.808" endtime="20201010 12:25:55.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.812" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:55.810" endtime="20201010 12:25:55.812"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:55.787" endtime="20201010 12:25:55.813"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:55.785" endtime="20201010 12:25:55.814"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.784" endtime="20201010 12:25:55.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:55.818" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:55.817" endtime="20201010 12:25:55.818"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.815" endtime="20201010 12:25:55.818"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.783" endtime="20201010 12:25:55.818"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.782" endtime="20201010 12:25:55.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.819" endtime="20201010 12:25:55.821"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.781" endtime="20201010 12:25:55.821"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.779" endtime="20201010 12:25:55.822"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.756" endtime="20201010 12:25:55.822"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>50</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.831" endtime="20201010 12:26:01.943"></status>
</kw>
<msg timestamp="20201010 12:26:01.944" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 50 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '14414'}, {'interval': '55147'}, {'interval': '70168'}, {'interval': '61294'}, {'interval': '86720'...</msg>
<status status="PASS" starttime="20201010 12:25:55.829" endtime="20201010 12:26:01.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.951" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 50 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '14414'}, {'interval': '55147'}, {'interval': '70168'}, {'interval': '61294'}, {'interval': '86720'...</msg>
<status status="PASS" starttime="20201010 12:26:01.946" endtime="20201010 12:26:01.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.952" endtime="20201010 12:26:01.953"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.827" endtime="20201010 12:26:01.954"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.824" endtime="20201010 12:26:01.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:01.959" level="INFO">${RESULT} = {'interval': [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 1023...</msg>
<status status="PASS" starttime="20201010 12:26:01.955" endtime="20201010 12:26:01.959"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:01.964" level="INFO">${interval} = [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 10238, 70515, 408...</msg>
<status status="PASS" starttime="20201010 12:26:01.960" endtime="20201010 12:26:01.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.968" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:01.967" endtime="20201010 12:26:01.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.970" level="INFO">VALUE: [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 10238, 70515, 40828, 48500, 94435, 94098, 48103, 90303, 97856, 52511, 42830, 96777, 16054, 65477, 49396, 79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976]</msg>
<status status="PASS" starttime="20201010 12:26:01.969" endtime="20201010 12:26:01.970"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.965" endtime="20201010 12:26:01.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.974" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:01.973" endtime="20201010 12:26:01.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.976" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:01.976" endtime="20201010 12:26:01.977"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.972" endtime="20201010 12:26:01.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.983" endtime="20201010 12:26:02.280"></status>
</kw>
<msg timestamp="20201010 12:26:02.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.154553833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.254561389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:01.982" endtime="20201010 12:26:02.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.154553833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.254561389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:02.284" endtime="20201010 12:26:02.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.292" endtime="20201010 12:26:02.294"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.980" endtime="20201010 12:26:02.294"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.978" endtime="20201010 12:26:02.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:02.298" level="INFO">${FILTERED} = [{'diff': 0.100007556}, {'diff': 0.10000672200000005}, {'diff': 0.10000676399999997}, {'diff': 0.10000669399999995}, {'diff': 0.10000674999999992}, {'diff': 0.10000504099999996}, {'diff': 0.1000089170...</msg>
<status status="PASS" starttime="20201010 12:26:02.295" endtime="20201010 12:26:02.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:02.303" level="INFO">${RESULT} = {'diff': [0.100007556, 0.10000672200000005, 0.10000676399999997, 0.10000669399999995, 0.10000674999999992, 0.10000504099999996, 0.10000891700000003, 0.100034014, 0.09997883299999999, 0.100005472000000...</msg>
<status status="PASS" starttime="20201010 12:26:02.299" endtime="20201010 12:26:02.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.307" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:02.306" endtime="20201010 12:26:02.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.310" level="INFO">VALUE: [0.100007556, 0.10000672200000005, 0.10000676399999997, 0.10000669399999995, 0.10000674999999992, 0.10000504099999996, 0.10000891700000003, 0.100034014, 0.09997883299999999, 0.10000547200000032, 0.10000818099999975, 0.10000677699999994, 0.10000632000000031, 0.10000713900000013, 0.10000677799999957, 5.409999999095305e-07, 4.73000000056345e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999995481817e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 4.73000000056345e-07, 0.10000724999999999, 0.10000688899999943, 0.10000677800000002, 0.10000661100000041, 0.10000588900000018, 0.10000777700000008, 0.1000063889999998, 0.10000715199999988]</msg>
<status status="PASS" starttime="20201010 12:26:02.308" endtime="20201010 12:26:02.310"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.304" endtime="20201010 12:26:02.311"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.823" endtime="20201010 12:26:02.311"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:55.753" endtime="20201010 12:26:02.312" critical="yes"></status>
</test>
<test id="s1-s2-t11" name="75 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:02.319" endtime="20201010 12:26:02.338"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.317" endtime="20201010 12:26:02.339"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.352" endtime="20201010 12:26:02.366"></status>
</kw>
<msg timestamp="20201010 12:26:02.366" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:02.350" endtime="20201010 12:26:02.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.369" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:02.367" endtime="20201010 12:26:02.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.371" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:02.370" endtime="20201010 12:26:02.372"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:02.348" endtime="20201010 12:26:02.372"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:02.345" endtime="20201010 12:26:02.373"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.344" endtime="20201010 12:26:02.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:02.377" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:02.376" endtime="20201010 12:26:02.377"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.374" endtime="20201010 12:26:02.378"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.343" endtime="20201010 12:26:02.378"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.342" endtime="20201010 12:26:02.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.379" endtime="20201010 12:26:02.380"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.341" endtime="20201010 12:26:02.381"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.339" endtime="20201010 12:26:02.381"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.316" endtime="20201010 12:26:02.381"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>75</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.391" endtime="20201010 12:26:08.556"></status>
</kw>
<msg timestamp="20201010 12:26:08.558" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 75 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '81075'}, {'interval': '58727'}, {'interval': '40937'}, {'interval': '10090'}, {'interval': '32175'...</msg>
<status status="PASS" starttime="20201010 12:26:02.390" endtime="20201010 12:26:08.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.564" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 75 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '81075'}, {'interval': '58727'}, {'interval': '40937'}, {'interval': '10090'}, {'interval': '32175'...</msg>
<status status="PASS" starttime="20201010 12:26:08.560" endtime="20201010 12:26:08.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.565" endtime="20201010 12:26:08.567"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.387" endtime="20201010 12:26:08.568"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.384" endtime="20201010 12:26:08.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:08.573" level="INFO">${RESULT} = {'interval': [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118, 68312, 54751, 8016...</msg>
<status status="PASS" starttime="20201010 12:26:08.569" endtime="20201010 12:26:08.573"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:08.577" level="INFO">${interval} = [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118, 68312, 54751, 80163, 54227, 583...</msg>
<status status="PASS" starttime="20201010 12:26:08.574" endtime="20201010 12:26:08.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.582" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:08.580" endtime="20201010 12:26:08.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.584" level="INFO">VALUE: [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118, 68312, 54751, 80163, 54227, 58312, 43968, 57316, 22291, 26892, 71562, 69729, 10869, 16200, 53697, 30276, 60725, 22110, 59120, 24460, 36665, 10677, 44111, 16864, 64627, 87787, 52486, 10571, 13830, 59376, 68287, 10851, 19328, 95360, 64761, 16060, 56217, 52889, 38375, 35488, 20496, 81475, 86486, 44426, 74127, 62725, 66508, 29656, 17750, 43477, 47133, 75567]</msg>
<status status="PASS" starttime="20201010 12:26:08.583" endtime="20201010 12:26:08.585"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.578" endtime="20201010 12:26:08.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.589" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:08.588" endtime="20201010 12:26:08.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.591" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:08.590" endtime="20201010 12:26:08.591"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.586" endtime="20201010 12:26:08.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.598" endtime="20201010 12:26:08.894"></status>
</kw>
<msg timestamp="20201010 12:26:08.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.156409375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.256415958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:08.596" endtime="20201010 12:26:08.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.156409375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.256415958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:08.898" endtime="20201010 12:26:08.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.906" endtime="20201010 12:26:08.907"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.594" endtime="20201010 12:26:08.908"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.592" endtime="20201010 12:26:08.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:08.912" level="INFO">${FILTERED} = [{'diff': 0.1000065830000001}, {'diff': 0.10000776399999989}, {'diff': 5.419999999922709e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'dif...</msg>
<status status="PASS" starttime="20201010 12:26:08.909" endtime="20201010 12:26:08.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:08.916" level="INFO">${RESULT} = {'diff': [0.1000065830000001, 0.10000776399999989, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7200000019564925e-07, 5.419999999922709e-07, 4.7199999...</msg>
<status status="PASS" starttime="20201010 12:26:08.913" endtime="20201010 12:26:08.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.921" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:08.920" endtime="20201010 12:26:08.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.923" level="INFO">VALUE: [0.1000065830000001, 0.10000776399999989, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7200000019564925e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 0.10000740300000022, 0.10000540199999985, 0.10002518100000035, 0.09998843099999988, 0.1000059870000003, 0.10000838900000009, 5.419999999922709e-07, 5.410000003536197e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 0.10000705599999993, 0.1000067360000001, 0.10000676399999975, 0.10000691699999997, 0.10000654200000003, 0.10001690200000013, 0.09999673599999959, 0.10000658299999987, 0.100062973, 0.09995068100000015, 0.10000674999999948, 0.10000676399999975, 0.10000676399999975, 4.73000000056345e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201010 12:26:08.922" endtime="20201010 12:26:08.924"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.917" endtime="20201010 12:26:08.924"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.382" endtime="20201010 12:26:08.925"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:02.313" endtime="20201010 12:26:08.925" critical="yes"></status>
</test>
<test id="s1-s2-t12" name="100 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:08.932" endtime="20201010 12:26:08.952"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.931" endtime="20201010 12:26:08.952"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.965" endtime="20201010 12:26:08.978"></status>
</kw>
<msg timestamp="20201010 12:26:08.979" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:08.964" endtime="20201010 12:26:08.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.981" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:08.980" endtime="20201010 12:26:08.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.984" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:08.982" endtime="20201010 12:26:08.984"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:08.961" endtime="20201010 12:26:08.985"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:08.959" endtime="20201010 12:26:08.986"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.958" endtime="20201010 12:26:08.986"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:08.990" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:08.989" endtime="20201010 12:26:08.990"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.987" endtime="20201010 12:26:08.990"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.957" endtime="20201010 12:26:08.990"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.956" endtime="20201010 12:26:08.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.991" endtime="20201010 12:26:08.993"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.955" endtime="20201010 12:26:08.993"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.953" endtime="20201010 12:26:08.994"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.930" endtime="20201010 12:26:08.994"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>100</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:09.004" endtime="20201010 12:26:15.210"></status>
</kw>
<msg timestamp="20201010 12:26:15.211" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 100 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '25479'}, {'interval': '99747'}, {'interval': '10545'}, {'interval': '53347'}, {'interval': '97917...</msg>
<status status="PASS" starttime="20201010 12:26:09.002" endtime="20201010 12:26:15.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.219" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 100 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '25479'}, {'interval': '99747'}, {'interval': '10545'}, {'interval': '53347'}, {'interval': '97917...</msg>
<status status="PASS" starttime="20201010 12:26:15.213" endtime="20201010 12:26:15.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.221" endtime="20201010 12:26:15.225"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.999" endtime="20201010 12:26:15.226"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.996" endtime="20201010 12:26:15.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:15.239" level="INFO">${RESULT} = {'interval': [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946, 34329, 54047, 2127...</msg>
<status status="PASS" starttime="20201010 12:26:15.228" endtime="20201010 12:26:15.240"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:15.250" level="INFO">${interval} = [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946, 34329, 54047, 21276, 78931, 960...</msg>
<status status="PASS" starttime="20201010 12:26:15.241" endtime="20201010 12:26:15.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.258" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:15.256" endtime="20201010 12:26:15.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.263" level="INFO">VALUE: [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946, 34329, 54047, 21276, 78931, 96011, 66721, 98428, 10018, 21350, 57891, 44237, 47888, 49872, 48763, 80263, 93240, 65542, 69880, 49052, 60186, 16103, 70949, 81316, 74540, 78692, 31251, 92771, 27327, 95171, 73283, 44316, 50344, 95943, 37655, 81039, 11783, 32679, 42216, 57297, 47170, 32344, 72256, 48132, 42552, 45395, 13114, 21516, 47276, 37671, 70189, 59386, 64123, 49679, 14446, 29154, 60416, 52975, 46707, 30305, 37643, 98500, 39715, 31020, 98902, 61399, 58345, 20890, 33209, 90081, 27893, 71353, 26989, 20846, 78625, 56472, 100987]</msg>
<status status="PASS" starttime="20201010 12:26:15.261" endtime="20201010 12:26:15.263"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.252" endtime="20201010 12:26:15.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.272" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:15.270" endtime="20201010 12:26:15.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.276" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:15.274" endtime="20201010 12:26:15.276"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.266" endtime="20201010 12:26:15.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.284" endtime="20201010 12:26:15.579"></status>
</kw>
<msg timestamp="20201010 12:26:15.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.246168639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.346131236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:15.282" endtime="20201010 12:26:15.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.246168639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.346131236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:15.583" endtime="20201010 12:26:15.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.591" endtime="20201010 12:26:15.593"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.280" endtime="20201010 12:26:15.593"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.278" endtime="20201010 12:26:15.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:15.598" level="INFO">${FILTERED} = [{'diff': 0.09996259699999999}, {'diff': 0.10000695900000012}, {'diff': 0.100004875}, {'diff': 0.10000861100000003}, {'diff': 0.10003620800000013}, {'diff': 0.09997705499999987}, {'diff': 0.1000069299...</msg>
<status status="PASS" starttime="20201010 12:26:15.594" endtime="20201010 12:26:15.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:15.604" level="INFO">${RESULT} = {'diff': [0.09996259699999999, 0.10000695900000012, 0.100004875, 0.10000861100000003, 0.10003620800000013, 0.09997705499999987, 0.10000692999999994, 0.10000677800000002, 0.10000668099999999, 0.1000067...</msg>
<status status="PASS" starttime="20201010 12:26:15.599" endtime="20201010 12:26:15.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.608" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:15.607" endtime="20201010 12:26:15.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.611" level="INFO">VALUE: [0.09996259699999999, 0.10000695900000012, 0.100004875, 0.10000861100000003, 0.10003620800000013, 0.09997705499999987, 0.10000692999999994, 0.10000677800000002, 0.10000668099999999, 0.10000676399999975, 0.10000669400000017, 0.10000658299999987, 0.1000282079999999, 0.09998548600000001, 0.10000493099999996, 0.10006347200000043, 5.419999999922709e-07, 4.73000000056345e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.409999999095305e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.73000000056345e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.410000003536197e-07, 4.73000000056345e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201010 12:26:15.609" endtime="20201010 12:26:15.611"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.605" endtime="20201010 12:26:15.612"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.995" endtime="20201010 12:26:15.612"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:08.927" endtime="20201010 12:26:15.613" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 12:24:55.320" endtime="20201010 12:26:15.626"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201010 12:24:53.148" endtime="20201010 12:26:15.671"></status>
</suite>
<statistics>
<total>
<stat pass="13" fail="0">Critical Tests</stat>
<stat pass="13" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="13" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="13" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="13" fail="0">dev</stat>
</tag>
<suite>
<stat pass="13" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="12" fail="0" id="s1-s2" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
