<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201010 12:24:53.001" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 12:24:53.574" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 12:24:53.582" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 12:24:54.572" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 12:24:53.572" endtime="20201010 12:24:54.573"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 12:24:54.576" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 12:24:54.574" endtime="20201010 12:24:54.576"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:53.571" endtime="20201010 12:24:54.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:54.579" endtime="20201010 12:24:54.764"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.577" endtime="20201010 12:24:54.765"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:54.778" endtime="20201010 12:24:54.798"></status>
</kw>
<msg timestamp="20201010 12:24:54.798" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:54.776" endtime="20201010 12:24:54.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:54.801" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:54.799" endtime="20201010 12:24:54.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:54.804" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:54.802" endtime="20201010 12:24:54.805"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:54.774" endtime="20201010 12:24:54.806"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:54.771" endtime="20201010 12:24:54.806"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.770" endtime="20201010 12:24:54.806"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:54.811" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:54.810" endtime="20201010 12:24:54.812"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.807" endtime="20201010 12:24:54.812"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.769" endtime="20201010 12:24:54.812"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.769" endtime="20201010 12:24:54.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:54.813" endtime="20201010 12:24:54.815"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.767" endtime="20201010 12:24:54.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:54.816" endtime="20201010 12:24:54.818"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.766" endtime="20201010 12:24:54.818"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:53.569" endtime="20201010 12:24:54.818"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:54.825" endtime="20201010 12:24:54.845"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.823" endtime="20201010 12:24:54.845"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:54.860" endtime="20201010 12:24:54.878"></status>
</kw>
<msg timestamp="20201010 12:24:54.879" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:54.858" endtime="20201010 12:24:54.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:54.882" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:54.880" endtime="20201010 12:24:54.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:54.885" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:54.883" endtime="20201010 12:24:54.885"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:54.855" endtime="20201010 12:24:54.886"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:54.853" endtime="20201010 12:24:54.886"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.851" endtime="20201010 12:24:54.887"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:54.891" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:54.890" endtime="20201010 12:24:54.891"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.888" endtime="20201010 12:24:54.891"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.850" endtime="20201010 12:24:54.891"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.849" endtime="20201010 12:24:54.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:54.892" endtime="20201010 12:24:54.894"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.848" endtime="20201010 12:24:54.894"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.846" endtime="20201010 12:24:54.895"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.822" endtime="20201010 12:24:54.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:54.904" endtime="20201010 12:24:54.917"></status>
</kw>
<msg timestamp="20201010 12:24:54.917" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:54.902" endtime="20201010 12:24:54.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:54.920" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:54.918" endtime="20201010 12:24:54.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:54.921" endtime="20201010 12:24:54.923"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.899" endtime="20201010 12:24:54.924"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.896" endtime="20201010 12:24:54.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:24:54.930" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201010 12:24:54.928" endtime="20201010 12:24:54.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:24:54.932" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201010 12:24:54.931" endtime="20201010 12:24:54.932"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.925" endtime="20201010 12:24:54.933"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:24:54.819" endtime="20201010 12:24:54.934" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 12:24:53.112" endtime="20201010 12:24:54.937"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 12:24:54.988" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 12:24:54.996" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 12:24:56.037" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 12:24:54.987" endtime="20201010 12:24:56.038"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.041" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 12:24:56.039" endtime="20201010 12:24:56.041"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.986" endtime="20201010 12:24:56.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:56.044" endtime="20201010 12:24:56.269"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.042" endtime="20201010 12:24:56.270"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.282" endtime="20201010 12:24:56.302"></status>
</kw>
<msg timestamp="20201010 12:24:56.303" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.281" endtime="20201010 12:24:56.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.305" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.304" endtime="20201010 12:24:56.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.309" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:56.307" endtime="20201010 12:24:56.309"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.278" endtime="20201010 12:24:56.310"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.276" endtime="20201010 12:24:56.310"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.275" endtime="20201010 12:24:56.311"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:56.314" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:56.314" endtime="20201010 12:24:56.315"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.311" endtime="20201010 12:24:56.315"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.274" endtime="20201010 12:24:56.315"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.273" endtime="20201010 12:24:56.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.316" endtime="20201010 12:24:56.318"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.272" endtime="20201010 12:24:56.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.319" endtime="20201010 12:24:56.321"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.270" endtime="20201010 12:24:56.321"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.984" endtime="20201010 12:24:56.322"></status>
</kw>
<test id="s1-s2-t1" name="0 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:56.329" endtime="20201010 12:24:56.348"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.326" endtime="20201010 12:24:56.349"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.363" endtime="20201010 12:24:56.382"></status>
</kw>
<msg timestamp="20201010 12:24:56.382" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.361" endtime="20201010 12:24:56.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.385" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.384" endtime="20201010 12:24:56.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.388" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:56.386" endtime="20201010 12:24:56.389"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.358" endtime="20201010 12:24:56.389"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.356" endtime="20201010 12:24:56.390"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.354" endtime="20201010 12:24:56.390"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:56.395" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:56.394" endtime="20201010 12:24:56.396"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.392" endtime="20201010 12:24:56.396"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.353" endtime="20201010 12:24:56.396"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.353" endtime="20201010 12:24:56.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.397" endtime="20201010 12:24:56.399"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.351" endtime="20201010 12:24:56.399"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.350" endtime="20201010 12:24:56.400"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.325" endtime="20201010 12:24:56.400"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.409" endtime="20201010 12:25:02.429"></status>
</kw>
<msg timestamp="20201010 12:25:02.430" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.408" endtime="20201010 12:25:02.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.435" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:02.432" endtime="20201010 12:25:02.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:02.438" endtime="20201010 12:25:02.443"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.405" endtime="20201010 12:25:02.444"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.403" endtime="20201010 12:25:02.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:02.451" level="INFO">${RESULT} = {'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:02.447" endtime="20201010 12:25:02.451"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:02.499" level="INFO">${interval} = []</msg>
<status status="PASS" starttime="20201010 12:25:02.453" endtime="20201010 12:25:02.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.503" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:02.502" endtime="20201010 12:25:02.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.505" level="INFO">VALUE: []</msg>
<status status="PASS" starttime="20201010 12:25:02.504" endtime="20201010 12:25:02.505"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.500" endtime="20201010 12:25:02.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.510" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:02.509" endtime="20201010 12:25:02.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.512" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:02.511" endtime="20201010 12:25:02.512"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.507" endtime="20201010 12:25:02.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:02.520" endtime="20201010 12:25:02.812"></status>
</kw>
<msg timestamp="20201010 12:25:02.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.070545917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.17049325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201010 12:25:02.518" endtime="20201010 12:25:02.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.070545917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.17049325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201010 12:25:02.815" endtime="20201010 12:25:02.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:02.822" endtime="20201010 12:25:02.824"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.515" endtime="20201010 12:25:02.825"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.513" endtime="20201010 12:25:02.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:02.829" level="INFO">${FILTERED} = [{'diff': 0.09994733300000003}, {'diff': 0.10000869400000001}, {'diff': 0.10000874999999998}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff'...</msg>
<status status="PASS" starttime="20201010 12:25:02.826" endtime="20201010 12:25:02.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:02.832" level="INFO">${RESULT} = {'diff': [0.09994733300000003, 0.10000869400000001, 0.10000874999999998, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.100009236, 0.10000869400000001, 0.10000870799999984, 0.1...</msg>
<status status="PASS" starttime="20201010 12:25:02.830" endtime="20201010 12:25:02.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.838" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:02.836" endtime="20201010 12:25:02.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.840" level="INFO">VALUE: [0.09994733300000003, 0.10000869400000001, 0.10000874999999998, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.100009236, 0.10000869400000001, 0.10000870799999984, 0.10000873600000038, 0.10000922299999981, 0.10000869500000009, 0.10000868100000027, 0.10000874999999976, 0.10000922200000018, 0.10000869400000001, 0.10000869400000001, 0.10000870799999984, 0.10000870799999984, 0.10000869500000009, 0.10000869500000009, 0.1000087500000002, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 0.10000922199999973, 0.10000870799999984, 0.10000870799999984, 0.10000873599999949, 5.419999995481817e-07, 5.419999995481817e-07, 0.10000922299999981, 0.10000927699999984, 5.419999995481817e-07, 0.10000917999999981, 0.10000875000000065, 5.409999994654413e-07, 0.10000927700000073, 0.10000922199999973, 0.10000870799999984]</msg>
<status status="PASS" starttime="20201010 12:25:02.839" endtime="20201010 12:25:02.840"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.833" endtime="20201010 12:25:02.841"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.401" endtime="20201010 12:25:02.841"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:24:56.322" endtime="20201010 12:25:02.844" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="5 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:02.853" endtime="20201010 12:25:02.872"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.851" endtime="20201010 12:25:02.873"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:02.886" endtime="20201010 12:25:02.904"></status>
</kw>
<msg timestamp="20201010 12:25:02.904" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:02.884" endtime="20201010 12:25:02.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.907" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:02.905" endtime="20201010 12:25:02.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.910" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:02.908" endtime="20201010 12:25:02.911"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:02.882" endtime="20201010 12:25:02.911"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:02.879" endtime="20201010 12:25:02.912"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.878" endtime="20201010 12:25:02.912"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:02.916" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:02.915" endtime="20201010 12:25:02.916"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.913" endtime="20201010 12:25:02.916"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.877" endtime="20201010 12:25:02.917"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.877" endtime="20201010 12:25:02.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:02.918" endtime="20201010 12:25:02.919"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.875" endtime="20201010 12:25:02.920"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.873" endtime="20201010 12:25:02.920"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.850" endtime="20201010 12:25:02.920"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:02.930" endtime="20201010 12:25:08.947"></status>
</kw>
<msg timestamp="20201010 12:25:08.948" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '10741'}, {'interval': '84225'}, {'interval': '46186'}, {'interval': '37795'}, {'interval': '34698'}...</msg>
<status status="PASS" starttime="20201010 12:25:02.929" endtime="20201010 12:25:08.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:08.954" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '10741'}, {'interval': '84225'}, {'interval': '46186'}, {'interval': '37795'}, {'interval': '34698'}...</msg>
<status status="PASS" starttime="20201010 12:25:08.951" endtime="20201010 12:25:08.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:08.956" endtime="20201010 12:25:08.960"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.925" endtime="20201010 12:25:08.961"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.923" endtime="20201010 12:25:08.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:08.967" level="INFO">${RESULT} = {'interval': [10741, 84225, 46186, 37795, 34698], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:08.963" endtime="20201010 12:25:08.967"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:08.978" level="INFO">${interval} = [10741, 84225, 46186, 37795, 34698]</msg>
<status status="PASS" starttime="20201010 12:25:08.969" endtime="20201010 12:25:08.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:08.985" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:08.983" endtime="20201010 12:25:08.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:08.990" level="INFO">VALUE: [10741, 84225, 46186, 37795, 34698]</msg>
<status status="PASS" starttime="20201010 12:25:08.988" endtime="20201010 12:25:08.990"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:08.979" endtime="20201010 12:25:08.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:08.999" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:08.997" endtime="20201010 12:25:09.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.003" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:09.001" endtime="20201010 12:25:09.004"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:08.993" endtime="20201010 12:25:09.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.019" endtime="20201010 12:25:09.313"></status>
</kw>
<msg timestamp="20201010 12:25:09.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.067614972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.167624222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:09.016" endtime="20201010 12:25:09.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.067614972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.167624222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:09.318" endtime="20201010 12:25:09.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.325" endtime="20201010 12:25:09.327"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.010" endtime="20201010 12:25:09.328"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.007" endtime="20201010 12:25:09.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:09.332" level="INFO">${FILTERED} = [{'diff': 0.10000924999999983}, {'diff': 0.10000870800000006}, {'diff': 0.10000873599999993}, {'diff': 0.10000917999999981}, {'diff': 0.1000087500000002}, {'diff': 0.100009236}, {'diff': 0.10000873599...</msg>
<status status="PASS" starttime="20201010 12:25:09.329" endtime="20201010 12:25:09.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:09.336" level="INFO">${RESULT} = {'diff': [0.10000924999999983, 0.10000870800000006, 0.10000873599999993, 0.10000917999999981, 0.1000087500000002, 0.100009236, 0.10000873599999993, 5.419999999922709e-07, 5.419999999922709e-07, 5.4199...</msg>
<status status="PASS" starttime="20201010 12:25:09.333" endtime="20201010 12:25:09.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.341" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:09.340" endtime="20201010 12:25:09.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.343" level="INFO">VALUE: [0.10000924999999983, 0.10000870800000006, 0.10000873599999993, 0.10000917999999981, 0.1000087500000002, 0.100009236, 0.10000873599999993, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000927799999992, 0.10000920899999999, 0.10000869500000009, 0.10000870900000036, 0.10000869499999965, 0.10000872299999974, 0.10000869500000009, 0.10000869500000009, 0.1000087220000001, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000920800000035, 0.10000876299999995, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 0.10000922199999973, 0.10000869399999956, 0.1000087220000001, 0.10000920899999954, 0.10000869499999965, 0.10000869499999965, 0.10000872300000019, 5.420000004363601e-07, 5.419999995481817e-07, 0.10000924999999938, 0.10000922199999973, 0.10000870799999984, 0.10000869400000045, 0.10000873600000038]</msg>
<status status="PASS" starttime="20201010 12:25:09.342" endtime="20201010 12:25:09.343"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.337" endtime="20201010 12:25:09.344"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.921" endtime="20201010 12:25:09.344"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:02.847" endtime="20201010 12:25:09.345" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="10 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:09.353" endtime="20201010 12:25:09.372"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.351" endtime="20201010 12:25:09.373"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.386" endtime="20201010 12:25:09.404"></status>
</kw>
<msg timestamp="20201010 12:25:09.404" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:09.384" endtime="20201010 12:25:09.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.407" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:09.405" endtime="20201010 12:25:09.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.410" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:09.408" endtime="20201010 12:25:09.410"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:09.382" endtime="20201010 12:25:09.411"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:09.379" endtime="20201010 12:25:09.412"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.378" endtime="20201010 12:25:09.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:09.416" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:09.415" endtime="20201010 12:25:09.416"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.413" endtime="20201010 12:25:09.417"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.377" endtime="20201010 12:25:09.417"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.377" endtime="20201010 12:25:09.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.418" endtime="20201010 12:25:09.419"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.375" endtime="20201010 12:25:09.420"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.373" endtime="20201010 12:25:09.420"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.349" endtime="20201010 12:25:09.420"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.431" endtime="20201010 12:25:15.458"></status>
</kw>
<msg timestamp="20201010 12:25:15.459" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '37694'}, {'interval': '23825'}, {'interval': '30414'}, {'interval': '39030'}, {'interval': '45533'...</msg>
<status status="PASS" starttime="20201010 12:25:09.430" endtime="20201010 12:25:15.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:15.464" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '37694'}, {'interval': '23825'}, {'interval': '30414'}, {'interval': '39030'}, {'interval': '45533'...</msg>
<status status="PASS" starttime="20201010 12:25:15.461" endtime="20201010 12:25:15.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:15.467" endtime="20201010 12:25:15.470"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.427" endtime="20201010 12:25:15.471"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.423" endtime="20201010 12:25:15.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:15.478" level="INFO">${RESULT} = {'interval': [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:15.474" endtime="20201010 12:25:15.479"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:15.489" level="INFO">${interval} = [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]</msg>
<status status="PASS" starttime="20201010 12:25:15.480" endtime="20201010 12:25:15.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:15.497" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:15.495" endtime="20201010 12:25:15.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:15.502" level="INFO">VALUE: [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]</msg>
<status status="PASS" starttime="20201010 12:25:15.500" endtime="20201010 12:25:15.503"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.491" endtime="20201010 12:25:15.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:15.512" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:15.509" endtime="20201010 12:25:15.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:15.516" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:15.514" endtime="20201010 12:25:15.516"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.505" endtime="20201010 12:25:15.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:15.523" endtime="20201010 12:25:15.817"></status>
</kw>
<msg timestamp="20201010 12:25:15.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.081777958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.181787208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:15.522" endtime="20201010 12:25:15.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:15.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.081777958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.181787208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:15.821" endtime="20201010 12:25:15.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:15.829" endtime="20201010 12:25:15.831"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.519" endtime="20201010 12:25:15.831"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.517" endtime="20201010 12:25:15.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:15.836" level="INFO">${FILTERED} = [{'diff': 0.10000925000000005}, {'diff': 0.10000869400000001}, {'diff': 0.10000872199999988}, {'diff': 0.10000870800000006}, {'diff': 0.10000869400000001}, {'diff': 0.10000879200000012}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:15.833" endtime="20201010 12:25:15.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:15.842" level="INFO">${RESULT} = {'diff': [0.10000925000000005, 0.10000869400000001, 0.10000872199999988, 0.10000870800000006, 0.10000869400000001, 0.10000879200000012, 0.1000092079999999, 0.10000870800000006, 0.10000869400000023, 0....</msg>
<status status="PASS" starttime="20201010 12:25:15.837" endtime="20201010 12:25:15.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:15.846" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:15.845" endtime="20201010 12:25:15.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:15.849" level="INFO">VALUE: [0.10000925000000005, 0.10000869400000001, 0.10000872199999988, 0.10000870800000006, 0.10000869400000001, 0.10000879200000012, 0.1000092079999999, 0.10000870800000006, 0.10000869400000023, 0.10000870799999984, 0.10000870799999984, 0.1000087220000001, 0.100008667, 0.10000869500000009, 0.10000869500000009, 0.10000869400000001, 0.10000873599999993, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000919400000008, 0.10000877799999985, 5.420000004363601e-07, 0.10000922199999973, 0.10000869500000054, 0.10000870899999992, 0.10000876400000003, 5.409999994654413e-07, 5.409999994654413e-07, 5.409999994654413e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 0.10000926399999965, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201010 12:25:15.847" endtime="20201010 12:25:15.849"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.843" endtime="20201010 12:25:15.850"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.421" endtime="20201010 12:25:15.850"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:09.347" endtime="20201010 12:25:15.851" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="15 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:15.859" endtime="20201010 12:25:15.878"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.857" endtime="20201010 12:25:15.879"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:15.893" endtime="20201010 12:25:15.912"></status>
</kw>
<msg timestamp="20201010 12:25:15.912" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:15.891" endtime="20201010 12:25:15.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:15.915" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:15.913" endtime="20201010 12:25:15.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:15.918" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:15.916" endtime="20201010 12:25:15.918"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:15.888" endtime="20201010 12:25:15.919"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:15.886" endtime="20201010 12:25:15.920"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.884" endtime="20201010 12:25:15.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:15.926" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:15.925" endtime="20201010 12:25:15.926"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.922" endtime="20201010 12:25:15.926"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.884" endtime="20201010 12:25:15.926"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.883" endtime="20201010 12:25:15.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:15.927" endtime="20201010 12:25:15.929"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.881" endtime="20201010 12:25:15.930"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.880" endtime="20201010 12:25:15.930"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.856" endtime="20201010 12:25:15.930"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:15.940" endtime="20201010 12:25:21.979"></status>
</kw>
<msg timestamp="20201010 12:25:21.980" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '52653'}, {'interval': '31223'}, {'interval': '17873'}, {'interval': '99702'}, {'interval': '86231'...</msg>
<status status="PASS" starttime="20201010 12:25:15.938" endtime="20201010 12:25:21.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:21.986" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '52653'}, {'interval': '31223'}, {'interval': '17873'}, {'interval': '99702'}, {'interval': '86231'...</msg>
<status status="PASS" starttime="20201010 12:25:21.982" endtime="20201010 12:25:21.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:21.989" endtime="20201010 12:25:21.993"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.936" endtime="20201010 12:25:21.994"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.933" endtime="20201010 12:25:21.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:22.002" level="INFO">${RESULT} = {'interval': [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:21.997" endtime="20201010 12:25:22.002"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:22.013" level="INFO">${interval} = [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]</msg>
<status status="PASS" starttime="20201010 12:25:22.004" endtime="20201010 12:25:22.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.021" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:22.019" endtime="20201010 12:25:22.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.026" level="INFO">VALUE: [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]</msg>
<status status="PASS" starttime="20201010 12:25:22.024" endtime="20201010 12:25:22.027"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.015" endtime="20201010 12:25:22.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.031" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:22.030" endtime="20201010 12:25:22.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.033" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:22.032" endtime="20201010 12:25:22.034"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.028" endtime="20201010 12:25:22.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.042" endtime="20201010 12:25:22.331"></status>
</kw>
<msg timestamp="20201010 12:25:22.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.084231792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.184241069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:22.041" endtime="20201010 12:25:22.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.084231792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.184241069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:22.335" endtime="20201010 12:25:22.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.342" endtime="20201010 12:25:22.344"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.037" endtime="20201010 12:25:22.345"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.035" endtime="20201010 12:25:22.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:22.349" level="INFO">${FILTERED} = [{'diff': 0.10000927700000006}, {'diff': 0.10000925000000005}, {'diff': 0.10000869499999987}, {'diff': 0.10000870899999992}, {'diff': 0.10000869499999987}, {'diff': 0.10000972299999988}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:22.346" endtime="20201010 12:25:22.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:22.353" level="INFO">${RESULT} = {'diff': [0.10000927700000006, 0.10000925000000005, 0.10000869499999987, 0.10000870899999992, 0.10000869499999987, 0.10000972299999988, 0.10000769500000017, 0.10000870899999992, 0.10000872300000019, 0...</msg>
<status status="PASS" starttime="20201010 12:25:22.350" endtime="20201010 12:25:22.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.357" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:22.356" endtime="20201010 12:25:22.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.360" level="INFO">VALUE: [0.10000927700000006, 0.10000925000000005, 0.10000869499999987, 0.10000870899999992, 0.10000869499999987, 0.10000972299999988, 0.10000769500000017, 0.10000870899999992, 0.10000872300000019, 0.10000870899999992, 0.10000877799999985, 5.410000003536197e-07, 0.1000092079999999, 0.10000870799999984, 0.10000922200000018, 0.10000870799999984, 0.1000087220000001, 5.409999999095305e-07, 5.410000003536197e-07, 5.409999999095305e-07, 5.409999999095305e-07, 0.10000916700000007, 0.10001748700000013, 0.09999893100000001, 0.10000970899999961, 5.410000003536197e-07, 0.10000926399999965, 0.10000919500000016, 5.419999995481817e-07, 0.100009236, 0.10000870799999984, 0.10000872199999922, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 0.10001022299999995, 0.1000076950000004, 0.10000870899999992, 0.10000872300000019, 5.409999994654413e-07, 0.10000922199999973]</msg>
<status status="PASS" starttime="20201010 12:25:22.358" endtime="20201010 12:25:22.360"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.354" endtime="20201010 12:25:22.361"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.931" endtime="20201010 12:25:22.361"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:15.853" endtime="20201010 12:25:22.362" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="20 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:22.371" endtime="20201010 12:25:22.391"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.369" endtime="20201010 12:25:22.392"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.407" endtime="20201010 12:25:22.425"></status>
</kw>
<msg timestamp="20201010 12:25:22.426" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:22.405" endtime="20201010 12:25:22.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.428" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:22.427" endtime="20201010 12:25:22.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.431" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:22.429" endtime="20201010 12:25:22.432"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:22.403" endtime="20201010 12:25:22.432"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:22.400" endtime="20201010 12:25:22.433"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.398" endtime="20201010 12:25:22.433"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:22.438" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:22.437" endtime="20201010 12:25:22.438"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.435" endtime="20201010 12:25:22.438"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.397" endtime="20201010 12:25:22.439"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.396" endtime="20201010 12:25:22.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.440" endtime="20201010 12:25:22.441"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.395" endtime="20201010 12:25:22.442"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.393" endtime="20201010 12:25:22.442"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.368" endtime="20201010 12:25:22.442"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.452" endtime="20201010 12:25:28.500"></status>
</kw>
<msg timestamp="20201010 12:25:28.501" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '27660'}, {'interval': '24774'}, {'interval': '50283'}, {'interval': '17455'}, {'interval': '56207'...</msg>
<status status="PASS" starttime="20201010 12:25:22.450" endtime="20201010 12:25:28.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:28.508" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '27660'}, {'interval': '24774'}, {'interval': '50283'}, {'interval': '17455'}, {'interval': '56207'...</msg>
<status status="PASS" starttime="20201010 12:25:28.504" endtime="20201010 12:25:28.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:28.510" endtime="20201010 12:25:28.514"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.448" endtime="20201010 12:25:28.515"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.445" endtime="20201010 12:25:28.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:28.522" level="INFO">${RESULT} = {'interval': [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:28.518" endtime="20201010 12:25:28.523"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:28.536" level="INFO">${interval} = [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]</msg>
<status status="PASS" starttime="20201010 12:25:28.525" endtime="20201010 12:25:28.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:28.544" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:28.542" endtime="20201010 12:25:28.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:28.549" level="INFO">VALUE: [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]</msg>
<status status="PASS" starttime="20201010 12:25:28.547" endtime="20201010 12:25:28.550"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.538" endtime="20201010 12:25:28.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:28.558" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:28.556" endtime="20201010 12:25:28.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:28.563" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:28.561" endtime="20201010 12:25:28.564"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.552" endtime="20201010 12:25:28.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:28.579" endtime="20201010 12:25:28.871"></status>
</kw>
<msg timestamp="20201010 12:25:28.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.095246222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.195254667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:28.576" endtime="20201010 12:25:28.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:28.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.095246222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.195254667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:28.875" endtime="20201010 12:25:28.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:28.882" endtime="20201010 12:25:28.884"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.570" endtime="20201010 12:25:28.884"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.566" endtime="20201010 12:25:28.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:28.889" level="INFO">${FILTERED} = [{'diff': 0.10000844499999983}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 0.1000081949999998}, {'diff': 0.10000730599999996}, {'diff':...</msg>
<status status="PASS" starttime="20201010 12:25:28.885" endtime="20201010 12:25:28.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:28.893" level="INFO">${RESULT} = {'diff': [0.10000844499999983, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.1000081949999998, 0.10000730599999996, 0.10001111200000001, 0.10000769499999995, 0.100008709000000...</msg>
<status status="PASS" starttime="20201010 12:25:28.890" endtime="20201010 12:25:28.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:28.898" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:28.897" endtime="20201010 12:25:28.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:28.901" level="INFO">VALUE: [0.10000844499999983, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.1000081949999998, 0.10000730599999996, 0.10001111200000001, 0.10000769499999995, 0.10000870900000014, 0.10000872300000019, 0.10000926300000001, 5.410000003536197e-07, 0.10000922299999981, 0.1000087500000002, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.100009236, 0.10000876400000003, 0.10000919400000008, 0.10000870799999984, 0.10000870800000028, 0.10004656999999995, 0.09997084700000025, 5.419999995481817e-07, 5.410000003536197e-07, 0.10001120899999982, 0.10000870899999992, 0.10000872199999922, 0.10000868100000027, 0.10000872300000019, 0.10000870899999992, 0.10000870899999992, 0.10000870899999992, 0.10000873599999949, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.10000923599999911, 0.10000869399999956, 0.1000087220000001]</msg>
<status status="PASS" starttime="20201010 12:25:28.900" endtime="20201010 12:25:28.901"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.894" endtime="20201010 12:25:28.902"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.443" endtime="20201010 12:25:28.902"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:22.365" endtime="20201010 12:25:28.903" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:28.911" endtime="20201010 12:25:28.930"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.909" endtime="20201010 12:25:28.931"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:28.944" endtime="20201010 12:25:28.962"></status>
</kw>
<msg timestamp="20201010 12:25:28.962" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:28.942" endtime="20201010 12:25:28.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:28.965" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:28.963" endtime="20201010 12:25:28.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:28.968" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:28.966" endtime="20201010 12:25:28.968"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:28.940" endtime="20201010 12:25:28.969"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:28.937" endtime="20201010 12:25:28.969"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.936" endtime="20201010 12:25:28.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:28.974" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:28.973" endtime="20201010 12:25:28.974"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.971" endtime="20201010 12:25:28.974"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.935" endtime="20201010 12:25:28.975"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.934" endtime="20201010 12:25:28.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:28.976" endtime="20201010 12:25:28.977"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.933" endtime="20201010 12:25:28.978"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.931" endtime="20201010 12:25:28.978"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.908" endtime="20201010 12:25:28.978"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:28.989" endtime="20201010 12:25:35.045"></status>
</kw>
<msg timestamp="20201010 12:25:35.046" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '16291'}, {'interval': '74117'}, {'interval': '74576'}, {'interval': '31746'}, {'interval': '33340'...</msg>
<status status="PASS" starttime="20201010 12:25:28.987" endtime="20201010 12:25:35.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.053" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '16291'}, {'interval': '74117'}, {'interval': '74576'}, {'interval': '31746'}, {'interval': '33340'...</msg>
<status status="PASS" starttime="20201010 12:25:35.049" endtime="20201010 12:25:35.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.055" endtime="20201010 12:25:35.059"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.983" endtime="20201010 12:25:35.060"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.981" endtime="20201010 12:25:35.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:35.068" level="INFO">${RESULT} = {'interval': [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248], 'focus': [...</msg>
<status status="PASS" starttime="20201010 12:25:35.062" endtime="20201010 12:25:35.068"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:35.079" level="INFO">${interval} = [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248]</msg>
<status status="PASS" starttime="20201010 12:25:35.070" endtime="20201010 12:25:35.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.087" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:35.085" endtime="20201010 12:25:35.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.092" level="INFO">VALUE: [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248]</msg>
<status status="PASS" starttime="20201010 12:25:35.090" endtime="20201010 12:25:35.093"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.081" endtime="20201010 12:25:35.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.102" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:35.099" endtime="20201010 12:25:35.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.106" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:35.104" endtime="20201010 12:25:35.107"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.095" endtime="20201010 12:25:35.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.121" endtime="20201010 12:25:35.416"></status>
</kw>
<msg timestamp="20201010 12:25:35.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.103647764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.203657, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201010 12:25:35.118" endtime="20201010 12:25:35.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.103647764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.203657, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201010 12:25:35.420" endtime="20201010 12:25:35.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.427" endtime="20201010 12:25:35.429"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.113" endtime="20201010 12:25:35.429"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.109" endtime="20201010 12:25:35.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:35.433" level="INFO">${FILTERED} = [{'diff': 0.100009236}, {'diff': 0.10000870800000006}, {'diff': 0.10000872199999988}, {'diff': 0.10000870800000006}, {'diff': 0.10000873600000015}, {'diff': 5.419999999922709e-07}, {'diff': 5.41999999...</msg>
<status status="PASS" starttime="20201010 12:25:35.431" endtime="20201010 12:25:35.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:35.438" level="INFO">${RESULT} = {'diff': [0.100009236, 0.10000870800000006, 0.10000872199999988, 0.10000870800000006, 0.10000873600000015, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000922200000018, 0.10005715199999976, 0.099...</msg>
<status status="PASS" starttime="20201010 12:25:35.434" endtime="20201010 12:25:35.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.442" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:35.441" endtime="20201010 12:25:35.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.445" level="INFO">VALUE: [0.100009236, 0.10000870800000006, 0.10000872199999988, 0.10000870800000006, 0.10000873600000015, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000922200000018, 0.10005715199999976, 0.09996026399999991, 0.10000870800000028, 0.1000097219999998, 0.10000922199999973, 0.1000087220000001, 5.419999999922709e-07, 0.10000922299999981, 0.10000868099999982, 0.10000870899999992, 0.10000872299999974, 0.10000868100000027, 0.10000870799999984, 0.1000087220000001, 5.410000003536197e-07, 5.409999999095305e-07, 0.100009236, 0.10000869399999956, 0.10000873599999949, 5.420000004363601e-07, 5.419999995481817e-07, 0.09999519499999998, 0.10000924999999938, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.409999994654413e-07, 5.409999994654413e-07, 0.10000922199999973, 0.10000872300000019, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201010 12:25:35.443" endtime="20201010 12:25:35.445"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.439" endtime="20201010 12:25:35.446"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.979" endtime="20201010 12:25:35.446"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:28.905" endtime="20201010 12:25:35.447" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="30 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:35.454" endtime="20201010 12:25:35.474"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.453" endtime="20201010 12:25:35.474"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.487" endtime="20201010 12:25:35.506"></status>
</kw>
<msg timestamp="20201010 12:25:35.506" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:35.486" endtime="20201010 12:25:35.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.509" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:35.507" endtime="20201010 12:25:35.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.512" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:35.510" endtime="20201010 12:25:35.512"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:35.483" endtime="20201010 12:25:35.513"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:35.481" endtime="20201010 12:25:35.513"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.480" endtime="20201010 12:25:35.514"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:35.518" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:35.517" endtime="20201010 12:25:35.518"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.515" endtime="20201010 12:25:35.518"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.479" endtime="20201010 12:25:35.519"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.478" endtime="20201010 12:25:35.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.519" endtime="20201010 12:25:35.521"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.477" endtime="20201010 12:25:35.521"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.475" endtime="20201010 12:25:35.522"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.451" endtime="20201010 12:25:35.522"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>30</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.531" endtime="20201010 12:25:41.598"></status>
</kw>
<msg timestamp="20201010 12:25:41.599" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 30 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '74757'}, {'interval': '70347'}, {'interval': '33034'}, {'interval': '80423'}, {'interval': '79926'...</msg>
<status status="PASS" starttime="20201010 12:25:35.530" endtime="20201010 12:25:41.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:41.606" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 30 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '74757'}, {'interval': '70347'}, {'interval': '33034'}, {'interval': '80423'}, {'interval': '79926'...</msg>
<status status="PASS" starttime="20201010 12:25:41.602" endtime="20201010 12:25:41.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:41.609" endtime="20201010 12:25:41.612"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.527" endtime="20201010 12:25:41.613"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.525" endtime="20201010 12:25:41.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:41.622" level="INFO">${RESULT} = {'interval': [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 5814...</msg>
<status status="PASS" starttime="20201010 12:25:41.616" endtime="20201010 12:25:41.622"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:41.633" level="INFO">${interval} = [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 58146, 28867, 669...</msg>
<status status="PASS" starttime="20201010 12:25:41.624" endtime="20201010 12:25:41.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:41.641" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:41.639" endtime="20201010 12:25:41.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:41.646" level="INFO">VALUE: [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 58146, 28867, 66958, 17521]</msg>
<status status="PASS" starttime="20201010 12:25:41.644" endtime="20201010 12:25:41.647"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.635" endtime="20201010 12:25:41.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:41.656" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:41.653" endtime="20201010 12:25:41.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:41.662" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:41.658" endtime="20201010 12:25:41.663"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.649" endtime="20201010 12:25:41.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:41.679" endtime="20201010 12:25:41.978"></status>
</kw>
<msg timestamp="20201010 12:25:41.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.113333111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.213343375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:41.675" endtime="20201010 12:25:41.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:41.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.113333111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.213343375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:41.982" endtime="20201010 12:25:41.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:41.990" endtime="20201010 12:25:41.991"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.670" endtime="20201010 12:25:41.992"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.666" endtime="20201010 12:25:41.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:41.996" level="INFO">${FILTERED} = [{'diff': 0.10001026400000002}, {'diff': 0.1000087220000001}, {'diff': 0.10000924999999983}, {'diff': 0.10000969400000015}, {'diff': 0.10000870799999984}, {'diff': 0.10000876400000003}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201010 12:25:41.993" endtime="20201010 12:25:41.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:42.000" level="INFO">${RESULT} = {'diff': [0.10001026400000002, 0.1000087220000001, 0.10000924999999983, 0.10000969400000015, 0.10000870799999984, 0.10000876400000003, 0.10001026400000002, 0.10000768000000004, 0.10000870799999984, 5....</msg>
<status status="PASS" starttime="20201010 12:25:41.997" endtime="20201010 12:25:42.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.004" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:42.003" endtime="20201010 12:25:42.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.006" level="INFO">VALUE: [0.10001026400000002, 0.1000087220000001, 0.10000924999999983, 0.10000969400000015, 0.10000870799999984, 0.10000876400000003, 0.10001026400000002, 0.10000768000000004, 0.10000870799999984, 5.419999999922709e-07, 5.420000004363601e-07, 5.409999999095305e-07, 0.1000092079999999, 0.1000087220000001, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.419999999922709e-07, 5.410000003536197e-07, 0.10001022299999995, 0.10000770899999978, 0.10000869499999965, 0.10000969499999979, 0.10000772199999997, 0.10000873699999957, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 0.10005511100000053, 0.09996383400000042, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.409999994654413e-07, 0.10000919400000008, 0.10000972199999936, 5.419999995481817e-07, 0.100009236]</msg>
<status status="PASS" starttime="20201010 12:25:42.005" endtime="20201010 12:25:42.007"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.001" endtime="20201010 12:25:42.007"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.523" endtime="20201010 12:25:42.008"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:35.449" endtime="20201010 12:25:42.011" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="35 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:42.021" endtime="20201010 12:25:42.041"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.020" endtime="20201010 12:25:42.042"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.055" endtime="20201010 12:25:42.072"></status>
</kw>
<msg timestamp="20201010 12:25:42.073" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:42.053" endtime="20201010 12:25:42.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.076" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:42.074" endtime="20201010 12:25:42.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.079" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:42.077" endtime="20201010 12:25:42.079"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:42.051" endtime="20201010 12:25:42.080"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:42.048" endtime="20201010 12:25:42.080"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.047" endtime="20201010 12:25:42.080"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:42.084" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:42.084" endtime="20201010 12:25:42.085"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.082" endtime="20201010 12:25:42.085"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.046" endtime="20201010 12:25:42.085"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.046" endtime="20201010 12:25:42.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.086" endtime="20201010 12:25:42.088"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.044" endtime="20201010 12:25:42.088"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.043" endtime="20201010 12:25:42.089"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.018" endtime="20201010 12:25:42.089"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>35</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.098" endtime="20201010 12:25:48.172"></status>
</kw>
<msg timestamp="20201010 12:25:48.174" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 35 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '54295'}, {'interval': '37199'}, {'interval': '39990'}, {'interval': '20568'}, {'interval': '10171'...</msg>
<status status="PASS" starttime="20201010 12:25:42.097" endtime="20201010 12:25:48.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.180" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 35 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '54295'}, {'interval': '37199'}, {'interval': '39990'}, {'interval': '20568'}, {'interval': '10171'...</msg>
<status status="PASS" starttime="20201010 12:25:48.176" endtime="20201010 12:25:48.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.183" endtime="20201010 12:25:48.186"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.094" endtime="20201010 12:25:48.187"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.092" endtime="20201010 12:25:48.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:48.195" level="INFO">${RESULT} = {'interval': [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 4353...</msg>
<status status="PASS" starttime="20201010 12:25:48.189" endtime="20201010 12:25:48.196"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:48.206" level="INFO">${interval} = [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 43539, 68459, 281...</msg>
<status status="PASS" starttime="20201010 12:25:48.197" endtime="20201010 12:25:48.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.213" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:48.212" endtime="20201010 12:25:48.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.218" level="INFO">VALUE: [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 43539, 68459, 28154, 76170, 13496, 73105, 63810, 92352, 47335]</msg>
<status status="PASS" starttime="20201010 12:25:48.216" endtime="20201010 12:25:48.219"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.208" endtime="20201010 12:25:48.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.227" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:48.225" endtime="20201010 12:25:48.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.231" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:48.229" endtime="20201010 12:25:48.232"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.221" endtime="20201010 12:25:48.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.246" endtime="20201010 12:25:48.543"></status>
</kw>
<msg timestamp="20201010 12:25:48.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.124946028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.224955264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:48.243" endtime="20201010 12:25:48.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.124946028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.224955264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:48.547" endtime="20201010 12:25:48.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.554" endtime="20201010 12:25:48.556"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.238" endtime="20201010 12:25:48.557"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.234" endtime="20201010 12:25:48.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:48.561" level="INFO">${FILTERED} = [{'diff': 0.100009236}, {'diff': 0.10000780499999995}, {'diff': 0.10000955499999997}, {'diff': 0.100009778}, {'diff': 0.10000872300000019}, {'diff': 5.419999999922709e-07}, {'diff': 0.1000091809999998...</msg>
<status status="PASS" starttime="20201010 12:25:48.558" endtime="20201010 12:25:48.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:48.568" level="INFO">${RESULT} = {'diff': [0.100009236, 0.10000780499999995, 0.10000955499999997, 0.100009778, 0.10000872300000019, 5.419999999922709e-07, 0.10000918099999989, 0.1000087220000001, 0.10000969500000023, 0.10000772199999...</msg>
<status status="PASS" starttime="20201010 12:25:48.562" endtime="20201010 12:25:48.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.573" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:48.572" endtime="20201010 12:25:48.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.575" level="INFO">VALUE: [0.100009236, 0.10000780499999995, 0.10000955499999997, 0.100009778, 0.10000872300000019, 5.419999999922709e-07, 0.10000918099999989, 0.1000087220000001, 0.10000969500000023, 0.10000772199999997, 0.10000873700000001, 0.10000916700000007, 5.419999999922709e-07, 0.10005418099999996, 0.09996423599999993, 0.10000970900000006, 0.10000869500000009, 0.10000870899999992, 5.419999999922709e-07, 0.10001018100000003, 0.10000770800000014, 0.10000872199999966, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 0.10000920899999954, 0.10000873600000038, 5.409999994654413e-07, 5.409999994654413e-07, 0.10001023600000014, 5.409999994654413e-07, 0.10000686100000067, 0.10001006999999973, 0.1000179999999995, 0.100009236, 0.10000870799999984]</msg>
<status status="PASS" starttime="20201010 12:25:48.574" endtime="20201010 12:25:48.576"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.569" endtime="20201010 12:25:48.576"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.090" endtime="20201010 12:25:48.577"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:42.015" endtime="20201010 12:25:48.578" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="40 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:48.587" endtime="20201010 12:25:48.607"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.585" endtime="20201010 12:25:48.608"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.621" endtime="20201010 12:25:48.640"></status>
</kw>
<msg timestamp="20201010 12:25:48.640" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:48.620" endtime="20201010 12:25:48.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.643" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:48.642" endtime="20201010 12:25:48.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.646" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:48.644" endtime="20201010 12:25:48.647"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:48.617" endtime="20201010 12:25:48.647"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:48.614" endtime="20201010 12:25:48.648"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.613" endtime="20201010 12:25:48.648"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:48.653" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:48.652" endtime="20201010 12:25:48.653"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.650" endtime="20201010 12:25:48.653"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.612" endtime="20201010 12:25:48.653"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.611" endtime="20201010 12:25:48.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.654" endtime="20201010 12:25:48.656"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.610" endtime="20201010 12:25:48.657"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.608" endtime="20201010 12:25:48.657"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.584" endtime="20201010 12:25:48.657"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>40</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.667" endtime="20201010 12:25:54.753"></status>
</kw>
<msg timestamp="20201010 12:25:54.755" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 40 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '63910'}, {'interval': '51619'}, {'interval': '66290'}, {'interval': '40380'}, {'interval': '35046'...</msg>
<status status="PASS" starttime="20201010 12:25:48.665" endtime="20201010 12:25:54.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:54.761" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 40 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '63910'}, {'interval': '51619'}, {'interval': '66290'}, {'interval': '40380'}, {'interval': '35046'...</msg>
<status status="PASS" starttime="20201010 12:25:54.757" endtime="20201010 12:25:54.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:54.764" endtime="20201010 12:25:54.767"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.662" endtime="20201010 12:25:54.768"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.660" endtime="20201010 12:25:54.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:54.778" level="INFO">${RESULT} = {'interval': [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 1736...</msg>
<status status="PASS" starttime="20201010 12:25:54.771" endtime="20201010 12:25:54.778"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:54.789" level="INFO">${interval} = [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 17369, 86767, 529...</msg>
<status status="PASS" starttime="20201010 12:25:54.780" endtime="20201010 12:25:54.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:54.797" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:54.795" endtime="20201010 12:25:54.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:54.802" level="INFO">VALUE: [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674]</msg>
<status status="PASS" starttime="20201010 12:25:54.800" endtime="20201010 12:25:54.803"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.791" endtime="20201010 12:25:54.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:54.815" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:54.813" endtime="20201010 12:25:54.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:54.819" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:54.817" endtime="20201010 12:25:54.820"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.806" endtime="20201010 12:25:54.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:54.836" endtime="20201010 12:25:55.129"></status>
</kw>
<msg timestamp="20201010 12:25:55.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.127735847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.227751278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:54.832" endtime="20201010 12:25:55.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.127735847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.227751278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:55.133" endtime="20201010 12:25:55.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.140" endtime="20201010 12:25:55.142"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.827" endtime="20201010 12:25:55.143"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.823" endtime="20201010 12:25:55.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:55.147" level="INFO">${FILTERED} = [{'diff': 0.10001543099999988}, {'diff': 0.10000251399999982}, {'diff': 0.10000879200000012}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000920800000013}, {'diff': 0.10000869400000001}, {'diff': 0....</msg>
<status status="PASS" starttime="20201010 12:25:55.144" endtime="20201010 12:25:55.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:55.150" level="INFO">${RESULT} = {'diff': [0.10001543099999988, 0.10000251399999982, 0.10000879200000012, 5.419999999922709e-07, 0.10000920800000013, 0.10000869400000001, 0.10000870799999984, 0.10006872200000028, 5.419999999922709e-0...</msg>
<status status="PASS" starttime="20201010 12:25:55.148" endtime="20201010 12:25:55.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.154" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:55.153" endtime="20201010 12:25:55.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.157" level="INFO">VALUE: [0.10001543099999988, 0.10000251399999982, 0.10000879200000012, 5.419999999922709e-07, 0.10000920800000013, 0.10000869400000001, 0.10000870799999984, 0.10006872200000028, 5.419999999922709e-07, 0.100009236, 0.10000870899999992, 0.10000869500000009, 0.10001093000000028, 0.10000870799999984, 0.10000869400000001, 0.10000976400000017, 5.409999999095305e-07, 0.10000922300000026, 0.10000869500000009, 0.10003786100000012, 0.09997955600000008, 0.10000869500000009, 0.10000870899999992, 0.10000873700000001, 5.420000004363601e-07, 5.420000004363601e-07, 0.10000920800000035, 0.100009236, 0.10000869400000045, 0.10000870800000072, 0.10000869499999965, 0.10002377799999973, 0.09999463900000016, 0.1000076950000004, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201010 12:25:55.156" endtime="20201010 12:25:55.157"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.151" endtime="20201010 12:25:55.158"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.658" endtime="20201010 12:25:55.158"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:48.581" endtime="20201010 12:25:55.159" critical="yes"></status>
</test>
<test id="s1-s2-t10" name="50 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:55.167" endtime="20201010 12:25:55.186"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.165" endtime="20201010 12:25:55.187"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.200" endtime="20201010 12:25:55.218"></status>
</kw>
<msg timestamp="20201010 12:25:55.218" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:55.199" endtime="20201010 12:25:55.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.221" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:55.219" endtime="20201010 12:25:55.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.224" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:55.222" endtime="20201010 12:25:55.224"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:55.196" endtime="20201010 12:25:55.225"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:55.194" endtime="20201010 12:25:55.226"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.192" endtime="20201010 12:25:55.226"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:55.230" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:55.229" endtime="20201010 12:25:55.230"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.227" endtime="20201010 12:25:55.231"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.191" endtime="20201010 12:25:55.231"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.191" endtime="20201010 12:25:55.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.232" endtime="20201010 12:25:55.233"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.189" endtime="20201010 12:25:55.234"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.188" endtime="20201010 12:25:55.234"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.163" endtime="20201010 12:25:55.234"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>50</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.243" endtime="20201010 12:26:01.345"></status>
</kw>
<msg timestamp="20201010 12:26:01.346" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 50 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '14414'}, {'interval': '55147'}, {'interval': '70168'}, {'interval': '61294'}, {'interval': '86720'...</msg>
<status status="PASS" starttime="20201010 12:25:55.242" endtime="20201010 12:26:01.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.353" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 50 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '14414'}, {'interval': '55147'}, {'interval': '70168'}, {'interval': '61294'}, {'interval': '86720'...</msg>
<status status="PASS" starttime="20201010 12:26:01.349" endtime="20201010 12:26:01.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.355" endtime="20201010 12:26:01.360"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.239" endtime="20201010 12:26:01.362"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.237" endtime="20201010 12:26:01.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:01.371" level="INFO">${RESULT} = {'interval': [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 1023...</msg>
<status status="PASS" starttime="20201010 12:26:01.364" endtime="20201010 12:26:01.371"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:01.381" level="INFO">${interval} = [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 10238, 70515, 408...</msg>
<status status="PASS" starttime="20201010 12:26:01.373" endtime="20201010 12:26:01.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.389" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:01.387" endtime="20201010 12:26:01.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.393" level="INFO">VALUE: [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 10238, 70515, 40828, 48500, 94435, 94098, 48103, 90303, 97856, 52511, 42830, 96777, 16054, 65477, 49396, 79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976]</msg>
<status status="PASS" starttime="20201010 12:26:01.391" endtime="20201010 12:26:01.394"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.383" endtime="20201010 12:26:01.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.402" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:01.400" endtime="20201010 12:26:01.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.406" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:01.404" endtime="20201010 12:26:01.406"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.396" endtime="20201010 12:26:01.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.414" endtime="20201010 12:26:01.708"></status>
</kw>
<msg timestamp="20201010 12:26:01.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.146064444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.246075528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:01.412" endtime="20201010 12:26:01.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.146064444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.246075528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:01.714" endtime="20201010 12:26:01.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.722" endtime="20201010 12:26:01.724"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.409" endtime="20201010 12:26:01.725"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.407" endtime="20201010 12:26:01.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:01.731" level="INFO">${FILTERED} = [{'diff': 0.10001108399999992}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'d...</msg>
<status status="PASS" starttime="20201010 12:26:01.727" endtime="20201010 12:26:01.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:01.736" level="INFO">${RESULT} = {'diff': [0.10001108399999992, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999...</msg>
<status status="PASS" starttime="20201010 12:26:01.732" endtime="20201010 12:26:01.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.741" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:01.740" endtime="20201010 12:26:01.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.743" level="INFO">VALUE: [0.10001108399999992, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000925000000027, 0.10000727800000009, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000920899999954, 0.10000870899999992, 0.10005340299999954, 0.09999070799999998, 0.10000630600000004, 0.10001062500000035, 0.10000870899999992, 0.10000872300000019, 0.10000869500000054, 0.10000873600000038, 0.100008667, 0.10000869500000054, 0.10000669400000017, 0.10000958300000029, 0.10000981899999939, 0.10000915300000024, 0.10000979200000071, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201010 12:26:01.742" endtime="20201010 12:26:01.744"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.737" endtime="20201010 12:26:01.744"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.235" endtime="20201010 12:26:01.745"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:55.161" endtime="20201010 12:26:01.746" critical="yes"></status>
</test>
<test id="s1-s2-t11" name="75 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:01.753" endtime="20201010 12:26:01.772"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.751" endtime="20201010 12:26:01.773"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.787" endtime="20201010 12:26:01.803"></status>
</kw>
<msg timestamp="20201010 12:26:01.804" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:01.785" endtime="20201010 12:26:01.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.806" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:01.805" endtime="20201010 12:26:01.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.810" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:01.808" endtime="20201010 12:26:01.810"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:01.782" endtime="20201010 12:26:01.811"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:01.779" endtime="20201010 12:26:01.811"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.778" endtime="20201010 12:26:01.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:01.816" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:01.815" endtime="20201010 12:26:01.816"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.813" endtime="20201010 12:26:01.816"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.777" endtime="20201010 12:26:01.816"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.777" endtime="20201010 12:26:01.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.817" endtime="20201010 12:26:01.819"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.775" endtime="20201010 12:26:01.819"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.773" endtime="20201010 12:26:01.820"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.750" endtime="20201010 12:26:01.820"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>75</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.829" endtime="20201010 12:26:07.977"></status>
</kw>
<msg timestamp="20201010 12:26:07.979" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 75 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '81075'}, {'interval': '58727'}, {'interval': '40937'}, {'interval': '10090'}, {'interval': '32175'...</msg>
<status status="PASS" starttime="20201010 12:26:01.827" endtime="20201010 12:26:07.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:07.986" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 75 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '81075'}, {'interval': '58727'}, {'interval': '40937'}, {'interval': '10090'}, {'interval': '32175'...</msg>
<status status="PASS" starttime="20201010 12:26:07.981" endtime="20201010 12:26:07.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:07.988" endtime="20201010 12:26:07.991"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.825" endtime="20201010 12:26:07.992"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.823" endtime="20201010 12:26:07.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:08.005" level="INFO">${RESULT} = {'interval': [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118, 68312, 54751, 8016...</msg>
<status status="PASS" starttime="20201010 12:26:07.995" endtime="20201010 12:26:08.006"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:08.016" level="INFO">${interval} = [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118, 68312, 54751, 80163, 54227, 583...</msg>
<status status="PASS" starttime="20201010 12:26:08.007" endtime="20201010 12:26:08.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.024" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:08.022" endtime="20201010 12:26:08.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.028" level="INFO">VALUE: [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118, 68312, 54751, 80163, 54227, 58312, 43968, 57316, 22291, 26892, 71562, 69729, 10869, 16200, 53697, 30276, 60725, 22110, 59120, 24460, 36665, 10677, 44111, 16864, 64627, 87787, 52486, 10571, 13830, 59376, 68287, 10851, 19328, 95360, 64761, 16060, 56217, 52889, 38375, 35488, 20496, 81475, 86486, 44426, 74127, 62725, 66508, 29656, 17750, 43477, 47133, 75567]</msg>
<status status="PASS" starttime="20201010 12:26:08.026" endtime="20201010 12:26:08.029"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.018" endtime="20201010 12:26:08.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.037" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:08.035" endtime="20201010 12:26:08.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.041" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:08.039" endtime="20201010 12:26:08.042"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.031" endtime="20201010 12:26:08.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.057" endtime="20201010 12:26:08.349"></status>
</kw>
<msg timestamp="20201010 12:26:08.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.190798764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.290806069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:08.054" endtime="20201010 12:26:08.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.190798764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.290806069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:08.353" endtime="20201010 12:26:08.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.359" endtime="20201010 12:26:08.361"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.049" endtime="20201010 12:26:08.362"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.044" endtime="20201010 12:26:08.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:08.366" level="INFO">${FILTERED} = [{'diff': 0.1000073050000001}, {'diff': 0.10000970799999997}, {'diff': 0.10000869500000009}, {'diff': 0.10008272200000001}, {'diff': 5.419999999922709e-07}, {'diff': 0.099956347}, {'diff': 0.100009709...</msg>
<status status="PASS" starttime="20201010 12:26:08.363" endtime="20201010 12:26:08.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:08.370" level="INFO">${RESULT} = {'diff': [0.1000073050000001, 0.10000970799999997, 0.10000869500000009, 0.10008272200000001, 5.419999999922709e-07, 0.099956347, 0.10000970900000006, 0.10000870900000014, 0.10002995799999992, 0.099986...</msg>
<status status="PASS" starttime="20201010 12:26:08.367" endtime="20201010 12:26:08.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.374" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:08.373" endtime="20201010 12:26:08.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.377" level="INFO">VALUE: [0.1000073050000001, 0.10000970799999997, 0.10000869500000009, 0.10008272200000001, 5.419999999922709e-07, 0.099956347, 0.10000970900000006, 0.10000870900000014, 0.10002995799999992, 0.09998695800000013, 0.10001458299999966, 0.10000283300000001, 0.10000972200000025, 0.10000869400000001, 0.10006556899999985, 0.09994952800000023, 0.10005483399999981, 5.419999999922709e-07, 0.10009494499999994, 0.09991598700000015, 0.10000754199999973, 0.10000990200000004, 5.410000003536197e-07, 5.409999999095305e-07, 0.10000919499999972, 0.10000874999999976, 5.409999994654413e-07, 5.409999994654413e-07, 0.10000922299999981, 0.10007773600000025, 5.409999994654413e-07, 5.420000004363601e-07, 0.10001283400000016, 0.10000768099999924, 0.10000869399999956, 0.1000087220000001, 5.410000003536197e-07, 0.10001019400000022, 0.10000872199999922, 0.10000923700000008, 0.10000869499999965]</msg>
<status status="PASS" starttime="20201010 12:26:08.375" endtime="20201010 12:26:08.377"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.371" endtime="20201010 12:26:08.378"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.821" endtime="20201010 12:26:08.378"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:01.747" endtime="20201010 12:26:08.379" critical="yes"></status>
</test>
<test id="s1-s2-t12" name="100 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:08.386" endtime="20201010 12:26:08.405"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.384" endtime="20201010 12:26:08.406"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.419" endtime="20201010 12:26:08.437"></status>
</kw>
<msg timestamp="20201010 12:26:08.438" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:08.417" endtime="20201010 12:26:08.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.441" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:08.439" endtime="20201010 12:26:08.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.444" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:08.442" endtime="20201010 12:26:08.445"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:08.415" endtime="20201010 12:26:08.446"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:08.412" endtime="20201010 12:26:08.446"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.411" endtime="20201010 12:26:08.446"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:08.450" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:08.449" endtime="20201010 12:26:08.451"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.447" endtime="20201010 12:26:08.451"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.410" endtime="20201010 12:26:08.451"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.410" endtime="20201010 12:26:08.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.452" endtime="20201010 12:26:08.453"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.408" endtime="20201010 12:26:08.454"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.407" endtime="20201010 12:26:08.454"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.383" endtime="20201010 12:26:08.455"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>100</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.463" endtime="20201010 12:26:14.658"></status>
</kw>
<msg timestamp="20201010 12:26:14.660" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 100 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '25479'}, {'interval': '99747'}, {'interval': '10545'}, {'interval': '53347'}, {'interval': '97917...</msg>
<status status="PASS" starttime="20201010 12:26:08.462" endtime="20201010 12:26:14.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:14.668" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 100 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '25479'}, {'interval': '99747'}, {'interval': '10545'}, {'interval': '53347'}, {'interval': '97917...</msg>
<status status="PASS" starttime="20201010 12:26:14.662" endtime="20201010 12:26:14.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:14.670" endtime="20201010 12:26:14.673"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.459" endtime="20201010 12:26:14.674"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.457" endtime="20201010 12:26:14.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:14.689" level="INFO">${RESULT} = {'interval': [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946, 34329, 54047, 2127...</msg>
<status status="PASS" starttime="20201010 12:26:14.677" endtime="20201010 12:26:14.689"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:14.699" level="INFO">${interval} = [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946, 34329, 54047, 21276, 78931, 960...</msg>
<status status="PASS" starttime="20201010 12:26:14.691" endtime="20201010 12:26:14.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:14.707" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:14.705" endtime="20201010 12:26:14.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:14.711" level="INFO">VALUE: [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946, 34329, 54047, 21276, 78931, 96011, 66721, 98428, 10018, 21350, 57891, 44237, 47888, 49872, 48763, 80263, 93240, 65542, 69880, 49052, 60186, 16103, 70949, 81316, 74540, 78692, 31251, 92771, 27327, 95171, 73283, 44316, 50344, 95943, 37655, 81039, 11783, 32679, 42216, 57297, 47170, 32344, 72256, 48132, 42552, 45395, 13114, 21516, 47276, 37671, 70189, 59386, 64123, 49679, 14446, 29154, 60416, 52975, 46707, 30305, 37643, 98500, 39715, 31020, 98902, 61399, 58345, 20890, 33209, 90081, 27893, 71353, 26989, 20846, 78625, 56472, 100987]</msg>
<status status="PASS" starttime="20201010 12:26:14.709" endtime="20201010 12:26:14.712"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:14.701" endtime="20201010 12:26:14.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:14.720" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:14.718" endtime="20201010 12:26:14.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:14.726" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:14.723" endtime="20201010 12:26:14.726"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:14.715" endtime="20201010 12:26:14.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:14.736" endtime="20201010 12:26:15.025"></status>
</kw>
<msg timestamp="20201010 12:26:15.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.236532819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.336543069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:14.734" endtime="20201010 12:26:15.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.236532819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.336543069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:15.028" endtime="20201010 12:26:15.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.035" endtime="20201010 12:26:15.037"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:14.732" endtime="20201010 12:26:15.037"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:14.729" endtime="20201010 12:26:15.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:15.041" level="INFO">${FILTERED} = [{'diff': 0.10001024999999997}, {'diff': 0.10000769499999995}, {'diff': 0.10000690299999992}, {'diff': 0.10001151399999997}, {'diff': 0.10003477799999994}, {'diff': 0.09998165200000009}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:26:15.039" endtime="20201010 12:26:15.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:15.046" level="INFO">${RESULT} = {'diff': [0.10001024999999997, 0.10000769499999995, 0.10000690299999992, 0.10001151399999997, 0.10003477799999994, 0.09998165200000009, 0.10007437499999994, 0.09989326399999987, 5.419999999922709e-07,...</msg>
<status status="PASS" starttime="20201010 12:26:15.042" endtime="20201010 12:26:15.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.050" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:15.049" endtime="20201010 12:26:15.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.052" level="INFO">VALUE: [0.10001024999999997, 0.10000769499999995, 0.10000690299999992, 0.10001151399999997, 0.10003477799999994, 0.09998165200000009, 0.10007437499999994, 0.09989326399999987, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.409999999095305e-07, 0.10007974999999991, 0.10002202800000015, 5.409999999095305e-07, 5.419999999922709e-07, 0.10000715299999996, 0.100009236, 5.410000003536197e-07, 5.409999999095305e-07, 5.419999995481817e-07, 0.10000922200000062, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.10010422199999969, 0.09991274999999966, 0.10012324999999933, 0.0998945280000001, 0.10018836100000073, 0.09982919399999979, 0.10014561099999941, 5.420000004363601e-07, 0.09990672199999917, 0.10000769400000031, 0.10000869400000045, 0.1000087220000001, 0.1000087220000001]</msg>
<status status="PASS" starttime="20201010 12:26:15.051" endtime="20201010 12:26:15.053"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.047" endtime="20201010 12:26:15.053"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.455" endtime="20201010 12:26:15.054"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:08.381" endtime="20201010 12:26:15.055" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 12:24:54.943" endtime="20201010 12:26:15.067"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201010 12:24:53.004" endtime="20201010 12:26:15.114"></status>
</suite>
<statistics>
<total>
<stat pass="13" fail="0">Critical Tests</stat>
<stat pass="13" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="13" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="13" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="13" fail="0">dev</stat>
</tag>
<suite>
<stat pass="13" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="12" fail="0" id="s1-s2" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
