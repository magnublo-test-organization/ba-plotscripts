<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201010 12:24:53.129" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 12:24:53.705" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 12:24:53.713" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 12:24:54.831" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 12:24:53.704" endtime="20201010 12:24:54.831"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 12:24:54.834" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 12:24:54.832" endtime="20201010 12:24:54.834"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:53.702" endtime="20201010 12:24:54.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:54.837" endtime="20201010 12:24:55.035"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.836" endtime="20201010 12:24:55.036"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.062" endtime="20201010 12:24:55.081"></status>
</kw>
<msg timestamp="20201010 12:24:55.082" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.059" endtime="20201010 12:24:55.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.087" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.084" endtime="20201010 12:24:55.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.093" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:55.089" endtime="20201010 12:24:55.094"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:55.054" endtime="20201010 12:24:55.096"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:55.049" endtime="20201010 12:24:55.097"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.047" endtime="20201010 12:24:55.097"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:55.101" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:55.100" endtime="20201010 12:24:55.101"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.098" endtime="20201010 12:24:55.101"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.045" endtime="20201010 12:24:55.102"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.043" endtime="20201010 12:24:55.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.103" endtime="20201010 12:24:55.104"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.040" endtime="20201010 12:24:55.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.105" endtime="20201010 12:24:55.107"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.038" endtime="20201010 12:24:55.107"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:53.700" endtime="20201010 12:24:55.108"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:55.114" endtime="20201010 12:24:55.134"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.113" endtime="20201010 12:24:55.134"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.149" endtime="20201010 12:24:55.161"></status>
</kw>
<msg timestamp="20201010 12:24:55.161" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.146" endtime="20201010 12:24:55.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.164" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.162" endtime="20201010 12:24:55.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.167" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:55.165" endtime="20201010 12:24:55.167"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:55.144" endtime="20201010 12:24:55.168"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:55.141" endtime="20201010 12:24:55.168"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.139" endtime="20201010 12:24:55.168"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:55.172" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:55.171" endtime="20201010 12:24:55.172"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.169" endtime="20201010 12:24:55.173"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.139" endtime="20201010 12:24:55.173"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.138" endtime="20201010 12:24:55.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.174" endtime="20201010 12:24:55.175"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.137" endtime="20201010 12:24:55.176"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.135" endtime="20201010 12:24:55.176"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.111" endtime="20201010 12:24:55.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.184" endtime="20201010 12:24:55.192"></status>
</kw>
<msg timestamp="20201010 12:24:55.193" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.182" endtime="20201010 12:24:55.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.195" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.194" endtime="20201010 12:24:55.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.196" endtime="20201010 12:24:55.198"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.180" endtime="20201010 12:24:55.198"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.178" endtime="20201010 12:24:55.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.204" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201010 12:24:55.202" endtime="20201010 12:24:55.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.206" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201010 12:24:55.205" endtime="20201010 12:24:55.206"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.200" endtime="20201010 12:24:55.207"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:24:55.108" endtime="20201010 12:24:55.208" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 12:24:53.241" endtime="20201010 12:24:55.212"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.265" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 12:24:55.273" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 12:24:56.417" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 12:24:55.263" endtime="20201010 12:24:56.418"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.420" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 12:24:56.419" endtime="20201010 12:24:56.420"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.262" endtime="20201010 12:24:56.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:56.423" endtime="20201010 12:24:56.705"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.422" endtime="20201010 12:24:56.705"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.717" endtime="20201010 12:24:56.730"></status>
</kw>
<msg timestamp="20201010 12:24:56.730" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.716" endtime="20201010 12:24:56.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.733" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.731" endtime="20201010 12:24:56.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.736" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:56.734" endtime="20201010 12:24:56.736"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.713" endtime="20201010 12:24:56.737"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.711" endtime="20201010 12:24:56.737"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.710" endtime="20201010 12:24:56.738"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:56.741" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:56.741" endtime="20201010 12:24:56.742"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.738" endtime="20201010 12:24:56.742"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.709" endtime="20201010 12:24:56.742"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.709" endtime="20201010 12:24:56.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.743" endtime="20201010 12:24:56.744"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.707" endtime="20201010 12:24:56.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.746" endtime="20201010 12:24:56.747"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.706" endtime="20201010 12:24:56.748"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.261" endtime="20201010 12:24:56.748"></status>
</kw>
<test id="s1-s2-t1" name="0 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:56.755" endtime="20201010 12:24:56.775"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.753" endtime="20201010 12:24:56.776"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.788" endtime="20201010 12:24:56.800"></status>
</kw>
<msg timestamp="20201010 12:24:56.801" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.787" endtime="20201010 12:24:56.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.804" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.802" endtime="20201010 12:24:56.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.807" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:56.805" endtime="20201010 12:24:56.807"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.784" endtime="20201010 12:24:56.808"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.782" endtime="20201010 12:24:56.808"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.781" endtime="20201010 12:24:56.809"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:56.812" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:56.812" endtime="20201010 12:24:56.813"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.809" endtime="20201010 12:24:56.813"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.780" endtime="20201010 12:24:56.813"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.779" endtime="20201010 12:24:56.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.814" endtime="20201010 12:24:56.815"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.778" endtime="20201010 12:24:56.816"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.776" endtime="20201010 12:24:56.816"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.752" endtime="20201010 12:24:56.817"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.826" endtime="20201010 12:25:02.818"></status>
</kw>
<msg timestamp="20201010 12:25:02.819" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.824" endtime="20201010 12:25:02.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.824" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:02.821" endtime="20201010 12:25:02.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:02.827" endtime="20201010 12:25:02.830"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.822" endtime="20201010 12:25:02.831"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.820" endtime="20201010 12:25:02.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:02.837" level="INFO">${RESULT} = {'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:02.834" endtime="20201010 12:25:02.837"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:02.887" level="INFO">${interval} = []</msg>
<status status="PASS" starttime="20201010 12:25:02.839" endtime="20201010 12:25:02.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.890" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:02.890" endtime="20201010 12:25:02.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.892" level="INFO">VALUE: []</msg>
<status status="PASS" starttime="20201010 12:25:02.892" endtime="20201010 12:25:02.893"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.888" endtime="20201010 12:25:02.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.897" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:02.896" endtime="20201010 12:25:02.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.899" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:02.898" endtime="20201010 12:25:02.899"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.894" endtime="20201010 12:25:02.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:02.906" endtime="20201010 12:25:03.208"></status>
</kw>
<msg timestamp="20201010 12:25:03.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.058746472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.158392417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:02.904" endtime="20201010 12:25:03.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.058746472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.158392417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:03.212" endtime="20201010 12:25:03.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.220" endtime="20201010 12:25:03.221"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.902" endtime="20201010 12:25:03.222"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.900" endtime="20201010 12:25:03.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:03.226" level="INFO">${FILTERED} = [{'diff': 0.09964594500000001}, {'diff': 0.09964204200000015}, {'diff': 0.0996435}, {'diff': 0.09964451399999996}, {'diff': 0.09963756899999998}, {'diff': 0.09963365299999993}, {'diff': 0.099638888999...</msg>
<status status="PASS" starttime="20201010 12:25:03.223" endtime="20201010 12:25:03.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:03.231" level="INFO">${RESULT} = {'diff': [0.09964594500000001, 0.09964204200000015, 0.0996435, 0.09964451399999996, 0.09963756899999998, 0.09963365299999993, 0.09963888899999995, 0.09962920800000008, 0.0996303890000001, 0.0996303470...</msg>
<status status="PASS" starttime="20201010 12:25:03.227" endtime="20201010 12:25:03.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.235" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:03.234" endtime="20201010 12:25:03.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.237" level="INFO">VALUE: [0.09964594500000001, 0.09964204200000015, 0.0996435, 0.09964451399999996, 0.09963756899999998, 0.09963365299999993, 0.09963888899999995, 0.09962920800000008, 0.0996303890000001, 0.09963034700000017, 0.09962851399999995, 0.09963111100000033, 0.0996344859999998, 0.0996332080000002, 0.09963415300000023, 0.09963422200000016, 0.09964069400000009, 0.09964347299999998, 0.099644611, 0.0996382920000003, 0.09964023599999994, 0.09963588899999998, 0.09962911100000005, 0.09963420899999997, 0.09963394499999989, 0.09963941600000004, 0.0996386939999998, 0.09963582000000004, 0.09963795799999975, 0.09964068099999945, 0.09964030500000032, 0.09963516699999975, 0.09963422199999972, 0.0996319450000005, 0.099634569, 0.0996367229999997, 0.09963834699999996, 0.09963787499999999, 0.0996350829999999, 0.0996307639999996, 0.09963144499999999, 0.09963851400000046, 0.09963233299999974, 0.09962781900000017, 0.09963718099999941, 0.09963624999999965, 0.09963879200000036, 0.09963592999999982, 0.09963652799999956, 0.09963752800000059]</msg>
<status status="PASS" starttime="20201010 12:25:03.236" endtime="20201010 12:25:03.238"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.232" endtime="20201010 12:25:03.238"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.818" endtime="20201010 12:25:03.238"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:24:56.748" endtime="20201010 12:25:03.239" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="5 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:03.247" endtime="20201010 12:25:03.267"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.246" endtime="20201010 12:25:03.268"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.280" endtime="20201010 12:25:03.292"></status>
</kw>
<msg timestamp="20201010 12:25:03.293" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:03.279" endtime="20201010 12:25:03.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.295" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:03.294" endtime="20201010 12:25:03.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.299" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:03.297" endtime="20201010 12:25:03.299"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:03.276" endtime="20201010 12:25:03.300"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:03.274" endtime="20201010 12:25:03.300"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.273" endtime="20201010 12:25:03.301"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:03.304" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:03.304" endtime="20201010 12:25:03.305"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.301" endtime="20201010 12:25:03.305"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.272" endtime="20201010 12:25:03.305"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.271" endtime="20201010 12:25:03.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.306" endtime="20201010 12:25:03.307"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.270" endtime="20201010 12:25:03.308"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.268" endtime="20201010 12:25:03.308"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.244" endtime="20201010 12:25:03.309"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.319" endtime="20201010 12:25:09.323"></status>
</kw>
<msg timestamp="20201010 12:25:09.324" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '10741'}, {'interval': '84225'}, {'interval': '46186'}, {'interval': '37795'}, {'interval': '34698'}...</msg>
<status status="PASS" starttime="20201010 12:25:03.318" endtime="20201010 12:25:09.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.329" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '10741'}, {'interval': '84225'}, {'interval': '46186'}, {'interval': '37795'}, {'interval': '34698'}...</msg>
<status status="PASS" starttime="20201010 12:25:09.326" endtime="20201010 12:25:09.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.331" endtime="20201010 12:25:09.335"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.315" endtime="20201010 12:25:09.336"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.312" endtime="20201010 12:25:09.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:09.342" level="INFO">${RESULT} = {'interval': [10741, 84225, 46186, 37795, 34698], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:09.338" endtime="20201010 12:25:09.342"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:09.352" level="INFO">${interval} = [10741, 84225, 46186, 37795, 34698]</msg>
<status status="PASS" starttime="20201010 12:25:09.344" endtime="20201010 12:25:09.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.360" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:09.358" endtime="20201010 12:25:09.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.364" level="INFO">VALUE: [10741, 84225, 46186, 37795, 34698]</msg>
<status status="PASS" starttime="20201010 12:25:09.362" endtime="20201010 12:25:09.364"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.354" endtime="20201010 12:25:09.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.373" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:09.371" endtime="20201010 12:25:09.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.377" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:09.375" endtime="20201010 12:25:09.377"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.367" endtime="20201010 12:25:09.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.392" endtime="20201010 12:25:09.691"></status>
</kw>
<msg timestamp="20201010 12:25:09.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.060447347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.160079875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:09.389" endtime="20201010 12:25:09.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.060447347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.160079875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:09.695" endtime="20201010 12:25:09.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.703" endtime="20201010 12:25:09.704"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.383" endtime="20201010 12:25:09.705"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.380" endtime="20201010 12:25:09.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:09.709" level="INFO">${FILTERED} = [{'diff': 0.09963252800000011}, {'diff': 0.09963311099999994}, {'diff': 0.09963224999999998}, {'diff': 0.09963433300000002}, {'diff': 0.09964342999999998}, {'diff': 0.09964044499999991}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201010 12:25:09.706" endtime="20201010 12:25:09.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:09.714" level="INFO">${RESULT} = {'diff': [0.09963252800000011, 0.09963311099999994, 0.09963224999999998, 0.09963433300000002, 0.09964342999999998, 0.09964044499999991, 0.09964436099999996, 0.09964472200000007, 0.09964063899999998, 0...</msg>
<status status="PASS" starttime="20201010 12:25:09.710" endtime="20201010 12:25:09.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.718" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:09.717" endtime="20201010 12:25:09.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.720" level="INFO">VALUE: [0.09963252800000011, 0.09963311099999994, 0.09963224999999998, 0.09963433300000002, 0.09964342999999998, 0.09964044499999991, 0.09964436099999996, 0.09964472200000007, 0.09964063899999998, 0.09964117999999988, 0.09964369500000014, 0.09963783300000006, 0.09963557000000023, 0.09963709700000001, 0.09963531899999989, 0.0996364449999998, 0.0996382920000003, 0.09963516700000019, 0.09963948600000005, 0.09963098599999975, 0.09963491599999985, 0.09963383299999995, 0.09964122200000025, 0.09963726400000006, 0.0996382640000002, 0.09963759700000008, 0.0996465419999999, 0.09964466700000019, 0.09964019400000002, 0.09964304200000029, 0.09964220899999976, 0.09963505600000033, 0.09963663899999986, 0.09963276399999987, 0.09963311100000016, 0.0996229030000002, 0.09964847200000015, 0.09962931899999994, 0.0996276939999996, 0.0996289310000007, 0.09962838900000026, 0.09962694500000069, 0.09963070800000029, 0.09962823600000004, 0.09962215300000032, 0.09962308400000008, 0.09962602799999942, 0.0996237080000002, 0.09962726400000044, 0.09962505500000063]</msg>
<status status="PASS" starttime="20201010 12:25:09.719" endtime="20201010 12:25:09.721"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.715" endtime="20201010 12:25:09.721"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.310" endtime="20201010 12:25:09.721"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:03.242" endtime="20201010 12:25:09.723" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="10 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:09.730" endtime="20201010 12:25:09.750"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.729" endtime="20201010 12:25:09.750"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.763" endtime="20201010 12:25:09.776"></status>
</kw>
<msg timestamp="20201010 12:25:09.777" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:09.762" endtime="20201010 12:25:09.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.779" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:09.778" endtime="20201010 12:25:09.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.783" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:09.780" endtime="20201010 12:25:09.783"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:09.759" endtime="20201010 12:25:09.784"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:09.757" endtime="20201010 12:25:09.784"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.756" endtime="20201010 12:25:09.785"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:09.789" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:09.788" endtime="20201010 12:25:09.789"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.786" endtime="20201010 12:25:09.789"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.755" endtime="20201010 12:25:09.789"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.754" endtime="20201010 12:25:09.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.790" endtime="20201010 12:25:09.792"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.753" endtime="20201010 12:25:09.792"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.751" endtime="20201010 12:25:09.793"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.727" endtime="20201010 12:25:09.793"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.802" endtime="20201010 12:25:15.817"></status>
</kw>
<msg timestamp="20201010 12:25:15.818" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '37694'}, {'interval': '23825'}, {'interval': '30414'}, {'interval': '39030'}, {'interval': '45533'...</msg>
<status status="PASS" starttime="20201010 12:25:09.801" endtime="20201010 12:25:15.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:15.824" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '37694'}, {'interval': '23825'}, {'interval': '30414'}, {'interval': '39030'}, {'interval': '45533'...</msg>
<status status="PASS" starttime="20201010 12:25:15.821" endtime="20201010 12:25:15.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:15.826" endtime="20201010 12:25:15.829"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.798" endtime="20201010 12:25:15.830"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.796" endtime="20201010 12:25:15.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:15.837" level="INFO">${RESULT} = {'interval': [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:15.833" endtime="20201010 12:25:15.837"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:15.847" level="INFO">${interval} = [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]</msg>
<status status="PASS" starttime="20201010 12:25:15.839" endtime="20201010 12:25:15.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:15.855" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:15.853" endtime="20201010 12:25:15.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:15.859" level="INFO">VALUE: [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]</msg>
<status status="PASS" starttime="20201010 12:25:15.857" endtime="20201010 12:25:15.860"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.849" endtime="20201010 12:25:15.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:15.868" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:15.866" endtime="20201010 12:25:15.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:15.872" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:15.870" endtime="20201010 12:25:15.873"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.862" endtime="20201010 12:25:15.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:15.891" endtime="20201010 12:25:16.192"></status>
</kw>
<msg timestamp="20201010 12:25:16.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.062428667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.162044917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:15.884" endtime="20201010 12:25:16.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.062428667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.162044917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:16.196" endtime="20201010 12:25:16.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.204" endtime="20201010 12:25:16.205"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.879" endtime="20201010 12:25:16.206"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:15.875" endtime="20201010 12:25:16.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:16.210" level="INFO">${FILTERED} = [{'diff': 0.09961624999999996}, {'diff': 0.0996152079999999}, {'diff': 0.09961481999999999}, {'diff': 0.09961193000000002}, {'diff': 0.09966454199999997}, {'diff': 0.09955484700000006}, {'diff': 0.099...</msg>
<status status="PASS" starttime="20201010 12:25:16.207" endtime="20201010 12:25:16.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:16.214" level="INFO">${RESULT} = {'diff': [0.09961624999999996, 0.0996152079999999, 0.09961481999999999, 0.09961193000000002, 0.09966454199999997, 0.09955484700000006, 0.09960898600000001, 0.0996098190000001, 0.09960879199999995, 0.0...</msg>
<status status="PASS" starttime="20201010 12:25:16.211" endtime="20201010 12:25:16.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.218" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:16.217" endtime="20201010 12:25:16.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.220" level="INFO">VALUE: [0.09961624999999996, 0.0996152079999999, 0.09961481999999999, 0.09961193000000002, 0.09966454199999997, 0.09955484700000006, 0.09960898600000001, 0.0996098190000001, 0.09960879199999995, 0.09961527800000014, 0.09961687500000016, 0.0996104579999999, 0.09960930599999962, 0.099609944, 0.09961511099999987, 0.09961386099999991, 0.09961670800000011, 0.09961483400000004, 0.09961970899999972, 0.09961831899999973, 0.0996166810000001, 0.09961672300000002, 0.09962023600000025, 0.09961855499999972, 0.09961848599999978, 0.09961092999999988, 0.09961448600000011, 0.09962245800000025, 0.09967340300000016, 0.09957237500000016, 0.09969737499999987, 0.0995420970000005, 0.09962630599999933, 0.09962340199999975, 0.0996191529999999, 0.09962197299999964, 0.0996171109999997, 0.09961999999999982, 0.09962123599999995, 0.09962419499999964, 0.09962858299999944, 0.09962970800000015, 0.09963230500000009, 0.09963506999999971, 0.0996368470000002, 0.09962720900000033, 0.09963163900000005, 0.09963086099999963, 0.09963647200000025, 0.09963419400000006]</msg>
<status status="PASS" starttime="20201010 12:25:16.219" endtime="20201010 12:25:16.221"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.215" endtime="20201010 12:25:16.221"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.794" endtime="20201010 12:25:16.222"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:09.725" endtime="20201010 12:25:16.223" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="15 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:16.230" endtime="20201010 12:25:16.249"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.229" endtime="20201010 12:25:16.250"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.264" endtime="20201010 12:25:16.276"></status>
</kw>
<msg timestamp="20201010 12:25:16.276" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:16.262" endtime="20201010 12:25:16.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.279" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:16.277" endtime="20201010 12:25:16.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.282" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:16.280" endtime="20201010 12:25:16.282"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:16.260" endtime="20201010 12:25:16.283"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:16.257" endtime="20201010 12:25:16.283"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.256" endtime="20201010 12:25:16.284"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:16.288" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:16.287" endtime="20201010 12:25:16.288"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.285" endtime="20201010 12:25:16.288"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.255" endtime="20201010 12:25:16.288"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.254" endtime="20201010 12:25:16.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.289" endtime="20201010 12:25:16.291"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.252" endtime="20201010 12:25:16.291"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.251" endtime="20201010 12:25:16.292"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.227" endtime="20201010 12:25:16.292"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.301" endtime="20201010 12:25:22.330"></status>
</kw>
<msg timestamp="20201010 12:25:22.331" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '52653'}, {'interval': '31223'}, {'interval': '17873'}, {'interval': '99702'}, {'interval': '86231'...</msg>
<status status="PASS" starttime="20201010 12:25:16.299" endtime="20201010 12:25:22.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.336" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '52653'}, {'interval': '31223'}, {'interval': '17873'}, {'interval': '99702'}, {'interval': '86231'...</msg>
<status status="PASS" starttime="20201010 12:25:22.333" endtime="20201010 12:25:22.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.339" endtime="20201010 12:25:22.342"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.297" endtime="20201010 12:25:22.343"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.295" endtime="20201010 12:25:22.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:22.350" level="INFO">${RESULT} = {'interval': [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:22.346" endtime="20201010 12:25:22.350"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:22.360" level="INFO">${interval} = [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]</msg>
<status status="PASS" starttime="20201010 12:25:22.352" endtime="20201010 12:25:22.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.369" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:22.366" endtime="20201010 12:25:22.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.371" level="INFO">VALUE: [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]</msg>
<status status="PASS" starttime="20201010 12:25:22.370" endtime="20201010 12:25:22.372"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.362" endtime="20201010 12:25:22.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.375" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:22.374" endtime="20201010 12:25:22.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.377" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:22.377" endtime="20201010 12:25:22.378"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.373" endtime="20201010 12:25:22.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.384" endtime="20201010 12:25:22.682"></status>
</kw>
<msg timestamp="20201010 12:25:22.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.063462333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.163097736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:22.383" endtime="20201010 12:25:22.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.063462333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.163097736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:22.686" endtime="20201010 12:25:22.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.694" endtime="20201010 12:25:22.696"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.381" endtime="20201010 12:25:22.696"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.379" endtime="20201010 12:25:22.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:22.701" level="INFO">${FILTERED} = [{'diff': 0.09963540300000018}, {'diff': 0.09963487500000001}, {'diff': 0.09963120800000014}, {'diff': 0.09966243100000005}, {'diff': 0.09963561100000007}, {'diff': 0.09958772199999988}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201010 12:25:22.698" endtime="20201010 12:25:22.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:22.704" level="INFO">${RESULT} = {'diff': [0.09963540300000018, 0.09963487500000001, 0.09963120800000014, 0.09966243100000005, 0.09963561100000007, 0.09958772199999988, 0.09962130599999997, 0.09962162500000016, 0.09962352799999996, 0...</msg>
<status status="PASS" starttime="20201010 12:25:22.701" endtime="20201010 12:25:22.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.709" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:22.708" endtime="20201010 12:25:22.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.712" level="INFO">VALUE: [0.09963540300000018, 0.09963487500000001, 0.09963120800000014, 0.09966243100000005, 0.09963561100000007, 0.09958772199999988, 0.09962130599999997, 0.09962162500000016, 0.09962352799999996, 0.09961962499999988, 0.09962497199999998, 0.09962651400000011, 0.0996250970000001, 0.09962757, 0.09962740300000039, 0.09963327700000013, 0.09963161099999995, 0.09963100000000003, 0.09962956999999983, 0.09962611100000007, 0.09962356999999988, 0.09962583300000016, 0.09962379200000004, 0.09962498699999989, 0.09962279099999982, 0.09962243099999979, 0.09962763899999993, 0.09967373599999974, 0.09958438899999988, 0.09963413899999951, 0.09962368099999974, 0.09962570799999959, 0.09961872199999977, 0.09971112499999979, 0.09951772199999986, 0.09961926400000021, 0.09961990299999979, 0.09962720900000033, 0.0996268330000003, 0.09962862499999936, 0.0996286529999999, 0.09962843100000018, 0.09962866700000017, 0.0996308749999999, 0.09962819400000011, 0.09962757, 0.09962336099999991, 0.09962566699999975, 0.09974744400000013, 0.09950801399999953]</msg>
<status status="PASS" starttime="20201010 12:25:22.710" endtime="20201010 12:25:22.712"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.705" endtime="20201010 12:25:22.712"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.293" endtime="20201010 12:25:22.713"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:16.224" endtime="20201010 12:25:22.714" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="20 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:22.721" endtime="20201010 12:25:22.741"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.720" endtime="20201010 12:25:22.741"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.754" endtime="20201010 12:25:22.766"></status>
</kw>
<msg timestamp="20201010 12:25:22.767" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:22.752" endtime="20201010 12:25:22.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.769" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:22.768" endtime="20201010 12:25:22.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.772" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:22.770" endtime="20201010 12:25:22.773"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:22.750" endtime="20201010 12:25:22.773"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:22.748" endtime="20201010 12:25:22.774"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.746" endtime="20201010 12:25:22.774"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:22.778" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:22.777" endtime="20201010 12:25:22.778"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.775" endtime="20201010 12:25:22.778"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.746" endtime="20201010 12:25:22.779"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.745" endtime="20201010 12:25:22.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.780" endtime="20201010 12:25:22.781"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.744" endtime="20201010 12:25:22.782"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.742" endtime="20201010 12:25:22.782"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.718" endtime="20201010 12:25:22.782"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.792" endtime="20201010 12:25:28.833"></status>
</kw>
<msg timestamp="20201010 12:25:28.834" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '27660'}, {'interval': '24774'}, {'interval': '50283'}, {'interval': '17455'}, {'interval': '56207'...</msg>
<status status="PASS" starttime="20201010 12:25:22.790" endtime="20201010 12:25:28.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:28.840" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '27660'}, {'interval': '24774'}, {'interval': '50283'}, {'interval': '17455'}, {'interval': '56207'...</msg>
<status status="PASS" starttime="20201010 12:25:28.836" endtime="20201010 12:25:28.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:28.842" endtime="20201010 12:25:28.845"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.787" endtime="20201010 12:25:28.847"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.785" endtime="20201010 12:25:28.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:28.854" level="INFO">${RESULT} = {'interval': [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:28.849" endtime="20201010 12:25:28.854"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:28.864" level="INFO">${interval} = [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]</msg>
<status status="PASS" starttime="20201010 12:25:28.856" endtime="20201010 12:25:28.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:28.871" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:28.869" endtime="20201010 12:25:28.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:28.876" level="INFO">VALUE: [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]</msg>
<status status="PASS" starttime="20201010 12:25:28.874" endtime="20201010 12:25:28.876"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.866" endtime="20201010 12:25:28.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:28.884" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:28.882" endtime="20201010 12:25:28.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:28.889" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:28.887" endtime="20201010 12:25:28.889"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.879" endtime="20201010 12:25:28.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:28.904" endtime="20201010 12:25:29.206"></status>
</kw>
<msg timestamp="20201010 12:25:29.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.065561639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.165197139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:28.900" endtime="20201010 12:25:29.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.065561639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.165197139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:29.210" endtime="20201010 12:25:29.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.218" endtime="20201010 12:25:29.220"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.895" endtime="20201010 12:25:29.220"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.892" endtime="20201010 12:25:29.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:29.224" level="INFO">${FILTERED} = [{'diff': 0.09963549999999999}, {'diff': 0.09963987499999982}, {'diff': 0.0996405279999999}, {'diff': 0.09978227799999995}, {'diff': 0.09949808300000007}, {'diff': 0.09976412499999987}, {'diff': 0.099...</msg>
<status status="PASS" starttime="20201010 12:25:29.221" endtime="20201010 12:25:29.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:29.229" level="INFO">${RESULT} = {'diff': [0.09963549999999999, 0.09963987499999982, 0.0996405279999999, 0.09978227799999995, 0.09949808300000007, 0.09976412499999987, 0.09950426400000012, 0.09962599999999999, 0.09962879200000008, 0....</msg>
<status status="PASS" starttime="20201010 12:25:29.225" endtime="20201010 12:25:29.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.233" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:29.232" endtime="20201010 12:25:29.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.236" level="INFO">VALUE: [0.09963549999999999, 0.09963987499999982, 0.0996405279999999, 0.09978227799999995, 0.09949808300000007, 0.09976412499999987, 0.09950426400000012, 0.09962599999999999, 0.09962879200000008, 0.0996351390000001, 0.09970129199999977, 0.09971516600000019, 0.09944302699999996, 0.09962420800000027, 0.09962812500000018, 0.09972091699999996, 0.0995315419999998, 0.09963126400000011, 0.09963634700000013, 0.09963074999999977, 0.09963284699999964, 0.09962737499999985, 0.09961955499999986, 0.09970016599999987, 0.09955090299999991, 0.099631166, 0.09963301400000013, 0.09962788899999975, 0.0996324030000002, 0.0996237360000003, 0.0996185839999999, 0.0996239300000008, 0.0996297230000005, 0.09962488800000013, 0.09961666700000027, 0.09961748599999964, 0.09961726399999993, 0.09961720799999974, 0.0996201120000002, 0.0996245, 0.09962343000000029, 0.09962308400000008, 0.09961493100000052, 0.09962390300000035, 0.09962193100000061, 0.09962388900000008, 0.09962402800000003, 0.09962593099999939, 0.09960426399999989, 0.09961450000000038]</msg>
<status status="PASS" starttime="20201010 12:25:29.234" endtime="20201010 12:25:29.236"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.230" endtime="20201010 12:25:29.236"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.783" endtime="20201010 12:25:29.237"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:22.716" endtime="20201010 12:25:29.238" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:29.245" endtime="20201010 12:25:29.265"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.244" endtime="20201010 12:25:29.265"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.278" endtime="20201010 12:25:29.291"></status>
</kw>
<msg timestamp="20201010 12:25:29.291" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:29.276" endtime="20201010 12:25:29.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.294" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:29.292" endtime="20201010 12:25:29.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.297" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:29.295" endtime="20201010 12:25:29.298"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:29.274" endtime="20201010 12:25:29.298"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:29.271" endtime="20201010 12:25:29.299"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.270" endtime="20201010 12:25:29.299"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:29.303" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:29.302" endtime="20201010 12:25:29.303"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.300" endtime="20201010 12:25:29.303"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.269" endtime="20201010 12:25:29.304"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.269" endtime="20201010 12:25:29.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.304" endtime="20201010 12:25:29.306"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.268" endtime="20201010 12:25:29.306"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.266" endtime="20201010 12:25:29.307"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.242" endtime="20201010 12:25:29.307"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.316" endtime="20201010 12:25:35.387"></status>
</kw>
<msg timestamp="20201010 12:25:35.388" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '16291'}, {'interval': '74117'}, {'interval': '74576'}, {'interval': '31746'}, {'interval': '33340'...</msg>
<status status="PASS" starttime="20201010 12:25:29.315" endtime="20201010 12:25:35.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.394" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '16291'}, {'interval': '74117'}, {'interval': '74576'}, {'interval': '31746'}, {'interval': '33340'...</msg>
<status status="PASS" starttime="20201010 12:25:35.390" endtime="20201010 12:25:35.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.395" endtime="20201010 12:25:35.397"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.312" endtime="20201010 12:25:35.397"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.310" endtime="20201010 12:25:35.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:35.401" level="INFO">${RESULT} = {'interval': [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248], 'focus': [...</msg>
<status status="PASS" starttime="20201010 12:25:35.399" endtime="20201010 12:25:35.401"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:35.406" level="INFO">${interval} = [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248]</msg>
<status status="PASS" starttime="20201010 12:25:35.402" endtime="20201010 12:25:35.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.410" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:35.409" endtime="20201010 12:25:35.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.412" level="INFO">VALUE: [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248]</msg>
<status status="PASS" starttime="20201010 12:25:35.411" endtime="20201010 12:25:35.413"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.407" endtime="20201010 12:25:35.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.416" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:35.416" endtime="20201010 12:25:35.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.418" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:35.418" endtime="20201010 12:25:35.419"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.414" endtime="20201010 12:25:35.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.427" endtime="20201010 12:25:35.725"></status>
</kw>
<msg timestamp="20201010 12:25:35.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.067530764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.167174653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:35.426" endtime="20201010 12:25:35.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.067530764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.167174653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:35.730" endtime="20201010 12:25:35.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.738" endtime="20201010 12:25:35.739"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.423" endtime="20201010 12:25:35.740"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.420" endtime="20201010 12:25:35.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:35.744" level="INFO">${FILTERED} = [{'diff': 0.09964388899999999}, {'diff': 0.09963668000000014}, {'diff': 0.09963797200000002}, {'diff': 0.09962955500000015}, {'diff': 0.09963404199999992}, {'diff': 0.099634153}, {'diff': 0.0996255269...</msg>
<status status="PASS" starttime="20201010 12:25:35.741" endtime="20201010 12:25:35.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:35.748" level="INFO">${RESULT} = {'diff': [0.09964388899999999, 0.09963668000000014, 0.09963797200000002, 0.09962955500000015, 0.09963404199999992, 0.099634153, 0.09962552699999994, 0.09962776399999984, 0.09970463900000004, 0.0995439...</msg>
<status status="PASS" starttime="20201010 12:25:35.745" endtime="20201010 12:25:35.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.752" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:35.751" endtime="20201010 12:25:35.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.755" level="INFO">VALUE: [0.09964388899999999, 0.09963668000000014, 0.09963797200000002, 0.09962955500000015, 0.09963404199999992, 0.099634153, 0.09962552699999994, 0.09962776399999984, 0.09970463900000004, 0.09954398600000003, 0.09961920800000001, 0.09961669499999992, 0.09961715299999963, 0.09961799999999998, 0.09961843000000004, 0.09961930600000013, 0.09968501399999985, 0.099554264, 0.09962117999999975, 0.09961702799999994, 0.09962123599999995, 0.09962020800000015, 0.09962012499999995, 0.0996171669999999, 0.09962009699999985, 0.09962437500000032, 0.09961183299999998, 0.09963122300000027, 0.09961855500000016, 0.09961748699999973, 0.09961726399999993, 0.09961848599999978, 0.09962101400000023, 0.09964197300000066, 0.0997532080000001, 0.09948626400000027, 0.09961761100000022, 0.09976343099999951, 0.09947870800000036, 0.099623083, 0.09962306899999973, 0.09962122300000065, 0.09962072300000013, 0.09961038899999952, 0.09962654100000012, 0.0996213749999999, 0.09961541699999987, 0.09961544400000033, 0.09961641700000001, 0.09961856899999955]</msg>
<status status="PASS" starttime="20201010 12:25:35.753" endtime="20201010 12:25:35.755"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.749" endtime="20201010 12:25:35.756"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.308" endtime="20201010 12:25:35.756"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:29.240" endtime="20201010 12:25:35.757" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="30 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:35.764" endtime="20201010 12:25:35.785"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.763" endtime="20201010 12:25:35.785"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.798" endtime="20201010 12:25:35.811"></status>
</kw>
<msg timestamp="20201010 12:25:35.811" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:35.797" endtime="20201010 12:25:35.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.814" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:35.812" endtime="20201010 12:25:35.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.817" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:35.815" endtime="20201010 12:25:35.818"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:35.794" endtime="20201010 12:25:35.818"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:35.792" endtime="20201010 12:25:35.819"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.791" endtime="20201010 12:25:35.819"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:35.823" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:35.822" endtime="20201010 12:25:35.823"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.820" endtime="20201010 12:25:35.823"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.790" endtime="20201010 12:25:35.824"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.789" endtime="20201010 12:25:35.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.825" endtime="20201010 12:25:35.826"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.788" endtime="20201010 12:25:35.827"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.786" endtime="20201010 12:25:35.827"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.761" endtime="20201010 12:25:35.827"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>30</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.837" endtime="20201010 12:25:41.932"></status>
</kw>
<msg timestamp="20201010 12:25:41.934" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 30 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '74757'}, {'interval': '70347'}, {'interval': '33034'}, {'interval': '80423'}, {'interval': '79926'...</msg>
<status status="PASS" starttime="20201010 12:25:35.835" endtime="20201010 12:25:41.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:41.940" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 30 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '74757'}, {'interval': '70347'}, {'interval': '33034'}, {'interval': '80423'}, {'interval': '79926'...</msg>
<status status="PASS" starttime="20201010 12:25:41.936" endtime="20201010 12:25:41.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:41.942" endtime="20201010 12:25:41.946"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.832" endtime="20201010 12:25:41.947"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.830" endtime="20201010 12:25:41.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:41.955" level="INFO">${RESULT} = {'interval': [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 5814...</msg>
<status status="PASS" starttime="20201010 12:25:41.949" endtime="20201010 12:25:41.955"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:41.961" level="INFO">${interval} = [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 58146, 28867, 669...</msg>
<status status="PASS" starttime="20201010 12:25:41.957" endtime="20201010 12:25:41.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:41.965" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:41.964" endtime="20201010 12:25:41.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:41.967" level="INFO">VALUE: [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 58146, 28867, 66958, 17521]</msg>
<status status="PASS" starttime="20201010 12:25:41.966" endtime="20201010 12:25:41.967"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.962" endtime="20201010 12:25:41.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:41.971" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:41.970" endtime="20201010 12:25:41.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:41.973" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:41.972" endtime="20201010 12:25:41.973"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.968" endtime="20201010 12:25:41.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:41.981" endtime="20201010 12:25:42.278"></status>
</kw>
<msg timestamp="20201010 12:25:42.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.070627028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.170262597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:41.979" endtime="20201010 12:25:42.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.070627028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.170262597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:42.282" endtime="20201010 12:25:42.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.290" endtime="20201010 12:25:42.292"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.977" endtime="20201010 12:25:42.292"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.975" endtime="20201010 12:25:42.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:42.297" level="INFO">${FILTERED} = [{'diff': 0.09963556899999992}, {'diff': 0.09963301400000013}, {'diff': 0.09962033399999992}, {'diff': 0.0996423609999999}, {'diff': 0.09963547299999997}, {'diff': 0.09963227699999999}, {'diff': 0.099...</msg>
<status status="PASS" starttime="20201010 12:25:42.293" endtime="20201010 12:25:42.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:42.301" level="INFO">${RESULT} = {'diff': [0.09963556899999992, 0.09963301400000013, 0.09962033399999992, 0.0996423609999999, 0.09963547299999997, 0.09963227699999999, 0.09990541599999991, 0.09935332000000008, 0.09962737500000007, 0....</msg>
<status status="PASS" starttime="20201010 12:25:42.298" endtime="20201010 12:25:42.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.306" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:42.305" endtime="20201010 12:25:42.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.308" level="INFO">VALUE: [0.09963556899999992, 0.09963301400000013, 0.09962033399999992, 0.0996423609999999, 0.09963547299999997, 0.09963227699999999, 0.09990541599999991, 0.09935332000000008, 0.09962737500000007, 0.09962362499999977, 0.09962445800000008, 0.09962523599999962, 0.0996265420000002, 0.0996220280000002, 0.09962816600000002, 0.09962254200000009, 0.09962534700000036, 0.09984337499999985, 0.09942118099999986, 0.09978930500000027, 0.0994619590000001, 0.09962457000000002, 0.09962527800000043, 0.09962604100000005, 0.09962729200000009, 0.09973170799999975, 0.09961184699999981, 0.09954177799999986, 0.09963395799999963, 0.09963120799999992, 0.09963413799999987, 0.099623083, 0.09965287500000031, 0.09962406899999987, 0.09963531999999997, 0.09963255499999946, 0.09963199999999972, 0.09963141600000025, 0.0996353059999997, 0.09963640299999987, 0.09963448600000024, 0.09963141699999944, 0.09963598600000001, 0.09963516699999975, 0.09963719400000048, 0.09963248599999996, 0.09963043099999958, 0.09961890299999965, 0.09963359699999952, 0.09963052799999961]</msg>
<status status="PASS" starttime="20201010 12:25:42.307" endtime="20201010 12:25:42.309"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.302" endtime="20201010 12:25:42.309"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.828" endtime="20201010 12:25:42.310"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:35.759" endtime="20201010 12:25:42.311" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="35 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:42.319" endtime="20201010 12:25:42.339"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.318" endtime="20201010 12:25:42.339"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.352" endtime="20201010 12:25:42.365"></status>
</kw>
<msg timestamp="20201010 12:25:42.366" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:42.351" endtime="20201010 12:25:42.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.369" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:42.367" endtime="20201010 12:25:42.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.372" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:42.370" endtime="20201010 12:25:42.372"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:42.348" endtime="20201010 12:25:42.373"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:42.346" endtime="20201010 12:25:42.373"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.345" endtime="20201010 12:25:42.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:42.378" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:42.377" endtime="20201010 12:25:42.378"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.375" endtime="20201010 12:25:42.378"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.344" endtime="20201010 12:25:42.378"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.343" endtime="20201010 12:25:42.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.379" endtime="20201010 12:25:42.381"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.342" endtime="20201010 12:25:42.381"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.340" endtime="20201010 12:25:42.382"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.316" endtime="20201010 12:25:42.382"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>35</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.391" endtime="20201010 12:25:48.483"></status>
</kw>
<msg timestamp="20201010 12:25:48.484" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 35 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '54295'}, {'interval': '37199'}, {'interval': '39990'}, {'interval': '20568'}, {'interval': '10171'...</msg>
<status status="PASS" starttime="20201010 12:25:42.389" endtime="20201010 12:25:48.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.487" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 35 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '54295'}, {'interval': '37199'}, {'interval': '39990'}, {'interval': '20568'}, {'interval': '10171'...</msg>
<status status="PASS" starttime="20201010 12:25:48.485" endtime="20201010 12:25:48.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.488" endtime="20201010 12:25:48.490"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.387" endtime="20201010 12:25:48.490"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.385" endtime="20201010 12:25:48.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:48.494" level="INFO">${RESULT} = {'interval': [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 4353...</msg>
<status status="PASS" starttime="20201010 12:25:48.492" endtime="20201010 12:25:48.495"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:48.499" level="INFO">${interval} = [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 43539, 68459, 281...</msg>
<status status="PASS" starttime="20201010 12:25:48.495" endtime="20201010 12:25:48.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.503" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:48.502" endtime="20201010 12:25:48.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.505" level="INFO">VALUE: [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 43539, 68459, 28154, 76170, 13496, 73105, 63810, 92352, 47335]</msg>
<status status="PASS" starttime="20201010 12:25:48.504" endtime="20201010 12:25:48.505"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.500" endtime="20201010 12:25:48.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.513" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:48.512" endtime="20201010 12:25:48.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.515" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:48.514" endtime="20201010 12:25:48.516"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.507" endtime="20201010 12:25:48.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.523" endtime="20201010 12:25:48.821"></status>
</kw>
<msg timestamp="20201010 12:25:48.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.071806847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.171432083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:48.521" endtime="20201010 12:25:48.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.071806847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.171432083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:48.825" endtime="20201010 12:25:48.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.833" endtime="20201010 12:25:48.834"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.519" endtime="20201010 12:25:48.835"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.517" endtime="20201010 12:25:48.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:48.839" level="INFO">${FILTERED} = [{'diff': 0.09962523600000006}, {'diff': 0.09962936199999994}, {'diff': 0.09962941599999997}, {'diff': 0.09978119399999996}, {'diff': 0.09963443099999991}, {'diff': 0.09946616600000002}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201010 12:25:48.836" endtime="20201010 12:25:48.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:48.843" level="INFO">${RESULT} = {'diff': [0.09962523600000006, 0.09962936199999994, 0.09962941599999997, 0.09978119399999996, 0.09963443099999991, 0.09946616600000002, 0.09962645800000014, 0.09962873699999997, 0.09962795800000013, 0...</msg>
<status status="PASS" starttime="20201010 12:25:48.840" endtime="20201010 12:25:48.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.848" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:48.846" endtime="20201010 12:25:48.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.851" level="INFO">VALUE: [0.09962523600000006, 0.09962936199999994, 0.09962941599999997, 0.09978119399999996, 0.09963443099999991, 0.09946616600000002, 0.09962645800000014, 0.09962873699999997, 0.09962795800000013, 0.09979322199999996, 0.09946105599999999, 0.09988826400000006, 0.09935762500000012, 0.09977063900000038, 0.09962679099999994, 0.09944247200000023, 0.0996117919999997, 0.09960998599999993, 0.09962052799999999, 0.09964666700000002, 0.09958848600000003, 0.09962401399999976, 0.0996245280000001, 0.09965040199999997, 0.09974044500000012, 0.09954702799999993, 0.09955412500000005, 0.09962399999999993, 0.09962469400000007, 0.09962465300000023, 0.09962486199999976, 0.09962538800000065, 0.099623083, 0.09961630500000052, 0.09983572299999999, 0.09942859700000017, 0.09962340299999983, 0.09962559700000018, 0.09981069400000031, 0.09923193000000019, 0.09983584700000048, 0.09942508299999986, 0.09962887499999962, 0.09964470800000047, 0.09963543099999939, 0.09964061099999988, 0.0996348609999993, 0.09963512499999982, 0.09963176400000062, 0.09994177699999973]</msg>
<status status="PASS" starttime="20201010 12:25:48.849" endtime="20201010 12:25:48.851"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.844" endtime="20201010 12:25:48.851"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.383" endtime="20201010 12:25:48.852"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:42.313" endtime="20201010 12:25:48.853" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="40 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:48.862" endtime="20201010 12:25:48.881"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.860" endtime="20201010 12:25:48.882"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.895" endtime="20201010 12:25:48.908"></status>
</kw>
<msg timestamp="20201010 12:25:48.908" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:48.893" endtime="20201010 12:25:48.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.911" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:48.909" endtime="20201010 12:25:48.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.914" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:48.912" endtime="20201010 12:25:48.914"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:48.891" endtime="20201010 12:25:48.915"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:48.888" endtime="20201010 12:25:48.915"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.887" endtime="20201010 12:25:48.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:48.919" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:48.918" endtime="20201010 12:25:48.920"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.916" endtime="20201010 12:25:48.920"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.886" endtime="20201010 12:25:48.920"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.886" endtime="20201010 12:25:48.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.921" endtime="20201010 12:25:48.922"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.884" endtime="20201010 12:25:48.923"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.883" endtime="20201010 12:25:48.923"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.859" endtime="20201010 12:25:48.924"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>40</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.934" endtime="20201010 12:25:55.045"></status>
</kw>
<msg timestamp="20201010 12:25:55.046" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 40 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '63910'}, {'interval': '51619'}, {'interval': '66290'}, {'interval': '40380'}, {'interval': '35046'...</msg>
<status status="PASS" starttime="20201010 12:25:48.931" endtime="20201010 12:25:55.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.049" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 40 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '63910'}, {'interval': '51619'}, {'interval': '66290'}, {'interval': '40380'}, {'interval': '35046'...</msg>
<status status="PASS" starttime="20201010 12:25:55.047" endtime="20201010 12:25:55.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.050" endtime="20201010 12:25:55.051"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.929" endtime="20201010 12:25:55.052"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.926" endtime="20201010 12:25:55.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:55.056" level="INFO">${RESULT} = {'interval': [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 1736...</msg>
<status status="PASS" starttime="20201010 12:25:55.053" endtime="20201010 12:25:55.056"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:55.061" level="INFO">${interval} = [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 17369, 86767, 529...</msg>
<status status="PASS" starttime="20201010 12:25:55.057" endtime="20201010 12:25:55.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.065" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:55.064" endtime="20201010 12:25:55.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.067" level="INFO">VALUE: [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674]</msg>
<status status="PASS" starttime="20201010 12:25:55.066" endtime="20201010 12:25:55.067"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.062" endtime="20201010 12:25:55.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.072" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:55.071" endtime="20201010 12:25:55.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.074" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:55.073" endtime="20201010 12:25:55.074"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.068" endtime="20201010 12:25:55.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.081" endtime="20201010 12:25:55.378"></status>
</kw>
<msg timestamp="20201010 12:25:55.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.075006069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.174439083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:55.079" endtime="20201010 12:25:55.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.075006069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.174439083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:55.382" endtime="20201010 12:25:55.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.390" endtime="20201010 12:25:55.392"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.077" endtime="20201010 12:25:55.392"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.075" endtime="20201010 12:25:55.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:55.397" level="INFO">${FILTERED} = [{'diff': 0.09943301399999993}, {'diff': 0.09964219500000016}, {'diff': 0.09960897199999996}, {'diff': 0.099623931}, {'diff': 0.09962033299999984}, {'diff': 0.09961833400000009}, {'diff': 0.0996136940...</msg>
<status status="PASS" starttime="20201010 12:25:55.394" endtime="20201010 12:25:55.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:55.401" level="INFO">${RESULT} = {'diff': [0.09943301399999993, 0.09964219500000016, 0.09960897199999996, 0.099623931, 0.09962033299999984, 0.09961833400000009, 0.09961369400000009, 0.09961532000000006, 0.0996145690000001, 0.09978758...</msg>
<status status="PASS" starttime="20201010 12:25:55.398" endtime="20201010 12:25:55.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.405" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:55.404" endtime="20201010 12:25:55.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.408" level="INFO">VALUE: [0.09943301399999993, 0.09964219500000016, 0.09960897199999996, 0.099623931, 0.09962033299999984, 0.09961833400000009, 0.09961369400000009, 0.09961532000000006, 0.0996145690000001, 0.0997875829999999, 0.09945048600000028, 0.09961591699999994, 0.09961272200000026, 0.09963355600000012, 0.09956576400000028, 0.09983586099999986, 0.09956688800000002, 0.09940606900000004, 0.09961305599999992, 0.09960759699999988, 0.09961112500000002, 0.0997383890000001, 0.09972100000000017, 0.09938926400000003, 0.09984232000000004, 0.0994088470000003, 0.09963234700000001, 0.09962688900000005, 0.09962011100000012, 0.09962054199999981, 0.09962448599999973, 0.09966498600000051, 0.09961290199999961, 0.09965554199999982, 0.09954265300000031, 0.09962247200000007, 0.09962141600000063, 0.09977256999999984, 0.09945595900000015, 0.09961734699999969, 0.09961816700000004, 0.0996105269999994, 0.09966823599999941, 0.09917627799999984, 0.09961397200000022, 0.09961534699999941, 0.09961986099999987, 0.09962161099999989, 0.09960872199999926, 0.09961138900000055]</msg>
<status status="PASS" starttime="20201010 12:25:55.406" endtime="20201010 12:25:55.408"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.402" endtime="20201010 12:25:55.409"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.924" endtime="20201010 12:25:55.409"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:48.856" endtime="20201010 12:25:55.410" critical="yes"></status>
</test>
<test id="s1-s2-t10" name="50 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:55.418" endtime="20201010 12:25:55.438"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.417" endtime="20201010 12:25:55.438"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.453" endtime="20201010 12:25:55.465"></status>
</kw>
<msg timestamp="20201010 12:25:55.466" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:55.452" endtime="20201010 12:25:55.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.468" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:55.467" endtime="20201010 12:25:55.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.471" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:55.469" endtime="20201010 12:25:55.472"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:55.448" endtime="20201010 12:25:55.472"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:55.445" endtime="20201010 12:25:55.473"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.444" endtime="20201010 12:25:55.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:55.477" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:55.476" endtime="20201010 12:25:55.477"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.474" endtime="20201010 12:25:55.478"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.443" endtime="20201010 12:25:55.478"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.442" endtime="20201010 12:25:55.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.479" endtime="20201010 12:25:55.480"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.441" endtime="20201010 12:25:55.481"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.439" endtime="20201010 12:25:55.481"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.416" endtime="20201010 12:25:55.481"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>50</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.490" endtime="20201010 12:26:01.604"></status>
</kw>
<msg timestamp="20201010 12:26:01.605" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 50 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '14414'}, {'interval': '55147'}, {'interval': '70168'}, {'interval': '61294'}, {'interval': '86720'...</msg>
<status status="PASS" starttime="20201010 12:25:55.489" endtime="20201010 12:26:01.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.613" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 50 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '14414'}, {'interval': '55147'}, {'interval': '70168'}, {'interval': '61294'}, {'interval': '86720'...</msg>
<status status="PASS" starttime="20201010 12:26:01.608" endtime="20201010 12:26:01.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.616" endtime="20201010 12:26:01.620"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.486" endtime="20201010 12:26:01.621"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.484" endtime="20201010 12:26:01.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:01.633" level="INFO">${RESULT} = {'interval': [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 1023...</msg>
<status status="PASS" starttime="20201010 12:26:01.625" endtime="20201010 12:26:01.634"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:01.644" level="INFO">${interval} = [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 10238, 70515, 408...</msg>
<status status="PASS" starttime="20201010 12:26:01.636" endtime="20201010 12:26:01.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.652" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:01.650" endtime="20201010 12:26:01.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.656" level="INFO">VALUE: [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 10238, 70515, 40828, 48500, 94435, 94098, 48103, 90303, 97856, 52511, 42830, 96777, 16054, 65477, 49396, 79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976]</msg>
<status status="PASS" starttime="20201010 12:26:01.654" endtime="20201010 12:26:01.658"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.646" endtime="20201010 12:26:01.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.666" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:01.664" endtime="20201010 12:26:01.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.670" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:01.668" endtime="20201010 12:26:01.671"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.660" endtime="20201010 12:26:01.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.685" endtime="20201010 12:26:01.983"></status>
</kw>
<msg timestamp="20201010 12:26:01.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.177616625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.277324736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:01.682" endtime="20201010 12:26:01.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.177616625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.277324736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:01.987" endtime="20201010 12:26:01.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.995" endtime="20201010 12:26:01.997"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.677" endtime="20201010 12:26:01.997"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.673" endtime="20201010 12:26:01.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:02.002" level="INFO">${FILTERED} = [{'diff': 0.09970811099999999}, {'diff': 0.09952552800000003}, {'diff': 0.09985744399999996}, {'diff': 0.09939304199999999}, {'diff': 0.0996785}, {'diff': 0.099570084}, {'diff': 0.09963040299999992}, ...</msg>
<status status="PASS" starttime="20201010 12:26:01.998" endtime="20201010 12:26:02.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:02.006" level="INFO">${RESULT} = {'diff': [0.09970811099999999, 0.09952552800000003, 0.09985744399999996, 0.09939304199999999, 0.0996785, 0.099570084, 0.09963040299999992, 0.0996351809999998, 0.09966873600000015, 0.0998257920000003, ...</msg>
<status status="PASS" starttime="20201010 12:26:02.003" endtime="20201010 12:26:02.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.010" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:02.009" endtime="20201010 12:26:02.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.013" level="INFO">VALUE: [0.09970811099999999, 0.09952552800000003, 0.09985744399999996, 0.09939304199999999, 0.0996785, 0.099570084, 0.09963040299999992, 0.0996351809999998, 0.09966873600000015, 0.0998257920000003, 0.09962177799999994, 0.09944772199999985, 0.09956320799999974, 0.09965997199999999, 0.09975743000000037, 0.09943265199999995, 0.09988133399999999, 0.09949266600000017, 0.0994592639999996, 0.09982126400000002, 0.09966458399999967, 0.09946687500000007, 0.09946040200000006, 0.09959549999999995, 0.09971462500000028, 0.09947869500000017, 0.09960054200000013, 0.09959824999999967, 0.099718792, 0.09947020799999962, 0.09986161199999977, 0.09945909699999955, 0.09950229199999949, 0.09960252800000013, 0.09983324999999965, 0.09938394500000047, 0.0996109160000005, 0.09980005499999933, 0.09941713899999982, 0.09962666599999981, 0.09970897200000017, 0.0995123609999995, 0.09961322200000033, 0.09985858299999961, 0.09954224999999983, 0.09944326399999959, 0.09988188899999972, 0.09934420900000074, 0.0996122779999995, 0.09962287499999967]</msg>
<status status="PASS" starttime="20201010 12:26:02.011" endtime="20201010 12:26:02.013"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.007" endtime="20201010 12:26:02.014"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.482" endtime="20201010 12:26:02.014"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:55.413" endtime="20201010 12:26:02.018" critical="yes"></status>
</test>
<test id="s1-s2-t11" name="75 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:02.027" endtime="20201010 12:26:02.046"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.025" endtime="20201010 12:26:02.047"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.060" endtime="20201010 12:26:02.072"></status>
</kw>
<msg timestamp="20201010 12:26:02.072" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:02.058" endtime="20201010 12:26:02.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.075" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:02.073" endtime="20201010 12:26:02.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.078" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:02.076" endtime="20201010 12:26:02.078"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:02.056" endtime="20201010 12:26:02.079"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:02.053" endtime="20201010 12:26:02.080"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.052" endtime="20201010 12:26:02.080"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:02.083" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:02.083" endtime="20201010 12:26:02.084"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.081" endtime="20201010 12:26:02.084"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.051" endtime="20201010 12:26:02.085"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.050" endtime="20201010 12:26:02.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.086" endtime="20201010 12:26:02.088"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.049" endtime="20201010 12:26:02.088"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.047" endtime="20201010 12:26:02.089"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.024" endtime="20201010 12:26:02.089"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>75</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.098" endtime="20201010 12:26:52.749"></status>
</kw>
<msg timestamp="20201010 12:26:52.750" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 75 1', 'msg': ['sleep_jitter 75 1\r\n', '{"cmd":"sleep_jitter","data":[{"focus":"100000"},{"interval":"81075"},{"interval":"58727"},{"interval":"40937"},{"interval":"10090"},{"in...</msg>
<status status="PASS" starttime="20201010 12:26:02.097" endtime="20201010 12:26:52.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:52.757" level="INFO">${RESULT} = {'cmd': 'sleep_jitter 75 1', 'msg': ['sleep_jitter 75 1\r\n', '{"cmd":"sleep_jitter","data":[{"focus":"100000"},{"interval":"81075"},{"interval":"58727"},{"interval":"40937"},{"interval":"10090"},{"in...</msg>
<status status="PASS" starttime="20201010 12:26:52.752" endtime="20201010 12:26:52.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:52.763" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201010 12:26:52.759" endtime="20201010 12:26:52.763"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:02.094" endtime="20201010 12:26:52.765"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:02.092" endtime="20201010 12:26:52.766"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:02.090" endtime="20201010 12:26:52.767"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201010 12:26:02.020" endtime="20201010 12:26:52.769" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t12" name="100 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:52.783" endtime="20201010 12:26:52.806"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:52.780" endtime="20201010 12:26:52.807"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:52.834" endtime="20201010 12:26:53.843"></status>
</kw>
<msg timestamp="20201010 12:26:53.844" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:26:52.831" endtime="20201010 12:26:53.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:53.850" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:26:53.847" endtime="20201010 12:26:53.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:53.852" endtime="20201010 12:26:53.855"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:52.826" endtime="20201010 12:26:53.856"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:52.820" endtime="20201010 12:26:53.857"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:52.817" endtime="20201010 12:26:53.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:53.860" endtime="20201010 12:26:53.863"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:52.816" endtime="20201010 12:26:53.863"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:53.882" endtime="20201010 12:26:54.888"></status>
</kw>
<msg timestamp="20201010 12:26:54.889" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:26:53.879" endtime="20201010 12:26:54.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:54.893" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:26:54.891" endtime="20201010 12:26:54.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:54.896" endtime="20201010 12:26:54.899"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:53.873" endtime="20201010 12:26:54.900"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:53.868" endtime="20201010 12:26:54.901"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:53.866" endtime="20201010 12:26:54.902"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:54.904" endtime="20201010 12:26:54.907"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:53.864" endtime="20201010 12:26:54.907"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:54.926" endtime="20201010 12:26:55.932"></status>
</kw>
<msg timestamp="20201010 12:26:55.933" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:26:54.923" endtime="20201010 12:26:55.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:55.938" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:26:55.935" endtime="20201010 12:26:55.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:55.940" endtime="20201010 12:26:55.944"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:54.917" endtime="20201010 12:26:55.945"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:54.912" endtime="20201010 12:26:55.946"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:54.910" endtime="20201010 12:26:55.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:55.948" endtime="20201010 12:26:55.952"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:54.908" endtime="20201010 12:26:55.952"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:55.972" endtime="20201010 12:26:56.979"></status>
</kw>
<msg timestamp="20201010 12:26:56.980" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:26:55.969" endtime="20201010 12:26:56.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:56.984" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:26:56.982" endtime="20201010 12:26:56.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:56.987" endtime="20201010 12:26:56.990"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:55.963" endtime="20201010 12:26:56.991"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:55.958" endtime="20201010 12:26:56.992"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:55.955" endtime="20201010 12:26:56.993"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:56.995" endtime="20201010 12:26:56.998"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:55.953" endtime="20201010 12:26:56.999"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:57.022" endtime="20201010 12:26:58.028"></status>
</kw>
<msg timestamp="20201010 12:26:58.029" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:26:57.018" endtime="20201010 12:26:58.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:58.034" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:26:58.031" endtime="20201010 12:26:58.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:58.036" endtime="20201010 12:26:58.039"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:57.010" endtime="20201010 12:26:58.041"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:57.004" endtime="20201010 12:26:58.042"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:57.001" endtime="20201010 12:26:58.042"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:58.044" endtime="20201010 12:26:58.047"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:56.999" endtime="20201010 12:26:58.048"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:58.067" endtime="20201010 12:26:59.073"></status>
</kw>
<msg timestamp="20201010 12:26:59.074" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:26:58.064" endtime="20201010 12:26:59.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:59.079" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:26:59.076" endtime="20201010 12:26:59.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:59.081" endtime="20201010 12:26:59.085"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:58.058" endtime="20201010 12:26:59.087"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:58.053" endtime="20201010 12:26:59.088"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:58.050" endtime="20201010 12:26:59.088"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:59.090" endtime="20201010 12:26:59.093"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:58.049" endtime="20201010 12:26:59.094"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:59.112" endtime="20201010 12:27:00.118"></status>
</kw>
<msg timestamp="20201010 12:27:00.119" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:26:59.109" endtime="20201010 12:27:00.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:27:00.124" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:00.122" endtime="20201010 12:27:00.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:00.127" endtime="20201010 12:27:00.130"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:59.103" endtime="20201010 12:27:00.131"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:59.099" endtime="20201010 12:27:00.132"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:59.096" endtime="20201010 12:27:00.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:00.134" endtime="20201010 12:27:00.137"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:59.094" endtime="20201010 12:27:00.138"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:00.156" endtime="20201010 12:27:01.162"></status>
</kw>
<msg timestamp="20201010 12:27:01.163" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:00.153" endtime="20201010 12:27:01.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:27:01.168" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:01.165" endtime="20201010 12:27:01.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:01.170" endtime="20201010 12:27:01.174"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:00.148" endtime="20201010 12:27:01.175"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:00.143" endtime="20201010 12:27:01.176"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:00.140" endtime="20201010 12:27:01.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:01.178" endtime="20201010 12:27:01.181"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:00.138" endtime="20201010 12:27:01.182"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:01.202" endtime="20201010 12:27:02.209"></status>
</kw>
<msg timestamp="20201010 12:27:02.210" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:01.199" endtime="20201010 12:27:02.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:27:02.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:02.212" endtime="20201010 12:27:02.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:02.219" endtime="20201010 12:27:02.222"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:01.194" endtime="20201010 12:27:02.223"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:01.187" endtime="20201010 12:27:02.224"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:01.184" endtime="20201010 12:27:02.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:02.226" endtime="20201010 12:27:02.229"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:01.182" endtime="20201010 12:27:02.230"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:02.248" endtime="20201010 12:27:03.254"></status>
</kw>
<msg timestamp="20201010 12:27:03.255" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:02.245" endtime="20201010 12:27:03.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:27:03.260" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:03.257" endtime="20201010 12:27:03.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:03.262" endtime="20201010 12:27:03.265"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:02.240" endtime="20201010 12:27:03.266"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:02.235" endtime="20201010 12:27:03.267"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:02.232" endtime="20201010 12:27:03.268"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:03.270" endtime="20201010 12:27:03.273"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:02.231" endtime="20201010 12:27:03.274"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:03.292" endtime="20201010 12:27:04.298"></status>
</kw>
<msg timestamp="20201010 12:27:04.299" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:03.289" endtime="20201010 12:27:04.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:27:04.304" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:04.301" endtime="20201010 12:27:04.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:04.306" endtime="20201010 12:27:04.309"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:03.283" endtime="20201010 12:27:04.310"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:03.278" endtime="20201010 12:27:04.311"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:03.276" endtime="20201010 12:27:04.312"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:04.313" endtime="20201010 12:27:04.317"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:03.274" endtime="20201010 12:27:04.317"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:04.343" endtime="20201010 12:27:05.351"></status>
</kw>
<msg timestamp="20201010 12:27:05.352" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:04.332" endtime="20201010 12:27:05.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:27:05.357" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:05.354" endtime="20201010 12:27:05.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:05.359" endtime="20201010 12:27:05.362"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:04.327" endtime="20201010 12:27:05.363"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:04.322" endtime="20201010 12:27:05.364"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:04.319" endtime="20201010 12:27:05.365"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:05.367" endtime="20201010 12:27:05.370"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:04.318" endtime="20201010 12:27:05.370"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:05.389" endtime="20201010 12:27:06.395"></status>
</kw>
<msg timestamp="20201010 12:27:06.396" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:05.386" endtime="20201010 12:27:06.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:27:06.401" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:06.398" endtime="20201010 12:27:06.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:06.403" endtime="20201010 12:27:06.407"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:05.380" endtime="20201010 12:27:06.408"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:05.376" endtime="20201010 12:27:06.409"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:05.373" endtime="20201010 12:27:06.410"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:06.412" endtime="20201010 12:27:06.415"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:05.371" endtime="20201010 12:27:06.415"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:06.434" endtime="20201010 12:27:07.441"></status>
</kw>
<msg timestamp="20201010 12:27:07.442" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:06.431" endtime="20201010 12:27:07.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:27:07.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:07.444" endtime="20201010 12:27:07.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:07.449" endtime="20201010 12:27:07.452"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:06.425" endtime="20201010 12:27:07.453"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:06.420" endtime="20201010 12:27:07.454"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:06.418" endtime="20201010 12:27:07.455"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:07.457" endtime="20201010 12:27:07.460"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:06.416" endtime="20201010 12:27:07.461"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:07.480" endtime="20201010 12:27:08.487"></status>
</kw>
<msg timestamp="20201010 12:27:08.488" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:07.477" endtime="20201010 12:27:08.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:27:08.493" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:08.490" endtime="20201010 12:27:08.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:08.495" endtime="20201010 12:27:08.498"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:07.472" endtime="20201010 12:27:08.500"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:07.466" endtime="20201010 12:27:08.501"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:07.463" endtime="20201010 12:27:08.501"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:08.503" endtime="20201010 12:27:08.506"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:07.461" endtime="20201010 12:27:08.507"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:08.532" endtime="20201010 12:27:09.538"></status>
</kw>
<msg timestamp="20201010 12:27:09.539" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:08.528" endtime="20201010 12:27:09.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:27:09.544" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201010 12:27:09.541" endtime="20201010 12:27:09.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:09.546" endtime="20201010 12:27:09.550"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:08.517" endtime="20201010 12:27:09.551"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:08.512" endtime="20201010 12:27:09.552"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:08.509" endtime="20201010 12:27:09.552"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:09.554" endtime="20201010 12:27:09.557"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:08.507" endtime="20201010 12:27:09.558"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:52.814" endtime="20201010 12:27:09.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201010 12:27:09.563" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201010 12:27:09.560" endtime="20201010 12:27:09.564"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:52.811" endtime="20201010 12:27:09.565"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:52.808" endtime="20201010 12:27:09.567"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:52.778" endtime="20201010 12:27:09.567"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201010 12:26:52.772" endtime="20201010 12:27:09.570" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201010 12:24:55.217" endtime="20201010 12:27:09.601"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="FAIL" starttime="20201010 12:24:53.132" endtime="20201010 12:27:09.666"></status>
</suite>
<statistics>
<total>
<stat pass="11" fail="2">Critical Tests</stat>
<stat pass="11" fail="2">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="11" fail="2">APP_tests_xtimer_benchmarks</stat>
<stat pass="11" fail="2">BOARD_saml10-xpro</stat>
<stat pass="11" fail="2">dev</stat>
</tag>
<suite>
<stat pass="11" fail="2" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="10" fail="2" id="s1-s2" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
