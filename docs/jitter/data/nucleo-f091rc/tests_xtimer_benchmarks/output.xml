<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201010 12:24:53.139" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 12:24:53.712" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 12:24:53.720" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 12:24:54.861" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 12:24:53.710" endtime="20201010 12:24:54.862"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 12:24:54.864" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 12:24:54.863" endtime="20201010 12:24:54.865"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:53.709" endtime="20201010 12:24:54.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:54.867" endtime="20201010 12:24:55.063"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.866" endtime="20201010 12:24:55.064"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.091" endtime="20201010 12:24:55.113"></status>
</kw>
<msg timestamp="20201010 12:24:55.114" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201010 12:24:55.088" endtime="20201010 12:24:55.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.120" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201010 12:24:55.116" endtime="20201010 12:24:55.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.126" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:55.122" endtime="20201010 12:24:55.127"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:55.082" endtime="20201010 12:24:55.127"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:55.078" endtime="20201010 12:24:55.128"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.075" endtime="20201010 12:24:55.129"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:55.134" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:55.133" endtime="20201010 12:24:55.134"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.130" endtime="20201010 12:24:55.134"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.073" endtime="20201010 12:24:55.134"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.072" endtime="20201010 12:24:55.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.135" endtime="20201010 12:24:55.137"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.069" endtime="20201010 12:24:55.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.138" endtime="20201010 12:24:55.140"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.066" endtime="20201010 12:24:55.140"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:53.707" endtime="20201010 12:24:55.141"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:55.147" endtime="20201010 12:24:55.166"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.145" endtime="20201010 12:24:55.167"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.180" endtime="20201010 12:24:55.194"></status>
</kw>
<msg timestamp="20201010 12:24:55.195" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.179" endtime="20201010 12:24:55.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.197" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.196" endtime="20201010 12:24:55.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.200" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:55.198" endtime="20201010 12:24:55.200"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:55.176" endtime="20201010 12:24:55.201"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:55.174" endtime="20201010 12:24:55.202"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.172" endtime="20201010 12:24:55.202"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:55.206" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:55.205" endtime="20201010 12:24:55.206"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.203" endtime="20201010 12:24:55.206"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.171" endtime="20201010 12:24:55.207"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.170" endtime="20201010 12:24:55.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.207" endtime="20201010 12:24:55.209"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.169" endtime="20201010 12:24:55.210"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.167" endtime="20201010 12:24:55.210"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.144" endtime="20201010 12:24:55.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.218" endtime="20201010 12:24:55.229"></status>
</kw>
<msg timestamp="20201010 12:24:55.229" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.217" endtime="20201010 12:24:55.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.232" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.230" endtime="20201010 12:24:55.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.233" endtime="20201010 12:24:55.234"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.213" endtime="20201010 12:24:55.235"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.211" endtime="20201010 12:24:55.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.240" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201010 12:24:55.239" endtime="20201010 12:24:55.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.242" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201010 12:24:55.241" endtime="20201010 12:24:55.243"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.236" endtime="20201010 12:24:55.243"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:24:55.141" endtime="20201010 12:24:55.244" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 12:24:53.253" endtime="20201010 12:24:55.246"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.298" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 12:24:55.306" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 12:24:56.481" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 12:24:55.296" endtime="20201010 12:24:56.481"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.484" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 12:24:56.482" endtime="20201010 12:24:56.484"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.295" endtime="20201010 12:24:56.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:56.487" endtime="20201010 12:24:56.754"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.486" endtime="20201010 12:24:56.755"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.767" endtime="20201010 12:24:56.781"></status>
</kw>
<msg timestamp="20201010 12:24:56.782" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201010 12:24:56.766" endtime="20201010 12:24:56.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.785" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201010 12:24:56.783" endtime="20201010 12:24:56.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.788" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:56.786" endtime="20201010 12:24:56.788"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.763" endtime="20201010 12:24:56.789"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.761" endtime="20201010 12:24:56.789"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.760" endtime="20201010 12:24:56.790"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:56.793" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:56.793" endtime="20201010 12:24:56.794"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.790" endtime="20201010 12:24:56.794"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.759" endtime="20201010 12:24:56.794"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.758" endtime="20201010 12:24:56.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.795" endtime="20201010 12:24:56.796"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.757" endtime="20201010 12:24:56.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.798" endtime="20201010 12:24:56.799"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.756" endtime="20201010 12:24:56.800"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.294" endtime="20201010 12:24:56.800"></status>
</kw>
<test id="s1-s2-t1" name="0 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:56.807" endtime="20201010 12:24:56.826"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.804" endtime="20201010 12:24:56.827"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.840" endtime="20201010 12:24:56.854"></status>
</kw>
<msg timestamp="20201010 12:24:56.854" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.838" endtime="20201010 12:24:56.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.857" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.855" endtime="20201010 12:24:56.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.860" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:56.858" endtime="20201010 12:24:56.860"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.836" endtime="20201010 12:24:56.861"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.833" endtime="20201010 12:24:56.861"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.832" endtime="20201010 12:24:56.862"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:56.866" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:56.865" endtime="20201010 12:24:56.866"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.863" endtime="20201010 12:24:56.866"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.831" endtime="20201010 12:24:56.866"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.831" endtime="20201010 12:24:56.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.867" endtime="20201010 12:24:56.869"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.829" endtime="20201010 12:24:56.869"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.828" endtime="20201010 12:24:56.870"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.803" endtime="20201010 12:24:56.870"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.879" endtime="20201010 12:25:02.895"></status>
</kw>
<msg timestamp="20201010 12:25:02.896" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.878" endtime="20201010 12:25:02.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.901" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:02.898" endtime="20201010 12:25:02.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:02.903" endtime="20201010 12:25:02.909"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.875" endtime="20201010 12:25:02.910"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.873" endtime="20201010 12:25:02.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:02.916" level="INFO">${RESULT} = {'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:02.912" endtime="20201010 12:25:02.916"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:02.975" level="INFO">${interval} = []</msg>
<status status="PASS" starttime="20201010 12:25:02.918" endtime="20201010 12:25:02.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.982" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:02.980" endtime="20201010 12:25:02.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.987" level="INFO">VALUE: []</msg>
<status status="PASS" starttime="20201010 12:25:02.985" endtime="20201010 12:25:02.988"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.976" endtime="20201010 12:25:02.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.996" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:02.994" endtime="20201010 12:25:02.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.000" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:02.998" endtime="20201010 12:25:03.001"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:02.990" endtime="20201010 12:25:03.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.017" endtime="20201010 12:25:03.318"></status>
</kw>
<msg timestamp="20201010 12:25:03.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.063517083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.163528597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:03.013" endtime="20201010 12:25:03.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.063517083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.163528597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:03.322" endtime="20201010 12:25:03.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.330" endtime="20201010 12:25:03.331"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.008" endtime="20201010 12:25:03.332"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.003" endtime="20201010 12:25:03.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:03.336" level="INFO">${FILTERED} = [{'diff': 0.10001151399999997}, {'diff': 0.10001088800000013}, {'diff': 0.10001091700000009}, {'diff': 0.10001091700000009}, {'diff': 0.10001091700000009}, {'diff': 0.10001091699999987}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:03.333" endtime="20201010 12:25:03.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:03.341" level="INFO">${RESULT} = {'diff': [0.10001151399999997, 0.10001088800000013, 0.10001091700000009, 0.10001091700000009, 0.10001091700000009, 0.10001091699999987, 0.10001091700000009, 0.10001093100000014, 0.10001090300000004, 0...</msg>
<status status="PASS" starttime="20201010 12:25:03.337" endtime="20201010 12:25:03.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.345" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:03.344" endtime="20201010 12:25:03.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.348" level="INFO">VALUE: [0.10001151399999997, 0.10001088800000013, 0.10001091700000009, 0.10001091700000009, 0.10001091700000009, 0.10001091699999987, 0.10001091700000009, 0.10001093100000014, 0.10001090300000004, 0.100010916, 0.10001094399999966, 0.10001092999999983, 0.10001095799999993, 0.10001091700000009, 0.10001091699999964, 0.10001091700000009, 0.10001090299999982, 0.10001090300000026, 0.10001091699999964, 0.10001090300000026, 0.10001093099999991, 0.10001091700000009, 0.10001090300000026, 0.1000109440000001, 0.10001093000000028, 0.100010916, 0.10001094399999966, 0.10001090300000026, 0.10001084700000007, 0.10001087499999972, 0.10001083399999988, 0.10001084700000007, 0.10001086100000034, 0.10001084699999918, 0.10001084700000007, 0.10001087499999972, 0.1000108329999998, 0.10001086100000034, 0.10001086100000034, 0.10001086099999945, 0.10001086100000034, 0.10001087499999972, 0.10001084800000015, 0.10001086100000034, 0.10001084700000007, 0.10001088899999999, 0.10001088899999999, 0.10001086199999953, 0.10001087499999972, 0.10001084800000015]</msg>
<status status="PASS" starttime="20201010 12:25:03.346" endtime="20201010 12:25:03.348"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.342" endtime="20201010 12:25:03.348"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.871" endtime="20201010 12:25:03.349"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:24:56.801" endtime="20201010 12:25:03.350" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="5 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:03.357" endtime="20201010 12:25:03.376"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.355" endtime="20201010 12:25:03.377"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.390" endtime="20201010 12:25:03.404"></status>
</kw>
<msg timestamp="20201010 12:25:03.404" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:03.388" endtime="20201010 12:25:03.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.407" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:03.406" endtime="20201010 12:25:03.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.410" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:03.408" endtime="20201010 12:25:03.411"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:03.386" endtime="20201010 12:25:03.411"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:03.383" endtime="20201010 12:25:03.412"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.382" endtime="20201010 12:25:03.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:03.416" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:03.415" endtime="20201010 12:25:03.416"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.413" endtime="20201010 12:25:03.417"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.381" endtime="20201010 12:25:03.417"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.381" endtime="20201010 12:25:03.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.418" endtime="20201010 12:25:03.419"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.379" endtime="20201010 12:25:03.420"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.378" endtime="20201010 12:25:03.420"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.354" endtime="20201010 12:25:03.420"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.431" endtime="20201010 12:25:09.458"></status>
</kw>
<msg timestamp="20201010 12:25:09.459" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '10741'}, {'interval': '84225'}, {'interval': '46186'}, {'interval': '37795'}, {'interval': '34698'}...</msg>
<status status="PASS" starttime="20201010 12:25:03.429" endtime="20201010 12:25:09.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.465" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '10741'}, {'interval': '84225'}, {'interval': '46186'}, {'interval': '37795'}, {'interval': '34698'}...</msg>
<status status="PASS" starttime="20201010 12:25:09.461" endtime="20201010 12:25:09.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.467" endtime="20201010 12:25:09.470"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.426" endtime="20201010 12:25:09.472"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.423" endtime="20201010 12:25:09.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:09.478" level="INFO">${RESULT} = {'focus': [100000], 'interval': [10741, 84225, 46186, 37795, 34698]}</msg>
<status status="PASS" starttime="20201010 12:25:09.474" endtime="20201010 12:25:09.478"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:09.488" level="INFO">${interval} = [10741, 84225, 46186, 37795, 34698]</msg>
<status status="PASS" starttime="20201010 12:25:09.480" endtime="20201010 12:25:09.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.496" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:09.494" endtime="20201010 12:25:09.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.501" level="INFO">VALUE: [10741, 84225, 46186, 37795, 34698]</msg>
<status status="PASS" starttime="20201010 12:25:09.498" endtime="20201010 12:25:09.502"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.490" endtime="20201010 12:25:09.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.511" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:09.509" endtime="20201010 12:25:09.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.515" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:09.513" endtime="20201010 12:25:09.516"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.505" endtime="20201010 12:25:09.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.531" endtime="20201010 12:25:09.826"></status>
</kw>
<msg timestamp="20201010 12:25:09.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.065523542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.165536042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:09.528" endtime="20201010 12:25:09.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.065523542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.165536042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:09.830" endtime="20201010 12:25:09.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.837" endtime="20201010 12:25:09.839"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.522" endtime="20201010 12:25:09.840"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.518" endtime="20201010 12:25:09.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:09.844" level="INFO">${FILTERED} = [{'diff': 0.10001250000000006}, {'diff': 0.10000987500000003}, {'diff': 0.10001090199999996}, {'diff': 0.10001088899999999}, {'diff': 0.10001088899999999}, {'diff': 0.10001090300000004}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:09.841" endtime="20201010 12:25:09.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:09.849" level="INFO">${RESULT} = {'diff': [0.10001250000000006, 0.10000987500000003, 0.10001090199999996, 0.10001088899999999, 0.10001088899999999, 0.10001090300000004, 0.10001088899999999, 0.10001091700000009, 0.10001093099999991, 0...</msg>
<status status="PASS" starttime="20201010 12:25:09.845" endtime="20201010 12:25:09.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.853" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:09.852" endtime="20201010 12:25:09.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.855" level="INFO">VALUE: [0.10001250000000006, 0.10000987500000003, 0.10001090199999996, 0.10001088899999999, 0.10001088899999999, 0.10001090300000004, 0.10001088899999999, 0.10001091700000009, 0.10001093099999991, 0.10001088899999977, 0.10001083399999988, 0.10001083399999988, 0.10002274999999994, 0.09999897299999994, 0.10001090300000026, 0.10001084700000007, 0.10001084700000007, 0.1000108609999999, 0.10001082000000006, 0.10001084700000007, 0.1000108329999998, 0.10001084800000015, 0.10001090300000026, 0.10001086100000034, 0.10001084799999971, 0.10001084700000007, 0.1000108329999998, 0.10001084800000015, 0.10001084700000007, 0.10001084699999963, 0.10001083400000077, 0.10001084699999918, 0.10001088899999999, 0.10001086100000034, 0.10001084700000007, 0.10001081900000042, 0.10001083399999988, 0.10001086099999945, 0.10001086100000034, 0.10001084800000015, 0.10001084700000007, 0.10001084700000007, 0.10001084800000015, 0.10001086099999945, 0.10001086100000034, 0.10001086200000042, 0.10001084700000007, 0.10001086099999945, 0.1000108200000005, 0.10001084699999918]</msg>
<status status="PASS" starttime="20201010 12:25:09.854" endtime="20201010 12:25:09.856"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.850" endtime="20201010 12:25:09.856"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.421" endtime="20201010 12:25:09.857"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:03.351" endtime="20201010 12:25:09.857" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="10 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:09.865" endtime="20201010 12:25:09.884"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.863" endtime="20201010 12:25:09.885"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.898" endtime="20201010 12:25:09.913"></status>
</kw>
<msg timestamp="20201010 12:25:09.913" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:09.896" endtime="20201010 12:25:09.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.916" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:09.914" endtime="20201010 12:25:09.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.919" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:09.917" endtime="20201010 12:25:09.919"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:09.893" endtime="20201010 12:25:09.920"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:09.891" endtime="20201010 12:25:09.921"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.890" endtime="20201010 12:25:09.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:09.925" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:09.924" endtime="20201010 12:25:09.925"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.922" endtime="20201010 12:25:09.925"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.889" endtime="20201010 12:25:09.926"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.888" endtime="20201010 12:25:09.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.926" endtime="20201010 12:25:09.928"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.887" endtime="20201010 12:25:09.928"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.885" endtime="20201010 12:25:09.929"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.862" endtime="20201010 12:25:09.929"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.938" endtime="20201010 12:25:15.978"></status>
</kw>
<msg timestamp="20201010 12:25:15.979" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '37694'}, {'interval': '23825'}, {'interval': '30414'}, {'interval': '39030'}, {'interval': '45533'...</msg>
<status status="PASS" starttime="20201010 12:25:09.937" endtime="20201010 12:25:15.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:15.985" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '37694'}, {'interval': '23825'}, {'interval': '30414'}, {'interval': '39030'}, {'interval': '45533'...</msg>
<status status="PASS" starttime="20201010 12:25:15.981" endtime="20201010 12:25:15.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:15.987" endtime="20201010 12:25:15.990"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.934" endtime="20201010 12:25:15.991"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.932" endtime="20201010 12:25:15.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:15.998" level="INFO">${RESULT} = {'focus': [100000], 'interval': [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]}</msg>
<status status="PASS" starttime="20201010 12:25:15.994" endtime="20201010 12:25:15.999"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:16.009" level="INFO">${interval} = [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]</msg>
<status status="PASS" starttime="20201010 12:25:16.000" endtime="20201010 12:25:16.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.017" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:16.015" endtime="20201010 12:25:16.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.021" level="INFO">VALUE: [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]</msg>
<status status="PASS" starttime="20201010 12:25:16.019" endtime="20201010 12:25:16.022"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.011" endtime="20201010 12:25:16.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.030" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:16.028" endtime="20201010 12:25:16.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.035" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:16.033" endtime="20201010 12:25:16.035"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.024" endtime="20201010 12:25:16.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.055" endtime="20201010 12:25:16.359"></status>
</kw>
<msg timestamp="20201010 12:25:16.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.0663835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.166393972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201010 12:25:16.048" endtime="20201010 12:25:16.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.0663835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.166393972, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201010 12:25:16.363" endtime="20201010 12:25:16.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.371" endtime="20201010 12:25:16.372"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.041" endtime="20201010 12:25:16.373"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.038" endtime="20201010 12:25:16.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:16.377" level="INFO">${FILTERED} = [{'diff': 0.10001047200000013}, {'diff': 0.10001184699999999}, {'diff': 0.10001087500000017}, {'diff': 0.10001087499999994}, {'diff': 0.10001087500000017}, {'diff': 0.10001087500000017}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:16.374" endtime="20201010 12:25:16.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:16.381" level="INFO">${RESULT} = {'diff': [0.10001047200000013, 0.10001184699999999, 0.10001087500000017, 0.10001087499999994, 0.10001087500000017, 0.10001087500000017, 0.10001086100000012, 0.10001086199999998, 0.10001087499999994, 0...</msg>
<status status="PASS" starttime="20201010 12:25:16.378" endtime="20201010 12:25:16.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.385" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:16.384" endtime="20201010 12:25:16.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.388" level="INFO">VALUE: [0.10001047200000013, 0.10001184699999999, 0.10001087500000017, 0.10001087499999994, 0.10001087500000017, 0.10001087500000017, 0.10001086100000012, 0.10001086199999998, 0.10001087499999994, 0.10001088899999977, 0.1000108609999999, 0.1000108609999999, 0.1000109440000001, 0.1000108609999999, 0.10001088899999999, 0.10001087500000017, 0.1000108609999999, 0.10001087500000017, 0.1000108609999999, 0.10001088899999999, 0.10001087500000017, 0.10001086199999998, 0.10001091700000009, 0.10000813899999983, 0.10001361100000006, 0.10001084700000007, 0.10001079099999988, 0.10001079099999988, 0.1000108329999998, 0.1000108329999998, 0.10001090299999937, 0.10001084700000007, 0.10001079199999996, 0.10001083399999988, 0.10001080599999934, 0.10001083300000069, 0.10001088899999999, 0.10000808400000061, 0.10001356900000058, 0.10001079099999988, 0.10001498600000058, 0.10000675000000037, 0.10001084700000007, 0.10003508299999986, 0.09998656999999955, 0.10001083399999988, 0.10001084700000007, 0.10001080500000015, 0.10001086100000034, 0.10001079099999988]</msg>
<status status="PASS" starttime="20201010 12:25:16.386" endtime="20201010 12:25:16.388"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.382" endtime="20201010 12:25:16.388"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.930" endtime="20201010 12:25:16.389"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:09.859" endtime="20201010 12:25:16.390" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="15 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:16.397" endtime="20201010 12:25:16.416"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.395" endtime="20201010 12:25:16.417"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.431" endtime="20201010 12:25:16.445"></status>
</kw>
<msg timestamp="20201010 12:25:16.446" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:16.429" endtime="20201010 12:25:16.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.449" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:16.447" endtime="20201010 12:25:16.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.452" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:16.450" endtime="20201010 12:25:16.452"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:16.427" endtime="20201010 12:25:16.453"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:16.424" endtime="20201010 12:25:16.453"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.423" endtime="20201010 12:25:16.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:16.457" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:16.457" endtime="20201010 12:25:16.458"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.455" endtime="20201010 12:25:16.458"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.422" endtime="20201010 12:25:16.458"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.421" endtime="20201010 12:25:16.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.459" endtime="20201010 12:25:16.461"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.419" endtime="20201010 12:25:16.461"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.418" endtime="20201010 12:25:16.462"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.394" endtime="20201010 12:25:16.462"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.471" endtime="20201010 12:25:22.522"></status>
</kw>
<msg timestamp="20201010 12:25:22.523" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '52653'}, {'interval': '31223'}, {'interval': '17873'}, {'interval': '99702'}, {'interval': '86231'...</msg>
<status status="PASS" starttime="20201010 12:25:16.469" endtime="20201010 12:25:22.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.529" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '52653'}, {'interval': '31223'}, {'interval': '17873'}, {'interval': '99702'}, {'interval': '86231'...</msg>
<status status="PASS" starttime="20201010 12:25:22.526" endtime="20201010 12:25:22.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.531" endtime="20201010 12:25:22.535"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.467" endtime="20201010 12:25:22.536"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.465" endtime="20201010 12:25:22.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:22.543" level="INFO">${RESULT} = {'focus': [100000], 'interval': [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]}</msg>
<status status="PASS" starttime="20201010 12:25:22.538" endtime="20201010 12:25:22.543"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:22.553" level="INFO">${interval} = [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]</msg>
<status status="PASS" starttime="20201010 12:25:22.545" endtime="20201010 12:25:22.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.559" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:22.557" endtime="20201010 12:25:22.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.562" level="INFO">VALUE: [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]</msg>
<status status="PASS" starttime="20201010 12:25:22.561" endtime="20201010 12:25:22.562"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.555" endtime="20201010 12:25:22.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.566" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:22.565" endtime="20201010 12:25:22.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.568" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:22.567" endtime="20201010 12:25:22.568"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.563" endtime="20201010 12:25:22.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.576" endtime="20201010 12:25:22.872"></status>
</kw>
<msg timestamp="20201010 12:25:22.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.067312208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.167301917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:22.574" endtime="20201010 12:25:22.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.067312208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.167301917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:22.876" endtime="20201010 12:25:22.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.884" endtime="20201010 12:25:22.885"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.571" endtime="20201010 12:25:22.886"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.569" endtime="20201010 12:25:22.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:22.890" level="INFO">${FILTERED} = [{'diff': 0.09998970900000015}, {'diff': 0.10001202799999986}, {'diff': 0.10001099999999985}, {'diff': 0.10001095900000001}, {'diff': 0.10001097300000006}, {'diff': 0.10001097199999998}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:22.887" endtime="20201010 12:25:22.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:22.894" level="INFO">${RESULT} = {'diff': [0.09998970900000015, 0.10001202799999986, 0.10001099999999985, 0.10001095900000001, 0.10001097300000006, 0.10001097199999998, 0.10001095799999993, 0.10001099999999985, 0.10001094399999988, 0...</msg>
<status status="PASS" starttime="20201010 12:25:22.891" endtime="20201010 12:25:22.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.899" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:22.898" endtime="20201010 12:25:22.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.901" level="INFO">VALUE: [0.09998970900000015, 0.10001202799999986, 0.10001099999999985, 0.10001095900000001, 0.10001097300000006, 0.10001097199999998, 0.10001095799999993, 0.10001099999999985, 0.10001094399999988, 0.10001102800000017, 0.10001097199999975, 0.10001105600000004, 0.10001102799999995, 0.10001097300000028, 0.1000109440000001, 0.10001095799999993, 0.10001097199999975, 0.10001097199999975, 0.10001095799999993, 0.10001097199999975, 0.1000109870000001, 0.10001098600000002, 0.1000109720000002, 0.10001095900000001, 0.10001101399999968, 0.10001098600000002, 0.10001097299999984, 0.10005573599999984, 0.0999652219999998, 0.10001197300000042, 0.10001090300000026, 0.10001087499999972, 0.10001093099999991, 0.10001090300000026, 0.10001088899999999, 0.10001090300000026, 0.10001094500000018, 0.1000108880000008, 0.10001088899999999, 0.10001095800000037, 0.10001087500000061, 0.10001088899999999, 0.10001090300000026, 0.10001091699999964, 0.10001091699999964, 0.10001090300000026, 0.10001091599999956, 0.10001091699999964, 0.10001090300000026, 0.10001090300000026]</msg>
<status status="PASS" starttime="20201010 12:25:22.900" endtime="20201010 12:25:22.902"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.895" endtime="20201010 12:25:22.902"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.463" endtime="20201010 12:25:22.903"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:16.391" endtime="20201010 12:25:22.903" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="20 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:22.911" endtime="20201010 12:25:22.930"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.909" endtime="20201010 12:25:22.931"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.943" endtime="20201010 12:25:22.957"></status>
</kw>
<msg timestamp="20201010 12:25:22.958" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:22.942" endtime="20201010 12:25:22.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.961" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:22.959" endtime="20201010 12:25:22.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.964" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:22.962" endtime="20201010 12:25:22.964"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:22.939" endtime="20201010 12:25:22.965"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:22.937" endtime="20201010 12:25:22.965"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.936" endtime="20201010 12:25:22.966"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:22.969" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:22.969" endtime="20201010 12:25:22.970"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.967" endtime="20201010 12:25:22.970"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.935" endtime="20201010 12:25:22.970"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.934" endtime="20201010 12:25:22.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.971" endtime="20201010 12:25:22.973"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.933" endtime="20201010 12:25:22.973"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.931" endtime="20201010 12:25:22.974"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.908" endtime="20201010 12:25:22.974"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.984" endtime="20201010 12:25:29.046"></status>
</kw>
<msg timestamp="20201010 12:25:29.048" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '27660'}, {'interval': '24774'}, {'interval': '50283'}, {'interval': '17455'}, {'interval': '56207'...</msg>
<status status="PASS" starttime="20201010 12:25:22.981" endtime="20201010 12:25:29.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.053" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '27660'}, {'interval': '24774'}, {'interval': '50283'}, {'interval': '17455'}, {'interval': '56207'...</msg>
<status status="PASS" starttime="20201010 12:25:29.050" endtime="20201010 12:25:29.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.056" endtime="20201010 12:25:29.059"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.979" endtime="20201010 12:25:29.060"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.977" endtime="20201010 12:25:29.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:29.068" level="INFO">${RESULT} = {'focus': [100000], 'interval': [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]}</msg>
<status status="PASS" starttime="20201010 12:25:29.063" endtime="20201010 12:25:29.068"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:29.078" level="INFO">${interval} = [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]</msg>
<status status="PASS" starttime="20201010 12:25:29.070" endtime="20201010 12:25:29.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.086" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:29.084" endtime="20201010 12:25:29.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.090" level="INFO">VALUE: [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]</msg>
<status status="PASS" starttime="20201010 12:25:29.088" endtime="20201010 12:25:29.091"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.080" endtime="20201010 12:25:29.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.099" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:29.097" endtime="20201010 12:25:29.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.104" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:29.102" endtime="20201010 12:25:29.104"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.093" endtime="20201010 12:25:29.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.119" endtime="20201010 12:25:29.415"></status>
</kw>
<msg timestamp="20201010 12:25:29.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.067676486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.167689014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:29.117" endtime="20201010 12:25:29.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.067676486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.167689014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:29.419" endtime="20201010 12:25:29.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.427" endtime="20201010 12:25:29.429"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.111" endtime="20201010 12:25:29.429"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.107" endtime="20201010 12:25:29.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:29.433" level="INFO">${FILTERED} = [{'diff': 0.10001252799999993}, {'diff': 0.100009931}, {'diff': 0.100009542}, {'diff': 0.10001332000000018}, {'diff': 0.10000997200000006}, {'diff': 0.1000109440000001}, {'diff': 0.1000109440000001}, ...</msg>
<status status="PASS" starttime="20201010 12:25:29.430" endtime="20201010 12:25:29.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:29.438" level="INFO">${RESULT} = {'diff': [0.10001252799999993, 0.100009931, 0.100009542, 0.10001332000000018, 0.10000997200000006, 0.1000109440000001, 0.1000109440000001, 0.10001095799999993, 0.10001094399999988, 0.1000109440000001,...</msg>
<status status="PASS" starttime="20201010 12:25:29.434" endtime="20201010 12:25:29.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.442" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:29.441" endtime="20201010 12:25:29.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.445" level="INFO">VALUE: [0.10001252799999993, 0.100009931, 0.100009542, 0.10001332000000018, 0.10000997200000006, 0.1000109440000001, 0.1000109440000001, 0.10001095799999993, 0.10001094399999988, 0.1000109440000001, 0.10001094399999966, 0.10001093099999991, 0.10001095900000001, 0.10001094499999974, 0.10001095900000001, 0.10001095799999993, 0.10001093000000028, 0.10001092999999983, 0.10001093000000028, 0.10001095799999993, 0.10001093099999991, 0.10001094500000018, 0.10001094499999974, 0.10001093100000036, 0.1000109440000001, 0.10001092999999983, 0.100010916, 0.10001084700000007, 0.10005562499999998, 0.09996508299999984, 0.10001201299999973, 0.10001087499999972, 0.10001088899999999, 0.10001095800000037, 0.10001084700000007, 0.10001087499999972, 0.1000109440000001, 0.10001093000000072, 0.10001084700000007, 0.1000109440000001, 0.10004301399999971, 0.09997893099999988, 0.10001088899999999, 0.1000109440000001, 0.10001086099999945, 0.10001088899999999, 0.10004966600000031, 0.099973125, 0.10000988899999985, 0.10001087499999972]</msg>
<status status="PASS" starttime="20201010 12:25:29.443" endtime="20201010 12:25:29.445"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.439" endtime="20201010 12:25:29.446"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.975" endtime="20201010 12:25:29.446"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:22.905" endtime="20201010 12:25:29.447" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:29.454" endtime="20201010 12:25:29.474"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.453" endtime="20201010 12:25:29.474"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.487" endtime="20201010 12:25:29.501"></status>
</kw>
<msg timestamp="20201010 12:25:29.502" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:29.486" endtime="20201010 12:25:29.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.505" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:29.503" endtime="20201010 12:25:29.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.508" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:29.506" endtime="20201010 12:25:29.508"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:29.483" endtime="20201010 12:25:29.509"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:29.481" endtime="20201010 12:25:29.509"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.479" endtime="20201010 12:25:29.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:29.513" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:29.513" endtime="20201010 12:25:29.514"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.511" endtime="20201010 12:25:29.514"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.479" endtime="20201010 12:25:29.514"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.478" endtime="20201010 12:25:29.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.515" endtime="20201010 12:25:29.517"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.477" endtime="20201010 12:25:29.517"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.475" endtime="20201010 12:25:29.518"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.451" endtime="20201010 12:25:29.518"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.527" endtime="20201010 12:25:35.601"></status>
</kw>
<msg timestamp="20201010 12:25:35.603" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '16291'}, {'interval': '74117'}, {'interval': '74576'}, {'interval': '31746'}, {'interval': '33340'...</msg>
<status status="PASS" starttime="20201010 12:25:29.525" endtime="20201010 12:25:35.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.609" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '16291'}, {'interval': '74117'}, {'interval': '74576'}, {'interval': '31746'}, {'interval': '33340'...</msg>
<status status="PASS" starttime="20201010 12:25:35.605" endtime="20201010 12:25:35.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.611" endtime="20201010 12:25:35.614"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.523" endtime="20201010 12:25:35.616"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.521" endtime="20201010 12:25:35.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:35.623" level="INFO">${RESULT} = {'focus': [100000], 'interval': [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113,...</msg>
<status status="PASS" starttime="20201010 12:25:35.618" endtime="20201010 12:25:35.624"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:35.634" level="INFO">${interval} = [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248]</msg>
<status status="PASS" starttime="20201010 12:25:35.625" endtime="20201010 12:25:35.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.642" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:35.639" endtime="20201010 12:25:35.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.647" level="INFO">VALUE: [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248]</msg>
<status status="PASS" starttime="20201010 12:25:35.644" endtime="20201010 12:25:35.647"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.636" endtime="20201010 12:25:35.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.656" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:35.654" endtime="20201010 12:25:35.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.660" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:35.658" endtime="20201010 12:25:35.661"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.650" endtime="20201010 12:25:35.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.678" endtime="20201010 12:25:35.975"></status>
</kw>
<msg timestamp="20201010 12:25:35.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.067561264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.167573778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:35.675" endtime="20201010 12:25:35.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.067561264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.167573778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:35.979" endtime="20201010 12:25:35.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.987" endtime="20201010 12:25:35.988"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.670" endtime="20201010 12:25:35.989"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.664" endtime="20201010 12:25:35.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:35.993" level="INFO">${FILTERED} = [{'diff': 0.10001251399999989}, {'diff': 0.10000991699999995}, {'diff': 0.10001095900000001}, {'diff': 0.10001094399999988}, {'diff': 0.10001090300000004}, {'diff': 0.10001090199999996}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:35.990" endtime="20201010 12:25:35.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:35.997" level="INFO">${RESULT} = {'diff': [0.10001251399999989, 0.10000991699999995, 0.10001095900000001, 0.10001094399999988, 0.10001090300000004, 0.10001090199999996, 0.1000109440000001, 0.10001093000000005, 0.10001090300000004, 0....</msg>
<status status="PASS" starttime="20201010 12:25:35.994" endtime="20201010 12:25:35.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:36.001" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:36.000" endtime="20201010 12:25:36.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:36.004" level="INFO">VALUE: [0.10001251399999989, 0.10000991699999995, 0.10001095900000001, 0.10001094399999988, 0.10001090300000004, 0.10001090199999996, 0.1000109440000001, 0.10001093000000005, 0.10001090300000004, 0.10001090300000004, 0.10001094499999974, 0.10001091700000009, 0.10003713899999989, 0.09998470800000003, 0.10001091699999964, 0.10001092999999983, 0.10001095900000001, 0.10001092999999983, 0.100010916, 0.10001092999999983, 0.10001092999999983, 0.100010916, 0.10001094399999966, 0.10001091700000009, 0.10001093099999991, 0.10001093099999991, 0.10001091700000009, 0.10001091700000009, 0.10001087500000017, 0.10000765199999995, 0.10003637500000018, 0.0999884720000006, 0.1000108200000005, 0.10001084700000007, 0.10001080500000015, 0.1000108329999998, 0.10001083399999988, 0.10001080600000023, 0.10001081899999953, 0.10001081900000042, 0.10001083300000069, 0.10001084700000007, 0.1000108200000005, 0.10001081899999953, 0.10005556900000023, 0.0999660690000006, 0.10001081999999961, 0.10001083399999988, 0.10000908299999978, 0.10001259700000009]</msg>
<status status="PASS" starttime="20201010 12:25:36.002" endtime="20201010 12:25:36.004"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.998" endtime="20201010 12:25:36.005"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.519" endtime="20201010 12:25:36.005"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:29.449" endtime="20201010 12:25:36.006" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="30 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:36.013" endtime="20201010 12:25:36.033"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.011" endtime="20201010 12:25:36.034"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:36.047" endtime="20201010 12:25:36.061"></status>
</kw>
<msg timestamp="20201010 12:25:36.061" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:36.046" endtime="20201010 12:25:36.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:36.064" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:36.063" endtime="20201010 12:25:36.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:36.068" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:36.066" endtime="20201010 12:25:36.068"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:36.043" endtime="20201010 12:25:36.068"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:36.040" endtime="20201010 12:25:36.069"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.039" endtime="20201010 12:25:36.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:36.074" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:36.073" endtime="20201010 12:25:36.074"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.070" endtime="20201010 12:25:36.074"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.038" endtime="20201010 12:25:36.075"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.038" endtime="20201010 12:25:36.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:36.075" endtime="20201010 12:25:36.077"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.036" endtime="20201010 12:25:36.078"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.035" endtime="20201010 12:25:36.078"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.010" endtime="20201010 12:25:36.078"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>30</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:36.087" endtime="20201010 12:25:42.175"></status>
</kw>
<msg timestamp="20201010 12:25:42.176" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 30 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '74757'}, {'interval': '70347'}, {'interval': '33034'}, {'interval': '80423'}, {'interval': '79926'...</msg>
<status status="PASS" starttime="20201010 12:25:36.086" endtime="20201010 12:25:42.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.182" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 30 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '74757'}, {'interval': '70347'}, {'interval': '33034'}, {'interval': '80423'}, {'interval': '79926'...</msg>
<status status="PASS" starttime="20201010 12:25:42.178" endtime="20201010 12:25:42.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.184" endtime="20201010 12:25:42.188"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.083" endtime="20201010 12:25:42.189"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.081" endtime="20201010 12:25:42.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:42.197" level="INFO">${RESULT} = {'focus': [100000], 'interval': [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320,...</msg>
<status status="PASS" starttime="20201010 12:25:42.191" endtime="20201010 12:25:42.197"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:42.208" level="INFO">${interval} = [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 58146, 28867, 669...</msg>
<status status="PASS" starttime="20201010 12:25:42.199" endtime="20201010 12:25:42.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.215" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:42.213" endtime="20201010 12:25:42.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.220" level="INFO">VALUE: [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 58146, 28867, 66958, 17521]</msg>
<status status="PASS" starttime="20201010 12:25:42.218" endtime="20201010 12:25:42.221"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.209" endtime="20201010 12:25:42.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.229" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:42.227" endtime="20201010 12:25:42.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.234" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:42.232" endtime="20201010 12:25:42.235"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.223" endtime="20201010 12:25:42.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.247" endtime="20201010 12:25:42.544"></status>
</kw>
<msg timestamp="20201010 12:25:42.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.069774361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.169784819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:42.245" endtime="20201010 12:25:42.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.069774361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.169784819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:42.548" endtime="20201010 12:25:42.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.555" endtime="20201010 12:25:42.557"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.241" endtime="20201010 12:25:42.558"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.237" endtime="20201010 12:25:42.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:42.562" level="INFO">${FILTERED} = [{'diff': 0.10001045800000008}, {'diff': 0.10001188900000013}, {'diff': 0.10001093100000014}, {'diff': 0.10001087499999994}, {'diff': 0.10001088899999999}, {'diff': 0.10001088899999999}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:42.559" endtime="20201010 12:25:42.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:42.567" level="INFO">${RESULT} = {'diff': [0.10001045800000008, 0.10001188900000013, 0.10001093100000014, 0.10001087499999994, 0.10001088899999999, 0.10001088899999999, 0.10001091699999987, 0.10001088799999991, 0.10001087499999994, 0...</msg>
<status status="PASS" starttime="20201010 12:25:42.563" endtime="20201010 12:25:42.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.571" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:42.570" endtime="20201010 12:25:42.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.573" level="INFO">VALUE: [0.10001045800000008, 0.10001188900000013, 0.10001093100000014, 0.10001087499999994, 0.10001088899999999, 0.10001088899999999, 0.10001091699999987, 0.10001088799999991, 0.10001087499999994, 0.10001088899999977, 0.10001091700000009, 0.10001087500000017, 0.10001088899999999, 0.10001090299999982, 0.10001090300000026, 0.10001090199999974, 0.10001090299999982, 0.10001090299999982, 0.10001087499999972, 0.10001090199999974, 0.10001088899999999, 0.10001091700000009, 0.100010916, 0.10001090199999974, 0.1000109440000001, 0.10001087499999972, 0.10001090299999982, 0.10001090200000018, 0.10001090299999982, 0.10001090300000026, 0.10001091699999964, 0.10010081999999976, 0.09992095900000031, 0.10001079199999996, 0.10001086100000034, 0.10001077799999969, 0.10001084700000007, 0.10001083400000077, 0.10001079199999996, 0.10001081900000042, 0.10001079199999996, 0.10001084700000007, 0.10001081900000042, 0.10001080500000015, 0.1000108329999998, 0.10001081900000042, 0.10001081899999953, 0.10001080499999926, 0.10001088899999999, 0.10001081900000042]</msg>
<status status="PASS" starttime="20201010 12:25:42.572" endtime="20201010 12:25:42.574"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.568" endtime="20201010 12:25:42.574"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.079" endtime="20201010 12:25:42.575"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:36.008" endtime="20201010 12:25:42.575" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="35 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:42.583" endtime="20201010 12:25:42.602"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.581" endtime="20201010 12:25:42.603"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.616" endtime="20201010 12:25:42.630"></status>
</kw>
<msg timestamp="20201010 12:25:42.631" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:42.614" endtime="20201010 12:25:42.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.633" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:42.632" endtime="20201010 12:25:42.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.636" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:42.634" endtime="20201010 12:25:42.637"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:42.611" endtime="20201010 12:25:42.637"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:42.609" endtime="20201010 12:25:42.638"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.608" endtime="20201010 12:25:42.638"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:42.642" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:42.641" endtime="20201010 12:25:42.642"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.639" endtime="20201010 12:25:42.643"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.607" endtime="20201010 12:25:42.643"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.606" endtime="20201010 12:25:42.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.644" endtime="20201010 12:25:42.645"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.605" endtime="20201010 12:25:42.646"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.603" endtime="20201010 12:25:42.646"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.580" endtime="20201010 12:25:42.646"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>35</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.656" endtime="20201010 12:25:48.754"></status>
</kw>
<msg timestamp="20201010 12:25:48.755" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 35 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '54295'}, {'interval': '37199'}, {'interval': '39990'}, {'interval': '20568'}, {'interval': '10171'...</msg>
<status status="PASS" starttime="20201010 12:25:42.654" endtime="20201010 12:25:48.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.761" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 35 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '54295'}, {'interval': '37199'}, {'interval': '39990'}, {'interval': '20568'}, {'interval': '10171'...</msg>
<status status="PASS" starttime="20201010 12:25:48.757" endtime="20201010 12:25:48.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.764" endtime="20201010 12:25:48.767"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.651" endtime="20201010 12:25:48.768"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.649" endtime="20201010 12:25:48.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:48.777" level="INFO">${RESULT} = {'focus': [100000], 'interval': [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836,...</msg>
<status status="PASS" starttime="20201010 12:25:48.771" endtime="20201010 12:25:48.777"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:48.787" level="INFO">${interval} = [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 43539, 68459, 281...</msg>
<status status="PASS" starttime="20201010 12:25:48.779" endtime="20201010 12:25:48.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.795" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:48.793" endtime="20201010 12:25:48.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.800" level="INFO">VALUE: [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 43539, 68459, 28154, 76170, 13496, 73105, 63810, 92352, 47335]</msg>
<status status="PASS" starttime="20201010 12:25:48.797" endtime="20201010 12:25:48.807"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.789" endtime="20201010 12:25:48.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.811" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:48.810" endtime="20201010 12:25:48.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.813" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:48.812" endtime="20201010 12:25:48.814"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.808" endtime="20201010 12:25:48.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.821" endtime="20201010 12:25:49.117"></status>
</kw>
<msg timestamp="20201010 12:25:49.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.069213458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.169224903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:48.819" endtime="20201010 12:25:49.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:49.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.069213458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.169224903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:49.121" endtime="20201010 12:25:49.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:49.129" endtime="20201010 12:25:49.131"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.817" endtime="20201010 12:25:49.132"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.815" endtime="20201010 12:25:49.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:49.136" level="INFO">${FILTERED} = [{'diff': 0.10001144500000003}, {'diff': 0.10001091700000009}, {'diff': 0.10004824999999995}, {'diff': 0.0999734590000001}, {'diff': 0.1000084859999999}, {'diff': 0.10001327800000004}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201010 12:25:49.133" endtime="20201010 12:25:49.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:49.140" level="INFO">${RESULT} = {'diff': [0.10001144500000003, 0.10001091700000009, 0.10004824999999995, 0.0999734590000001, 0.1000084859999999, 0.10001327800000004, 0.1000108609999999, 0.10001088899999999, 0.10001087499999994, 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:49.137" endtime="20201010 12:25:49.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:49.145" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:49.144" endtime="20201010 12:25:49.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:49.147" level="INFO">VALUE: [0.10001144500000003, 0.10001091700000009, 0.10004824999999995, 0.0999734590000001, 0.1000084859999999, 0.10001327800000004, 0.1000108609999999, 0.10001088899999999, 0.10001087499999994, 0.10001095799999993, 0.10001090299999982, 0.1000108609999999, 0.10001093099999991, 0.1000108609999999, 0.1000108609999999, 0.10001087500000017, 0.1000109440000001, 0.10001090299999982, 0.10007009700000014, 0.09995166700000002, 0.10001088799999991, 0.10000799999999987, 0.10001373600000019, 0.1000108609999999, 0.10001087500000017, 0.1000108609999999, 0.10001088899999999, 0.10001086199999998, 0.1000108609999999, 0.10001079100000032, 0.10001084700000007, 0.10000790299999984, 0.10001373600000019, 0.1000108329999998, 0.10001080600000023, 0.1000089019999999, 0.10001279100000016, 0.10001088899999999, 0.1000928339999998, 0.0999288749999998, 0.10001080600000023, 0.10001080500000015, 0.1000619580000004, 0.09996849999999924, 0.10000198600000054, 0.1000108329999998, 0.10001084800000015, 0.10000833399999998, 0.10001345900000036, 0.10000787500000019]</msg>
<status status="PASS" starttime="20201010 12:25:49.146" endtime="20201010 12:25:49.147"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.141" endtime="20201010 12:25:49.148"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.647" endtime="20201010 12:25:49.148"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:42.577" endtime="20201010 12:25:49.149" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="40 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:49.156" endtime="20201010 12:25:49.176"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.155" endtime="20201010 12:25:49.176"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:49.190" endtime="20201010 12:25:49.203"></status>
</kw>
<msg timestamp="20201010 12:25:49.204" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:49.188" endtime="20201010 12:25:49.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:49.206" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:49.205" endtime="20201010 12:25:49.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:49.209" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:49.207" endtime="20201010 12:25:49.210"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:49.185" endtime="20201010 12:25:49.210"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:49.183" endtime="20201010 12:25:49.211"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.182" endtime="20201010 12:25:49.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:49.216" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:49.215" endtime="20201010 12:25:49.216"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.212" endtime="20201010 12:25:49.216"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.181" endtime="20201010 12:25:49.216"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.180" endtime="20201010 12:25:49.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:49.217" endtime="20201010 12:25:49.219"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.179" endtime="20201010 12:25:49.220"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.177" endtime="20201010 12:25:49.220"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.153" endtime="20201010 12:25:49.220"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>40</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:49.231" endtime="20201010 12:25:55.341"></status>
</kw>
<msg timestamp="20201010 12:25:55.342" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 40 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '63910'}, {'interval': '51619'}, {'interval': '66290'}, {'interval': '40380'}, {'interval': '35046'...</msg>
<status status="PASS" starttime="20201010 12:25:49.228" endtime="20201010 12:25:55.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.349" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 40 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '63910'}, {'interval': '51619'}, {'interval': '66290'}, {'interval': '40380'}, {'interval': '35046'...</msg>
<status status="PASS" starttime="20201010 12:25:55.345" endtime="20201010 12:25:55.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.351" endtime="20201010 12:25:55.355"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.226" endtime="20201010 12:25:55.356"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.223" endtime="20201010 12:25:55.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:55.364" level="INFO">${RESULT} = {'focus': [100000], 'interval': [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612,...</msg>
<status status="PASS" starttime="20201010 12:25:55.358" endtime="20201010 12:25:55.365"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:55.372" level="INFO">${interval} = [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 17369, 86767, 529...</msg>
<status status="PASS" starttime="20201010 12:25:55.367" endtime="20201010 12:25:55.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.375" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:55.374" endtime="20201010 12:25:55.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.378" level="INFO">VALUE: [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674]</msg>
<status status="PASS" starttime="20201010 12:25:55.377" endtime="20201010 12:25:55.378"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.373" endtime="20201010 12:25:55.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.382" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:55.381" endtime="20201010 12:25:55.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.384" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:55.383" endtime="20201010 12:25:55.385"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.379" endtime="20201010 12:25:55.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.392" endtime="20201010 12:25:55.691"></status>
</kw>
<msg timestamp="20201010 12:25:55.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.071412431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.171424972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:55.390" endtime="20201010 12:25:55.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.071412431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.171424972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:55.695" endtime="20201010 12:25:55.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.703" endtime="20201010 12:25:55.704"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.388" endtime="20201010 12:25:55.705"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.386" endtime="20201010 12:25:55.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:55.709" level="INFO">${FILTERED} = [{'diff': 0.10001254100000012}, {'diff': 0.10000762499999993}, {'diff': 0.10006298600000019}, {'diff': 0.09996226399999997}, {'diff': 0.10005177799999987}, {'diff': 0.10005213899999998}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201010 12:25:55.706" endtime="20201010 12:25:55.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:55.713" level="INFO">${RESULT} = {'diff': [0.10001254100000012, 0.10000762499999993, 0.10006298600000019, 0.09996226399999997, 0.10005177799999987, 0.10005213899999998, 0.09992791599999995, 0.10001095800000015, 0.10001095900000001, 0...</msg>
<status status="PASS" starttime="20201010 12:25:55.710" endtime="20201010 12:25:55.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.717" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:55.716" endtime="20201010 12:25:55.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.720" level="INFO">VALUE: [0.10001254100000012, 0.10000762499999993, 0.10006298600000019, 0.09996226399999997, 0.10005177799999987, 0.10005213899999998, 0.09992791599999995, 0.10001095800000015, 0.10001095900000001, 0.10005204199999973, 0.09996984700000011, 0.1000109440000001, 0.10001095800000037, 0.10001102799999995, 0.10001104200000022, 0.10001095799999993, 0.1000087500000002, 0.100013181, 0.10001098600000002, 0.10001093100000036, 0.10001095799999993, 0.1000109440000001, 0.10007399999999977, 0.09994802699999994, 0.10001093100000036, 0.1000109720000002, 0.10001094399999966, 0.10002131900000011, 0.10003905499999988, 0.10005712500000019, 0.09992736099999977, 0.10000887499999944, 0.1000120140000007, 0.1000109449999993, 0.10001087499999972, 0.10001086200000042, 0.10001088899999999, 0.10001098600000002, 0.10001091599999956, 0.10001088899999999, 0.10001088899999999, 0.10001090299999937, 0.10000955499999975, 0.10001324999999994, 0.10000990300000012, 0.10001091600000045, 0.10009666599999978, 0.099939569, 0.09999743000000016, 0.10000990300000012]</msg>
<status status="PASS" starttime="20201010 12:25:55.718" endtime="20201010 12:25:55.720"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.714" endtime="20201010 12:25:55.721"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.221" endtime="20201010 12:25:55.721"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:49.151" endtime="20201010 12:25:55.722" critical="yes"></status>
</test>
<test id="s1-s2-t10" name="50 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:55.729" endtime="20201010 12:25:55.748"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.728" endtime="20201010 12:25:55.749"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.764" endtime="20201010 12:25:55.778"></status>
</kw>
<msg timestamp="20201010 12:25:55.778" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:55.762" endtime="20201010 12:25:55.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.781" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:55.779" endtime="20201010 12:25:55.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.784" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:55.782" endtime="20201010 12:25:55.784"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:55.759" endtime="20201010 12:25:55.785"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:55.756" endtime="20201010 12:25:55.786"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.754" endtime="20201010 12:25:55.786"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:55.790" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:55.789" endtime="20201010 12:25:55.790"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.787" endtime="20201010 12:25:55.790"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.753" endtime="20201010 12:25:55.790"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.753" endtime="20201010 12:25:55.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.791" endtime="20201010 12:25:55.793"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.751" endtime="20201010 12:25:55.793"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.750" endtime="20201010 12:25:55.794"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.726" endtime="20201010 12:25:55.794"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>50</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.803" endtime="20201010 12:26:01.916"></status>
</kw>
<msg timestamp="20201010 12:26:01.916" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 50 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '14414'}, {'interval': '55147'}, {'interval': '70168'}, {'interval': '61294'}, {'interval': '86720'...</msg>
<status status="PASS" starttime="20201010 12:25:55.801" endtime="20201010 12:26:01.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.919" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 50 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '14414'}, {'interval': '55147'}, {'interval': '70168'}, {'interval': '61294'}, {'interval': '86720'...</msg>
<status status="PASS" starttime="20201010 12:26:01.917" endtime="20201010 12:26:01.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.921" endtime="20201010 12:26:01.922"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.799" endtime="20201010 12:26:01.923"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.797" endtime="20201010 12:26:01.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:01.928" level="INFO">${RESULT} = {'focus': [100000], 'interval': [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491,...</msg>
<status status="PASS" starttime="20201010 12:26:01.924" endtime="20201010 12:26:01.928"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:01.933" level="INFO">${interval} = [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 10238, 70515, 408...</msg>
<status status="PASS" starttime="20201010 12:26:01.929" endtime="20201010 12:26:01.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.937" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:01.936" endtime="20201010 12:26:01.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.940" level="INFO">VALUE: [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 10238, 70515, 40828, 48500, 94435, 94098, 48103, 90303, 97856, 52511, 42830, 96777, 16054, 65477, 49396, 79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976]</msg>
<status status="PASS" starttime="20201010 12:26:01.938" endtime="20201010 12:26:01.940"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.934" endtime="20201010 12:26:01.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.944" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:01.943" endtime="20201010 12:26:01.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.946" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:01.945" endtime="20201010 12:26:01.946"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.941" endtime="20201010 12:26:01.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.953" endtime="20201010 12:26:02.250"></status>
</kw>
<msg timestamp="20201010 12:26:02.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.161520278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.261479458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:01.952" endtime="20201010 12:26:02.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.161520278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.261479458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:02.254" endtime="20201010 12:26:02.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.262" endtime="20201010 12:26:02.264"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.949" endtime="20201010 12:26:02.264"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.947" endtime="20201010 12:26:02.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:02.269" level="INFO">${FILTERED} = [{'diff': 0.09995917999999993}, {'diff': 0.10001192999999997}, {'diff': 0.10001092999999983}, {'diff': 0.10001092999999983}, {'diff': 0.1002510689999998}, {'diff': 0.0997708049999999}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201010 12:26:02.266" endtime="20201010 12:26:02.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:02.273" level="INFO">${RESULT} = {'diff': [0.09995917999999993, 0.10001192999999997, 0.10001092999999983, 0.10001092999999983, 0.1002510689999998, 0.0997708049999999, 0.10001093000000005, 0.10001095799999993, 0.100010916, 0.100010943...</msg>
<status status="PASS" starttime="20201010 12:26:02.270" endtime="20201010 12:26:02.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.278" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:02.277" endtime="20201010 12:26:02.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.280" level="INFO">VALUE: [0.09995917999999993, 0.10001192999999997, 0.10001092999999983, 0.10001092999999983, 0.1002510689999998, 0.0997708049999999, 0.10001093000000005, 0.10001095799999993, 0.100010916, 0.10001094399999966, 0.10001052800000032, 0.10001036099999983, 0.10000963900000004, 0.10001223599999998, 0.10001195800000007, 0.10001092999999983, 0.10001093000000028, 0.100010916, 0.10001092999999983, 0.1000109440000001, 0.10001094399999966, 0.10001091599999956, 0.10001093000000028, 0.100010916, 0.10001092999999983, 0.10001093000000028, 0.1000109440000001, 0.10004013899999986, 0.09998074999999984, 0.10001193100000005, 0.10001081999999961, 0.1000108200000005, 0.10004377799999986, 0.09997793099999974, 0.10001083399999988, 0.10001433299999984, 0.10000634699999988, 0.10001186200000056, 0.1000108329999998, 0.1000108329999998, 0.10001083399999988, 0.10001084700000007, 0.1001139439999994, 0.09990774999999985, 0.1000569579999997, 0.0999647079999999, 0.10001083399999988, 0.10001086099999945, 0.10001086100000034, 0.10001084700000007]</msg>
<status status="PASS" starttime="20201010 12:26:02.279" endtime="20201010 12:26:02.280"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.274" endtime="20201010 12:26:02.281"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.795" endtime="20201010 12:26:02.281"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:55.724" endtime="20201010 12:26:02.282" critical="yes"></status>
</test>
<test id="s1-s2-t11" name="75 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:02.289" endtime="20201010 12:26:02.309"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.288" endtime="20201010 12:26:02.309"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.323" endtime="20201010 12:26:02.336"></status>
</kw>
<msg timestamp="20201010 12:26:02.337" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:02.321" endtime="20201010 12:26:02.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.339" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:02.338" endtime="20201010 12:26:02.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.342" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:02.340" endtime="20201010 12:26:02.343"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:02.319" endtime="20201010 12:26:02.343"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:02.316" endtime="20201010 12:26:02.344"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.315" endtime="20201010 12:26:02.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:02.348" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:02.347" endtime="20201010 12:26:02.348"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.345" endtime="20201010 12:26:02.349"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.314" endtime="20201010 12:26:02.350"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.314" endtime="20201010 12:26:02.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.351" endtime="20201010 12:26:02.352"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.312" endtime="20201010 12:26:02.353"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.310" endtime="20201010 12:26:02.353"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.287" endtime="20201010 12:26:02.354"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>75</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.363" endtime="20201010 12:26:08.538"></status>
</kw>
<msg timestamp="20201010 12:26:08.539" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 75 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '81075'}, {'interval': '58727'}, {'interval': '40937'}, {'interval': '10090'}, {'interval': '32175'...</msg>
<status status="PASS" starttime="20201010 12:26:02.361" endtime="20201010 12:26:08.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.547" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 75 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '81075'}, {'interval': '58727'}, {'interval': '40937'}, {'interval': '10090'}, {'interval': '32175'...</msg>
<status status="PASS" starttime="20201010 12:26:08.542" endtime="20201010 12:26:08.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.549" endtime="20201010 12:26:08.552"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.358" endtime="20201010 12:26:08.553"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.356" endtime="20201010 12:26:08.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:08.566" level="INFO">${RESULT} = {'focus': [100000], 'interval': [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118,...</msg>
<status status="PASS" starttime="20201010 12:26:08.556" endtime="20201010 12:26:08.566"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:08.577" level="INFO">${interval} = [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118, 68312, 54751, 80163, 54227, 583...</msg>
<status status="PASS" starttime="20201010 12:26:08.568" endtime="20201010 12:26:08.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.585" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:08.583" endtime="20201010 12:26:08.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.590" level="INFO">VALUE: [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118, 68312, 54751, 80163, 54227, 58312, 43968, 57316, 22291, 26892, 71562, 69729, 10869, 16200, 53697, 30276, 60725, 22110, 59120, 24460, 36665, 10677, 44111, 16864, 64627, 87787, 52486, 10571, 13830, 59376, 68287, 10851, 19328, 95360, 64761, 16060, 56217, 52889, 38375, 35488, 20496, 81475, 86486, 44426, 74127, 62725, 66508, 29656, 17750, 43477, 47133, 75567]</msg>
<status status="PASS" starttime="20201010 12:26:08.588" endtime="20201010 12:26:08.591"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.578" endtime="20201010 12:26:08.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.597" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:08.596" endtime="20201010 12:26:08.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.599" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:08.598" endtime="20201010 12:26:08.599"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.593" endtime="20201010 12:26:08.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.606" endtime="20201010 12:26:08.903"></status>
</kw>
<msg timestamp="20201010 12:26:08.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.16532925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.26534075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201010 12:26:08.605" endtime="20201010 12:26:08.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.16532925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.26534075, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201010 12:26:08.907" endtime="20201010 12:26:08.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.915" endtime="20201010 12:26:08.917"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.602" endtime="20201010 12:26:08.917"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.600" endtime="20201010 12:26:08.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:08.921" level="INFO">${FILTERED} = [{'diff': 0.10001149999999992}, {'diff': 0.10006518099999995}, {'diff': 0.10000573700000004}, {'diff': 0.09996079200000008}, {'diff': 0.10001091699999987}, {'diff': 0.10014273699999987}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201010 12:26:08.918" endtime="20201010 12:26:08.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:08.926" level="INFO">${RESULT} = {'diff': [0.10001149999999992, 0.10006518099999995, 0.10000573700000004, 0.09996079200000008, 0.10001091699999987, 0.10014273699999987, 0.09987908300000004, 0.10001088899999999, 0.10001090299999982, 0...</msg>
<status status="PASS" starttime="20201010 12:26:08.922" endtime="20201010 12:26:08.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.930" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:08.929" endtime="20201010 12:26:08.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.933" level="INFO">VALUE: [0.10001149999999992, 0.10006518099999995, 0.10000573700000004, 0.09996079200000008, 0.10001091699999987, 0.10014273699999987, 0.09987908300000004, 0.10001088899999999, 0.10001090299999982, 0.10009181899999975, 0.0999299859999998, 0.10004865299999999, 0.10006813800000014, 0.09991590299999986, 0.10000881900000014, 0.10001299999999969, 0.10001091700000009, 0.10001091700000009, 0.10007244399999982, 0.10008265200000022, 0.09992595800000004, 0.09996373599999986, 0.10000991699999995, 0.10004406899999996, 0.09997877700000002, 0.1000098890000003, 0.10001097199999975, 0.10001095799999993, 0.10009825000000028, 0.09997776400000014, 0.1000242499999997, 0.0999422369999996, 0.10005680600000044, 0.09996580499999919, 0.10001080500000015, 0.10012995800000013, 0.09989176399999966, 0.10001079200000085, 0.1000108200000005, 0.10015111099999974, 0.09999423599999968, 0.09988811100000028, 0.10027956899999957, 0.09974205500000011, 0.10010676399999952, 0.10001824999999975, 0.09990748600000021, 0.10000981899999939, 0.10001081899999953, 0.10012624999999975]</msg>
<status status="PASS" starttime="20201010 12:26:08.932" endtime="20201010 12:26:08.933"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.927" endtime="20201010 12:26:08.934"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.354" endtime="20201010 12:26:08.934"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:02.284" endtime="20201010 12:26:08.935" critical="yes"></status>
</test>
<test id="s1-s2-t12" name="100 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:08.943" endtime="20201010 12:26:08.962"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.941" endtime="20201010 12:26:08.963"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.976" endtime="20201010 12:26:08.989"></status>
</kw>
<msg timestamp="20201010 12:26:08.990" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:08.974" endtime="20201010 12:26:08.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.992" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:08.991" endtime="20201010 12:26:08.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.995" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:08.993" endtime="20201010 12:26:08.996"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:08.971" endtime="20201010 12:26:08.996"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:08.969" endtime="20201010 12:26:08.997"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.968" endtime="20201010 12:26:08.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:09.001" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:09.000" endtime="20201010 12:26:09.002"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.998" endtime="20201010 12:26:09.002"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.967" endtime="20201010 12:26:09.002"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.966" endtime="20201010 12:26:09.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:09.003" endtime="20201010 12:26:09.004"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.965" endtime="20201010 12:26:09.005"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.963" endtime="20201010 12:26:09.005"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.939" endtime="20201010 12:26:09.006"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>100</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:09.016" endtime="20201010 12:26:15.250"></status>
</kw>
<msg timestamp="20201010 12:26:15.252" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 100 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '25479'}, {'interval': '99747'}, {'interval': '10545'}, {'interval': '53347'}, {'interval': '97917...</msg>
<status status="PASS" starttime="20201010 12:26:09.014" endtime="20201010 12:26:15.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.260" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 100 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '25479'}, {'interval': '99747'}, {'interval': '10545'}, {'interval': '53347'}, {'interval': '97917...</msg>
<status status="PASS" starttime="20201010 12:26:15.254" endtime="20201010 12:26:15.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.262" endtime="20201010 12:26:15.266"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.012" endtime="20201010 12:26:15.267"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.008" endtime="20201010 12:26:15.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:15.281" level="INFO">${RESULT} = {'focus': [100000], 'interval': [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946,...</msg>
<status status="PASS" starttime="20201010 12:26:15.270" endtime="20201010 12:26:15.281"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:15.293" level="INFO">${interval} = [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946, 34329, 54047, 21276, 78931, 960...</msg>
<status status="PASS" starttime="20201010 12:26:15.283" endtime="20201010 12:26:15.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.300" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:15.298" endtime="20201010 12:26:15.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.305" level="INFO">VALUE: [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946, 34329, 54047, 21276, 78931, 96011, 66721, 98428, 10018, 21350, 57891, 44237, 47888, 49872, 48763, 80263, 93240, 65542, 69880, 49052, 60186, 16103, 70949, 81316, 74540, 78692, 31251, 92771, 27327, 95171, 73283, 44316, 50344, 95943, 37655, 81039, 11783, 32679, 42216, 57297, 47170, 32344, 72256, 48132, 42552, 45395, 13114, 21516, 47276, 37671, 70189, 59386, 64123, 49679, 14446, 29154, 60416, 52975, 46707, 30305, 37643, 98500, 39715, 31020, 98902, 61399, 58345, 20890, 33209, 90081, 27893, 71353, 26989, 20846, 78625, 56472, 100987]</msg>
<status status="PASS" starttime="20201010 12:26:15.303" endtime="20201010 12:26:15.306"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.294" endtime="20201010 12:26:15.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.311" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:15.310" endtime="20201010 12:26:15.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.313" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:15.312" endtime="20201010 12:26:15.313"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.308" endtime="20201010 12:26:15.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.320" endtime="20201010 12:26:15.619"></status>
</kw>
<msg timestamp="20201010 12:26:15.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.27598675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.375971083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201010 12:26:15.319" endtime="20201010 12:26:15.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.27598675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.375971083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201010 12:26:15.623" endtime="20201010 12:26:15.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.631" endtime="20201010 12:26:15.632"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.316" endtime="20201010 12:26:15.633"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.314" endtime="20201010 12:26:15.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:15.637" level="INFO">${FILTERED} = [{'diff': 0.09998433300000009}, {'diff': 0.10029633300000018}, {'diff': 0.09972547200000004}, {'diff': 0.10018848700000005}, {'diff': 0.0998517080000001}, {'diff': 0.10005708300000005}, {'diff': 0.099...</msg>
<status status="PASS" starttime="20201010 12:26:15.634" endtime="20201010 12:26:15.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:15.644" level="INFO">${RESULT} = {'diff': [0.09998433300000009, 0.10029633300000018, 0.09972547200000004, 0.10018848700000005, 0.0998517080000001, 0.10005708300000005, 0.09994623599999986, 0.10001087500000017, 0.10001083399999988, 0....</msg>
<status status="PASS" starttime="20201010 12:26:15.638" endtime="20201010 12:26:15.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.649" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:15.647" endtime="20201010 12:26:15.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.651" level="INFO">VALUE: [0.09998433300000009, 0.10029633300000018, 0.09972547200000004, 0.10018848700000005, 0.0998517080000001, 0.10005708300000005, 0.09994623599999986, 0.10001087500000017, 0.10001083399999988, 0.10010273600000019, 0.09991890199999975, 0.10007554099999982, 0.10001457000000036, 0.09999355599999982, 0.09995970800000009, 0.10001004200000008, 0.10029305599999994, 0.10012841700000008, 0.099611903, 0.10001081899999997, 0.10021212499999965, 0.0998095280000002, 0.10001082000000006, 0.10001084700000007, 0.10000952799999974, 0.10001218099999987, 0.10031001300000009, 0.09971166699999978, 0.10020666600000006, 0.09981500000000043, 0.10001081999999961, 0.10005194500000059, 0.09996977700000009, 0.10000831900000051, 0.10047931900000062, 0.09954487499999942, 0.10001081900000042, 0.10021941599999984, 0.10003566700000022, 0.09977752799999973, 0.1000108329999998, 0.1001238889999998, 0.09990951400000014, 0.10032593000000034, 0.09987634799999956, 0.09998593099999997, 0.09984343100000004, 0.10002894500000004, 0.10054079200000032, 0.0996280279999997]</msg>
<status status="PASS" starttime="20201010 12:26:15.650" endtime="20201010 12:26:15.652"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.645" endtime="20201010 12:26:15.652"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.006" endtime="20201010 12:26:15.653"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:08.937" endtime="20201010 12:26:15.653" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 12:24:55.252" endtime="20201010 12:26:15.666"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201010 12:24:53.142" endtime="20201010 12:26:15.712"></status>
</suite>
<statistics>
<total>
<stat pass="13" fail="0">Critical Tests</stat>
<stat pass="13" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="13" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="13" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="13" fail="0">dev</stat>
</tag>
<suite>
<stat pass="13" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="12" fail="0" id="s1-s2" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
