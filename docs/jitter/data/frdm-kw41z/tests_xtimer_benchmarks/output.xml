<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201010 12:24:53.223" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 12:24:53.819" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 12:24:53.827" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 12:24:54.939" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 12:24:53.817" endtime="20201010 12:24:54.940"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 12:24:54.942" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 12:24:54.941" endtime="20201010 12:24:54.943"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:53.816" endtime="20201010 12:24:54.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:54.945" endtime="20201010 12:24:55.176"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:54.944" endtime="20201010 12:24:55.176"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.189" endtime="20201010 12:24:55.205"></status>
</kw>
<msg timestamp="20201010 12:24:55.205" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.188" endtime="20201010 12:24:55.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.208" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.207" endtime="20201010 12:24:55.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.211" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:55.209" endtime="20201010 12:24:55.212"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:55.185" endtime="20201010 12:24:55.213"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:55.183" endtime="20201010 12:24:55.213"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.182" endtime="20201010 12:24:55.213"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:55.218" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:55.217" endtime="20201010 12:24:55.219"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.214" endtime="20201010 12:24:55.219"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.181" endtime="20201010 12:24:55.219"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.180" endtime="20201010 12:24:55.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.220" endtime="20201010 12:24:55.222"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.179" endtime="20201010 12:24:55.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.223" endtime="20201010 12:24:55.225"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.177" endtime="20201010 12:24:55.225"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:53.814" endtime="20201010 12:24:55.225"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:55.232" endtime="20201010 12:24:55.252"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.231" endtime="20201010 12:24:55.252"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.266" endtime="20201010 12:24:55.285"></status>
</kw>
<msg timestamp="20201010 12:24:55.286" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.265" endtime="20201010 12:24:55.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.288" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.287" endtime="20201010 12:24:55.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.291" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:55.289" endtime="20201010 12:24:55.292"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:55.262" endtime="20201010 12:24:55.292"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:55.260" endtime="20201010 12:24:55.293"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.258" endtime="20201010 12:24:55.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:55.297" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:55.296" endtime="20201010 12:24:55.298"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.294" endtime="20201010 12:24:55.298"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.257" endtime="20201010 12:24:55.298"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.256" endtime="20201010 12:24:55.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.299" endtime="20201010 12:24:55.300"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.255" endtime="20201010 12:24:55.301"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.253" endtime="20201010 12:24:55.301"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.229" endtime="20201010 12:24:55.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.311" endtime="20201010 12:24:55.324"></status>
</kw>
<msg timestamp="20201010 12:24:55.325" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.309" endtime="20201010 12:24:55.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.327" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:55.326" endtime="20201010 12:24:55.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:55.329" endtime="20201010 12:24:55.330"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.306" endtime="20201010 12:24:55.331"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.303" endtime="20201010 12:24:55.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.336" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201010 12:24:55.335" endtime="20201010 12:24:55.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.339" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201010 12:24:55.338" endtime="20201010 12:24:55.339"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.332" endtime="20201010 12:24:55.339"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:24:55.226" endtime="20201010 12:24:55.341" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 12:24:53.339" endtime="20201010 12:24:55.346"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.400" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 12:24:55.408" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 12:24:56.561" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 12:24:55.399" endtime="20201010 12:24:56.562"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.564" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 12:24:56.563" endtime="20201010 12:24:56.564"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.398" endtime="20201010 12:24:56.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:56.567" endtime="20201010 12:24:56.834"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.566" endtime="20201010 12:24:56.835"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.847" endtime="20201010 12:24:56.863"></status>
</kw>
<msg timestamp="20201010 12:24:56.864" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['elcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.845" endtime="20201010 12:24:56.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.867" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['elcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.865" endtime="20201010 12:24:56.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.870" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:56.868" endtime="20201010 12:24:56.870"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.843" endtime="20201010 12:24:56.871"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.841" endtime="20201010 12:24:56.871"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.840" endtime="20201010 12:24:56.872"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:56.875" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:56.875" endtime="20201010 12:24:56.876"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.872" endtime="20201010 12:24:56.876"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.839" endtime="20201010 12:24:56.876"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.838" endtime="20201010 12:24:56.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.877" endtime="20201010 12:24:56.879"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.837" endtime="20201010 12:24:56.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.880" endtime="20201010 12:24:56.882"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.835" endtime="20201010 12:24:56.882"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.396" endtime="20201010 12:24:56.882"></status>
</kw>
<test id="s1-s2-t1" name="0 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:56.889" endtime="20201010 12:24:56.909"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.887" endtime="20201010 12:24:56.910"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.923" endtime="20201010 12:24:56.942"></status>
</kw>
<msg timestamp="20201010 12:24:56.944" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.921" endtime="20201010 12:24:56.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.946" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.945" endtime="20201010 12:24:56.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.949" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:56.947" endtime="20201010 12:24:56.950"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.919" endtime="20201010 12:24:56.950"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:56.916" endtime="20201010 12:24:56.951"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.915" endtime="20201010 12:24:56.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:56.956" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:56.955" endtime="20201010 12:24:56.956"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.952" endtime="20201010 12:24:56.956"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.914" endtime="20201010 12:24:56.956"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.913" endtime="20201010 12:24:56.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.957" endtime="20201010 12:24:56.959"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.912" endtime="20201010 12:24:56.960"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.910" endtime="20201010 12:24:56.960"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.886" endtime="20201010 12:24:56.960"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:56.970" endtime="20201010 12:25:02.990"></status>
</kw>
<msg timestamp="20201010 12:25:02.991" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:56.968" endtime="20201010 12:25:02.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:02.997" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:02.993" endtime="20201010 12:25:02.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:02.999" endtime="20201010 12:25:03.005"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.966" endtime="20201010 12:25:03.006"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.963" endtime="20201010 12:25:03.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:03.012" level="INFO">${RESULT} = {'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:03.009" endtime="20201010 12:25:03.013"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:03.075" level="INFO">${interval} = []</msg>
<status status="PASS" starttime="20201010 12:25:03.014" endtime="20201010 12:25:03.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.083" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:03.081" endtime="20201010 12:25:03.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.087" level="INFO">VALUE: []</msg>
<status status="PASS" starttime="20201010 12:25:03.085" endtime="20201010 12:25:03.088"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.076" endtime="20201010 12:25:03.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.097" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:03.095" endtime="20201010 12:25:03.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.101" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:03.099" endtime="20201010 12:25:03.102"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.090" endtime="20201010 12:25:03.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.115" endtime="20201010 12:25:03.417"></status>
</kw>
<msg timestamp="20201010 12:25:03.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.074367819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.174340014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:03.113" endtime="20201010 12:25:03.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.074367819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.174340014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:03.421" endtime="20201010 12:25:03.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.429" endtime="20201010 12:25:03.431"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.108" endtime="20201010 12:25:03.431"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.105" endtime="20201010 12:25:03.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:03.436" level="INFO">${FILTERED} = [{'diff': 0.0999721950000001}, {'diff': 0.09997190200000006}, {'diff': 0.09997177800000001}, {'diff': 0.0999718329999999}, {'diff': 0.09997193000000015}, {'diff': 0.09997177800000001}, {'diff': 0.0999...</msg>
<status status="PASS" starttime="20201010 12:25:03.433" endtime="20201010 12:25:03.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:03.441" level="INFO">${RESULT} = {'diff': [0.0999721950000001, 0.09997190200000006, 0.09997177800000001, 0.0999718329999999, 0.09997193000000015, 0.09997177800000001, 0.0999718329999999, 0.099971861, 0.09997182000000016, 0.0999718060...</msg>
<status status="PASS" starttime="20201010 12:25:03.437" endtime="20201010 12:25:03.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.445" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:03.444" endtime="20201010 12:25:03.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.447" level="INFO">VALUE: [0.0999721950000001, 0.09997190200000006, 0.09997177800000001, 0.0999718329999999, 0.09997193000000015, 0.09997177800000001, 0.0999718329999999, 0.099971861, 0.09997182000000016, 0.09997180600000011, 0.09997190200000006, 0.09997181999999993, 0.09997181999999993, 0.09997176400000019, 0.09997187500000004, 0.09997181899999985, 0.09997186100000022, 0.09997177800000001, 0.09997180500000002, 0.09997186100000022, 0.09997191699999997, 0.09997174999999991, 0.09997184699999995, 0.09997187500000004, 0.09997181999999993, 0.0999717910000002, 0.09997187500000004, 0.09997184699999995, 0.09997176400000019, 0.0999718749999996, 0.09997183299999968, 0.09997183299999968, 0.09997174999999991, 0.09997186100000022, 0.09997188899999987, 0.09997183300000057, 0.09997186100000022, 0.09997177800000046, 0.09997184700000084, 0.09997180500000002, 0.09997188899999987, 0.09997177700000037, 0.09997187500000049, 0.0999718190000003, 0.09997180500000002, 0.09997183299999968, 0.0999718189999994, 0.0999718749999996, 0.09997176400000019, 0.09997194500000006]</msg>
<status status="PASS" starttime="20201010 12:25:03.446" endtime="20201010 12:25:03.448"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.442" endtime="20201010 12:25:03.448"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.961" endtime="20201010 12:25:03.449"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:24:56.883" endtime="20201010 12:25:03.450" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="5 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:03.459" endtime="20201010 12:25:03.479"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.457" endtime="20201010 12:25:03.479"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.493" endtime="20201010 12:25:03.509"></status>
</kw>
<msg timestamp="20201010 12:25:03.510" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:03.491" endtime="20201010 12:25:03.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.513" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:03.511" endtime="20201010 12:25:03.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:03.516" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:03.514" endtime="20201010 12:25:03.516"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:03.488" endtime="20201010 12:25:03.517"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:03.486" endtime="20201010 12:25:03.518"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.485" endtime="20201010 12:25:03.518"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:03.522" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:03.521" endtime="20201010 12:25:03.522"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.519" endtime="20201010 12:25:03.523"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.484" endtime="20201010 12:25:03.523"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.483" endtime="20201010 12:25:03.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.524" endtime="20201010 12:25:03.525"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.482" endtime="20201010 12:25:03.526"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.480" endtime="20201010 12:25:03.526"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.456" endtime="20201010 12:25:03.526"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:03.537" endtime="20201010 12:25:09.572"></status>
</kw>
<msg timestamp="20201010 12:25:09.574" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '10741'}, {'interval': '84225'}, {'interval': '46186'}, {'interval': '37795'}, {'interval': '34698'}...</msg>
<status status="PASS" starttime="20201010 12:25:03.535" endtime="20201010 12:25:09.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.579" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '10741'}, {'interval': '84225'}, {'interval': '46186'}, {'interval': '37795'}, {'interval': '34698'}...</msg>
<status status="PASS" starttime="20201010 12:25:09.576" endtime="20201010 12:25:09.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.582" endtime="20201010 12:25:09.585"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.533" endtime="20201010 12:25:09.586"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.529" endtime="20201010 12:25:09.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:09.593" level="INFO">${RESULT} = {'focus': [100000], 'interval': [10741, 84225, 46186, 37795, 34698]}</msg>
<status status="PASS" starttime="20201010 12:25:09.589" endtime="20201010 12:25:09.593"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:09.604" level="INFO">${interval} = [10741, 84225, 46186, 37795, 34698]</msg>
<status status="PASS" starttime="20201010 12:25:09.595" endtime="20201010 12:25:09.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.612" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:09.610" endtime="20201010 12:25:09.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.617" level="INFO">VALUE: [10741, 84225, 46186, 37795, 34698]</msg>
<status status="PASS" starttime="20201010 12:25:09.615" endtime="20201010 12:25:09.617"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.606" endtime="20201010 12:25:09.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.626" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:09.624" endtime="20201010 12:25:09.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.631" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:09.629" endtime="20201010 12:25:09.631"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.620" endtime="20201010 12:25:09.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.648" endtime="20201010 12:25:09.948"></status>
</kw>
<msg timestamp="20201010 12:25:09.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.071644708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.171647486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:09.644" endtime="20201010 12:25:09.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.071644708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.171647486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:09.952" endtime="20201010 12:25:09.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:09.960" endtime="20201010 12:25:09.962"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.638" endtime="20201010 12:25:09.963"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.634" endtime="20201010 12:25:09.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:09.967" level="INFO">${FILTERED} = [{'diff': 0.1000027779999999}, {'diff': 0.09997183300000012}, {'diff': 0.09997177800000001}, {'diff': 0.09997180600000011}, {'diff': 0.09997186200000008}, {'diff': 0.10015888900000003}, {'diff': 0.099...</msg>
<status status="PASS" starttime="20201010 12:25:09.964" endtime="20201010 12:25:09.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:09.972" level="INFO">${RESULT} = {'diff': [0.1000027779999999, 0.09997183300000012, 0.09997177800000001, 0.09997180600000011, 0.09997186200000008, 0.10015888900000003, 0.09975433300000014, 0.10000234699999999, 0.09997180500000002, 0....</msg>
<status status="PASS" starttime="20201010 12:25:09.968" endtime="20201010 12:25:09.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.976" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:09.975" endtime="20201010 12:25:09.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:09.979" level="INFO">VALUE: [0.1000027779999999, 0.09997183300000012, 0.09997177800000001, 0.09997180600000011, 0.09997186200000008, 0.10015888900000003, 0.09975433300000014, 0.10000234699999999, 0.09997180500000002, 0.09997179199999984, 0.09997188900000031, 0.0999718340000002, 0.09997187500000004, 0.09997179199999984, 0.09997187500000004, 0.09997186100000022, 0.09997181899999985, 0.0999717910000002, 0.0999719579999998, 0.0999717910000002, 0.09997188899999987, 0.09997179099999975, 0.09997190300000014, 0.09997179200000028, 0.09997184699999995, 0.09997184699999995, 0.09997194399999998, 0.09997187500000004, 0.09997179200000028, 0.09997183299999968, 0.09997180500000002, 0.0999718190000003, 0.09997190300000014, 0.09997187500000049, 0.09997183300000057, 0.09997184699999995, 0.09997184800000003, 0.09997187500000049, 0.09997176400000019, 0.09997188799999979, 0.09997180600000011, 0.0999718749999996, 0.0999718190000003, 0.0999718190000003, 0.09997190299999925, 0.0999718190000003, 0.09997180500000002, 0.09997186100000022, 0.09997194500000006, 0.09997173599999964]</msg>
<status status="PASS" starttime="20201010 12:25:09.977" endtime="20201010 12:25:09.979"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.973" endtime="20201010 12:25:09.980"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:03.527" endtime="20201010 12:25:09.980"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:03.453" endtime="20201010 12:25:09.981" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="10 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:09.990" endtime="20201010 12:25:10.010"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.989" endtime="20201010 12:25:10.011"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:10.024" endtime="20201010 12:25:10.042"></status>
</kw>
<msg timestamp="20201010 12:25:10.042" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:10.022" endtime="20201010 12:25:10.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:10.045" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:10.043" endtime="20201010 12:25:10.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:10.048" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:10.046" endtime="20201010 12:25:10.049"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:10.020" endtime="20201010 12:25:10.049"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:10.017" endtime="20201010 12:25:10.050"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.016" endtime="20201010 12:25:10.050"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:10.054" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:10.053" endtime="20201010 12:25:10.055"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.051" endtime="20201010 12:25:10.055"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.015" endtime="20201010 12:25:10.055"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.014" endtime="20201010 12:25:10.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:10.056" endtime="20201010 12:25:10.057"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.013" endtime="20201010 12:25:10.058"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.011" endtime="20201010 12:25:10.059"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:09.987" endtime="20201010 12:25:10.059"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:10.068" endtime="20201010 12:25:16.114"></status>
</kw>
<msg timestamp="20201010 12:25:16.115" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '37694'}, {'interval': '23825'}, {'interval': '30414'}, {'interval': '39030'}, {'interval': '45533'...</msg>
<status status="PASS" starttime="20201010 12:25:10.067" endtime="20201010 12:25:16.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.121" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '37694'}, {'interval': '23825'}, {'interval': '30414'}, {'interval': '39030'}, {'interval': '45533'...</msg>
<status status="PASS" starttime="20201010 12:25:16.117" endtime="20201010 12:25:16.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.123" endtime="20201010 12:25:16.127"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.064" endtime="20201010 12:25:16.128"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.062" endtime="20201010 12:25:16.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:16.135" level="INFO">${RESULT} = {'focus': [100000], 'interval': [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]}</msg>
<status status="PASS" starttime="20201010 12:25:16.130" endtime="20201010 12:25:16.135"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:16.141" level="INFO">${interval} = [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]</msg>
<status status="PASS" starttime="20201010 12:25:16.137" endtime="20201010 12:25:16.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.145" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:16.144" endtime="20201010 12:25:16.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.147" level="INFO">VALUE: [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]</msg>
<status status="PASS" starttime="20201010 12:25:16.146" endtime="20201010 12:25:16.147"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.142" endtime="20201010 12:25:16.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.151" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:16.150" endtime="20201010 12:25:16.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.153" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:16.153" endtime="20201010 12:25:16.154"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.148" endtime="20201010 12:25:16.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.164" endtime="20201010 12:25:16.459"></status>
</kw>
<msg timestamp="20201010 12:25:16.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.072483958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.172407958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:16.160" endtime="20201010 12:25:16.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.072483958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.172407958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:16.463" endtime="20201010 12:25:16.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.472" endtime="20201010 12:25:16.473"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.157" endtime="20201010 12:25:16.474"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.155" endtime="20201010 12:25:16.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:16.478" level="INFO">${FILTERED} = [{'diff': 0.0999239999999999}, {'diff': 0.09997180600000011}, {'diff': 0.099971861}, {'diff': 0.09997176399999996}, {'diff': 0.09997188800000001}, {'diff': 0.09997182000000016}, {'diff': 0.09997188900...</msg>
<status status="PASS" starttime="20201010 12:25:16.475" endtime="20201010 12:25:16.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:16.482" level="INFO">${RESULT} = {'diff': [0.0999239999999999, 0.09997180600000011, 0.099971861, 0.09997176399999996, 0.09997188800000001, 0.09997182000000016, 0.09997188900000009, 0.0999718329999999, 0.09997177800000001, 0.099971819...</msg>
<status status="PASS" starttime="20201010 12:25:16.479" endtime="20201010 12:25:16.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.487" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:16.485" endtime="20201010 12:25:16.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.489" level="INFO">VALUE: [0.0999239999999999, 0.09997180600000011, 0.099971861, 0.09997176399999996, 0.09997188800000001, 0.09997182000000016, 0.09997188900000009, 0.0999718329999999, 0.09997177800000001, 0.09997181999999971, 0.09998836099999986, 0.09995537499999996, 0.09997177800000001, 0.09997184699999995, 0.0999719859999999, 0.10007194400000019, 0.09987175000000015, 0.09997186100000022, 0.09997181899999985, 0.09997181899999985, 0.09997186100000022, 0.09997181899999985, 0.09997181899999985, 0.0999718190000003, 0.09997180600000011, 0.09993852800000003, 0.10003573599999971, 0.09994144500000024, 0.09993926400000008, 0.10003487500000041, 0.09994136099999995, 0.0999395139999999, 0.10003459699999961, 0.09994136100000084, 0.09993919400000006, 0.1000349310000006, 0.09994133400000038, 0.09998951399999978, 0.099954125, 0.09997194500000006, 0.09999026399999966, 0.09995336099999985, 0.0999718749999996, 0.1000131660000001, 0.09993061100000045, 0.09997177800000046, 0.10004150000000056, 0.09990213900000011, 0.09997186199999941, 0.10004220899999972]</msg>
<status status="PASS" starttime="20201010 12:25:16.488" endtime="20201010 12:25:16.490"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.483" endtime="20201010 12:25:16.490"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:10.060" endtime="20201010 12:25:16.490"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:09.984" endtime="20201010 12:25:16.492" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="15 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:16.501" endtime="20201010 12:25:16.520"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.499" endtime="20201010 12:25:16.521"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.535" endtime="20201010 12:25:16.552"></status>
</kw>
<msg timestamp="20201010 12:25:16.552" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:16.533" endtime="20201010 12:25:16.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.555" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:16.553" endtime="20201010 12:25:16.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:16.559" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:16.556" endtime="20201010 12:25:16.559"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:16.531" endtime="20201010 12:25:16.560"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:16.528" endtime="20201010 12:25:16.560"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.527" endtime="20201010 12:25:16.560"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:16.564" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:16.563" endtime="20201010 12:25:16.565"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.561" endtime="20201010 12:25:16.565"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.526" endtime="20201010 12:25:16.565"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.525" endtime="20201010 12:25:16.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.566" endtime="20201010 12:25:16.567"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.523" endtime="20201010 12:25:16.568"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.521" endtime="20201010 12:25:16.568"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.497" endtime="20201010 12:25:16.569"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:16.578" endtime="20201010 12:25:22.635"></status>
</kw>
<msg timestamp="20201010 12:25:22.636" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '52653'}, {'interval': '31223'}, {'interval': '17873'}, {'interval': '99702'}, {'interval': '86231'...</msg>
<status status="PASS" starttime="20201010 12:25:16.576" endtime="20201010 12:25:22.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.642" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '52653'}, {'interval': '31223'}, {'interval': '17873'}, {'interval': '99702'}, {'interval': '86231'...</msg>
<status status="PASS" starttime="20201010 12:25:22.638" endtime="20201010 12:25:22.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.644" endtime="20201010 12:25:22.648"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.574" endtime="20201010 12:25:22.649"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.572" endtime="20201010 12:25:22.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:22.656" level="INFO">${RESULT} = {'focus': [100000], 'interval': [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]}</msg>
<status status="PASS" starttime="20201010 12:25:22.652" endtime="20201010 12:25:22.657"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:22.668" level="INFO">${interval} = [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]</msg>
<status status="PASS" starttime="20201010 12:25:22.659" endtime="20201010 12:25:22.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.678" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:22.673" endtime="20201010 12:25:22.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.683" level="INFO">VALUE: [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]</msg>
<status status="PASS" starttime="20201010 12:25:22.681" endtime="20201010 12:25:22.684"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.669" endtime="20201010 12:25:22.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.692" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:22.690" endtime="20201010 12:25:22.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:22.697" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:22.695" endtime="20201010 12:25:22.697"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.686" endtime="20201010 12:25:22.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:22.707" endtime="20201010 12:25:23.003"></status>
</kw>
<msg timestamp="20201010 12:25:23.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.073767847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.173782125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:22.705" endtime="20201010 12:25:23.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:23.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.073767847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.173782125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:23.007" endtime="20201010 12:25:23.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:23.015" endtime="20201010 12:25:23.017"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.702" endtime="20201010 12:25:23.017"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:22.700" endtime="20201010 12:25:23.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:23.022" level="INFO">${FILTERED} = [{'diff': 0.10001427799999996}, {'diff': 0.09994136099999995}, {'diff': 0.10001280599999984}, {'diff': 0.09993092999999997}, {'diff': 0.0999718329999999}, {'diff': 0.099971861}, {'diff': 0.09993849999...</msg>
<status status="PASS" starttime="20201010 12:25:23.019" endtime="20201010 12:25:23.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:23.026" level="INFO">${RESULT} = {'diff': [0.10001427799999996, 0.09994136099999995, 0.10001280599999984, 0.09993092999999997, 0.0999718329999999, 0.099971861, 0.09993849999999993, 0.10000522300000014, 0.099971861, 0.1000756389999999...</msg>
<status status="PASS" starttime="20201010 12:25:23.023" endtime="20201010 12:25:23.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:23.031" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:23.030" endtime="20201010 12:25:23.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:23.033" level="INFO">VALUE: [0.10001427799999996, 0.09994136099999995, 0.10001280599999984, 0.09993092999999997, 0.0999718329999999, 0.099971861, 0.09993849999999993, 0.10000522300000014, 0.099971861, 0.10007563899999994, 0.09986802799999994, 0.09997181999999993, 0.09997187500000004, 0.09997174999999991, 0.10010908299999999, 0.09983465299999983, 0.10004390299999999, 0.09989976399999989, 0.09997181999999993, 0.0999718340000002, 0.09997180600000011, 0.09998356899999994, 0.0999289029999999, 0.09996975000000008, 0.10000522300000014, 0.09997186099999977, 0.09997177800000001, 0.09994066699999982, 0.09997026399999998, 0.10000468000000007, 0.0999718189999994, 0.09997183299999968, 0.09997183299999968, 0.09997173599999964, 0.09997194399999998, 0.09997173599999964, 0.1001023889999999, 0.09984130600000007, 0.09997179099999975, 0.09997190300000014, 0.09997182000000038, 0.09997176400000019, 0.09997183299999968, 0.09996169399999921, 0.10001248599999979, 0.09994136099999995, 0.09997184699999995, 0.09997187500000049, 0.09997180500000002, 0.09997186100000022]</msg>
<status status="PASS" starttime="20201010 12:25:23.032" endtime="20201010 12:25:23.034"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.027" endtime="20201010 12:25:23.034"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:16.570" endtime="20201010 12:25:23.035"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:16.494" endtime="20201010 12:25:23.036" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="20 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:23.045" endtime="20201010 12:25:23.065"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.043" endtime="20201010 12:25:23.065"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:23.079" endtime="20201010 12:25:23.098"></status>
</kw>
<msg timestamp="20201010 12:25:23.099" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:23.078" endtime="20201010 12:25:23.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:23.102" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:23.100" endtime="20201010 12:25:23.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:23.105" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:23.103" endtime="20201010 12:25:23.105"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:23.075" endtime="20201010 12:25:23.106"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:23.073" endtime="20201010 12:25:23.107"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.071" endtime="20201010 12:25:23.107"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:23.111" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:23.110" endtime="20201010 12:25:23.111"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.108" endtime="20201010 12:25:23.112"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.071" endtime="20201010 12:25:23.112"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.070" endtime="20201010 12:25:23.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:23.113" endtime="20201010 12:25:23.114"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.068" endtime="20201010 12:25:23.115"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.066" endtime="20201010 12:25:23.115"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.042" endtime="20201010 12:25:23.115"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:23.126" endtime="20201010 12:25:29.196"></status>
</kw>
<msg timestamp="20201010 12:25:29.197" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '27660'}, {'interval': '24774'}, {'interval': '50283'}, {'interval': '17455'}, {'interval': '56207'...</msg>
<status status="PASS" starttime="20201010 12:25:23.123" endtime="20201010 12:25:29.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.203" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '27660'}, {'interval': '24774'}, {'interval': '50283'}, {'interval': '17455'}, {'interval': '56207'...</msg>
<status status="PASS" starttime="20201010 12:25:29.199" endtime="20201010 12:25:29.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.205" endtime="20201010 12:25:29.209"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.121" endtime="20201010 12:25:29.210"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.118" endtime="20201010 12:25:29.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:29.215" level="INFO">${RESULT} = {'focus': [100000], 'interval': [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]}</msg>
<status status="PASS" starttime="20201010 12:25:29.213" endtime="20201010 12:25:29.215"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:29.220" level="INFO">${interval} = [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]</msg>
<status status="PASS" starttime="20201010 12:25:29.216" endtime="20201010 12:25:29.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.224" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:29.223" endtime="20201010 12:25:29.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.226" level="INFO">VALUE: [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]</msg>
<status status="PASS" starttime="20201010 12:25:29.225" endtime="20201010 12:25:29.226"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.221" endtime="20201010 12:25:29.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.231" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:29.230" endtime="20201010 12:25:29.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.233" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:29.232" endtime="20201010 12:25:29.233"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.228" endtime="20201010 12:25:29.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.241" endtime="20201010 12:25:29.539"></status>
</kw>
<msg timestamp="20201010 12:25:29.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.076338542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.176310806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:29.239" endtime="20201010 12:25:29.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.076338542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.176310806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:29.544" endtime="20201010 12:25:29.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.552" endtime="20201010 12:25:29.554"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.236" endtime="20201010 12:25:29.554"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.234" endtime="20201010 12:25:29.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:29.558" level="INFO">${FILTERED} = [{'diff': 0.09997226400000003}, {'diff': 0.09997184699999995}, {'diff': 0.09997188800000001}, {'diff': 0.09997179200000006}, {'diff': 0.09997186200000008}, {'diff': 0.09997181999999993}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201010 12:25:29.555" endtime="20201010 12:25:29.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:29.563" level="INFO">${RESULT} = {'diff': [0.09997226400000003, 0.09997184699999995, 0.09997188800000001, 0.09997179200000006, 0.09997186200000008, 0.09997181999999993, 0.09993869500000008, 0.1000049999999999, 0.09997182000000016, 0....</msg>
<status status="PASS" starttime="20201010 12:25:29.559" endtime="20201010 12:25:29.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.568" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:29.567" endtime="20201010 12:25:29.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.570" level="INFO">VALUE: [0.09997226400000003, 0.09997184699999995, 0.09997188800000001, 0.09997179200000006, 0.09997186200000008, 0.09997181999999993, 0.09993869500000008, 0.1000049999999999, 0.09997182000000016, 0.09997186100000022, 0.09997188800000023, 0.09997184699999995, 0.09997176400000019, 0.0999719579999998, 0.09997181899999985, 0.09998718099999993, 0.09998698599999978, 0.09994138799999996, 0.09997177800000001, 0.09997183300000012, 0.09997180500000002, 0.10007529100000001, 0.09986838900000006, 0.09997190200000006, 0.09997180599999966, 0.09993954199999999, 0.1000041519999999, 0.09999344399999988, 0.1000043190000004, 0.09994825000000018, 0.09994122300000008, 0.09994066699999937, 0.10000308299999983, 0.09997197200000052, 0.09997184700000084, 0.0999718749999996, 0.09997179099999975, 0.09999901400000066, 0.09994466599999985, 0.09997176400000019, 0.09994101300000047, 0.10000266700000005, 0.09997191699999952, 0.09997183299999968, 0.09997174999999991, 0.09997187500000049, 0.09997182000000038, 0.0999718749999996, 0.0999718749999996, 0.09997190200000006]</msg>
<status status="PASS" starttime="20201010 12:25:29.569" endtime="20201010 12:25:29.571"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.564" endtime="20201010 12:25:29.571"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:23.116" endtime="20201010 12:25:29.572"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:23.039" endtime="20201010 12:25:29.572" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:29.580" endtime="20201010 12:25:29.600"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.579" endtime="20201010 12:25:29.600"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.614" endtime="20201010 12:25:29.635"></status>
</kw>
<msg timestamp="20201010 12:25:29.636" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:29.612" endtime="20201010 12:25:29.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.638" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:29.637" endtime="20201010 12:25:29.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:29.642" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:29.640" endtime="20201010 12:25:29.642"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:29.610" endtime="20201010 12:25:29.643"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:29.607" endtime="20201010 12:25:29.643"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.606" endtime="20201010 12:25:29.644"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:29.648" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:29.647" endtime="20201010 12:25:29.648"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.645" endtime="20201010 12:25:29.648"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.605" endtime="20201010 12:25:29.649"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.604" endtime="20201010 12:25:29.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.649" endtime="20201010 12:25:29.651"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.603" endtime="20201010 12:25:29.652"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.601" endtime="20201010 12:25:29.652"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.577" endtime="20201010 12:25:29.652"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:29.662" endtime="20201010 12:25:35.743"></status>
</kw>
<msg timestamp="20201010 12:25:35.744" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '16291'}, {'interval': '74117'}, {'interval': '74576'}, {'interval': '31746'}, {'interval': '33340'...</msg>
<status status="PASS" starttime="20201010 12:25:29.660" endtime="20201010 12:25:35.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.750" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '16291'}, {'interval': '74117'}, {'interval': '74576'}, {'interval': '31746'}, {'interval': '33340'...</msg>
<status status="PASS" starttime="20201010 12:25:35.746" endtime="20201010 12:25:35.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.753" endtime="20201010 12:25:35.756"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.657" endtime="20201010 12:25:35.757"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.655" endtime="20201010 12:25:35.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:35.765" level="INFO">${RESULT} = {'focus': [100000], 'interval': [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113,...</msg>
<status status="PASS" starttime="20201010 12:25:35.760" endtime="20201010 12:25:35.766"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:35.776" level="INFO">${interval} = [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248]</msg>
<status status="PASS" starttime="20201010 12:25:35.768" endtime="20201010 12:25:35.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.780" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:35.779" endtime="20201010 12:25:35.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.782" level="INFO">VALUE: [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248]</msg>
<status status="PASS" starttime="20201010 12:25:35.781" endtime="20201010 12:25:35.783"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.777" endtime="20201010 12:25:35.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.787" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:35.786" endtime="20201010 12:25:35.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:35.789" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:35.788" endtime="20201010 12:25:35.789"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.784" endtime="20201010 12:25:35.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:35.798" endtime="20201010 12:25:36.095"></status>
</kw>
<msg timestamp="20201010 12:25:36.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.077891264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.177833125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:35.797" endtime="20201010 12:25:36.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:36.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.077891264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.177833125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:36.100" endtime="20201010 12:25:36.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:36.108" endtime="20201010 12:25:36.110"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.793" endtime="20201010 12:25:36.110"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:35.790" endtime="20201010 12:25:36.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:36.114" level="INFO">${FILTERED} = [{'diff': 0.09994186100000002}, {'diff': 0.0999718329999999}, {'diff': 0.10002005500000011}, {'diff': 0.09995415299999988}, {'diff': 0.09994129100000015}, {'diff': 0.0999718329999999}, {'diff': 0.0999...</msg>
<status status="PASS" starttime="20201010 12:25:36.111" endtime="20201010 12:25:36.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:36.118" level="INFO">${RESULT} = {'diff': [0.09994186100000002, 0.0999718329999999, 0.10002005500000011, 0.09995415299999988, 0.09994129100000015, 0.0999718329999999, 0.099971861, 0.09997184699999995, 0.09997176399999996, 0.099971931...</msg>
<status status="PASS" starttime="20201010 12:25:36.115" endtime="20201010 12:25:36.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:36.123" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:36.122" endtime="20201010 12:25:36.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:36.125" level="INFO">VALUE: [0.09994186100000002, 0.0999718329999999, 0.10002005500000011, 0.09995415299999988, 0.09994129100000015, 0.0999718329999999, 0.099971861, 0.09997184699999995, 0.09997176399999996, 0.09997193100000024, 0.09997177699999993, 0.09994015299999992, 0.10000344500000002, 0.09997180500000002, 0.09997194399999998, 0.09997169400000017, 0.09997188899999987, 0.09997183300000012, 0.09993884699999978, 0.09997308400000016, 0.10003223700000019, 0.10002115300000014, 0.10003152700000006, 0.09986468099999968, 0.09994137499999978, 0.09997172200000026, 0.09997197199999963, 0.09997173600000009, 0.09997191699999997, 0.09997172299999946, 0.09997191700000041, 0.09997183399999976, 0.09997187500000049, 0.09997186100000022, 0.0999718189999994, 0.10008017999999996, 0.0998940140000002, 0.0999413889999996, 0.09997180500000002, 0.09997184800000003, 0.09997188899999987, 0.09993941699999986, 0.10014334700000038, 0.09986326399999967, 0.09993954200000044, 0.0999735700000004, 0.09997187500000049, 0.09994068000000045, 0.1000030280000006, 0.09997184699999995]</msg>
<status status="PASS" starttime="20201010 12:25:36.124" endtime="20201010 12:25:36.126"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.119" endtime="20201010 12:25:36.126"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:29.653" endtime="20201010 12:25:36.127"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:29.575" endtime="20201010 12:25:36.128" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="30 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:36.136" endtime="20201010 12:25:36.156"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.134" endtime="20201010 12:25:36.157"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:36.170" endtime="20201010 12:25:36.186"></status>
</kw>
<msg timestamp="20201010 12:25:36.187" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:36.169" endtime="20201010 12:25:36.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:36.190" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:36.188" endtime="20201010 12:25:36.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:36.193" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:36.191" endtime="20201010 12:25:36.193"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:36.166" endtime="20201010 12:25:36.194"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:36.163" endtime="20201010 12:25:36.194"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.162" endtime="20201010 12:25:36.195"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:36.199" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:36.198" endtime="20201010 12:25:36.199"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.196" endtime="20201010 12:25:36.200"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.161" endtime="20201010 12:25:36.200"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.161" endtime="20201010 12:25:36.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:36.201" endtime="20201010 12:25:36.203"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.159" endtime="20201010 12:25:36.203"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.158" endtime="20201010 12:25:36.204"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.133" endtime="20201010 12:25:36.204"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>30</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:36.214" endtime="20201010 12:25:42.296"></status>
</kw>
<msg timestamp="20201010 12:25:42.296" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 30 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '74757'}, {'interval': '70347'}, {'interval': '33034'}, {'interval': '80423'}, {'interval': '79926'...</msg>
<status status="PASS" starttime="20201010 12:25:36.212" endtime="20201010 12:25:42.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.299" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 30 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '74757'}, {'interval': '70347'}, {'interval': '33034'}, {'interval': '80423'}, {'interval': '79926'...</msg>
<status status="PASS" starttime="20201010 12:25:42.297" endtime="20201010 12:25:42.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.301" endtime="20201010 12:25:42.302"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.209" endtime="20201010 12:25:42.303"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.207" endtime="20201010 12:25:42.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:42.307" level="INFO">${RESULT} = {'focus': [100000], 'interval': [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320,...</msg>
<status status="PASS" starttime="20201010 12:25:42.304" endtime="20201010 12:25:42.307"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:42.312" level="INFO">${interval} = [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 58146, 28867, 669...</msg>
<status status="PASS" starttime="20201010 12:25:42.308" endtime="20201010 12:25:42.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.316" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:42.314" endtime="20201010 12:25:42.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.318" level="INFO">VALUE: [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 58146, 28867, 66958, 17521]</msg>
<status status="PASS" starttime="20201010 12:25:42.317" endtime="20201010 12:25:42.318"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.313" endtime="20201010 12:25:42.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.322" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:42.321" endtime="20201010 12:25:42.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.324" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:42.323" endtime="20201010 12:25:42.324"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.319" endtime="20201010 12:25:42.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.332" endtime="20201010 12:25:42.630"></status>
</kw>
<msg timestamp="20201010 12:25:42.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.073669417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.173401903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:42.331" endtime="20201010 12:25:42.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.073669417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.173401903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:42.634" endtime="20201010 12:25:42.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.642" endtime="20201010 12:25:42.644"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.328" endtime="20201010 12:25:42.645"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.326" endtime="20201010 12:25:42.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:42.649" level="INFO">${FILTERED} = [{'diff': 0.09973248599999995}, {'diff': 0.09997188900000009}, {'diff': 0.09997184699999995}, {'diff': 0.09997170799999999}, {'diff': 0.09997197200000008}, {'diff': 0.09997177800000001}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201010 12:25:42.646" endtime="20201010 12:25:42.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:42.654" level="INFO">${RESULT} = {'diff': [0.09973248599999995, 0.09997188900000009, 0.09997184699999995, 0.09997170799999999, 0.09997197200000008, 0.09997177800000001, 0.09997180600000011, 0.09997186200000008, 0.09997175000000014, 0...</msg>
<status status="PASS" starttime="20201010 12:25:42.650" endtime="20201010 12:25:42.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.658" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:42.657" endtime="20201010 12:25:42.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.661" level="INFO">VALUE: [0.09973248599999995, 0.09997188900000009, 0.09997184699999995, 0.09997170799999999, 0.09997197200000008, 0.09997177800000001, 0.09997180600000011, 0.09997186200000008, 0.09997175000000014, 0.1000270969999999, 0.099916597, 0.09997190200000006, 0.09997186100000022, 0.09997176399999974, 0.09997181999999993, 0.0999718749999996, 0.09997176399999974, 0.10006015300000026, 0.09988354199999971, 0.09997191600000033, 0.09997183299999968, 0.09997174999999991, 0.09997190200000006, 0.09997184699999995, 0.09997179199999984, 0.10001805600000013, 0.09992413900000008, 0.09997326399999995, 0.0999718190000003, 0.09997186099999977, 0.09997188899999987, 0.09997184699999995, 0.09997177799999957, 0.09997184699999995, 0.0999718749999996, 0.09997183399999976, 0.09997183399999976, 0.09997182000000038, 0.09997188899999987, 0.09997170799999999, 0.09997195799999936, 0.09997176400000019, 0.1000319860000003, 0.09991176399999979, 0.09997177800000046, 0.09997183400000065, 0.09997180600000011, 0.09997193099999979, 0.09997177800000046, 0.09997194399999998]</msg>
<status status="PASS" starttime="20201010 12:25:42.659" endtime="20201010 12:25:42.661"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.655" endtime="20201010 12:25:42.662"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:36.205" endtime="20201010 12:25:42.662"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:36.130" endtime="20201010 12:25:42.663" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="35 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:42.672" endtime="20201010 12:25:42.692"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.671" endtime="20201010 12:25:42.692"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.706" endtime="20201010 12:25:42.722"></status>
</kw>
<msg timestamp="20201010 12:25:42.723" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:42.704" endtime="20201010 12:25:42.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.726" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:42.724" endtime="20201010 12:25:42.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:42.729" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:42.727" endtime="20201010 12:25:42.730"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:42.701" endtime="20201010 12:25:42.731"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:42.699" endtime="20201010 12:25:42.731"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.698" endtime="20201010 12:25:42.732"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:42.736" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:42.735" endtime="20201010 12:25:42.736"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.733" endtime="20201010 12:25:42.737"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.697" endtime="20201010 12:25:42.737"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.696" endtime="20201010 12:25:42.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.738" endtime="20201010 12:25:42.739"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.695" endtime="20201010 12:25:42.740"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.693" endtime="20201010 12:25:42.740"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.669" endtime="20201010 12:25:42.741"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>35</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:42.750" endtime="20201010 12:25:48.854"></status>
</kw>
<msg timestamp="20201010 12:25:48.854" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 35 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '54295'}, {'interval': '37199'}, {'interval': '39990'}, {'interval': '20568'}, {'interval': '10171'...</msg>
<status status="PASS" starttime="20201010 12:25:42.749" endtime="20201010 12:25:48.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.857" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 35 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '54295'}, {'interval': '37199'}, {'interval': '39990'}, {'interval': '20568'}, {'interval': '10171'...</msg>
<status status="PASS" starttime="20201010 12:25:48.855" endtime="20201010 12:25:48.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.859" endtime="20201010 12:25:48.860"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.746" endtime="20201010 12:25:48.861"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.743" endtime="20201010 12:25:48.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:48.865" level="INFO">${RESULT} = {'focus': [100000], 'interval': [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836,...</msg>
<status status="PASS" starttime="20201010 12:25:48.862" endtime="20201010 12:25:48.865"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:48.870" level="INFO">${interval} = [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 43539, 68459, 281...</msg>
<status status="PASS" starttime="20201010 12:25:48.866" endtime="20201010 12:25:48.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.874" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:48.873" endtime="20201010 12:25:48.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.876" level="INFO">VALUE: [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 43539, 68459, 28154, 76170, 13496, 73105, 63810, 92352, 47335]</msg>
<status status="PASS" starttime="20201010 12:25:48.875" endtime="20201010 12:25:48.880"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.871" endtime="20201010 12:25:48.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.884" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:48.883" endtime="20201010 12:25:48.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:48.887" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:48.885" endtime="20201010 12:25:48.887"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.881" endtime="20201010 12:25:48.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:48.894" endtime="20201010 12:25:49.193"></status>
</kw>
<msg timestamp="20201010 12:25:49.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.074799806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.174741611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:48.893" endtime="20201010 12:25:49.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:49.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.074799806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.174741611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:49.197" endtime="20201010 12:25:49.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:49.205" endtime="20201010 12:25:49.207"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.890" endtime="20201010 12:25:49.207"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:48.888" endtime="20201010 12:25:49.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:49.212" level="INFO">${FILTERED} = [{'diff': 0.09994180500000005}, {'diff': 0.0999719160000001}, {'diff': 0.09997179199999984}, {'diff': 0.09997177800000001}, {'diff': 0.09994017999999993}, {'diff': 0.10000365199999983}, {'diff': 0.099...</msg>
<status status="PASS" starttime="20201010 12:25:49.209" endtime="20201010 12:25:49.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:49.216" level="INFO">${RESULT} = {'diff': [0.09994180500000005, 0.0999719160000001, 0.09997179199999984, 0.09997177800000001, 0.09994017999999993, 0.10000365199999983, 0.0999718329999999, 0.10007941699999989, 0.099864167, 0.100113208...</msg>
<status status="PASS" starttime="20201010 12:25:49.213" endtime="20201010 12:25:49.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:49.221" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:49.220" endtime="20201010 12:25:49.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:49.223" level="INFO">VALUE: [0.09994180500000005, 0.0999719160000001, 0.09997179199999984, 0.09997177800000001, 0.09994017999999993, 0.10000365199999983, 0.0999718329999999, 0.10007941699999989, 0.099864167, 0.10011320800000001, 0.09983055500000004, 0.09997179199999984, 0.09997182000000038, 0.09997186099999977, 0.09997179200000028, 0.09997179199999984, 0.09994036100000026, 0.10001215199999969, 0.09996050000000034, 0.09997436099999968, 0.09997184800000003, 0.09996761099999985, 0.09997613900000024, 0.09997180500000002, 0.09997181899999985, 0.09993845800000001, 0.10000520799999979, 0.09997179200000028, 0.09997190300000014, 0.09997188899999943, 0.09997180499999914, 0.10012820800000011, 0.09981470800000025, 0.10001238899999976, 0.09993113899999972, 0.09994058299999953, 0.10000402799999986, 0.09997188899999987, 0.0999405280000003, 0.10000313900000002, 0.09997195800000025, 0.10011579200000043, 0.09982788800000009, 0.09995084699999968, 0.10002332000000003, 0.09994147200000025, 0.09997186100000022, 0.09997177800000046, 0.09997188899999987, 0.10012608400000023]</msg>
<status status="PASS" starttime="20201010 12:25:49.222" endtime="20201010 12:25:49.224"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.217" endtime="20201010 12:25:49.224"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:42.742" endtime="20201010 12:25:49.225"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:42.666" endtime="20201010 12:25:49.226" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="40 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:49.235" endtime="20201010 12:25:49.254"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.233" endtime="20201010 12:25:49.255"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:49.268" endtime="20201010 12:25:49.290"></status>
</kw>
<msg timestamp="20201010 12:25:49.290" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:49.267" endtime="20201010 12:25:49.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:49.293" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:49.291" endtime="20201010 12:25:49.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:49.296" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:49.294" endtime="20201010 12:25:49.296"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:49.264" endtime="20201010 12:25:49.297"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:49.262" endtime="20201010 12:25:49.297"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.260" endtime="20201010 12:25:49.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:49.302" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:49.301" endtime="20201010 12:25:49.302"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.299" endtime="20201010 12:25:49.302"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.259" endtime="20201010 12:25:49.303"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.259" endtime="20201010 12:25:49.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:49.304" endtime="20201010 12:25:49.305"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.257" endtime="20201010 12:25:49.306"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.256" endtime="20201010 12:25:49.306"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.232" endtime="20201010 12:25:49.306"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>40</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:49.317" endtime="20201010 12:25:55.432"></status>
</kw>
<msg timestamp="20201010 12:25:55.434" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 40 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '63910'}, {'interval': '51619'}, {'interval': '66290'}, {'interval': '40380'}, {'interval': '35046'...</msg>
<status status="PASS" starttime="20201010 12:25:49.314" endtime="20201010 12:25:55.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.441" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 40 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '63910'}, {'interval': '51619'}, {'interval': '66290'}, {'interval': '40380'}, {'interval': '35046'...</msg>
<status status="PASS" starttime="20201010 12:25:55.436" endtime="20201010 12:25:55.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.443" endtime="20201010 12:25:55.446"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.311" endtime="20201010 12:25:55.448"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.309" endtime="20201010 12:25:55.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:55.457" level="INFO">${RESULT} = {'focus': [100000], 'interval': [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612,...</msg>
<status status="PASS" starttime="20201010 12:25:55.450" endtime="20201010 12:25:55.457"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:55.466" level="INFO">${interval} = [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 17369, 86767, 529...</msg>
<status status="PASS" starttime="20201010 12:25:55.459" endtime="20201010 12:25:55.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.470" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:55.469" endtime="20201010 12:25:55.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.472" level="INFO">VALUE: [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674]</msg>
<status status="PASS" starttime="20201010 12:25:55.471" endtime="20201010 12:25:55.473"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.467" endtime="20201010 12:25:55.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.477" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:55.476" endtime="20201010 12:25:55.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.479" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:55.478" endtime="20201010 12:25:55.480"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.474" endtime="20201010 12:25:55.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.487" endtime="20201010 12:25:55.785"></status>
</kw>
<msg timestamp="20201010 12:25:55.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.079339875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.179342667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:55.485" endtime="20201010 12:25:55.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.079339875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.179342667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:55.790" endtime="20201010 12:25:55.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.798" endtime="20201010 12:25:55.800"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.483" endtime="20201010 12:25:55.800"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.481" endtime="20201010 12:25:55.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:55.804" level="INFO">${FILTERED} = [{'diff': 0.10000279199999995}, {'diff': 0.09997183399999998}, {'diff': 0.10007948600000005}, {'diff': 0.09983384699999998}, {'diff': 0.10003717999999995}, {'diff': 0.09990481900000003}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:55.801" endtime="20201010 12:25:55.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:55.809" level="INFO">${RESULT} = {'diff': [0.10000279199999995, 0.09997183399999998, 0.10007948600000005, 0.09983384699999998, 0.10003717999999995, 0.09990481900000003, 0.1000040419999999, 0.10005090299999986, 0.09986230500000004, 0....</msg>
<status status="PASS" starttime="20201010 12:25:55.805" endtime="20201010 12:25:55.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.813" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:55.812" endtime="20201010 12:25:55.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.815" level="INFO">VALUE: [0.10000279199999995, 0.09997183399999998, 0.10007948600000005, 0.09983384699999998, 0.10003717999999995, 0.09990481900000003, 0.1000040419999999, 0.10005090299999986, 0.09986230500000004, 0.10005624999999996, 0.10006195799999995, 0.09979727800000004, 0.10000236100000004, 0.10014488900000007, 0.09976820799999997, 0.10000244400000025, 0.09997184699999995, 0.09997172199999982, 0.09997188900000031, 0.09993920899999997, 0.1000045140000001, 0.09997181899999985, 0.10013044399999993, 0.09987623600000006, 0.09990884700000002, 0.09997172200000026, 0.09997190200000006, 0.09997202799999982, 0.09997170799999999, 0.0999718749999996, 0.09997174999999991, 0.10003805499999974, 0.09990554200000012, 0.1001199589999997, 0.09979327799999993, 0.10000238900000014, 0.09997176400000019, 0.10009851399999992, 0.09984513800000006, 0.09997195800000025, 0.09997179099999975, 0.09997191700000041, 0.09997174999999991, 0.09993845800000045, 0.0999746530000003, 0.10000243100000006, 0.09997183299999968, 0.09997186099999933, 0.09997179199999984, 0.09997190200000006]</msg>
<status status="PASS" starttime="20201010 12:25:55.814" endtime="20201010 12:25:55.816"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.809" endtime="20201010 12:25:55.816"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:49.307" endtime="20201010 12:25:55.817"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:49.229" endtime="20201010 12:25:55.818" critical="yes"></status>
</test>
<test id="s1-s2-t10" name="50 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:55.827" endtime="20201010 12:25:55.846"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.825" endtime="20201010 12:25:55.847"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.862" endtime="20201010 12:25:55.881"></status>
</kw>
<msg timestamp="20201010 12:25:55.882" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:55.860" endtime="20201010 12:25:55.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.884" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:55.883" endtime="20201010 12:25:55.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:55.888" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:55.886" endtime="20201010 12:25:55.888"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:55.857" endtime="20201010 12:25:55.889"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:55.854" endtime="20201010 12:25:55.889"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.852" endtime="20201010 12:25:55.889"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:55.893" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:55.893" endtime="20201010 12:25:55.894"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.890" endtime="20201010 12:25:55.894"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.851" endtime="20201010 12:25:55.894"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.851" endtime="20201010 12:25:55.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.895" endtime="20201010 12:25:55.897"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.849" endtime="20201010 12:25:55.897"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.848" endtime="20201010 12:25:55.898"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.824" endtime="20201010 12:25:55.898"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>50</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:55.907" endtime="20201010 12:26:02.029"></status>
</kw>
<msg timestamp="20201010 12:26:02.030" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 50 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '14414'}, {'interval': '55147'}, {'interval': '70168'}, {'interval': '61294'}, {'interval': '86720'...</msg>
<status status="PASS" starttime="20201010 12:25:55.906" endtime="20201010 12:26:02.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.037" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 50 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '14414'}, {'interval': '55147'}, {'interval': '70168'}, {'interval': '61294'}, {'interval': '86720'...</msg>
<status status="PASS" starttime="20201010 12:26:02.033" endtime="20201010 12:26:02.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.040" endtime="20201010 12:26:02.043"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.903" endtime="20201010 12:26:02.044"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.901" endtime="20201010 12:26:02.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:02.056" level="INFO">${RESULT} = {'focus': [100000], 'interval': [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491,...</msg>
<status status="PASS" starttime="20201010 12:26:02.047" endtime="20201010 12:26:02.057"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:02.068" level="INFO">${interval} = [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 10238, 70515, 408...</msg>
<status status="PASS" starttime="20201010 12:26:02.059" endtime="20201010 12:26:02.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.076" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:02.074" endtime="20201010 12:26:02.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.081" level="INFO">VALUE: [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 10238, 70515, 40828, 48500, 94435, 94098, 48103, 90303, 97856, 52511, 42830, 96777, 16054, 65477, 49396, 79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976]</msg>
<status status="PASS" starttime="20201010 12:26:02.079" endtime="20201010 12:26:02.083"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.070" endtime="20201010 12:26:02.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.091" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:02.089" endtime="20201010 12:26:02.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.096" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:02.094" endtime="20201010 12:26:02.097"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.085" endtime="20201010 12:26:02.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.112" endtime="20201010 12:26:02.412"></status>
</kw>
<msg timestamp="20201010 12:26:02.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.172192569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.272227944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:02.109" endtime="20201010 12:26:02.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.172192569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.272227944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:02.416" endtime="20201010 12:26:02.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.424" endtime="20201010 12:26:02.426"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.103" endtime="20201010 12:26:02.427"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.099" endtime="20201010 12:26:02.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:02.431" level="INFO">${FILTERED} = [{'diff': 0.10003537500000004}, {'diff': 0.10016079200000005}, {'diff': 0.099752375}, {'diff': 0.10000230600000015}, {'diff': 0.09997177800000001}, {'diff': 0.09997192999999993}, {'diff': 0.0999614439...</msg>
<status status="PASS" starttime="20201010 12:26:02.428" endtime="20201010 12:26:02.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:02.436" level="INFO">${RESULT} = {'diff': [0.10003537500000004, 0.10016079200000005, 0.099752375, 0.10000230600000015, 0.09997177800000001, 0.09997192999999993, 0.09996144399999984, 0.10009827800000015, 0.09985579099999997, 0.0999718...</msg>
<status status="PASS" starttime="20201010 12:26:02.432" endtime="20201010 12:26:02.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.440" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:02.439" endtime="20201010 12:26:02.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.443" level="INFO">VALUE: [0.10003537500000004, 0.10016079200000005, 0.099752375, 0.10000230600000015, 0.09997177800000001, 0.09997192999999993, 0.09996144399999984, 0.10009827800000015, 0.09985579099999997, 0.09997188899999987, 0.09997180600000011, 0.09997180600000011, 0.10018288900000005, 0.09976087499999986, 0.10000308400000035, 0.10003711099999979, 0.09981236100000013, 0.10004456999999967, 0.09990020799999977, 0.10003387500000027, 0.09997179199999984, 0.10002437500000028, 0.09991929200000005, 0.09998504100000005, 0.09992818000000003, 0.10000241700000023, 0.10007701400000002, 0.0998362639999999, 0.10000233299999994, 0.09993876400000001, 0.1000049590000005, 0.09997173599999964, 0.09997191599999944, 0.09997181999999949, 0.09993936099999967, 0.1000043469999996, 0.09997188899999987, 0.10019973599999954, 0.09971347199999947, 0.10000234700000021, 0.0999716949999998, 0.10009963799999966, 0.10002507000000005, 0.09979088900000033, 0.09997184699999995, 0.09993904099999984, 0.09997334699999971, 0.09997034800000026, 0.10000481900000047, 0.10002445900000012]</msg>
<status status="PASS" starttime="20201010 12:26:02.441" endtime="20201010 12:26:02.443"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.437" endtime="20201010 12:26:02.444"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:55.899" endtime="20201010 12:26:02.444"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:55.821" endtime="20201010 12:26:02.445" critical="yes"></status>
</test>
<test id="s1-s2-t11" name="75 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:02.453" endtime="20201010 12:26:02.472"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.451" endtime="20201010 12:26:02.473"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.487" endtime="20201010 12:26:02.505"></status>
</kw>
<msg timestamp="20201010 12:26:02.506" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:02.485" endtime="20201010 12:26:02.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.509" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:02.507" endtime="20201010 12:26:02.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:02.512" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:02.510" endtime="20201010 12:26:02.512"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:02.482" endtime="20201010 12:26:02.513"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:02.480" endtime="20201010 12:26:02.513"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.478" endtime="20201010 12:26:02.514"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:02.517" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:02.517" endtime="20201010 12:26:02.518"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.515" endtime="20201010 12:26:02.518"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.477" endtime="20201010 12:26:02.519"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.477" endtime="20201010 12:26:02.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.520" endtime="20201010 12:26:02.522"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.475" endtime="20201010 12:26:02.522"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.473" endtime="20201010 12:26:02.523"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.450" endtime="20201010 12:26:02.523"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>75</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:02.533" endtime="20201010 12:26:08.712"></status>
</kw>
<msg timestamp="20201010 12:26:08.713" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 75 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '81075'}, {'interval': '58727'}, {'interval': '40937'}, {'interval': '10090'}, {'interval': '32175'...</msg>
<status status="PASS" starttime="20201010 12:26:02.531" endtime="20201010 12:26:08.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.721" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 75 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '81075'}, {'interval': '58727'}, {'interval': '40937'}, {'interval': '10090'}, {'interval': '32175'...</msg>
<status status="PASS" starttime="20201010 12:26:08.716" endtime="20201010 12:26:08.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.724" endtime="20201010 12:26:08.727"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.528" endtime="20201010 12:26:08.728"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.526" endtime="20201010 12:26:08.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:08.741" level="INFO">${RESULT} = {'focus': [100000], 'interval': [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118,...</msg>
<status status="PASS" starttime="20201010 12:26:08.731" endtime="20201010 12:26:08.742"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:08.753" level="INFO">${interval} = [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118, 68312, 54751, 80163, 54227, 583...</msg>
<status status="PASS" starttime="20201010 12:26:08.744" endtime="20201010 12:26:08.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.761" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:08.759" endtime="20201010 12:26:08.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.766" level="INFO">VALUE: [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118, 68312, 54751, 80163, 54227, 58312, 43968, 57316, 22291, 26892, 71562, 69729, 10869, 16200, 53697, 30276, 60725, 22110, 59120, 24460, 36665, 10677, 44111, 16864, 64627, 87787, 52486, 10571, 13830, 59376, 68287, 10851, 19328, 95360, 64761, 16060, 56217, 52889, 38375, 35488, 20496, 81475, 86486, 44426, 74127, 62725, 66508, 29656, 17750, 43477, 47133, 75567]</msg>
<status status="PASS" starttime="20201010 12:26:08.763" endtime="20201010 12:26:08.767"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.755" endtime="20201010 12:26:08.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.776" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:08.774" endtime="20201010 12:26:08.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.781" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:08.779" endtime="20201010 12:26:08.781"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.770" endtime="20201010 12:26:08.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.788" endtime="20201010 12:26:09.086"></status>
</kw>
<msg timestamp="20201010 12:26:09.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.172648625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.272652569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:08.786" endtime="20201010 12:26:09.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:09.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.172648625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.272652569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:09.090" endtime="20201010 12:26:09.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:09.099" endtime="20201010 12:26:09.100"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.784" endtime="20201010 12:26:09.101"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.782" endtime="20201010 12:26:09.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:09.105" level="INFO">${FILTERED} = [{'diff': 0.10000394400000001}, {'diff': 0.09997182000000016}, {'diff': 0.100264986}, {'diff': 0.09967876400000009}, {'diff': 0.099971861}, {'diff': 0.10037047300000013}, {'diff': 0.09985576399999996}...</msg>
<status status="PASS" starttime="20201010 12:26:09.102" endtime="20201010 12:26:09.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:09.110" level="INFO">${RESULT} = {'diff': [0.10000394400000001, 0.09997182000000016, 0.100264986, 0.09967876400000009, 0.099971861, 0.10037047300000013, 0.09985576399999996, 0.09969191700000013, 0.09996923600000018, 0.100311778000000...</msg>
<status status="PASS" starttime="20201010 12:26:09.106" endtime="20201010 12:26:09.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:09.115" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:09.114" endtime="20201010 12:26:09.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:09.117" level="INFO">VALUE: [0.10000394400000001, 0.09997182000000016, 0.100264986, 0.09967876400000009, 0.099971861, 0.10037047300000013, 0.09985576399999996, 0.09969191700000013, 0.09996923600000018, 0.10031177800000002, 0.09967338899999989, 0.09990855599999993, 0.0999936250000002, 0.09997191699999997, 0.10004655500000004, 0.09986565299999972, 0.09997191599999988, 0.10036116700000042, 0.0996553200000001, 0.1000046379999997, 0.09999052800000019, 0.09987902800000015, 0.10007613900000001, 0.0999159719999998, 0.10005668000000023, 0.09983858299999993, 0.09997192999999971, 0.10052193099999984, 0.09942170800000039, 0.1002477500000003, 0.09987725000000047, 0.09979062500000069, 0.09997176400000019, 0.1000414859999994, 0.0999021529999995, 0.09997191699999952, 0.10009912499999984, 0.09981138900000008, 0.09995752800000002, 0.10001937499999958, 0.09997186100000022, 0.09993863900000033, 0.09997444399999988, 0.10000233299999994, 0.09993922199999972, 0.0999740280000001, 0.10000244499999944, 0.10015188899999927, 0.09981629099999978, 0.09991684699999936]</msg>
<status status="PASS" starttime="20201010 12:26:09.116" endtime="20201010 12:26:09.117"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.111" endtime="20201010 12:26:09.118"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:02.524" endtime="20201010 12:26:09.118"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:02.447" endtime="20201010 12:26:09.119" critical="yes"></status>
</test>
<test id="s1-s2-t12" name="100 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:09.128" endtime="20201010 12:26:09.148"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.127" endtime="20201010 12:26:09.149"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:09.163" endtime="20201010 12:26:09.179"></status>
</kw>
<msg timestamp="20201010 12:26:09.180" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:09.161" endtime="20201010 12:26:09.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:09.182" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:09.181" endtime="20201010 12:26:09.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:09.185" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:09.183" endtime="20201010 12:26:09.185"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:09.158" endtime="20201010 12:26:09.186"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:09.156" endtime="20201010 12:26:09.187"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.155" endtime="20201010 12:26:09.187"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:09.191" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:09.190" endtime="20201010 12:26:09.191"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.188" endtime="20201010 12:26:09.192"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.154" endtime="20201010 12:26:09.192"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.153" endtime="20201010 12:26:09.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:09.193" endtime="20201010 12:26:09.194"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.152" endtime="20201010 12:26:09.195"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.149" endtime="20201010 12:26:09.195"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.125" endtime="20201010 12:26:09.195"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>100</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:09.206" endtime="20201010 12:26:15.451"></status>
</kw>
<msg timestamp="20201010 12:26:15.453" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 100 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '25479'}, {'interval': '99747'}, {'interval': '10545'}, {'interval': '53347'}, {'interval': '97917...</msg>
<status status="PASS" starttime="20201010 12:26:09.205" endtime="20201010 12:26:15.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.462" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 100 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '25479'}, {'interval': '99747'}, {'interval': '10545'}, {'interval': '53347'}, {'interval': '97917...</msg>
<status status="PASS" starttime="20201010 12:26:15.456" endtime="20201010 12:26:15.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.464" endtime="20201010 12:26:15.468"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.202" endtime="20201010 12:26:15.469"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.198" endtime="20201010 12:26:15.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:15.484" level="INFO">${RESULT} = {'focus': [100000], 'interval': [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946,...</msg>
<status status="PASS" starttime="20201010 12:26:15.471" endtime="20201010 12:26:15.484"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:15.495" level="INFO">${interval} = [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946, 34329, 54047, 21276, 78931, 960...</msg>
<status status="PASS" starttime="20201010 12:26:15.486" endtime="20201010 12:26:15.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.504" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:15.502" endtime="20201010 12:26:15.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.509" level="INFO">VALUE: [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946, 34329, 54047, 21276, 78931, 96011, 66721, 98428, 10018, 21350, 57891, 44237, 47888, 49872, 48763, 80263, 93240, 65542, 69880, 49052, 60186, 16103, 70949, 81316, 74540, 78692, 31251, 92771, 27327, 95171, 73283, 44316, 50344, 95943, 37655, 81039, 11783, 32679, 42216, 57297, 47170, 32344, 72256, 48132, 42552, 45395, 13114, 21516, 47276, 37671, 70189, 59386, 64123, 49679, 14446, 29154, 60416, 52975, 46707, 30305, 37643, 98500, 39715, 31020, 98902, 61399, 58345, 20890, 33209, 90081, 27893, 71353, 26989, 20846, 78625, 56472, 100987]</msg>
<status status="PASS" starttime="20201010 12:26:15.506" endtime="20201010 12:26:15.510"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.497" endtime="20201010 12:26:15.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.518" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:15.516" endtime="20201010 12:26:15.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.523" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:15.521" endtime="20201010 12:26:15.524"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.512" endtime="20201010 12:26:15.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.539" endtime="20201010 12:26:15.841"></status>
</kw>
<msg timestamp="20201010 12:26:15.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.286332778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.386272611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:15.536" endtime="20201010 12:26:15.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.286332778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.386272611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:15.845" endtime="20201010 12:26:15.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.853" endtime="20201010 12:26:15.855"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.530" endtime="20201010 12:26:15.855"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.526" endtime="20201010 12:26:15.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:15.860" level="INFO">${FILTERED} = [{'diff': 0.09993983300000009}, {'diff': 0.10001349999999998}, {'diff': 0.0999185279999999}, {'diff': 0.09993700000000016}, {'diff': 0.10000241599999993}, {'diff': 0.10017344399999994}, {'diff': 0.099...</msg>
<status status="PASS" starttime="20201010 12:26:15.857" endtime="20201010 12:26:15.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:15.867" level="INFO">${RESULT} = {'diff': [0.09993983300000009, 0.10001349999999998, 0.0999185279999999, 0.09993700000000016, 0.10000241599999993, 0.10017344399999994, 0.09977029100000001, 0.09997190299999992, 0.10033904199999988, 0....</msg>
<status status="PASS" starttime="20201010 12:26:15.861" endtime="20201010 12:26:15.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.871" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:15.870" endtime="20201010 12:26:15.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.873" level="INFO">VALUE: [0.09993983300000009, 0.10001349999999998, 0.0999185279999999, 0.09993700000000016, 0.10000241599999993, 0.10017344399999994, 0.09977029100000001, 0.09997190299999992, 0.10033904199999988, 0.09960456999999989, 0.099972014, 0.09997170799999999, 0.09998308300000014, 0.09997208299999993, 0.10060702800000021, 0.09943129199999978, 0.10016936100000029, 0.09966819500000001, 0.09996005499999994, 0.1000354859999999, 0.09996090299999993, 0.09999965200000016, 0.10013579200000011, 0.09971002800000006, 0.1001869580000001, 0.09975531899999979, 0.10000234700000021, 0.10002308299999996, 0.10012808399999962, 0.09976454199999996, 0.10000402799999986, 0.09993970799999996, 0.09994033300000016, 0.10041755499999994, 0.09973399999999977, 0.09978793099999983, 0.10030681900000005, 0.09961098600000007, 0.09997358300000059, 0.10012498599999997, 0.09995545800000016, 0.10009234699999947, 0.09980269400000008, 0.10026722200000027, 0.0996200690000002, 0.10014838899999923, 0.10006854199999982, 0.09966643000000008, 0.10071190300000055, 0.09920118099999975]</msg>
<status status="PASS" starttime="20201010 12:26:15.872" endtime="20201010 12:26:15.874"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.867" endtime="20201010 12:26:15.874"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.196" endtime="20201010 12:26:15.875"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:09.122" endtime="20201010 12:26:15.876" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 12:24:55.354" endtime="20201010 12:26:15.891"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201010 12:24:53.226" endtime="20201010 12:26:15.939"></status>
</suite>
<statistics>
<total>
<stat pass="13" fail="0">Critical Tests</stat>
<stat pass="13" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="13" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="13" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="13" fail="0">dev</stat>
</tag>
<suite>
<stat pass="13" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="12" fail="0" id="s1-s2" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
