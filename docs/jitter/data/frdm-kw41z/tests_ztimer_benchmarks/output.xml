<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201010 14:27:57.027" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 14:27:57.596" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 14:27:57.604" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 14:27:58.756" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 14:27:57.595" endtime="20201010 14:27:58.757"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 14:27:58.760" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 14:27:58.758" endtime="20201010 14:27:58.760"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:57.593" endtime="20201010 14:27:58.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:27:58.763" endtime="20201010 14:27:58.948"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.761" endtime="20201010 14:27:58.948"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:58.961" endtime="20201010 14:27:58.982"></status>
</kw>
<msg timestamp="20201010 14:27:58.983" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:58.960" endtime="20201010 14:27:58.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:27:58.985" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:58.984" endtime="20201010 14:27:58.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:27:58.989" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:27:58.986" endtime="20201010 14:27:58.989"></status>
</kw>
<status status="FAIL" starttime="20201010 14:27:58.957" endtime="20201010 14:27:58.990"></status>
</kw>
<status status="FAIL" starttime="20201010 14:27:58.955" endtime="20201010 14:27:58.990"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.954" endtime="20201010 14:27:58.991"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:27:58.995" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:27:58.994" endtime="20201010 14:27:58.995"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.992" endtime="20201010 14:27:58.995"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.953" endtime="20201010 14:27:58.995"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.952" endtime="20201010 14:27:58.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:58.996" endtime="20201010 14:27:58.998"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.951" endtime="20201010 14:27:58.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:58.999" endtime="20201010 14:27:59.001"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.949" endtime="20201010 14:27:59.002"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:57.591" endtime="20201010 14:27:59.002"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:27:59.008" endtime="20201010 14:27:59.030"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.007" endtime="20201010 14:27:59.031"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:59.065" endtime="20201010 14:27:59.088"></status>
</kw>
<msg timestamp="20201010 14:27:59.089" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:59.061" endtime="20201010 14:27:59.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:27:59.094" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:59.091" endtime="20201010 14:27:59.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:27:59.101" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:27:59.097" endtime="20201010 14:27:59.102"></status>
</kw>
<status status="FAIL" starttime="20201010 14:27:59.053" endtime="20201010 14:27:59.103"></status>
</kw>
<status status="FAIL" starttime="20201010 14:27:59.048" endtime="20201010 14:27:59.104"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.044" endtime="20201010 14:27:59.105"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:27:59.113" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:27:59.112" endtime="20201010 14:27:59.114"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.107" endtime="20201010 14:27:59.115"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.042" endtime="20201010 14:27:59.115"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.040" endtime="20201010 14:27:59.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:59.117" endtime="20201010 14:27:59.120"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.037" endtime="20201010 14:27:59.121"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.033" endtime="20201010 14:27:59.121"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.005" endtime="20201010 14:27:59.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:59.129" endtime="20201010 14:27:59.143"></status>
</kw>
<msg timestamp="20201010 14:27:59.143" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:59.127" endtime="20201010 14:27:59.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:27:59.145" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:59.144" endtime="20201010 14:27:59.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:59.147" endtime="20201010 14:27:59.148"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.125" endtime="20201010 14:27:59.149"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.123" endtime="20201010 14:27:59.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:27:59.154" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201010 14:27:59.153" endtime="20201010 14:27:59.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:27:59.156" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201010 14:27:59.155" endtime="20201010 14:27:59.156"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.150" endtime="20201010 14:27:59.157"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:27:59.002" endtime="20201010 14:27:59.158" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 14:27:57.142" endtime="20201010 14:27:59.161"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 14:27:59.213" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 14:27:59.220" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 14:28:00.379" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 14:27:59.211" endtime="20201010 14:28:00.380"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 14:28:00.382" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 14:28:00.381" endtime="20201010 14:28:00.382"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.210" endtime="20201010 14:28:00.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:00.385" endtime="20201010 14:28:00.610"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.384" endtime="20201010 14:28:00.611"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.623" endtime="20201010 14:28:00.643"></status>
</kw>
<msg timestamp="20201010 14:28:00.643" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['me to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:00.621" endtime="20201010 14:28:00.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:00.646" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['me to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:00.644" endtime="20201010 14:28:00.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:00.650" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:00.647" endtime="20201010 14:28:00.651"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:00.619" endtime="20201010 14:28:00.652"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:00.617" endtime="20201010 14:28:00.653"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.615" endtime="20201010 14:28:00.654"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:00.662" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:00.661" endtime="20201010 14:28:00.663"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.656" endtime="20201010 14:28:00.663"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.615" endtime="20201010 14:28:00.664"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.614" endtime="20201010 14:28:00.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.666" endtime="20201010 14:28:00.669"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.613" endtime="20201010 14:28:00.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.672" endtime="20201010 14:28:00.675"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.611" endtime="20201010 14:28:00.676"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.209" endtime="20201010 14:28:00.677"></status>
</kw>
<test id="s1-s2-t1" name="0 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:00.692" endtime="20201010 14:28:00.714"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.686" endtime="20201010 14:28:00.715"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.744" endtime="20201010 14:28:00.762"></status>
</kw>
<msg timestamp="20201010 14:28:00.763" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:00.741" endtime="20201010 14:28:00.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:00.766" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:00.764" endtime="20201010 14:28:00.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:00.769" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:00.767" endtime="20201010 14:28:00.769"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:00.735" endtime="20201010 14:28:00.770"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:00.729" endtime="20201010 14:28:00.771"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.727" endtime="20201010 14:28:00.771"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:00.775" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:00.774" endtime="20201010 14:28:00.775"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.772" endtime="20201010 14:28:00.775"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.725" endtime="20201010 14:28:00.776"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.724" endtime="20201010 14:28:00.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.776" endtime="20201010 14:28:00.778"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.721" endtime="20201010 14:28:00.779"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.717" endtime="20201010 14:28:00.779"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.683" endtime="20201010 14:28:00.780"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.789" endtime="20201010 14:28:06.295"></status>
</kw>
<msg timestamp="20201010 14:28:06.296" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:00.787" endtime="20201010 14:28:06.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.302" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:06.299" endtime="20201010 14:28:06.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:06.305" endtime="20201010 14:28:06.310"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.785" endtime="20201010 14:28:06.311"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.783" endtime="20201010 14:28:06.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:06.318" level="INFO">${RESULT} = {'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 14:28:06.314" endtime="20201010 14:28:06.318"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:06.380" level="INFO">${interval} = []</msg>
<status status="PASS" starttime="20201010 14:28:06.320" endtime="20201010 14:28:06.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.388" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:06.386" endtime="20201010 14:28:06.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.392" level="INFO">VALUE: []</msg>
<status status="PASS" starttime="20201010 14:28:06.390" endtime="20201010 14:28:06.393"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.382" endtime="20201010 14:28:06.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.402" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:06.400" endtime="20201010 14:28:06.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.405" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:06.404" endtime="20201010 14:28:06.405"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.396" endtime="20201010 14:28:06.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:06.418" endtime="20201010 14:28:06.718"></status>
</kw>
<msg timestamp="20201010 14:28:06.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.588283264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.688034056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:06.417" endtime="20201010 14:28:06.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.588283264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.688034056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:06.723" endtime="20201010 14:28:06.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:06.731" endtime="20201010 14:28:06.733"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.408" endtime="20201010 14:28:06.733"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.406" endtime="20201010 14:28:06.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:06.737" level="INFO">${FILTERED} = [{'diff': 0.09975079200000003}, {'diff': 0.09974818099999994}, {'diff': 0.099705708}, {'diff': 0.09972586099999992}, {'diff': 0.09970058299999995}, {'diff': 0.09970551400000005}, {'diff': 0.0997006529...</msg>
<status status="PASS" starttime="20201010 14:28:06.734" endtime="20201010 14:28:06.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:06.742" level="INFO">${RESULT} = {'diff': [0.09975079200000003, 0.09974818099999994, 0.099705708, 0.09972586099999992, 0.09970058299999995, 0.09970551400000005, 0.09970065299999997, 0.09971023600000017, 0.09971020800000008, 0.0996700...</msg>
<status status="PASS" starttime="20201010 14:28:06.738" endtime="20201010 14:28:06.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.747" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:06.746" endtime="20201010 14:28:06.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.749" level="INFO">VALUE: [0.09975079200000003, 0.09974818099999994, 0.099705708, 0.09972586099999992, 0.09970058299999995, 0.09970551400000005, 0.09970065299999997, 0.09971023600000017, 0.09971020800000008, 0.09967006900000008, 0.0997072080000001, 0.09969661100000016, 0.09970223599999994, 0.0997082079999998, 0.09970594400000032, 0.0997367920000003, 0.09973709700000022, 0.09973663899999963, 0.09970990299999993, 0.099667583, 0.0997160130000001, 0.09973554200000034, 0.09970677800000027, 0.0996963609999999, 0.0996684870000002, 0.09969393100000001, 0.09970127799999995, 0.09971479199999989, 0.09970362500000007, 0.09966559800000008, 0.09970083299999999, 0.09970744399999987, 0.0997319029999999, 0.09972512499999997, 0.09968766600000034, 0.09972242999999992, 0.0997071389999995, 0.09969448599999975, 0.09969633399999989, 0.0996703890000008, 0.0997009439999994, 0.09968309699999978, 0.09970672299999972, 0.09973969399999927, 0.09970820800000002, 0.09972536099999996, 0.09971587500000023, 0.09969750000000044, 0.09971288900000008, 0.09967290300000009]</msg>
<status status="PASS" starttime="20201010 14:28:06.748" endtime="20201010 14:28:06.750"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.743" endtime="20201010 14:28:06.750"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.781" endtime="20201010 14:28:06.751"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:00.678" endtime="20201010 14:28:06.752" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="5 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:06.761" endtime="20201010 14:28:06.780"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.759" endtime="20201010 14:28:06.781"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:06.794" endtime="20201010 14:28:06.813"></status>
</kw>
<msg timestamp="20201010 14:28:06.813" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:06.792" endtime="20201010 14:28:06.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.816" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:06.814" endtime="20201010 14:28:06.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.819" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:06.817" endtime="20201010 14:28:06.820"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:06.790" endtime="20201010 14:28:06.820"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:06.787" endtime="20201010 14:28:06.821"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.786" endtime="20201010 14:28:06.821"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:06.825" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:06.824" endtime="20201010 14:28:06.826"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.822" endtime="20201010 14:28:06.826"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.785" endtime="20201010 14:28:06.826"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.784" endtime="20201010 14:28:06.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:06.827" endtime="20201010 14:28:06.829"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.783" endtime="20201010 14:28:06.829"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.781" endtime="20201010 14:28:06.830"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.757" endtime="20201010 14:28:06.830"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:06.840" endtime="20201010 14:28:12.356"></status>
</kw>
<msg timestamp="20201010 14:28:12.357" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '56207'}, {'interval': '42110'}, {'interval': '19271'}, {'interval': '94738'}, {'interval': '34690'}...</msg>
<status status="PASS" starttime="20201010 14:28:06.839" endtime="20201010 14:28:12.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.363" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '56207'}, {'interval': '42110'}, {'interval': '19271'}, {'interval': '94738'}, {'interval': '34690'}...</msg>
<status status="PASS" starttime="20201010 14:28:12.359" endtime="20201010 14:28:12.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.365" endtime="20201010 14:28:12.369"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.836" endtime="20201010 14:28:12.370"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.833" endtime="20201010 14:28:12.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:12.376" level="INFO">${RESULT} = {'interval': [56207, 42110, 19271, 94738, 34690], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 14:28:12.372" endtime="20201010 14:28:12.377"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:12.387" level="INFO">${interval} = [56207, 42110, 19271, 94738, 34690]</msg>
<status status="PASS" starttime="20201010 14:28:12.379" endtime="20201010 14:28:12.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.395" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:12.393" endtime="20201010 14:28:12.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.400" level="INFO">VALUE: [56207, 42110, 19271, 94738, 34690]</msg>
<status status="PASS" starttime="20201010 14:28:12.398" endtime="20201010 14:28:12.401"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.389" endtime="20201010 14:28:12.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.410" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:12.407" endtime="20201010 14:28:12.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.415" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:12.412" endtime="20201010 14:28:12.416"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.403" endtime="20201010 14:28:12.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.432" endtime="20201010 14:28:12.728"></status>
</kw>
<msg timestamp="20201010 14:28:12.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.569831611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.669558319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:12.429" endtime="20201010 14:28:12.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.569831611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.669558319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:12.732" endtime="20201010 14:28:12.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.740" endtime="20201010 14:28:12.742"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.422" endtime="20201010 14:28:12.742"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.418" endtime="20201010 14:28:12.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:12.747" level="INFO">${FILTERED} = [{'diff': 0.09972670799999994}, {'diff': 0.09969966699999999}, {'diff': 0.09973194399999996}, {'diff': 0.099685625}, {'diff': 0.09968494399999994}, {'diff': 0.09977606999999988}, {'diff': 0.0996887079...</msg>
<status status="PASS" starttime="20201010 14:28:12.744" endtime="20201010 14:28:12.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:12.752" level="INFO">${RESULT} = {'diff': [0.09972670799999994, 0.09969966699999999, 0.09973194399999996, 0.099685625, 0.09968494399999994, 0.09977606999999988, 0.09968870799999996, 0.0997587499999999, 0.09971005499999985, 0.09967379...</msg>
<status status="PASS" starttime="20201010 14:28:12.748" endtime="20201010 14:28:12.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.756" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:12.755" endtime="20201010 14:28:12.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.759" level="INFO">VALUE: [0.09972670799999994, 0.09969966699999999, 0.09973194399999996, 0.099685625, 0.09968494399999994, 0.09977606999999988, 0.09968870799999996, 0.0997587499999999, 0.09971005499999985, 0.09967379100000007, 0.09969583400000004, 0.09969262500000009, 0.0997661809999999, 0.09968190300000002, 0.09968694399999989, 0.09979320799999991, 0.09972000000000003, 0.09971216699999985, 0.0997775700000001, 0.0996873749999998, 0.09976523600000009, 0.09974870800000035, 0.09966366699999973, 0.09974236100000011, 0.09971413799999995, 0.09971174999999999, 0.09974547199999995, 0.09972947199999993, 0.09971705600000025, 0.0998116109999998, 0.09966048599999988, 0.09967658400000001, 0.09973624999999986, 0.09971569400000035, 0.09968888899999984, 0.09972905500000007, 0.0997161249999996, 0.09975304200000057, 0.0997508060000003, 0.09974747199999978, 0.09967729199999997, 0.0997107220000002, 0.09973422200000037, 0.09970802799999934, 0.09974261099999993, 0.09967593000000008, 0.09976705500000005, 0.09970802799999934, 0.09972451400000004, 0.09974894499999998]</msg>
<status status="PASS" starttime="20201010 14:28:12.757" endtime="20201010 14:28:12.759"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.753" endtime="20201010 14:28:12.760"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.831" endtime="20201010 14:28:12.760"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:06.754" endtime="20201010 14:28:12.761" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="10 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:12.768" endtime="20201010 14:28:12.788"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.767" endtime="20201010 14:28:12.789"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.802" endtime="20201010 14:28:12.820"></status>
</kw>
<msg timestamp="20201010 14:28:12.821" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:12.800" endtime="20201010 14:28:12.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.823" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:12.822" endtime="20201010 14:28:12.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.827" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:12.825" endtime="20201010 14:28:12.827"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:12.798" endtime="20201010 14:28:12.828"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:12.795" endtime="20201010 14:28:12.828"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.794" endtime="20201010 14:28:12.829"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:12.833" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:12.832" endtime="20201010 14:28:12.833"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.830" endtime="20201010 14:28:12.833"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.793" endtime="20201010 14:28:12.834"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.792" endtime="20201010 14:28:12.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.834" endtime="20201010 14:28:12.836"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.791" endtime="20201010 14:28:12.837"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.789" endtime="20201010 14:28:12.837"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.766" endtime="20201010 14:28:12.837"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.846" endtime="20201010 14:28:18.378"></status>
</kw>
<msg timestamp="20201010 14:28:18.379" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '22114'}, {'interval': '67521'}, {'interval': '17040'}, {'interval': '71822'}, {'interval': '90731'...</msg>
<status status="PASS" starttime="20201010 14:28:12.845" endtime="20201010 14:28:18.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.386" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '22114'}, {'interval': '67521'}, {'interval': '17040'}, {'interval': '71822'}, {'interval': '90731'...</msg>
<status status="PASS" starttime="20201010 14:28:18.382" endtime="20201010 14:28:18.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:18.388" endtime="20201010 14:28:18.392"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.842" endtime="20201010 14:28:18.393"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.840" endtime="20201010 14:28:18.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:18.400" level="INFO">${RESULT} = {'interval': [22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 14:28:18.396" endtime="20201010 14:28:18.400"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:18.411" level="INFO">${interval} = [22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113]</msg>
<status status="PASS" starttime="20201010 14:28:18.402" endtime="20201010 14:28:18.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.419" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:18.417" endtime="20201010 14:28:18.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.421" level="INFO">VALUE: [22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113]</msg>
<status status="PASS" starttime="20201010 14:28:18.420" endtime="20201010 14:28:18.421"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.413" endtime="20201010 14:28:18.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.425" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:18.424" endtime="20201010 14:28:18.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.427" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:18.426" endtime="20201010 14:28:18.428"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.422" endtime="20201010 14:28:18.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:18.437" endtime="20201010 14:28:18.733"></status>
</kw>
<msg timestamp="20201010 14:28:18.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.571273056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.670982806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:18.433" endtime="20201010 14:28:18.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.571273056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.670982806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:18.737" endtime="20201010 14:28:18.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:18.745" endtime="20201010 14:28:18.747"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.431" endtime="20201010 14:28:18.747"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.429" endtime="20201010 14:28:18.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:18.752" level="INFO">${FILTERED} = [{'diff': 0.09970975000000004}, {'diff': 0.09972877699999994}, {'diff': 0.09970330500000002}, {'diff': 0.0996908190000001}, {'diff': 0.09966216699999997}, {'diff': 0.09972666600000002}, {'diff': 0.099...</msg>
<status status="PASS" starttime="20201010 14:28:18.748" endtime="20201010 14:28:18.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:18.756" level="INFO">${RESULT} = {'diff': [0.09970975000000004, 0.09972877699999994, 0.09970330500000002, 0.0996908190000001, 0.09966216699999997, 0.09972666600000002, 0.09967580500000017, 0.09975551399999993, 0.09968402700000012, 0....</msg>
<status status="PASS" starttime="20201010 14:28:18.753" endtime="20201010 14:28:18.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.760" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:18.759" endtime="20201010 14:28:18.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.762" level="INFO">VALUE: [0.09970975000000004, 0.09972877699999994, 0.09970330500000002, 0.0996908190000001, 0.09966216699999997, 0.09972666600000002, 0.09967580500000017, 0.09975551399999993, 0.09968402700000012, 0.09973161099999994, 0.09971255600000006, 0.0996834729999998, 0.09971013900000014, 0.09998362499999991, 0.09944324999999976, 0.09972838900000003, 0.0997388189999997, 0.09974012499999985, 0.09975594399999999, 0.09966583399999962, 0.09967330599999968, 0.09973176299999986, 0.09967247199999996, 0.0997154720000002, 0.09968605599999991, 0.09970376400000003, 0.09992409700000016, 0.09951470800000006, 0.09974502799999962, 0.09964150000000016, 0.099849195, 0.09960358400000002, 0.09970944400000015, 0.09974191700000024, 0.09967286099999972, 0.09970461099999994, 0.09970312500000045, 0.09972279199999967, 0.09966486099999994, 0.09971084799999996, 0.09972269399999956, 0.09969019400000079, 0.09966955500000019, 0.09972541700000015, 0.09966291599999977, 0.0998012079999997, 0.0997325, 0.09974423600000026, 0.09966722199999989, 0.09969676399999994]</msg>
<status status="PASS" starttime="20201010 14:28:18.761" endtime="20201010 14:28:18.763"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.756" endtime="20201010 14:28:18.763"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.838" endtime="20201010 14:28:18.764"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:12.763" endtime="20201010 14:28:18.765" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="15 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:18.772" endtime="20201010 14:28:18.792"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.771" endtime="20201010 14:28:18.793"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:18.809" endtime="20201010 14:28:18.829"></status>
</kw>
<msg timestamp="20201010 14:28:18.829" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:18.808" endtime="20201010 14:28:18.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.832" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:18.831" endtime="20201010 14:28:18.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.836" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:18.834" endtime="20201010 14:28:18.836"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:18.805" endtime="20201010 14:28:18.837"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:18.802" endtime="20201010 14:28:18.837"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.801" endtime="20201010 14:28:18.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:18.842" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:18.841" endtime="20201010 14:28:18.842"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.839" endtime="20201010 14:28:18.842"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.800" endtime="20201010 14:28:18.842"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.799" endtime="20201010 14:28:18.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:18.843" endtime="20201010 14:28:18.845"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.795" endtime="20201010 14:28:18.845"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.793" endtime="20201010 14:28:18.846"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.769" endtime="20201010 14:28:18.846"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:18.856" endtime="20201010 14:28:24.397"></status>
</kw>
<msg timestamp="20201010 14:28:24.398" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '12297'}, {'interval': '68502'}, {'interval': '38802'}, {'interval': '52517'}, {'interval': '69027'...</msg>
<status status="PASS" starttime="20201010 14:28:18.854" endtime="20201010 14:28:24.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.404" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '12297'}, {'interval': '68502'}, {'interval': '38802'}, {'interval': '52517'}, {'interval': '69027'...</msg>
<status status="PASS" starttime="20201010 14:28:24.400" endtime="20201010 14:28:24.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.406" endtime="20201010 14:28:24.410"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.851" endtime="20201010 14:28:24.411"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.849" endtime="20201010 14:28:24.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:24.419" level="INFO">${RESULT} = {'interval': [12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 14:28:24.414" endtime="20201010 14:28:24.419"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:24.430" level="INFO">${interval} = [12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297]</msg>
<status status="PASS" starttime="20201010 14:28:24.421" endtime="20201010 14:28:24.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.438" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:24.436" endtime="20201010 14:28:24.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.442" level="INFO">VALUE: [12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297]</msg>
<status status="PASS" starttime="20201010 14:28:24.440" endtime="20201010 14:28:24.443"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.431" endtime="20201010 14:28:24.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.451" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:24.449" endtime="20201010 14:28:24.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.453" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:24.452" endtime="20201010 14:28:24.454"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.446" endtime="20201010 14:28:24.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.464" endtime="20201010 14:28:24.760"></status>
</kw>
<msg timestamp="20201010 14:28:24.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.576636889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.676385792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:24.460" endtime="20201010 14:28:24.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.576636889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.676385792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:24.764" endtime="20201010 14:28:24.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.772" endtime="20201010 14:28:24.774"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.457" endtime="20201010 14:28:24.774"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.455" endtime="20201010 14:28:24.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:24.779" level="INFO">${FILTERED} = [{'diff': 0.09974890300000006}, {'diff': 0.09970679199999999}, {'diff': 0.09971562499999997}, {'diff': 0.09967120800000007}, {'diff': 0.09963811100000008}, {'diff': 0.09981636100000002}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201010 14:28:24.776" endtime="20201010 14:28:24.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:24.783" level="INFO">${RESULT} = {'diff': [0.09974890300000006, 0.09970679199999999, 0.09971562499999997, 0.09967120800000007, 0.09963811100000008, 0.09981636100000002, 0.09963679199999986, 0.09966916700000006, 0.10000380599999992, 0...</msg>
<status status="PASS" starttime="20201010 14:28:24.780" endtime="20201010 14:28:24.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.787" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:24.786" endtime="20201010 14:28:24.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.790" level="INFO">VALUE: [0.09974890300000006, 0.09970679199999999, 0.09971562499999997, 0.09967120800000007, 0.09963811100000008, 0.09981636100000002, 0.09963679199999986, 0.09966916700000006, 0.10000380599999992, 0.09939991599999987, 0.0996808469999999, 0.09973313900000003, 0.09972584800000006, 0.09974634699999996, 0.09964416700000012, 0.09972881900000008, 0.09972115299999995, 0.09969730499999985, 0.09992684799999996, 0.09948445800000005, 0.09974719399999987, 0.09973061100000002, 0.09970300000000032, 0.09965466600000017, 0.09968613900000012, 0.09967143099999998, 0.09968768000000017, 0.09968912499999982, 0.09968858399999991, 0.099691639, 0.09981165300000017, 0.09960737499999972, 0.09986806899999978, 0.09957684700000025, 0.09964137500000003, 0.09969648600000003, 0.0996940550000005, 0.09968776299999949, 0.09973508299999967, 0.09970130600000005, 0.09967770899999984, 0.09973856900000033, 0.0997367640000002, 0.09972588900000012, 0.09970329099999997, 0.09970390299999998, 0.09972427699999997, 0.09966505600000009, 0.09982377799999931, 0.09959076400000022]</msg>
<status status="PASS" starttime="20201010 14:28:24.789" endtime="20201010 14:28:24.790"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.784" endtime="20201010 14:28:24.791"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.847" endtime="20201010 14:28:24.792"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:18.767" endtime="20201010 14:28:24.793" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="20 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:24.803" endtime="20201010 14:28:24.823"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.802" endtime="20201010 14:28:24.824"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.837" endtime="20201010 14:28:24.857"></status>
</kw>
<msg timestamp="20201010 14:28:24.857" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:24.835" endtime="20201010 14:28:24.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.860" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:24.858" endtime="20201010 14:28:24.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.864" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:24.861" endtime="20201010 14:28:24.864"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:24.833" endtime="20201010 14:28:24.865"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:24.830" endtime="20201010 14:28:24.865"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.829" endtime="20201010 14:28:24.865"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:24.869" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:24.869" endtime="20201010 14:28:24.870"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.866" endtime="20201010 14:28:24.870"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.828" endtime="20201010 14:28:24.870"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.827" endtime="20201010 14:28:24.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.871" endtime="20201010 14:28:24.873"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.826" endtime="20201010 14:28:24.873"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.824" endtime="20201010 14:28:24.874"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.799" endtime="20201010 14:28:24.874"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.883" endtime="20201010 14:28:30.441"></status>
</kw>
<msg timestamp="20201010 14:28:30.442" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '57201'}, {'interval': '35189'}, {'interval': '67612'}, {'interval': '60277'}, {'interval': '19991'...</msg>
<status status="PASS" starttime="20201010 14:28:24.882" endtime="20201010 14:28:30.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.448" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '57201'}, {'interval': '35189'}, {'interval': '67612'}, {'interval': '60277'}, {'interval': '19991'...</msg>
<status status="PASS" starttime="20201010 14:28:30.444" endtime="20201010 14:28:30.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.451" endtime="20201010 14:28:30.454"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.879" endtime="20201010 14:28:30.455"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.877" endtime="20201010 14:28:30.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:30.463" level="INFO">${RESULT} = {'interval': [57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674, 14414], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 14:28:30.458" endtime="20201010 14:28:30.464"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:30.474" level="INFO">${interval} = [57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674, 14414]</msg>
<status status="PASS" starttime="20201010 14:28:30.465" endtime="20201010 14:28:30.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.482" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:30.480" endtime="20201010 14:28:30.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.487" level="INFO">VALUE: [57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674, 14414]</msg>
<status status="PASS" starttime="20201010 14:28:30.485" endtime="20201010 14:28:30.488"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.476" endtime="20201010 14:28:30.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.496" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:30.494" endtime="20201010 14:28:30.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.501" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:30.499" endtime="20201010 14:28:30.502"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.490" endtime="20201010 14:28:30.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.514" endtime="20201010 14:28:30.810"></status>
</kw>
<msg timestamp="20201010 14:28:30.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.575138583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.674869875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:30.512" endtime="20201010 14:28:30.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.575138583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.674869875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:30.814" endtime="20201010 14:28:30.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.822" endtime="20201010 14:28:30.824"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.508" endtime="20201010 14:28:30.825"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.504" endtime="20201010 14:28:30.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:30.829" level="INFO">${FILTERED} = [{'diff': 0.09973129199999997}, {'diff': 0.09969555499999994}, {'diff': 0.09975493000000002}, {'diff': 0.09975215199999998}, {'diff': 0.09964506899999992}, {'diff': 0.09970490200000004}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201010 14:28:30.826" endtime="20201010 14:28:30.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:30.834" level="INFO">${RESULT} = {'diff': [0.09973129199999997, 0.09969555499999994, 0.09975493000000002, 0.09975215199999998, 0.09964506899999992, 0.09970490200000004, 0.0996960280000001, 0.09974647199999986, 0.09970840299999995, 0....</msg>
<status status="PASS" starttime="20201010 14:28:30.830" endtime="20201010 14:28:30.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.838" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:30.837" endtime="20201010 14:28:30.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.841" level="INFO">VALUE: [0.09973129199999997, 0.09969555499999994, 0.09975493000000002, 0.09975215199999998, 0.09964506899999992, 0.09970490200000004, 0.0996960280000001, 0.09974647199999986, 0.09970840299999995, 0.09968840300000004, 0.09970308299999986, 0.09973391599999992, 0.09984716599999999, 0.09960461099999995, 0.0996300699999999, 0.09972023600000002, 0.09968855500000018, 0.09971134800000003, 0.09972788899999996, 0.09970349999999994, 0.09970409700000005, 0.09971758299999989, 0.09970019500000005, 0.09965363900000002, 0.09970701400000026, 0.099736944, 0.09971318100000026, 0.09966244499999988, 0.09969072300000015, 0.09971252799999997, 0.0999155970000003, 0.09944748599999986, 0.09972343100000014, 0.09977047200000033, 0.09961044499999971, 0.09973926300000002, 0.10003962499999997, 0.09947288900000029, 0.09973384700000043, 0.09968337499999969, 0.09977757000000054, 0.09968727800000021, 0.09973711100000049, 0.099703667, 0.09963513800000001, 0.09974254199999955, 0.09972863900000029, 0.09973726399999983, 0.09979112500000031, 0.0996013609999995]</msg>
<status status="PASS" starttime="20201010 14:28:30.839" endtime="20201010 14:28:30.841"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.835" endtime="20201010 14:28:30.842"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.875" endtime="20201010 14:28:30.842"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:24.796" endtime="20201010 14:28:30.843" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:30.852" endtime="20201010 14:28:30.872"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.851" endtime="20201010 14:28:30.872"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.886" endtime="20201010 14:28:30.903"></status>
</kw>
<msg timestamp="20201010 14:28:30.903" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:30.884" endtime="20201010 14:28:30.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.906" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['frdm-kw41z', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:30.904" endtime="20201010 14:28:30.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.910" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:30.907" endtime="20201010 14:28:30.911"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:30.881" endtime="20201010 14:28:30.911"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:30.879" endtime="20201010 14:28:30.912"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.878" endtime="20201010 14:28:30.912"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:30.916" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:30.915" endtime="20201010 14:28:30.917"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.913" endtime="20201010 14:28:30.917"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.877" endtime="20201010 14:28:30.917"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.876" endtime="20201010 14:28:30.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.918" endtime="20201010 14:28:30.919"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.875" endtime="20201010 14:28:30.920"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.873" endtime="20201010 14:28:30.920"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.849" endtime="20201010 14:28:30.921"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.930" endtime="20201010 14:28:36.496"></status>
</kw>
<msg timestamp="20201010 14:28:36.497" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '79225'}, {'interval': '55022'}, {'interval': '39603'}, {'interval': '27161'}, {'interval': '60142'...</msg>
<status status="PASS" starttime="20201010 14:28:30.928" endtime="20201010 14:28:36.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.503" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '79225'}, {'interval': '55022'}, {'interval': '39603'}, {'interval': '27161'}, {'interval': '60142'...</msg>
<status status="PASS" starttime="20201010 14:28:36.499" endtime="20201010 14:28:36.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:36.506" endtime="20201010 14:28:36.509"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.926" endtime="20201010 14:28:36.511"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.924" endtime="20201010 14:28:36.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:36.519" level="INFO">${RESULT} = {'interval': [79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976, 81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264], 'focus': [...</msg>
<status status="PASS" starttime="20201010 14:28:36.513" endtime="20201010 14:28:36.519"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:36.530" level="INFO">${interval} = [79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976, 81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264]</msg>
<status status="PASS" starttime="20201010 14:28:36.521" endtime="20201010 14:28:36.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.538" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:36.536" endtime="20201010 14:28:36.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.543" level="INFO">VALUE: [79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976, 81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264]</msg>
<status status="PASS" starttime="20201010 14:28:36.540" endtime="20201010 14:28:36.543"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:36.532" endtime="20201010 14:28:36.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.552" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:36.550" endtime="20201010 14:28:36.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.557" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:36.554" endtime="20201010 14:28:36.557"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:36.546" endtime="20201010 14:28:36.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:36.574" endtime="20201010 14:28:36.870"></status>
</kw>
<msg timestamp="20201010 14:28:36.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.570843222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.670696569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:36.572" endtime="20201010 14:28:36.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.570843222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.670696569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:36.874" endtime="20201010 14:28:36.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:36.882" endtime="20201010 14:28:36.884"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:36.564" endtime="20201010 14:28:36.884"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:36.560" endtime="20201010 14:28:36.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:36.889" level="INFO">${FILTERED} = [{'diff': 0.09985334699999993}, {'diff': 0.09958254200000005}, {'diff': 0.09969854199999995}, {'diff': 0.099731334}, {'diff': 0.09966369500000005}, {'diff': 0.09969358300000009}, {'diff': 0.0996954029...</msg>
<status status="PASS" starttime="20201010 14:28:36.885" endtime="20201010 14:28:36.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:36.893" level="INFO">${RESULT} = {'diff': [0.09985334699999993, 0.09958254200000005, 0.09969854199999995, 0.099731334, 0.09966369500000005, 0.09969358300000009, 0.0996954029999999, 0.09970454200000001, 0.09973291700000009, 0.09965516...</msg>
<status status="PASS" starttime="20201010 14:28:36.890" endtime="20201010 14:28:36.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.897" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:36.896" endtime="20201010 14:28:36.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.899" level="INFO">VALUE: [0.09985334699999993, 0.09958254200000005, 0.09969854199999995, 0.099731334, 0.09966369500000005, 0.09969358300000009, 0.0996954029999999, 0.09970454200000001, 0.09973291700000009, 0.09965516600000002, 0.09974637499999983, 0.09970966699999995, 0.09973202800000003, 0.09970052799999984, 0.09978911099999976, 0.09969194399999992, 0.09966687500000004, 0.09969430599999995, 0.09974952699999973, 0.09984019500000008, 0.09950122200000022, 0.09963658300000011, 0.09976402699999998, 0.09976211099999999, 0.09965066700000014, 0.09972313899999996, 0.09969731900000012, 0.09972773600000018, 0.09973965199999979, 0.0997296809999999, 0.09987336099999977, 0.0995094729999999, 0.09975395799999998, 0.09982609700000022, 0.09965598600000014, 0.09973190199999937, 0.09971451399999953, 0.09964231899999998, 0.09972355599999982, 0.0997468890000004, 0.09966584699999981, 0.09976102799999964, 0.09964108299999985, 0.0997987500000006, 0.09971574999999966, 0.09972537500000023, 0.09972754200000011, 0.09974079100000033, 0.099662264, 0.09971477800000006]</msg>
<status status="PASS" starttime="20201010 14:28:36.898" endtime="20201010 14:28:36.900"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:36.893" endtime="20201010 14:28:36.900"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.922" endtime="20201010 14:28:36.901"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_frdm-kw41z</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:30.846" endtime="20201010 14:28:36.902" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 14:27:59.166" endtime="20201010 14:28:36.910"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">frdm-kw41z</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201010 14:27:57.030" endtime="20201010 14:28:36.936"></status>
</suite>
<statistics>
<total>
<stat pass="7" fail="0">Critical Tests</stat>
<stat pass="7" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="7" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="7" fail="0">BOARD_frdm-kw41z</stat>
<stat pass="7" fail="0">dev</stat>
</tag>
<suite>
<stat pass="7" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="6" fail="0" id="s1-s2" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
