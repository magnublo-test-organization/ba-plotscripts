<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201010 14:27:56.993" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 14:28:00.638" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 14:28:00.646" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 14:28:01.829" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 14:28:00.636" endtime="20201010 14:28:01.831"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 14:28:01.833" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 14:28:01.832" endtime="20201010 14:28:01.834"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.635" endtime="20201010 14:28:01.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:01.836" endtime="20201010 14:28:02.023"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:01.835" endtime="20201010 14:28:02.023"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:02.037" endtime="20201010 14:28:05.059"></status>
</kw>
<msg timestamp="20201010 14:28:05.060" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:02.035" endtime="20201010 14:28:05.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:05.065" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:05.062" endtime="20201010 14:28:05.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:05.072" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:05.067" endtime="20201010 14:28:05.072"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:02.032" endtime="20201010 14:28:05.074"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:02.030" endtime="20201010 14:28:05.075"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:02.029" endtime="20201010 14:28:05.076"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:05.083" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:05.082" endtime="20201010 14:28:05.084"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:05.077" endtime="20201010 14:28:05.084"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:02.028" endtime="20201010 14:28:05.085"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:02.027" endtime="20201010 14:28:05.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:05.087" endtime="20201010 14:28:05.090"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:02.026" endtime="20201010 14:28:05.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:05.092" endtime="20201010 14:28:05.095"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:02.024" endtime="20201010 14:28:05.097"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.633" endtime="20201010 14:28:05.097"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:05.110" endtime="20201010 14:28:05.130"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:05.107" endtime="20201010 14:28:05.131"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:05.145" endtime="20201010 14:28:08.166"></status>
</kw>
<msg timestamp="20201010 14:28:08.167" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:05.144" endtime="20201010 14:28:08.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:08.172" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:08.169" endtime="20201010 14:28:08.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:08.178" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:08.174" endtime="20201010 14:28:08.179"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:05.141" endtime="20201010 14:28:08.180"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:05.138" endtime="20201010 14:28:08.181"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:05.136" endtime="20201010 14:28:08.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:08.189" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:08.188" endtime="20201010 14:28:08.190"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:08.184" endtime="20201010 14:28:08.191"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:05.135" endtime="20201010 14:28:08.191"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:05.134" endtime="20201010 14:28:08.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:08.193" endtime="20201010 14:28:08.196"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:05.133" endtime="20201010 14:28:08.197"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:05.132" endtime="20201010 14:28:08.198"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:05.104" endtime="20201010 14:28:08.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:08.213" endtime="20201010 14:28:08.227"></status>
</kw>
<msg timestamp="20201010 14:28:08.228" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:08.210" endtime="20201010 14:28:08.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:08.233" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:08.230" endtime="20201010 14:28:08.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:08.235" endtime="20201010 14:28:08.239"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:08.204" endtime="20201010 14:28:08.240"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:08.200" endtime="20201010 14:28:08.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:08.249" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201010 14:28:08.247" endtime="20201010 14:28:08.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:08.253" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201010 14:28:08.251" endtime="20201010 14:28:08.254"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:08.242" endtime="20201010 14:28:08.255"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:05.098" endtime="20201010 14:28:08.257" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 14:27:57.105" endtime="20201010 14:28:08.264"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 14:28:08.323" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 14:28:08.331" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 14:28:09.421" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 14:28:08.322" endtime="20201010 14:28:09.421"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 14:28:09.424" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 14:28:09.422" endtime="20201010 14:28:09.424"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:08.321" endtime="20201010 14:28:09.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:09.427" endtime="20201010 14:28:09.646"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:09.425" endtime="20201010 14:28:09.647"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:09.659" endtime="20201010 14:28:12.680"></status>
</kw>
<msg timestamp="20201010 14:28:12.681" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:09.657" endtime="20201010 14:28:12.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.686" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:12.683" endtime="20201010 14:28:12.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.693" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:12.689" endtime="20201010 14:28:12.693"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:09.655" endtime="20201010 14:28:12.694"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:09.653" endtime="20201010 14:28:12.696"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:09.652" endtime="20201010 14:28:12.696"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:12.704" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:12.702" endtime="20201010 14:28:12.705"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.698" endtime="20201010 14:28:12.705"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:09.651" endtime="20201010 14:28:12.705"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:09.650" endtime="20201010 14:28:12.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.707" endtime="20201010 14:28:12.710"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:09.649" endtime="20201010 14:28:12.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.713" endtime="20201010 14:28:12.716"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:09.648" endtime="20201010 14:28:12.717"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:08.319" endtime="20201010 14:28:12.718"></status>
</kw>
<test id="s1-s2-t1" name="0 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:12.732" endtime="20201010 14:28:12.752"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.729" endtime="20201010 14:28:12.753"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.766" endtime="20201010 14:28:15.788"></status>
</kw>
<msg timestamp="20201010 14:28:15.789" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:12.764" endtime="20201010 14:28:15.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:15.795" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:15.792" endtime="20201010 14:28:15.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:15.801" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:15.797" endtime="20201010 14:28:15.802"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:12.762" endtime="20201010 14:28:15.803"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:12.759" endtime="20201010 14:28:15.804"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.758" endtime="20201010 14:28:15.805"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:15.812" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:15.811" endtime="20201010 14:28:15.813"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:15.807" endtime="20201010 14:28:15.813"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.757" endtime="20201010 14:28:15.814"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.757" endtime="20201010 14:28:15.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:15.816" endtime="20201010 14:28:15.819"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.755" endtime="20201010 14:28:15.820"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.754" endtime="20201010 14:28:15.821"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.724" endtime="20201010 14:28:15.821"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:15.840" endtime="20201010 14:28:21.361"></status>
</kw>
<msg timestamp="20201010 14:28:21.362" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:15.837" endtime="20201010 14:28:21.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:21.367" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:21.364" endtime="20201010 14:28:21.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:21.369" endtime="20201010 14:28:21.372"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:15.832" endtime="20201010 14:28:21.373"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:15.827" endtime="20201010 14:28:21.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:21.379" level="INFO">${RESULT} = {'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 14:28:21.376" endtime="20201010 14:28:21.380"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:21.437" level="INFO">${interval} = []</msg>
<status status="PASS" starttime="20201010 14:28:21.381" endtime="20201010 14:28:21.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:21.445" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:21.443" endtime="20201010 14:28:21.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:21.454" level="INFO">VALUE: []</msg>
<status status="PASS" starttime="20201010 14:28:21.447" endtime="20201010 14:28:21.455"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:21.439" endtime="20201010 14:28:21.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:21.464" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:21.461" endtime="20201010 14:28:21.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:21.468" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:21.466" endtime="20201010 14:28:21.469"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:21.457" endtime="20201010 14:28:21.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:21.485" endtime="20201010 14:28:21.791"></status>
</kw>
<msg timestamp="20201010 14:28:21.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.600664931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.700670056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:21.481" endtime="20201010 14:28:21.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:21.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.600664931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.700670056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:21.795" endtime="20201010 14:28:21.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:21.803" endtime="20201010 14:28:21.804"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:21.475" endtime="20201010 14:28:21.805"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:21.471" endtime="20201010 14:28:21.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:21.809" level="INFO">${FILTERED} = [{'diff': 0.10000512500000003}, {'diff': 0.10000512500000003}, {'diff': 0.10000677800000002}, {'diff': 0.10000669400000017}, {'diff': 0.10000829200000005}, {'diff': 0.10000669400000017}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 14:28:21.806" endtime="20201010 14:28:21.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:21.814" level="INFO">${RESULT} = {'diff': [0.10000512500000003, 0.10000512500000003, 0.10000677800000002, 0.10000669400000017, 0.10000829200000005, 0.10000669400000017, 0.10000549999999997, 0.10000536100000001, 0.10000856899999988, 0...</msg>
<status status="PASS" starttime="20201010 14:28:21.810" endtime="20201010 14:28:21.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:21.818" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:21.817" endtime="20201010 14:28:21.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:21.820" level="INFO">VALUE: [0.10000512500000003, 0.10000512500000003, 0.10000677800000002, 0.10000669400000017, 0.10000829200000005, 0.10000669400000017, 0.10000549999999997, 0.10000536100000001, 0.10000856899999988, 0.10000420799999965, 0.10000491599999961, 0.10000656900000049, 0.10000455499999994, 0.10000670800000044, 0.10000691599999989, 0.10000541600000012, 0.10000384699999998, 0.10000933300000003, 0.10000758300000001, 0.10000448600000045, 0.10000655500000022, 0.1000048609999995, 0.10000952800000018, 0.10000558299999973, 0.1000049169999997, 0.1000081530000001, 0.10000956900000002, 0.1000057080000003, 0.10000748599999998, 0.10000315300000029, 0.10000636100000015, 0.10000702800000028, 0.10000563899999992, 0.10000851399999977, 0.10000465199999997, 0.10000520899999987, 0.10000442999999937, 0.1000073050000001, 0.1000037219999994, 0.10000786099999992, 0.1000062220000002, 0.10000587499999991, 0.10000837499999982, 0.1000047360000007, 0.10000536099999913, 0.10000379199999898, 0.10000591700000072, 0.10000691699999997, 0.10000673599999921, 0.10000744400000094]</msg>
<status status="PASS" starttime="20201010 14:28:21.819" endtime="20201010 14:28:21.821"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:21.815" endtime="20201010 14:28:21.821"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:15.823" endtime="20201010 14:28:21.822"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:12.719" endtime="20201010 14:28:21.823" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="5 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:21.831" endtime="20201010 14:28:21.850"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:21.829" endtime="20201010 14:28:21.851"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:21.864" endtime="20201010 14:28:24.885"></status>
</kw>
<msg timestamp="20201010 14:28:24.886" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:21.862" endtime="20201010 14:28:24.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.891" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:24.888" endtime="20201010 14:28:24.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.898" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:24.894" endtime="20201010 14:28:24.899"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:21.860" endtime="20201010 14:28:24.900"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:21.857" endtime="20201010 14:28:24.901"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:21.856" endtime="20201010 14:28:24.902"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:24.910" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:24.908" endtime="20201010 14:28:24.911"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.904" endtime="20201010 14:28:24.911"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:21.855" endtime="20201010 14:28:24.911"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:21.855" endtime="20201010 14:28:24.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.913" endtime="20201010 14:28:24.917"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:21.853" endtime="20201010 14:28:24.918"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:21.851" endtime="20201010 14:28:24.919"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:21.828" endtime="20201010 14:28:24.919"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.940" endtime="20201010 14:28:30.469"></status>
</kw>
<msg timestamp="20201010 14:28:30.470" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '56207'}, {'interval': '42110'}, {'interval': '19271'}, {'interval': '94738'}, {'interval': '34690'}...</msg>
<status status="PASS" starttime="20201010 14:28:24.937" endtime="20201010 14:28:30.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.476" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '56207'}, {'interval': '42110'}, {'interval': '19271'}, {'interval': '94738'}, {'interval': '34690'}...</msg>
<status status="PASS" starttime="20201010 14:28:30.473" endtime="20201010 14:28:30.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.478" endtime="20201010 14:28:30.481"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.931" endtime="20201010 14:28:30.482"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.925" endtime="20201010 14:28:30.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:30.489" level="INFO">${RESULT} = {'interval': [56207, 42110, 19271, 94738, 34690], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 14:28:30.485" endtime="20201010 14:28:30.489"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:30.499" level="INFO">${interval} = [56207, 42110, 19271, 94738, 34690]</msg>
<status status="PASS" starttime="20201010 14:28:30.491" endtime="20201010 14:28:30.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.507" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:30.505" endtime="20201010 14:28:30.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.511" level="INFO">VALUE: [56207, 42110, 19271, 94738, 34690]</msg>
<status status="PASS" starttime="20201010 14:28:30.509" endtime="20201010 14:28:30.512"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.501" endtime="20201010 14:28:30.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.520" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:30.518" endtime="20201010 14:28:30.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.523" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:30.522" endtime="20201010 14:28:30.523"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.514" endtime="20201010 14:28:30.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.530" endtime="20201010 14:28:30.829"></status>
</kw>
<msg timestamp="20201010 14:28:30.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.601182875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.701190681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:30.529" endtime="20201010 14:28:30.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.601182875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.701190681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:30.833" endtime="20201010 14:28:30.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.841" endtime="20201010 14:28:30.843"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.526" endtime="20201010 14:28:30.843"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.524" endtime="20201010 14:28:30.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:30.848" level="INFO">${FILTERED} = [{'diff': 0.10000780599999981}, {'diff': 0.10000858399999979}, {'diff': 0.10000666699999972}, {'diff': 0.10000726399999982}, {'diff': 0.10000813900000072}, {'diff': 0.10000330600000051}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 14:28:30.845" endtime="20201010 14:28:30.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:30.852" level="INFO">${RESULT} = {'diff': [0.10000780599999981, 0.10000858399999979, 0.10000666699999972, 0.10000726399999982, 0.10000813900000072, 0.10000330600000051, 0.10000891600000017, 0.10000612499999928, 0.10000426399999984, 0...</msg>
<status status="PASS" starttime="20201010 14:28:30.849" endtime="20201010 14:28:30.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.857" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:30.856" endtime="20201010 14:28:30.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.859" level="INFO">VALUE: [0.10000780599999981, 0.10000858399999979, 0.10000666699999972, 0.10000726399999982, 0.10000813900000072, 0.10000330600000051, 0.10000891600000017, 0.10000612499999928, 0.10000426399999984, 0.10000563899999992, 0.10000506999999992, 0.10000779199999954, 0.10000436099999988, 0.10000805600000007, 0.1000076390000002, 0.10000615299999982, 0.10000513800000022, 0.10000729100000072, 0.10000579100000007, 0.10000851399999977, 0.10000412499999989, 0.10000426399999984, 0.10000949999999964, 0.1000071810000005, 0.10000419400000027, 0.10000836099999955, 0.1000073059999993, 0.10000587499999991, 0.10000618100000036, 0.10000865299999973, 0.10000499999999946, 0.10000808299999964, 0.10000549999999997, 0.10000323600000005, 0.10000444400000053, 0.10000672199999983, 0.10000687499999916, 0.10000731999999957, 0.10000658399999995, 0.1000058199999998, 0.10000431899999995, 0.10000822200000048, 0.10000444399999964, 0.10000915299999935, 0.1000045140000001, 0.10000866699999911, 0.10000558399999981, 0.10000668099999999, 0.10000540300000083, 0.10000694400000043]</msg>
<status status="PASS" starttime="20201010 14:28:30.858" endtime="20201010 14:28:30.859"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.853" endtime="20201010 14:28:30.860"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.921" endtime="20201010 14:28:30.860"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:21.825" endtime="20201010 14:28:30.861" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="10 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:30.869" endtime="20201010 14:28:30.889"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.868" endtime="20201010 14:28:30.889"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.902" endtime="20201010 14:28:33.924"></status>
</kw>
<msg timestamp="20201010 14:28:33.925" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:30.900" endtime="20201010 14:28:33.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:33.930" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:33.927" endtime="20201010 14:28:33.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:33.937" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:33.933" endtime="20201010 14:28:33.938"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:30.898" endtime="20201010 14:28:33.939"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:30.895" endtime="20201010 14:28:33.941"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.894" endtime="20201010 14:28:33.941"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:33.949" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:33.947" endtime="20201010 14:28:33.950"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:33.943" endtime="20201010 14:28:33.950"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.893" endtime="20201010 14:28:33.951"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.893" endtime="20201010 14:28:33.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:33.953" endtime="20201010 14:28:33.956"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.892" endtime="20201010 14:28:33.957"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.890" endtime="20201010 14:28:33.958"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.866" endtime="20201010 14:28:33.958"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:33.977" endtime="20201010 14:28:39.517"></status>
</kw>
<msg timestamp="20201010 14:28:39.518" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '22114'}, {'interval': '67521'}, {'interval': '17040'}, {'interval': '71822'}, {'interval': '90731'...</msg>
<status status="PASS" starttime="20201010 14:28:33.974" endtime="20201010 14:28:39.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:39.524" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '22114'}, {'interval': '67521'}, {'interval': '17040'}, {'interval': '71822'}, {'interval': '90731'...</msg>
<status status="PASS" starttime="20201010 14:28:39.520" endtime="20201010 14:28:39.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:39.526" endtime="20201010 14:28:39.529"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:33.968" endtime="20201010 14:28:39.530"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:33.963" endtime="20201010 14:28:39.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:39.537" level="INFO">${RESULT} = {'interval': [22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 14:28:39.533" endtime="20201010 14:28:39.538"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:39.543" level="INFO">${interval} = [22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113]</msg>
<status status="PASS" starttime="20201010 14:28:39.539" endtime="20201010 14:28:39.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:39.547" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:39.546" endtime="20201010 14:28:39.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:39.549" level="INFO">VALUE: [22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113]</msg>
<status status="PASS" starttime="20201010 14:28:39.548" endtime="20201010 14:28:39.549"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:39.544" endtime="20201010 14:28:39.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:39.553" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:39.552" endtime="20201010 14:28:39.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:39.555" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:39.554" endtime="20201010 14:28:39.555"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:39.550" endtime="20201010 14:28:39.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:39.563" endtime="20201010 14:28:39.862"></status>
</kw>
<msg timestamp="20201010 14:28:39.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.599451472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.699456917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:39.561" endtime="20201010 14:28:39.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:39.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.599451472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.699456917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:39.866" endtime="20201010 14:28:39.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:39.874" endtime="20201010 14:28:39.875"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:39.558" endtime="20201010 14:28:39.876"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:39.557" endtime="20201010 14:28:39.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:39.880" level="INFO">${FILTERED} = [{'diff': 0.10000544499999986}, {'diff': 0.10000527800000025}, {'diff': 0.10000584700000026}, {'diff': 0.1000034030000001}, {'diff': 0.10000619399999966}, {'diff': 0.10000549999999997}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201010 14:28:39.877" endtime="20201010 14:28:39.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:39.884" level="INFO">${RESULT} = {'diff': [0.10000544499999986, 0.10000527800000025, 0.10000584700000026, 0.1000034030000001, 0.10000619399999966, 0.10000549999999997, 0.10000697200000008, 0.10000588900000018, 0.100007014, 0.10000455...</msg>
<status status="PASS" starttime="20201010 14:28:39.881" endtime="20201010 14:28:39.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:39.888" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:39.887" endtime="20201010 14:28:39.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:39.891" level="INFO">VALUE: [0.10000544499999986, 0.10000527800000025, 0.10000584700000026, 0.1000034030000001, 0.10000619399999966, 0.10000549999999997, 0.10000697200000008, 0.10000588900000018, 0.100007014, 0.10000455499999994, 0.1000060549999997, 0.10000741599999952, 0.10000955599999983, 0.10000634799999997, 0.10000699999999973, 0.10000320900000048, 0.10000516699999995, 0.10000759699999939, 0.10000598600000021, 0.10000591599999975, 0.10000655599999941, 0.1000046250000004, 0.10000544499999986, 0.10000874999999976, 0.10000640300000008, 0.10000820800000021, 0.10000427800000011, 0.1000077079999997, 0.10000558300000062, 0.10000536100000001, 0.10000862499999918, 0.10000327799999997, 0.10000734700000002, 0.1000060420000004, 0.10000448599999956, 0.10000540299999994, 0.10000422199999992, 0.10000861100000069, 0.10000523599999944, 0.10000915299999935, 0.10000413899999927, 0.1000059310000001, 0.10000807000000034, 0.10000558399999981, 0.10000801400000014, 0.10000419500000035, 0.10000419500000035, 0.10000673599999921, 0.10000786099999992, 0.10000450000000072]</msg>
<status status="PASS" starttime="20201010 14:28:39.889" endtime="20201010 14:28:39.891"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:39.885" endtime="20201010 14:28:39.891"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:33.960" endtime="20201010 14:28:39.892"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:30.864" endtime="20201010 14:28:39.893" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="15 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:39.900" endtime="20201010 14:28:39.919"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:39.898" endtime="20201010 14:28:39.920"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:39.935" endtime="20201010 14:28:42.957"></status>
</kw>
<msg timestamp="20201010 14:28:42.958" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:39.934" endtime="20201010 14:28:42.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:42.963" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:42.960" endtime="20201010 14:28:42.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:42.970" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:42.966" endtime="20201010 14:28:42.971"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:39.931" endtime="20201010 14:28:42.972"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:39.929" endtime="20201010 14:28:42.974"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:39.928" endtime="20201010 14:28:42.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:42.982" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:42.980" endtime="20201010 14:28:42.983"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:42.976" endtime="20201010 14:28:42.983"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:39.927" endtime="20201010 14:28:42.983"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:39.926" endtime="20201010 14:28:42.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:42.985" endtime="20201010 14:28:42.988"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:39.922" endtime="20201010 14:28:42.990"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:39.921" endtime="20201010 14:28:42.991"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:39.897" endtime="20201010 14:28:42.991"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:43.010" endtime="20201010 14:28:48.562"></status>
</kw>
<msg timestamp="20201010 14:28:48.564" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '12297'}, {'interval': '68502'}, {'interval': '38802'}, {'interval': '52517'}, {'interval': '69027'...</msg>
<status status="PASS" starttime="20201010 14:28:43.007" endtime="20201010 14:28:48.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:48.569" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '12297'}, {'interval': '68502'}, {'interval': '38802'}, {'interval': '52517'}, {'interval': '69027'...</msg>
<status status="PASS" starttime="20201010 14:28:48.566" endtime="20201010 14:28:48.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:48.572" endtime="20201010 14:28:48.575"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:43.001" endtime="20201010 14:28:48.576"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:42.996" endtime="20201010 14:28:48.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:48.583" level="INFO">${RESULT} = {'interval': [12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 14:28:48.579" endtime="20201010 14:28:48.583"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:48.593" level="INFO">${interval} = [12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297]</msg>
<status status="PASS" starttime="20201010 14:28:48.585" endtime="20201010 14:28:48.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:48.601" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:48.599" endtime="20201010 14:28:48.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:48.606" level="INFO">VALUE: [12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297]</msg>
<status status="PASS" starttime="20201010 14:28:48.603" endtime="20201010 14:28:48.606"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:48.595" endtime="20201010 14:28:48.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:48.617" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:48.613" endtime="20201010 14:28:48.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:48.621" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:48.619" endtime="20201010 14:28:48.622"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:48.609" endtime="20201010 14:28:48.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:48.632" endtime="20201010 14:28:48.933"></status>
</kw>
<msg timestamp="20201010 14:28:48.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.602709597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.702713736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:48.631" endtime="20201010 14:28:48.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:48.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.602709597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.702713736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:48.937" endtime="20201010 14:28:48.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:48.945" endtime="20201010 14:28:48.946"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:48.628" endtime="20201010 14:28:48.947"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:48.624" endtime="20201010 14:28:48.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:48.951" level="INFO">${FILTERED} = [{'diff': 0.10000413900000016}, {'diff': 0.10000708299999994}, {'diff': 0.10000641599999982}, {'diff': 0.10000647200000046}, {'diff': 0.10000748599999998}, {'diff': 0.10000670800000044}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 14:28:48.948" endtime="20201010 14:28:48.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:48.955" level="INFO">${RESULT} = {'diff': [0.10000413900000016, 0.10000708299999994, 0.10000641599999982, 0.10000647200000046, 0.10000748599999998, 0.10000670800000044, 0.10000562499999965, 0.10000663799999998, 0.10000448699999964, 0...</msg>
<status status="PASS" starttime="20201010 14:28:48.952" endtime="20201010 14:28:48.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:48.959" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:48.958" endtime="20201010 14:28:48.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:48.962" level="INFO">VALUE: [0.10000413900000016, 0.10000708299999994, 0.10000641599999982, 0.10000647200000046, 0.10000748599999998, 0.10000670800000044, 0.10000562499999965, 0.10000663799999998, 0.10000448699999964, 0.10000576399999961, 0.10000684799999959, 0.10000954200000045, 0.10000506999999992, 0.1000072369999998, 0.10000615299999982, 0.10000557000000043, 0.10000420799999965, 0.10000799999999987, 0.10000704199999966, 0.10000623599999958, 0.10000694500000051, 0.10002022199999949, 0.09999083300000056, 0.10000784699999965, 0.10000547200000032, 0.1000076390000002, 0.1000070700000002, 0.10000641699999946, 0.10000834700000016, 0.10000605599999979, 0.10000441700000007, 0.10000858400000023, 0.10000500000000034, 0.10000763899999932, 0.10000480600000028, 0.10000529200000052, 0.10000851399999977, 0.10000586100000053, 0.10000481899999958, 0.1000032080000004, 0.10000623699999966, 0.10000686099999978, 0.10000829099999997, 0.10000891600000017, 0.1000078060000007, 0.10000572200000057, 0.10000580600000042, 0.10000716700000112, 0.10000472199999955, 0.10000575000000111]</msg>
<status status="PASS" starttime="20201010 14:28:48.960" endtime="20201010 14:28:48.963"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:48.956" endtime="20201010 14:28:48.963"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:42.993" endtime="20201010 14:28:48.964"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:39.894" endtime="20201010 14:28:48.964" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="20 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:48.972" endtime="20201010 14:28:48.991"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:48.970" endtime="20201010 14:28:48.992"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:49.004" endtime="20201010 14:28:52.026"></status>
</kw>
<msg timestamp="20201010 14:28:52.027" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:49.003" endtime="20201010 14:28:52.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:52.032" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:52.029" endtime="20201010 14:28:52.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:52.039" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:52.034" endtime="20201010 14:28:52.039"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:49.000" endtime="20201010 14:28:52.041"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:48.998" endtime="20201010 14:28:52.042"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:48.997" endtime="20201010 14:28:52.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:52.050" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:52.049" endtime="20201010 14:28:52.051"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:52.044" endtime="20201010 14:28:52.051"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:48.996" endtime="20201010 14:28:52.052"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:48.995" endtime="20201010 14:28:52.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:52.054" endtime="20201010 14:28:52.057"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:48.994" endtime="20201010 14:28:52.058"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:48.992" endtime="20201010 14:28:52.059"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:48.969" endtime="20201010 14:28:52.060"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:52.080" endtime="20201010 14:28:57.644"></status>
</kw>
<msg timestamp="20201010 14:28:57.645" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '57201'}, {'interval': '35189'}, {'interval': '67612'}, {'interval': '60277'}, {'interval': '19991'...</msg>
<status status="PASS" starttime="20201010 14:28:52.075" endtime="20201010 14:28:57.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:57.651" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '57201'}, {'interval': '35189'}, {'interval': '67612'}, {'interval': '60277'}, {'interval': '19991'...</msg>
<status status="PASS" starttime="20201010 14:28:57.647" endtime="20201010 14:28:57.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:57.653" endtime="20201010 14:28:57.656"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:52.070" endtime="20201010 14:28:57.657"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:52.065" endtime="20201010 14:28:57.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:57.665" level="INFO">${RESULT} = {'interval': [57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674, 14414], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 14:28:57.660" endtime="20201010 14:28:57.665"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:57.675" level="INFO">${interval} = [57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674, 14414]</msg>
<status status="PASS" starttime="20201010 14:28:57.667" endtime="20201010 14:28:57.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:57.679" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:57.678" endtime="20201010 14:28:57.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:57.681" level="INFO">VALUE: [57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674, 14414]</msg>
<status status="PASS" starttime="20201010 14:28:57.680" endtime="20201010 14:28:57.682"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:57.676" endtime="20201010 14:28:57.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:57.685" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:57.685" endtime="20201010 14:28:57.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:57.688" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:57.687" endtime="20201010 14:28:57.688"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:57.683" endtime="20201010 14:28:57.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:57.695" endtime="20201010 14:28:57.995"></status>
</kw>
<msg timestamp="20201010 14:28:57.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.601819167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.701825958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:57.693" endtime="20201010 14:28:57.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:58.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.601819167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.701825958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:57.999" endtime="20201010 14:28:58.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:58.007" endtime="20201010 14:28:58.009"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:57.691" endtime="20201010 14:28:58.010"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:57.689" endtime="20201010 14:28:58.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:58.014" level="INFO">${FILTERED} = [{'diff': 0.1000067910000002}, {'diff': 0.10000804100000016}, {'diff': 0.10000648599999984}, {'diff': 0.1000041949999999}, {'diff': 0.10000947300000007}, {'diff': 0.10000427800000011}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201010 14:28:58.011" endtime="20201010 14:28:58.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:58.018" level="INFO">${RESULT} = {'diff': [0.1000067910000002, 0.10000804100000016, 0.10000648599999984, 0.1000041949999999, 0.10000947300000007, 0.10000427800000011, 0.10000768000000004, 0.10000426399999984, 0.10000433300000022, 0.1...</msg>
<status status="PASS" starttime="20201010 14:28:58.015" endtime="20201010 14:28:58.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:58.023" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:58.021" endtime="20201010 14:28:58.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:58.025" level="INFO">VALUE: [0.1000067910000002, 0.10000804100000016, 0.10000648599999984, 0.1000041949999999, 0.10000947300000007, 0.10000427800000011, 0.10000768000000004, 0.10000426399999984, 0.10000433300000022, 0.10000848600000012, 0.10000763899999932, 0.10000683300000013, 0.10000443000000026, 0.10000612500000017, 0.1000063890000007, 0.100005597, 0.1000084999999995, 0.10000615200000063, 0.100006402, 0.10000836099999955, 0.10000913899999997, 0.10000520799999979, 0.10000692999999927, 0.10000722199999945, 0.10000852699999996, 0.10000458300000048, 0.10000412499999989, 0.10000675000000037, 0.10000626400000012, 0.10000544399999978, 0.10000949999999964, 0.10000434799999969, 0.10000713899999969, 0.10000549999999997, 0.10000608299999936, 0.10000626399999923, 0.10000944500000042, 0.10000770900000067, 0.10000698599999946, 0.1000094159999998, 0.10000308299999983, 0.10000720800000007, 0.10000526399999998, 0.10000519400000041, 0.10000859699999864, 0.1000032080000004, 0.10000555500000097, 0.10000593000000002, 0.10000484699999923, 0.10000608300000025]</msg>
<status status="PASS" starttime="20201010 14:28:58.024" endtime="20201010 14:28:58.025"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:58.019" endtime="20201010 14:28:58.026"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:52.061" endtime="20201010 14:28:58.026"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:48.966" endtime="20201010 14:28:58.027" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:58.036" endtime="20201010 14:28:58.056"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:58.035" endtime="20201010 14:28:58.057"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:58.069" endtime="20201010 14:29:01.091"></status>
</kw>
<msg timestamp="20201010 14:29:01.092" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:58.068" endtime="20201010 14:29:01.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:29:01.097" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:29:01.094" endtime="20201010 14:29:01.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:29:01.109" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:29:01.104" endtime="20201010 14:29:01.109"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:58.065" endtime="20201010 14:29:01.111"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:58.063" endtime="20201010 14:29:01.112"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:58.062" endtime="20201010 14:29:01.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:29:01.120" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:29:01.118" endtime="20201010 14:29:01.121"></status>
</kw>
<status status="PASS" starttime="20201010 14:29:01.114" endtime="20201010 14:29:01.121"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:58.061" endtime="20201010 14:29:01.121"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:58.060" endtime="20201010 14:29:01.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:29:01.123" endtime="20201010 14:29:01.126"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:58.059" endtime="20201010 14:29:01.127"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:58.057" endtime="20201010 14:29:01.128"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:58.034" endtime="20201010 14:29:01.129"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:29:01.148" endtime="20201010 14:29:06.721"></status>
</kw>
<msg timestamp="20201010 14:29:06.722" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '79225'}, {'interval': '55022'}, {'interval': '39603'}, {'interval': '27161'}, {'interval': '60142'...</msg>
<status status="PASS" starttime="20201010 14:29:01.144" endtime="20201010 14:29:06.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:29:06.728" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '79225'}, {'interval': '55022'}, {'interval': '39603'}, {'interval': '27161'}, {'interval': '60142'...</msg>
<status status="PASS" starttime="20201010 14:29:06.724" endtime="20201010 14:29:06.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:29:06.730" endtime="20201010 14:29:06.733"></status>
</kw>
<status status="PASS" starttime="20201010 14:29:01.139" endtime="20201010 14:29:06.734"></status>
</kw>
<status status="PASS" starttime="20201010 14:29:01.134" endtime="20201010 14:29:06.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:29:06.742" level="INFO">${RESULT} = {'interval': [79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976, 81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264], 'focus': [...</msg>
<status status="PASS" starttime="20201010 14:29:06.737" endtime="20201010 14:29:06.742"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:29:06.752" level="INFO">${interval} = [79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976, 81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264]</msg>
<status status="PASS" starttime="20201010 14:29:06.744" endtime="20201010 14:29:06.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:29:06.760" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:29:06.758" endtime="20201010 14:29:06.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:29:06.764" level="INFO">VALUE: [79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976, 81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264]</msg>
<status status="PASS" starttime="20201010 14:29:06.762" endtime="20201010 14:29:06.765"></status>
</kw>
<status status="PASS" starttime="20201010 14:29:06.754" endtime="20201010 14:29:06.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:29:06.775" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:29:06.773" endtime="20201010 14:29:06.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:29:06.780" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:29:06.778" endtime="20201010 14:29:06.781"></status>
</kw>
<status status="PASS" starttime="20201010 14:29:06.769" endtime="20201010 14:29:06.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:29:06.801" endtime="20201010 14:29:07.100"></status>
</kw>
<msg timestamp="20201010 14:29:07.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.604390458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.704415847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:29:06.799" endtime="20201010 14:29:07.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:29:07.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.604390458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.704415847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:29:07.104" endtime="20201010 14:29:07.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:29:07.112" endtime="20201010 14:29:07.114"></status>
</kw>
<status status="PASS" starttime="20201010 14:29:06.787" endtime="20201010 14:29:07.115"></status>
</kw>
<status status="PASS" starttime="20201010 14:29:06.783" endtime="20201010 14:29:07.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:29:07.119" level="INFO">${FILTERED} = [{'diff': 0.1000253889999998}, {'diff': 0.09998895900000004}, {'diff': 0.10000323700000013}, {'diff': 0.1000064859999994}, {'diff': 0.10000648599999984}, {'diff': 0.10000426399999984}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201010 14:29:07.116" endtime="20201010 14:29:07.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:29:07.123" level="INFO">${RESULT} = {'diff': [0.1000253889999998, 0.09998895900000004, 0.10000323700000013, 0.1000064859999994, 0.10000648599999984, 0.10000426399999984, 0.10000716700000023, 0.10000418, 0.10000876400000003, 0.1000071800...</msg>
<status status="PASS" starttime="20201010 14:29:07.120" endtime="20201010 14:29:07.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:29:07.127" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:29:07.126" endtime="20201010 14:29:07.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:29:07.129" level="INFO">VALUE: [0.1000253889999998, 0.09998895900000004, 0.10000323700000013, 0.1000064859999994, 0.10000648599999984, 0.10000426399999984, 0.10000716700000023, 0.10000418, 0.10000876400000003, 0.10000718000000042, 0.10000905500000012, 0.10000791700000011, 0.10000758300000001, 0.10000633299999961, 0.1000076950000004, 0.1000045140000001, 0.1000074169999996, 0.10000776399999989, 0.10000461100000013, 0.10000543099999959, 0.10000420800000054, 0.10000718000000042, 0.1000084870000002, 0.10000430600000065, 0.10000544399999978, 0.1000059999999996, 0.10000643000000053, 0.1000088890000006, 0.10000797199999933, 0.10000598600000021, 0.10000465299999917, 0.10000806899999937, 0.10000511099999976, 0.10000445799999991, 0.10000498599999919, 0.10000598600000021, 0.10000438800000033, 0.10000858300000015, 0.10000534700000063, 0.10000433300000022, 0.10000784699999965, 0.1000057080000003, 0.10000737499999968, 0.10000438900000042, 0.1000070140000009, 0.10000866700000088, 0.10000413900000105, 0.10000751399999963, 0.10000438900000042, 0.10000709700000066]</msg>
<status status="PASS" starttime="20201010 14:29:07.128" endtime="20201010 14:29:07.130"></status>
</kw>
<status status="PASS" starttime="20201010 14:29:07.124" endtime="20201010 14:29:07.130"></status>
</kw>
<status status="PASS" starttime="20201010 14:29:01.130" endtime="20201010 14:29:07.131"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:58.030" endtime="20201010 14:29:07.131" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 14:28:08.279" endtime="20201010 14:29:07.139"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201010 14:27:56.997" endtime="20201010 14:29:07.165"></status>
</suite>
<statistics>
<total>
<stat pass="7" fail="0">Critical Tests</stat>
<stat pass="7" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="7" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="7" fail="0">BOARD_arduino-due</stat>
<stat pass="7" fail="0">dev</stat>
</tag>
<suite>
<stat pass="7" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="6" fail="0" id="s1-s2" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
