<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201010 12:24:53.154" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 12:24:56.786" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 12:24:56.794" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 12:24:57.934" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 12:24:56.785" endtime="20201010 12:24:57.936"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 12:24:57.941" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 12:24:57.938" endtime="20201010 12:24:57.942"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.783" endtime="20201010 12:24:57.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:57.945" endtime="20201010 12:24:58.130"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:57.943" endtime="20201010 12:24:58.131"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:58.144" endtime="20201010 12:25:01.165"></status>
</kw>
<msg timestamp="20201010 12:25:01.166" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:58.142" endtime="20201010 12:25:01.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:01.172" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:01.169" endtime="20201010 12:25:01.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:01.179" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:01.174" endtime="20201010 12:25:01.180"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:58.139" endtime="20201010 12:25:01.181"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:58.137" endtime="20201010 12:25:01.182"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:58.136" endtime="20201010 12:25:01.183"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:01.193" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:01.191" endtime="20201010 12:25:01.194"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:01.185" endtime="20201010 12:25:01.194"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:58.135" endtime="20201010 12:25:01.195"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:58.134" endtime="20201010 12:25:01.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:01.197" endtime="20201010 12:25:01.200"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:58.133" endtime="20201010 12:25:01.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:01.203" endtime="20201010 12:25:01.206"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:58.131" endtime="20201010 12:25:01.208"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:56.781" endtime="20201010 12:25:01.208"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:01.222" endtime="20201010 12:25:01.244"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:01.219" endtime="20201010 12:25:01.246"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:01.275" endtime="20201010 12:25:04.300"></status>
</kw>
<msg timestamp="20201010 12:25:04.301" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:01.272" endtime="20201010 12:25:04.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:04.307" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:04.303" endtime="20201010 12:25:04.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:04.314" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:04.310" endtime="20201010 12:25:04.315"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:01.266" endtime="20201010 12:25:04.316"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:01.261" endtime="20201010 12:25:04.318"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:01.257" endtime="20201010 12:25:04.318"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:04.327" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:04.325" endtime="20201010 12:25:04.328"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:04.320" endtime="20201010 12:25:04.328"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:01.255" endtime="20201010 12:25:04.328"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:01.254" endtime="20201010 12:25:04.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:04.330" endtime="20201010 12:25:04.334"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:01.251" endtime="20201010 12:25:04.335"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:01.247" endtime="20201010 12:25:04.336"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:01.216" endtime="20201010 12:25:04.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:04.355" endtime="20201010 12:25:04.366"></status>
</kw>
<msg timestamp="20201010 12:25:04.367" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:04.353" endtime="20201010 12:25:04.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:04.369" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:04.368" endtime="20201010 12:25:04.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:04.370" endtime="20201010 12:25:04.372"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:04.345" endtime="20201010 12:25:04.372"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:04.340" endtime="20201010 12:25:04.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:04.378" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201010 12:25:04.377" endtime="20201010 12:25:04.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:04.380" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201010 12:25:04.379" endtime="20201010 12:25:04.380"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:04.374" endtime="20201010 12:25:04.381"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:01.209" endtime="20201010 12:25:04.382" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 12:24:53.267" endtime="20201010 12:25:04.385"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 12:25:04.440" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 12:25:04.447" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 12:25:05.535" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 12:25:04.439" endtime="20201010 12:25:05.536"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 12:25:05.539" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 12:25:05.537" endtime="20201010 12:25:05.539"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:04.438" endtime="20201010 12:25:05.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:05.541" endtime="20201010 12:25:05.765"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:05.540" endtime="20201010 12:25:05.766"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:05.780" endtime="20201010 12:25:08.803"></status>
</kw>
<msg timestamp="20201010 12:25:08.804" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:05.777" endtime="20201010 12:25:08.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:08.810" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:08.807" endtime="20201010 12:25:08.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:08.817" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:08.812" endtime="20201010 12:25:08.818"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:05.774" endtime="20201010 12:25:08.819"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:05.772" endtime="20201010 12:25:08.820"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:05.771" endtime="20201010 12:25:08.821"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:08.829" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:08.827" endtime="20201010 12:25:08.830"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:08.823" endtime="20201010 12:25:08.830"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:05.770" endtime="20201010 12:25:08.831"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:05.769" endtime="20201010 12:25:08.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:08.833" endtime="20201010 12:25:08.836"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:05.768" endtime="20201010 12:25:08.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:08.839" endtime="20201010 12:25:08.842"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:05.766" endtime="20201010 12:25:08.843"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:04.436" endtime="20201010 12:25:08.844"></status>
</kw>
<test id="s1-s2-t1" name="0 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:08.863" endtime="20201010 12:25:08.883"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:08.858" endtime="20201010 12:25:08.883"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:08.897" endtime="20201010 12:25:11.919"></status>
</kw>
<msg timestamp="20201010 12:25:11.920" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:08.895" endtime="20201010 12:25:11.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:11.927" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:11.923" endtime="20201010 12:25:11.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:11.933" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:11.929" endtime="20201010 12:25:11.934"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:08.893" endtime="20201010 12:25:11.935"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:08.890" endtime="20201010 12:25:11.936"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:08.889" endtime="20201010 12:25:11.937"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:11.945" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:11.944" endtime="20201010 12:25:11.946"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:11.939" endtime="20201010 12:25:11.947"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:08.888" endtime="20201010 12:25:11.947"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:08.887" endtime="20201010 12:25:11.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:11.949" endtime="20201010 12:25:11.952"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:08.886" endtime="20201010 12:25:11.953"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:08.884" endtime="20201010 12:25:11.954"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:08.855" endtime="20201010 12:25:11.955"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:11.975" endtime="20201010 12:25:17.994"></status>
</kw>
<msg timestamp="20201010 12:25:17.995" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:11.972" endtime="20201010 12:25:17.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:18.001" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:17.998" endtime="20201010 12:25:18.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:18.003" endtime="20201010 12:25:18.009"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:11.966" endtime="20201010 12:25:18.010"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:11.961" endtime="20201010 12:25:18.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:18.016" level="INFO">${RESULT} = {'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:18.013" endtime="20201010 12:25:18.017"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:18.078" level="INFO">${interval} = []</msg>
<status status="PASS" starttime="20201010 12:25:18.019" endtime="20201010 12:25:18.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:18.084" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:18.083" endtime="20201010 12:25:18.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:18.086" level="INFO">VALUE: []</msg>
<status status="PASS" starttime="20201010 12:25:18.085" endtime="20201010 12:25:18.086"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:18.080" endtime="20201010 12:25:18.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:18.090" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:18.089" endtime="20201010 12:25:18.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:18.092" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:18.091" endtime="20201010 12:25:18.093"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:18.087" endtime="20201010 12:25:18.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:18.105" endtime="20201010 12:25:18.406"></status>
</kw>
<msg timestamp="20201010 12:25:18.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.103866514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.203876722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:18.098" endtime="20201010 12:25:18.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:18.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.103866514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.203876722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:18.410" endtime="20201010 12:25:18.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:18.418" endtime="20201010 12:25:18.419"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:18.096" endtime="20201010 12:25:18.420"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:18.094" endtime="20201010 12:25:18.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:18.424" level="INFO">${FILTERED} = [{'diff': 0.10001020800000049}, {'diff': 0.10001183299999994}, {'diff': 0.10001087499999972}, {'diff': 0.10001134700000058}, {'diff': 0.1000108329999998}, {'diff': 0.10001084700000007}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201010 12:25:18.421" endtime="20201010 12:25:18.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:18.429" level="INFO">${RESULT} = {'diff': [0.10001020800000049, 0.10001183299999994, 0.10001087499999972, 0.10001134700000058, 0.1000108329999998, 0.10001084700000007, 0.10001086100000034, 5.419999995481817e-07, 5.420000004363601e-07...</msg>
<status status="PASS" starttime="20201010 12:25:18.425" endtime="20201010 12:25:18.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:18.433" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:18.432" endtime="20201010 12:25:18.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:18.436" level="INFO">VALUE: [0.10001020800000049, 0.10001183299999994, 0.10001087499999972, 0.10001134700000058, 0.1000108329999998, 0.10001084700000007, 0.10001086100000034, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.1000113469999997, 0.10001084700000007, 0.1000108329999998, 0.1000108329999998, 0.10001086099999945, 0.10001084800000015, 5.409999994654413e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 0.10001133299999942, 0.10001084700000007, 0.10001084700000007, 0.10001084800000015, 0.10001084800000015, 0.10001084700000007, 0.10001084700000007, 0.10001084700000007, 0.10001084700000007, 0.10001084700000007, 0.10001084700000007, 0.10001086099999945, 0.10001083400000077, 0.10001084800000015, 0.10001086100000123, 0.10001084700000007, 0.10001084700000007]</msg>
<status status="PASS" starttime="20201010 12:25:18.434" endtime="20201010 12:25:18.436"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:18.430" endtime="20201010 12:25:18.437"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:11.957" endtime="20201010 12:25:18.437"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:08.845" endtime="20201010 12:25:18.438" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="5 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:18.447" endtime="20201010 12:25:18.467"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:18.446" endtime="20201010 12:25:18.468"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:18.481" endtime="20201010 12:25:21.503"></status>
</kw>
<msg timestamp="20201010 12:25:21.504" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:18.480" endtime="20201010 12:25:21.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:21.510" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:21.507" endtime="20201010 12:25:21.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:21.518" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:21.513" endtime="20201010 12:25:21.518"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:18.477" endtime="20201010 12:25:21.520"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:18.474" endtime="20201010 12:25:21.521"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:18.473" endtime="20201010 12:25:21.522"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:21.530" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:21.528" endtime="20201010 12:25:21.531"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:21.524" endtime="20201010 12:25:21.531"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:18.472" endtime="20201010 12:25:21.532"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:18.471" endtime="20201010 12:25:21.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:21.534" endtime="20201010 12:25:21.537"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:18.470" endtime="20201010 12:25:21.538"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:18.468" endtime="20201010 12:25:21.539"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:18.444" endtime="20201010 12:25:21.540"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:21.564" endtime="20201010 12:25:27.594"></status>
</kw>
<msg timestamp="20201010 12:25:27.595" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '10741'}, {'interval': '84225'}, {'interval': '46186'}, {'interval': '37795'}, {'interval': '34698'}...</msg>
<status status="PASS" starttime="20201010 12:25:21.560" endtime="20201010 12:25:27.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.601" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '10741'}, {'interval': '84225'}, {'interval': '46186'}, {'interval': '37795'}, {'interval': '34698'}...</msg>
<status status="PASS" starttime="20201010 12:25:27.598" endtime="20201010 12:25:27.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:27.604" endtime="20201010 12:25:27.607"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:21.552" endtime="20201010 12:25:27.608"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:21.547" endtime="20201010 12:25:27.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:27.615" level="INFO">${RESULT} = {'interval': [10741, 84225, 46186, 37795, 34698], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:27.611" endtime="20201010 12:25:27.615"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:27.626" level="INFO">${interval} = [10741, 84225, 46186, 37795, 34698]</msg>
<status status="PASS" starttime="20201010 12:25:27.617" endtime="20201010 12:25:27.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.634" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:27.632" endtime="20201010 12:25:27.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.639" level="INFO">VALUE: [10741, 84225, 46186, 37795, 34698]</msg>
<status status="PASS" starttime="20201010 12:25:27.637" endtime="20201010 12:25:27.640"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.628" endtime="20201010 12:25:27.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.648" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:27.646" endtime="20201010 12:25:27.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.652" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:27.651" endtime="20201010 12:25:27.652"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.642" endtime="20201010 12:25:27.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:27.659" endtime="20201010 12:25:27.957"></status>
</kw>
<msg timestamp="20201010 12:25:27.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.108251528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.20826275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201010 12:25:27.658" endtime="20201010 12:25:27.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.108251528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.20826275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201010 12:25:27.961" endtime="20201010 12:25:27.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:27.968" endtime="20201010 12:25:27.970"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.655" endtime="20201010 12:25:27.971"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.653" endtime="20201010 12:25:27.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:27.975" level="INFO">${FILTERED} = [{'diff': 0.10001122200000001}, {'diff': 0.10001081900000042}, {'diff': 0.1000108329999998}, {'diff': 0.10001086100000034}, {'diff': 0.1000108329999998}, {'diff': 0.10001086099999945}, {'diff': 5.4199...</msg>
<status status="PASS" starttime="20201010 12:25:27.972" endtime="20201010 12:25:27.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:27.980" level="INFO">${RESULT} = {'diff': [0.10001122200000001, 0.10001081900000042, 0.1000108329999998, 0.10001086100000034, 0.1000108329999998, 0.10001086099999945, 5.419999995481817e-07, 5.419999995481817e-07, 0.10001133399999951,...</msg>
<status status="PASS" starttime="20201010 12:25:27.976" endtime="20201010 12:25:27.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.984" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:27.983" endtime="20201010 12:25:27.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.987" level="INFO">VALUE: [0.10001122200000001, 0.10001081900000042, 0.1000108329999998, 0.10001086100000034, 0.1000108329999998, 0.10001086099999945, 5.419999995481817e-07, 5.419999995481817e-07, 0.10001133399999951, 0.10001084800000015, 0.10001083400000077, 0.10001083399999988, 0.10001086100000034, 0.1000108329999998, 0.10001084700000007, 0.10001084700000007, 0.10001081899999953, 0.10001086099999945, 0.1000108329999998, 0.10001084699999918, 0.10001086100000034, 5.410000003536197e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 0.10001143000000035, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999986600033e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999985772629e-07, 0.10001137499999935, 0.10001088899999999, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201010 12:25:27.986" endtime="20201010 12:25:27.987"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.981" endtime="20201010 12:25:27.988"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:21.542" endtime="20201010 12:25:27.988"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:18.441" endtime="20201010 12:25:27.989" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="10 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:27.999" endtime="20201010 12:25:28.018"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.997" endtime="20201010 12:25:28.019"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:28.032" endtime="20201010 12:25:31.054"></status>
</kw>
<msg timestamp="20201010 12:25:31.055" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:28.031" endtime="20201010 12:25:31.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:31.061" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:31.058" endtime="20201010 12:25:31.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:31.068" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:31.063" endtime="20201010 12:25:31.069"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:28.028" endtime="20201010 12:25:31.072"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:28.025" endtime="20201010 12:25:31.073"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.024" endtime="20201010 12:25:31.074"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:31.082" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:31.081" endtime="20201010 12:25:31.083"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:31.076" endtime="20201010 12:25:31.083"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.023" endtime="20201010 12:25:31.084"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.023" endtime="20201010 12:25:31.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:31.086" endtime="20201010 12:25:31.089"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.021" endtime="20201010 12:25:31.090"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:28.019" endtime="20201010 12:25:31.091"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.995" endtime="20201010 12:25:31.092"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:31.110" endtime="20201010 12:25:37.151"></status>
</kw>
<msg timestamp="20201010 12:25:37.152" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '37694'}, {'interval': '23825'}, {'interval': '30414'}, {'interval': '39030'}, {'interval': '45533'...</msg>
<status status="PASS" starttime="20201010 12:25:31.109" endtime="20201010 12:25:37.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:37.158" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '37694'}, {'interval': '23825'}, {'interval': '30414'}, {'interval': '39030'}, {'interval': '45533'...</msg>
<status status="PASS" starttime="20201010 12:25:37.154" endtime="20201010 12:25:37.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:37.160" endtime="20201010 12:25:37.164"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:31.104" endtime="20201010 12:25:37.165"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:31.099" endtime="20201010 12:25:37.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:37.172" level="INFO">${RESULT} = {'interval': [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:37.168" endtime="20201010 12:25:37.173"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:37.183" level="INFO">${interval} = [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]</msg>
<status status="PASS" starttime="20201010 12:25:37.174" endtime="20201010 12:25:37.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:37.191" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:37.189" endtime="20201010 12:25:37.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:37.196" level="INFO">VALUE: [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]</msg>
<status status="PASS" starttime="20201010 12:25:37.194" endtime="20201010 12:25:37.197"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:37.185" endtime="20201010 12:25:37.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:37.205" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:37.203" endtime="20201010 12:25:37.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:37.210" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:37.208" endtime="20201010 12:25:37.211"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:37.199" endtime="20201010 12:25:37.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:37.219" endtime="20201010 12:25:37.518"></status>
</kw>
<msg timestamp="20201010 12:25:37.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.102412917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.202424111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:37.217" endtime="20201010 12:25:37.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:37.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.102412917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.202424111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:37.522" endtime="20201010 12:25:37.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:37.531" endtime="20201010 12:25:37.533"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:37.214" endtime="20201010 12:25:37.533"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:37.212" endtime="20201010 12:25:37.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:37.538" level="INFO">${FILTERED} = [{'diff': 0.10001119400000036}, {'diff': 0.10001086100000034}, {'diff': 5.420000004363601e-07}, {'diff': 5.419999995481817e-07}, {'diff': 5.420000004363601e-07}, {'diff': 0.09998784699999952}, {'diff'...</msg>
<status status="PASS" starttime="20201010 12:25:37.534" endtime="20201010 12:25:37.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:37.542" level="INFO">${RESULT} = {'diff': [0.10001119400000036, 0.10001086100000034, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 0.09998784699999952, 0.10001083399999988, 0.10001086199999953, 0.10001081999999...</msg>
<status status="PASS" starttime="20201010 12:25:37.539" endtime="20201010 12:25:37.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:37.546" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:37.545" endtime="20201010 12:25:37.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:37.548" level="INFO">VALUE: [0.10001119400000036, 0.10001086100000034, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 0.09998784699999952, 0.10001083399999988, 0.10001086199999953, 0.10001081999999961, 0.10000898599999974, 0.10001272199999978, 0.10001081899999953, 0.10001086099999945, 0.1000108329999998, 0.10001083300000069, 0.10001086100000034, 0.10001083300000069, 0.10001084700000007, 0.10001084700000007, 0.10001083399999988, 0.10001086199999953, 0.10001083399999988, 0.10001087499999972, 0.10001083300000069, 0.10001084700000007, 0.10001084699999918, 0.10001084700000007, 0.1000108880000008, 5.409999994654413e-07, 0.10001134700000058, 0.10001087500000061, 0.10001087499999972, 5.419999995481817e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999986600033e-07, 5.420000004363601e-07, 5.410000003536197e-07, 0.10001133299999942, 0.10001086099999945, 0.10001084700000007, 0.10001084700000007, 0.10001087500000061, 0.10001084700000007]</msg>
<status status="PASS" starttime="20201010 12:25:37.547" endtime="20201010 12:25:37.549"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:37.542" endtime="20201010 12:25:37.549"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:31.094" endtime="20201010 12:25:37.550"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:27.992" endtime="20201010 12:25:37.551" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="15 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:37.560" endtime="20201010 12:25:37.580"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:37.558" endtime="20201010 12:25:37.580"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:37.594" endtime="20201010 12:25:40.618"></status>
</kw>
<msg timestamp="20201010 12:25:40.619" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:37.593" endtime="20201010 12:25:40.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:40.624" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:40.621" endtime="20201010 12:25:40.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:40.632" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:40.627" endtime="20201010 12:25:40.633"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:37.590" endtime="20201010 12:25:40.634"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:37.587" endtime="20201010 12:25:40.635"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:37.585" endtime="20201010 12:25:40.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:40.644" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:40.643" endtime="20201010 12:25:40.645"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:40.638" endtime="20201010 12:25:40.646"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:37.585" endtime="20201010 12:25:40.646"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:37.584" endtime="20201010 12:25:40.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:40.648" endtime="20201010 12:25:40.651"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:37.583" endtime="20201010 12:25:40.653"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:37.581" endtime="20201010 12:25:40.654"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:37.557" endtime="20201010 12:25:40.654"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:40.676" endtime="20201010 12:25:46.731"></status>
</kw>
<msg timestamp="20201010 12:25:46.732" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '52653'}, {'interval': '31223'}, {'interval': '17873'}, {'interval': '99702'}, {'interval': '86231'...</msg>
<status status="PASS" starttime="20201010 12:25:40.672" endtime="20201010 12:25:46.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:46.738" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '52653'}, {'interval': '31223'}, {'interval': '17873'}, {'interval': '99702'}, {'interval': '86231'...</msg>
<status status="PASS" starttime="20201010 12:25:46.734" endtime="20201010 12:25:46.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:46.740" endtime="20201010 12:25:46.744"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:40.667" endtime="20201010 12:25:46.745"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:40.662" endtime="20201010 12:25:46.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:46.752" level="INFO">${RESULT} = {'interval': [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:46.748" endtime="20201010 12:25:46.753"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:46.763" level="INFO">${interval} = [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]</msg>
<status status="PASS" starttime="20201010 12:25:46.755" endtime="20201010 12:25:46.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:46.772" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:46.770" endtime="20201010 12:25:46.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:46.776" level="INFO">VALUE: [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]</msg>
<status status="PASS" starttime="20201010 12:25:46.774" endtime="20201010 12:25:46.777"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:46.765" endtime="20201010 12:25:46.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:46.788" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:46.784" endtime="20201010 12:25:46.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:46.793" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:46.791" endtime="20201010 12:25:46.794"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:46.780" endtime="20201010 12:25:46.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:46.802" endtime="20201010 12:25:47.098"></status>
</kw>
<msg timestamp="20201010 12:25:47.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.108740597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.20875175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201010 12:25:46.800" endtime="20201010 12:25:47.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:47.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.108740597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.20875175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201010 12:25:47.102" endtime="20201010 12:25:47.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:47.110" endtime="20201010 12:25:47.112"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:46.797" endtime="20201010 12:25:47.113"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:46.795" endtime="20201010 12:25:47.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:47.117" level="INFO">${FILTERED} = [{'diff': 0.10001115300000052}, {'diff': 0.10001087500000061}, {'diff': 5.420000004363601e-07}, {'diff': 5.419999995481817e-07}, {'diff': 0.10001130599999986}, {'diff': 0.10001083400000077}, {'diff': ...</msg>
<status status="PASS" starttime="20201010 12:25:47.114" endtime="20201010 12:25:47.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:47.121" level="INFO">${RESULT} = {'diff': [0.10001115300000052, 0.10001087500000061, 5.420000004363601e-07, 5.419999995481817e-07, 0.10001130599999986, 0.10001083400000077, 0.10001083399999988, 0.10001084800000015, 0.1000251250000001...</msg>
<status status="PASS" starttime="20201010 12:25:47.118" endtime="20201010 12:25:47.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:47.125" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:47.124" endtime="20201010 12:25:47.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:47.128" level="INFO">VALUE: [0.10001115300000052, 0.10001087500000061, 5.420000004363601e-07, 5.419999995481817e-07, 0.10001130599999986, 0.10001083400000077, 0.10001083399999988, 0.10001084800000015, 0.10002512500000016, 0.09999654199999952, 0.10001086099999945, 0.10001084700000007, 0.10001081900000042, 0.10001084700000007, 0.10001084700000007, 0.1000108329999998, 0.10001091699999964, 5.419999995481817e-07, 0.10001136099999997, 0.10001086100000034, 0.10001084800000015, 0.10001084700000007, 0.1000108329999998, 0.10001084700000007, 0.10001084700000007, 0.1000108329999998, 0.10001087500000061, 0.10001081900000042, 0.10001086100000034, 0.10001086200000042, 0.10001083399999988, 0.10001084700000007, 0.10001084700000007, 0.10001086100000034, 0.10001084700000007, 0.10001084700000007, 0.10001086100000034, 0.10001084800000015, 0.10001084700000007, 0.10001087500000061, 0.10001083299999891, 0.10001084700000007, 0.10001086099999945, 0.10001084800000015, 0.10001086100000123, 0.10001087499999883, 0.10001136099999997]</msg>
<status status="PASS" starttime="20201010 12:25:47.126" endtime="20201010 12:25:47.128"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.122" endtime="20201010 12:25:47.129"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:40.657" endtime="20201010 12:25:47.129"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:37.554" endtime="20201010 12:25:47.130" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="20 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:47.140" endtime="20201010 12:25:47.160"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.138" endtime="20201010 12:25:47.160"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:47.174" endtime="20201010 12:25:50.196"></status>
</kw>
<msg timestamp="20201010 12:25:50.197" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:47.172" endtime="20201010 12:25:50.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:50.202" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:50.199" endtime="20201010 12:25:50.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:50.210" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:50.205" endtime="20201010 12:25:50.210"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:47.170" endtime="20201010 12:25:50.212"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:47.167" endtime="20201010 12:25:50.213"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.166" endtime="20201010 12:25:50.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:50.222" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:50.220" endtime="20201010 12:25:50.223"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:50.216" endtime="20201010 12:25:50.223"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.165" endtime="20201010 12:25:50.223"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.164" endtime="20201010 12:25:50.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:50.225" endtime="20201010 12:25:50.229"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.163" endtime="20201010 12:25:50.230"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.161" endtime="20201010 12:25:50.231"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.136" endtime="20201010 12:25:50.232"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:50.251" endtime="20201010 12:25:56.319"></status>
</kw>
<msg timestamp="20201010 12:25:56.320" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '27660'}, {'interval': '24774'}, {'interval': '50283'}, {'interval': '17455'}, {'interval': '56207'...</msg>
<status status="PASS" starttime="20201010 12:25:50.248" endtime="20201010 12:25:56.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:56.327" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '27660'}, {'interval': '24774'}, {'interval': '50283'}, {'interval': '17455'}, {'interval': '56207'...</msg>
<status status="PASS" starttime="20201010 12:25:56.323" endtime="20201010 12:25:56.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:56.329" endtime="20201010 12:25:56.335"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:50.242" endtime="20201010 12:25:56.336"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:50.237" endtime="20201010 12:25:56.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:56.344" level="INFO">${RESULT} = {'interval': [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196], 'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:56.339" endtime="20201010 12:25:56.344"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:56.355" level="INFO">${interval} = [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]</msg>
<status status="PASS" starttime="20201010 12:25:56.346" endtime="20201010 12:25:56.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:56.363" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:56.361" endtime="20201010 12:25:56.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:56.368" level="INFO">VALUE: [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]</msg>
<status status="PASS" starttime="20201010 12:25:56.365" endtime="20201010 12:25:56.369"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:56.357" endtime="20201010 12:25:56.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:56.375" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:56.374" endtime="20201010 12:25:56.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:56.377" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:56.376" endtime="20201010 12:25:56.377"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:56.371" endtime="20201010 12:25:56.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:56.385" endtime="20201010 12:25:56.682"></status>
</kw>
<msg timestamp="20201010 12:25:56.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.1048275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.204838681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201010 12:25:56.383" endtime="20201010 12:25:56.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:56.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.1048275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.204838681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201010 12:25:56.686" endtime="20201010 12:25:56.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:56.693" endtime="20201010 12:25:56.695"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:56.380" endtime="20201010 12:25:56.696"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:56.378" endtime="20201010 12:25:56.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:56.700" level="INFO">${FILTERED} = [{'diff': 0.10001118100000017}, {'diff': 0.10001088899999999}, {'diff': 5.410000003536197e-07}, {'diff': 5.419999995481817e-07}, {'diff': 5.420000004363601e-07}, {'diff': 0.10001133300000031}, {'diff'...</msg>
<status status="PASS" starttime="20201010 12:25:56.697" endtime="20201010 12:25:56.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:56.705" level="INFO">${RESULT} = {'diff': [0.10001118100000017, 0.10001088899999999, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 0.10001133300000031, 0.10001084700000007, 0.1000108329999998, 0.100010846999999...</msg>
<status status="PASS" starttime="20201010 12:25:56.701" endtime="20201010 12:25:56.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:56.709" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:56.708" endtime="20201010 12:25:56.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:56.712" level="INFO">VALUE: [0.10001118100000017, 0.10001088899999999, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 0.10001133300000031, 0.10001084700000007, 0.1000108329999998, 0.10001084699999918, 0.1000108329999998, 0.10001084700000007, 0.10001086100000034, 0.10001087500000061, 5.410000003536197e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.409999994654413e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 0.10001136099999997, 0.10001087499999972, 5.419999995481817e-07, 0.10001131900000004, 0.10001087500000061, 0.10001083300000069, 0.10001084700000007, 0.10001084799999838, 0.10001086100000123, 0.10001086100000123, 0.10001086100000123, 0.10001084700000007, 0.10001084700000007, 0.10001086199999953, 0.10001090299999937]</msg>
<status status="PASS" starttime="20201010 12:25:56.710" endtime="20201010 12:25:56.712"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:56.706" endtime="20201010 12:25:56.713"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:50.233" endtime="20201010 12:25:56.713"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:47.133" endtime="20201010 12:25:56.714" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:56.722" endtime="20201010 12:25:56.741"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:56.720" endtime="20201010 12:25:56.742"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:56.755" endtime="20201010 12:25:59.778"></status>
</kw>
<msg timestamp="20201010 12:25:59.779" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:56.754" endtime="20201010 12:25:59.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:59.784" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:59.781" endtime="20201010 12:25:59.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:59.792" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:59.787" endtime="20201010 12:25:59.792"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:56.751" endtime="20201010 12:25:59.794"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:56.749" endtime="20201010 12:25:59.795"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:56.748" endtime="20201010 12:25:59.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:59.806" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:59.804" endtime="20201010 12:25:59.807"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:59.798" endtime="20201010 12:25:59.807"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:56.747" endtime="20201010 12:25:59.808"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:56.746" endtime="20201010 12:25:59.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:59.810" endtime="20201010 12:25:59.813"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:56.744" endtime="20201010 12:25:59.814"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:56.743" endtime="20201010 12:25:59.815"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:56.719" endtime="20201010 12:25:59.816"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:59.833" endtime="20201010 12:26:05.909"></status>
</kw>
<msg timestamp="20201010 12:26:05.911" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '16291'}, {'interval': '74117'}, {'interval': '74576'}, {'interval': '31746'}, {'interval': '33340'...</msg>
<status status="PASS" starttime="20201010 12:25:59.831" endtime="20201010 12:26:05.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:05.917" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '16291'}, {'interval': '74117'}, {'interval': '74576'}, {'interval': '31746'}, {'interval': '33340'...</msg>
<status status="PASS" starttime="20201010 12:26:05.913" endtime="20201010 12:26:05.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:05.919" endtime="20201010 12:26:05.923"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:59.828" endtime="20201010 12:26:05.924"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:59.823" endtime="20201010 12:26:05.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:05.932" level="INFO">${RESULT} = {'interval': [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248], 'focus': [...</msg>
<status status="PASS" starttime="20201010 12:26:05.927" endtime="20201010 12:26:05.933"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:05.942" level="INFO">${interval} = [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248]</msg>
<status status="PASS" starttime="20201010 12:26:05.934" endtime="20201010 12:26:05.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:05.946" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:05.945" endtime="20201010 12:26:05.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:05.948" level="INFO">VALUE: [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248]</msg>
<status status="PASS" starttime="20201010 12:26:05.947" endtime="20201010 12:26:05.948"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:05.943" endtime="20201010 12:26:05.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:05.952" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:05.951" endtime="20201010 12:26:05.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:05.955" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:05.954" endtime="20201010 12:26:05.955"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:05.950" endtime="20201010 12:26:05.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:05.963" endtime="20201010 12:26:06.260"></status>
</kw>
<msg timestamp="20201010 12:26:06.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.102972236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.202983417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:05.961" endtime="20201010 12:26:06.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:06.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.102972236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.202983417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:06.264" endtime="20201010 12:26:06.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:06.271" endtime="20201010 12:26:06.273"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:05.958" endtime="20201010 12:26:06.274"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:05.956" endtime="20201010 12:26:06.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:06.278" level="INFO">${FILTERED} = [{'diff': 0.10001118100000017}, {'diff': 0.10001090300000026}, {'diff': 0.10001134799999978}, {'diff': 0.10001083399999988}, {'diff': 0.10001083399999988}, {'diff': 0.10001084700000007}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:26:06.275" endtime="20201010 12:26:06.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:06.282" level="INFO">${RESULT} = {'diff': [0.10001118100000017, 0.10001090300000026, 0.10001134799999978, 0.10001083399999988, 0.10001083399999988, 0.10001084700000007, 0.1000108329999998, 0.10001084700000007, 0.10001081900000042, 0....</msg>
<status status="PASS" starttime="20201010 12:26:06.279" endtime="20201010 12:26:06.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:06.286" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:06.285" endtime="20201010 12:26:06.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:06.289" level="INFO">VALUE: [0.10001118100000017, 0.10001090300000026, 0.10001134799999978, 0.10001083399999988, 0.10001083399999988, 0.10001084700000007, 0.1000108329999998, 0.10001084700000007, 0.10001081900000042, 0.10001086100000034, 0.10001081900000042, 0.1000108329999998, 0.10001084700000007, 0.10001084700000007, 0.1000108329999998, 0.1000108329999998, 0.10001091600000045, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 0.10001133300000031, 0.1000108329999998, 0.10001086100000034, 0.10001083300000069, 0.10001084700000007, 0.10001086199999953, 0.10002566699999971, 0.09999602699999954, 0.10001087499999972, 5.419999995481817e-07, 5.419999986600033e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.409999985772629e-07, 0.1000113330000012, 0.10001086100000123, 0.10001083300000069, 0.10001086099999945, 0.10001084800000015, 0.10001087499999883]</msg>
<status status="PASS" starttime="20201010 12:26:06.287" endtime="20201010 12:26:06.289"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:06.283" endtime="20201010 12:26:06.290"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:59.818" endtime="20201010 12:26:06.290"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:56.716" endtime="20201010 12:26:06.291" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="30 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:06.299" endtime="20201010 12:26:06.318"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:06.297" endtime="20201010 12:26:06.319"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:06.333" endtime="20201010 12:26:09.356"></status>
</kw>
<msg timestamp="20201010 12:26:09.357" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:06.332" endtime="20201010 12:26:09.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:09.362" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:09.359" endtime="20201010 12:26:09.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:09.370" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:09.366" endtime="20201010 12:26:09.370"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:06.329" endtime="20201010 12:26:09.372"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:06.326" endtime="20201010 12:26:09.373"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:06.324" endtime="20201010 12:26:09.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:09.382" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:09.380" endtime="20201010 12:26:09.383"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.376" endtime="20201010 12:26:09.383"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:06.324" endtime="20201010 12:26:09.384"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:06.323" endtime="20201010 12:26:09.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:09.386" endtime="20201010 12:26:09.389"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:06.321" endtime="20201010 12:26:09.390"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:06.320" endtime="20201010 12:26:09.391"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:06.296" endtime="20201010 12:26:09.392"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>30</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:09.413" endtime="20201010 12:26:15.502"></status>
</kw>
<msg timestamp="20201010 12:26:15.503" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 30 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '74757'}, {'interval': '70347'}, {'interval': '33034'}, {'interval': '80423'}, {'interval': '79926'...</msg>
<status status="PASS" starttime="20201010 12:26:09.410" endtime="20201010 12:26:15.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.510" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 30 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '74757'}, {'interval': '70347'}, {'interval': '33034'}, {'interval': '80423'}, {'interval': '79926'...</msg>
<status status="PASS" starttime="20201010 12:26:15.506" endtime="20201010 12:26:15.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.512" endtime="20201010 12:26:15.516"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.404" endtime="20201010 12:26:15.517"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.399" endtime="20201010 12:26:15.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:15.529" level="INFO">${RESULT} = {'interval': [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 5814...</msg>
<status status="PASS" starttime="20201010 12:26:15.522" endtime="20201010 12:26:15.529"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:15.542" level="INFO">${interval} = [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 58146, 28867, 669...</msg>
<status status="PASS" starttime="20201010 12:26:15.531" endtime="20201010 12:26:15.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.550" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:15.548" endtime="20201010 12:26:15.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.554" level="INFO">VALUE: [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 58146, 28867, 66958, 17521]</msg>
<status status="PASS" starttime="20201010 12:26:15.552" endtime="20201010 12:26:15.555"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.544" endtime="20201010 12:26:15.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.561" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:15.560" endtime="20201010 12:26:15.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.563" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:15.562" endtime="20201010 12:26:15.564"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.557" endtime="20201010 12:26:15.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.571" endtime="20201010 12:26:15.876"></status>
</kw>
<msg timestamp="20201010 12:26:15.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.106201472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.206213667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:15.570" endtime="20201010 12:26:15.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.106201472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.206213667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:15.880" endtime="20201010 12:26:15.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.888" endtime="20201010 12:26:15.889"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.567" endtime="20201010 12:26:15.890"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.565" endtime="20201010 12:26:15.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:15.894" level="INFO">${FILTERED} = [{'diff': 0.10001219499999969}, {'diff': 0.10001083400000077}, {'diff': 0.10001083399999988}, {'diff': 0.10001083399999988}, {'diff': 0.10000976400000017}, {'diff': 5.409999994654413e-07}, {'diff': 5....</msg>
<status status="PASS" starttime="20201010 12:26:15.891" endtime="20201010 12:26:15.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:15.899" level="INFO">${RESULT} = {'diff': [0.10001219499999969, 0.10001083400000077, 0.10001083399999988, 0.10001083399999988, 0.10000976400000017, 5.409999994654413e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.41000000353619...</msg>
<status status="PASS" starttime="20201010 12:26:15.895" endtime="20201010 12:26:15.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.903" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:15.902" endtime="20201010 12:26:15.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.905" level="INFO">VALUE: [0.10001219499999969, 0.10001083400000077, 0.10001083399999988, 0.10001083399999988, 0.10000976400000017, 5.409999994654413e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.410000003536197e-07, 0.10001141700000016, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.410000003536197e-07, 0.10001133399999951, 0.10001091699999964, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.1000113469999997, 0.10003233399999978, 0.09998933399999999, 0.10001086200000042, 0.10001090299999937, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.410000003536197e-07, 0.10001136099999997, 0.10001084700000007, 0.10001084700000007, 0.10001087499999883, 0.10001090199999929]</msg>
<status status="PASS" starttime="20201010 12:26:15.904" endtime="20201010 12:26:15.906"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.900" endtime="20201010 12:26:15.906"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:09.394" endtime="20201010 12:26:15.907"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:06.293" endtime="20201010 12:26:15.908" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="35 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:15.915" endtime="20201010 12:26:15.934"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.913" endtime="20201010 12:26:15.935"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.948" endtime="20201010 12:26:18.969"></status>
</kw>
<msg timestamp="20201010 12:26:18.970" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:15.946" endtime="20201010 12:26:18.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:18.976" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:18.972" endtime="20201010 12:26:18.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:18.982" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:18.978" endtime="20201010 12:26:18.983"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:15.944" endtime="20201010 12:26:18.984"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:15.941" endtime="20201010 12:26:18.985"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.940" endtime="20201010 12:26:18.986"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:18.994" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:18.992" endtime="20201010 12:26:18.994"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:18.988" endtime="20201010 12:26:18.995"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.939" endtime="20201010 12:26:18.995"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.939" endtime="20201010 12:26:18.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:18.997" endtime="20201010 12:26:19.001"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.937" endtime="20201010 12:26:19.002"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.936" endtime="20201010 12:26:19.003"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.912" endtime="20201010 12:26:19.003"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>35</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:19.020" endtime="20201010 12:26:25.117"></status>
</kw>
<msg timestamp="20201010 12:26:25.118" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 35 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '54295'}, {'interval': '37199'}, {'interval': '39990'}, {'interval': '20568'}, {'interval': '10171'...</msg>
<status status="PASS" starttime="20201010 12:26:19.018" endtime="20201010 12:26:25.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:25.124" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 35 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '54295'}, {'interval': '37199'}, {'interval': '39990'}, {'interval': '20568'}, {'interval': '10171'...</msg>
<status status="PASS" starttime="20201010 12:26:25.120" endtime="20201010 12:26:25.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:25.127" endtime="20201010 12:26:25.129"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:19.013" endtime="20201010 12:26:25.129"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:19.008" endtime="20201010 12:26:25.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:25.133" level="INFO">${RESULT} = {'interval': [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 4353...</msg>
<status status="PASS" starttime="20201010 12:26:25.131" endtime="20201010 12:26:25.134"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:25.138" level="INFO">${interval} = [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 43539, 68459, 281...</msg>
<status status="PASS" starttime="20201010 12:26:25.134" endtime="20201010 12:26:25.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:25.142" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:25.141" endtime="20201010 12:26:25.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:25.144" level="INFO">VALUE: [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 43539, 68459, 28154, 76170, 13496, 73105, 63810, 92352, 47335]</msg>
<status status="PASS" starttime="20201010 12:26:25.143" endtime="20201010 12:26:25.144"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:25.139" endtime="20201010 12:26:25.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:25.148" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:25.147" endtime="20201010 12:26:25.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:25.150" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:25.149" endtime="20201010 12:26:25.151"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:25.145" endtime="20201010 12:26:25.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:25.158" endtime="20201010 12:26:25.458"></status>
</kw>
<msg timestamp="20201010 12:26:25.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.098479097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.198491306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:25.157" endtime="20201010 12:26:25.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:25.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.098479097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.198491306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:25.461" endtime="20201010 12:26:25.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:25.469" endtime="20201010 12:26:25.471"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:25.154" endtime="20201010 12:26:25.471"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:25.152" endtime="20201010 12:26:25.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:25.476" level="INFO">${FILTERED} = [{'diff': 0.10001220899999996}, {'diff': 0.10000982000000036}, {'diff': 0.10001083399999988}, {'diff': 0.10001084800000015}, {'diff': 0.10000893099999963}, {'diff': 0.10001273700000013}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:26:25.472" endtime="20201010 12:26:25.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:25.480" level="INFO">${RESULT} = {'diff': [0.10001220899999996, 0.10000982000000036, 0.10001083399999988, 0.10001084800000015, 0.10000893099999963, 0.10001273700000013, 0.10001083399999988, 0.10001083399999988, 0.10000944499999953, 0...</msg>
<status status="PASS" starttime="20201010 12:26:25.477" endtime="20201010 12:26:25.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:25.484" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:25.483" endtime="20201010 12:26:25.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:25.486" level="INFO">VALUE: [0.10001220899999996, 0.10000982000000036, 0.10001083399999988, 0.10001084800000015, 0.10000893099999963, 0.10001273700000013, 0.10001083399999988, 0.10001083399999988, 0.10000944499999953, 0.10001324999999994, 0.10000983300000055, 0.1000108329999998, 0.1000108329999998, 0.1000108329999998, 0.10001084700000007, 0.10001084700000007, 0.10001083300000069, 0.10001084700000007, 0.10004238899999951, 5.420000004363601e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.409999994654413e-07, 0.10001136099999997, 0.10001084700000007, 0.10001084700000007, 0.1000108329999998, 0.10001087499999972, 5.419999995481817e-07, 5.410000003536197e-07, 5.410000003536197e-07, 0.1000113469999997, 0.10001084700000007, 0.10001086100000034, 0.100038305, 0.09998440300000055, 0.10000983399999974, 0.10001087500000061, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999985772629e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201010 12:26:25.485" endtime="20201010 12:26:25.486"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:25.480" endtime="20201010 12:26:25.487"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:19.005" endtime="20201010 12:26:25.487"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:15.909" endtime="20201010 12:26:25.488" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="40 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:25.495" endtime="20201010 12:26:25.515"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:25.494" endtime="20201010 12:26:25.515"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:25.529" endtime="20201010 12:26:28.550"></status>
</kw>
<msg timestamp="20201010 12:26:28.551" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:25.528" endtime="20201010 12:26:28.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:28.557" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:28.554" endtime="20201010 12:26:28.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:28.563" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:28.559" endtime="20201010 12:26:28.564"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:25.525" endtime="20201010 12:26:28.565"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:25.522" endtime="20201010 12:26:28.566"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:25.521" endtime="20201010 12:26:28.567"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:28.575" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:28.573" endtime="20201010 12:26:28.575"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:28.569" endtime="20201010 12:26:28.576"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:25.520" endtime="20201010 12:26:28.576"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:25.519" endtime="20201010 12:26:28.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:28.578" endtime="20201010 12:26:28.581"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:25.518" endtime="20201010 12:26:28.582"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:25.516" endtime="20201010 12:26:28.583"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:25.492" endtime="20201010 12:26:28.584"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>40</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:28.603" endtime="20201010 12:26:34.710"></status>
</kw>
<msg timestamp="20201010 12:26:34.710" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 40 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '63910'}, {'interval': '51619'}, {'interval': '66290'}, {'interval': '40380'}, {'interval': '35046'...</msg>
<status status="PASS" starttime="20201010 12:26:28.599" endtime="20201010 12:26:34.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:34.713" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 40 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '63910'}, {'interval': '51619'}, {'interval': '66290'}, {'interval': '40380'}, {'interval': '35046'...</msg>
<status status="PASS" starttime="20201010 12:26:34.711" endtime="20201010 12:26:34.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:34.714" endtime="20201010 12:26:34.716"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:28.594" endtime="20201010 12:26:34.716"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:28.589" endtime="20201010 12:26:34.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:34.721" level="INFO">${RESULT} = {'interval': [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 1736...</msg>
<status status="PASS" starttime="20201010 12:26:34.718" endtime="20201010 12:26:34.722"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:34.726" level="INFO">${interval} = [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 17369, 86767, 529...</msg>
<status status="PASS" starttime="20201010 12:26:34.723" endtime="20201010 12:26:34.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:34.730" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:34.729" endtime="20201010 12:26:34.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:34.732" level="INFO">VALUE: [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674]</msg>
<status status="PASS" starttime="20201010 12:26:34.731" endtime="20201010 12:26:34.733"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:34.727" endtime="20201010 12:26:34.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:34.737" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:34.736" endtime="20201010 12:26:34.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:34.739" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:34.738" endtime="20201010 12:26:34.739"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:34.734" endtime="20201010 12:26:34.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:34.746" endtime="20201010 12:26:35.041"></status>
</kw>
<msg timestamp="20201010 12:26:35.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.102038958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.202050181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:34.745" endtime="20201010 12:26:35.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:35.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.102038958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.202050181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:35.044" endtime="20201010 12:26:35.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:35.052" endtime="20201010 12:26:35.054"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:34.742" endtime="20201010 12:26:35.054"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:34.741" endtime="20201010 12:26:35.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:35.058" level="INFO">${FILTERED} = [{'diff': 0.1000112230000001}, {'diff': 0.1000113469999997}, {'diff': 0.10006466599999975}, {'diff': 0.09999469399999938}, {'diff': 0.10001084700000007}, {'diff': 0.1000108329999998}, {'diff': 0.10001...</msg>
<status status="PASS" starttime="20201010 12:26:35.055" endtime="20201010 12:26:35.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:35.063" level="INFO">${RESULT} = {'diff': [0.1000112230000001, 0.1000113469999997, 0.10006466599999975, 0.09999469399999938, 0.10001084700000007, 0.1000108329999998, 0.10001084700000007, 0.10001083400000077, 0.10001083399999988, 0.10...</msg>
<status status="PASS" starttime="20201010 12:26:35.059" endtime="20201010 12:26:35.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:35.067" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:35.066" endtime="20201010 12:26:35.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:35.070" level="INFO">VALUE: [0.1000112230000001, 0.1000113469999997, 0.10006466599999975, 0.09999469399999938, 0.10001084700000007, 0.1000108329999998, 0.10001084700000007, 0.10001083400000077, 0.10001083399999988, 0.10001086199999953, 0.10001086100000034, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 0.10001132000000013, 0.10001084700000007, 0.10001086100000034, 0.1000108329999998, 0.10001084700000007, 0.10001084700000007, 0.10001087499999972, 5.410000003536197e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 0.10001134699999881, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999986600033e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 0.10001137500000112]</msg>
<status status="PASS" starttime="20201010 12:26:35.068" endtime="20201010 12:26:35.070"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:35.064" endtime="20201010 12:26:35.070"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:28.586" endtime="20201010 12:26:35.071"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:25.490" endtime="20201010 12:26:35.072" critical="yes"></status>
</test>
<test id="s1-s2-t10" name="50 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:35.079" endtime="20201010 12:26:35.098"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:35.077" endtime="20201010 12:26:35.099"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:35.112" endtime="20201010 12:26:38.134"></status>
</kw>
<msg timestamp="20201010 12:26:38.135" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:35.110" endtime="20201010 12:26:38.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:38.140" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:38.137" endtime="20201010 12:26:38.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:38.146" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:38.142" endtime="20201010 12:26:38.147"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:35.108" endtime="20201010 12:26:38.148"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:35.105" endtime="20201010 12:26:38.150"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:35.104" endtime="20201010 12:26:38.150"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:38.158" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:38.157" endtime="20201010 12:26:38.159"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:38.152" endtime="20201010 12:26:38.159"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:35.103" endtime="20201010 12:26:38.160"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:35.103" endtime="20201010 12:26:38.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:38.162" endtime="20201010 12:26:38.165"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:35.101" endtime="20201010 12:26:38.166"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:35.100" endtime="20201010 12:26:38.167"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:35.076" endtime="20201010 12:26:38.167"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>50</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:38.188" endtime="20201010 12:26:44.302"></status>
</kw>
<msg timestamp="20201010 12:26:44.303" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 50 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '14414'}, {'interval': '55147'}, {'interval': '70168'}, {'interval': '61294'}, {'interval': '86720'...</msg>
<status status="PASS" starttime="20201010 12:26:38.185" endtime="20201010 12:26:44.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:44.310" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 50 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '14414'}, {'interval': '55147'}, {'interval': '70168'}, {'interval': '61294'}, {'interval': '86720'...</msg>
<status status="PASS" starttime="20201010 12:26:44.305" endtime="20201010 12:26:44.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:44.312" endtime="20201010 12:26:44.316"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:38.179" endtime="20201010 12:26:44.317"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:38.172" endtime="20201010 12:26:44.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:44.326" level="INFO">${RESULT} = {'interval': [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 1023...</msg>
<status status="PASS" starttime="20201010 12:26:44.320" endtime="20201010 12:26:44.327"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:44.337" level="INFO">${interval} = [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 10238, 70515, 408...</msg>
<status status="PASS" starttime="20201010 12:26:44.329" endtime="20201010 12:26:44.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:44.345" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:44.343" endtime="20201010 12:26:44.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:44.349" level="INFO">VALUE: [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 10238, 70515, 40828, 48500, 94435, 94098, 48103, 90303, 97856, 52511, 42830, 96777, 16054, 65477, 49396, 79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976]</msg>
<status status="PASS" starttime="20201010 12:26:44.347" endtime="20201010 12:26:44.350"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:44.339" endtime="20201010 12:26:44.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:44.359" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:44.357" endtime="20201010 12:26:44.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:44.363" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:44.361" endtime="20201010 12:26:44.364"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:44.352" endtime="20201010 12:26:44.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:44.381" endtime="20201010 12:26:44.682"></status>
</kw>
<msg timestamp="20201010 12:26:44.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.192963181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.293055236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:44.377" endtime="20201010 12:26:44.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:44.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.192963181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.293055236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:44.685" endtime="20201010 12:26:44.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:44.693" endtime="20201010 12:26:44.695"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:44.370" endtime="20201010 12:26:44.695"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:44.367" endtime="20201010 12:26:44.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:44.699" level="INFO">${FILTERED} = [{'diff': 0.10009205500000018}, {'diff': 0.09993102799999942}, {'diff': 0.10001083399999988}, {'diff': 0.10001090299999937}, {'diff': 5.419999995481817e-07}, {'diff': 5.420000004363601e-07}, {'diff': ...</msg>
<status status="PASS" starttime="20201010 12:26:44.696" endtime="20201010 12:26:44.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:44.703" level="INFO">${RESULT} = {'diff': [0.10009205500000018, 0.09993102799999942, 0.10001083399999988, 0.10001090299999937, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.409999994654...</msg>
<status status="PASS" starttime="20201010 12:26:44.700" endtime="20201010 12:26:44.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:44.708" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:44.706" endtime="20201010 12:26:44.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:44.710" level="INFO">VALUE: [0.10009205500000018, 0.09993102799999942, 0.10001083399999988, 0.10001090299999937, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 0.10001238900000065, 0.10001084700000007, 0.10000979199999982, 0.10001191700000067, 0.1000230000000002, 0.09999772299999954, 0.100073611, 5.419999995481817e-07, 5.420000004363601e-07, 0.10001141600000008, 0.10001137500000024, 0.10001086100000034, 0.10001086100000034, 0.10001086100000034, 0.10001086099999945, 0.10000895800000009, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 0.10001137499999935, 0.10001087500000061, 0.10001088799999991, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999986600033e-07, 5.409999985772629e-07, 5.419999986600033e-07, 0.10001137500000112, 0.10001090300000115]</msg>
<status status="PASS" starttime="20201010 12:26:44.709" endtime="20201010 12:26:44.710"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:44.704" endtime="20201010 12:26:44.711"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:38.169" endtime="20201010 12:26:44.711"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:35.073" endtime="20201010 12:26:44.712" critical="yes"></status>
</test>
<test id="s1-s2-t11" name="75 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:44.719" endtime="20201010 12:26:44.739"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:44.718" endtime="20201010 12:26:44.739"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:44.754" endtime="20201010 12:26:47.775"></status>
</kw>
<msg timestamp="20201010 12:26:47.776" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:44.752" endtime="20201010 12:26:47.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:47.782" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:47.778" endtime="20201010 12:26:47.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:47.788" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:47.784" endtime="20201010 12:26:47.788"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:44.749" endtime="20201010 12:26:47.790"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:44.747" endtime="20201010 12:26:47.791"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:44.745" endtime="20201010 12:26:47.792"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:47.799" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:47.798" endtime="20201010 12:26:47.800"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:47.793" endtime="20201010 12:26:47.801"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:44.745" endtime="20201010 12:26:47.801"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:44.744" endtime="20201010 12:26:47.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:47.803" endtime="20201010 12:26:47.806"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:44.742" endtime="20201010 12:26:47.807"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:44.740" endtime="20201010 12:26:47.808"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:44.716" endtime="20201010 12:26:47.809"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>75</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:47.827" endtime="20201010 12:26:53.998"></status>
</kw>
<msg timestamp="20201010 12:26:53.999" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 75 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '81075'}, {'interval': '58727'}, {'interval': '40937'}, {'interval': '10090'}, {'interval': '32175'...</msg>
<status status="PASS" starttime="20201010 12:26:47.824" endtime="20201010 12:26:54.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:54.007" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 75 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '81075'}, {'interval': '58727'}, {'interval': '40937'}, {'interval': '10090'}, {'interval': '32175'...</msg>
<status status="PASS" starttime="20201010 12:26:54.002" endtime="20201010 12:26:54.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:54.009" endtime="20201010 12:26:54.012"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:47.818" endtime="20201010 12:26:54.013"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:47.814" endtime="20201010 12:26:54.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:54.027" level="INFO">${RESULT} = {'interval': [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118, 68312, 54751, 8016...</msg>
<status status="PASS" starttime="20201010 12:26:54.016" endtime="20201010 12:26:54.027"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:54.038" level="INFO">${interval} = [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118, 68312, 54751, 80163, 54227, 583...</msg>
<status status="PASS" starttime="20201010 12:26:54.029" endtime="20201010 12:26:54.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:54.045" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:54.043" endtime="20201010 12:26:54.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:54.050" level="INFO">VALUE: [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118, 68312, 54751, 80163, 54227, 58312, 43968, 57316, 22291, 26892, 71562, 69729, 10869, 16200, 53697, 30276, 60725, 22110, 59120, 24460, 36665, 10677, 44111, 16864, 64627, 87787, 52486, 10571, 13830, 59376, 68287, 10851, 19328, 95360, 64761, 16060, 56217, 52889, 38375, 35488, 20496, 81475, 86486, 44426, 74127, 62725, 66508, 29656, 17750, 43477, 47133, 75567]</msg>
<status status="PASS" starttime="20201010 12:26:54.048" endtime="20201010 12:26:54.051"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:54.039" endtime="20201010 12:26:54.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:54.060" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:54.058" endtime="20201010 12:26:54.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:54.064" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:54.062" endtime="20201010 12:26:54.065"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:54.054" endtime="20201010 12:26:54.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:54.079" endtime="20201010 12:26:54.376"></status>
</kw>
<msg timestamp="20201010 12:26:54.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.194046806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.294059014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:54.076" endtime="20201010 12:26:54.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:54.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.194046806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.294059014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:54.380" endtime="20201010 12:26:54.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:54.388" endtime="20201010 12:26:54.389"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:54.071" endtime="20201010 12:26:54.390"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:54.067" endtime="20201010 12:26:54.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:54.394" level="INFO">${FILTERED} = [{'diff': 0.10001220799999988}, {'diff': 0.10000984699999993}, {'diff': 0.10003058399999976}, {'diff': 0.09999108400000001}, {'diff': 0.10003952799999993}, {'diff': 0.09998215300000002}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:26:54.391" endtime="20201010 12:26:54.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:54.398" level="INFO">${RESULT} = {'diff': [0.10001220799999988, 0.10000984699999993, 0.10003058399999976, 0.09999108400000001, 0.10003952799999993, 0.09998215300000002, 0.10001081999999961, 0.10001083399999988, 0.10000887500000033, 0...</msg>
<status status="PASS" starttime="20201010 12:26:54.395" endtime="20201010 12:26:54.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:54.402" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:54.401" endtime="20201010 12:26:54.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:54.404" level="INFO">VALUE: [0.10001220799999988, 0.10000984699999993, 0.10003058399999976, 0.09999108400000001, 0.10003952799999993, 0.09998215300000002, 0.10001081999999961, 0.10001083399999988, 0.10000887500000033, 0.10001281999999989, 0.10001083399999988, 0.1000160000000001, 0.10000568000000065, 0.10001084700000007, 0.10001081899999953, 0.10001088899999999, 5.420000004363601e-07, 5.420000004363601e-07, 0.10000540299999994, 0.10019940300000041, 0.09982063900000071, 0.10001152800000046, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 0.10005406900000047, 0.09996813900000046, 0.10001087500000061, 5.409999994654413e-07, 0.10001137499999935, 0.10001084700000007, 0.10001084700000007, 0.10001084699999918, 0.10001084700000007, 0.10001084700000007, 0.10001086100000123, 0.10001086099999945, 0.10001084700000007, 0.10001086100000123, 0.10001087500000061, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201010 12:26:54.403" endtime="20201010 12:26:54.405"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:54.399" endtime="20201010 12:26:54.405"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:47.810" endtime="20201010 12:26:54.406"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:44.714" endtime="20201010 12:26:54.406" critical="yes"></status>
</test>
<test id="s1-s2-t12" name="100 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:54.413" endtime="20201010 12:26:54.433"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:54.412" endtime="20201010 12:26:54.434"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:54.448" endtime="20201010 12:26:57.469"></status>
</kw>
<msg timestamp="20201010 12:26:57.470" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:54.447" endtime="20201010 12:26:57.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:57.475" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:57.472" endtime="20201010 12:26:57.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:57.482" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:57.478" endtime="20201010 12:26:57.482"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:54.443" endtime="20201010 12:26:57.484"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:54.440" endtime="20201010 12:26:57.485"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:54.439" endtime="20201010 12:26:57.485"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:57.493" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:57.492" endtime="20201010 12:26:57.494"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:57.487" endtime="20201010 12:26:57.494"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:54.438" endtime="20201010 12:26:57.495"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:54.437" endtime="20201010 12:26:57.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:57.497" endtime="20201010 12:26:57.500"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:54.436" endtime="20201010 12:26:57.501"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:54.434" endtime="20201010 12:26:57.502"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:54.411" endtime="20201010 12:26:57.502"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>100</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:57.521" endtime="20201010 12:27:03.734"></status>
</kw>
<msg timestamp="20201010 12:27:03.736" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 100 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '25479'}, {'interval': '99747'}, {'interval': '10545'}, {'interval': '53347'}, {'interval': '97917...</msg>
<status status="PASS" starttime="20201010 12:26:57.518" endtime="20201010 12:27:03.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:27:03.744" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 100 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '25479'}, {'interval': '99747'}, {'interval': '10545'}, {'interval': '53347'}, {'interval': '97917...</msg>
<status status="PASS" starttime="20201010 12:27:03.738" endtime="20201010 12:27:03.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:03.746" endtime="20201010 12:27:03.750"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:57.512" endtime="20201010 12:27:03.751"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:57.508" endtime="20201010 12:27:03.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:27:03.765" level="INFO">${RESULT} = {'interval': [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946, 34329, 54047, 2127...</msg>
<status status="PASS" starttime="20201010 12:27:03.753" endtime="20201010 12:27:03.766"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:27:03.776" level="INFO">${interval} = [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946, 34329, 54047, 21276, 78931, 960...</msg>
<status status="PASS" starttime="20201010 12:27:03.767" endtime="20201010 12:27:03.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:27:03.784" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:27:03.782" endtime="20201010 12:27:03.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:27:03.789" level="INFO">VALUE: [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946, 34329, 54047, 21276, 78931, 96011, 66721, 98428, 10018, 21350, 57891, 44237, 47888, 49872, 48763, 80263, 93240, 65542, 69880, 49052, 60186, 16103, 70949, 81316, 74540, 78692, 31251, 92771, 27327, 95171, 73283, 44316, 50344, 95943, 37655, 81039, 11783, 32679, 42216, 57297, 47170, 32344, 72256, 48132, 42552, 45395, 13114, 21516, 47276, 37671, 70189, 59386, 64123, 49679, 14446, 29154, 60416, 52975, 46707, 30305, 37643, 98500, 39715, 31020, 98902, 61399, 58345, 20890, 33209, 90081, 27893, 71353, 26989, 20846, 78625, 56472, 100987]</msg>
<status status="PASS" starttime="20201010 12:27:03.786" endtime="20201010 12:27:03.790"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:03.778" endtime="20201010 12:27:03.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:27:03.798" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:27:03.796" endtime="20201010 12:27:03.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:27:03.803" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:27:03.801" endtime="20201010 12:27:03.803"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:03.792" endtime="20201010 12:27:03.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:03.818" endtime="20201010 12:27:04.117"></status>
</kw>
<msg timestamp="20201010 12:27:04.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.287333236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.387351292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:27:03.815" endtime="20201010 12:27:04.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:27:04.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.287333236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.387351292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:27:04.121" endtime="20201010 12:27:04.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:27:04.129" endtime="20201010 12:27:04.130"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:03.809" endtime="20201010 12:27:04.131"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:03.806" endtime="20201010 12:27:04.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:27:04.135" level="INFO">${FILTERED} = [{'diff': 0.10001805599999969}, {'diff': 0.1000266389999993}, {'diff': 0.09998923599999987}, {'diff': 5.419999995481817e-07}, {'diff': 5.419999995481817e-07}, {'diff': 5.419999995481817e-07}, {'diff':...</msg>
<status status="PASS" starttime="20201010 12:27:04.132" endtime="20201010 12:27:04.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:27:04.139" level="INFO">${RESULT} = {'diff': [0.10001805599999969, 0.1000266389999993, 0.09998923599999987, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.42000000436...</msg>
<status status="PASS" starttime="20201010 12:27:04.136" endtime="20201010 12:27:04.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:27:04.143" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:27:04.142" endtime="20201010 12:27:04.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:27:04.146" level="INFO">VALUE: [0.10001805599999969, 0.1000266389999993, 0.09998923599999987, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 0.09990087500000033, 0.10001648600000035, 0.10000520799999979, 0.10000984699999993, 0.1000108329999998, 0.1000108329999998, 0.10001084700000007, 0.10001084700000007, 0.10011216600000061, 0.09991309699999995, 0.10010647199999934, 0.09991266599999982, 0.10000983299999966, 0.10007723599999974, 0.09994395799999989, 5.420000004363601e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.419999995481817e-07, 0.10001136099999997, 0.10001617999999901, 0.10002641700000048, 0.10001715299999958, 0.0999846669999993, 0.10000984700000082, 0.10001086100000123, 0.10001087500000061, 5.410000003536197e-07, 5.410000003536197e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201010 12:27:04.144" endtime="20201010 12:27:04.146"></status>
</kw>
<status status="PASS" starttime="20201010 12:27:04.140" endtime="20201010 12:27:04.147"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:57.504" endtime="20201010 12:27:04.147"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:54.408" endtime="20201010 12:27:04.148" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 12:25:04.394" endtime="20201010 12:27:04.160"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201010 12:24:53.157" endtime="20201010 12:27:04.207"></status>
</suite>
<statistics>
<total>
<stat pass="13" fail="0">Critical Tests</stat>
<stat pass="13" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="13" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="13" fail="0">BOARD_arduino-due</stat>
<stat pass="13" fail="0">dev</stat>
</tag>
<suite>
<stat pass="13" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="12" fail="0" id="s1-s2" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
