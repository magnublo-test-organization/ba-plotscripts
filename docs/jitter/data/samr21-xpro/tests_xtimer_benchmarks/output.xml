<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201010 12:24:54.271" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 12:24:55.516" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 12:24:55.534" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 12:24:57.525" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 12:24:55.512" endtime="20201010 12:24:57.527"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 12:24:57.532" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 12:24:57.529" endtime="20201010 12:24:57.533"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.510" endtime="20201010 12:24:57.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:57.539" endtime="20201010 12:24:57.866"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:57.536" endtime="20201010 12:24:57.868"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:57.900" endtime="20201010 12:24:57.919"></status>
</kw>
<msg timestamp="20201010 12:24:57.920" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:57.897" endtime="20201010 12:24:57.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:57.926" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:57.922" endtime="20201010 12:24:57.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:57.933" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:57.928" endtime="20201010 12:24:57.933"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:57.890" endtime="20201010 12:24:57.935"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:57.883" endtime="20201010 12:24:57.937"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:57.881" endtime="20201010 12:24:57.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:57.945" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:57.944" endtime="20201010 12:24:57.947"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:57.939" endtime="20201010 12:24:57.948"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:57.879" endtime="20201010 12:24:57.948"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:57.877" endtime="20201010 12:24:57.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:57.950" endtime="20201010 12:24:57.954"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:57.873" endtime="20201010 12:24:57.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:57.957" endtime="20201010 12:24:57.961"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:57.869" endtime="20201010 12:24:57.962"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:55.506" endtime="20201010 12:24:57.963"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:24:57.977" endtime="20201010 12:24:57.999"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:57.974" endtime="20201010 12:24:58.001"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:58.035" endtime="20201010 12:24:58.051"></status>
</kw>
<msg timestamp="20201010 12:24:58.052" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:58.032" endtime="20201010 12:24:58.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:58.058" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:58.054" endtime="20201010 12:24:58.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:24:58.065" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:24:58.060" endtime="20201010 12:24:58.065"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:58.025" endtime="20201010 12:24:58.067"></status>
</kw>
<status status="FAIL" starttime="20201010 12:24:58.018" endtime="20201010 12:24:58.069"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:58.015" endtime="20201010 12:24:58.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:24:58.077" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:24:58.075" endtime="20201010 12:24:58.078"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:58.071" endtime="20201010 12:24:58.078"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:58.013" endtime="20201010 12:24:58.078"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:58.011" endtime="20201010 12:24:58.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:58.080" endtime="20201010 12:24:58.084"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:58.007" endtime="20201010 12:24:58.085"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:58.003" endtime="20201010 12:24:58.088"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:57.971" endtime="20201010 12:24:58.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:58.108" endtime="20201010 12:24:58.118"></status>
</kw>
<msg timestamp="20201010 12:24:58.119" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:58.103" endtime="20201010 12:24:58.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:24:58.125" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:24:58.121" endtime="20201010 12:24:58.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:24:58.127" endtime="20201010 12:24:58.131"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:58.095" endtime="20201010 12:24:58.133"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:58.091" endtime="20201010 12:24:58.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:24:58.144" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201010 12:24:58.142" endtime="20201010 12:24:58.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:24:58.149" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201010 12:24:58.147" endtime="20201010 12:24:58.149"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:58.136" endtime="20201010 12:24:58.151"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:24:57.964" endtime="20201010 12:24:58.153" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 12:24:54.530" endtime="20201010 12:24:58.162"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 12:24:58.294" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 12:24:58.308" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 12:25:00.254" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 12:24:58.290" endtime="20201010 12:25:00.255"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 12:25:00.261" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 12:25:00.257" endtime="20201010 12:25:00.261"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:58.287" endtime="20201010 12:25:00.263"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:00.267" endtime="20201010 12:25:00.594"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.265" endtime="20201010 12:25:00.596"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:00.625" endtime="20201010 12:25:00.640"></status>
</kw>
<msg timestamp="20201010 12:25:00.642" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:00.622" endtime="20201010 12:25:00.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:00.648" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:00.644" endtime="20201010 12:25:00.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:00.654" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:00.650" endtime="20201010 12:25:00.655"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:00.615" endtime="20201010 12:25:00.657"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:00.610" endtime="20201010 12:25:00.658"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.607" endtime="20201010 12:25:00.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:00.667" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:00.665" endtime="20201010 12:25:00.668"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.661" endtime="20201010 12:25:00.668"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.606" endtime="20201010 12:25:00.668"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.604" endtime="20201010 12:25:00.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:00.670" endtime="20201010 12:25:00.674"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.601" endtime="20201010 12:25:00.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:00.677" endtime="20201010 12:25:00.680"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.597" endtime="20201010 12:25:00.682"></status>
</kw>
<status status="PASS" starttime="20201010 12:24:58.283" endtime="20201010 12:25:00.683"></status>
</kw>
<test id="s1-s2-t1" name="0 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:00.699" endtime="20201010 12:25:00.721"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.696" endtime="20201010 12:25:00.723"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:00.755" endtime="20201010 12:25:00.770"></status>
</kw>
<msg timestamp="20201010 12:25:00.771" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:00.751" endtime="20201010 12:25:00.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:00.778" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:00.774" endtime="20201010 12:25:00.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:00.784" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:00.780" endtime="20201010 12:25:00.785"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:00.744" endtime="20201010 12:25:00.787"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:00.738" endtime="20201010 12:25:00.788"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.736" endtime="20201010 12:25:00.789"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:00.797" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:00.795" endtime="20201010 12:25:00.797"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.791" endtime="20201010 12:25:00.798"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.734" endtime="20201010 12:25:00.798"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.732" endtime="20201010 12:25:00.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:00.800" endtime="20201010 12:25:00.803"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.728" endtime="20201010 12:25:00.805"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.724" endtime="20201010 12:25:00.806"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.691" endtime="20201010 12:25:00.807"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:00.830" endtime="20201010 12:25:06.858"></status>
</kw>
<msg timestamp="20201010 12:25:06.859" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:00.826" endtime="20201010 12:25:06.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:06.865" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:06.861" endtime="20201010 12:25:06.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:06.867" endtime="20201010 12:25:06.871"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.819" endtime="20201010 12:25:06.873"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.813" endtime="20201010 12:25:06.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:06.879" level="INFO">${RESULT} = {'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 12:25:06.876" endtime="20201010 12:25:06.880"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:06.934" level="INFO">${interval} = []</msg>
<status status="PASS" starttime="20201010 12:25:06.881" endtime="20201010 12:25:06.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:06.943" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:06.941" endtime="20201010 12:25:06.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:06.947" level="INFO">VALUE: []</msg>
<status status="PASS" starttime="20201010 12:25:06.945" endtime="20201010 12:25:06.948"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:06.936" endtime="20201010 12:25:06.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:06.958" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:06.956" endtime="20201010 12:25:06.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:06.962" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:06.960" endtime="20201010 12:25:06.963"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:06.951" endtime="20201010 12:25:06.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:06.982" endtime="20201010 12:25:07.336"></status>
</kw>
<msg timestamp="20201010 12:25:07.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.224131792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.224132347, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201010 12:25:06.978" endtime="20201010 12:25:07.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:07.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.224131792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.224132347, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201010 12:25:07.345" endtime="20201010 12:25:07.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:07.363" endtime="20201010 12:25:07.367"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:06.971" endtime="20201010 12:25:07.368"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:06.966" endtime="20201010 12:25:07.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:07.380" level="INFO">${FILTERED} = [{'diff': 0}, {'diff': 0.10024555599999996}, {'diff': 0.10024008299999987}, {'diff': 0.10023319399999986}, {'diff': 0.10023227699999993}, {'diff': 0.10023847200000002}, {'diff': 0.10024933300000005}, ...</msg>
<status status="PASS" starttime="20201010 12:25:07.371" endtime="20201010 12:25:07.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:07.390" level="INFO">${RESULT} = {'diff': [0, 0.10024555599999996, 0.10024008299999987, 0.10023319399999986, 0.10023227699999993, 0.10023847200000002, 0.10024933300000005, 0.10024465199999999, 0.10023673600000005, 0.10023063899999984...</msg>
<status status="PASS" starttime="20201010 12:25:07.382" endtime="20201010 12:25:07.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:07.400" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:07.398" endtime="20201010 12:25:07.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:07.405" level="INFO">VALUE: [0, 0.10024555599999996, 0.10024008299999987, 0.10023319399999986, 0.10023227699999993, 0.10023847200000002, 0.10024933300000005, 0.10024465199999999, 0.10023673600000005, 0.10023063899999984, 0.10023245899999988, 0.1002452220000003, 0.10024211100000002, 0.10023668100000016, 0.10022823599999997, 0.1002192639999997, 0.10022090299999986, 0.10023523600000006, 0.100226347, 0.10023761099999984, 0.100224973, 0.10021586100000013, 0.10021866599999996, 0.10023099999999996, 0.10023236100000021, 0.10023358400000015, 0.10022083399999993, 0.10022723599999983, 0.10022402799999952, 0.10022326400000026, 0.10023183300000049, 0.10022991700000006, 0.10022656900000015, 0.10022665199999992, 0.10023740300000039, 0.10024130600000003, 0.10023577699999997, 0.10023909700000022, 0.10023384699999927, 0.10023173700000054, 0.10023531900000027, 0.10022716700000078, 0.10023244399999953, 0.10024276399999987, 0.10023833300000007, 0.10023647200000063, 0.10024291600000002, 0.1002411529999998, 0.10024395900000016, 0.10024498599999987]</msg>
<status status="PASS" starttime="20201010 12:25:07.402" endtime="20201010 12:25:07.406"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:07.392" endtime="20201010 12:25:07.407"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:00.809" endtime="20201010 12:25:07.409"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:00.684" endtime="20201010 12:25:07.411" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="5 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:07.431" endtime="20201010 12:25:07.453"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:07.427" endtime="20201010 12:25:07.454"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:07.487" endtime="20201010 12:25:07.503"></status>
</kw>
<msg timestamp="20201010 12:25:07.504" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:07.484" endtime="20201010 12:25:07.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:07.510" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:07.506" endtime="20201010 12:25:07.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:07.517" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:07.513" endtime="20201010 12:25:07.518"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:07.477" endtime="20201010 12:25:07.520"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:07.470" endtime="20201010 12:25:07.522"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:07.468" endtime="20201010 12:25:07.522"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:07.530" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:07.529" endtime="20201010 12:25:07.531"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:07.524" endtime="20201010 12:25:07.531"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:07.466" endtime="20201010 12:25:07.532"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:07.464" endtime="20201010 12:25:07.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:07.534" endtime="20201010 12:25:07.537"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:07.460" endtime="20201010 12:25:07.538"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:07.456" endtime="20201010 12:25:07.540"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:07.425" endtime="20201010 12:25:07.540"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:07.565" endtime="20201010 12:25:13.605"></status>
</kw>
<msg timestamp="20201010 12:25:13.606" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '10741'}, {'interval': '84225'}, {'interval': '46186'}, {'interval': '37795'}, {'interval': '34698'}...</msg>
<status status="PASS" starttime="20201010 12:25:07.562" endtime="20201010 12:25:13.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:13.613" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '10741'}, {'interval': '84225'}, {'interval': '46186'}, {'interval': '37795'}, {'interval': '34698'}...</msg>
<status status="PASS" starttime="20201010 12:25:13.609" endtime="20201010 12:25:13.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:13.615" endtime="20201010 12:25:13.619"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:07.555" endtime="20201010 12:25:13.620"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:07.547" endtime="20201010 12:25:13.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:13.627" level="INFO">${RESULT} = {'focus': [100000], 'interval': [10741, 84225, 46186, 37795, 34698]}</msg>
<status status="PASS" starttime="20201010 12:25:13.623" endtime="20201010 12:25:13.628"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:13.633" level="INFO">${interval} = [10741, 84225, 46186, 37795, 34698]</msg>
<status status="PASS" starttime="20201010 12:25:13.629" endtime="20201010 12:25:13.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:13.643" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:13.640" endtime="20201010 12:25:13.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:13.647" level="INFO">VALUE: [10741, 84225, 46186, 37795, 34698]</msg>
<status status="PASS" starttime="20201010 12:25:13.645" endtime="20201010 12:25:13.648"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:13.635" endtime="20201010 12:25:13.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:13.657" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:13.655" endtime="20201010 12:25:13.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:13.662" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:13.660" endtime="20201010 12:25:13.663"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:13.650" endtime="20201010 12:25:13.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:13.680" endtime="20201010 12:25:14.038"></status>
</kw>
<msg timestamp="20201010 12:25:14.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.128508486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.228763083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:13.677" endtime="20201010 12:25:14.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:14.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.128508486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.228763083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:14.047" endtime="20201010 12:25:14.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:14.065" endtime="20201010 12:25:14.069"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:13.670" endtime="20201010 12:25:14.070"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:13.665" endtime="20201010 12:25:14.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:14.082" level="INFO">${FILTERED} = [{'diff': 0.10025459699999995}, {'diff': 0.10025011100000003}, {'diff': 0.10023944499999993}, {'diff': 0.10024156999999989}, {'diff': 0.10024509699999995}, {'diff': 0.10023994399999991}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:14.073" endtime="20201010 12:25:14.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:14.093" level="INFO">${RESULT} = {'diff': [0.10025459699999995, 0.10025011100000003, 0.10023944499999993, 0.10024156999999989, 0.10024509699999995, 0.10023994399999991, 0.10025448600000009, 0.100257861, 0.10024605600000003, 0.1002409...</msg>
<status status="PASS" starttime="20201010 12:25:14.084" endtime="20201010 12:25:14.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:14.103" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:14.101" endtime="20201010 12:25:14.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:14.109" level="INFO">VALUE: [0.10025459699999995, 0.10025011100000003, 0.10023944499999993, 0.10024156999999989, 0.10024509699999995, 0.10023994399999991, 0.10025448600000009, 0.100257861, 0.10024605600000003, 0.10024094399999983, 0.10024663899999986, 0.10024545899999993, 0.1002470419999999, 0.10024838899999988, 0.10025606999999992, 0.10026044400000034, 0.10024765300000027, 0.10023902799999984, 0.10024275000000005, 0.10025208299999999, 0.10024579099999986, 0.10024212499999985, 0.10025534700000005, 0.10025415299999985, 0.10024188899999986, 0.1002512219999998, 0.10025988900000016, 0.100247639, 0.10024075000000021, 0.10023288900000082, 0.100232514, 0.10024141699999944, 0.1002428609999999, 0.10024607000000074, 0.10023983300000072, 0.10023863800000044, 0.10024434700000029, 0.10024355500000048, 0.1002470139999998, 0.10024195899999988, 0.10022734699999969, 0.10024329099999996, 0.1002495829999992, 0.1002505419999995, 0.10025006999999952, 0.10023906999999976, 0.10023413900000033, 0.10024516699999975, 0.10025038900000016, 0.10022704200000021]</msg>
<status status="PASS" starttime="20201010 12:25:14.106" endtime="20201010 12:25:14.109"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:14.095" endtime="20201010 12:25:14.111"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:07.543" endtime="20201010 12:25:14.112"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:07.418" endtime="20201010 12:25:14.115" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="10 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:14.134" endtime="20201010 12:25:14.155"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:14.130" endtime="20201010 12:25:14.157"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:14.192" endtime="20201010 12:25:14.207"></status>
</kw>
<msg timestamp="20201010 12:25:14.209" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:14.189" endtime="20201010 12:25:14.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:14.215" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:14.211" endtime="20201010 12:25:14.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:14.222" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:14.217" endtime="20201010 12:25:14.223"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:14.181" endtime="20201010 12:25:14.225"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:14.173" endtime="20201010 12:25:14.226"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:14.171" endtime="20201010 12:25:14.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:14.236" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:14.235" endtime="20201010 12:25:14.237"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:14.229" endtime="20201010 12:25:14.238"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:14.169" endtime="20201010 12:25:14.238"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:14.167" endtime="20201010 12:25:14.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:14.240" endtime="20201010 12:25:14.243"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:14.163" endtime="20201010 12:25:14.245"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:14.159" endtime="20201010 12:25:14.246"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:14.127" endtime="20201010 12:25:14.247"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:14.270" endtime="20201010 12:25:20.321"></status>
</kw>
<msg timestamp="20201010 12:25:20.322" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '37694'}, {'interval': '23825'}, {'interval': '30414'}, {'interval': '39030'}, {'interval': '45533'...</msg>
<status status="PASS" starttime="20201010 12:25:14.267" endtime="20201010 12:25:20.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:20.328" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '37694'}, {'interval': '23825'}, {'interval': '30414'}, {'interval': '39030'}, {'interval': '45533'...</msg>
<status status="PASS" starttime="20201010 12:25:20.324" endtime="20201010 12:25:20.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:20.331" endtime="20201010 12:25:20.334"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:14.260" endtime="20201010 12:25:20.336"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:14.254" endtime="20201010 12:25:20.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:20.343" level="INFO">${RESULT} = {'focus': [100000], 'interval': [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]}</msg>
<status status="PASS" starttime="20201010 12:25:20.339" endtime="20201010 12:25:20.343"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:20.349" level="INFO">${interval} = [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]</msg>
<status status="PASS" starttime="20201010 12:25:20.345" endtime="20201010 12:25:20.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:20.358" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:20.356" endtime="20201010 12:25:20.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:20.363" level="INFO">VALUE: [37694, 23825, 30414, 39030, 45533, 29992, 36619, 57620, 20383, 26570]</msg>
<status status="PASS" starttime="20201010 12:25:20.360" endtime="20201010 12:25:20.363"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:20.351" endtime="20201010 12:25:20.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:20.373" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:20.371" endtime="20201010 12:25:20.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:20.377" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:20.375" endtime="20201010 12:25:20.378"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:20.366" endtime="20201010 12:25:20.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:20.396" endtime="20201010 12:25:20.745"></status>
</kw>
<msg timestamp="20201010 12:25:20.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.131308069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.231503319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:20.393" endtime="20201010 12:25:20.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:20.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.131308069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.231503319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:20.754" endtime="20201010 12:25:20.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:20.772" endtime="20201010 12:25:20.776"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:20.386" endtime="20201010 12:25:20.778"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:20.381" endtime="20201010 12:25:20.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:20.791" level="INFO">${FILTERED} = [{'diff': 0.10019525000000007}, {'diff': 0.10023169399999987}, {'diff': 0.10023859700000015}, {'diff': 0.10024433300000002}, {'diff': 0.10024547200000011}, {'diff': 0.10024648699999994}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:20.781" endtime="20201010 12:25:20.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:20.799" level="INFO">${RESULT} = {'diff': [0.10019525000000007, 0.10023169399999987, 0.10023859700000015, 0.10024433300000002, 0.10024547200000011, 0.10024648699999994, 0.10025490299999995, 0.1002454730000002, 0.10023549999999992, 0....</msg>
<status status="PASS" starttime="20201010 12:25:20.793" endtime="20201010 12:25:20.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:20.809" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:20.807" endtime="20201010 12:25:20.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:20.814" level="INFO">VALUE: [0.10019525000000007, 0.10023169399999987, 0.10023859700000015, 0.10024433300000002, 0.10024547200000011, 0.10024648699999994, 0.10025490299999995, 0.1002454730000002, 0.10023549999999992, 0.10023154199999995, 0.10023273600000016, 0.10023640300000025, 0.10023715199999961, 0.10023101399999979, 0.10026197300000028, 0.10024413899999995, 0.10024325000000012, 0.10022504199999993, 0.10025072199999974, 0.10025067999999981, 0.10030893000000018, 0.10017890300000021, 0.10024754199999997, 0.10024143099999971, 0.10023716699999996, 0.100240361, 0.10023701400000018, 0.10023732000000019, 0.10022556900000001, 0.10021691599999993, 0.10022919400000063, 0.10024295799999994, 0.10024904100000054, 0.1002329160000004, 0.10022656899999927, 0.10022805499999965, 0.10021593000000006, 0.10021513900000034, 0.10020905599999974, 0.10024436099999967, 0.10022706899999978, 0.10022611099999956, 0.10023087500000027, 0.10023300000000024, 0.10023388900000008, 0.10023192999999964, 0.10023388900000008, 0.1002382500000003, 0.10026544400000059, 0.10019054099999991]</msg>
<status status="PASS" starttime="20201010 12:25:20.811" endtime="20201010 12:25:20.815"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:20.801" endtime="20201010 12:25:20.816"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:14.249" endtime="20201010 12:25:20.818"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:14.121" endtime="20201010 12:25:20.820" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="15 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:20.838" endtime="20201010 12:25:20.860"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:20.834" endtime="20201010 12:25:20.862"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:20.896" endtime="20201010 12:25:20.911"></status>
</kw>
<msg timestamp="20201010 12:25:20.913" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:20.893" endtime="20201010 12:25:20.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:20.919" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:20.915" endtime="20201010 12:25:20.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:20.926" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:20.921" endtime="20201010 12:25:20.927"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:20.883" endtime="20201010 12:25:20.928"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:20.877" endtime="20201010 12:25:20.930"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:20.875" endtime="20201010 12:25:20.931"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:20.939" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:20.937" endtime="20201010 12:25:20.940"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:20.933" endtime="20201010 12:25:20.940"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:20.873" endtime="20201010 12:25:20.940"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:20.871" endtime="20201010 12:25:20.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:20.943" endtime="20201010 12:25:20.946"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:20.867" endtime="20201010 12:25:20.947"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:20.863" endtime="20201010 12:25:20.949"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:20.831" endtime="20201010 12:25:20.950"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:20.972" endtime="20201010 12:25:27.034"></status>
</kw>
<msg timestamp="20201010 12:25:27.036" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '52653'}, {'interval': '31223'}, {'interval': '17873'}, {'interval': '99702'}, {'interval': '86231'...</msg>
<status status="PASS" starttime="20201010 12:25:20.969" endtime="20201010 12:25:27.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.042" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '52653'}, {'interval': '31223'}, {'interval': '17873'}, {'interval': '99702'}, {'interval': '86231'...</msg>
<status status="PASS" starttime="20201010 12:25:27.038" endtime="20201010 12:25:27.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:27.045" endtime="20201010 12:25:27.049"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:20.962" endtime="20201010 12:25:27.050"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:20.956" endtime="20201010 12:25:27.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:27.058" level="INFO">${RESULT} = {'focus': [100000], 'interval': [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]}</msg>
<status status="PASS" starttime="20201010 12:25:27.053" endtime="20201010 12:25:27.058"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:27.064" level="INFO">${interval} = [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]</msg>
<status status="PASS" starttime="20201010 12:25:27.060" endtime="20201010 12:25:27.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.073" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:27.071" endtime="20201010 12:25:27.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.078" level="INFO">VALUE: [52653, 31223, 17873, 99702, 86231, 11070, 36056, 95112, 44690, 11784, 81024, 32519, 12251, 21504, 58361]</msg>
<status status="PASS" starttime="20201010 12:25:27.075" endtime="20201010 12:25:27.078"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.066" endtime="20201010 12:25:27.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.089" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:27.086" endtime="20201010 12:25:27.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.094" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:27.092" endtime="20201010 12:25:27.094"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.081" endtime="20201010 12:25:27.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:27.114" endtime="20201010 12:25:27.464"></status>
</kw>
<msg timestamp="20201010 12:25:27.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.129359764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.229595792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:27.111" endtime="20201010 12:25:27.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.129359764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.229595792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:27.473" endtime="20201010 12:25:27.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:27.492" endtime="20201010 12:25:27.495"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.104" endtime="20201010 12:25:27.497"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.097" endtime="20201010 12:25:27.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:27.508" level="INFO">${FILTERED} = [{'diff': 0.10023602800000009}, {'diff': 0.10022927800000003}, {'diff': 0.10022436099999998}, {'diff': 0.10022718000000008}, {'diff': 0.10023055599999986}, {'diff': 0.1002265550000001}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201010 12:25:27.500" endtime="20201010 12:25:27.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:27.517" level="INFO">${RESULT} = {'diff': [0.10023602800000009, 0.10022927800000003, 0.10022436099999998, 0.10022718000000008, 0.10023055599999986, 0.1002265550000001, 0.10022472199999988, 0.10023570800000003, 0.10023161099999989, 0....</msg>
<status status="PASS" starttime="20201010 12:25:27.510" endtime="20201010 12:25:27.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.526" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:27.524" endtime="20201010 12:25:27.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.532" level="INFO">VALUE: [0.10023602800000009, 0.10022927800000003, 0.10022436099999998, 0.10022718000000008, 0.10023055599999986, 0.1002265550000001, 0.10022472199999988, 0.10023570800000003, 0.10023161099999989, 0.10023080499999981, 0.1002149160000001, 0.10023094399999977, 0.10023751300000017, 0.10024675000000016, 0.10023116700000001, 0.10023709800000002, 0.10023970800000015, 0.10026175000000004, 0.10020138899999997, 0.100228875, 0.10023198600000027, 0.10023209700000013, 0.10023245900000033, 0.10023069500000004, 0.1002304030000003, 0.10030084699999975, 0.10017623699999989, 0.10023493100000014, 0.10022915300000035, 0.10022538899999933, 0.10024218100000049, 0.10025267999999965, 0.10024401400000027, 0.10026290299999996, 0.10025084699999987, 0.10024802800000021, 0.10025416600000003, 0.10025862499999949, 0.10025058400000031, 0.10024876400000071, 0.10024651400000018, 0.10024209699999975, 0.10025336100000004, 0.10026062499999977, 0.10024426399999964, 0.10024662500000048, 0.10024697199999988, 0.10025573600000026, 0.10024687500000073, 0.10025170800000005]</msg>
<status status="PASS" starttime="20201010 12:25:27.529" endtime="20201010 12:25:27.533"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.518" endtime="20201010 12:25:27.534"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:20.951" endtime="20201010 12:25:27.535"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:20.825" endtime="20201010 12:25:27.538" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="20 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:27.555" endtime="20201010 12:25:27.576"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.551" endtime="20201010 12:25:27.578"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:27.612" endtime="20201010 12:25:27.627"></status>
</kw>
<msg timestamp="20201010 12:25:27.628" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:27.609" endtime="20201010 12:25:27.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.635" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:27.630" endtime="20201010 12:25:27.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:27.642" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:27.637" endtime="20201010 12:25:27.642"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:27.602" endtime="20201010 12:25:27.644"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:27.595" endtime="20201010 12:25:27.646"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.593" endtime="20201010 12:25:27.646"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:27.654" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:27.653" endtime="20201010 12:25:27.655"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.648" endtime="20201010 12:25:27.655"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.591" endtime="20201010 12:25:27.656"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.589" endtime="20201010 12:25:27.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:27.658" endtime="20201010 12:25:27.661"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.585" endtime="20201010 12:25:27.663"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.580" endtime="20201010 12:25:27.664"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.548" endtime="20201010 12:25:27.665"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:27.688" endtime="20201010 12:25:33.762"></status>
</kw>
<msg timestamp="20201010 12:25:33.763" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '27660'}, {'interval': '24774'}, {'interval': '50283'}, {'interval': '17455'}, {'interval': '56207'...</msg>
<status status="PASS" starttime="20201010 12:25:27.684" endtime="20201010 12:25:33.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:33.769" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '27660'}, {'interval': '24774'}, {'interval': '50283'}, {'interval': '17455'}, {'interval': '56207'...</msg>
<status status="PASS" starttime="20201010 12:25:33.765" endtime="20201010 12:25:33.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:33.772" endtime="20201010 12:25:33.775"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.677" endtime="20201010 12:25:33.777"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.671" endtime="20201010 12:25:33.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:33.787" level="INFO">${RESULT} = {'focus': [100000], 'interval': [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]}</msg>
<status status="PASS" starttime="20201010 12:25:33.780" endtime="20201010 12:25:33.788"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:33.793" level="INFO">${interval} = [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]</msg>
<status status="PASS" starttime="20201010 12:25:33.789" endtime="20201010 12:25:33.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:33.802" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:33.800" endtime="20201010 12:25:33.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:33.807" level="INFO">VALUE: [27660, 24774, 50283, 17455, 56207, 42110, 19271, 94738, 34690, 56733, 40981, 20315, 16642, 96348, 16606, 25972, 89473, 17734, 29823, 58196]</msg>
<status status="PASS" starttime="20201010 12:25:33.805" endtime="20201010 12:25:33.807"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:33.795" endtime="20201010 12:25:33.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:33.817" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:33.815" endtime="20201010 12:25:33.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:33.822" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:33.820" endtime="20201010 12:25:33.823"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:33.810" endtime="20201010 12:25:33.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:33.842" endtime="20201010 12:25:34.198"></status>
</kw>
<msg timestamp="20201010 12:25:34.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.129826819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.230062625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:33.838" endtime="20201010 12:25:34.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:34.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.129826819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.230062625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:34.207" endtime="20201010 12:25:34.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:34.225" endtime="20201010 12:25:34.229"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:33.831" endtime="20201010 12:25:34.230"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:33.825" endtime="20201010 12:25:34.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:34.242" level="INFO">${FILTERED} = [{'diff': 0.10023580599999993}, {'diff': 0.10023415200000008}, {'diff': 0.10024420799999989}, {'diff': 0.10023769400000004}, {'diff': 0.10023252800000004}, {'diff': 0.10023537500000002}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:34.233" endtime="20201010 12:25:34.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:34.255" level="INFO">${RESULT} = {'diff': [0.10023580599999993, 0.10023415200000008, 0.10024420799999989, 0.10023769400000004, 0.10023252800000004, 0.10023537500000002, 0.10023570800000003, 0.10023390300000012, 0.1002404720000003, 0....</msg>
<status status="PASS" starttime="20201010 12:25:34.244" endtime="20201010 12:25:34.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:34.265" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:34.263" endtime="20201010 12:25:34.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:34.271" level="INFO">VALUE: [0.10023580599999993, 0.10023415200000008, 0.10024420799999989, 0.10023769400000004, 0.10023252800000004, 0.10023537500000002, 0.10023570800000003, 0.10023390300000012, 0.1002404720000003, 0.10022093099999996, 0.10025919500000002, 0.10025998599999975, 0.1002503469999998, 0.10016781900000016, 0.10036461099999983, 0.10011201400000003, 0.10030963899999978, 0.10014630600000007, 0.1002283610000001, 0.10023468100000033, 0.10025523599999975, 0.10023009699999985, 0.10023141600000018, 0.10022870799999994, 0.10023361099999972, 0.10024572199999993, 0.10023715200000005, 0.1002324579999998, 0.10027483299999984, 0.10018762499999934, 0.10026894499999983, 0.10019413900000007, 0.10022231900000023, 0.10023767999999933, 0.1002413329999996, 0.10023229099999931, 0.10024330500000023, 0.10023197300000053, 0.10023012500000039, 0.1002245420000003, 0.10022916700000017, 0.10022712499999997, 0.10028727800000059, 0.10016440199999987, 0.10023244399999953, 0.10021306999999968, 0.10022829199999972, 0.1002265969999998, 0.10024174999999946, 0.10024629199999957]</msg>
<status status="PASS" starttime="20201010 12:25:34.268" endtime="20201010 12:25:34.271"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:34.257" endtime="20201010 12:25:34.273"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:27.666" endtime="20201010 12:25:34.274"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:27.543" endtime="20201010 12:25:34.276" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:34.294" endtime="20201010 12:25:34.316"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:34.291" endtime="20201010 12:25:34.318"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:34.351" endtime="20201010 12:25:34.366"></status>
</kw>
<msg timestamp="20201010 12:25:34.368" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:34.347" endtime="20201010 12:25:34.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:34.374" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:34.370" endtime="20201010 12:25:34.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:34.381" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:34.377" endtime="20201010 12:25:34.382"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:34.340" endtime="20201010 12:25:34.384"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:34.334" endtime="20201010 12:25:34.386"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:34.331" endtime="20201010 12:25:34.386"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:34.394" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:34.393" endtime="20201010 12:25:34.395"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:34.388" endtime="20201010 12:25:34.395"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:34.329" endtime="20201010 12:25:34.396"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:34.328" endtime="20201010 12:25:34.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:34.398" endtime="20201010 12:25:34.401"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:34.324" endtime="20201010 12:25:34.403"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:34.319" endtime="20201010 12:25:34.404"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:34.288" endtime="20201010 12:25:34.405"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:34.430" endtime="20201010 12:25:40.516"></status>
</kw>
<msg timestamp="20201010 12:25:40.518" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '16291'}, {'interval': '74117'}, {'interval': '74576'}, {'interval': '31746'}, {'interval': '33340'...</msg>
<status status="PASS" starttime="20201010 12:25:34.426" endtime="20201010 12:25:40.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:40.524" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '16291'}, {'interval': '74117'}, {'interval': '74576'}, {'interval': '31746'}, {'interval': '33340'...</msg>
<status status="PASS" starttime="20201010 12:25:40.520" endtime="20201010 12:25:40.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:40.527" endtime="20201010 12:25:40.530"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:34.417" endtime="20201010 12:25:40.532"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:34.411" endtime="20201010 12:25:40.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:40.541" level="INFO">${RESULT} = {'focus': [100000], 'interval': [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113,...</msg>
<status status="PASS" starttime="20201010 12:25:40.535" endtime="20201010 12:25:40.541"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:40.547" level="INFO">${interval} = [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248]</msg>
<status status="PASS" starttime="20201010 12:25:40.543" endtime="20201010 12:25:40.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:40.556" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:40.554" endtime="20201010 12:25:40.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:40.561" level="INFO">VALUE: [16291, 74117, 74576, 31746, 33340, 26891, 80681, 81877, 53051, 21311, 91926, 16715, 44971, 49078, 22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113, 91248]</msg>
<status status="PASS" starttime="20201010 12:25:40.558" endtime="20201010 12:25:40.561"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:40.549" endtime="20201010 12:25:40.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:40.571" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:40.569" endtime="20201010 12:25:40.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:40.576" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:40.574" endtime="20201010 12:25:40.577"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:40.564" endtime="20201010 12:25:40.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:40.595" endtime="20201010 12:25:40.948"></status>
</kw>
<msg timestamp="20201010 12:25:40.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.132438958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.232681861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:40.592" endtime="20201010 12:25:40.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:40.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.132438958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.232681861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:40.957" endtime="20201010 12:25:40.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:40.975" endtime="20201010 12:25:40.979"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:40.584" endtime="20201010 12:25:40.981"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:40.579" endtime="20201010 12:25:40.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:40.992" level="INFO">${FILTERED} = [{'diff': 0.10024290300000005}, {'diff': 0.10024027800000002}, {'diff': 0.100270305}, {'diff': 0.10020348600000006}, {'diff': 0.10023166699999986}, {'diff': 0.10024648600000008}, {'diff': 0.1002443889...</msg>
<status status="PASS" starttime="20201010 12:25:40.984" endtime="20201010 12:25:40.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:41.003" level="INFO">${RESULT} = {'diff': [0.10024290300000005, 0.10024027800000002, 0.100270305, 0.10020348600000006, 0.10023166699999986, 0.10024648600000008, 0.10024438899999999, 0.1002403890000001, 0.10023579100000002, 0.10022454...</msg>
<status status="PASS" starttime="20201010 12:25:40.994" endtime="20201010 12:25:41.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:41.013" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:41.011" endtime="20201010 12:25:41.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:41.018" level="INFO">VALUE: [0.10024290300000005, 0.10024027800000002, 0.100270305, 0.10020348600000006, 0.10023166699999986, 0.10024648600000008, 0.10024438899999999, 0.1002403890000001, 0.10023579100000002, 0.10022454100000022, 0.1002310129999997, 0.10023349999999986, 0.10022612500000028, 0.10033255500000005, 0.10016259699999974, 0.100236153, 0.10024726400000006, 0.10023661200000022, 0.100219681, 0.10024426400000008, 0.10022466600000035, 0.10022391600000002, 0.10022640299999974, 0.10023045900000005, 0.10023165299999981, 0.10022627699999997, 0.1002259999999997, 0.10022522299999981, 0.10022512500000014, 0.10023180600000003, 0.1002315970000005, 0.10022927799999959, 0.10022102799999999, 0.10023066699999994, 0.10023109699999999, 0.10023133299999998, 0.10020095800000028, 0.1002254589999998, 0.10022329199999991, 0.1002251670000005, 0.10022273700000017, 0.10022838899999975, 0.10019297299999952, 0.10021298599999984, 0.10023087499999939, 0.10022880499999953, 0.1002253470000003, 0.10022706999999986, 0.10022294400000042, 0.10021911100000036]</msg>
<status status="PASS" starttime="20201010 12:25:41.015" endtime="20201010 12:25:41.019"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.005" endtime="20201010 12:25:41.021"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:34.407" endtime="20201010 12:25:41.022"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:34.282" endtime="20201010 12:25:41.024" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="30 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:41.042" endtime="20201010 12:25:41.064"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.038" endtime="20201010 12:25:41.065"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:41.098" endtime="20201010 12:25:41.116"></status>
</kw>
<msg timestamp="20201010 12:25:41.117" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:41.095" endtime="20201010 12:25:41.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:41.124" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:41.119" endtime="20201010 12:25:41.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:41.131" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:41.127" endtime="20201010 12:25:41.132"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:41.088" endtime="20201010 12:25:41.133"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:41.081" endtime="20201010 12:25:41.135"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.079" endtime="20201010 12:25:41.136"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:41.144" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:41.142" endtime="20201010 12:25:41.144"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.138" endtime="20201010 12:25:41.145"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.077" endtime="20201010 12:25:41.145"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.075" endtime="20201010 12:25:41.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:41.147" endtime="20201010 12:25:41.151"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.071" endtime="20201010 12:25:41.152"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.067" endtime="20201010 12:25:41.154"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.035" endtime="20201010 12:25:41.154"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>30</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:41.177" endtime="20201010 12:25:47.275"></status>
</kw>
<msg timestamp="20201010 12:25:47.277" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 30 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '74757'}, {'interval': '70347'}, {'interval': '33034'}, {'interval': '80423'}, {'interval': '79926'...</msg>
<status status="PASS" starttime="20201010 12:25:41.174" endtime="20201010 12:25:47.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:47.283" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 30 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '74757'}, {'interval': '70347'}, {'interval': '33034'}, {'interval': '80423'}, {'interval': '79926'...</msg>
<status status="PASS" starttime="20201010 12:25:47.279" endtime="20201010 12:25:47.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:47.286" endtime="20201010 12:25:47.290"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.166" endtime="20201010 12:25:47.291"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.161" endtime="20201010 12:25:47.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:47.300" level="INFO">${RESULT} = {'focus': [100000], 'interval': [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320,...</msg>
<status status="PASS" starttime="20201010 12:25:47.294" endtime="20201010 12:25:47.301"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:47.307" level="INFO">${interval} = [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 58146, 28867, 669...</msg>
<status status="PASS" starttime="20201010 12:25:47.302" endtime="20201010 12:25:47.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:47.316" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:47.314" endtime="20201010 12:25:47.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:47.320" level="INFO">VALUE: [74757, 70347, 33034, 80423, 79926, 83558, 93385, 97460, 37843, 11089, 92002, 47989, 74190, 35584, 30828, 91573, 78327, 58989, 84130, 86357, 41677, 56043, 89595, 14320, 22622, 62029, 58146, 28867, 66958, 17521]</msg>
<status status="PASS" starttime="20201010 12:25:47.318" endtime="20201010 12:25:47.321"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.308" endtime="20201010 12:25:47.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:47.331" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:47.329" endtime="20201010 12:25:47.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:47.336" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:47.333" endtime="20201010 12:25:47.336"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.324" endtime="20201010 12:25:47.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:47.357" endtime="20201010 12:25:47.709"></status>
</kw>
<msg timestamp="20201010 12:25:47.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.132820597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.233050639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:47.354" endtime="20201010 12:25:47.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:47.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.132820597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.233050639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:47.718" endtime="20201010 12:25:47.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:47.736" endtime="20201010 12:25:47.740"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.344" endtime="20201010 12:25:47.742"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.339" endtime="20201010 12:25:47.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:47.753" level="INFO">${FILTERED} = [{'diff': 0.10023004199999996}, {'diff': 0.10028613900000005}, {'diff': 0.10017815299999988}, {'diff': 0.10022912500000003}, {'diff': 0.10022179100000006}, {'diff': 0.10021452800000019}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:47.745" endtime="20201010 12:25:47.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:47.762" level="INFO">${RESULT} = {'diff': [0.10023004199999996, 0.10028613900000005, 0.10017815299999988, 0.10022912500000003, 0.10022179100000006, 0.10021452800000019, 0.10021798599999987, 0.10022626400000001, 0.10024126400000011, 0...</msg>
<status status="PASS" starttime="20201010 12:25:47.755" endtime="20201010 12:25:47.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:47.772" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:47.770" endtime="20201010 12:25:47.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:47.777" level="INFO">VALUE: [0.10023004199999996, 0.10028613900000005, 0.10017815299999988, 0.10022912500000003, 0.10022179100000006, 0.10021452800000019, 0.10021798599999987, 0.10022626400000001, 0.10024126400000011, 0.1002213059999999, 0.10021845799999962, 0.10021240199999992, 0.10022191699999983, 0.10022875000000031, 0.100230861, 0.1002325690000001, 0.10028495900000012, 0.10033295800000008, 0.10007731899999994, 0.100233083, 0.10022230600000004, 0.1002257769999999, 0.10022798600000016, 0.10021082000000003, 0.10021444500000021, 0.10023013900000022, 0.10023390200000026, 0.10023144399999984, 0.10022826299999998, 0.10022340200000013, 0.10026388899999983, 0.10018458399999997, 0.1002329590000004, 0.10023030600000027, 0.10022927800000048, 0.1002378049999999, 0.10022912499999936, 0.10023443099999962, 0.10023247200000007, 0.10022237500000042, 0.1002213059999999, 0.10022345800000032, 0.10020261099999939, 0.10024168099999997, 0.10022481899999924, 0.10021522199999922, 0.10021519500000053, 0.1002645830000004, 0.10018837500000011, 0.10022811099999984]</msg>
<status status="PASS" starttime="20201010 12:25:47.774" endtime="20201010 12:25:47.778"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.764" endtime="20201010 12:25:47.780"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:41.156" endtime="20201010 12:25:47.781"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:41.029" endtime="20201010 12:25:47.783" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="35 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:47.801" endtime="20201010 12:25:47.822"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.797" endtime="20201010 12:25:47.824"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:47.859" endtime="20201010 12:25:47.874"></status>
</kw>
<msg timestamp="20201010 12:25:47.876" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:47.855" endtime="20201010 12:25:47.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:47.883" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:47.878" endtime="20201010 12:25:47.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:47.890" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:47.885" endtime="20201010 12:25:47.890"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:47.848" endtime="20201010 12:25:47.892"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:47.842" endtime="20201010 12:25:47.894"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.839" endtime="20201010 12:25:47.894"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:47.902" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:47.901" endtime="20201010 12:25:47.903"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.896" endtime="20201010 12:25:47.903"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.837" endtime="20201010 12:25:47.904"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.836" endtime="20201010 12:25:47.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:47.906" endtime="20201010 12:25:47.909"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.830" endtime="20201010 12:25:47.911"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.826" endtime="20201010 12:25:47.912"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.794" endtime="20201010 12:25:47.913"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>35</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:47.936" endtime="20201010 12:25:54.046"></status>
</kw>
<msg timestamp="20201010 12:25:54.047" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 35 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '54295'}, {'interval': '37199'}, {'interval': '39990'}, {'interval': '20568'}, {'interval': '10171'...</msg>
<status status="PASS" starttime="20201010 12:25:47.932" endtime="20201010 12:25:54.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:54.054" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 35 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '54295'}, {'interval': '37199'}, {'interval': '39990'}, {'interval': '20568'}, {'interval': '10171'...</msg>
<status status="PASS" starttime="20201010 12:25:54.050" endtime="20201010 12:25:54.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:54.056" endtime="20201010 12:25:54.060"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.925" endtime="20201010 12:25:54.062"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.919" endtime="20201010 12:25:54.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:54.073" level="INFO">${RESULT} = {'focus': [100000], 'interval': [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836,...</msg>
<status status="PASS" starttime="20201010 12:25:54.065" endtime="20201010 12:25:54.073"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:25:54.079" level="INFO">${interval} = [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 43539, 68459, 281...</msg>
<status status="PASS" starttime="20201010 12:25:54.075" endtime="20201010 12:25:54.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:54.088" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:25:54.086" endtime="20201010 12:25:54.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:54.093" level="INFO">VALUE: [54295, 37199, 39990, 20568, 10171, 83353, 66702, 62264, 83163, 58826, 12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297, 74036, 43539, 68459, 28154, 76170, 13496, 73105, 63810, 92352, 47335]</msg>
<status status="PASS" starttime="20201010 12:25:54.091" endtime="20201010 12:25:54.094"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.081" endtime="20201010 12:25:54.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:54.104" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:25:54.102" endtime="20201010 12:25:54.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:54.108" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:25:54.106" endtime="20201010 12:25:54.110"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.097" endtime="20201010 12:25:54.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:54.129" endtime="20201010 12:25:54.482"></status>
</kw>
<msg timestamp="20201010 12:25:54.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.133286153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.233510889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:54.125" endtime="20201010 12:25:54.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:54.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.133286153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.233510889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:25:54.492" endtime="20201010 12:25:54.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:54.509" endtime="20201010 12:25:54.513"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.117" endtime="20201010 12:25:54.515"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.113" endtime="20201010 12:25:54.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:25:54.526" level="INFO">${FILTERED} = [{'diff': 0.10022473599999993}, {'diff': 0.10026895800000002}, {'diff': 0.10018165300000015}, {'diff': 0.10022359700000005}, {'diff': 0.10022958400000004}, {'diff': 0.10022669399999984}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:25:54.518" endtime="20201010 12:25:54.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:25:54.537" level="INFO">${RESULT} = {'diff': [0.10022473599999993, 0.10026895800000002, 0.10018165300000015, 0.10022359700000005, 0.10022958400000004, 0.10022669399999984, 0.10023023600000003, 0.10027256899999992, 0.10018574999999985, 0...</msg>
<status status="PASS" starttime="20201010 12:25:54.529" endtime="20201010 12:25:54.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:25:54.547" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:25:54.545" endtime="20201010 12:25:54.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:25:54.552" level="INFO">VALUE: [0.10022473599999993, 0.10026895800000002, 0.10018165300000015, 0.10022359700000005, 0.10022958400000004, 0.10022669399999984, 0.10023023600000003, 0.10027256899999992, 0.10018574999999985, 0.1002216520000001, 0.1002440830000002, 0.10023465299999978, 0.10021708399999962, 0.10027269500000013, 0.10018332000000019, 0.10030433400000005, 0.10017402800000008, 0.1002010560000004, 0.10024133400000013, 0.10023536199999983, 0.10023206900000003, 0.10022169400000003, 0.100226916, 0.10023294500000013, 0.10023454199999993, 0.10026133299999973, 0.10018419400000012, 0.100223014, 0.10024056899999945, 0.10023586099999982, 0.10023344399999967, 0.1002214859999997, 0.1002263189999999, 0.10023440299999997, 0.10027790300000028, 0.1001953750000002, 0.10024340299999945, 0.10029543100000016, 0.10018287500000067, 0.10027904200000037, 0.10017311100000015, 0.10023652799999994, 0.10022522199999973, 0.10028338900000033, 0.10016258300000036, 0.10031601400000056, 0.10014659800000025, 0.1002387640000002, 0.1002259160000003, 0.10021729199999996]</msg>
<status status="PASS" starttime="20201010 12:25:54.549" endtime="20201010 12:25:54.553"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.539" endtime="20201010 12:25:54.554"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:47.915" endtime="20201010 12:25:54.556"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:47.788" endtime="20201010 12:25:54.558" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="40 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:25:54.575" endtime="20201010 12:25:54.597"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.572" endtime="20201010 12:25:54.599"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:54.632" endtime="20201010 12:25:54.648"></status>
</kw>
<msg timestamp="20201010 12:25:54.650" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:54.629" endtime="20201010 12:25:54.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:25:54.656" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:25:54.652" endtime="20201010 12:25:54.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:25:54.663" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:25:54.659" endtime="20201010 12:25:54.664"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:54.621" endtime="20201010 12:25:54.666"></status>
</kw>
<status status="FAIL" starttime="20201010 12:25:54.615" endtime="20201010 12:25:54.668"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.612" endtime="20201010 12:25:54.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:25:54.677" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:25:54.675" endtime="20201010 12:25:54.678"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.670" endtime="20201010 12:25:54.678"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.611" endtime="20201010 12:25:54.679"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.609" endtime="20201010 12:25:54.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:54.681" endtime="20201010 12:25:54.684"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.605" endtime="20201010 12:25:54.686"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.601" endtime="20201010 12:25:54.687"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.569" endtime="20201010 12:25:54.688"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>40</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:25:54.713" endtime="20201010 12:26:00.834"></status>
</kw>
<msg timestamp="20201010 12:26:00.836" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 40 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '63910'}, {'interval': '51619'}, {'interval': '66290'}, {'interval': '40380'}, {'interval': '35046'...</msg>
<status status="PASS" starttime="20201010 12:25:54.710" endtime="20201010 12:26:00.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:00.843" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 40 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '63910'}, {'interval': '51619'}, {'interval': '66290'}, {'interval': '40380'}, {'interval': '35046'...</msg>
<status status="PASS" starttime="20201010 12:26:00.838" endtime="20201010 12:26:00.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:00.846" endtime="20201010 12:26:00.850"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.702" endtime="20201010 12:26:00.851"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.694" endtime="20201010 12:26:00.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:00.861" level="INFO">${RESULT} = {'focus': [100000], 'interval': [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612,...</msg>
<status status="PASS" starttime="20201010 12:26:00.854" endtime="20201010 12:26:00.862"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:00.868" level="INFO">${interval} = [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 17369, 86767, 529...</msg>
<status status="PASS" starttime="20201010 12:26:00.864" endtime="20201010 12:26:00.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:00.878" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:00.875" endtime="20201010 12:26:00.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:00.883" level="INFO">VALUE: [63910, 51619, 66290, 40380, 35046, 32609, 70101, 80450, 75245, 30814, 28038, 34161, 30647, 63118, 71523, 71223, 28890, 12380, 50731, 77029, 95431, 57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674]</msg>
<status status="PASS" starttime="20201010 12:26:00.880" endtime="20201010 12:26:00.884"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:00.870" endtime="20201010 12:26:00.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:00.895" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:00.892" endtime="20201010 12:26:00.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:00.900" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:00.898" endtime="20201010 12:26:00.901"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:00.887" endtime="20201010 12:26:00.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:00.919" endtime="20201010 12:26:01.274"></status>
</kw>
<msg timestamp="20201010 12:26:01.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.136490097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.236730792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:00.915" endtime="20201010 12:26:01.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.136490097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.236730792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:01.283" endtime="20201010 12:26:01.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.301" endtime="20201010 12:26:01.305"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:00.908" endtime="20201010 12:26:01.306"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:00.904" endtime="20201010 12:26:01.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:01.318" level="INFO">${FILTERED} = [{'diff': 0.10024069499999988}, {'diff': 0.10036908300000014}, {'diff': 0.10012794400000002}, {'diff': 0.10023686099999995}, {'diff': 0.10022544400000011}, {'diff': 0.10036497200000016}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 12:26:01.309" endtime="20201010 12:26:01.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:01.326" level="INFO">${RESULT} = {'diff': [0.10024069499999988, 0.10036908300000014, 0.10012794400000002, 0.10023686099999995, 0.10022544400000011, 0.10036497200000016, 0.10010009799999997, 0.10023030599999982, 0.10022968100000007, 0...</msg>
<status status="PASS" starttime="20201010 12:26:01.320" endtime="20201010 12:26:01.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.336" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:01.334" endtime="20201010 12:26:01.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.342" level="INFO">VALUE: [0.10024069499999988, 0.10036908300000014, 0.10012794400000002, 0.10023686099999995, 0.10022544400000011, 0.10036497200000016, 0.10010009799999997, 0.10023030599999982, 0.10022968100000007, 0.10031868, 0.10021959699999972, 0.10014011099999998, 0.10023199999999965, 0.10022704100000013, 0.10022005500000031, 0.10022191699999983, 0.10022850000000005, 0.10021833299999994, 0.1002090550000001, 0.100225542, 0.10022520899999998, 0.1002225000000001, 0.10022351400000007, 0.10022333399999983, 0.10032126399999974, 0.10013125, 0.10021992999999974, 0.10021779100000039, 0.10021376400000026, 0.10021065300000043, 0.10021381900000037, 0.10026107000000017, 0.10017384699999976, 0.10021547199999947, 0.10022163899999992, 0.10022548600000025, 0.10032363899999996, 0.10013141700000006, 0.1002194860000003, 0.10022823599999953, 0.10022792999999997, 0.10027544399999933, 0.10016640200000015, 0.10023861099999998, 0.10020395799999982, 0.10022020799999964, 0.10021668000000084, 0.10023966700000031, 0.10022172299999976, 0.10022006899999969]</msg>
<status status="PASS" starttime="20201010 12:26:01.339" endtime="20201010 12:26:01.343"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.328" endtime="20201010 12:26:01.344"></status>
</kw>
<status status="PASS" starttime="20201010 12:25:54.690" endtime="20201010 12:26:01.346"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:25:54.563" endtime="20201010 12:26:01.348" critical="yes"></status>
</test>
<test id="s1-s2-t10" name="50 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:01.365" endtime="20201010 12:26:01.387"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.361" endtime="20201010 12:26:01.389"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.424" endtime="20201010 12:26:01.439"></status>
</kw>
<msg timestamp="20201010 12:26:01.441" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:01.420" endtime="20201010 12:26:01.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:01.443" endtime="20201010 12:26:01.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:01.454" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:01.450" endtime="20201010 12:26:01.454"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:01.413" endtime="20201010 12:26:01.456"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:01.406" endtime="20201010 12:26:01.458"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.402" endtime="20201010 12:26:01.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:01.466" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:01.465" endtime="20201010 12:26:01.467"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.460" endtime="20201010 12:26:01.467"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.400" endtime="20201010 12:26:01.468"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.399" endtime="20201010 12:26:01.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.470" endtime="20201010 12:26:01.473"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.395" endtime="20201010 12:26:01.475"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.390" endtime="20201010 12:26:01.476"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.359" endtime="20201010 12:26:01.477"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>50</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:01.500" endtime="20201010 12:26:07.628"></status>
</kw>
<msg timestamp="20201010 12:26:07.630" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 50 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '14414'}, {'interval': '55147'}, {'interval': '70168'}, {'interval': '61294'}, {'interval': '86720'...</msg>
<status status="PASS" starttime="20201010 12:26:01.497" endtime="20201010 12:26:07.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:07.637" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 50 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '14414'}, {'interval': '55147'}, {'interval': '70168'}, {'interval': '61294'}, {'interval': '86720'...</msg>
<status status="PASS" starttime="20201010 12:26:07.632" endtime="20201010 12:26:07.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:07.639" endtime="20201010 12:26:07.643"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.489" endtime="20201010 12:26:07.644"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.484" endtime="20201010 12:26:07.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:07.657" level="INFO">${RESULT} = {'focus': [100000], 'interval': [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491,...</msg>
<status status="PASS" starttime="20201010 12:26:07.647" endtime="20201010 12:26:07.657"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:07.663" level="INFO">${interval} = [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 10238, 70515, 408...</msg>
<status status="PASS" starttime="20201010 12:26:07.659" endtime="20201010 12:26:07.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:07.672" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:07.670" endtime="20201010 12:26:07.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:07.677" level="INFO">VALUE: [14414, 55147, 70168, 61294, 86720, 61970, 78463, 74220, 47692, 84256, 16926, 78697, 18378, 47475, 44104, 66002, 66404, 63407, 97171, 39255, 62962, 67103, 89999, 32491, 21539, 66813, 10238, 70515, 40828, 48500, 94435, 94098, 48103, 90303, 97856, 52511, 42830, 96777, 16054, 65477, 49396, 79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976]</msg>
<status status="PASS" starttime="20201010 12:26:07.674" endtime="20201010 12:26:07.677"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:07.665" endtime="20201010 12:26:07.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:07.688" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:07.686" endtime="20201010 12:26:07.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:07.693" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:07.691" endtime="20201010 12:26:07.694"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:07.681" endtime="20201010 12:26:07.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:07.712" endtime="20201010 12:26:08.063"></status>
</kw>
<msg timestamp="20201010 12:26:08.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.22567125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.325893333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201010 12:26:07.708" endtime="20201010 12:26:08.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.22567125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.325893333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201010 12:26:08.072" endtime="20201010 12:26:08.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.091" endtime="20201010 12:26:08.095"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:07.701" endtime="20201010 12:26:08.096"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:07.696" endtime="20201010 12:26:08.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:08.109" level="INFO">${FILTERED} = [{'diff': 0.10022208300000002}, {'diff': 0.10022490299999998}, {'diff': 0.10021295799999996}, {'diff': 0.10020301399999987}, {'diff': 0.1002282080000001}, {'diff': 0.10033993100000016}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201010 12:26:08.100" endtime="20201010 12:26:08.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:08.124" level="INFO">${RESULT} = {'diff': [0.10022208300000002, 0.10022490299999998, 0.10021295799999996, 0.10020301399999987, 0.1002282080000001, 0.10033993100000016, 0.10010377699999995, 0.10022143000000017, 0.10022123599999988, 0....</msg>
<status status="PASS" starttime="20201010 12:26:08.111" endtime="20201010 12:26:08.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.134" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:08.131" endtime="20201010 12:26:08.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.139" level="INFO">VALUE: [0.10022208300000002, 0.10022490299999998, 0.10021295799999996, 0.10020301399999987, 0.1002282080000001, 0.10033993100000016, 0.10010377699999995, 0.10022143000000017, 0.10022123599999988, 0.10022156999999998, 0.10020456900000019, 0.10023177699999986, 0.10020154199999975, 0.10021283300000006, 0.1002224169999999, 0.10020430499999966, 0.10020808300000006, 0.10021076399999984, 0.10020766700000028, 0.1002052769999997, 0.10023565300000037, 0.1002495699999999, 0.10025937500000026, 0.10018488899999989, 0.10015505600000019, 0.10021493100000001, 0.10021199999999997, 0.10021284699999944, 0.10031273600000024, 0.10010454100000032, 0.1002166520000003, 0.10027497199999935, 0.10028684699999957, 0.10009205500000018, 0.10021808299999968, 0.10021440299999984, 0.10022218000000027, 0.1002151109999998, 0.10021883400000053, 0.10021137499999977, 0.10021008299999945, 0.1002226119999996, 0.10028712499999948, 0.10016970900000022, 0.10022055600000002, 0.10022170799999941, 0.1002161810000004, 0.10032345800000009, 0.10011880499999926, 0.10021954099999952]</msg>
<status status="PASS" starttime="20201010 12:26:08.136" endtime="20201010 12:26:08.140"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.125" endtime="20201010 12:26:08.141"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:01.479" endtime="20201010 12:26:08.143"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:01.353" endtime="20201010 12:26:08.145" critical="yes"></status>
</test>
<test id="s1-s2-t11" name="75 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:08.163" endtime="20201010 12:26:08.184"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.159" endtime="20201010 12:26:08.186"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.220" endtime="20201010 12:26:08.235"></status>
</kw>
<msg timestamp="20201010 12:26:08.236" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:08.217" endtime="20201010 12:26:08.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.243" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:08.239" endtime="20201010 12:26:08.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:08.249" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:08.245" endtime="20201010 12:26:08.250"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:08.209" endtime="20201010 12:26:08.252"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:08.202" endtime="20201010 12:26:08.253"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.199" endtime="20201010 12:26:08.254"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:08.262" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:08.261" endtime="20201010 12:26:08.263"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.256" endtime="20201010 12:26:08.263"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.198" endtime="20201010 12:26:08.264"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.196" endtime="20201010 12:26:08.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.266" endtime="20201010 12:26:08.269"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.192" endtime="20201010 12:26:08.271"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.187" endtime="20201010 12:26:08.272"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.156" endtime="20201010 12:26:08.273"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>75</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:08.297" endtime="20201010 12:26:14.485"></status>
</kw>
<msg timestamp="20201010 12:26:14.487" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 75 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '81075'}, {'interval': '58727'}, {'interval': '40937'}, {'interval': '10090'}, {'interval': '32175'...</msg>
<status status="PASS" starttime="20201010 12:26:08.294" endtime="20201010 12:26:14.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:14.495" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 75 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '81075'}, {'interval': '58727'}, {'interval': '40937'}, {'interval': '10090'}, {'interval': '32175'...</msg>
<status status="PASS" starttime="20201010 12:26:14.489" endtime="20201010 12:26:14.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:14.497" endtime="20201010 12:26:14.501"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.287" endtime="20201010 12:26:14.502"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.279" endtime="20201010 12:26:14.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:14.514" level="INFO">${RESULT} = {'focus': [100000], 'interval': [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118,...</msg>
<status status="PASS" starttime="20201010 12:26:14.505" endtime="20201010 12:26:14.515"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:14.521" level="INFO">${interval} = [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118, 68312, 54751, 80163, 54227, 583...</msg>
<status status="PASS" starttime="20201010 12:26:14.516" endtime="20201010 12:26:14.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:14.532" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:14.529" endtime="20201010 12:26:14.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:14.536" level="INFO">VALUE: [81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264, 61075, 11767, 17485, 68846, 85476, 84558, 97500, 28118, 68312, 54751, 80163, 54227, 58312, 43968, 57316, 22291, 26892, 71562, 69729, 10869, 16200, 53697, 30276, 60725, 22110, 59120, 24460, 36665, 10677, 44111, 16864, 64627, 87787, 52486, 10571, 13830, 59376, 68287, 10851, 19328, 95360, 64761, 16060, 56217, 52889, 38375, 35488, 20496, 81475, 86486, 44426, 74127, 62725, 66508, 29656, 17750, 43477, 47133, 75567]</msg>
<status status="PASS" starttime="20201010 12:26:14.534" endtime="20201010 12:26:14.538"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:14.523" endtime="20201010 12:26:14.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:14.548" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:14.546" endtime="20201010 12:26:14.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:14.552" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:14.550" endtime="20201010 12:26:14.553"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:14.541" endtime="20201010 12:26:14.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:14.571" endtime="20201010 12:26:14.923"></status>
</kw>
<msg timestamp="20201010 12:26:14.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.230414056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.33056425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201010 12:26:14.567" endtime="20201010 12:26:14.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:14.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.230414056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.33056425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201010 12:26:14.932" endtime="20201010 12:26:14.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:14.949" endtime="20201010 12:26:14.953"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:14.560" endtime="20201010 12:26:14.955"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:14.556" endtime="20201010 12:26:14.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:14.966" level="INFO">${FILTERED} = [{'diff': 0.1001501939999998}, {'diff': 0.100491208}, {'diff': 0.10026212499999998}, {'diff': 0.09989775000000001}, {'diff': 0.10020795800000015}, {'diff': 0.10023359799999998}, {'diff': 0.10021758400...</msg>
<status status="PASS" starttime="20201010 12:26:14.958" endtime="20201010 12:26:14.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:14.975" level="INFO">${RESULT} = {'diff': [0.1001501939999998, 0.100491208, 0.10026212499999998, 0.09989775000000001, 0.10020795800000015, 0.10023359799999998, 0.10021758400000014, 0.10026234699999992, 0.10017055500000005, 0.10053395...</msg>
<status status="PASS" starttime="20201010 12:26:14.968" endtime="20201010 12:26:14.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:14.986" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:14.984" endtime="20201010 12:26:14.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:14.992" level="INFO">VALUE: [0.1001501939999998, 0.100491208, 0.10026212499999998, 0.09989775000000001, 0.10020795800000015, 0.10023359799999998, 0.10021758400000014, 0.10026234699999992, 0.10017055500000005, 0.1005339580000002, 0.09989405500000004, 0.10022152800000006, 0.10021752799999994, 0.10022283300000012, 0.10050042999999986, 0.09993173599999983, 0.10021859700000002, 0.10043672199999998, 0.09999343100000013, 0.10018836100000028, 0.10052612499999958, 0.09990772299999984, 0.10032662500000011, 0.10023102799999961, 0.10003551399999999, 0.10040023600000003, 0.1000170279999999, 0.10049365300000002, 0.09994420800000015, 0.10020470800000059, 0.1002226110000004, 0.10021837499999986, 0.10021822199999963, 0.10036911100000001, 0.10005902799999955, 0.10028050000000022, 0.10015322200000032, 0.1002111379999997, 0.10020598599999975, 0.10021095899999999, 0.10021538899999971, 0.1002175550000004, 0.1002097630000005, 0.10020869399999999, 0.1002082780000002, 0.10025340299999996, 0.10033873600000032, 0.10040262500000008, 0.09983222199999986, 0.10020651399999991]</msg>
<status status="PASS" starttime="20201010 12:26:14.989" endtime="20201010 12:26:14.993"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:14.977" endtime="20201010 12:26:14.994"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:08.274" endtime="20201010 12:26:14.996"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:08.150" endtime="20201010 12:26:14.998" critical="yes"></status>
</test>
<test id="s1-s2-t12" name="100 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 12:26:15.015" endtime="20201010 12:26:15.037"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.011" endtime="20201010 12:26:15.038"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.072" endtime="20201010 12:26:15.087"></status>
</kw>
<msg timestamp="20201010 12:26:15.089" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:15.069" endtime="20201010 12:26:15.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.095" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 12:26:15.091" endtime="20201010 12:26:15.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 12:26:15.102" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 12:26:15.097" endtime="20201010 12:26:15.102"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:15.062" endtime="20201010 12:26:15.104"></status>
</kw>
<status status="FAIL" starttime="20201010 12:26:15.055" endtime="20201010 12:26:15.106"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.053" endtime="20201010 12:26:15.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 12:26:15.114" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 12:26:15.113" endtime="20201010 12:26:15.115"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.108" endtime="20201010 12:26:15.115"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.051" endtime="20201010 12:26:15.116"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.049" endtime="20201010 12:26:15.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.118" endtime="20201010 12:26:15.121"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.045" endtime="20201010 12:26:15.123"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.040" endtime="20201010 12:26:15.124"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.009" endtime="20201010 12:26:15.125"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>100</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:15.147" endtime="20201010 12:26:21.399"></status>
</kw>
<msg timestamp="20201010 12:26:21.401" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 100 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '25479'}, {'interval': '99747'}, {'interval': '10545'}, {'interval': '53347'}, {'interval': '97917...</msg>
<status status="PASS" starttime="20201010 12:26:15.144" endtime="20201010 12:26:21.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:21.408" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 100 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '25479'}, {'interval': '99747'}, {'interval': '10545'}, {'interval': '53347'}, {'interval': '97917...</msg>
<status status="PASS" starttime="20201010 12:26:21.403" endtime="20201010 12:26:21.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:21.411" endtime="20201010 12:26:21.415"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.137" endtime="20201010 12:26:21.416"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.131" endtime="20201010 12:26:21.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:21.431" level="INFO">${RESULT} = {'focus': [100000], 'interval': [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946,...</msg>
<status status="PASS" starttime="20201010 12:26:21.419" endtime="20201010 12:26:21.431"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 12:26:21.437" level="INFO">${interval} = [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946, 34329, 54047, 21276, 78931, 960...</msg>
<status status="PASS" starttime="20201010 12:26:21.433" endtime="20201010 12:26:21.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:21.447" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 12:26:21.445" endtime="20201010 12:26:21.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:21.452" level="INFO">VALUE: [25479, 99747, 10545, 53347, 97917, 38054, 70551, 35772, 88227, 19571, 67663, 91542, 18100, 88215, 89329, 96784, 82846, 90281, 24559, 61375, 29972, 73860, 65399, 82946, 34329, 54047, 21276, 78931, 96011, 66721, 98428, 10018, 21350, 57891, 44237, 47888, 49872, 48763, 80263, 93240, 65542, 69880, 49052, 60186, 16103, 70949, 81316, 74540, 78692, 31251, 92771, 27327, 95171, 73283, 44316, 50344, 95943, 37655, 81039, 11783, 32679, 42216, 57297, 47170, 32344, 72256, 48132, 42552, 45395, 13114, 21516, 47276, 37671, 70189, 59386, 64123, 49679, 14446, 29154, 60416, 52975, 46707, 30305, 37643, 98500, 39715, 31020, 98902, 61399, 58345, 20890, 33209, 90081, 27893, 71353, 26989, 20846, 78625, 56472, 100987]</msg>
<status status="PASS" starttime="20201010 12:26:21.450" endtime="20201010 12:26:21.453"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:21.439" endtime="20201010 12:26:21.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:21.463" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 12:26:21.461" endtime="20201010 12:26:21.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:21.467" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 12:26:21.465" endtime="20201010 12:26:21.468"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:21.456" endtime="20201010 12:26:21.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:21.486" endtime="20201010 12:26:21.842"></status>
</kw>
<msg timestamp="20201010 12:26:21.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.342797667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.443011403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:21.483" endtime="20201010 12:26:21.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 12:26:21.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.342797667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.443011403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 12:26:21.851" endtime="20201010 12:26:21.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 12:26:21.869" endtime="20201010 12:26:21.873"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:21.475" endtime="20201010 12:26:21.874"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:21.471" endtime="20201010 12:26:21.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 12:26:21.886" level="INFO">${FILTERED} = [{'diff': 0.10021373600000016}, {'diff': 0.1005439589999999}, {'diff': 0.09986255600000016}, {'diff': 0.10022113899999985}, {'diff': 0.10022077800000018}, {'diff': 0.10021530599999995}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201010 12:26:21.877" endtime="20201010 12:26:21.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 12:26:21.896" level="INFO">${RESULT} = {'diff': [0.10021373600000016, 0.1005439589999999, 0.09986255600000016, 0.10022113899999985, 0.10022077800000018, 0.10021530599999995, 0.10053683400000013, 0.09986202799999999, 0.10023701399999974, 0....</msg>
<status status="PASS" starttime="20201010 12:26:21.888" endtime="20201010 12:26:21.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 12:26:21.906" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 12:26:21.904" endtime="20201010 12:26:21.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 12:26:21.911" level="INFO">VALUE: [0.10021373600000016, 0.1005439589999999, 0.09986255600000016, 0.10022113899999985, 0.10022077800000018, 0.10021530599999995, 0.10053683400000013, 0.09986202799999999, 0.10023701399999974, 0.10018544400000007, 0.1005706949999996, 0.09983743, 0.10026912500000007, 0.1001407780000001, 0.10037387499999983, 0.10002859799999975, 0.10020970799999995, 0.1002059580000001, 0.1002040980000003, 0.10019797200000014, 0.10021058299999996, 0.1002224169999999, 0.10020572200000011, 0.10021180600000035, 0.10041530499999984, 0.09999049999999965, 0.10036369499999998, 0.10007487500000067, 0.10061870799999983, 0.09976109700000002, 0.10035154100000021, 0.10005551399999923, 0.10025220799999968, 0.10015097199999978, 0.10020109800000032, 0.10027013900000004, 0.1001307640000002, 0.10045684700000024, 0.09994816699999998, 0.10034326400000015, 0.10003936100000033, 0.1002125420000004, 0.10073770899999968, 0.0996855279999993, 0.10031124999999985, 0.10035386100000032, 0.10014393099999985, 0.10004662500000006, 0.10021376400000026, 0.1004720559999992]</msg>
<status status="PASS" starttime="20201010 12:26:21.908" endtime="20201010 12:26:21.912"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:21.898" endtime="20201010 12:26:21.914"></status>
</kw>
<status status="PASS" starttime="20201010 12:26:15.126" endtime="20201010 12:26:21.915"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 12:26:15.003" endtime="20201010 12:26:21.917" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 12:24:58.179" endtime="20201010 12:26:21.948"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201010 12:24:54.280" endtime="20201010 12:26:22.060"></status>
</suite>
<statistics>
<total>
<stat pass="13" fail="0">Critical Tests</stat>
<stat pass="13" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="13" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="13" fail="0">BOARD_samr21-xpro</stat>
<stat pass="13" fail="0">dev</stat>
</tag>
<suite>
<stat pass="13" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="12" fail="0" id="s1-s2" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
