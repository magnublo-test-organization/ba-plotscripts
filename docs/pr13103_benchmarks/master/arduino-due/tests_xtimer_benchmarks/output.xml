<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 10:57:04.784" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:57:08.421" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:57:08.430" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:57:10.315" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:57:08.420" endtime="20201030 10:57:10.316"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:57:10.318" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:57:10.317" endtime="20201030 10:57:10.319"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.418" endtime="20201030 10:57:10.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:10.321" endtime="20201030 10:57:10.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.320" endtime="20201030 10:57:10.507"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:10.519" endtime="20201030 10:57:13.545"></status>
</kw>
<msg timestamp="20201030 10:57:13.546" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:10.518" endtime="20201030 10:57:13.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.552" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.548" endtime="20201030 10:57:13.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:13.558" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:13.554" endtime="20201030 10:57:13.559"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:10.515" endtime="20201030 10:57:13.561"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:10.513" endtime="20201030 10:57:13.562"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.512" endtime="20201030 10:57:13.563"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:13.572" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:13.569" endtime="20201030 10:57:13.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.565" endtime="20201030 10:57:13.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.511" endtime="20201030 10:57:13.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.510" endtime="20201030 10:57:13.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.576" endtime="20201030 10:57:13.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.509" endtime="20201030 10:57:13.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.582" endtime="20201030 10:57:13.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:10.507" endtime="20201030 10:57:13.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:08.415" endtime="20201030 10:57:13.588"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:13.595" endtime="20201030 10:57:13.614"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.593" endtime="20201030 10:57:13.615"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:13.629" endtime="20201030 10:57:16.654"></status>
</kw>
<msg timestamp="20201030 10:57:16.655" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:13.627" endtime="20201030 10:57:16.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.661" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.657" endtime="20201030 10:57:16.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.667" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:16.663" endtime="20201030 10:57:16.668"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:13.625" endtime="20201030 10:57:16.669"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:13.622" endtime="20201030 10:57:16.670"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.620" endtime="20201030 10:57:16.671"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:16.679" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:16.678" endtime="20201030 10:57:16.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.673" endtime="20201030 10:57:16.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.619" endtime="20201030 10:57:16.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.619" endtime="20201030 10:57:16.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.683" endtime="20201030 10:57:16.686"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.617" endtime="20201030 10:57:16.687"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.615" endtime="20201030 10:57:16.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:13.592" endtime="20201030 10:57:16.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.709" endtime="20201030 10:57:16.724"></status>
</kw>
<msg timestamp="20201030 10:57:16.725" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.705" endtime="20201030 10:57:16.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.730" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:16.727" endtime="20201030 10:57:16.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:16.732" endtime="20201030 10:57:16.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.697" endtime="20201030 10:57:16.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.692" endtime="20201030 10:57:16.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.746" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 10:57:16.745" endtime="20201030 10:57:16.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.748" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 10:57:16.747" endtime="20201030 10:57:16.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.740" endtime="20201030 10:57:16.749"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:13.589" endtime="20201030 10:57:16.750" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:57:04.895" endtime="20201030 10:57:16.753"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:57:16.809" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:57:16.817" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:57:18.129" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:57:16.807" endtime="20201030 10:57:18.130"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:57:18.132" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:57:18.131" endtime="20201030 10:57:18.132"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.806" endtime="20201030 10:57:18.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:18.135" endtime="20201030 10:57:18.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.134" endtime="20201030 10:57:18.406"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:18.419" endtime="20201030 10:57:21.443"></status>
</kw>
<msg timestamp="20201030 10:57:21.444" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:18.417" endtime="20201030 10:57:21.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.450" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.447" endtime="20201030 10:57:21.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:21.457" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:21.452" endtime="20201030 10:57:21.457"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:18.415" endtime="20201030 10:57:21.459"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:18.412" endtime="20201030 10:57:21.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.411" endtime="20201030 10:57:21.461"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:21.470" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:21.468" endtime="20201030 10:57:21.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.463" endtime="20201030 10:57:21.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.410" endtime="20201030 10:57:21.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.410" endtime="20201030 10:57:21.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.474" endtime="20201030 10:57:21.477"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.409" endtime="20201030 10:57:21.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.480" endtime="20201030 10:57:21.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:18.407" endtime="20201030 10:57:21.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:16.804" endtime="20201030 10:57:21.486"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:21.502" endtime="20201030 10:57:21.523"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.497" endtime="20201030 10:57:21.523"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:21.537" endtime="20201030 10:57:24.562"></status>
</kw>
<msg timestamp="20201030 10:57:24.563" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:21.535" endtime="20201030 10:57:24.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.569" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.566" endtime="20201030 10:57:24.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.576" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:24.572" endtime="20201030 10:57:24.577"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:21.532" endtime="20201030 10:57:24.579"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:21.530" endtime="20201030 10:57:24.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.529" endtime="20201030 10:57:24.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:24.589" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:24.588" endtime="20201030 10:57:24.590"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.583" endtime="20201030 10:57:24.591"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.528" endtime="20201030 10:57:24.591"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.527" endtime="20201030 10:57:24.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.593" endtime="20201030 10:57:24.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.526" endtime="20201030 10:57:24.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.524" endtime="20201030 10:57:24.599"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:21.494" endtime="20201030 10:57:24.600"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.616" endtime="20201030 10:57:24.628"></status>
</kw>
<msg timestamp="20201030 10:57:24.629" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.614" endtime="20201030 10:57:24.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.631" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.630" endtime="20201030 10:57:24.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.632" endtime="20201030 10:57:24.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.611" endtime="20201030 10:57:24.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.608" endtime="20201030 10:57:24.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.642" endtime="20201030 10:57:24.915"></status>
</kw>
<msg timestamp="20201030 10:57:24.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102870403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102879819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:24.640" endtime="20201030 10:57:24.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102870403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102879819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:24.918" endtime="20201030 10:57:24.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.924" endtime="20201030 10:57:24.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.637" endtime="20201030 10:57:24.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.635" endtime="20201030 10:57:24.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:24.930" level="INFO">${RESULT} = [{'diff': 9.41600000015086e-06}, {'diff': 9.193999999990154e-06}, {'diff': 1.1209000000178548e-05}, {'diff': 6.6939999996407096e-06}, {'diff': 5.348000000182651e-06}, {'diff': 6.916999999884155e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:24.927" endtime="20201030 10:57:24.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:24.934" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.41600000015086e-06, 9.193999999990154e-06, 1.1209000000178548e-05, 6.6939999996407096e-06, 5.348000000182651e-06, 6.916999999884155e-06, 4.666999999791699e-06, 1.1832999999850102e-05, 8.18...</msg>
<status status="PASS" starttime="20201030 10:57:24.931" endtime="20201030 10:57:24.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.938" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:24.937" endtime="20201030 10:57:24.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.940" level="INFO">VALUE: [9.41600000015086e-06, 9.193999999990154e-06, 1.1209000000178548e-05, 6.6939999996407096e-06, 5.348000000182651e-06, 6.916999999884155e-06, 4.666999999791699e-06, 1.1832999999850102e-05, 8.18100000010702e-06, 9.402999999963413e-06, 7.124999999774673e-06, 1.0624999999819806e-05, 1.0778000000044585e-05, 7.763999999799154e-06, 6.332999999969502e-06, 7.416999999954044e-06, 8.499999999855845e-06, 7.624999999844562e-06, 8.054999999895784e-06, 4.652999999965601e-06, 9.193999999990154e-06, 8.208000000120563e-06, 1.1221999999921906e-05, 9.985999999795325e-06, 8.763999999938932e-06]</msg>
<status status="PASS" starttime="20201030 10:57:24.939" endtime="20201030 10:57:24.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.934" endtime="20201030 10:57:24.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.605" endtime="20201030 10:57:24.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.604" endtime="20201030 10:57:24.942"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.950" endtime="20201030 10:57:24.962"></status>
</kw>
<msg timestamp="20201030 10:57:24.963" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.948" endtime="20201030 10:57:24.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:24.965" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:24.964" endtime="20201030 10:57:24.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.966" endtime="20201030 10:57:24.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.946" endtime="20201030 10:57:24.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.944" endtime="20201030 10:57:24.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:24.977" endtime="20201030 10:57:25.273"></status>
</kw>
<msg timestamp="20201030 10:57:25.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102870403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102879819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:24.975" endtime="20201030 10:57:25.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102870403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102879819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.277" endtime="20201030 10:57:25.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.286" endtime="20201030 10:57:25.287"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.972" endtime="20201030 10:57:25.288"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.971" endtime="20201030 10:57:25.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:25.292" level="INFO">${RESULT} = [{'diff': 9.41600000015086e-06}, {'diff': 9.193999999990154e-06}, {'diff': 1.1209000000178548e-05}, {'diff': 6.6939999996407096e-06}, {'diff': 5.348000000182651e-06}, {'diff': 6.916999999884155e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:25.289" endtime="20201030 10:57:25.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:25.297" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.41600000015086e-06, 9.193999999990154e-06, 1.1209000000178548e-05, 6.6939999996407096e-06, 5.348000000182651e-06, 6.916999999884155e-06, 4.666999999791699e-06, 1.1832999999850102e-05, 8.18...</msg>
<status status="PASS" starttime="20201030 10:57:25.293" endtime="20201030 10:57:25.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.301" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:25.300" endtime="20201030 10:57:25.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.304" level="INFO">VALUE: [9.41600000015086e-06, 9.193999999990154e-06, 1.1209000000178548e-05, 6.6939999996407096e-06, 5.348000000182651e-06, 6.916999999884155e-06, 4.666999999791699e-06, 1.1832999999850102e-05, 8.18100000010702e-06, 9.402999999963413e-06, 7.124999999774673e-06, 1.0624999999819806e-05, 1.0778000000044585e-05, 7.763999999799154e-06, 6.332999999969502e-06, 7.416999999954044e-06, 8.499999999855845e-06, 7.624999999844562e-06, 8.054999999895784e-06, 4.652999999965601e-06, 9.193999999990154e-06, 8.208000000120563e-06, 1.1221999999921906e-05, 9.985999999795325e-06, 8.763999999938932e-06, 9.042000000292205e-06, 8.930999999989808e-06, 9.292000000105105e-06, 7.180999999967241e-06, 7.624999999844562e-06, 9.180000000164057e-06, 1.0694999999838473e-05, 8.347000000075155e-06, 4.333999999772686e-06, 1.1916000000056215e-05, 8.91600000008097e-06, 6.319000000143404e-06, 9.082999999687758e-06, 9.694000000060043e-06, 1.0721999999852017e-05, 9.041999999848116e-06, 7.792000000339527e-06, 7.737000000229699e-06, 1.1542000000197561e-05, 6.056000000143058e-06, 1.1306000000210759e-05, 8.639000000254526e-06, 7.77800000006934e-06, 6.764000000103465e-06, 1.020799999995603e-05]</msg>
<status status="PASS" starttime="20201030 10:57:25.303" endtime="20201030 10:57:25.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.298" endtime="20201030 10:57:25.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.943" endtime="20201030 10:57:25.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.942" endtime="20201030 10:57:25.306"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.314" endtime="20201030 10:57:25.327"></status>
</kw>
<msg timestamp="20201030 10:57:25.327" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.313" endtime="20201030 10:57:25.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.330" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.328" endtime="20201030 10:57:25.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.331" endtime="20201030 10:57:25.332"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.310" endtime="20201030 10:57:25.333"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.308" endtime="20201030 10:57:25.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.340" endtime="20201030 10:57:25.651"></status>
</kw>
<msg timestamp="20201030 10:57:25.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.103066514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.103077139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.339" endtime="20201030 10:57:25.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.103066514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.103077139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.656" endtime="20201030 10:57:25.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.667" endtime="20201030 10:57:25.669"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.336" endtime="20201030 10:57:25.669"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.334" endtime="20201030 10:57:25.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:25.674" level="INFO">${RESULT} = [{'diff': 1.0624999999819806e-05}, {'diff': 1.0778000000044585e-05}, {'diff': 7.763999999799154e-06}, {'diff': 6.332999999969502e-06}, {'diff': 7.416999999954044e-06}, {'diff': 8.499999999855845e-06},...</msg>
<status status="PASS" starttime="20201030 10:57:25.670" endtime="20201030 10:57:25.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:25.680" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0624999999819806e-05, 1.0778000000044585e-05, 7.763999999799154e-06, 6.332999999969502e-06, 7.416999999954044e-06, 8.499999999855845e-06, 7.624999999844562e-06, 8.054999999895784e-06, 4.65...</msg>
<status status="PASS" starttime="20201030 10:57:25.675" endtime="20201030 10:57:25.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.684" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:25.683" endtime="20201030 10:57:25.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.687" level="INFO">VALUE: [1.0624999999819806e-05, 1.0778000000044585e-05, 7.763999999799154e-06, 6.332999999969502e-06, 7.416999999954044e-06, 8.499999999855845e-06, 7.624999999844562e-06, 8.054999999895784e-06, 4.652999999965601e-06, 9.193999999990154e-06, 8.208000000120563e-06, 1.1221999999921906e-05, 9.985999999795325e-06, 8.763999999938932e-06, 9.042000000292205e-06, 8.930999999989808e-06, 9.292000000105105e-06, 7.180999999967241e-06, 7.624999999844562e-06, 9.180000000164057e-06, 1.0694999999838473e-05, 8.347000000075155e-06, 4.333999999772686e-06, 1.1916000000056215e-05, 8.91600000008097e-06, 6.319000000143404e-06, 9.082999999687758e-06, 9.694000000060043e-06, 1.0721999999852017e-05, 9.041999999848116e-06, 7.792000000339527e-06, 7.737000000229699e-06, 1.1542000000197561e-05, 6.056000000143058e-06, 1.1306000000210759e-05, 8.639000000254526e-06, 7.77800000006934e-06, 6.764000000103465e-06, 1.020799999995603e-05, 7.125000000218762e-06, 1.1068999999697127e-05, 8.054999999895784e-06, 9.083000000131847e-06, 9.195000000072895e-06, 8.12499999991445e-06, 7.985999999959859e-06, 8.554999999965673e-06, 7.985999999959859e-06, 8.208000000120563e-06, 6.819000000213293e-06, 1.0915999999916437e-05, 7.513999999986254e-06, 7.194999999793339e-06, 4.917000000048688e-06, 6.417000000258355e-06, 8.556000000048414e-06, 6.5690000004003934e-06, 1.263899999992546e-05, 9.624999999680028e-06, 9.401999999880672e-06, 6.833000000039391e-06, 9.31899999967456e-06, 6.485999999750192e-06, 7.222999999889623e-06]</msg>
<status status="PASS" starttime="20201030 10:57:25.685" endtime="20201030 10:57:25.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.680" endtime="20201030 10:57:25.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.307" endtime="20201030 10:57:25.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.307" endtime="20201030 10:57:25.689"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.697" endtime="20201030 10:57:25.708"></status>
</kw>
<msg timestamp="20201030 10:57:25.709" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.695" endtime="20201030 10:57:25.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:25.711" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:25.710" endtime="20201030 10:57:25.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.712" endtime="20201030 10:57:25.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.692" endtime="20201030 10:57:25.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.691" endtime="20201030 10:57:25.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:25.721" endtime="20201030 10:57:26.039"></status>
</kw>
<msg timestamp="20201030 10:57:26.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.425148375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.425154694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:25.720" endtime="20201030 10:57:26.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.425148375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.425154694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.044" endtime="20201030 10:57:26.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.054" endtime="20201030 10:57:26.056"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.717" endtime="20201030 10:57:26.056"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.715" endtime="20201030 10:57:26.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:26.061" level="INFO">${RESULT} = [{'diff': 6.319000000143404e-06}, {'diff': 9.082999999687758e-06}, {'diff': 9.694000000060043e-06}, {'diff': 1.0721999999852017e-05}, {'diff': 9.041999999848116e-06}, {'diff': 7.792000000339527e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:26.057" endtime="20201030 10:57:26.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:26.066" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.319000000143404e-06, 9.082999999687758e-06, 9.694000000060043e-06, 1.0721999999852017e-05, 9.041999999848116e-06, 7.792000000339527e-06, 7.737000000229699e-06, 1.1542000000197561e-05, 6.05...</msg>
<status status="PASS" starttime="20201030 10:57:26.062" endtime="20201030 10:57:26.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.071" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:26.069" endtime="20201030 10:57:26.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.073" level="INFO">VALUE: [6.319000000143404e-06, 9.082999999687758e-06, 9.694000000060043e-06, 1.0721999999852017e-05, 9.041999999848116e-06, 7.792000000339527e-06, 7.737000000229699e-06, 1.1542000000197561e-05, 6.056000000143058e-06, 1.1306000000210759e-05, 8.639000000254526e-06, 7.77800000006934e-06, 6.764000000103465e-06, 1.020799999995603e-05, 7.125000000218762e-06, 1.1068999999697127e-05, 8.054999999895784e-06, 9.083000000131847e-06, 9.195000000072895e-06, 8.12499999991445e-06, 7.985999999959859e-06, 8.554999999965673e-06, 7.985999999959859e-06, 8.208000000120563e-06, 6.819000000213293e-06, 1.0915999999916437e-05, 7.513999999986254e-06, 7.194999999793339e-06, 4.917000000048688e-06, 6.417000000258355e-06, 8.556000000048414e-06, 6.5690000004003934e-06, 1.263899999992546e-05, 9.624999999680028e-06, 9.401999999880672e-06, 6.833000000039391e-06, 9.31899999967456e-06, 6.485999999750192e-06, 7.222999999889623e-06, 1.0486000000753393e-05, 7.513999999986254e-06, 8.000000000230045e-06, 7.985999999959859e-06, 1.0833999999348976e-05, 1.0832999999266235e-05, 1.1125000000333785e-05, 6.8469999998654885e-06, 4.193999999735354e-06, 7.708000000050674e-06, 9.416999999345421e-06, 6.499999999576289e-06, 9.917000000747578e-06, 1.020799999995603e-05, 1.120799999920763e-05, 8.776999999682289e-06, 5.05499999992054e-06, 7.33300000010928e-06, 9.916000000664837e-06, 5.694999999583672e-06, 7.92999999976729e-06, 1.0694999999394383e-05, 1.1902999999868769e-05, 7.33300000010928e-06, 7.2779999999994516e-06]</msg>
<status status="PASS" starttime="20201030 10:57:26.072" endtime="20201030 10:57:26.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.067" endtime="20201030 10:57:26.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.689" endtime="20201030 10:57:26.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:25.689" endtime="20201030 10:57:26.075"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.084" endtime="20201030 10:57:26.095"></status>
</kw>
<msg timestamp="20201030 10:57:26.095" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.081" endtime="20201030 10:57:26.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.098" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.096" endtime="20201030 10:57:26.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.099" endtime="20201030 10:57:26.100"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.079" endtime="20201030 10:57:26.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.077" endtime="20201030 10:57:26.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.108" endtime="20201030 10:57:26.429"></status>
</kw>
<msg timestamp="20201030 10:57:26.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.781513028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.781523944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.106" endtime="20201030 10:57:26.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.781513028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.781523944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.434" endtime="20201030 10:57:26.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.444" endtime="20201030 10:57:26.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.104" endtime="20201030 10:57:26.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.102" endtime="20201030 10:57:26.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:26.451" level="INFO">${RESULT} = [{'diff': 1.0915999999916437e-05}, {'diff': 7.513999999986254e-06}, {'diff': 7.194999999793339e-06}, {'diff': 4.917000000048688e-06}, {'diff': 6.417000000258355e-06}, {'diff': 8.556000000048414e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:26.447" endtime="20201030 10:57:26.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:26.456" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0915999999916437e-05, 7.513999999986254e-06, 7.194999999793339e-06, 4.917000000048688e-06, 6.417000000258355e-06, 8.556000000048414e-06, 6.5690000004003934e-06, 1.263899999992546e-05, 9.62...</msg>
<status status="PASS" starttime="20201030 10:57:26.452" endtime="20201030 10:57:26.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.461" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:26.460" endtime="20201030 10:57:26.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.464" level="INFO">VALUE: [1.0915999999916437e-05, 7.513999999986254e-06, 7.194999999793339e-06, 4.917000000048688e-06, 6.417000000258355e-06, 8.556000000048414e-06, 6.5690000004003934e-06, 1.263899999992546e-05, 9.624999999680028e-06, 9.401999999880672e-06, 6.833000000039391e-06, 9.31899999967456e-06, 6.485999999750192e-06, 7.222999999889623e-06, 1.0486000000753393e-05, 7.513999999986254e-06, 8.000000000230045e-06, 7.985999999959859e-06, 1.0833999999348976e-05, 1.0832999999266235e-05, 1.1125000000333785e-05, 6.8469999998654885e-06, 4.193999999735354e-06, 7.708000000050674e-06, 9.416999999345421e-06, 6.499999999576289e-06, 9.917000000747578e-06, 1.020799999995603e-05, 1.120799999920763e-05, 8.776999999682289e-06, 5.05499999992054e-06, 7.33300000010928e-06, 9.916000000664837e-06, 5.694999999583672e-06, 7.92999999976729e-06, 1.0694999999394383e-05, 1.1902999999868769e-05, 7.33300000010928e-06, 7.2779999999994516e-06, 8.499999999855845e-06, 8.457999999933463e-06, 8.514000000126032e-06, 8.138000000101897e-06, 7.5549999998258954e-06, 5.264000000337887e-06, 6.972000000438072e-06, 8.679999999650079e-06, 1.2124999999585384e-05, 7.153000000315046e-06, 1.0180999999498397e-05, 7.5549999998258954e-06, 8.625000000428429e-06, 7.6249999994004725e-06, 7.77800000051343e-06, 7.040999999929909e-06, 5.389000000022293e-06, 9.638999999950215e-06, 1.0555999999439791e-05, 6.000000000838668e-06, 9.486999999808177e-06, 8.861000000415231e-06, 1.2110999999315197e-05, 7.0979999993170395e-06, 7.862000000358194e-06]</msg>
<status status="PASS" starttime="20201030 10:57:26.462" endtime="20201030 10:57:26.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.458" endtime="20201030 10:57:26.465"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.076" endtime="20201030 10:57:26.465"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.075" endtime="20201030 10:57:26.465"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.474" endtime="20201030 10:57:26.484"></status>
</kw>
<msg timestamp="20201030 10:57:26.485" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.472" endtime="20201030 10:57:26.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.487" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.486" endtime="20201030 10:57:26.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.488" endtime="20201030 10:57:26.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.469" endtime="20201030 10:57:26.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.467" endtime="20201030 10:57:26.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.498" endtime="20201030 10:57:26.813"></status>
</kw>
<msg timestamp="20201030 10:57:26.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.153019319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.153025819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.496" endtime="20201030 10:57:26.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.153019319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.153025819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.818" endtime="20201030 10:57:26.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.828" endtime="20201030 10:57:26.830"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.493" endtime="20201030 10:57:26.830"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.492" endtime="20201030 10:57:26.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:26.835" level="INFO">${RESULT} = [{'diff': 6.499999999576289e-06}, {'diff': 9.917000000747578e-06}, {'diff': 1.020799999995603e-05}, {'diff': 1.120799999920763e-05}, {'diff': 8.776999999682289e-06}, {'diff': 5.05499999992054e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:26.832" endtime="20201030 10:57:26.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:26.842" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.499999999576289e-06, 9.917000000747578e-06, 1.020799999995603e-05, 1.120799999920763e-05, 8.776999999682289e-06, 5.05499999992054e-06, 7.33300000010928e-06, 9.916000000664837e-06, 5.694999...</msg>
<status status="PASS" starttime="20201030 10:57:26.836" endtime="20201030 10:57:26.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.847" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:26.846" endtime="20201030 10:57:26.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.850" level="INFO">VALUE: [6.499999999576289e-06, 9.917000000747578e-06, 1.020799999995603e-05, 1.120799999920763e-05, 8.776999999682289e-06, 5.05499999992054e-06, 7.33300000010928e-06, 9.916000000664837e-06, 5.694999999583672e-06, 7.92999999976729e-06, 1.0694999999394383e-05, 1.1902999999868769e-05, 7.33300000010928e-06, 7.2779999999994516e-06, 8.499999999855845e-06, 8.457999999933463e-06, 8.514000000126032e-06, 8.138000000101897e-06, 7.5549999998258954e-06, 5.264000000337887e-06, 6.972000000438072e-06, 8.679999999650079e-06, 1.2124999999585384e-05, 7.153000000315046e-06, 1.0180999999498397e-05, 7.5549999998258954e-06, 8.625000000428429e-06, 7.6249999994004725e-06, 7.77800000051343e-06, 7.040999999929909e-06, 5.389000000022293e-06, 9.638999999950215e-06, 1.0555999999439791e-05, 6.000000000838668e-06, 9.486999999808177e-06, 8.861000000415231e-06, 1.2110999999315197e-05, 7.0979999993170395e-06, 7.862000000358194e-06, 1.0778000000044585e-05, 7.193999999266509e-06, 6.056000000143058e-06, 5.736000000311492e-06, 1.1054999999871029e-05, 6.2080000002850966e-06, 9.680000000678035e-06, 9.541999999918005e-06, 5.611000000627087e-06, 1.0762999999691658e-05, 1.061099999954962e-05, 1.1332999999780213e-05, 7.708999999245236e-06, 1.0639000000089993e-05, 7.486000000334059e-06, 7.709000000133415e-06, 9.151999999623683e-06, 6.347000000239689e-06, 8.346999999631066e-06, 8.041000000069687e-06, 6.986000000708259e-06, 1.0277999999530607e-05, 1.0264000000148599e-05, 9.70800000033023e-06, 7.2080000004248745e-06]</msg>
<status status="PASS" starttime="20201030 10:57:26.848" endtime="20201030 10:57:26.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.844" endtime="20201030 10:57:26.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.466" endtime="20201030 10:57:26.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.466" endtime="20201030 10:57:26.851"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.859" endtime="20201030 10:57:26.871"></status>
</kw>
<msg timestamp="20201030 10:57:26.872" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.858" endtime="20201030 10:57:26.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:26.874" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:26.873" endtime="20201030 10:57:26.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.875" endtime="20201030 10:57:26.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.855" endtime="20201030 10:57:26.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.853" endtime="20201030 10:57:26.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:26.885" endtime="20201030 10:57:27.199"></status>
</kw>
<msg timestamp="20201030 10:57:27.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.530040403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.530047958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:26.883" endtime="20201030 10:57:27.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.530040403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.530047958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.204" endtime="20201030 10:57:27.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.214" endtime="20201030 10:57:27.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.880" endtime="20201030 10:57:27.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.879" endtime="20201030 10:57:27.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:27.221" level="INFO">${RESULT} = [{'diff': 7.5549999998258954e-06}, {'diff': 8.625000000428429e-06}, {'diff': 7.6249999994004725e-06}, {'diff': 7.77800000051343e-06}, {'diff': 7.040999999929909e-06}, {'diff': 5.389000000022293e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:27.218" endtime="20201030 10:57:27.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:27.226" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.5549999998258954e-06, 8.625000000428429e-06, 7.6249999994004725e-06, 7.77800000051343e-06, 7.040999999929909e-06, 5.389000000022293e-06, 9.638999999950215e-06, 1.0555999999439791e-05, 6.00...</msg>
<status status="PASS" starttime="20201030 10:57:27.222" endtime="20201030 10:57:27.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.231" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:27.230" endtime="20201030 10:57:27.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.233" level="INFO">VALUE: [7.5549999998258954e-06, 8.625000000428429e-06, 7.6249999994004725e-06, 7.77800000051343e-06, 7.040999999929909e-06, 5.389000000022293e-06, 9.638999999950215e-06, 1.0555999999439791e-05, 6.000000000838668e-06, 9.486999999808177e-06, 8.861000000415231e-06, 1.2110999999315197e-05, 7.0979999993170395e-06, 7.862000000358194e-06, 1.0778000000044585e-05, 7.193999999266509e-06, 6.056000000143058e-06, 5.736000000311492e-06, 1.1054999999871029e-05, 6.2080000002850966e-06, 9.680000000678035e-06, 9.541999999918005e-06, 5.611000000627087e-06, 1.0762999999691658e-05, 1.061099999954962e-05, 1.1332999999780213e-05, 7.708999999245236e-06, 1.0639000000089993e-05, 7.486000000334059e-06, 7.709000000133415e-06, 9.151999999623683e-06, 6.347000000239689e-06, 8.346999999631066e-06, 8.041000000069687e-06, 6.986000000708259e-06, 1.0277999999530607e-05, 1.0264000000148599e-05, 9.70800000033023e-06, 7.2080000004248745e-06, 6.972000000438072e-06, 9.847000000284822e-06, 8.403000000711813e-06, 7.499999999716067e-06, 1.13470000000504e-05, 7.776999999542511e-06, 6.7770000002909114e-06, 6.8469999998654885e-06, 9.416999999345421e-06, 1.065200000027744e-05, 9.735999999982425e-06, 8.152999999566646e-06, 9.194000000434244e-06, 7.847000000005266e-06, 8.08399999918663e-06, 5.403000000292479e-06, 1.3055000000150585e-05, 1.2417000000652934e-05, 5.2500000000677005e-06, 9.583999999840387e-06, 7.708000000050674e-06, 8.903000000337613e-06, 8.792000000035216e-06, 7.63899999967066e-06, 7.263999999729265e-06]</msg>
<status status="PASS" starttime="20201030 10:57:27.232" endtime="20201030 10:57:27.234"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.227" endtime="20201030 10:57:27.234"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.852" endtime="20201030 10:57:27.235"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:26.852" endtime="20201030 10:57:27.235"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.244" endtime="20201030 10:57:27.256"></status>
</kw>
<msg timestamp="20201030 10:57:27.257" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.242" endtime="20201030 10:57:27.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.259" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.258" endtime="20201030 10:57:27.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.260" endtime="20201030 10:57:27.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.239" endtime="20201030 10:57:27.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.237" endtime="20201030 10:57:27.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.270" endtime="20201030 10:57:27.582"></status>
</kw>
<msg timestamp="20201030 10:57:27.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.908896542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.908907875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.268" endtime="20201030 10:57:27.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.908896542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.908907875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.587" endtime="20201030 10:57:27.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.597" endtime="20201030 10:57:27.599"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.266" endtime="20201030 10:57:27.599"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.264" endtime="20201030 10:57:27.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:27.604" level="INFO">${RESULT} = [{'diff': 1.1332999999780213e-05}, {'diff': 7.708999999245236e-06}, {'diff': 1.0639000000089993e-05}, {'diff': 7.486000000334059e-06}, {'diff': 7.709000000133415e-06}, {'diff': 9.151999999623683e-06},...</msg>
<status status="PASS" starttime="20201030 10:57:27.600" endtime="20201030 10:57:27.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:27.609" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1332999999780213e-05, 7.708999999245236e-06, 1.0639000000089993e-05, 7.486000000334059e-06, 7.709000000133415e-06, 9.151999999623683e-06, 6.347000000239689e-06, 8.346999999631066e-06, 8.04...</msg>
<status status="PASS" starttime="20201030 10:57:27.605" endtime="20201030 10:57:27.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.614" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:27.613" endtime="20201030 10:57:27.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.617" level="INFO">VALUE: [1.1332999999780213e-05, 7.708999999245236e-06, 1.0639000000089993e-05, 7.486000000334059e-06, 7.709000000133415e-06, 9.151999999623683e-06, 6.347000000239689e-06, 8.346999999631066e-06, 8.041000000069687e-06, 6.986000000708259e-06, 1.0277999999530607e-05, 1.0264000000148599e-05, 9.70800000033023e-06, 7.2080000004248745e-06, 6.972000000438072e-06, 9.847000000284822e-06, 8.403000000711813e-06, 7.499999999716067e-06, 1.13470000000504e-05, 7.776999999542511e-06, 6.7770000002909114e-06, 6.8469999998654885e-06, 9.416999999345421e-06, 1.065200000027744e-05, 9.735999999982425e-06, 8.152999999566646e-06, 9.194000000434244e-06, 7.847000000005266e-06, 8.08399999918663e-06, 5.403000000292479e-06, 1.3055000000150585e-05, 1.2417000000652934e-05, 5.2500000000677005e-06, 9.583999999840387e-06, 7.708000000050674e-06, 8.903000000337613e-06, 8.792000000035216e-06, 7.63899999967066e-06, 7.263999999729265e-06, 8.139000000184637e-06, 6.347000000239689e-06, 9.250000000626812e-06, 9.207999999816252e-06, 1.1193999999825621e-05, 6.34699999935151e-06, 1.0222000000226217e-05, 9.278000000279008e-06, 1.2347000000190178e-05, 8.485999999585658e-06, 1.2431000000034942e-05, 9.625000000568207e-06, 1.1319000000398205e-05, 1.1277999999670385e-05, 9.278000000279008e-06, 7.0690000004702824e-06, 4.7770000000113555e-06, 7.360999999761475e-06, 8.486999999668399e-06, 1.0417000000373378e-05, 8.625000000428429e-06, 8.707999999302274e-06, 8.806000000305403e-06, 9.138999999436237e-06, 7.444999999606239e-06]</msg>
<status status="PASS" starttime="20201030 10:57:27.615" endtime="20201030 10:57:27.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.611" endtime="20201030 10:57:27.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.236" endtime="20201030 10:57:27.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.235" endtime="20201030 10:57:27.618"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.627" endtime="20201030 10:57:27.638"></status>
</kw>
<msg timestamp="20201030 10:57:27.639" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.625" endtime="20201030 10:57:27.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.641" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:27.640" endtime="20201030 10:57:27.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.642" endtime="20201030 10:57:27.644"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.622" endtime="20201030 10:57:27.645"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.621" endtime="20201030 10:57:27.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.652" endtime="20201030 10:57:27.968"></status>
</kw>
<msg timestamp="20201030 10:57:27.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.285147944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.285156097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.650" endtime="20201030 10:57:27.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:27.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.285147944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.285156097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:27.974" endtime="20201030 10:57:27.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:27.984" endtime="20201030 10:57:27.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.648" endtime="20201030 10:57:27.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.646" endtime="20201030 10:57:27.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:27.991" level="INFO">${RESULT} = [{'diff': 8.152999999566646e-06}, {'diff': 9.194000000434244e-06}, {'diff': 7.847000000005266e-06}, {'diff': 8.08399999918663e-06}, {'diff': 5.403000000292479e-06}, {'diff': 1.3055000000150585e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:27.987" endtime="20201030 10:57:27.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:27.997" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.152999999566646e-06, 9.194000000434244e-06, 7.847000000005266e-06, 8.08399999918663e-06, 5.403000000292479e-06, 1.3055000000150585e-05, 1.2417000000652934e-05, 5.2500000000677005e-06, 9.58...</msg>
<status status="PASS" starttime="20201030 10:57:27.992" endtime="20201030 10:57:27.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.002" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:28.001" endtime="20201030 10:57:28.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.005" level="INFO">VALUE: [8.152999999566646e-06, 9.194000000434244e-06, 7.847000000005266e-06, 8.08399999918663e-06, 5.403000000292479e-06, 1.3055000000150585e-05, 1.2417000000652934e-05, 5.2500000000677005e-06, 9.583999999840387e-06, 7.708000000050674e-06, 8.903000000337613e-06, 8.792000000035216e-06, 7.63899999967066e-06, 7.263999999729265e-06, 8.139000000184637e-06, 6.347000000239689e-06, 9.250000000626812e-06, 9.207999999816252e-06, 1.1193999999825621e-05, 6.34699999935151e-06, 1.0222000000226217e-05, 9.278000000279008e-06, 1.2347000000190178e-05, 8.485999999585658e-06, 1.2431000000034942e-05, 9.625000000568207e-06, 1.1319000000398205e-05, 1.1277999999670385e-05, 9.278000000279008e-06, 7.0690000004702824e-06, 4.7770000000113555e-06, 7.360999999761475e-06, 8.486999999668399e-06, 1.0417000000373378e-05, 8.625000000428429e-06, 8.707999999302274e-06, 8.806000000305403e-06, 9.138999999436237e-06, 7.444999999606239e-06, 1.0417000000373378e-05, 8.305999999791425e-06, 6.305999999511869e-06, 7.596999999748277e-06, 1.040300000010319e-05, 8.62499999954025e-06, 5.417000000562666e-06, 8.97299999991219e-06, 5.568999999816526e-06, 9.624999999680028e-06, 7.791999999895438e-06, 6.125000000523073e-06, 6.915999999357325e-06, 9.846999999396644e-06, 7.153000000315046e-06, 7.2779999999994516e-06, 7.055000000200096e-06, 1.070799999958183e-05, 7.33400000019202e-06, 8.986000000099637e-06, 9.638999999950215e-06, 6.471999999924094e-06, 5.4439999992439425e-06, 9.777999999904807e-06, 8.47200000020365e-06]</msg>
<status status="PASS" starttime="20201030 10:57:28.003" endtime="20201030 10:57:28.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.998" endtime="20201030 10:57:28.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.619" endtime="20201030 10:57:28.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:27.619" endtime="20201030 10:57:28.006"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.015" endtime="20201030 10:57:28.027"></status>
</kw>
<msg timestamp="20201030 10:57:28.027" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.013" endtime="20201030 10:57:28.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.030" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.028" endtime="20201030 10:57:28.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.031" endtime="20201030 10:57:28.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.010" endtime="20201030 10:57:28.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.009" endtime="20201030 10:57:28.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.042" endtime="20201030 10:57:28.362"></status>
</kw>
<msg timestamp="20201030 10:57:28.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.659235514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.659245139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.040" endtime="20201030 10:57:28.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.659235514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.659245139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.367" endtime="20201030 10:57:28.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.377" endtime="20201030 10:57:28.379"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.036" endtime="20201030 10:57:28.379"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.035" endtime="20201030 10:57:28.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:28.384" level="INFO">${RESULT} = [{'diff': 9.625000000568207e-06}, {'diff': 1.1319000000398205e-05}, {'diff': 1.1277999999670385e-05}, {'diff': 9.278000000279008e-06}, {'diff': 7.0690000004702824e-06}, {'diff': 4.7770000000113555e-06...</msg>
<status status="PASS" starttime="20201030 10:57:28.380" endtime="20201030 10:57:28.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:28.389" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.625000000568207e-06, 1.1319000000398205e-05, 1.1277999999670385e-05, 9.278000000279008e-06, 7.0690000004702824e-06, 4.7770000000113555e-06, 7.360999999761475e-06, 8.486999999668399e-06, 1....</msg>
<status status="PASS" starttime="20201030 10:57:28.385" endtime="20201030 10:57:28.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.393" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:28.392" endtime="20201030 10:57:28.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.397" level="INFO">VALUE: [9.625000000568207e-06, 1.1319000000398205e-05, 1.1277999999670385e-05, 9.278000000279008e-06, 7.0690000004702824e-06, 4.7770000000113555e-06, 7.360999999761475e-06, 8.486999999668399e-06, 1.0417000000373378e-05, 8.625000000428429e-06, 8.707999999302274e-06, 8.806000000305403e-06, 9.138999999436237e-06, 7.444999999606239e-06, 1.0417000000373378e-05, 8.305999999791425e-06, 6.305999999511869e-06, 7.596999999748277e-06, 1.040300000010319e-05, 8.62499999954025e-06, 5.417000000562666e-06, 8.97299999991219e-06, 5.568999999816526e-06, 9.624999999680028e-06, 7.791999999895438e-06, 6.125000000523073e-06, 6.915999999357325e-06, 9.846999999396644e-06, 7.153000000315046e-06, 7.2779999999994516e-06, 7.055000000200096e-06, 1.070799999958183e-05, 7.33400000019202e-06, 8.986000000099637e-06, 9.638999999950215e-06, 6.471999999924094e-06, 5.4439999992439425e-06, 9.777999999904807e-06, 8.47200000020365e-06, 1.1569999999849756e-05, 1.0570000000598156e-05, 6.347000000239689e-06, 1.070799999958183e-05, 9.818999999744449e-06, 1.2222000000505773e-05, 1.1403000000242969e-05, 8.02799999988224e-06, 8.56900000023586e-06, 5.208000000145319e-06, 8.000000000230045e-06, 8.111000000532442e-06, 1.001399999989161e-05, 9.402999999963413e-06, 9.334000000471576e-06, 9.499999999995623e-06, 5.9160000001057256e-06, 7.63899999967066e-06, 6.9859999998200806e-06, 8.360999999901253e-06, 6.541999999498671e-06, 8.139000000184637e-06, 9.375000000311218e-06, 7.096999999234299e-06, 9.292000000549194e-06]</msg>
<status status="PASS" starttime="20201030 10:57:28.395" endtime="20201030 10:57:28.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.390" endtime="20201030 10:57:28.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.007" endtime="20201030 10:57:28.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.007" endtime="20201030 10:57:28.398"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.407" endtime="20201030 10:57:28.417"></status>
</kw>
<msg timestamp="20201030 10:57:28.418" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.405" endtime="20201030 10:57:28.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.420" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.419" endtime="20201030 10:57:28.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.421" endtime="20201030 10:57:28.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.402" endtime="20201030 10:57:28.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.401" endtime="20201030 10:57:28.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.431" endtime="20201030 10:57:28.744"></status>
</kw>
<msg timestamp="20201030 10:57:28.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.031972958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.031979083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.429" endtime="20201030 10:57:28.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.031972958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.031979083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.749" endtime="20201030 10:57:28.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.759" endtime="20201030 10:57:28.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.426" endtime="20201030 10:57:28.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.425" endtime="20201030 10:57:28.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:28.766" level="INFO">${RESULT} = [{'diff': 6.125000000523073e-06}, {'diff': 6.915999999357325e-06}, {'diff': 9.846999999396644e-06}, {'diff': 7.153000000315046e-06}, {'diff': 7.2779999999994516e-06}, {'diff': 7.055000000200096e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:28.763" endtime="20201030 10:57:28.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:28.772" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.125000000523073e-06, 6.915999999357325e-06, 9.846999999396644e-06, 7.153000000315046e-06, 7.2779999999994516e-06, 7.055000000200096e-06, 1.070799999958183e-05, 7.33400000019202e-06, 8.9860...</msg>
<status status="PASS" starttime="20201030 10:57:28.767" endtime="20201030 10:57:28.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.777" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:28.776" endtime="20201030 10:57:28.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.779" level="INFO">VALUE: [6.125000000523073e-06, 6.915999999357325e-06, 9.846999999396644e-06, 7.153000000315046e-06, 7.2779999999994516e-06, 7.055000000200096e-06, 1.070799999958183e-05, 7.33400000019202e-06, 8.986000000099637e-06, 9.638999999950215e-06, 6.471999999924094e-06, 5.4439999992439425e-06, 9.777999999904807e-06, 8.47200000020365e-06, 1.1569999999849756e-05, 1.0570000000598156e-05, 6.347000000239689e-06, 1.070799999958183e-05, 9.818999999744449e-06, 1.2222000000505773e-05, 1.1403000000242969e-05, 8.02799999988224e-06, 8.56900000023586e-06, 5.208000000145319e-06, 8.000000000230045e-06, 8.111000000532442e-06, 1.001399999989161e-05, 9.402999999963413e-06, 9.334000000471576e-06, 9.499999999995623e-06, 5.9160000001057256e-06, 7.63899999967066e-06, 6.9859999998200806e-06, 8.360999999901253e-06, 6.541999999498671e-06, 8.139000000184637e-06, 9.375000000311218e-06, 7.096999999234299e-06, 9.292000000549194e-06, 4.986000000428703e-06, 6.764000000103465e-06, 1.1138999999715793e-05, 6.625000000148873e-06, 7.499999999716067e-06, 8.679999999650079e-06, 8.513999999237853e-06, 1.0193999999685843e-05, 7.985999999959859e-06, 8.87499999979724e-06, 1.2179999999695212e-05, 1.1180999999638175e-05, 8.346999999631066e-06, 7.499999999716067e-06, 7.5129999999035135e-06, 8.847000000145044e-06, 1.0042000000431983e-05, 8.499999999855845e-06, 8.91600000052506e-06, 5.819000000073515e-06, 7.055999999394658e-06, 8.986000000099637e-06, 7.5549999998258954e-06, 8.499999999855845e-06, 7.486999999528621e-06]</msg>
<status status="PASS" starttime="20201030 10:57:28.778" endtime="20201030 10:57:28.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.773" endtime="20201030 10:57:28.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.399" endtime="20201030 10:57:28.781"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.399" endtime="20201030 10:57:28.781"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.789" endtime="20201030 10:57:28.800"></status>
</kw>
<msg timestamp="20201030 10:57:28.801" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.787" endtime="20201030 10:57:28.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:28.803" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:28.802" endtime="20201030 10:57:28.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.804" endtime="20201030 10:57:28.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.785" endtime="20201030 10:57:28.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.783" endtime="20201030 10:57:28.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:28.814" endtime="20201030 10:57:29.127"></status>
</kw>
<msg timestamp="20201030 10:57:29.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.409424722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.409432833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:28.812" endtime="20201030 10:57:29.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.409424722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.409432833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.132" endtime="20201030 10:57:29.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.143" endtime="20201030 10:57:29.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.809" endtime="20201030 10:57:29.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.808" endtime="20201030 10:57:29.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:29.150" level="INFO">${RESULT} = [{'diff': 8.111000000532442e-06}, {'diff': 1.001399999989161e-05}, {'diff': 9.402999999963413e-06}, {'diff': 9.334000000471576e-06}, {'diff': 9.499999999995623e-06}, {'diff': 5.9160000001057256e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:29.146" endtime="20201030 10:57:29.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:29.154" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.111000000532442e-06, 1.001399999989161e-05, 9.402999999963413e-06, 9.334000000471576e-06, 9.499999999995623e-06, 5.9160000001057256e-06, 7.63899999967066e-06, 6.9859999998200806e-06, 8.360...</msg>
<status status="PASS" starttime="20201030 10:57:29.151" endtime="20201030 10:57:29.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.159" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:29.158" endtime="20201030 10:57:29.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.162" level="INFO">VALUE: [8.111000000532442e-06, 1.001399999989161e-05, 9.402999999963413e-06, 9.334000000471576e-06, 9.499999999995623e-06, 5.9160000001057256e-06, 7.63899999967066e-06, 6.9859999998200806e-06, 8.360999999901253e-06, 6.541999999498671e-06, 8.139000000184637e-06, 9.375000000311218e-06, 7.096999999234299e-06, 9.292000000549194e-06, 4.986000000428703e-06, 6.764000000103465e-06, 1.1138999999715793e-05, 6.625000000148873e-06, 7.499999999716067e-06, 8.679999999650079e-06, 8.513999999237853e-06, 1.0193999999685843e-05, 7.985999999959859e-06, 8.87499999979724e-06, 1.2179999999695212e-05, 1.1180999999638175e-05, 8.346999999631066e-06, 7.499999999716067e-06, 7.5129999999035135e-06, 8.847000000145044e-06, 1.0042000000431983e-05, 8.499999999855845e-06, 8.91600000052506e-06, 5.819000000073515e-06, 7.055999999394658e-06, 8.986000000099637e-06, 7.5549999998258954e-06, 8.499999999855845e-06, 7.486999999528621e-06, 1.2735999999513581e-05, 7.985999999959859e-06, 6.625000000148873e-06, 9.139000000324415e-06, 7.6799999995103e-06, 6.638999999530881e-06, 5.15300000003549e-06, 1.1277999999670385e-05, 1.0540999999975043e-05, 8.27800000013923e-06, 8.916999999719621e-06, 6.278000000747852e-06, 8.62499999954025e-06, 9.000000000369823e-06, 9.973000000051968e-06, 9.070000000832579e-06, 8.069999999804622e-06, 8.638999999810437e-06, 8.333000000249058e-06, 8.528000000396219e-06, 6.541000000304109e-06, 1.2861000000086165e-05, 7.209000000507615e-06, 8.902999999449435e-06, 7.639000000558838e-06]</msg>
<status status="PASS" starttime="20201030 10:57:29.160" endtime="20201030 10:57:29.162"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.156" endtime="20201030 10:57:29.163"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.782" endtime="20201030 10:57:29.163"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:28.781" endtime="20201030 10:57:29.163"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.172" endtime="20201030 10:57:29.183"></status>
</kw>
<msg timestamp="20201030 10:57:29.184" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.170" endtime="20201030 10:57:29.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.186" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.185" endtime="20201030 10:57:29.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.187" endtime="20201030 10:57:29.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.167" endtime="20201030 10:57:29.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.165" endtime="20201030 10:57:29.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.197" endtime="20201030 10:57:29.508"></status>
</kw>
<msg timestamp="20201030 10:57:29.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.791270861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.791282042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.195" endtime="20201030 10:57:29.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.791270861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.791282042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.513" endtime="20201030 10:57:29.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.523" endtime="20201030 10:57:29.524"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.192" endtime="20201030 10:57:29.525"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.191" endtime="20201030 10:57:29.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:29.530" level="INFO">${RESULT} = [{'diff': 1.1180999999638175e-05}, {'diff': 8.346999999631066e-06}, {'diff': 7.499999999716067e-06}, {'diff': 7.5129999999035135e-06}, {'diff': 8.847000000145044e-06}, {'diff': 1.0042000000431983e-05}...</msg>
<status status="PASS" starttime="20201030 10:57:29.526" endtime="20201030 10:57:29.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:29.535" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1180999999638175e-05, 8.346999999631066e-06, 7.499999999716067e-06, 7.5129999999035135e-06, 8.847000000145044e-06, 1.0042000000431983e-05, 8.499999999855845e-06, 8.91600000052506e-06, 5.81...</msg>
<status status="PASS" starttime="20201030 10:57:29.531" endtime="20201030 10:57:29.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.540" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:29.539" endtime="20201030 10:57:29.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.543" level="INFO">VALUE: [1.1180999999638175e-05, 8.346999999631066e-06, 7.499999999716067e-06, 7.5129999999035135e-06, 8.847000000145044e-06, 1.0042000000431983e-05, 8.499999999855845e-06, 8.91600000052506e-06, 5.819000000073515e-06, 7.055999999394658e-06, 8.986000000099637e-06, 7.5549999998258954e-06, 8.499999999855845e-06, 7.486999999528621e-06, 1.2735999999513581e-05, 7.985999999959859e-06, 6.625000000148873e-06, 9.139000000324415e-06, 7.6799999995103e-06, 6.638999999530881e-06, 5.15300000003549e-06, 1.1277999999670385e-05, 1.0540999999975043e-05, 8.27800000013923e-06, 8.916999999719621e-06, 6.278000000747852e-06, 8.62499999954025e-06, 9.000000000369823e-06, 9.973000000051968e-06, 9.070000000832579e-06, 8.069999999804622e-06, 8.638999999810437e-06, 8.333000000249058e-06, 8.528000000396219e-06, 6.541000000304109e-06, 1.2861000000086165e-05, 7.209000000507615e-06, 8.902999999449435e-06, 7.639000000558838e-06, 9.903000000477391e-06, 9.750000000252612e-06, 1.0931000000269364e-05, 7.056000000282836e-06, 7.096999999234299e-06, 9.207999999816252e-06, 1.0223000000308957e-05, 1.1264000000288377e-05, 1.13470000000504e-05, 7.861000000275453e-06, 6.0969999999827e-06, 8.347000000519245e-06, 6.625000000148873e-06, 7.292000000269638e-06, 1.0846999999536422e-05, 1.1124999999445606e-05, 6.5549999996861175e-06, 1.2362000000543105e-05, 9.430999999615608e-06, 6.374999999891884e-06, 1.0570000000598156e-05, 8.06900000061006e-06, 1.0291999999800794e-05, 6.750000000721457e-06, 6.486000000194281e-06]</msg>
<status status="PASS" starttime="20201030 10:57:29.541" endtime="20201030 10:57:29.543"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.537" endtime="20201030 10:57:29.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.164" endtime="20201030 10:57:29.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.164" endtime="20201030 10:57:29.544"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.552" endtime="20201030 10:57:29.563"></status>
</kw>
<msg timestamp="20201030 10:57:29.564" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.551" endtime="20201030 10:57:29.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.566" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.565" endtime="20201030 10:57:29.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.567" endtime="20201030 10:57:29.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.548" endtime="20201030 10:57:29.570"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.546" endtime="20201030 10:57:29.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.577" endtime="20201030 10:57:29.892"></status>
</kw>
<msg timestamp="20201030 10:57:29.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.161880361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.161886639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.575" endtime="20201030 10:57:29.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.161880361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.161886639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.897" endtime="20201030 10:57:29.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.907" endtime="20201030 10:57:29.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.572" endtime="20201030 10:57:29.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.571" endtime="20201030 10:57:29.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:29.914" level="INFO">${RESULT} = [{'diff': 6.278000000747852e-06}, {'diff': 8.62499999954025e-06}, {'diff': 9.000000000369823e-06}, {'diff': 9.973000000051968e-06}, {'diff': 9.070000000832579e-06}, {'diff': 8.069999999804622e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:57:29.911" endtime="20201030 10:57:29.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:29.920" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.278000000747852e-06, 8.62499999954025e-06, 9.000000000369823e-06, 9.973000000051968e-06, 9.070000000832579e-06, 8.069999999804622e-06, 8.638999999810437e-06, 8.333000000249058e-06, 8.52800...</msg>
<status status="PASS" starttime="20201030 10:57:29.915" endtime="20201030 10:57:29.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.925" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:29.924" endtime="20201030 10:57:29.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.927" level="INFO">VALUE: [6.278000000747852e-06, 8.62499999954025e-06, 9.000000000369823e-06, 9.973000000051968e-06, 9.070000000832579e-06, 8.069999999804622e-06, 8.638999999810437e-06, 8.333000000249058e-06, 8.528000000396219e-06, 6.541000000304109e-06, 1.2861000000086165e-05, 7.209000000507615e-06, 8.902999999449435e-06, 7.639000000558838e-06, 9.903000000477391e-06, 9.750000000252612e-06, 1.0931000000269364e-05, 7.056000000282836e-06, 7.096999999234299e-06, 9.207999999816252e-06, 1.0223000000308957e-05, 1.1264000000288377e-05, 1.13470000000504e-05, 7.861000000275453e-06, 6.0969999999827e-06, 8.347000000519245e-06, 6.625000000148873e-06, 7.292000000269638e-06, 1.0846999999536422e-05, 1.1124999999445606e-05, 6.5549999996861175e-06, 1.2362000000543105e-05, 9.430999999615608e-06, 6.374999999891884e-06, 1.0570000000598156e-05, 8.06900000061006e-06, 1.0291999999800794e-05, 6.750000000721457e-06, 6.486000000194281e-06, 8.638999999810437e-06, 9.443999999803054e-06, 1.2568999999906794e-05, 4.416000000340148e-06, 8.708000000190452e-06, 9.804999999474262e-06, 8.861999999609793e-06, 9.847999999479384e-06, 9.973000000051968e-06, 8.52799999950804e-06, 1.011099999992382e-05, 5.987000000651221e-06, 1.198600000051897e-05, 1.179100000037181e-05, 7.1390000000448595e-06, 5.917000000188466e-06, 1.0332999999640435e-05, 7.415999999871303e-06, 6.0690000003305045e-06, 9.222000000086439e-06, 1.1985999999630792e-05, 5.111000000113108e-06, 1.0125000000194007e-05, 9.054999999591473e-06, 1.1277999999670385e-05]</msg>
<status status="PASS" starttime="20201030 10:57:29.926" endtime="20201030 10:57:29.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.921" endtime="20201030 10:57:29.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.545" endtime="20201030 10:57:29.929"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.545" endtime="20201030 10:57:29.929"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.937" endtime="20201030 10:57:29.949"></status>
</kw>
<msg timestamp="20201030 10:57:29.949" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.935" endtime="20201030 10:57:29.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:29.951" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:29.950" endtime="20201030 10:57:29.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.953" endtime="20201030 10:57:29.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.933" endtime="20201030 10:57:29.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.931" endtime="20201030 10:57:29.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:29.962" endtime="20201030 10:57:30.284"></status>
</kw>
<msg timestamp="20201030 10:57:30.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.536234875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.536243222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:29.960" endtime="20201030 10:57:30.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.536234875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.536243222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.289" endtime="20201030 10:57:30.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.299" endtime="20201030 10:57:30.301"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.958" endtime="20201030 10:57:30.301"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.956" endtime="20201030 10:57:30.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:30.306" level="INFO">${RESULT} = [{'diff': 8.347000000519245e-06}, {'diff': 6.625000000148873e-06}, {'diff': 7.292000000269638e-06}, {'diff': 1.0846999999536422e-05}, {'diff': 1.1124999999445606e-05}, {'diff': 6.5549999996861175e-06}...</msg>
<status status="PASS" starttime="20201030 10:57:30.302" endtime="20201030 10:57:30.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:30.311" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.347000000519245e-06, 6.625000000148873e-06, 7.292000000269638e-06, 1.0846999999536422e-05, 1.1124999999445606e-05, 6.5549999996861175e-06, 1.2362000000543105e-05, 9.430999999615608e-06, 6....</msg>
<status status="PASS" starttime="20201030 10:57:30.307" endtime="20201030 10:57:30.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.315" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:30.314" endtime="20201030 10:57:30.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.318" level="INFO">VALUE: [8.347000000519245e-06, 6.625000000148873e-06, 7.292000000269638e-06, 1.0846999999536422e-05, 1.1124999999445606e-05, 6.5549999996861175e-06, 1.2362000000543105e-05, 9.430999999615608e-06, 6.374999999891884e-06, 1.0570000000598156e-05, 8.06900000061006e-06, 1.0291999999800794e-05, 6.750000000721457e-06, 6.486000000194281e-06, 8.638999999810437e-06, 9.443999999803054e-06, 1.2568999999906794e-05, 4.416000000340148e-06, 8.708000000190452e-06, 9.804999999474262e-06, 8.861999999609793e-06, 9.847999999479384e-06, 9.973000000051968e-06, 8.52799999950804e-06, 1.011099999992382e-05, 5.987000000651221e-06, 1.198600000051897e-05, 1.179100000037181e-05, 7.1390000000448595e-06, 5.917000000188466e-06, 1.0332999999640435e-05, 7.415999999871303e-06, 6.0690000003305045e-06, 9.222000000086439e-06, 1.1985999999630792e-05, 5.111000000113108e-06, 1.0125000000194007e-05, 9.054999999591473e-06, 1.1277999999670385e-05, 7.070000000553023e-06, 7.054999999311917e-06, 8.805999998529046e-06, 7.388999998525492e-06, 6.263999999589487e-06, 6.971999999549894e-06, 7.2219999989187045e-06, 5.778000000233874e-06, 1.0985999999491014e-05, 1.0582999999897424e-05, 5.570000000787445e-06, 7.249999999459078e-06, 8.77799999976503e-06, 6.917000000328244e-06, 5.417000000562666e-06, 1.0223000000308957e-05, 9.695000001030962e-06, 7.069999998776666e-06, 7.264000000617443e-06, 1.040300000099137e-05, 6.056000000143058e-06, 1.0429999999672646e-05, 5.208000001033497e-06, 7.903000000197835e-06, 6.791000000561098e-06]</msg>
<status status="PASS" starttime="20201030 10:57:30.317" endtime="20201030 10:57:30.319"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.312" endtime="20201030 10:57:30.319"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.930" endtime="20201030 10:57:30.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:29.929" endtime="20201030 10:57:30.320"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.329" endtime="20201030 10:57:30.341"></status>
</kw>
<msg timestamp="20201030 10:57:30.342" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.327" endtime="20201030 10:57:30.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.344" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.343" endtime="20201030 10:57:30.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.345" endtime="20201030 10:57:30.347"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.324" endtime="20201030 10:57:30.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.322" endtime="20201030 10:57:30.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.355" endtime="20201030 10:57:30.670"></status>
</kw>
<msg timestamp="20201030 10:57:30.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.907048944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.907054931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.353" endtime="20201030 10:57:30.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.907048944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.907054931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.675" endtime="20201030 10:57:30.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.686" endtime="20201030 10:57:30.687"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.351" endtime="20201030 10:57:30.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.349" endtime="20201030 10:57:30.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:30.693" level="INFO">${RESULT} = [{'diff': 5.987000000651221e-06}, {'diff': 1.198600000051897e-05}, {'diff': 1.179100000037181e-05}, {'diff': 7.1390000000448595e-06}, {'diff': 5.917000000188466e-06}, {'diff': 1.0332999999640435e-05},...</msg>
<status status="PASS" starttime="20201030 10:57:30.689" endtime="20201030 10:57:30.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:30.698" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.987000000651221e-06, 1.198600000051897e-05, 1.179100000037181e-05, 7.1390000000448595e-06, 5.917000000188466e-06, 1.0332999999640435e-05, 7.415999999871303e-06, 6.0690000003305045e-06, 9.2...</msg>
<status status="PASS" starttime="20201030 10:57:30.694" endtime="20201030 10:57:30.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.703" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:30.702" endtime="20201030 10:57:30.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.706" level="INFO">VALUE: [5.987000000651221e-06, 1.198600000051897e-05, 1.179100000037181e-05, 7.1390000000448595e-06, 5.917000000188466e-06, 1.0332999999640435e-05, 7.415999999871303e-06, 6.0690000003305045e-06, 9.222000000086439e-06, 1.1985999999630792e-05, 5.111000000113108e-06, 1.0125000000194007e-05, 9.054999999591473e-06, 1.1277999999670385e-05, 7.070000000553023e-06, 7.054999999311917e-06, 8.805999998529046e-06, 7.388999998525492e-06, 6.263999999589487e-06, 6.971999999549894e-06, 7.2219999989187045e-06, 5.778000000233874e-06, 1.0985999999491014e-05, 1.0582999999897424e-05, 5.570000000787445e-06, 7.249999999459078e-06, 8.77799999976503e-06, 6.917000000328244e-06, 5.417000000562666e-06, 1.0223000000308957e-05, 9.695000001030962e-06, 7.069999998776666e-06, 7.264000000617443e-06, 1.040300000099137e-05, 6.056000000143058e-06, 1.0429999999672646e-05, 5.208000001033497e-06, 7.903000000197835e-06, 6.791000000561098e-06, 9.707999998553873e-06, 6.125000000523073e-06, 8.18100000010702e-06, 1.0554999999357051e-05, 6.471999999035916e-06, 1.2137999998884652e-05, 6.860999999247497e-06, 1.1054999999871029e-05, 8.27699999916831e-06, 7.596999999748277e-06, 4.7779999992059174e-06, 9.610999999409842e-06, 1.1861000000834565e-05, 9.485999999725436e-06, 9.528000001424175e-06, 8.417000000093822e-06, 8.762999998523924e-06, 1.0069000000001438e-05, 8.346999999631066e-06, 7.054999999311917e-06, 1.0249999998990234e-05, 1.28469999989278e-05, 5.333999999024286e-06, 5.790999999533142e-06, 1.0333000000528614e-05]</msg>
<status status="PASS" starttime="20201030 10:57:30.704" endtime="20201030 10:57:30.706"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.700" endtime="20201030 10:57:30.707"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.320" endtime="20201030 10:57:30.707"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.320" endtime="20201030 10:57:30.707"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.715" endtime="20201030 10:57:30.726"></status>
</kw>
<msg timestamp="20201030 10:57:30.727" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.714" endtime="20201030 10:57:30.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:30.729" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:30.728" endtime="20201030 10:57:30.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.730" endtime="20201030 10:57:30.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.711" endtime="20201030 10:57:30.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.709" endtime="20201030 10:57:30.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:30.740" endtime="20201030 10:57:31.055"></status>
</kw>
<msg timestamp="20201030 10:57:31.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.281791736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.281798986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:30.738" endtime="20201030 10:57:31.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.281791736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.281798986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.060" endtime="20201030 10:57:31.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.070" endtime="20201030 10:57:31.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.735" endtime="20201030 10:57:31.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.733" endtime="20201030 10:57:31.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:31.078" level="INFO">${RESULT} = [{'diff': 7.249999999459078e-06}, {'diff': 8.77799999976503e-06}, {'diff': 6.917000000328244e-06}, {'diff': 5.417000000562666e-06}, {'diff': 1.0223000000308957e-05}, {'diff': 9.695000001030962e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:31.073" endtime="20201030 10:57:31.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:31.083" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.249999999459078e-06, 8.77799999976503e-06, 6.917000000328244e-06, 5.417000000562666e-06, 1.0223000000308957e-05, 9.695000001030962e-06, 7.069999998776666e-06, 7.264000000617443e-06, 1.0403...</msg>
<status status="PASS" starttime="20201030 10:57:31.079" endtime="20201030 10:57:31.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.088" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:31.086" endtime="20201030 10:57:31.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.090" level="INFO">VALUE: [7.249999999459078e-06, 8.77799999976503e-06, 6.917000000328244e-06, 5.417000000562666e-06, 1.0223000000308957e-05, 9.695000001030962e-06, 7.069999998776666e-06, 7.264000000617443e-06, 1.040300000099137e-05, 6.056000000143058e-06, 1.0429999999672646e-05, 5.208000001033497e-06, 7.903000000197835e-06, 6.791000000561098e-06, 9.707999998553873e-06, 6.125000000523073e-06, 8.18100000010702e-06, 1.0554999999357051e-05, 6.471999999035916e-06, 1.2137999998884652e-05, 6.860999999247497e-06, 1.1054999999871029e-05, 8.27699999916831e-06, 7.596999999748277e-06, 4.7779999992059174e-06, 9.610999999409842e-06, 1.1861000000834565e-05, 9.485999999725436e-06, 9.528000001424175e-06, 8.417000000093822e-06, 8.762999998523924e-06, 1.0069000000001438e-05, 8.346999999631066e-06, 7.054999999311917e-06, 1.0249999998990234e-05, 1.28469999989278e-05, 5.333999999024286e-06, 5.790999999533142e-06, 1.0333000000528614e-05, 6.596999998720321e-06, 6.83300000048348e-06, 7.388999998525492e-06, 1.0736000000122203e-05, 6.056000000143058e-06, 8.305999999791425e-06, 1.0222000000226217e-05, 8.77799999976503e-06, 7.77800000051343e-06, 9.486000001501793e-06, 9.069000000749838e-06, 9.847000001173e-06, 1.2625000000099362e-05, 1.1917000000138955e-05, 6.069000001218683e-06, 1.070799999958183e-05, 1.1416000001318594e-05, 8.457999999933463e-06, 8.068999999721882e-06, 8.639000000698616e-06, 1.0069000000001438e-05, 8.347000001407423e-06, 9.721999999712239e-06, 7.945000000120217e-06, 9.958999999781781e-06]</msg>
<status status="PASS" starttime="20201030 10:57:31.089" endtime="20201030 10:57:31.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.084" endtime="20201030 10:57:31.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.708" endtime="20201030 10:57:31.092"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:30.708" endtime="20201030 10:57:31.092"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.100" endtime="20201030 10:57:31.111"></status>
</kw>
<msg timestamp="20201030 10:57:31.112" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.098" endtime="20201030 10:57:31.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.114" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.113" endtime="20201030 10:57:31.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.115" endtime="20201030 10:57:31.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.095" endtime="20201030 10:57:31.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.094" endtime="20201030 10:57:31.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.126" endtime="20201030 10:57:31.438"></status>
</kw>
<msg timestamp="20201030 10:57:31.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.663462806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.663472417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.124" endtime="20201030 10:57:31.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.663462806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.663472417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.443" endtime="20201030 10:57:31.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.453" endtime="20201030 10:57:31.455"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.120" endtime="20201030 10:57:31.455"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.119" endtime="20201030 10:57:31.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:31.460" level="INFO">${RESULT} = [{'diff': 9.610999999409842e-06}, {'diff': 1.1861000000834565e-05}, {'diff': 9.485999999725436e-06}, {'diff': 9.528000001424175e-06}, {'diff': 8.417000000093822e-06}, {'diff': 8.762999998523924e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:31.457" endtime="20201030 10:57:31.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:31.466" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.610999999409842e-06, 1.1861000000834565e-05, 9.485999999725436e-06, 9.528000001424175e-06, 8.417000000093822e-06, 8.762999998523924e-06, 1.0069000000001438e-05, 8.346999999631066e-06, 7.05...</msg>
<status status="PASS" starttime="20201030 10:57:31.462" endtime="20201030 10:57:31.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.471" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:31.469" endtime="20201030 10:57:31.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.473" level="INFO">VALUE: [9.610999999409842e-06, 1.1861000000834565e-05, 9.485999999725436e-06, 9.528000001424175e-06, 8.417000000093822e-06, 8.762999998523924e-06, 1.0069000000001438e-05, 8.346999999631066e-06, 7.054999999311917e-06, 1.0249999998990234e-05, 1.28469999989278e-05, 5.333999999024286e-06, 5.790999999533142e-06, 1.0333000000528614e-05, 6.596999998720321e-06, 6.83300000048348e-06, 7.388999998525492e-06, 1.0736000000122203e-05, 6.056000000143058e-06, 8.305999999791425e-06, 1.0222000000226217e-05, 8.77799999976503e-06, 7.77800000051343e-06, 9.486000001501793e-06, 9.069000000749838e-06, 9.847000001173e-06, 1.2625000000099362e-05, 1.1917000000138955e-05, 6.069000001218683e-06, 1.070799999958183e-05, 1.1416000001318594e-05, 8.457999999933463e-06, 8.068999999721882e-06, 8.639000000698616e-06, 1.0069000000001438e-05, 8.347000001407423e-06, 9.721999999712239e-06, 7.945000000120217e-06, 9.958999999781781e-06, 8.486000000473837e-06, 8.639000000698616e-06, 1.1111000000951776e-05, 1.1167000000256166e-05, 6.263999999589487e-06, 8.735999999842647e-06, 1.1763999999914176e-05, 6.764000000103465e-06, 8.054999998563517e-06, 6.69499999972345e-06, 7.694000000668666e-06, 4.915999999965948e-06, 7.652999999052668e-06, 4.651999999438772e-06, 1.0193999999685843e-05, 8.499999999855845e-06, 8.903000001225791e-06, 9.05500000136783e-06, 1.0014000000779788e-05, 1.1555000000385007e-05, 7.347000000379467e-06, 7.2779999999994516e-06, 7.4310000002242305e-06, 6.985999998931902e-06, 6.88899999978787e-06]</msg>
<status status="PASS" starttime="20201030 10:57:31.472" endtime="20201030 10:57:31.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.466" endtime="20201030 10:57:31.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.092" endtime="20201030 10:57:31.475"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.092" endtime="20201030 10:57:31.475"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.483" endtime="20201030 10:57:31.493"></status>
</kw>
<msg timestamp="20201030 10:57:31.493" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.481" endtime="20201030 10:57:31.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.496" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.494" endtime="20201030 10:57:31.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.497" endtime="20201030 10:57:31.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.479" endtime="20201030 10:57:31.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.477" endtime="20201030 10:57:31.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.506" endtime="20201030 10:57:31.812"></status>
</kw>
<msg timestamp="20201030 10:57:31.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.038457861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.038467708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.505" endtime="20201030 10:57:31.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.038457861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.038467708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.817" endtime="20201030 10:57:31.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.827" endtime="20201030 10:57:31.829"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.502" endtime="20201030 10:57:31.830"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.500" endtime="20201030 10:57:31.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:31.834" level="INFO">${RESULT} = [{'diff': 9.847000001173e-06}, {'diff': 1.2625000000099362e-05}, {'diff': 1.1917000000138955e-05}, {'diff': 6.069000001218683e-06}, {'diff': 1.070799999958183e-05}, {'diff': 1.1416000001318594e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:31.831" endtime="20201030 10:57:31.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:31.840" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.847000001173e-06, 1.2625000000099362e-05, 1.1917000000138955e-05, 6.069000001218683e-06, 1.070799999958183e-05, 1.1416000001318594e-05, 8.457999999933463e-06, 8.068999999721882e-06, 8.6390...</msg>
<status status="PASS" starttime="20201030 10:57:31.836" endtime="20201030 10:57:31.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.845" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:31.844" endtime="20201030 10:57:31.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.847" level="INFO">VALUE: [9.847000001173e-06, 1.2625000000099362e-05, 1.1917000000138955e-05, 6.069000001218683e-06, 1.070799999958183e-05, 1.1416000001318594e-05, 8.457999999933463e-06, 8.068999999721882e-06, 8.639000000698616e-06, 1.0069000000001438e-05, 8.347000001407423e-06, 9.721999999712239e-06, 7.945000000120217e-06, 9.958999999781781e-06, 8.486000000473837e-06, 8.639000000698616e-06, 1.1111000000951776e-05, 1.1167000000256166e-05, 6.263999999589487e-06, 8.735999999842647e-06, 1.1763999999914176e-05, 6.764000000103465e-06, 8.054999998563517e-06, 6.69499999972345e-06, 7.694000000668666e-06, 4.915999999965948e-06, 7.652999999052668e-06, 4.651999999438772e-06, 1.0193999999685843e-05, 8.499999999855845e-06, 8.903000001225791e-06, 9.05500000136783e-06, 1.0014000000779788e-05, 1.1555000000385007e-05, 7.347000000379467e-06, 7.2779999999994516e-06, 7.4310000002242305e-06, 6.985999998931902e-06, 6.88899999978787e-06, 5.638999999391103e-06, 1.0486000000753393e-05, 1.1790999998595453e-05, 8.277999999251051e-06, 7.360999999761475e-06, 1.0624999999819806e-05, 5.2089999993398806e-06, 7.096999999234299e-06, 8.541999999778227e-06, 8.209000000647393e-06, 9.361000000041031e-06, 1.1069000001029394e-05, 9.472000000343428e-06, 9.249999999738634e-06, 8.401999998852716e-06, 9.110999998895863e-06, 1.0846999998648243e-05, 5.637999999308363e-06, 1.0611000000437798e-05, 8.778000001541386e-06, 9.9169999998594e-06, 7.77700000043069e-06, 6.125000000523073e-06, 1.0624999999819806e-05, 6.4300000008898905e-06]</msg>
<status status="PASS" starttime="20201030 10:57:31.846" endtime="20201030 10:57:31.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.841" endtime="20201030 10:57:31.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.476" endtime="20201030 10:57:31.849"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.475" endtime="20201030 10:57:31.849"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.857" endtime="20201030 10:57:31.868"></status>
</kw>
<msg timestamp="20201030 10:57:31.869" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.855" endtime="20201030 10:57:31.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:31.871" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:31.870" endtime="20201030 10:57:31.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.873" endtime="20201030 10:57:31.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.853" endtime="20201030 10:57:31.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.851" endtime="20201030 10:57:31.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:31.882" endtime="20201030 10:57:32.190"></status>
</kw>
<msg timestamp="20201030 10:57:32.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.412723556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.412728472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:31.880" endtime="20201030 10:57:32.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.412723556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.412728472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:32.195" endtime="20201030 10:57:32.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.205" endtime="20201030 10:57:32.207"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.878" endtime="20201030 10:57:32.208"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.876" endtime="20201030 10:57:32.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:32.213" level="INFO">${RESULT} = [{'diff': 4.915999999965948e-06}, {'diff': 7.652999999052668e-06}, {'diff': 4.651999999438772e-06}, {'diff': 1.0193999999685843e-05}, {'diff': 8.499999999855845e-06}, {'diff': 8.903000001225791e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:57:32.209" endtime="20201030 10:57:32.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:32.218" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.915999999965948e-06, 7.652999999052668e-06, 4.651999999438772e-06, 1.0193999999685843e-05, 8.499999999855845e-06, 8.903000001225791e-06, 9.05500000136783e-06, 1.0014000000779788e-05, 1.155...</msg>
<status status="PASS" starttime="20201030 10:57:32.214" endtime="20201030 10:57:32.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.222" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 10:57:32.221" endtime="20201030 10:57:32.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:32.225" level="INFO">VALUE: [4.915999999965948e-06, 7.652999999052668e-06, 4.651999999438772e-06, 1.0193999999685843e-05, 8.499999999855845e-06, 8.903000001225791e-06, 9.05500000136783e-06, 1.0014000000779788e-05, 1.1555000000385007e-05, 7.347000000379467e-06, 7.2779999999994516e-06, 7.4310000002242305e-06, 6.985999998931902e-06, 6.88899999978787e-06, 5.638999999391103e-06, 1.0486000000753393e-05, 1.1790999998595453e-05, 8.277999999251051e-06, 7.360999999761475e-06, 1.0624999999819806e-05, 5.2089999993398806e-06, 7.096999999234299e-06, 8.541999999778227e-06, 8.209000000647393e-06, 9.361000000041031e-06, 1.1069000001029394e-05, 9.472000000343428e-06, 9.249999999738634e-06, 8.401999998852716e-06, 9.110999998895863e-06, 1.0846999998648243e-05, 5.637999999308363e-06, 1.0611000000437798e-05, 8.778000001541386e-06, 9.9169999998594e-06, 7.77700000043069e-06, 6.125000000523073e-06, 1.0624999999819806e-05, 6.4300000008898905e-06, 6.8469999998654885e-06, 1.0277999999530607e-05, 6.708000000799075e-06, 8.041999999264249e-06, 8.930999999989808e-06, 7.709000000133415e-06, 1.1944000000596589e-05, 1.0985999999491014e-05, 5.611000000627087e-06, 7.042000000012649e-06, 1.0832999999266235e-05, 1.125000000001819e-05, 6.625000001037051e-06, 8.638999998922259e-06, 5.429999999861934e-06, 8.929999999907068e-06, 9.236000000356626e-06, 8.069000001498239e-06, 8.416999998317465e-06, 1.100000000064938e-05, 7.513999999986254e-06, 1.1568999999767016e-05, 7.999999999341867e-06, 1.1917000000138955e-05, 7.77700000043069e-06]</msg>
<status status="PASS" starttime="20201030 10:57:32.223" endtime="20201030 10:57:32.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.219" endtime="20201030 10:57:32.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.850" endtime="20201030 10:57:32.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:31.849" endtime="20201030 10:57:32.226"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:24.601" endtime="20201030 10:57:32.227"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:21.487" endtime="20201030 10:57:32.228" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:32.237" endtime="20201030 10:57:32.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.235" endtime="20201030 10:57:32.257"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:32.271" endtime="20201030 10:57:35.296"></status>
</kw>
<msg timestamp="20201030 10:57:35.297" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:32.270" endtime="20201030 10:57:35.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.303" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.300" endtime="20201030 10:57:35.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.309" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:35.305" endtime="20201030 10:57:35.310"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:32.267" endtime="20201030 10:57:35.311"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:32.264" endtime="20201030 10:57:35.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.263" endtime="20201030 10:57:35.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:35.321" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:35.320" endtime="20201030 10:57:35.323"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.315" endtime="20201030 10:57:35.323"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.262" endtime="20201030 10:57:35.324"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.262" endtime="20201030 10:57:35.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.326" endtime="20201030 10:57:35.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.259" endtime="20201030 10:57:35.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.258" endtime="20201030 10:57:35.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:32.233" endtime="20201030 10:57:35.332"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.343" endtime="20201030 10:57:35.355"></status>
</kw>
<msg timestamp="20201030 10:57:35.356" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.341" endtime="20201030 10:57:35.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.358" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.357" endtime="20201030 10:57:35.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.359" endtime="20201030 10:57:35.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.339" endtime="20201030 10:57:35.362"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.337" endtime="20201030 10:57:35.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.370" endtime="20201030 10:57:35.663"></status>
</kw>
<msg timestamp="20201030 10:57:35.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.095824681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.095826292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.368" endtime="20201030 10:57:35.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.095824681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.095826292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.667" endtime="20201030 10:57:35.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.675" endtime="20201030 10:57:35.677"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.365" endtime="20201030 10:57:35.678"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.363" endtime="20201030 10:57:35.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:35.682" level="INFO">${RESULT} = [{'diff': 1.6110000000679747e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5689999997015036e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5559999999581464e-...</msg>
<status status="PASS" starttime="20201030 10:57:35.679" endtime="20201030 10:57:35.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:35.687" level="INFO">${OVERHEAD} = {'diff': [1.6110000000679747e-06, 1.5420000001320489e-06, 1.5689999997015036e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5410000000493085e-06...</msg>
<status status="PASS" starttime="20201030 10:57:35.683" endtime="20201030 10:57:35.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.691" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:35.690" endtime="20201030 10:57:35.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.693" level="INFO">VALUE: [1.6110000000679747e-06, 1.5420000001320489e-06, 1.5689999997015036e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5280000003059513e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.569999999784244e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5409999996052193e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.4999999997655777e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.527999999861862e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5979999998805283e-06, 1.4859999999394802e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5409999996052193e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5560000004022356e-06, 1.5420000001320489e-06]</msg>
<status status="PASS" starttime="20201030 10:57:35.692" endtime="20201030 10:57:35.694"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.687" endtime="20201030 10:57:35.695"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.335" endtime="20201030 10:57:35.695"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.335" endtime="20201030 10:57:35.695"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.704" endtime="20201030 10:57:35.716"></status>
</kw>
<msg timestamp="20201030 10:57:35.717" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.702" endtime="20201030 10:57:35.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:35.719" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:35.718" endtime="20201030 10:57:35.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.720" endtime="20201030 10:57:35.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.699" endtime="20201030 10:57:35.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.697" endtime="20201030 10:57:35.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:35.730" endtime="20201030 10:57:36.046"></status>
</kw>
<msg timestamp="20201030 10:57:36.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.096034375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.096035931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:35.728" endtime="20201030 10:57:36.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.096034375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.096035931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.051" endtime="20201030 10:57:36.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.061" endtime="20201030 10:57:36.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.725" endtime="20201030 10:57:36.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.724" endtime="20201030 10:57:36.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:36.068" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.5979999998805283e-06}, {'diff': 1.4859999999394802e-06}, {'diff': 1.5420000001320489e-...</msg>
<status status="PASS" starttime="20201030 10:57:36.064" endtime="20201030 10:57:36.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:36.073" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5979999998805283e-06, 1.4859999999394802e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5410000000493085e-06...</msg>
<status status="PASS" starttime="20201030 10:57:36.069" endtime="20201030 10:57:36.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.077" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:36.076" endtime="20201030 10:57:36.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.080" level="INFO">VALUE: [1.5559999999581464e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5979999998805283e-06, 1.4859999999394802e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5409999996052193e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5560000004022356e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5420000001320489e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.569999999784244e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5550000003194953e-06, 1.5550000003194953e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.527000000223211e-06, 1.5410000000493085e-06, 1.5840000000544308e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5410000000493085e-06]</msg>
<status status="PASS" starttime="20201030 10:57:36.078" endtime="20201030 10:57:36.081"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.074" endtime="20201030 10:57:36.081"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.696" endtime="20201030 10:57:36.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.696" endtime="20201030 10:57:36.082"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.090" endtime="20201030 10:57:36.101"></status>
</kw>
<msg timestamp="20201030 10:57:36.101" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.088" endtime="20201030 10:57:36.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.103" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.102" endtime="20201030 10:57:36.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.105" endtime="20201030 10:57:36.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.086" endtime="20201030 10:57:36.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.084" endtime="20201030 10:57:36.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.113" endtime="20201030 10:57:36.436"></status>
</kw>
<msg timestamp="20201030 10:57:36.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.445607236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.445608778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.112" endtime="20201030 10:57:36.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.445607236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.445608778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.441" endtime="20201030 10:57:36.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.451" endtime="20201030 10:57:36.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.109" endtime="20201030 10:57:36.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.108" endtime="20201030 10:57:36.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:36.458" level="INFO">${RESULT} = [{'diff': 1.5420000001320489e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5410000000493085e-...</msg>
<status status="PASS" starttime="20201030 10:57:36.454" endtime="20201030 10:57:36.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:36.465" level="INFO">${OVERHEAD} = {'diff': [1.5420000001320489e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.554999999875406e-06, ...</msg>
<status status="PASS" starttime="20201030 10:57:36.459" endtime="20201030 10:57:36.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.469" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:36.468" endtime="20201030 10:57:36.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.472" level="INFO">VALUE: [1.5420000001320489e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5139999995916753e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.527999999861862e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.5550000003194953e-06, 1.5420000001320489e-06, 1.5280000003059513e-06, 1.4859999999394802e-06, 1.5419999996879596e-06, 1.527999999861862e-06, 1.4999999997655777e-06, 1.5560000004022356e-06, 1.5280000003059513e-06, 1.569999999784244e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5409999996052193e-06, 1.527999999861862e-06, 1.5140000000357645e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5280000003059513e-06, 1.5550000003194953e-06, 1.5410000000493085e-06, 1.5269999997791217e-06, 1.5410000000493085e-06, 1.5550000003194953e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.527999999861862e-06, 1.5829999999716904e-06, 1.5560000004022356e-06, 1.5979999998805283e-06, 1.554999999875406e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.527999999861862e-06, 1.527999999861862e-06, 1.500000000209667e-06, 1.5559999999581464e-06, 1.5560000004022356e-06]</msg>
<status status="PASS" starttime="20201030 10:57:36.470" endtime="20201030 10:57:36.472"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.466" endtime="20201030 10:57:36.473"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.083" endtime="20201030 10:57:36.473"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.082" endtime="20201030 10:57:36.474"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.481" endtime="20201030 10:57:36.493"></status>
</kw>
<msg timestamp="20201030 10:57:36.494" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.480" endtime="20201030 10:57:36.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.496" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.495" endtime="20201030 10:57:36.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.497" endtime="20201030 10:57:36.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.477" endtime="20201030 10:57:36.499"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.476" endtime="20201030 10:57:36.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.506" endtime="20201030 10:57:36.813"></status>
</kw>
<msg timestamp="20201030 10:57:36.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.819939861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.819941389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.505" endtime="20201030 10:57:36.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.819939861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.819941389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.818" endtime="20201030 10:57:36.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.828" endtime="20201030 10:57:36.829"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.502" endtime="20201030 10:57:36.830"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.500" endtime="20201030 10:57:36.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:36.835" level="INFO">${RESULT} = [{'diff': 1.527999999861862e-06}, {'diff': 1.5829999999716904e-06}, {'diff': 1.5560000004022356e-06}, {'diff': 1.5979999998805283e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5550000003194953e-06...</msg>
<status status="PASS" starttime="20201030 10:57:36.831" endtime="20201030 10:57:36.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:36.839" level="INFO">${OVERHEAD} = {'diff': [1.527999999861862e-06, 1.5829999999716904e-06, 1.5560000004022356e-06, 1.5979999998805283e-06, 1.554999999875406e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1...</msg>
<status status="PASS" starttime="20201030 10:57:36.835" endtime="20201030 10:57:36.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.843" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:36.842" endtime="20201030 10:57:36.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.846" level="INFO">VALUE: [1.527999999861862e-06, 1.5829999999716904e-06, 1.5560000004022356e-06, 1.5979999998805283e-06, 1.554999999875406e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.527999999861862e-06, 1.527999999861862e-06, 1.500000000209667e-06, 1.5559999999581464e-06, 1.5560000004022356e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.5829999995276012e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5550000007635845e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.527000000223211e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.5140000000357645e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.5550000007635845e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5140000000357645e-06, 1.554999999875406e-06, 1.5410000004933977e-06, 1.4999999997655777e-06]</msg>
<status status="PASS" starttime="20201030 10:57:36.844" endtime="20201030 10:57:36.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.840" endtime="20201030 10:57:36.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.474" endtime="20201030 10:57:36.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.474" endtime="20201030 10:57:36.848"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.856" endtime="20201030 10:57:36.867"></status>
</kw>
<msg timestamp="20201030 10:57:36.868" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.855" endtime="20201030 10:57:36.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:36.870" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:36.869" endtime="20201030 10:57:36.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.871" endtime="20201030 10:57:36.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.851" endtime="20201030 10:57:36.873"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.850" endtime="20201030 10:57:36.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:36.880" endtime="20201030 10:57:37.195"></status>
</kw>
<msg timestamp="20201030 10:57:37.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.201262931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.201264542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:36.878" endtime="20201030 10:57:37.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.201262931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.201264542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.200" endtime="20201030 10:57:37.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.210" endtime="20201030 10:57:37.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.876" endtime="20201030 10:57:37.212"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.874" endtime="20201030 10:57:37.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:37.217" level="INFO">${RESULT} = [{'diff': 1.6110000000679747e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5280000003059513e-0...</msg>
<status status="PASS" starttime="20201030 10:57:37.213" endtime="20201030 10:57:37.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:37.222" level="INFO">${OVERHEAD} = {'diff': [1.6110000000679747e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5700000002283332e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:37.218" endtime="20201030 10:57:37.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.226" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:37.225" endtime="20201030 10:57:37.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.229" level="INFO">VALUE: [1.6110000000679747e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5140000000357645e-06, 1.554999999875406e-06, 1.5410000004933977e-06, 1.4999999997655777e-06, 1.5690000001455928e-06, 1.5699999993401548e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5979999998805283e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.5829999995276012e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.58400000049852e-06, 1.542000000576138e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5140000000357645e-06, 1.5550000007635845e-06, 1.5140000000357645e-06, 1.5690000001455928e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201030 10:57:37.227" endtime="20201030 10:57:37.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.223" endtime="20201030 10:57:37.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.848" endtime="20201030 10:57:37.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:36.848" endtime="20201030 10:57:37.230"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.238" endtime="20201030 10:57:37.250"></status>
</kw>
<msg timestamp="20201030 10:57:37.251" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.237" endtime="20201030 10:57:37.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.253" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.252" endtime="20201030 10:57:37.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.254" endtime="20201030 10:57:37.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.234" endtime="20201030 10:57:37.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.233" endtime="20201030 10:57:37.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.263" endtime="20201030 10:57:37.571"></status>
</kw>
<msg timestamp="20201030 10:57:37.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.565686583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.565688097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.262" endtime="20201030 10:57:37.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.565686583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.565688097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.576" endtime="20201030 10:57:37.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.586" endtime="20201030 10:57:37.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.259" endtime="20201030 10:57:37.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.257" endtime="20201030 10:57:37.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:37.593" level="INFO">${RESULT} = [{'diff': 1.5140000000357645e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5410000004933977e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.542000000576138e-06}, {'diff': 1.5690000001455928e-06...</msg>
<status status="PASS" starttime="20201030 10:57:37.589" endtime="20201030 10:57:37.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:37.598" level="INFO">${OVERHEAD} = {'diff': [1.5140000000357645e-06, 1.5690000001455928e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1...</msg>
<status status="PASS" starttime="20201030 10:57:37.594" endtime="20201030 10:57:37.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.602" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:37.601" endtime="20201030 10:57:37.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.605" level="INFO">VALUE: [1.5140000000357645e-06, 1.5690000001455928e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.554999999875406e-06, 1.4860000003835694e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5550000007635845e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5550000007635845e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.542000000576138e-06, 1.5970000006859664e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.513999999147586e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5689999992574144e-06, 1.542000000576138e-06, 1.5550000007635845e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5830000004157796e-06, 1.5279999994177729e-06, 1.5550000007635845e-06]</msg>
<status status="PASS" starttime="20201030 10:57:37.603" endtime="20201030 10:57:37.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.599" endtime="20201030 10:57:37.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.231" endtime="20201030 10:57:37.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.231" endtime="20201030 10:57:37.607"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.614" endtime="20201030 10:57:37.627"></status>
</kw>
<msg timestamp="20201030 10:57:37.627" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.613" endtime="20201030 10:57:37.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.630" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.628" endtime="20201030 10:57:37.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.631" endtime="20201030 10:57:37.632"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.610" endtime="20201030 10:57:37.633"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.609" endtime="20201030 10:57:37.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.641" endtime="20201030 10:57:37.954"></status>
</kw>
<msg timestamp="20201030 10:57:37.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.937951889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.937953431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.638" endtime="20201030 10:57:37.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.937951889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.937953431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:37.959" endtime="20201030 10:57:37.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.968" endtime="20201030 10:57:37.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.636" endtime="20201030 10:57:37.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.634" endtime="20201030 10:57:37.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:37.975" level="INFO">${RESULT} = [{'diff': 1.542000000576138e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.596999999797788e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}...</msg>
<status status="PASS" starttime="20201030 10:57:37.972" endtime="20201030 10:57:37.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:37.980" level="INFO">${OVERHEAD} = {'diff': [1.542000000576138e-06, 1.5550000007635845e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.5410000004933977e-06, 1...</msg>
<status status="PASS" starttime="20201030 10:57:37.976" endtime="20201030 10:57:37.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.984" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:37.983" endtime="20201030 10:57:37.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:37.987" level="INFO">VALUE: [1.542000000576138e-06, 1.5550000007635845e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5830000004157796e-06, 1.5279999994177729e-06, 1.5550000007635845e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5690000001455928e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5279999994177729e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.5690000001455928e-06, 1.5279999994177729e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5550000007635845e-06, 1.554999999875406e-06, 1.5269999993350325e-06, 1.5410000004933977e-06, 1.5410000004933977e-06]</msg>
<status status="PASS" starttime="20201030 10:57:37.985" endtime="20201030 10:57:37.987"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.981" endtime="20201030 10:57:37.988"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.608" endtime="20201030 10:57:37.988"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.607" endtime="20201030 10:57:37.989"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:37.997" endtime="20201030 10:57:38.010"></status>
</kw>
<msg timestamp="20201030 10:57:38.010" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:37.996" endtime="20201030 10:57:38.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.012" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.011" endtime="20201030 10:57:38.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.014" endtime="20201030 10:57:38.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.993" endtime="20201030 10:57:38.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.991" endtime="20201030 10:57:38.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.022" endtime="20201030 10:57:38.334"></status>
</kw>
<msg timestamp="20201030 10:57:38.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.304834208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.304835764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.021" endtime="20201030 10:57:38.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.304834208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.304835764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.339" endtime="20201030 10:57:38.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.349" endtime="20201030 10:57:38.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.018" endtime="20201030 10:57:38.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.017" endtime="20201030 10:57:38.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:38.356" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.542000000576138e-0...</msg>
<status status="PASS" starttime="20201030 10:57:38.352" endtime="20201030 10:57:38.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:38.361" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5419999996879596e-06, ...</msg>
<status status="PASS" starttime="20201030 10:57:38.357" endtime="20201030 10:57:38.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.365" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:38.364" endtime="20201030 10:57:38.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.368" level="INFO">VALUE: [1.5559999999581464e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5550000007635845e-06, 1.554999999875406e-06, 1.5269999993350325e-06, 1.5410000004933977e-06, 1.5410000004933977e-06, 1.5279999994177729e-06, 1.5410000004933977e-06, 1.5699999993401548e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.4999999997655777e-06, 1.5559999999581464e-06, 1.5970000006859664e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.5700000002283332e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5550000007635845e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.4999999997655777e-06, 1.542000000576138e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201030 10:57:38.366" endtime="20201030 10:57:38.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.362" endtime="20201030 10:57:38.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.989" endtime="20201030 10:57:38.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:37.989" endtime="20201030 10:57:38.370"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.378" endtime="20201030 10:57:38.390"></status>
</kw>
<msg timestamp="20201030 10:57:38.391" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.376" endtime="20201030 10:57:38.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.393" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:38.392" endtime="20201030 10:57:38.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.394" endtime="20201030 10:57:38.396"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.373" endtime="20201030 10:57:38.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.372" endtime="20201030 10:57:38.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.403" endtime="20201030 10:57:38.722"></status>
</kw>
<msg timestamp="20201030 10:57:38.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.676891556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.676893125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.402" endtime="20201030 10:57:38.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.676891556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.676893125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:38.727" endtime="20201030 10:57:38.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:38.737" endtime="20201030 10:57:38.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.399" endtime="20201030 10:57:38.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.398" endtime="20201030 10:57:38.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:38.745" level="INFO">${RESULT} = [{'diff': 1.5690000001455928e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-...</msg>
<status status="PASS" starttime="20201030 10:57:38.741" endtime="20201030 10:57:38.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:38.750" level="INFO">${OVERHEAD} = {'diff': [1.5690000001455928e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5419999996879596e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:38.746" endtime="20201030 10:57:38.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.754" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:38.753" endtime="20201030 10:57:38.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:38.757" level="INFO">VALUE: [1.5690000001455928e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5560000008463248e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.4999999997655777e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.4720000001133826e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5560000008463248e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5279999994177729e-06, 1.554999999875406e-06, 1.5699999993401548e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5699999993401548e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201030 10:57:38.755" endtime="20201030 10:57:40.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.751" endtime="20201030 10:57:40.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.371" endtime="20201030 10:57:40.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:38.370" endtime="20201030 10:57:40.811"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.828" endtime="20201030 10:57:40.843"></status>
</kw>
<msg timestamp="20201030 10:57:40.844" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.825" endtime="20201030 10:57:40.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:40.849" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:40.846" endtime="20201030 10:57:40.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.851" endtime="20201030 10:57:40.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.819" endtime="20201030 10:57:40.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.816" endtime="20201030 10:57:40.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:40.872" endtime="20201030 10:57:41.193"></status>
</kw>
<msg timestamp="20201030 10:57:41.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.048038069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.048039611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:40.869" endtime="20201030 10:57:41.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.048038069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.048039611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.198" endtime="20201030 10:57:41.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.207" endtime="20201030 10:57:41.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.861" endtime="20201030 10:57:41.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.858" endtime="20201030 10:57:41.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:41.214" level="INFO">${RESULT} = [{'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-...</msg>
<status status="PASS" starttime="20201030 10:57:41.211" endtime="20201030 10:57:41.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:41.219" level="INFO">${OVERHEAD} = {'diff': [1.5419999996879596e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5409999996052193e-06...</msg>
<status status="PASS" starttime="20201030 10:57:41.215" endtime="20201030 10:57:41.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.224" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:41.222" endtime="20201030 10:57:41.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.226" level="INFO">VALUE: [1.5419999996879596e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5280000003059513e-06, 1.5560000008463248e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.4999999997655777e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.527000000223211e-06, 1.527000000223211e-06, 1.4999999997655777e-06, 1.527000000223211e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.4719999992252042e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5280000003059513e-06, 1.527000000223211e-06, 1.5560000008463248e-06, 1.4999999997655777e-06, 1.5409999996052193e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.4860000003835694e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5280000003059513e-06, 1.5829999995276012e-06]</msg>
<status status="PASS" starttime="20201030 10:57:41.225" endtime="20201030 10:57:41.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.220" endtime="20201030 10:57:41.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.813" endtime="20201030 10:57:41.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:40.812" endtime="20201030 10:57:41.228"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.236" endtime="20201030 10:57:41.248"></status>
</kw>
<msg timestamp="20201030 10:57:41.249" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.234" endtime="20201030 10:57:41.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.251" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.250" endtime="20201030 10:57:41.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.252" endtime="20201030 10:57:41.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.232" endtime="20201030 10:57:41.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.230" endtime="20201030 10:57:41.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.261" endtime="20201030 10:57:41.566"></status>
</kw>
<msg timestamp="20201030 10:57:41.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.489054333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.489055833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.260" endtime="20201030 10:57:41.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.489054333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.489055833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.570" endtime="20201030 10:57:41.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.580" endtime="20201030 10:57:41.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.257" endtime="20201030 10:57:41.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.255" endtime="20201030 10:57:41.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:41.587" level="INFO">${RESULT} = [{'diff': 1.4999999997655777e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5549999989872276e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-...</msg>
<status status="PASS" starttime="20201030 10:57:41.584" endtime="20201030 10:57:41.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:41.593" level="INFO">${OVERHEAD} = {'diff': [1.4999999997655777e-06, 1.5409999996052193e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5550000007635845e-06...</msg>
<status status="PASS" starttime="20201030 10:57:41.588" endtime="20201030 10:57:41.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.597" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:41.596" endtime="20201030 10:57:41.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.599" level="INFO">VALUE: [1.4999999997655777e-06, 1.5409999996052193e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.4860000003835694e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5280000003059513e-06, 1.5829999995276012e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.6110000000679747e-06, 1.4859999986072125e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.624999999449983e-06, 1.513999999147586e-06, 1.5969999989096095e-06, 1.4579999998431958e-06, 1.5409999996052193e-06, 1.5420000014643165e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5280000003059513e-06, 1.5279999985295944e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5420000014643165e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5970000006859664e-06, 1.555999999069968e-06, 1.5129999990648457e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.6110000000679747e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.59799999899235e-06, 1.513999999147586e-06]</msg>
<status status="PASS" starttime="20201030 10:57:41.598" endtime="20201030 10:57:41.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.594" endtime="20201030 10:57:41.601"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.229" endtime="20201030 10:57:41.601"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.229" endtime="20201030 10:57:41.601"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.609" endtime="20201030 10:57:41.622"></status>
</kw>
<msg timestamp="20201030 10:57:41.622" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.608" endtime="20201030 10:57:41.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.625" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.623" endtime="20201030 10:57:41.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.626" endtime="20201030 10:57:41.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.605" endtime="20201030 10:57:41.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.603" endtime="20201030 10:57:41.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.635" endtime="20201030 10:57:41.946"></status>
</kw>
<msg timestamp="20201030 10:57:41.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.885840056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.885841653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.633" endtime="20201030 10:57:41.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.885840056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.885841653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:41.951" endtime="20201030 10:57:41.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.961" endtime="20201030 10:57:41.962"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.630" endtime="20201030 10:57:41.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.629" endtime="20201030 10:57:41.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:41.967" level="INFO">${RESULT} = [{'diff': 1.5970000006859664e-06}, {'diff': 1.555999999069968e-06}, {'diff': 1.5129999990648457e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-0...</msg>
<status status="PASS" starttime="20201030 10:57:41.964" endtime="20201030 10:57:41.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:41.972" level="INFO">${OVERHEAD} = {'diff': [1.5970000006859664e-06, 1.555999999069968e-06, 1.5129999990648457e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.6110000000679747e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:41.968" endtime="20201030 10:57:41.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.976" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:41.975" endtime="20201030 10:57:41.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:41.979" level="INFO">VALUE: [1.5970000006859664e-06, 1.555999999069968e-06, 1.5129999990648457e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.6110000000679747e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.59799999899235e-06, 1.513999999147586e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.486999998689953e-06, 1.5970000006859664e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.5420000014643165e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5279999985295944e-06, 1.5280000003059513e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.527000000223211e-06, 1.5409999996052193e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5409999996052193e-06, 1.5550000007635845e-06, 1.4860000003835694e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5549999989872276e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.6110000000679747e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.4999999997655777e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5560000008463248e-06]</msg>
<status status="PASS" starttime="20201030 10:57:41.977" endtime="20201030 10:57:41.979"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.973" endtime="20201030 10:57:41.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.602" endtime="20201030 10:57:41.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.602" endtime="20201030 10:57:41.981"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:41.989" endtime="20201030 10:57:42.002"></status>
</kw>
<msg timestamp="20201030 10:57:42.003" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:41.987" endtime="20201030 10:57:42.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.005" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.004" endtime="20201030 10:57:42.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.006" endtime="20201030 10:57:42.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.984" endtime="20201030 10:57:42.008"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.983" endtime="20201030 10:57:42.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.015" endtime="20201030 10:57:42.326"></status>
</kw>
<msg timestamp="20201030 10:57:42.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.249907125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.249908681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.013" endtime="20201030 10:57:42.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.249907125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.249908681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.331" endtime="20201030 10:57:42.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.340" endtime="20201030 10:57:42.342"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.011" endtime="20201030 10:57:42.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.009" endtime="20201030 10:57:42.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:42.347" level="INFO">${RESULT} = [{'diff': 1.5560000008463248e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5549999989872276e-06}, {'diff': 1.5420000014643165e-06}, {'diff': 1.5419999996879596e-...</msg>
<status status="PASS" starttime="20201030 10:57:42.344" endtime="20201030 10:57:42.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:42.353" level="INFO">${OVERHEAD} = {'diff': [1.5560000008463248e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5549999989872276e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.6110000000679747e-06, 1.5560000008463248e-06...</msg>
<status status="PASS" starttime="20201030 10:57:42.348" endtime="20201030 10:57:42.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.357" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:42.356" endtime="20201030 10:57:42.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.359" level="INFO">VALUE: [1.5560000008463248e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5549999989872276e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.6110000000679747e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.4999999997655777e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.5970000006859664e-06, 1.5419999996879596e-06, 1.513999999147586e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5839999996103415e-06, 1.5420000014643165e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5699999984519764e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.5699999984519764e-06, 1.5550000007635845e-06, 1.526999998446854e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.5410000013815761e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5700000002283332e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5699999984519764e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5279999985295944e-06, 1.5550000007635845e-06]</msg>
<status status="PASS" starttime="20201030 10:57:42.358" endtime="20201030 10:57:42.360"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.354" endtime="20201030 10:57:42.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.981" endtime="20201030 10:57:42.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:41.981" endtime="20201030 10:57:42.361"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.369" endtime="20201030 10:57:42.380"></status>
</kw>
<msg timestamp="20201030 10:57:42.381" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.367" endtime="20201030 10:57:42.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.383" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.382" endtime="20201030 10:57:42.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.384" endtime="20201030 10:57:42.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.365" endtime="20201030 10:57:42.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.363" endtime="20201030 10:57:42.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.393" endtime="20201030 10:57:42.705"></status>
</kw>
<msg timestamp="20201030 10:57:42.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.619173306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.619174847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.392" endtime="20201030 10:57:42.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.619173306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.619174847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.710" endtime="20201030 10:57:42.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.720" endtime="20201030 10:57:42.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.389" endtime="20201030 10:57:42.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.387" endtime="20201030 10:57:42.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:42.727" level="INFO">${RESULT} = [{'diff': 1.5409999996052193e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5699999984519764e-...</msg>
<status status="PASS" starttime="20201030 10:57:42.723" endtime="20201030 10:57:42.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:42.732" level="INFO">${OVERHEAD} = {'diff': [1.5409999996052193e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5699999984519764e-06, 1.5690000001455928e-06, 1.5419999996879596e-06...</msg>
<status status="PASS" starttime="20201030 10:57:42.728" endtime="20201030 10:57:42.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.737" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:42.736" endtime="20201030 10:57:42.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.739" level="INFO">VALUE: [1.5409999996052193e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5699999984519764e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5279999985295944e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.4579999998431958e-06, 1.513999999147586e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5829999995276012e-06, 1.5409999996052193e-06, 1.5410000013815761e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5420000014643165e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.5279999985295944e-06, 1.5419999996879596e-06, 1.5420000014643165e-06]</msg>
<status status="PASS" starttime="20201030 10:57:42.738" endtime="20201030 10:57:42.740"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.733" endtime="20201030 10:57:42.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.362" endtime="20201030 10:57:42.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.362" endtime="20201030 10:57:42.741"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.749" endtime="20201030 10:57:42.760"></status>
</kw>
<msg timestamp="20201030 10:57:42.761" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.748" endtime="20201030 10:57:42.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:42.763" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:42.762" endtime="20201030 10:57:42.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.764" endtime="20201030 10:57:42.766"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.745" endtime="20201030 10:57:42.766"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.743" endtime="20201030 10:57:42.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:42.773" endtime="20201030 10:57:43.095"></status>
</kw>
<msg timestamp="20201030 10:57:43.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.988884847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.988886403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:42.772" endtime="20201030 10:57:43.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.988884847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.988886403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:43.100" endtime="20201030 10:57:43.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.110" endtime="20201030 10:57:43.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.769" endtime="20201030 10:57:43.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.767" endtime="20201030 10:57:43.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:43.117" level="INFO">${RESULT} = [{'diff': 1.5560000008463248e-06}, {'diff': 1.5549999989872276e-06}, {'diff': 1.555999999069968e-06}, {'diff': 1.555999999069968e-06}, {'diff': 1.5549999989872276e-06}, {'diff': 1.5280000003059513e-06...</msg>
<status status="PASS" starttime="20201030 10:57:43.113" endtime="20201030 10:57:43.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:43.121" level="INFO">${OVERHEAD} = {'diff': [1.5560000008463248e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, ...</msg>
<status status="PASS" starttime="20201030 10:57:43.118" endtime="20201030 10:57:43.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.125" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:43.124" endtime="20201030 10:57:43.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.128" level="INFO">VALUE: [1.5560000008463248e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.5279999985295944e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5839999996103415e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.555999999069968e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.5420000014643165e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5420000014643165e-06, 1.555999999069968e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5550000007635845e-06, 1.5279999985295944e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5000000015419346e-06, 1.5409999996052193e-06, 1.5410000013815761e-06, 1.5549999989872276e-06]</msg>
<status status="PASS" starttime="20201030 10:57:43.126" endtime="20201030 10:57:43.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.122" endtime="20201030 10:57:43.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.742" endtime="20201030 10:57:43.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:42.741" endtime="20201030 10:57:43.130"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.139" endtime="20201030 10:57:43.150"></status>
</kw>
<msg timestamp="20201030 10:57:43.150" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.137" endtime="20201030 10:57:43.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.153" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.151" endtime="20201030 10:57:43.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.154" endtime="20201030 10:57:43.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.133" endtime="20201030 10:57:43.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.132" endtime="20201030 10:57:43.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.163" endtime="20201030 10:57:43.478"></status>
</kw>
<msg timestamp="20201030 10:57:43.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.358092764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.358094306, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201030 10:57:43.161" endtime="20201030 10:57:43.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.358092764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.358094306, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201030 10:57:43.482" endtime="20201030 10:57:43.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.492" endtime="20201030 10:57:43.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.159" endtime="20201030 10:57:43.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.157" endtime="20201030 10:57:43.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:43.499" level="INFO">${RESULT} = [{'diff': 1.5419999996879596e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.5560000008463248e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5560000008463248e-...</msg>
<status status="PASS" starttime="20201030 10:57:43.496" endtime="20201030 10:57:43.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:43.505" level="INFO">${OVERHEAD} = {'diff': [1.5419999996879596e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.555999999069968e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:43.500" endtime="20201030 10:57:43.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.509" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:43.508" endtime="20201030 10:57:43.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.511" level="INFO">VALUE: [1.5419999996879596e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5000000015419346e-06, 1.5409999996052193e-06, 1.5410000013815761e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5839999996103415e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5279999985295944e-06, 1.5420000014643165e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.4719999992252042e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.526999998446854e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.514000000923943e-06, 1.5409999996052193e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201030 10:57:43.510" endtime="20201030 10:57:43.512"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.505" endtime="20201030 10:57:43.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.131" endtime="20201030 10:57:43.513"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.130" endtime="20201030 10:57:43.513"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.521" endtime="20201030 10:57:43.532"></status>
</kw>
<msg timestamp="20201030 10:57:43.533" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.519" endtime="20201030 10:57:43.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.535" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.534" endtime="20201030 10:57:43.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.536" endtime="20201030 10:57:43.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.517" endtime="20201030 10:57:43.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.515" endtime="20201030 10:57:43.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.545" endtime="20201030 10:57:43.866"></status>
</kw>
<msg timestamp="20201030 10:57:43.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.736773347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.736774889, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201030 10:57:43.544" endtime="20201030 10:57:43.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.736773347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.736774889, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201030 10:57:43.871" endtime="20201030 10:57:43.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.881" endtime="20201030 10:57:43.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.541" endtime="20201030 10:57:43.883"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.539" endtime="20201030 10:57:43.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:43.887" level="INFO">${RESULT} = [{'diff': 1.5419999996879596e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.514000000923943e-0...</msg>
<status status="PASS" starttime="20201030 10:57:43.884" endtime="20201030 10:57:43.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:43.893" level="INFO">${OVERHEAD} = {'diff': [1.5419999996879596e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.514000000923943e-06, 1.5409999996052193e-06, 1.5550000007635845e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:43.888" endtime="20201030 10:57:43.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.897" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:43.896" endtime="20201030 10:57:43.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.900" level="INFO">VALUE: [1.5419999996879596e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.514000000923943e-06, 1.5409999996052193e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.4860000003835694e-06, 1.5550000007635845e-06, 1.5280000003059513e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5129999990648457e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.624999999449983e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.59799999899235e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.555999999069968e-06, 1.5279999985295944e-06, 1.5419999996879596e-06, 1.555999999069968e-06]</msg>
<status status="PASS" starttime="20201030 10:57:43.898" endtime="20201030 10:57:43.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.894" endtime="20201030 10:57:43.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.514" endtime="20201030 10:57:43.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.513" endtime="20201030 10:57:43.967"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.975" endtime="20201030 10:57:43.986"></status>
</kw>
<msg timestamp="20201030 10:57:43.987" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.973" endtime="20201030 10:57:43.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:43.989" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:43.988" endtime="20201030 10:57:43.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:43.990" endtime="20201030 10:57:43.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.970" endtime="20201030 10:57:43.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.969" endtime="20201030 10:57:43.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.001" endtime="20201030 10:57:44.321"></status>
</kw>
<msg timestamp="20201030 10:57:44.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 11.109006083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 11.109007653, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201030 10:57:43.999" endtime="20201030 10:57:44.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 11.109006083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 11.109007653, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201030 10:57:44.326" endtime="20201030 10:57:44.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.337" endtime="20201030 10:57:44.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.996" endtime="20201030 10:57:44.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.994" endtime="20201030 10:57:44.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.344" level="INFO">${RESULT} = [{'diff': 1.5700000002283332e-06}, {'diff': 1.555999999069968e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5560000008463248e-0...</msg>
<status status="PASS" starttime="20201030 10:57:44.340" endtime="20201030 10:57:44.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:44.349" level="INFO">${OVERHEAD} = {'diff': [1.5700000002283332e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.59799999899235e-06, 1.5419999996879596e-06, 1...</msg>
<status status="PASS" starttime="20201030 10:57:44.345" endtime="20201030 10:57:44.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.353" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:44.352" endtime="20201030 10:57:44.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.356" level="INFO">VALUE: [1.5700000002283332e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.59799999899235e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.555999999069968e-06, 1.5279999985295944e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5280000003059513e-06, 1.5410000013815761e-06, 1.5280000003059513e-06, 1.5549999989872276e-06, 1.5420000014643165e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.526999998446854e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5549999989872276e-06, 1.5420000014643165e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5409999996052193e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5980000007687067e-06, 1.5419999996879596e-06, 1.5279999985295944e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.514000000923943e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.527000000223211e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5420000014643165e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.5280000003059513e-06, 1.526999998446854e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201030 10:57:44.354" endtime="20201030 10:57:44.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.349" endtime="20201030 10:57:44.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.967" endtime="20201030 10:57:44.358"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:43.967" endtime="20201030 10:57:44.358"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.366" endtime="20201030 10:57:44.379"></status>
</kw>
<msg timestamp="20201030 10:57:44.379" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.365" endtime="20201030 10:57:44.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.382" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.380" endtime="20201030 10:57:44.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.383" endtime="20201030 10:57:44.384"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.362" endtime="20201030 10:57:44.385"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.360" endtime="20201030 10:57:44.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.392" endtime="20201030 10:57:44.721"></status>
</kw>
<msg timestamp="20201030 10:57:44.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 11.551151431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 11.551152958, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201030 10:57:44.390" endtime="20201030 10:57:44.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 11.551151431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 11.551152958, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201030 10:57:44.726" endtime="20201030 10:57:44.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.737" endtime="20201030 10:57:44.738"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.388" endtime="20201030 10:57:44.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.386" endtime="20201030 10:57:44.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:44.744" level="INFO">${RESULT} = [{'diff': 1.527000000223211e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5560000008463248e-06}, {'diff': 1.5420000014643165e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5550000007635845e-0...</msg>
<status status="PASS" starttime="20201030 10:57:44.740" endtime="20201030 10:57:44.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:44.749" level="INFO">${OVERHEAD} = {'diff': [1.527000000223211e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5420000014643165e-06, 1.5549999989872276e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:44.745" endtime="20201030 10:57:44.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.754" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:44.753" endtime="20201030 10:57:44.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.756" level="INFO">VALUE: [1.527000000223211e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5420000014643165e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.5280000003059513e-06, 1.526999998446854e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5829999995276012e-06, 1.5699999984519764e-06, 1.5419999996879596e-06, 1.5969999989096095e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5560000008463248e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.555999999069968e-06, 1.5409999996052193e-06, 1.5410000013815761e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.4860000003835694e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.583000001303958e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5409999996052193e-06, 1.5410000013815761e-06]</msg>
<status status="PASS" starttime="20201030 10:57:44.755" endtime="20201030 10:57:44.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.750" endtime="20201030 10:57:44.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.359" endtime="20201030 10:57:44.758"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.359" endtime="20201030 10:57:44.758"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.766" endtime="20201030 10:57:44.779"></status>
</kw>
<msg timestamp="20201030 10:57:44.779" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.765" endtime="20201030 10:57:44.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:44.782" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:44.780" endtime="20201030 10:57:44.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.783" endtime="20201030 10:57:44.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.762" endtime="20201030 10:57:44.785"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.760" endtime="20201030 10:57:44.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:44.792" endtime="20201030 10:57:45.107"></status>
</kw>
<msg timestamp="20201030 10:57:45.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 11.933044486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 11.933046028, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201030 10:57:44.791" endtime="20201030 10:57:45.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 11.933044486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 11.933046028, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201030 10:57:45.113" endtime="20201030 10:57:45.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.123" endtime="20201030 10:57:45.125"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.788" endtime="20201030 10:57:45.125"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.786" endtime="20201030 10:57:45.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:45.130" level="INFO">${RESULT} = [{'diff': 1.5419999996879596e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.555999999069968e-06}, {'diff': 1.555999999069968e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5409999996052193e-06...</msg>
<status status="PASS" starttime="20201030 10:57:45.126" endtime="20201030 10:57:45.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:45.135" level="INFO">${OVERHEAD} = {'diff': [1.5419999996879596e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.4860000003835694e-06, 1.5280000003059513e-06, ...</msg>
<status status="PASS" starttime="20201030 10:57:45.131" endtime="20201030 10:57:45.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.139" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 10:57:45.138" endtime="20201030 10:57:45.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:45.142" level="INFO">VALUE: [1.5419999996879596e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.4860000003835694e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.583000001303958e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5409999996052193e-06, 1.5410000013815761e-06, 1.5690000001455928e-06, 1.5969999989096095e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5970000006859664e-06, 1.5280000003059513e-06, 1.5279999985295944e-06, 1.5560000008463248e-06, 1.527000000223211e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5280000003059513e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5279999985295944e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.513999999147586e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5550000007635845e-06]</msg>
<status status="PASS" starttime="20201030 10:57:45.140" endtime="20201030 10:57:45.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.136" endtime="20201030 10:57:45.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.759" endtime="20201030 10:57:45.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:44.759" endtime="20201030 10:57:45.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:35.333" endtime="20201030 10:57:45.144"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:32.230" endtime="20201030 10:57:45.145" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:45.153" endtime="20201030 10:57:45.172"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.151" endtime="20201030 10:57:45.173"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:45.189" endtime="20201030 10:57:48.214"></status>
</kw>
<msg timestamp="20201030 10:57:48.215" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:45.187" endtime="20201030 10:57:48.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.220" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.217" endtime="20201030 10:57:48.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.227" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:48.223" endtime="20201030 10:57:48.228"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:45.185" endtime="20201030 10:57:48.229"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:45.182" endtime="20201030 10:57:48.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.181" endtime="20201030 10:57:48.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:48.239" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:48.237" endtime="20201030 10:57:48.240"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.233" endtime="20201030 10:57:48.240"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.180" endtime="20201030 10:57:48.241"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.179" endtime="20201030 10:57:48.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.243" endtime="20201030 10:57:48.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.175" endtime="20201030 10:57:48.247"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.174" endtime="20201030 10:57:48.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:45.150" endtime="20201030 10:57:48.249"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.270" endtime="20201030 10:57:48.294"></status>
</kw>
<msg timestamp="20201030 10:57:48.295" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.267" endtime="20201030 10:57:48.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.300" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.297" endtime="20201030 10:57:48.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.303" endtime="20201030 10:57:48.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.261" endtime="20201030 10:57:48.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.256" endtime="20201030 10:57:48.307"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.309" endtime="20201030 10:57:48.310"></status>
</kw>
<msg timestamp="20201030 10:57:48.311" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:57:48.307" endtime="20201030 10:57:48.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.315" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:48.314" endtime="20201030 10:57:48.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.318" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:48.316" endtime="20201030 10:57:48.319"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.312" endtime="20201030 10:57:48.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.323" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:48.322" endtime="20201030 10:57:48.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.325" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:48.324" endtime="20201030 10:57:48.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.320" endtime="20201030 10:57:48.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.333" endtime="20201030 10:57:48.625"></status>
</kw>
<msg timestamp="20201030 10:57:48.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.109150917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.109155569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.331" endtime="20201030 10:57:48.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.109150917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.109155569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:48.630" endtime="20201030 10:57:48.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.638" endtime="20201030 10:57:48.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.329" endtime="20201030 10:57:48.640"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.327" endtime="20201030 10:57:48.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:48.645" level="INFO">${RESULT} = [{'diff': 4.651999999882861e-06}, {'diff': 4.848000000112762e-06}, {'diff': 4.818999999933737e-06}, {'diff': 4.818999999933737e-06}, {'diff': 4.805999999746291e-06}, {'diff': 4.833000000203924e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:57:48.642" endtime="20201030 10:57:48.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:48.649" level="INFO">${OVERHEAD} = {'diff': [4.651999999882861e-06, 4.848000000112762e-06, 4.818999999933737e-06, 4.818999999933737e-06, 4.805999999746291e-06, 4.833000000203924e-06, 4.80600000019038e-06, 4.832999999759835e-06, 4.81899...</msg>
<status status="PASS" starttime="20201030 10:57:48.646" endtime="20201030 10:57:48.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.655" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 10:57:48.653" endtime="20201030 10:57:48.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:48.657" level="INFO">VALUE: [4.651999999882861e-06, 4.848000000112762e-06, 4.818999999933737e-06, 4.818999999933737e-06, 4.805999999746291e-06, 4.833000000203924e-06, 4.80600000019038e-06, 4.832999999759835e-06, 4.818999999933737e-06, 4.805999999746291e-06, 4.818999999933737e-06, 4.818999999933737e-06, 4.8340000002866645e-06, 4.818999999933737e-06, 4.818999999933737e-06, 4.805999999746291e-06, 4.8340000002866645e-06, 4.820000000016478e-06, 4.80600000019038e-06, 4.820000000016478e-06, 4.820000000016478e-06, 4.875000000126306e-06, 4.778000000094096e-06, 4.805999999746291e-06, 4.832999999759835e-06, 4.820000000016478e-06, 4.790999999837453e-06, 4.902999999778501e-06, 4.80600000019038e-06, 4.847000000030022e-06, 4.818999999933737e-06, 4.832999999759835e-06, 4.80500000010764e-06, 4.805999999746291e-06, 4.820000000016478e-06, 4.833000000203924e-06, 4.818999999933737e-06, 4.833999999842575e-06, 4.820000000016478e-06, 4.80600000019038e-06, 4.820000000016478e-06, 4.832999999759835e-06, 4.818999999933737e-06, 4.818999999933737e-06, 4.80500000010764e-06, 4.833000000203924e-06, 4.818999999933737e-06, 4.820000000016478e-06, 4.832999999759835e-06, 4.818999999933737e-06]</msg>
<status status="PASS" starttime="20201030 10:57:48.656" endtime="20201030 10:57:48.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.650" endtime="20201030 10:57:48.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.251" endtime="20201030 10:57:48.659"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:45.147" endtime="20201030 10:57:48.660" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:48.668" endtime="20201030 10:57:48.687"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.666" endtime="20201030 10:57:48.688"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:48.701" endtime="20201030 10:57:51.727"></status>
</kw>
<msg timestamp="20201030 10:57:51.728" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:48.700" endtime="20201030 10:57:51.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.733" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.730" endtime="20201030 10:57:51.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.740" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:51.736" endtime="20201030 10:57:51.741"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:48.697" endtime="20201030 10:57:51.742"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:48.694" endtime="20201030 10:57:51.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.693" endtime="20201030 10:57:51.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:51.752" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:51.751" endtime="20201030 10:57:51.753"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.746" endtime="20201030 10:57:51.753"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.692" endtime="20201030 10:57:51.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.692" endtime="20201030 10:57:51.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.756" endtime="20201030 10:57:51.759"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.690" endtime="20201030 10:57:51.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.689" endtime="20201030 10:57:51.761"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:48.665" endtime="20201030 10:57:51.762"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.786" endtime="20201030 10:57:51.865"></status>
</kw>
<msg timestamp="20201030 10:57:51.866" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.780" endtime="20201030 10:57:51.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.872" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:51.868" endtime="20201030 10:57:51.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.874" endtime="20201030 10:57:51.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.774" endtime="20201030 10:57:51.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.769" endtime="20201030 10:57:51.880"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.885" endtime="20201030 10:57:51.889"></status>
</kw>
<msg timestamp="20201030 10:57:51.890" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:57:51.882" endtime="20201030 10:57:51.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.898" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:51.896" endtime="20201030 10:57:51.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.903" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:51.901" endtime="20201030 10:57:51.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.891" endtime="20201030 10:57:51.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.913" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:51.911" endtime="20201030 10:57:51.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:51.918" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:51.916" endtime="20201030 10:57:51.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.906" endtime="20201030 10:57:51.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:51.934" endtime="20201030 10:57:52.240"></status>
</kw>
<msg timestamp="20201030 10:57:52.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.111355847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.111394458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:51.931" endtime="20201030 10:57:52.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.111355847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.111394458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:52.244" endtime="20201030 10:57:52.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.253" endtime="20201030 10:57:52.254"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.925" endtime="20201030 10:57:52.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.921" endtime="20201030 10:57:52.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:52.259" level="INFO">${RESULT} = [{'diff': 3.861099999991069e-05}, {'diff': 3.857000000007105e-05}, {'diff': 3.856999999962696e-05}, {'diff': 3.8583000000258494e-05}, {'diff': 3.855500000016221e-05}, {'diff': 3.856899999998831e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:57:52.256" endtime="20201030 10:57:52.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:52.265" level="INFO">${OVERHEAD} = {'diff': [3.861099999991069e-05, 3.857000000007105e-05, 3.856999999962696e-05, 3.8583000000258494e-05, 3.855500000016221e-05, 3.856899999998831e-05, 3.855499999971812e-05, 3.8583999999897145e-05, 3.85...</msg>
<status status="PASS" starttime="20201030 10:57:52.260" endtime="20201030 10:57:52.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.269" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 10:57:52.268" endtime="20201030 10:57:52.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:52.272" level="INFO">VALUE: [3.861099999991069e-05, 3.857000000007105e-05, 3.856999999962696e-05, 3.8583000000258494e-05, 3.855500000016221e-05, 3.856899999998831e-05, 3.855499999971812e-05, 3.8583999999897145e-05, 3.856999999962696e-05, 3.856899999998831e-05, 3.855600000024495e-05, 3.8583000000258494e-05, 3.856899999998831e-05, 3.856899999998831e-05, 3.851399999987848e-05, 3.856999999962696e-05, 3.855600000024495e-05, 3.856899999998831e-05, 3.857000000007105e-05, 3.857000000007105e-05, 3.855599999980086e-05, 3.855599999980086e-05, 3.854199999997476e-05, 3.857000000007105e-05, 3.856899999998831e-05, 3.855500000016221e-05, 3.854199999997476e-05, 3.855599999980086e-05, 3.855499999971812e-05, 3.856899999998831e-05, 3.854099999989202e-05, 3.857000000007105e-05, 3.856899999998831e-05, 3.857000000007105e-05, 3.854199999997476e-05, 3.8569000000432396e-05, 3.856899999998831e-05, 3.855600000024495e-05, 3.8582999999814405e-05, 3.854099999989202e-05, 3.850000000005238e-05, 3.8583000000258494e-05, 3.855500000016221e-05, 3.856899999998831e-05, 3.8584000000341234e-05, 3.856899999998831e-05, 3.855599999980086e-05, 3.854200000041885e-05, 3.8583000000258494e-05, 3.854199999997476e-05]</msg>
<status status="PASS" starttime="20201030 10:57:52.270" endtime="20201030 10:57:52.272"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.265" endtime="20201030 10:57:52.273"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:51.764" endtime="20201030 10:57:52.274"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:48.662" endtime="20201030 10:57:52.274" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:52.282" endtime="20201030 10:57:52.302"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.281" endtime="20201030 10:57:52.303"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:52.316" endtime="20201030 10:57:55.341"></status>
</kw>
<msg timestamp="20201030 10:57:55.342" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:52.314" endtime="20201030 10:57:55.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.347" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.344" endtime="20201030 10:57:55.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.354" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:55.350" endtime="20201030 10:57:55.354"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:52.312" endtime="20201030 10:57:55.356"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:52.309" endtime="20201030 10:57:55.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.308" endtime="20201030 10:57:55.358"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:55.366" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:55.364" endtime="20201030 10:57:55.367"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.360" endtime="20201030 10:57:55.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.307" endtime="20201030 10:57:55.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.306" endtime="20201030 10:57:55.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.372" endtime="20201030 10:57:55.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.305" endtime="20201030 10:57:55.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.303" endtime="20201030 10:57:55.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:52.280" endtime="20201030 10:57:55.378"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.397" endtime="20201030 10:57:55.618"></status>
</kw>
<msg timestamp="20201030 10:57:55.619" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.394" endtime="20201030 10:57:55.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.621" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:55.620" endtime="20201030 10:57:55.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.622" endtime="20201030 10:57:55.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.388" endtime="20201030 10:57:55.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.383" endtime="20201030 10:57:55.625"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.628" endtime="20201030 10:57:55.629"></status>
</kw>
<msg timestamp="20201030 10:57:55.630" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:57:55.626" endtime="20201030 10:57:55.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.634" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:55.633" endtime="20201030 10:57:55.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.636" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:55.635" endtime="20201030 10:57:55.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.630" endtime="20201030 10:57:55.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.641" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:55.640" endtime="20201030 10:57:55.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.643" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:55.642" endtime="20201030 10:57:55.643"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.637" endtime="20201030 10:57:55.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.650" endtime="20201030 10:57:55.950"></status>
</kw>
<msg timestamp="20201030 10:57:55.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.110503472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.110577778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.649" endtime="20201030 10:57:55.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.110503472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.110577778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:55.954" endtime="20201030 10:57:55.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:55.962" endtime="20201030 10:57:55.964"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.646" endtime="20201030 10:57:55.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.644" endtime="20201030 10:57:55.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:55.970" level="INFO">${RESULT} = [{'diff': 7.430600000013499e-05}, {'diff': 7.390299999965322e-05}, {'diff': 7.388899999982712e-05}, {'diff': 7.388899999982712e-05}, {'diff': 7.390200000001457e-05}, {'diff': 7.391600000028475e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:57:55.966" endtime="20201030 10:57:55.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:55.975" level="INFO">${OVERHEAD} = {'diff': [7.430600000013499e-05, 7.390299999965322e-05, 7.388899999982712e-05, 7.388899999982712e-05, 7.390200000001457e-05, 7.391600000028475e-05, 7.388899999982712e-05, 7.387500000000102e-05, 7.3889...</msg>
<status status="PASS" starttime="20201030 10:57:55.971" endtime="20201030 10:57:55.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.979" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 10:57:55.978" endtime="20201030 10:57:55.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:55.982" level="INFO">VALUE: [7.430600000013499e-05, 7.390299999965322e-05, 7.388899999982712e-05, 7.388899999982712e-05, 7.390200000001457e-05, 7.391600000028475e-05, 7.388899999982712e-05, 7.387500000000102e-05, 7.388900000027121e-05, 7.39169999999234e-05, 7.397200000003323e-05, 7.388900000027121e-05, 7.388899999982712e-05, 7.388899999982712e-05, 7.390300000009731e-05, 7.390300000009731e-05, 7.387500000000102e-05, 7.388900000027121e-05, 7.390300000009731e-05, 7.388800000018847e-05, 7.390300000009731e-05, 7.39169999999234e-05, 7.388900000027121e-05, 7.387500000000102e-05, 7.384699999990474e-05, 7.390300000009731e-05, 7.390300000009731e-05, 7.383300000007864e-05, 7.390200000001457e-05, 7.39169999999234e-05, 7.39169999999234e-05, 7.388799999974438e-05, 7.386099999973084e-05, 7.390300000009731e-05, 7.390299999965322e-05, 7.388899999982712e-05, 7.383300000007864e-05, 7.39169999999234e-05, 7.387500000000102e-05, 7.390300000009731e-05, 7.390300000009731e-05, 7.388900000027121e-05, 7.393000000011085e-05, 7.388899999982712e-05, 7.39169999999234e-05, 7.393100000019359e-05, 7.391599999984066e-05, 7.388899999982712e-05, 7.390300000009731e-05, 7.390299999965322e-05]</msg>
<status status="PASS" starttime="20201030 10:57:55.980" endtime="20201030 10:57:55.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.975" endtime="20201030 10:57:55.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.380" endtime="20201030 10:57:55.983"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:52.277" endtime="20201030 10:57:55.984" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:55.992" endtime="20201030 10:57:56.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.991" endtime="20201030 10:57:56.012"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:56.027" endtime="20201030 10:57:59.051"></status>
</kw>
<msg timestamp="20201030 10:57:59.052" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:56.025" endtime="20201030 10:57:59.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.058" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.054" endtime="20201030 10:57:59.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.064" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:57:59.060" endtime="20201030 10:57:59.065"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:56.022" endtime="20201030 10:57:59.066"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:56.019" endtime="20201030 10:57:59.068"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.018" endtime="20201030 10:57:59.068"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:57:59.077" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:57:59.075" endtime="20201030 10:57:59.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.070" endtime="20201030 10:57:59.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.017" endtime="20201030 10:57:59.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.016" endtime="20201030 10:57:59.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.080" endtime="20201030 10:57:59.084"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.015" endtime="20201030 10:57:59.085"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:56.013" endtime="20201030 10:57:59.086"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:55.989" endtime="20201030 10:57:59.086"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.108" endtime="20201030 10:57:59.133"></status>
</kw>
<msg timestamp="20201030 10:57:59.134" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.104" endtime="20201030 10:57:59.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.139" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.136" endtime="20201030 10:57:59.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.142" endtime="20201030 10:57:59.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.098" endtime="20201030 10:57:59.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.094" endtime="20201030 10:57:59.148"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.152" endtime="20201030 10:57:59.157"></status>
</kw>
<msg timestamp="20201030 10:57:59.157" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:57:59.149" endtime="20201030 10:57:59.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.166" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:57:59.164" endtime="20201030 10:57:59.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.171" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:57:59.169" endtime="20201030 10:57:59.172"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.159" endtime="20201030 10:57:59.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.181" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:57:59.179" endtime="20201030 10:57:59.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.186" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:57:59.184" endtime="20201030 10:57:59.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.174" endtime="20201030 10:57:59.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.196" endtime="20201030 10:57:59.489"></status>
</kw>
<msg timestamp="20201030 10:57:59.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107580458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107581722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.194" endtime="20201030 10:57:59.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107580458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107581722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:57:59.493" endtime="20201030 10:57:59.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.502" endtime="20201030 10:57:59.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.191" endtime="20201030 10:57:59.504"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.189" endtime="20201030 10:57:59.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:57:59.509" level="INFO">${RESULT} = [{'diff': 1.2639999997787754e-06}, {'diff': 1.2499999999526779e-06}, {'diff': 1.2640000002228646e-06}, {'diff': 1.2499999999526779e-06}, {'diff': 1.2499999999526779e-06}, {'diff': 1.2360000001265803e-...</msg>
<status status="PASS" starttime="20201030 10:57:59.505" endtime="20201030 10:57:59.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:57:59.513" level="INFO">${OVERHEAD} = {'diff': [1.2639999997787754e-06, 1.2499999999526779e-06, 1.2640000002228646e-06, 1.2499999999526779e-06, 1.2499999999526779e-06, 1.2360000001265803e-06, 1.2499999999526779e-06, 1.319999999971344e-06,...</msg>
<status status="PASS" starttime="20201030 10:57:59.510" endtime="20201030 10:57:59.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.517" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 10:57:59.516" endtime="20201030 10:57:59.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:57:59.520" level="INFO">VALUE: [1.2639999997787754e-06, 1.2499999999526779e-06, 1.2640000002228646e-06, 1.2499999999526779e-06, 1.2499999999526779e-06, 1.2360000001265803e-06, 1.2499999999526779e-06, 1.319999999971344e-06, 1.2499999999526779e-06, 1.2360000001265803e-06, 1.2919999998750598e-06, 1.2499999999526779e-06, 1.2499999999526779e-06, 1.235999999682491e-06, 1.2499999999526779e-06, 1.1800000003781008e-06, 1.2499999999526779e-06, 1.2639999997787754e-06, 1.2499999999526779e-06, 1.2499999999526779e-06, 1.2499999999526779e-06, 1.2640000002228646e-06, 1.2639999997787754e-06, 1.2499999999526779e-06, 1.2499999999526779e-06, 1.2499999999526779e-06, 1.2499999999526779e-06, 1.2640000002228646e-06, 1.2499999999526779e-06, 1.2499999999526779e-06, 1.2360000001265803e-06, 1.250000000396767e-06, 1.2499999999526779e-06, 1.2360000001265803e-06, 1.2499999999526779e-06, 1.2499999999526779e-06, 1.2639999997787754e-06, 1.2499999999526779e-06, 1.2499999999526779e-06, 1.2360000001265803e-06, 1.2360000001265803e-06, 1.2499999999526779e-06, 1.2499999999526779e-06, 1.2640000002228646e-06, 1.2220000003004827e-06, 1.2499999999526779e-06, 1.2640000002228646e-06, 1.2499999999526779e-06, 1.2499999999526779e-06, 1.2640000002228646e-06]</msg>
<status status="PASS" starttime="20201030 10:57:59.519" endtime="20201030 10:57:59.520"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.514" endtime="20201030 10:57:59.521"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.089" endtime="20201030 10:57:59.521"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:55.987" endtime="20201030 10:57:59.522" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:57:59.531" endtime="20201030 10:57:59.550"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.529" endtime="20201030 10:57:59.551"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:57:59.565" endtime="20201030 10:58:02.591"></status>
</kw>
<msg timestamp="20201030 10:58:02.592" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:57:59.563" endtime="20201030 10:58:02.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.597" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.594" endtime="20201030 10:58:02.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.604" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:02.599" endtime="20201030 10:58:02.604"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:59.561" endtime="20201030 10:58:02.606"></status>
</kw>
<status status="FAIL" starttime="20201030 10:57:59.558" endtime="20201030 10:58:02.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.557" endtime="20201030 10:58:02.608"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:02.616" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:02.614" endtime="20201030 10:58:02.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.610" endtime="20201030 10:58:02.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.556" endtime="20201030 10:58:02.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.555" endtime="20201030 10:58:02.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.619" endtime="20201030 10:58:02.623"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.554" endtime="20201030 10:58:02.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.551" endtime="20201030 10:58:02.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:57:59.528" endtime="20201030 10:58:02.625"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.647" endtime="20201030 10:58:02.721"></status>
</kw>
<msg timestamp="20201030 10:58:02.722" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.644" endtime="20201030 10:58:02.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.724" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:02.723" endtime="20201030 10:58:02.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.726" endtime="20201030 10:58:02.727"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.638" endtime="20201030 10:58:02.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.633" endtime="20201030 10:58:02.728"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.730" endtime="20201030 10:58:02.733"></status>
</kw>
<msg timestamp="20201030 10:58:02.762" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:58:02.729" endtime="20201030 10:58:02.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.766" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:58:02.765" endtime="20201030 10:58:02.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.768" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:58:02.767" endtime="20201030 10:58:02.769"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.763" endtime="20201030 10:58:02.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.773" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:58:02.772" endtime="20201030 10:58:02.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:02.775" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:58:02.774" endtime="20201030 10:58:02.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.770" endtime="20201030 10:58:02.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:02.783" endtime="20201030 10:58:03.084"></status>
</kw>
<msg timestamp="20201030 10:58:03.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.109960514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.109971111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:02.781" endtime="20201030 10:58:03.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.109960514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.109971111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:03.089" endtime="20201030 10:58:03.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.097" endtime="20201030 10:58:03.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.778" endtime="20201030 10:58:03.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.777" endtime="20201030 10:58:03.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:03.104" level="INFO">${RESULT} = [{'diff': 1.0597000000167611e-05}, {'diff': 1.0582999999897424e-05}, {'diff': 1.0610999999993709e-05}, {'diff': 1.0597999999806262e-05}, {'diff': 1.0582999999897424e-05}, {'diff': 1.0582999999897424e-...</msg>
<status status="PASS" starttime="20201030 10:58:03.100" endtime="20201030 10:58:03.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:03.109" level="INFO">${OVERHEAD} = {'diff': [1.0597000000167611e-05, 1.0582999999897424e-05, 1.0610999999993709e-05, 1.0597999999806262e-05, 1.0582999999897424e-05, 1.0582999999897424e-05, 1.0582999999897424e-05, 1.065199999983335e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:03.105" endtime="20201030 10:58:03.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.113" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 10:58:03.112" endtime="20201030 10:58:03.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:03.116" level="INFO">VALUE: [1.0597000000167611e-05, 1.0582999999897424e-05, 1.0610999999993709e-05, 1.0597999999806262e-05, 1.0582999999897424e-05, 1.0582999999897424e-05, 1.0582999999897424e-05, 1.065199999983335e-05, 1.0624999999819806e-05, 1.0583000000341514e-05, 1.0569000000071327e-05, 1.0583999999980165e-05, 1.0569000000071327e-05, 1.0583999999980165e-05, 1.0582999999897424e-05, 1.0624999999819806e-05, 1.0582999999897424e-05, 1.0569999999709978e-05, 1.0582999999897424e-05, 1.0583000000341514e-05, 1.0569999999709978e-05, 1.0582999999897424e-05, 1.0513999999961499e-05, 1.0528000000231685e-05, 1.0569000000071327e-05, 1.0597000000167611e-05, 1.0597999999806262e-05, 1.0596999999723522e-05, 1.0569000000071327e-05, 1.0582999999897424e-05, 1.0582999999897424e-05, 1.0597000000167611e-05, 1.0583999999980165e-05, 1.0610999999993709e-05, 1.0597999999806262e-05, 1.0582999999897424e-05, 1.0582999999897424e-05, 1.0596999999723522e-05, 1.0596999999723522e-05, 1.0597000000167611e-05, 1.0582999999897424e-05, 1.0569000000071327e-05, 1.0582999999897424e-05, 1.0583999999980165e-05, 1.0582999999897424e-05, 1.0582999999897424e-05, 1.0583999999980165e-05, 1.0582999999897424e-05, 1.0582999999897424e-05, 1.0583000000341514e-05]</msg>
<status status="PASS" starttime="20201030 10:58:03.115" endtime="20201030 10:58:03.116"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.110" endtime="20201030 10:58:03.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:02.628" endtime="20201030 10:58:03.117"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:57:59.525" endtime="20201030 10:58:03.118" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:03.127" endtime="20201030 10:58:03.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.125" endtime="20201030 10:58:03.147"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:03.160" endtime="20201030 10:58:06.184"></status>
</kw>
<msg timestamp="20201030 10:58:06.185" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:03.159" endtime="20201030 10:58:06.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.191" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.188" endtime="20201030 10:58:06.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.197" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:06.193" endtime="20201030 10:58:06.198"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:03.156" endtime="20201030 10:58:06.200"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:03.153" endtime="20201030 10:58:06.201"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.152" endtime="20201030 10:58:06.202"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:06.210" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:06.208" endtime="20201030 10:58:06.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.203" endtime="20201030 10:58:06.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.151" endtime="20201030 10:58:06.212"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.151" endtime="20201030 10:58:06.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.214" endtime="20201030 10:58:06.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.149" endtime="20201030 10:58:06.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.148" endtime="20201030 10:58:06.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:03.124" endtime="20201030 10:58:06.220"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.243" endtime="20201030 10:58:06.464"></status>
</kw>
<msg timestamp="20201030 10:58:06.465" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.241" endtime="20201030 10:58:06.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.467" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.466" endtime="20201030 10:58:06.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.468" endtime="20201030 10:58:06.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.238" endtime="20201030 10:58:06.471"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.227" endtime="20201030 10:58:06.471"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.473" endtime="20201030 10:58:06.475"></status>
</kw>
<msg timestamp="20201030 10:58:06.475" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 10:58:06.472" endtime="20201030 10:58:06.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.480" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 10:58:06.479" endtime="20201030 10:58:06.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.482" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 10:58:06.481" endtime="20201030 10:58:06.482"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.477" endtime="20201030 10:58:06.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.487" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 10:58:06.486" endtime="20201030 10:58:06.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.489" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 10:58:06.488" endtime="20201030 10:58:06.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.483" endtime="20201030 10:58:06.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.497" endtime="20201030 10:58:06.797"></status>
</kw>
<msg timestamp="20201030 10:58:06.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.1114905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.111510597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:06.495" endtime="20201030 10:58:06.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.1114905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.111510597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:06.801" endtime="20201030 10:58:06.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.809" endtime="20201030 10:58:06.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.492" endtime="20201030 10:58:06.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.491" endtime="20201030 10:58:06.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:06.816" level="INFO">${RESULT} = [{'diff': 2.0097000000163234e-05}, {'diff': 2.0110999999989332e-05}, {'diff': 2.0152999999911714e-05}, {'diff': 2.0110999999989332e-05}, {'diff': 2.0110999999989332e-05}, {'diff': 2.0110999999989332e-...</msg>
<status status="PASS" starttime="20201030 10:58:06.812" endtime="20201030 10:58:06.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 10:58:06.821" level="INFO">${OVERHEAD} = {'diff': [2.0097000000163234e-05, 2.0110999999989332e-05, 2.0152999999911714e-05, 2.0110999999989332e-05, 2.0110999999989332e-05, 2.0110999999989332e-05, 2.012500000025952e-05, 2.0110999999989332e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:06.817" endtime="20201030 10:58:06.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.825" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 10:58:06.824" endtime="20201030 10:58:06.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:06.828" level="INFO">VALUE: [2.0097000000163234e-05, 2.0110999999989332e-05, 2.0152999999911714e-05, 2.0110999999989332e-05, 2.0110999999989332e-05, 2.0110999999989332e-05, 2.012500000025952e-05, 2.0110999999989332e-05, 2.0096999999719145e-05, 2.0110999999989332e-05, 2.0152000000273063e-05, 2.0097000000163234e-05, 2.0110999999989332e-05, 2.0110999999989332e-05, 2.0139000000085616e-05, 2.0096999999719145e-05, 2.012499999981543e-05, 2.0110999999989332e-05, 2.0097000000163234e-05, 2.0083999999975788e-05, 2.0110999999989332e-05, 2.0110999999989332e-05, 2.0110999999989332e-05, 2.0110999999989332e-05, 2.0110999999989332e-05, 2.0139000000085616e-05, 2.0110999999989332e-05, 2.012499999981543e-05, 2.016699999973781e-05, 2.0110999999989332e-05, 2.0097999999801885e-05, 2.0097000000163234e-05, 2.0097000000163234e-05, 2.0110999999989332e-05, 2.0097000000163234e-05, 2.0111999999627983e-05, 2.0110999999989332e-05, 2.0139000000085616e-05, 2.0041999999609317e-05, 2.0097000000163234e-05, 2.0097000000163234e-05, 2.0096999999719145e-05, 2.0110999999989332e-05, 2.0097000000163234e-05, 2.0110999999989332e-05, 2.0110999999989332e-05, 2.0110999999989332e-05, 2.012499999981543e-05, 2.0110999999989332e-05, 2.006900000006695e-05]</msg>
<status status="PASS" starttime="20201030 10:58:06.827" endtime="20201030 10:58:06.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.822" endtime="20201030 10:58:06.829"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.222" endtime="20201030 10:58:06.829"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:03.120" endtime="20201030 10:58:06.830" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:06.839" endtime="20201030 10:58:06.858"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.837" endtime="20201030 10:58:06.859"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:06.872" endtime="20201030 10:58:09.897"></status>
</kw>
<msg timestamp="20201030 10:58:09.898" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:06.871" endtime="20201030 10:58:09.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.904" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:09.900" endtime="20201030 10:58:09.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.912" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:09.906" endtime="20201030 10:58:09.913"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:06.868" endtime="20201030 10:58:09.914"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:06.865" endtime="20201030 10:58:09.915"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.864" endtime="20201030 10:58:09.916"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:09.924" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:09.922" endtime="20201030 10:58:09.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.918" endtime="20201030 10:58:09.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.863" endtime="20201030 10:58:09.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.863" endtime="20201030 10:58:09.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:09.928" endtime="20201030 10:58:09.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.861" endtime="20201030 10:58:09.932"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.860" endtime="20201030 10:58:09.933"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:06.835" endtime="20201030 10:58:09.934"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:58:09.944" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:58:09.961" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:58:11.055" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:58:09.941" endtime="20201030 10:58:11.056"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.058" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:58:11.057" endtime="20201030 10:58:11.059"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:09.937" endtime="20201030 10:58:11.059"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.063" endtime="20201030 10:58:11.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.061" endtime="20201030 10:58:11.083"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.092" endtime="20201030 10:58:11.101"></status>
</kw>
<msg timestamp="20201030 10:58:11.102" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.091" endtime="20201030 10:58:11.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.104" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.103" endtime="20201030 10:58:11.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.106" endtime="20201030 10:58:11.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.088" endtime="20201030 10:58:11.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.086" endtime="20201030 10:58:11.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.115" endtime="20201030 10:58:11.402"></status>
</kw>
<msg timestamp="20201030 10:58:11.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017536153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017540986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.114" endtime="20201030 10:58:11.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017536153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017540986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.407" endtime="20201030 10:58:11.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.416" endtime="20201030 10:58:11.419"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.111" endtime="20201030 10:58:11.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.109" endtime="20201030 10:58:11.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:11.430" level="INFO">${PHILIP_RES} = [{'diff': 4.833000000002696e-06}, {'diff': 4.8199999999991305e-06}, {'diff': 4.791999999999991e-06}, {'diff': 4.7499999999978115e-06}, {'diff': 4.805999999999561e-06}, {'diff': 4.805999999999561e-06},...</msg>
<status status="PASS" starttime="20201030 10:58:11.423" endtime="20201030 10:58:11.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:11.442" level="INFO">${RESULT} = {'diff': [4.833000000002696e-06, 4.8199999999991305e-06, 4.791999999999991e-06, 4.7499999999978115e-06, 4.805999999999561e-06, 4.805999999999561e-06, 4.805999999999561e-06, 4.805999999999561e-06, 4.80...</msg>
<status status="PASS" starttime="20201030 10:58:11.432" endtime="20201030 10:58:11.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.452" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:11.449" endtime="20201030 10:58:11.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.457" level="INFO">VALUE: [4.833000000002696e-06, 4.8199999999991305e-06, 4.791999999999991e-06, 4.7499999999978115e-06, 4.805999999999561e-06, 4.805999999999561e-06, 4.805999999999561e-06, 4.805999999999561e-06, 4.805999999999561e-06, 4.721999999998672e-06, 4.708000000002571e-06, 4.791999999999991e-06, 4.791999999999991e-06, 4.791999999999991e-06, 4.791999999999991e-06, 4.791999999999991e-06, 4.764000000000851e-06, 4.791999999999991e-06, 4.791999999999991e-06, 4.7499999999978115e-06, 4.791999999999991e-06, 4.8199999999991305e-06, 4.84800000000174e-06, 4.83400000000217e-06, 4.791999999999991e-06, 4.791999999999991e-06, 4.805999999999561e-06, 4.805999999999561e-06, 4.805999999999561e-06, 4.80600000000303e-06, 4.707999999999102e-06, 4.778000000000421e-06, 4.791999999999991e-06, 4.7639999999973814e-06, 4.791999999999991e-06, 4.778000000000421e-06, 4.764000000000851e-06, 4.791999999999991e-06, 4.7499999999978115e-06, 4.791999999999991e-06, 4.805999999999561e-06, 4.750000000001281e-06, 4.791999999999991e-06, 4.8200000000026e-06, 4.778000000000421e-06, 4.791999999999991e-06, 4.791999999999991e-06, 4.791999999999991e-06, 4.80600000000303e-06, 4.791999999999991e-06]</msg>
<status status="PASS" starttime="20201030 10:58:11.454" endtime="20201030 10:58:11.458"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.444" endtime="20201030 10:58:11.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.084" endtime="20201030 10:58:11.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.061" endtime="20201030 10:58:11.461"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.466" endtime="20201030 10:58:11.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.463" endtime="20201030 10:58:11.490"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.508" endtime="20201030 10:58:11.519"></status>
</kw>
<msg timestamp="20201030 10:58:11.519" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.504" endtime="20201030 10:58:11.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.522" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.520" endtime="20201030 10:58:11.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.523" endtime="20201030 10:58:11.525"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.498" endtime="20201030 10:58:11.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.494" endtime="20201030 10:58:11.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.533" endtime="20201030 10:58:11.820"></status>
</kw>
<msg timestamp="20201030 10:58:11.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031040861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031049986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.531" endtime="20201030 10:58:11.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031040861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031049986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.824" endtime="20201030 10:58:11.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.833" endtime="20201030 10:58:11.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.528" endtime="20201030 10:58:11.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.527" endtime="20201030 10:58:11.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:11.839" level="INFO">${PHILIP_RES} = [{'diff': 9.125000000002187e-06}, {'diff': 9.055000000000868e-06}, {'diff': 9.083999999999481e-06}, {'diff': 9.111999999998621e-06}, {'diff': 9.083000000000008e-06}, {'diff': 9.069000000000438e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:11.836" endtime="20201030 10:58:11.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:11.844" level="INFO">${RESULT} = {'diff': [9.125000000002187e-06, 9.055000000000868e-06, 9.083999999999481e-06, 9.111999999998621e-06, 9.083000000000008e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.0690...</msg>
<status status="PASS" starttime="20201030 10:58:11.840" endtime="20201030 10:58:11.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.848" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:11.847" endtime="20201030 10:58:11.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.851" level="INFO">VALUE: [9.125000000002187e-06, 9.055000000000868e-06, 9.083999999999481e-06, 9.111999999998621e-06, 9.083000000000008e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.083000000000008e-06, 9.055000000000868e-06, 9.069999999999911e-06, 9.083999999999481e-06, 9.069000000000438e-06, 9.026999999998259e-06, 9.069999999999911e-06, 9.069999999999911e-06, 9.056000000000342e-06, 9.069000000003907e-06, 9.069000000000438e-06, 9.056000000000342e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.153000000004796e-06, 9.083999999999481e-06, 9.083999999999481e-06, 9.069000000000438e-06, 9.083000000000008e-06, 9.042000000000772e-06, 9.069999999999911e-06, 9.069000000000438e-06, 9.055000000000868e-06, 9.083000000000008e-06, 9.083999999999481e-06, 9.069999999999911e-06, 9.055000000000868e-06, 9.083000000000008e-06, 9.042000000000772e-06, 9.069999999999911e-06, 9.056000000000342e-06, 9.069000000000438e-06, 9.083000000000008e-06, 9.096999999999578e-06, 9.097999999999051e-06, 9.069000000000438e-06, 9.110999999999148e-06, 9.083999999999481e-06, 9.083999999999481e-06, 9.042000000000772e-06, 9.069000000000438e-06]</msg>
<status status="PASS" starttime="20201030 10:58:11.849" endtime="20201030 10:58:11.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.844" endtime="20201030 10:58:11.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.491" endtime="20201030 10:58:11.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.461" endtime="20201030 10:58:11.852"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:11.855" endtime="20201030 10:58:11.874"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.853" endtime="20201030 10:58:11.875"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.884" endtime="20201030 10:58:11.893"></status>
</kw>
<msg timestamp="20201030 10:58:11.893" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.882" endtime="20201030 10:58:11.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:11.896" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:11.895" endtime="20201030 10:58:11.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.897" endtime="20201030 10:58:11.899"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.879" endtime="20201030 10:58:11.899"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.877" endtime="20201030 10:58:11.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:11.907" endtime="20201030 10:58:12.192"></status>
</kw>
<msg timestamp="20201030 10:58:12.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018149069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018163167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:11.905" endtime="20201030 10:58:12.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018149069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018163167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.196" endtime="20201030 10:58:12.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.205" endtime="20201030 10:58:12.207"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.902" endtime="20201030 10:58:12.207"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.901" endtime="20201030 10:58:12.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:12.212" level="INFO">${PHILIP_RES} = [{'diff': 1.4098000000000582e-05}, {'diff': 1.4069000000001969e-05}, {'diff': 1.405499999999893e-05}, {'diff': 1.4041999999998833e-05}, {'diff': 1.405499999999893e-05}, {'diff': 1.405499999999893e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:12.208" endtime="20201030 10:58:12.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.216" level="INFO">${RESULT} = {'diff': [1.4098000000000582e-05, 1.4069000000001969e-05, 1.405499999999893e-05, 1.4041999999998833e-05, 1.405499999999893e-05, 1.405499999999893e-05, 1.4069000000001969e-05, 1.4070000000001442e-05, 1...</msg>
<status status="PASS" starttime="20201030 10:58:12.213" endtime="20201030 10:58:12.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.220" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:12.219" endtime="20201030 10:58:12.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.224" level="INFO">VALUE: [1.4098000000000582e-05, 1.4069000000001969e-05, 1.405499999999893e-05, 1.4041999999998833e-05, 1.405499999999893e-05, 1.405499999999893e-05, 1.4069000000001969e-05, 1.4070000000001442e-05, 1.4055999999998403e-05, 1.402699999999979e-05, 1.405499999999893e-05, 1.4014000000003163e-05, 1.4042000000002303e-05, 1.4055000000002399e-05, 1.40689999999985e-05, 1.4041999999998833e-05, 1.4069999999997973e-05, 1.40689999999985e-05, 1.4056000000001873e-05, 1.4056000000001873e-05, 1.4070000000001442e-05, 1.40689999999985e-05, 1.4056000000001873e-05, 1.4055999999998403e-05, 1.4070000000001442e-05, 1.4055000000002399e-05, 1.405499999999893e-05, 1.4055999999998403e-05, 1.4069999999997973e-05, 1.405499999999893e-05, 1.3986000000000554e-05, 1.4056000000001873e-05, 1.4041999999998833e-05, 1.40689999999985e-05, 1.4041999999998833e-05, 1.4013999999999693e-05, 1.4056000000001873e-05, 1.4069000000001969e-05, 1.4056000000001873e-05, 1.4027999999999263e-05, 1.4055999999998403e-05, 1.405499999999893e-05, 1.4070000000001442e-05, 1.4027999999999263e-05, 1.4056000000001873e-05, 1.408299999999807e-05, 1.4112000000000152e-05, 1.4055999999998403e-05, 1.4069000000001969e-05, 1.4055000000002399e-05]</msg>
<status status="PASS" starttime="20201030 10:58:12.223" endtime="20201030 10:58:12.224"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.217" endtime="20201030 10:58:12.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.875" endtime="20201030 10:58:12.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.853" endtime="20201030 10:58:12.225"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.228" endtime="20201030 10:58:12.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.227" endtime="20201030 10:58:12.248"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.257" endtime="20201030 10:58:12.265"></status>
</kw>
<msg timestamp="20201030 10:58:12.266" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.255" endtime="20201030 10:58:12.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.268" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.267" endtime="20201030 10:58:12.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.270" endtime="20201030 10:58:12.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.252" endtime="20201030 10:58:12.272"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.250" endtime="20201030 10:58:12.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.279" endtime="20201030 10:58:12.565"></status>
</kw>
<msg timestamp="20201030 10:58:12.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017539875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017559694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.277" endtime="20201030 10:58:12.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017539875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017559694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.569" endtime="20201030 10:58:12.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.578" endtime="20201030 10:58:12.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.275" endtime="20201030 10:58:12.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.273" endtime="20201030 10:58:12.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:12.584" level="INFO">${PHILIP_RES} = [{'diff': 1.981900000000078e-05}, {'diff': 1.9763999999998505e-05}, {'diff': 1.9750000000002405e-05}, {'diff': 1.9708000000000225e-05}, {'diff': 1.9763999999998505e-05}, {'diff': 1.9764000000001974e-0...</msg>
<status status="PASS" starttime="20201030 10:58:12.581" endtime="20201030 10:58:12.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.590" level="INFO">${RESULT} = {'diff': [1.981900000000078e-05, 1.9763999999998505e-05, 1.9750000000002405e-05, 1.9708000000000225e-05, 1.9763999999998505e-05, 1.9764000000001974e-05, 1.9763999999998505e-05, 1.9833999999999824e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:12.585" endtime="20201030 10:58:12.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.594" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:12.593" endtime="20201030 10:58:12.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.597" level="INFO">VALUE: [1.981900000000078e-05, 1.9763999999998505e-05, 1.9750000000002405e-05, 1.9708000000000225e-05, 1.9763999999998505e-05, 1.9764000000001974e-05, 1.9763999999998505e-05, 1.9833999999999824e-05, 1.9777999999998075e-05, 1.97769999999986e-05, 1.9750000000002405e-05, 1.983300000000035e-05, 1.9764000000001974e-05, 1.981899999999731e-05, 1.9763999999998505e-05, 1.9749999999998935e-05, 1.9763999999998505e-05, 1.9764000000001974e-05, 1.976299999999903e-05, 1.9750000000002405e-05, 1.9763999999998505e-05, 1.9763999999998505e-05, 1.9764000000001974e-05, 1.9749999999998935e-05, 1.9764000000001974e-05, 1.9764000000001974e-05, 1.981900000000078e-05, 1.977700000000207e-05, 1.9763999999998505e-05, 1.97630000000025e-05, 1.9777999999998075e-05, 1.9764000000001974e-05, 1.9764000000001974e-05, 1.9763999999998505e-05, 1.9820000000000254e-05, 1.9763999999998505e-05, 1.9763999999998505e-05, 1.9764000000001974e-05, 1.976299999999903e-05, 1.9721999999999795e-05, 1.976299999999903e-05, 1.9763999999998505e-05, 1.9778000000001544e-05, 1.9763999999998505e-05, 1.9778000000001544e-05, 1.9763999999998505e-05, 1.9750000000002405e-05, 1.9763999999998505e-05, 1.9749999999998935e-05, 1.97630000000025e-05]</msg>
<status status="PASS" starttime="20201030 10:58:12.595" endtime="20201030 10:58:12.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.591" endtime="20201030 10:58:12.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.249" endtime="20201030 10:58:12.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.226" endtime="20201030 10:58:12.598"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.601" endtime="20201030 10:58:12.620"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.599" endtime="20201030 10:58:12.621"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.630" endtime="20201030 10:58:12.641"></status>
</kw>
<msg timestamp="20201030 10:58:12.642" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.628" endtime="20201030 10:58:12.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.644" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:12.643" endtime="20201030 10:58:12.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.646" endtime="20201030 10:58:12.647"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.625" endtime="20201030 10:58:12.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.623" endtime="20201030 10:58:12.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.655" endtime="20201030 10:58:12.942"></status>
</kw>
<msg timestamp="20201030 10:58:12.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018345139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018371375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.653" endtime="20201030 10:58:12.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018345139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018371375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:12.946" endtime="20201030 10:58:12.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:12.955" endtime="20201030 10:58:12.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.651" endtime="20201030 10:58:12.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.649" endtime="20201030 10:58:12.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:12.963" level="INFO">${PHILIP_RES} = [{'diff': 2.6235999999998927e-05}, {'diff': 2.619500000000316e-05}, {'diff': 2.6166000000001077e-05}, {'diff': 2.616700000000055e-05}, {'diff': 2.618100000000012e-05}, {'diff': 2.6221999999999357e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:12.959" endtime="20201030 10:58:12.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:12.967" level="INFO">${RESULT} = {'diff': [2.6235999999998927e-05, 2.619500000000316e-05, 2.6166000000001077e-05, 2.616700000000055e-05, 2.618100000000012e-05, 2.6221999999999357e-05, 2.618100000000012e-05, 2.6194000000000217e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:58:12.964" endtime="20201030 10:58:12.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.971" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:12.970" endtime="20201030 10:58:12.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:12.974" level="INFO">VALUE: [2.6235999999998927e-05, 2.619500000000316e-05, 2.6166000000001077e-05, 2.616700000000055e-05, 2.618100000000012e-05, 2.6221999999999357e-05, 2.618100000000012e-05, 2.6194000000000217e-05, 2.613899999999794e-05, 2.618100000000012e-05, 2.6221999999999357e-05, 2.6180000000000647e-05, 2.619499999999969e-05, 2.6180000000000647e-05, 2.616700000000055e-05, 2.618100000000012e-05, 2.6235999999998927e-05, 2.616700000000055e-05, 2.616700000000055e-05, 2.6180000000000647e-05, 2.618100000000012e-05, 2.6194000000000217e-05, 2.616700000000055e-05, 2.618100000000012e-05, 2.6180000000000647e-05, 2.618100000000012e-05, 2.619499999999969e-05, 2.6194000000000217e-05, 2.618100000000012e-05, 2.618100000000012e-05, 2.6264000000001536e-05, 2.618100000000012e-05, 2.6180000000000647e-05, 2.6180000000000647e-05, 2.616700000000055e-05, 2.6180000000000647e-05, 2.6221999999999357e-05, 2.618100000000012e-05, 2.6193999999996748e-05, 2.613899999999794e-05, 2.618100000000012e-05, 2.6221999999999357e-05, 2.618100000000012e-05, 2.6180000000000647e-05, 2.6179999999997178e-05, 2.616700000000055e-05, 2.6166000000001077e-05, 2.6235999999998927e-05, 2.618100000000012e-05, 2.6166000000001077e-05]</msg>
<status status="PASS" starttime="20201030 10:58:12.972" endtime="20201030 10:58:12.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.968" endtime="20201030 10:58:12.975"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.621" endtime="20201030 10:58:12.975"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.599" endtime="20201030 10:58:12.975"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:12.978" endtime="20201030 10:58:12.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.976" endtime="20201030 10:58:12.998"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.007" endtime="20201030 10:58:13.018"></status>
</kw>
<msg timestamp="20201030 10:58:13.019" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.005" endtime="20201030 10:58:13.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.021" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.020" endtime="20201030 10:58:13.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.022" endtime="20201030 10:58:13.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.002" endtime="20201030 10:58:13.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.000" endtime="20201030 10:58:13.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.033" endtime="20201030 10:58:13.319"></status>
</kw>
<msg timestamp="20201030 10:58:13.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01769, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017723347, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 10:58:13.031" endtime="20201030 10:58:13.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01769, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017723347, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 10:58:13.325" endtime="20201030 10:58:13.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.334" endtime="20201030 10:58:13.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.028" endtime="20201030 10:58:13.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.027" endtime="20201030 10:58:13.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:13.341" level="INFO">${PHILIP_RES} = [{'diff': 3.3346999999999544e-05}, {'diff': 3.3319000000000404e-05}, {'diff': 3.3319000000000404e-05}, {'diff': 3.3319000000000404e-05}, {'diff': 3.3319000000000404e-05}, {'diff': 3.3319000000000404e-...</msg>
<status status="PASS" starttime="20201030 10:58:13.337" endtime="20201030 10:58:13.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:13.345" level="INFO">${RESULT} = {'diff': [3.3346999999999544e-05, 3.3319000000000404e-05, 3.3319000000000404e-05, 3.3319000000000404e-05, 3.3319000000000404e-05, 3.3319000000000404e-05, 3.3304999999997364e-05, 3.3360999999999114e-05...</msg>
<status status="PASS" starttime="20201030 10:58:13.342" endtime="20201030 10:58:13.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.350" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:13.349" endtime="20201030 10:58:13.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.352" level="INFO">VALUE: [3.3346999999999544e-05, 3.3319000000000404e-05, 3.3319000000000404e-05, 3.3319000000000404e-05, 3.3319000000000404e-05, 3.3319000000000404e-05, 3.3304999999997364e-05, 3.3360999999999114e-05, 3.337500000000215e-05, 3.3360999999999114e-05, 3.337500000000215e-05, 3.3360999999999114e-05, 3.3305000000000834e-05, 3.3290999999997795e-05, 3.3305000000000834e-05, 3.3276999999998225e-05, 3.3291000000001264e-05, 3.3319000000000404e-05, 3.3318999999996934e-05, 3.3346999999999544e-05, 3.334700000000301e-05, 3.3332999999999974e-05, 3.3319000000000404e-05, 3.330600000000031e-05, 3.330600000000031e-05, 3.330600000000031e-05, 3.331999999999988e-05, 3.331999999999988e-05, 3.3332999999999974e-05, 3.3276999999998225e-05, 3.3319000000000404e-05, 3.330600000000031e-05, 3.3332999999999974e-05, 3.330600000000031e-05, 3.3332999999999974e-05, 3.331999999999988e-05, 3.331999999999988e-05, 3.333399999999945e-05, 3.333399999999945e-05, 3.336100000000258e-05, 3.327800000000117e-05, 3.330600000000031e-05, 3.329200000000074e-05, 3.331999999999988e-05, 3.329199999999727e-05, 3.326399999999813e-05, 3.330600000000031e-05, 3.331999999999988e-05, 3.331999999999988e-05, 3.333399999999945e-05]</msg>
<status status="PASS" starttime="20201030 10:58:13.351" endtime="20201030 10:58:13.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.346" endtime="20201030 10:58:13.354"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.998" endtime="20201030 10:58:13.354"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:12.976" endtime="20201030 10:58:13.355"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:13.357" endtime="20201030 10:58:13.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.356" endtime="20201030 10:58:13.377"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.386" endtime="20201030 10:58:13.395"></status>
</kw>
<msg timestamp="20201030 10:58:13.396" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.385" endtime="20201030 10:58:13.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.399" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.397" endtime="20201030 10:58:13.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.400" endtime="20201030 10:58:13.401"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.382" endtime="20201030 10:58:13.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.380" endtime="20201030 10:58:13.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.409" endtime="20201030 10:58:13.696"></status>
</kw>
<msg timestamp="20201030 10:58:13.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017599528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017640736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.408" endtime="20201030 10:58:13.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017599528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017640736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.700" endtime="20201030 10:58:13.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.709" endtime="20201030 10:58:13.710"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.405" endtime="20201030 10:58:13.711"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.403" endtime="20201030 10:58:13.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:13.715" level="INFO">${PHILIP_RES} = [{'diff': 4.120800000000091e-05}, {'diff': 4.1152999999998635e-05}, {'diff': 4.1138999999999065e-05}, {'diff': 4.1152999999998635e-05}, {'diff': 4.1153000000002105e-05}, {'diff': 4.1124999999999495e-0...</msg>
<status status="PASS" starttime="20201030 10:58:13.712" endtime="20201030 10:58:13.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:13.721" level="INFO">${RESULT} = {'diff': [4.120800000000091e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.1153000000002105e-05, 4.1124999999999495e-05, 4.1138999999999065e-05, 4.1124999999999495e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:13.717" endtime="20201030 10:58:13.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.725" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:13.724" endtime="20201030 10:58:13.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.728" level="INFO">VALUE: [4.120800000000091e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.1153000000002105e-05, 4.1124999999999495e-05, 4.1138999999999065e-05, 4.1124999999999495e-05, 4.116599999999873e-05, 4.1138999999999065e-05, 4.1097000000000355e-05, 4.115199999999916e-05, 4.1166999999998205e-05, 4.1138999999999065e-05, 4.113800000000306e-05, 4.1139000000002535e-05, 4.1124999999999495e-05, 4.113799999999959e-05, 4.116599999999873e-05, 4.1166999999998205e-05, 4.113799999999959e-05, 4.11660000000022e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.116599999999873e-05, 4.1181000000001244e-05, 4.119400000000134e-05, 4.1152999999998635e-05, 4.1180999999997775e-05, 4.1125000000002965e-05, 4.1167000000001674e-05, 4.1167000000001674e-05, 4.1166999999998205e-05, 4.116599999999873e-05, 4.1181000000001244e-05, 4.1167000000001674e-05, 4.1153000000002105e-05, 4.1180999999997775e-05, 4.1166999999998205e-05, 4.115199999999916e-05, 4.123600000000005e-05, 4.1153000000002105e-05, 4.123600000000005e-05, 4.1152999999998635e-05, 4.1152999999998635e-05, 4.115199999999916e-05, 4.1167000000001674e-05, 4.1166999999998205e-05, 4.115199999999916e-05, 4.1166999999998205e-05]</msg>
<status status="PASS" starttime="20201030 10:58:13.726" endtime="20201030 10:58:13.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.722" endtime="20201030 10:58:13.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.378" endtime="20201030 10:58:13.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.355" endtime="20201030 10:58:13.729"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:13.732" endtime="20201030 10:58:13.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.730" endtime="20201030 10:58:13.753"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.762" endtime="20201030 10:58:13.772"></status>
</kw>
<msg timestamp="20201030 10:58:13.773" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.760" endtime="20201030 10:58:13.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:13.775" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:13.774" endtime="20201030 10:58:13.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.777" endtime="20201030 10:58:13.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.757" endtime="20201030 10:58:13.779"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.755" endtime="20201030 10:58:13.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:13.786" endtime="20201030 10:58:14.075"></status>
</kw>
<msg timestamp="20201030 10:58:14.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018443333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018493111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:13.784" endtime="20201030 10:58:14.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018443333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018493111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.079" endtime="20201030 10:58:14.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.087" endtime="20201030 10:58:14.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.782" endtime="20201030 10:58:14.090"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.780" endtime="20201030 10:58:14.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:14.094" level="INFO">${PHILIP_RES} = [{'diff': 4.977800000000032e-05}, {'diff': 4.9707999999999e-05}, {'diff': 4.973600000000161e-05}, {'diff': 4.976400000000075e-05}, {'diff': 4.972200000000204e-05}, {'diff': 4.9707999999999e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 10:58:14.091" endtime="20201030 10:58:14.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:14.098" level="INFO">${RESULT} = {'diff': [4.977800000000032e-05, 4.9707999999999e-05, 4.973600000000161e-05, 4.976400000000075e-05, 4.972200000000204e-05, 4.9707999999999e-05, 4.970800000000247e-05, 4.970899999999848e-05, 4.97080000...</msg>
<status status="PASS" starttime="20201030 10:58:14.095" endtime="20201030 10:58:14.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.103" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:14.102" endtime="20201030 10:58:14.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.105" level="INFO">VALUE: [4.977800000000032e-05, 4.9707999999999e-05, 4.973600000000161e-05, 4.976400000000075e-05, 4.972200000000204e-05, 4.9707999999999e-05, 4.970800000000247e-05, 4.970899999999848e-05, 4.970800000000247e-05, 4.9707999999999e-05, 4.973600000000161e-05, 4.972199999999857e-05, 4.9737000000001086e-05, 4.972199999999857e-05, 4.972200000000204e-05, 4.9722999999998047e-05, 4.972200000000204e-05, 4.979099999999695e-05, 4.9707999999999e-05, 4.973599999999814e-05, 4.9723000000001516e-05, 4.973600000000161e-05, 4.973600000000161e-05, 4.976400000000075e-05, 4.96530000000002e-05, 4.9723000000001516e-05, 4.9707999999999e-05, 4.973600000000161e-05, 4.973599999999814e-05, 4.975000000000118e-05, 4.9722999999998047e-05, 4.973600000000161e-05, 4.969399999999943e-05, 4.973600000000161e-05, 4.972199999999857e-05, 4.972200000000204e-05, 4.9707999999999e-05, 4.968099999999934e-05, 4.9723000000001516e-05, 4.973600000000161e-05, 4.973600000000161e-05, 4.9707999999999e-05, 4.972200000000204e-05, 4.9737000000001086e-05, 4.972200000000204e-05, 4.972199999999857e-05, 4.9723000000001516e-05, 4.972199999999857e-05, 4.975000000000118e-05, 4.973599999999814e-05]</msg>
<status status="PASS" starttime="20201030 10:58:14.104" endtime="20201030 10:58:14.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.099" endtime="20201030 10:58:14.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.753" endtime="20201030 10:58:14.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:13.730" endtime="20201030 10:58:14.107"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.110" endtime="20201030 10:58:14.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.108" endtime="20201030 10:58:14.130"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.138" endtime="20201030 10:58:14.149"></status>
</kw>
<msg timestamp="20201030 10:58:14.150" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.137" endtime="20201030 10:58:14.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.152" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.151" endtime="20201030 10:58:14.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.153" endtime="20201030 10:58:14.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.134" endtime="20201030 10:58:14.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.132" endtime="20201030 10:58:14.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.164" endtime="20201030 10:58:14.449"></status>
</kw>
<msg timestamp="20201030 10:58:14.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017243, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017302028, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:14.162" endtime="20201030 10:58:14.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017243, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017302028, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:14.453" endtime="20201030 10:58:14.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.462" endtime="20201030 10:58:14.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.159" endtime="20201030 10:58:14.464"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.158" endtime="20201030 10:58:14.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:14.469" level="INFO">${PHILIP_RES} = [{'diff': 5.9027999999999164e-05}, {'diff': 5.8986000000000455e-05}, {'diff': 5.8986000000000455e-05}, {'diff': 5.9041999999998734e-05}, {'diff': 5.9000000000000025e-05}, {'diff': 5.8986000000000455e-...</msg>
<status status="PASS" starttime="20201030 10:58:14.465" endtime="20201030 10:58:14.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:14.473" level="INFO">${RESULT} = {'diff': [5.9027999999999164e-05, 5.8986000000000455e-05, 5.8986000000000455e-05, 5.9041999999998734e-05, 5.9000000000000025e-05, 5.8986000000000455e-05, 5.894499999999775e-05, 5.9000000000000025e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:14.470" endtime="20201030 10:58:14.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.477" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:14.476" endtime="20201030 10:58:14.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.480" level="INFO">VALUE: [5.9027999999999164e-05, 5.8986000000000455e-05, 5.8986000000000455e-05, 5.9041999999998734e-05, 5.9000000000000025e-05, 5.8986000000000455e-05, 5.894499999999775e-05, 5.9000000000000025e-05, 5.9000000000000025e-05, 5.8986000000000455e-05, 5.9000000000000025e-05, 5.9000000000000025e-05, 5.9000000000000025e-05, 5.9000000000000025e-05, 5.9000000000000025e-05, 5.9027999999999164e-05, 5.9000000000000025e-05, 5.8986000000000455e-05, 5.8986000000000455e-05, 5.8986000000000455e-05, 5.901300000000012e-05, 5.8986000000000455e-05, 5.8986000000000455e-05, 5.9000000000000025e-05, 5.9027999999999164e-05, 5.9028000000002634e-05, 5.897300000000036e-05, 5.9041999999998734e-05, 5.8986000000000455e-05, 5.9014000000003064e-05, 5.9027999999999164e-05, 5.8986000000000455e-05, 5.898699999999993e-05, 5.898699999999993e-05, 5.9041999999998734e-05, 5.8986000000000455e-05, 5.9013999999999595e-05, 5.9000000000000025e-05, 5.905499999999883e-05, 5.898699999999993e-05, 5.9000000000000025e-05, 5.9000000000000025e-05, 5.9000000000000025e-05, 5.9013999999999595e-05, 5.9000000000000025e-05, 5.897300000000036e-05, 5.9041999999998734e-05, 5.8986000000000455e-05, 5.9000000000000025e-05, 5.9013999999999595e-05]</msg>
<status status="PASS" starttime="20201030 10:58:14.479" endtime="20201030 10:58:14.481"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.474" endtime="20201030 10:58:14.482"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.130" endtime="20201030 10:58:14.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.108" endtime="20201030 10:58:14.483"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.485" endtime="20201030 10:58:14.505"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.484" endtime="20201030 10:58:14.505"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.514" endtime="20201030 10:58:14.526"></status>
</kw>
<msg timestamp="20201030 10:58:14.527" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.512" endtime="20201030 10:58:14.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.529" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.528" endtime="20201030 10:58:14.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.530" endtime="20201030 10:58:14.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.509" endtime="20201030 10:58:14.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.507" endtime="20201030 10:58:14.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.540" endtime="20201030 10:58:14.826"></status>
</kw>
<msg timestamp="20201030 10:58:14.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018076361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018145375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.538" endtime="20201030 10:58:14.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018076361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018145375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.830" endtime="20201030 10:58:14.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.838" endtime="20201030 10:58:14.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.535" endtime="20201030 10:58:14.841"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.533" endtime="20201030 10:58:14.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:14.845" level="INFO">${PHILIP_RES} = [{'diff': 6.901399999999919e-05}, {'diff': 6.897200000000048e-05}, {'diff': 6.898600000000005e-05}, {'diff': 6.899999999999962e-05}, {'diff': 6.897200000000048e-05}, {'diff': 6.899999999999962e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:14.842" endtime="20201030 10:58:14.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:14.850" level="INFO">${RESULT} = {'diff': [6.901399999999919e-05, 6.897200000000048e-05, 6.898600000000005e-05, 6.899999999999962e-05, 6.897200000000048e-05, 6.899999999999962e-05, 6.893100000000124e-05, 6.901400000000266e-05, 6.8986...</msg>
<status status="PASS" starttime="20201030 10:58:14.846" endtime="20201030 10:58:14.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.855" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:14.854" endtime="20201030 10:58:14.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.857" level="INFO">VALUE: [6.901399999999919e-05, 6.897200000000048e-05, 6.898600000000005e-05, 6.899999999999962e-05, 6.897200000000048e-05, 6.899999999999962e-05, 6.893100000000124e-05, 6.901400000000266e-05, 6.898600000000005e-05, 6.898600000000005e-05, 6.893099999999777e-05, 6.901399999999919e-05, 6.898600000000005e-05, 6.897299999999995e-05, 6.897200000000048e-05, 6.904199999999833e-05, 6.898699999999952e-05, 6.899999999999962e-05, 6.897200000000048e-05, 6.899999999999962e-05, 6.898600000000005e-05, 6.897200000000048e-05, 6.898600000000005e-05, 6.898600000000005e-05, 6.898699999999952e-05, 6.898600000000005e-05, 6.897200000000048e-05, 6.898699999999952e-05, 6.899999999999962e-05, 6.899999999999962e-05, 6.899999999999962e-05, 6.898600000000005e-05, 6.900000000000309e-05, 6.895900000000038e-05, 6.897200000000048e-05, 6.894400000000134e-05, 6.898600000000005e-05, 6.899999999999962e-05, 6.897200000000048e-05, 6.897199999999701e-05, 6.898600000000005e-05, 6.897299999999995e-05, 6.898600000000005e-05, 6.898600000000005e-05, 6.897299999999995e-05, 6.898600000000005e-05, 6.897200000000048e-05, 6.899999999999962e-05, 6.898600000000005e-05, 6.899999999999962e-05]</msg>
<status status="PASS" starttime="20201030 10:58:14.856" endtime="20201030 10:58:14.858"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.851" endtime="20201030 10:58:14.859"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.506" endtime="20201030 10:58:14.859"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.483" endtime="20201030 10:58:14.859"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:14.862" endtime="20201030 10:58:14.881"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.860" endtime="20201030 10:58:14.882"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.890" endtime="20201030 10:58:14.903"></status>
</kw>
<msg timestamp="20201030 10:58:14.904" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.888" endtime="20201030 10:58:14.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:14.906" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:14.905" endtime="20201030 10:58:14.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.907" endtime="20201030 10:58:14.909"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.886" endtime="20201030 10:58:14.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.884" endtime="20201030 10:58:14.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:14.917" endtime="20201030 10:58:15.202"></status>
</kw>
<msg timestamp="20201030 10:58:15.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017093528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017173278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:14.915" endtime="20201030 10:58:15.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017093528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017173278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.207" endtime="20201030 10:58:15.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.215" endtime="20201030 10:58:15.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.912" endtime="20201030 10:58:15.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.911" endtime="20201030 10:58:15.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:15.223" level="INFO">${PHILIP_RES} = [{'diff': 7.974999999999996e-05}, {'diff': 7.968099999999811e-05}, {'diff': 7.967999999999864e-05}, {'diff': 7.969400000000168e-05}, {'diff': 7.965299999999897e-05}, {'diff': 7.969500000000115e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:15.220" endtime="20201030 10:58:15.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:15.227" level="INFO">${RESULT} = {'diff': [7.974999999999996e-05, 7.968099999999811e-05, 7.967999999999864e-05, 7.969400000000168e-05, 7.965299999999897e-05, 7.969500000000115e-05, 7.974999999999996e-05, 7.969499999999768e-05, 7.9708...</msg>
<status status="PASS" starttime="20201030 10:58:15.224" endtime="20201030 10:58:15.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.232" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:15.231" endtime="20201030 10:58:15.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.234" level="INFO">VALUE: [7.974999999999996e-05, 7.968099999999811e-05, 7.967999999999864e-05, 7.969400000000168e-05, 7.965299999999897e-05, 7.969500000000115e-05, 7.974999999999996e-05, 7.969499999999768e-05, 7.970800000000125e-05, 7.967999999999864e-05, 7.966599999999907e-05, 7.969500000000115e-05, 7.968099999999811e-05, 7.969500000000115e-05, 7.968100000000158e-05, 7.967999999999864e-05, 7.968000000000211e-05, 7.969399999999821e-05, 7.969499999999768e-05, 7.97230000000003e-05, 7.96389999999994e-05, 7.968100000000158e-05, 7.969400000000168e-05, 7.963799999999993e-05, 7.969500000000115e-05, 7.966699999999854e-05, 7.968099999999811e-05, 7.968000000000211e-05, 7.965299999999897e-05, 7.970800000000125e-05, 7.973600000000039e-05, 7.970899999999725e-05, 7.968100000000158e-05, 7.97230000000003e-05, 7.969399999999821e-05, 7.968000000000211e-05, 7.967999999999864e-05, 7.968099999999811e-05, 7.968100000000158e-05, 7.97230000000003e-05, 7.967999999999864e-05, 7.970800000000125e-05, 7.969399999999821e-05, 7.968100000000158e-05, 7.969500000000115e-05, 7.968099999999811e-05, 7.969400000000168e-05, 7.969399999999821e-05, 7.969400000000168e-05, 7.970800000000125e-05]</msg>
<status status="PASS" starttime="20201030 10:58:15.233" endtime="20201030 10:58:15.235"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.228" endtime="20201030 10:58:15.236"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.882" endtime="20201030 10:58:15.236"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:14.860" endtime="20201030 10:58:15.236"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:15.239" endtime="20201030 10:58:15.258"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.237" endtime="20201030 10:58:15.259"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.267" endtime="20201030 10:58:15.279"></status>
</kw>
<msg timestamp="20201030 10:58:15.279" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.266" endtime="20201030 10:58:15.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.282" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.280" endtime="20201030 10:58:15.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.283" endtime="20201030 10:58:15.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.263" endtime="20201030 10:58:15.286"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.261" endtime="20201030 10:58:15.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.293" endtime="20201030 10:58:15.578"></status>
</kw>
<msg timestamp="20201030 10:58:15.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017194389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017285556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.292" endtime="20201030 10:58:15.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017194389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017285556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.583" endtime="20201030 10:58:15.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.591" endtime="20201030 10:58:15.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.289" endtime="20201030 10:58:15.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.287" endtime="20201030 10:58:15.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:15.598" level="INFO">${PHILIP_RES} = [{'diff': 9.116699999999964e-05}, {'diff': 9.109699999999832e-05}, {'diff': 9.111100000000136e-05}, {'diff': 9.109700000000179e-05}, {'diff': 9.111099999999789e-05}, {'diff': 9.111099999999789e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:15.595" endtime="20201030 10:58:15.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:15.602" level="INFO">${RESULT} = {'diff': [9.116699999999964e-05, 9.109699999999832e-05, 9.111100000000136e-05, 9.109700000000179e-05, 9.111099999999789e-05, 9.111099999999789e-05, 9.112500000000093e-05, 9.111099999999789e-05, 9.1112...</msg>
<status status="PASS" starttime="20201030 10:58:15.599" endtime="20201030 10:58:15.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.607" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:15.606" endtime="20201030 10:58:15.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.609" level="INFO">VALUE: [9.116699999999964e-05, 9.109699999999832e-05, 9.111100000000136e-05, 9.109700000000179e-05, 9.111099999999789e-05, 9.111099999999789e-05, 9.112500000000093e-05, 9.111099999999789e-05, 9.111200000000083e-05, 9.112500000000093e-05, 9.109699999999832e-05, 9.105499999999961e-05, 9.109800000000126e-05, 9.112500000000093e-05, 9.111099999999789e-05, 9.109700000000179e-05, 9.108400000000169e-05, 9.108399999999822e-05, 9.112500000000093e-05, 9.111100000000136e-05, 9.111099999999789e-05, 9.111200000000083e-05, 9.11390000000005e-05, 9.109699999999832e-05, 9.112500000000093e-05, 9.111100000000136e-05, 9.111100000000136e-05, 9.112500000000093e-05, 9.112500000000093e-05, 9.108399999999822e-05, 9.106999999999865e-05, 9.109700000000179e-05, 9.111099999999789e-05, 9.111199999999736e-05, 9.112500000000093e-05, 9.111100000000136e-05, 9.109699999999832e-05, 9.111100000000136e-05, 9.111100000000136e-05, 9.111099999999789e-05, 9.111100000000136e-05, 9.104100000000004e-05, 9.112500000000093e-05, 9.109699999999832e-05, 9.112500000000093e-05, 9.109699999999832e-05, 9.111099999999789e-05, 9.112500000000093e-05, 9.11390000000005e-05, 9.111099999999789e-05]</msg>
<status status="PASS" starttime="20201030 10:58:15.608" endtime="20201030 10:58:15.611"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.603" endtime="20201030 10:58:15.611"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.260" endtime="20201030 10:58:15.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.237" endtime="20201030 10:58:15.612"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:15.614" endtime="20201030 10:58:15.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.613" endtime="20201030 10:58:15.634"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.643" endtime="20201030 10:58:15.657"></status>
</kw>
<msg timestamp="20201030 10:58:15.657" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.641" endtime="20201030 10:58:15.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.660" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:15.659" endtime="20201030 10:58:15.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.661" endtime="20201030 10:58:15.663"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.639" endtime="20201030 10:58:15.663"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.637" endtime="20201030 10:58:15.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.671" endtime="20201030 10:58:15.957"></status>
</kw>
<msg timestamp="20201030 10:58:15.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017037764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017141056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.669" endtime="20201030 10:58:15.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017037764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017141056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:15.961" endtime="20201030 10:58:15.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:15.970" endtime="20201030 10:58:15.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.666" endtime="20201030 10:58:15.972"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.665" endtime="20201030 10:58:15.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:15.976" level="INFO">${PHILIP_RES} = [{'diff': 0.00010329199999999789}, {'diff': 0.00010322200000000004}, {'diff': 0.00010326400000000222}, {'diff': 0.0001032359999999996}, {'diff': 0.00010322200000000004}, {'diff': 0.0001032769999999988...</msg>
<status status="PASS" starttime="20201030 10:58:15.973" endtime="20201030 10:58:15.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:15.981" level="INFO">${RESULT} = {'diff': [0.00010329199999999789, 0.00010322200000000004, 0.00010326400000000222, 0.0001032359999999996, 0.00010322200000000004, 0.00010327699999999884, 0.0001032359999999996, 0.00010319500000000037, ...</msg>
<status status="PASS" starttime="20201030 10:58:15.977" endtime="20201030 10:58:15.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.986" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:15.985" endtime="20201030 10:58:15.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:15.989" level="INFO">VALUE: [0.00010329199999999789, 0.00010322200000000004, 0.00010326400000000222, 0.0001032359999999996, 0.00010322200000000004, 0.00010327699999999884, 0.0001032359999999996, 0.00010319500000000037, 0.00010323699999999908, 0.00010320800000000047, 0.00010323600000000308, 0.0001032359999999996, 0.00010323600000000308, 0.0001032359999999996, 0.00010317999999999786, 0.00010326399999999875, 0.00010322200000000004, 0.0001032359999999996, 0.00010327800000000179, 0.0001032359999999996, 0.00010322200000000004, 0.00010324999999999918, 0.00010325000000000265, 0.00010322299999999951, 0.00010325000000000265, 0.0001032359999999996, 0.0001032359999999996, 0.00010324999999999918, 0.00010323700000000255, 0.00010326399999999875, 0.00010322200000000004, 0.00010322200000000004, 0.00010323600000000308, 0.00010322299999999951, 0.00010325000000000265, 0.00010322200000000004, 0.00010323700000000255, 0.0001032359999999996, 0.00010319500000000037, 0.00010329200000000135, 0.00010324999999999918, 0.00010323699999999908, 0.0001032359999999996, 0.0001032359999999996, 0.00010320800000000047, 0.0001032359999999996, 0.00010322299999999951, 0.00010324999999999918, 0.00010324999999999918, 0.00010324999999999918]</msg>
<status status="PASS" starttime="20201030 10:58:15.987" endtime="20201030 10:58:15.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.982" endtime="20201030 10:58:15.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.635" endtime="20201030 10:58:15.990"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.612" endtime="20201030 10:58:15.990"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:15.993" endtime="20201030 10:58:16.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.991" endtime="20201030 10:58:16.013"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.021" endtime="20201030 10:58:16.037"></status>
</kw>
<msg timestamp="20201030 10:58:16.038" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.020" endtime="20201030 10:58:16.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.040" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.039" endtime="20201030 10:58:16.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.041" endtime="20201030 10:58:16.043"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.017" endtime="20201030 10:58:16.044"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.015" endtime="20201030 10:58:16.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.051" endtime="20201030 10:58:16.337"></status>
</kw>
<msg timestamp="20201030 10:58:16.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017173292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017289472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.049" endtime="20201030 10:58:16.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017173292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017289472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.341" endtime="20201030 10:58:16.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.349" endtime="20201030 10:58:16.352"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.047" endtime="20201030 10:58:16.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.045" endtime="20201030 10:58:16.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:16.357" level="INFO">${PHILIP_RES} = [{'diff': 0.00011618000000000045}, {'diff': 0.00011612500000000164}, {'diff': 0.00011608299999999946}, {'diff': 0.00011600000000000152}, {'diff': 0.0001160559999999998}, {'diff': 0.0001160829999999994...</msg>
<status status="PASS" starttime="20201030 10:58:16.354" endtime="20201030 10:58:16.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.361" level="INFO">${RESULT} = {'diff': [0.00011618000000000045, 0.00011612500000000164, 0.00011608299999999946, 0.00011600000000000152, 0.0001160559999999998, 0.00011608299999999946, 0.00011608300000000293, 0.00011609699999999903,...</msg>
<status status="PASS" starttime="20201030 10:58:16.358" endtime="20201030 10:58:16.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.366" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:16.365" endtime="20201030 10:58:16.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.368" level="INFO">VALUE: [0.00011618000000000045, 0.00011612500000000164, 0.00011608299999999946, 0.00011600000000000152, 0.0001160559999999998, 0.00011608299999999946, 0.00011608300000000293, 0.00011609699999999903, 0.00011612500000000164, 0.00011608299999999946, 0.00011609699999999903, 0.00011606999999999937, 0.00011608300000000293, 0.0001160689999999999, 0.00011608299999999946, 0.00011599999999999805, 0.0001160559999999998, 0.00011609699999999903, 0.00011612500000000164, 0.00011608400000000241, 0.00011606999999999937, 0.00011609699999999903, 0.00011609699999999903, 0.00011608399999999894, 0.0001160689999999999, 0.00011608299999999946, 0.00011608399999999894, 0.00011606999999999937, 0.0001161109999999986, 0.00011608299999999946, 0.00011608399999999894, 0.00011604200000000023, 0.0001160970000000025, 0.00011605500000000032, 0.00011609699999999903, 0.00011606999999999937, 0.00011601400000000109, 0.00011608299999999946, 0.00011608400000000241, 0.00011606999999999937, 0.00011605500000000032, 0.0001160689999999999, 0.00011606999999999937, 0.0001161109999999986, 0.0001160970000000025, 0.0001160970000000025, 0.00011609800000000198, 0.0001160689999999999, 0.00011605500000000032, 0.00011608399999999894]</msg>
<status status="PASS" starttime="20201030 10:58:16.367" endtime="20201030 10:58:16.369"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.362" endtime="20201030 10:58:16.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.014" endtime="20201030 10:58:16.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:15.991" endtime="20201030 10:58:16.370"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:16.373" endtime="20201030 10:58:16.392"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.371" endtime="20201030 10:58:16.393"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.401" endtime="20201030 10:58:16.418"></status>
</kw>
<msg timestamp="20201030 10:58:16.419" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.400" endtime="20201030 10:58:16.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.421" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.420" endtime="20201030 10:58:16.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.422" endtime="20201030 10:58:16.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.397" endtime="20201030 10:58:16.425"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.395" endtime="20201030 10:58:16.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.433" endtime="20201030 10:58:16.719"></status>
</kw>
<msg timestamp="20201030 10:58:16.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017088861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017218569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.431" endtime="20201030 10:58:16.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017088861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017218569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.723" endtime="20201030 10:58:16.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.731" endtime="20201030 10:58:16.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.428" endtime="20201030 10:58:16.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.427" endtime="20201030 10:58:16.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:16.738" level="INFO">${PHILIP_RES} = [{'diff': 0.0001297079999999992}, {'diff': 0.00012959700000000213}, {'diff': 0.00012969499999999912}, {'diff': 0.00012963900000000084}, {'diff': 0.00012963900000000084}, {'diff': 0.0001296660000000005...</msg>
<status status="PASS" starttime="20201030 10:58:16.735" endtime="20201030 10:58:16.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:16.742" level="INFO">${RESULT} = {'diff': [0.0001297079999999992, 0.00012959700000000213, 0.00012969499999999912, 0.00012963900000000084, 0.00012963900000000084, 0.0001296660000000005, 0.0001296530000000004, 0.00012962500000000127, 0...</msg>
<status status="PASS" starttime="20201030 10:58:16.739" endtime="20201030 10:58:16.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.747" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:16.746" endtime="20201030 10:58:16.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.749" level="INFO">VALUE: [0.0001297079999999992, 0.00012959700000000213, 0.00012969499999999912, 0.00012963900000000084, 0.00012963900000000084, 0.0001296660000000005, 0.0001296530000000004, 0.00012962500000000127, 0.0001296249999999978, 0.00012965199999999746, 0.0001296660000000005, 0.0001296530000000004, 0.00012963899999999737, 0.00012955499999999995, 0.00012959700000000213, 0.00012965299999999694, 0.00012963900000000084, 0.00012962500000000127, 0.00012965299999999694, 0.0001296530000000004, 0.0001296530000000004, 0.0001297079999999992, 0.00012963900000000084, 0.00012963900000000084, 0.00012965200000000093, 0.0001296530000000004, 0.00012963900000000084, 0.00012963900000000084, 0.00012959699999999866, 0.00012969499999999912, 0.0001297079999999992, 0.00012965299999999694, 0.00012969499999999912, 0.00012963900000000084, 0.0001296530000000004, 0.0001296660000000005, 0.0001296530000000004, 0.00012963899999999737, 0.00012955499999999995, 0.00012959700000000213, 0.0001296530000000004, 0.00012963899999999737, 0.00012963900000000084, 0.0001296110000000017, 0.00012963900000000084, 0.0001296530000000004, 0.0001296530000000004, 0.00012966699999999998, 0.0001296530000000004, 0.00012965200000000093]</msg>
<status status="PASS" starttime="20201030 10:58:16.748" endtime="20201030 10:58:16.751"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.743" endtime="20201030 10:58:16.751"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.393" endtime="20201030 10:58:16.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.371" endtime="20201030 10:58:16.752"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:16.754" endtime="20201030 10:58:16.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.753" endtime="20201030 10:58:16.775"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.783" endtime="20201030 10:58:16.800"></status>
</kw>
<msg timestamp="20201030 10:58:16.800" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.781" endtime="20201030 10:58:16.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:16.803" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:16.801" endtime="20201030 10:58:16.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.804" endtime="20201030 10:58:16.806"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.779" endtime="20201030 10:58:16.807"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.777" endtime="20201030 10:58:16.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:16.814" endtime="20201030 10:58:17.100"></status>
</kw>
<msg timestamp="20201030 10:58:17.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017071528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017215486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:16.812" endtime="20201030 10:58:17.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017071528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017215486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.104" endtime="20201030 10:58:17.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.112" endtime="20201030 10:58:17.114"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.810" endtime="20201030 10:58:17.114"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.808" endtime="20201030 10:58:17.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:17.119" level="INFO">${PHILIP_RES} = [{'diff': 0.00014395799999999959}, {'diff': 0.0001439310000000034}, {'diff': 0.00014391699999999688}, {'diff': 0.0001439159999999974}, {'diff': 0.00014391700000000035}, {'diff': 0.00014390199999999784...</msg>
<status status="PASS" starttime="20201030 10:58:17.115" endtime="20201030 10:58:17.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.124" level="INFO">${RESULT} = {'diff': [0.00014395799999999959, 0.0001439310000000034, 0.00014391699999999688, 0.0001439159999999974, 0.00014391700000000035, 0.00014390199999999784, 0.0001439020000000013, 0.00014393099999999992, 0...</msg>
<status status="PASS" starttime="20201030 10:58:17.120" endtime="20201030 10:58:17.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.128" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:17.127" endtime="20201030 10:58:17.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.131" level="INFO">VALUE: [0.00014395799999999959, 0.0001439310000000034, 0.00014391699999999688, 0.0001439159999999974, 0.00014391700000000035, 0.00014390199999999784, 0.0001439020000000013, 0.00014393099999999992, 0.00014391600000000088, 0.00014391700000000035, 0.00014393000000000045, 0.00014387500000000164, 0.00014398599999999873, 0.00014394400000000002, 0.00014390300000000078, 0.00014393000000000045, 0.00014391700000000035, 0.00014393000000000045, 0.0001438609999999986, 0.00014393000000000045, 0.0001439159999999974, 0.00014391700000000035, 0.00014393000000000045, 0.0001439449999999995, 0.00014390199999999784, 0.00014391699999999688, 0.00014391699999999688, 0.0001439310000000034, 0.00014391699999999688, 0.00014391600000000088, 0.00014391700000000035, 0.00014398599999999873, 0.0001439449999999995, 0.00014393000000000045, 0.00014391700000000035, 0.0001438470000000025, 0.00014391600000000088, 0.00014390300000000078, 0.00014386100000000207, 0.00014387500000000164, 0.00014393000000000045, 0.00014394400000000002, 0.00014391700000000035, 0.00014391600000000088, 0.00014393099999999992, 0.00014393000000000045, 0.0001438479999999985, 0.00014391700000000035, 0.00014391700000000035, 0.00014391700000000035]</msg>
<status status="PASS" starttime="20201030 10:58:17.129" endtime="20201030 10:58:17.131"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.124" endtime="20201030 10:58:17.132"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.775" endtime="20201030 10:58:17.133"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:16.752" endtime="20201030 10:58:17.133"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.135" endtime="20201030 10:58:17.155"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.134" endtime="20201030 10:58:17.155"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.164" endtime="20201030 10:58:17.180"></status>
</kw>
<msg timestamp="20201030 10:58:17.181" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.162" endtime="20201030 10:58:17.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.183" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.182" endtime="20201030 10:58:17.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.184" endtime="20201030 10:58:17.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.159" endtime="20201030 10:58:17.186"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.157" endtime="20201030 10:58:17.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.193" endtime="20201030 10:58:17.479"></status>
</kw>
<msg timestamp="20201030 10:58:17.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0171355, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017294472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:17.192" endtime="20201030 10:58:17.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0171355, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017294472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:17.483" endtime="20201030 10:58:17.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.492" endtime="20201030 10:58:17.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.189" endtime="20201030 10:58:17.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.187" endtime="20201030 10:58:17.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:17.498" level="INFO">${PHILIP_RES} = [{'diff': 0.00015897200000000028}, {'diff': 0.00015890299999999843}, {'diff': 0.000158916999999998}, {'diff': 0.00015886099999999972}, {'diff': 0.00015890299999999843}, {'diff': 0.00015883300000000058...</msg>
<status status="PASS" starttime="20201030 10:58:17.495" endtime="20201030 10:58:17.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.502" level="INFO">${RESULT} = {'diff': [0.00015897200000000028, 0.00015890299999999843, 0.000158916999999998, 0.00015886099999999972, 0.00015890299999999843, 0.00015883300000000058, 0.00015890299999999843, 0.00015891700000000147, ...</msg>
<status status="PASS" starttime="20201030 10:58:17.499" endtime="20201030 10:58:17.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.507" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:17.506" endtime="20201030 10:58:17.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.509" level="INFO">VALUE: [0.00015897200000000028, 0.00015890299999999843, 0.000158916999999998, 0.00015886099999999972, 0.00015890299999999843, 0.00015883300000000058, 0.00015890299999999843, 0.00015891700000000147, 0.0001589030000000019, 0.00015891700000000147, 0.00015890299999999843, 0.00015891599999999853, 0.00015891599999999853, 0.00015890199999999896, 0.00015888899999999886, 0.00015890199999999896, 0.00015891700000000147, 0.00015893100000000104, 0.00015893100000000104, 0.00015893100000000104, 0.00015888899999999886, 0.00015886099999999972, 0.00015894400000000114, 0.00015890299999999843, 0.000158916999999998, 0.00015890299999999843, 0.00015891700000000147, 0.000158916000000002, 0.00015893000000000157, 0.00015890200000000243, 0.00015888899999999886, 0.00015890299999999843, 0.00015893099999999757, 0.000158916999999998, 0.00015891700000000147, 0.00015890299999999843, 0.00015898599999999985, 0.0001589030000000019, 0.00015893100000000104, 0.0001589030000000019, 0.00015890299999999843, 0.000158916999999998, 0.00015891599999999853, 0.0001588879999999994, 0.0001589299999999981, 0.0001588749999999993, 0.00015893100000000104, 0.00015893100000000104, 0.00015891700000000147, 0.00015891700000000147]</msg>
<status status="PASS" starttime="20201030 10:58:17.508" endtime="20201030 10:58:17.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.503" endtime="20201030 10:58:17.511"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.156" endtime="20201030 10:58:17.511"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.133" endtime="20201030 10:58:17.511"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.514" endtime="20201030 10:58:17.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.512" endtime="20201030 10:58:17.534"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.542" endtime="20201030 10:58:17.561"></status>
</kw>
<msg timestamp="20201030 10:58:17.561" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.541" endtime="20201030 10:58:17.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.564" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.562" endtime="20201030 10:58:17.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.565" endtime="20201030 10:58:17.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.538" endtime="20201030 10:58:17.568"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.536" endtime="20201030 10:58:17.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.575" endtime="20201030 10:58:17.861"></status>
</kw>
<msg timestamp="20201030 10:58:17.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017148889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017323583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.573" endtime="20201030 10:58:17.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017148889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017323583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.865" endtime="20201030 10:58:17.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.873" endtime="20201030 10:58:17.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.571" endtime="20201030 10:58:17.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.569" endtime="20201030 10:58:17.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:17.880" level="INFO">${PHILIP_RES} = [{'diff': 0.00017469399999999954}, {'diff': 0.00017462500000000117}, {'diff': 0.00017461099999999813}, {'diff': 0.0001746660000000004}, {'diff': 0.0001746110000000016}, {'diff': 0.00017459699999999856...</msg>
<status status="PASS" starttime="20201030 10:58:17.877" endtime="20201030 10:58:17.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:17.884" level="INFO">${RESULT} = {'diff': [0.00017469399999999954, 0.00017462500000000117, 0.00017461099999999813, 0.0001746660000000004, 0.0001746110000000016, 0.00017459699999999856, 0.00017457000000000236, 0.0001746110000000016, 0...</msg>
<status status="PASS" starttime="20201030 10:58:17.881" endtime="20201030 10:58:17.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.888" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:17.887" endtime="20201030 10:58:17.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.891" level="INFO">VALUE: [0.00017469399999999954, 0.00017462500000000117, 0.00017461099999999813, 0.0001746660000000004, 0.0001746110000000016, 0.00017459699999999856, 0.00017457000000000236, 0.0001746110000000016, 0.00017463900000000074, 0.0001746249999999977, 0.00017459699999999856, 0.00017454199999999975, 0.00017459699999999856, 0.00017459699999999856, 0.00017458400000000193, 0.00017459700000000203, 0.00017459699999999856, 0.00017461099999999813, 0.00017463800000000126, 0.00017468099999999945, 0.00017461099999999813, 0.00017461099999999813, 0.0001746110000000016, 0.0001746110000000016, 0.00017461099999999813, 0.00017462500000000117, 0.0001746530000000003, 0.00017462500000000117, 0.0001746249999999977, 0.00017461200000000107, 0.0001746110000000016, 0.00017463899999999727, 0.00017459699999999856, 0.0001746530000000003, 0.00017462500000000117, 0.0001746249999999977, 0.0001746110000000016, 0.0001746110000000016, 0.000174582999999999, 0.0001746249999999977, 0.00017463800000000126, 0.0001746110000000016, 0.00017461099999999813, 0.00017459699999999856, 0.00017461200000000107, 0.0001746110000000016, 0.00017459699999999856, 0.00017459699999999856, 0.00017462500000000117, 0.0001746110000000016]</msg>
<status status="PASS" starttime="20201030 10:58:17.890" endtime="20201030 10:58:17.892"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.885" endtime="20201030 10:58:17.893"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.534" endtime="20201030 10:58:17.893"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.512" endtime="20201030 10:58:17.894"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:17.896" endtime="20201030 10:58:17.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.895" endtime="20201030 10:58:17.916"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.925" endtime="20201030 10:58:17.943"></status>
</kw>
<msg timestamp="20201030 10:58:17.943" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.923" endtime="20201030 10:58:17.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:17.945" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:17.944" endtime="20201030 10:58:17.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.947" endtime="20201030 10:58:17.948"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.920" endtime="20201030 10:58:17.949"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.918" endtime="20201030 10:58:17.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:17.956" endtime="20201030 10:58:18.242"></status>
</kw>
<msg timestamp="20201030 10:58:18.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017039333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017230403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:17.954" endtime="20201030 10:58:18.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017039333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017230403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.246" endtime="20201030 10:58:18.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.255" endtime="20201030 10:58:18.256"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.952" endtime="20201030 10:58:18.257"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.950" endtime="20201030 10:58:18.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:18.261" level="INFO">${PHILIP_RES} = [{'diff': 0.00019106999999999805}, {'diff': 0.00019101399999999977}, {'diff': 0.00019104099999999943}, {'diff': 0.00019102799999999934}, {'diff': 0.00019101399999999977}, {'diff': 0.000191041999999998...</msg>
<status status="PASS" starttime="20201030 10:58:18.258" endtime="20201030 10:58:18.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:18.266" level="INFO">${RESULT} = {'diff': [0.00019106999999999805, 0.00019101399999999977, 0.00019104099999999943, 0.00019102799999999934, 0.00019101399999999977, 0.0001910419999999989, 0.0001910419999999989, 0.00019097200000000106, ...</msg>
<status status="PASS" starttime="20201030 10:58:18.262" endtime="20201030 10:58:18.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.271" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:18.270" endtime="20201030 10:58:18.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.273" level="INFO">VALUE: [0.00019106999999999805, 0.00019101399999999977, 0.00019104099999999943, 0.00019102799999999934, 0.00019101399999999977, 0.0001910419999999989, 0.0001910419999999989, 0.00019097200000000106, 0.00019104200000000238, 0.0001910969999999977, 0.00019102799999999934, 0.00019102799999999934, 0.00019104099999999943, 0.0001910280000000028, 0.00019108400000000109, 0.00019102799999999934, 0.0001910969999999977, 0.000191054999999999, 0.00019104099999999943, 0.00019102799999999934, 0.00019102799999999934, 0.00019104200000000238, 0.00019102699999999986, 0.00019097200000000106, 0.00019102799999999934, 0.00019102799999999934, 0.0001910419999999989, 0.0001910280000000028, 0.00019102699999999986, 0.00019101399999999977, 0.0001910419999999989, 0.00019102799999999934, 0.00019104099999999943, 0.000191054999999999, 0.0001910280000000028, 0.0001910280000000028, 0.00019102799999999934, 0.00019104099999999943, 0.000191054999999999, 0.0001910280000000028, 0.0001910280000000028, 0.00019104200000000238, 0.0001910969999999977, 0.0001910130000000003, 0.0001910419999999989, 0.00019105599999999848, 0.00019102799999999934, 0.00019104200000000238, 0.0001910000000000002, 0.00019106899999999857]</msg>
<status status="PASS" starttime="20201030 10:58:18.272" endtime="20201030 10:58:18.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.267" endtime="20201030 10:58:18.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.917" endtime="20201030 10:58:18.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:17.894" endtime="20201030 10:58:18.275"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:18.278" endtime="20201030 10:58:18.297"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.276" endtime="20201030 10:58:18.298"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.306" endtime="20201030 10:58:18.327"></status>
</kw>
<msg timestamp="20201030 10:58:18.328" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.304" endtime="20201030 10:58:18.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.330" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.329" endtime="20201030 10:58:18.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.331" endtime="20201030 10:58:18.333"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.302" endtime="20201030 10:58:18.333"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.300" endtime="20201030 10:58:18.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.340" endtime="20201030 10:58:18.627"></status>
</kw>
<msg timestamp="20201030 10:58:18.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017022972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017231181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.339" endtime="20201030 10:58:18.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017022972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017231181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.631" endtime="20201030 10:58:18.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.639" endtime="20201030 10:58:18.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.336" endtime="20201030 10:58:18.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.334" endtime="20201030 10:58:18.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:18.647" level="INFO">${PHILIP_RES} = [{'diff': 0.00020820900000000087}, {'diff': 0.00020819399999999835}, {'diff': 0.00020815300000000259}, {'diff': 0.00020808300000000127}, {'diff': 0.00020815300000000259}, {'diff': 0.000208165999999999...</msg>
<status status="PASS" starttime="20201030 10:58:18.644" endtime="20201030 10:58:18.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:18.651" level="INFO">${RESULT} = {'diff': [0.00020820900000000087, 0.00020819399999999835, 0.00020815300000000259, 0.00020808300000000127, 0.00020815300000000259, 0.0002081659999999992, 0.00020816700000000216, 0.00020816699999999869,...</msg>
<status status="PASS" starttime="20201030 10:58:18.648" endtime="20201030 10:58:18.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.655" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:18.654" endtime="20201030 10:58:18.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.658" level="INFO">VALUE: [0.00020820900000000087, 0.00020819399999999835, 0.00020815300000000259, 0.00020808300000000127, 0.00020815300000000259, 0.0002081659999999992, 0.00020816700000000216, 0.00020816699999999869, 0.00020815299999999912, 0.00020816699999999869, 0.00020815299999999912, 0.0002081659999999992, 0.00020816699999999869, 0.00020816699999999869, 0.00020818099999999826, 0.00020815299999999912, 0.0002081659999999992, 0.00020818000000000225, 0.00020815299999999912, 0.00020816700000000216, 0.00020812499999999998, 0.00020809700000000084, 0.00020815199999999964, 0.0002081659999999992, 0.00020815299999999912, 0.00020818099999999826, 0.00020816699999999869, 0.00020818099999999826, 0.0002081659999999992, 0.00020815199999999964, 0.00020815300000000259, 0.00020815299999999912, 0.00020815300000000259, 0.00020816699999999869, 0.00020819400000000182, 0.00020816699999999869, 0.00020816700000000216, 0.00020816699999999869, 0.00020816699999999869, 0.00020816699999999869, 0.0002081659999999992, 0.00020816700000000216, 0.00020815299999999912, 0.00020816700000000216, 0.00020815299999999912, 0.00020812499999999998, 0.00020815199999999964, 0.00020817999999999878, 0.00020818099999999826, 0.00020815299999999912]</msg>
<status status="PASS" starttime="20201030 10:58:18.657" endtime="20201030 10:58:18.659"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.652" endtime="20201030 10:58:18.659"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.298" endtime="20201030 10:58:18.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.276" endtime="20201030 10:58:18.660"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:18.662" endtime="20201030 10:58:18.682"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.661" endtime="20201030 10:58:18.682"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.691" endtime="20201030 10:58:18.712"></status>
</kw>
<msg timestamp="20201030 10:58:18.712" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.689" endtime="20201030 10:58:18.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:18.714" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:18.713" endtime="20201030 10:58:18.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.716" endtime="20201030 10:58:18.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.687" endtime="20201030 10:58:18.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.685" endtime="20201030 10:58:18.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:18.726" endtime="20201030 10:58:19.011"></status>
</kw>
<msg timestamp="20201030 10:58:19.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017063736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017289736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:18.724" endtime="20201030 10:58:19.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017063736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017289736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.015" endtime="20201030 10:58:19.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.023" endtime="20201030 10:58:19.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.722" endtime="20201030 10:58:19.026"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.720" endtime="20201030 10:58:19.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:19.030" level="INFO">${PHILIP_RES} = [{'diff': 0.0002260000000000005}, {'diff': 0.00022601400000000008}, {'diff': 0.00022595900000000127}, {'diff': 0.00022599999999999704}, {'diff': 0.00022601400000000008}, {'diff': 0.0002260279999999996...</msg>
<status status="PASS" starttime="20201030 10:58:19.027" endtime="20201030 10:58:19.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:19.034" level="INFO">${RESULT} = {'diff': [0.0002260000000000005, 0.00022601400000000008, 0.00022595900000000127, 0.00022599999999999704, 0.00022601400000000008, 0.00022602799999999965, 0.00022601400000000008, 0.00022602799999999965,...</msg>
<status status="PASS" starttime="20201030 10:58:19.031" endtime="20201030 10:58:19.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.039" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:19.038" endtime="20201030 10:58:19.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.041" level="INFO">VALUE: [0.0002260000000000005, 0.00022601400000000008, 0.00022595900000000127, 0.00022599999999999704, 0.00022601400000000008, 0.00022602799999999965, 0.00022601400000000008, 0.00022602799999999965, 0.00022602799999999965, 0.0002260000000000005, 0.0002260000000000005, 0.0002260000000000005, 0.00022601400000000008, 0.00022598600000000094, 0.00022604099999999974, 0.00022601400000000008, 0.00022601400000000008, 0.00022601400000000008, 0.00022601400000000008, 0.00022602799999999965, 0.0002260130000000006, 0.00022602799999999965, 0.00022601400000000008, 0.0002260000000000005, 0.00022601400000000008, 0.0002260000000000005, 0.0002260130000000006, 0.0002260000000000005, 0.00022602799999999965, 0.00022601400000000008, 0.00022598599999999747, 0.00022601400000000008, 0.00022601400000000008, 0.0002260840000000014, 0.00022605599999999879, 0.00022602800000000312, 0.0002260000000000005, 0.0002260130000000006, 0.00022601400000000008, 0.00022601400000000008, 0.00022601400000000008, 0.0002260000000000005, 0.00022602700000000017, 0.00022602799999999965, 0.00022601400000000008, 0.00022601400000000008, 0.0002260000000000005, 0.00022601400000000008, 0.0002260000000000005, 0.0002260000000000005]</msg>
<status status="PASS" starttime="20201030 10:58:19.040" endtime="20201030 10:58:19.043"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.035" endtime="20201030 10:58:19.043"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.683" endtime="20201030 10:58:19.044"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:18.660" endtime="20201030 10:58:19.044"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:19.046" endtime="20201030 10:58:19.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.045" endtime="20201030 10:58:19.067"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.075" endtime="20201030 10:58:19.097"></status>
</kw>
<msg timestamp="20201030 10:58:19.098" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.073" endtime="20201030 10:58:19.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.100" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.099" endtime="20201030 10:58:19.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.101" endtime="20201030 10:58:19.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.071" endtime="20201030 10:58:19.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.069" endtime="20201030 10:58:19.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.110" endtime="20201030 10:58:19.397"></status>
</kw>
<msg timestamp="20201030 10:58:19.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017062236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017306847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.109" endtime="20201030 10:58:19.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017062236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017306847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.401" endtime="20201030 10:58:19.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.409" endtime="20201030 10:58:19.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.106" endtime="20201030 10:58:19.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.104" endtime="20201030 10:58:19.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:19.416" level="INFO">${PHILIP_RES} = [{'diff': 0.00024461099999999875}, {'diff': 0.00024456900000000004}, {'diff': 0.0002445839999999991}, {'diff': 0.0002445829999999996}, {'diff': 0.0002445829999999996}, {'diff': 0.0002445969999999992},...</msg>
<status status="PASS" starttime="20201030 10:58:19.412" endtime="20201030 10:58:19.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:19.421" level="INFO">${RESULT} = {'diff': [0.00024461099999999875, 0.00024456900000000004, 0.0002445839999999991, 0.0002445829999999996, 0.0002445829999999996, 0.0002445969999999992, 0.00024454200000000037, 0.00024455599999999994, 0....</msg>
<status status="PASS" starttime="20201030 10:58:19.417" endtime="20201030 10:58:19.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.425" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:19.424" endtime="20201030 10:58:19.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.428" level="INFO">VALUE: [0.00024461099999999875, 0.00024456900000000004, 0.0002445839999999991, 0.0002445829999999996, 0.0002445829999999996, 0.0002445969999999992, 0.00024454200000000037, 0.00024455599999999994, 0.0002445829999999996, 0.0002445830000000031, 0.0002445839999999991, 0.0002445969999999992, 0.00024456900000000004, 0.00024455500000000047, 0.0002445699999999995, 0.00024458400000000255, 0.0002445829999999996, 0.00024455500000000047, 0.0002445699999999995, 0.0002445839999999991, 0.0002445829999999996, 0.0002445829999999996, 0.0002445699999999995, 0.0002445839999999991, 0.0002445829999999996, 0.0002445829999999996, 0.00024455599999999994, 0.00024455599999999994, 0.00024459700000000265, 0.0002446110000000022, 0.0002445829999999996, 0.0002445699999999995, 0.0002445829999999996, 0.0002445829999999996, 0.0002445830000000031, 0.00024454200000000037, 0.0002445969999999992, 0.00024456900000000004, 0.0002445969999999992, 0.00024458400000000255, 0.00024463900000000136, 0.0002446110000000022, 0.0002445829999999996, 0.0002445839999999991, 0.0002445829999999996, 0.00024455500000000047, 0.0002445699999999995, 0.000244570000000003, 0.00024456900000000004, 0.0002445969999999992]</msg>
<status status="PASS" starttime="20201030 10:58:19.426" endtime="20201030 10:58:19.428"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.422" endtime="20201030 10:58:19.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.067" endtime="20201030 10:58:19.429"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.044" endtime="20201030 10:58:19.430"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:19.432" endtime="20201030 10:58:19.451"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.431" endtime="20201030 10:58:19.452"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.460" endtime="20201030 10:58:19.483"></status>
</kw>
<msg timestamp="20201030 10:58:19.483" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.459" endtime="20201030 10:58:19.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.485" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.484" endtime="20201030 10:58:19.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.487" endtime="20201030 10:58:19.488"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.456" endtime="20201030 10:58:19.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.454" endtime="20201030 10:58:19.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.496" endtime="20201030 10:58:19.784"></status>
</kw>
<msg timestamp="20201030 10:58:19.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017159875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017423778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.494" endtime="20201030 10:58:19.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017159875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017423778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.788" endtime="20201030 10:58:19.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.796" endtime="20201030 10:58:19.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.492" endtime="20201030 10:58:19.798"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.490" endtime="20201030 10:58:19.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:19.803" level="INFO">${PHILIP_RES} = [{'diff': 0.00026390299999999936}, {'diff': 0.0002638469999999976}, {'diff': 0.0002638609999999972}, {'diff': 0.0002638470000000011}, {'diff': 0.00026386100000000065}, {'diff': 0.0002638620000000001},...</msg>
<status status="PASS" starttime="20201030 10:58:19.800" endtime="20201030 10:58:19.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:19.807" level="INFO">${RESULT} = {'diff': [0.00026390299999999936, 0.0002638469999999976, 0.0002638609999999972, 0.0002638470000000011, 0.00026386100000000065, 0.0002638620000000001, 0.00026384800000000055, 0.00026384800000000055, 0....</msg>
<status status="PASS" starttime="20201030 10:58:19.804" endtime="20201030 10:58:19.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.811" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:19.810" endtime="20201030 10:58:19.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.814" level="INFO">VALUE: [0.00026390299999999936, 0.0002638469999999976, 0.0002638609999999972, 0.0002638470000000011, 0.00026386100000000065, 0.0002638620000000001, 0.00026384800000000055, 0.00026384800000000055, 0.000263834000000001, 0.00026386100000000065, 0.00026384800000000055, 0.00026384800000000055, 0.00026384800000000055, 0.0002638609999999972, 0.0002638470000000011, 0.0002638470000000011, 0.0002637910000000028, 0.00026386100000000065, 0.0002638469999999976, 0.00026383299999999804, 0.00026390299999999936, 0.0002638470000000011, 0.0002638469999999976, 0.00026386100000000065, 0.0002638470000000011, 0.00026386100000000065, 0.0002638469999999976, 0.0002638470000000011, 0.0002638470000000011, 0.0002638750000000002, 0.00026381899999999847, 0.00026381999999999795, 0.00026386100000000065, 0.0002638470000000011, 0.0002638200000000014, 0.0002638470000000011, 0.0002638330000000015, 0.0002638470000000011, 0.00026383299999999804, 0.0002638750000000002, 0.0002638470000000011, 0.00026386100000000065, 0.0002638880000000003, 0.00026386100000000065, 0.00026384800000000055, 0.0002638200000000014, 0.00026384800000000055, 0.0002638889999999998, 0.000263834000000001, 0.00026383299999999804]</msg>
<status status="PASS" starttime="20201030 10:58:19.812" endtime="20201030 10:58:19.815"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.808" endtime="20201030 10:58:19.815"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.453" endtime="20201030 10:58:19.816"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.430" endtime="20201030 10:58:19.816"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:19.818" endtime="20201030 10:58:19.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.817" endtime="20201030 10:58:19.839"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.848" endtime="20201030 10:58:19.872"></status>
</kw>
<msg timestamp="20201030 10:58:19.872" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.846" endtime="20201030 10:58:19.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:19.875" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:19.873" endtime="20201030 10:58:19.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.876" endtime="20201030 10:58:19.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.843" endtime="20201030 10:58:19.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.841" endtime="20201030 10:58:19.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:19.886" endtime="20201030 10:58:20.172"></status>
</kw>
<msg timestamp="20201030 10:58:20.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018452778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018736667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:19.885" endtime="20201030 10:58:20.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018452778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018736667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.177" endtime="20201030 10:58:20.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.185" endtime="20201030 10:58:20.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.882" endtime="20201030 10:58:20.187"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.880" endtime="20201030 10:58:20.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:20.191" level="INFO">${PHILIP_RES} = [{'diff': 0.000283888999999999}, {'diff': 0.0002838329999999972}, {'diff': 0.00028383400000000017}, {'diff': 0.00028386099999999984}, {'diff': 0.0002838619999999993}, {'diff': 0.0002838330000000007}, ...</msg>
<status status="PASS" starttime="20201030 10:58:20.188" endtime="20201030 10:58:20.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:20.196" level="INFO">${RESULT} = {'diff': [0.000283888999999999, 0.0002838329999999972, 0.00028383400000000017, 0.00028386099999999984, 0.0002838619999999993, 0.0002838330000000007, 0.00028386099999999984, 0.00028384700000000027, 0.0...</msg>
<status status="PASS" starttime="20201030 10:58:20.193" endtime="20201030 10:58:20.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.200" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:20.199" endtime="20201030 10:58:20.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.202" level="INFO">VALUE: [0.000283888999999999, 0.0002838329999999972, 0.00028383400000000017, 0.00028386099999999984, 0.0002838619999999993, 0.0002838330000000007, 0.00028386099999999984, 0.00028384700000000027, 0.000283888999999999, 0.00028384700000000027, 0.00028383400000000017, 0.0002838330000000007, 0.0002838339999999967, 0.0002838330000000007, 0.00028384700000000027, 0.00028384700000000027, 0.00028384700000000027, 0.00028381999999999713, 0.00028381899999999766, 0.00028384700000000027, 0.00028384700000000027, 0.0002838200000000006, 0.00028384700000000027, 0.0002838469999999968, 0.00028384700000000027, 0.00028384700000000027, 0.0002838330000000007, 0.0002838200000000006, 0.00028384700000000027, 0.0002838480000000032, 0.000283791000000002, 0.00028383400000000017, 0.0002837779999999984, 0.00028384799999999974, 0.0002838330000000007, 0.0002839169999999981, 0.0002838330000000007, 0.00028383400000000017, 0.0002838330000000007, 0.00028384700000000027, 0.0002838329999999972, 0.0002837770000000024, 0.00028390200000000254, 0.0002838329999999972, 0.00028381999999999713, 0.0002838329999999972, 0.0002838329999999972, 0.00028386099999999637, 0.0002838480000000032, 0.00028384700000000374]</msg>
<status status="PASS" starttime="20201030 10:58:20.201" endtime="20201030 10:58:20.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.196" endtime="20201030 10:58:20.205"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.839" endtime="20201030 10:58:20.205"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:19.816" endtime="20201030 10:58:20.205"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:20.208" endtime="20201030 10:58:20.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.206" endtime="20201030 10:58:20.228"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.236" endtime="20201030 10:58:20.260"></status>
</kw>
<msg timestamp="20201030 10:58:20.260" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.235" endtime="20201030 10:58:20.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.263" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.261" endtime="20201030 10:58:20.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.264" endtime="20201030 10:58:20.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.232" endtime="20201030 10:58:20.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.230" endtime="20201030 10:58:20.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.273" endtime="20201030 10:58:20.558"></status>
</kw>
<msg timestamp="20201030 10:58:20.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017223917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017528528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.272" endtime="20201030 10:58:20.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017223917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017528528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.562" endtime="20201030 10:58:20.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.571" endtime="20201030 10:58:20.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.269" endtime="20201030 10:58:20.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.267" endtime="20201030 10:58:20.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:20.577" level="INFO">${PHILIP_RES} = [{'diff': 0.00030461100000000324}, {'diff': 0.00030452799999999836}, {'diff': 0.0003045410000000019}, {'diff': 0.00030455600000000096}, {'diff': 0.0003045420000000014}, {'diff': 0.00030452799999999836...</msg>
<status status="PASS" starttime="20201030 10:58:20.574" endtime="20201030 10:58:20.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:20.582" level="INFO">${RESULT} = {'diff': [0.00030461100000000324, 0.00030452799999999836, 0.0003045410000000019, 0.00030455600000000096, 0.0003045420000000014, 0.00030452799999999836, 0.00030461099999999977, 0.00030458299999999716, ...</msg>
<status status="PASS" starttime="20201030 10:58:20.578" endtime="20201030 10:58:20.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.587" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:20.586" endtime="20201030 10:58:20.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.589" level="INFO">VALUE: [0.00030461100000000324, 0.00030452799999999836, 0.0003045410000000019, 0.00030455600000000096, 0.0003045420000000014, 0.00030452799999999836, 0.00030461099999999977, 0.00030458299999999716, 0.00030456999999999707, 0.00030448599999999965, 0.00030456900000000106, 0.00030451400000000226, 0.0003045420000000014, 0.0003045550000000015, 0.0003045419999999979, 0.00030455600000000096, 0.0003045419999999979, 0.00030454099999999845, 0.0003045419999999979, 0.0003045280000000018, 0.0003045280000000018, 0.0003045420000000014, 0.0003045420000000014, 0.0003044999999999992, 0.00030454099999999845, 0.0003045559999999975, 0.0003045419999999979, 0.0003045139999999988, 0.0003045129999999993, 0.0003045420000000014, 0.0003045420000000014, 0.0003045420000000014, 0.0003045129999999993, 0.0003044999999999992, 0.0003045559999999975, 0.00030454099999999845, 0.0003045420000000014, 0.0003045420000000014, 0.00030457000000000053, 0.0003045550000000015, 0.0003045139999999988, 0.00030455600000000096, 0.00030454099999999845, 0.00030454099999999845, 0.0003045419999999979, 0.0003045559999999975, 0.0003045689999999976, 0.0003045419999999979, 0.0003045559999999975, 0.00030448599999999965]</msg>
<status status="PASS" starttime="20201030 10:58:20.588" endtime="20201030 10:58:20.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.583" endtime="20201030 10:58:20.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.228" endtime="20201030 10:58:20.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.206" endtime="20201030 10:58:20.597"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:20.600" endtime="20201030 10:58:20.619"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.598" endtime="20201030 10:58:20.620"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.628" endtime="20201030 10:58:20.654"></status>
</kw>
<msg timestamp="20201030 10:58:20.655" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.627" endtime="20201030 10:58:20.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.657" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:20.656" endtime="20201030 10:58:20.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.658" endtime="20201030 10:58:20.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.624" endtime="20201030 10:58:20.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.622" endtime="20201030 10:58:20.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.668" endtime="20201030 10:58:20.957"></status>
</kw>
<msg timestamp="20201030 10:58:20.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017140694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017466708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.666" endtime="20201030 10:58:20.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017140694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017466708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:20.962" endtime="20201030 10:58:20.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:20.970" endtime="20201030 10:58:20.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.663" endtime="20201030 10:58:20.972"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.661" endtime="20201030 10:58:20.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:20.976" level="INFO">${PHILIP_RES} = [{'diff': 0.00032601399999999947}, {'diff': 0.0003259999999999999}, {'diff': 0.00032597200000000076}, {'diff': 0.0003259579999999977}, {'diff': 0.00032595900000000066}, {'diff': 0.0003259579999999977}...</msg>
<status status="PASS" starttime="20201030 10:58:20.973" endtime="20201030 10:58:20.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:20.981" level="INFO">${RESULT} = {'diff': [0.00032601399999999947, 0.0003259999999999999, 0.00032597200000000076, 0.0003259579999999977, 0.00032595900000000066, 0.0003259579999999977, 0.0003259580000000012, 0.0003259030000000024, 0.0...</msg>
<status status="PASS" starttime="20201030 10:58:20.977" endtime="20201030 10:58:20.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.985" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:20.984" endtime="20201030 10:58:20.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:20.987" level="INFO">VALUE: [0.00032601399999999947, 0.0003259999999999999, 0.00032597200000000076, 0.0003259579999999977, 0.00032595900000000066, 0.0003259579999999977, 0.0003259580000000012, 0.0003259030000000024, 0.0003259999999999999, 0.0003259580000000012, 0.00032598599999999686, 0.0003259580000000012, 0.0003259719999999973, 0.00032597300000000023, 0.00032597200000000076, 0.00032595900000000066, 0.0003259450000000011, 0.00032588899999999935, 0.00032598600000000033, 0.00032598599999999686, 0.00032598600000000033, 0.0003260419999999986, 0.00032598600000000033, 0.00032598600000000033, 0.00032595900000000066, 0.0003259580000000012, 0.00032601400000000294, 0.0003259450000000011, 0.00032594399999999815, 0.00032597200000000076, 0.0003259589999999972, 0.00032597200000000076, 0.00032598600000000033, 0.00032597300000000023, 0.00032597200000000076, 0.00032597200000000076, 0.00032595900000000066, 0.0003259719999999973, 0.0003259580000000012, 0.00032595900000000066, 0.00032590299999999545, 0.0003259440000000016, 0.00032597300000000023, 0.00032597200000000076, 0.00032593000000000205, 0.0003259580000000012, 0.0003259440000000016, 0.00032597200000000076, 0.0003259450000000011, 0.0003259719999999938]</msg>
<status status="PASS" starttime="20201030 10:58:20.986" endtime="20201030 10:58:20.988"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.981" endtime="20201030 10:58:20.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.620" endtime="20201030 10:58:20.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.597" endtime="20201030 10:58:20.989"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:20.992" endtime="20201030 10:58:21.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.990" endtime="20201030 10:58:21.012"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.020" endtime="20201030 10:58:21.047"></status>
</kw>
<msg timestamp="20201030 10:58:21.048" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.019" endtime="20201030 10:58:21.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.050" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.049" endtime="20201030 10:58:21.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.051" endtime="20201030 10:58:21.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.016" endtime="20201030 10:58:21.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.014" endtime="20201030 10:58:21.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.061" endtime="20201030 10:58:21.347"></status>
</kw>
<msg timestamp="20201030 10:58:21.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017235361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0175835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:21.060" endtime="20201030 10:58:21.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017235361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0175835, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:58:21.351" endtime="20201030 10:58:21.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.360" endtime="20201030 10:58:21.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.057" endtime="20201030 10:58:21.362"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.055" endtime="20201030 10:58:21.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:21.366" level="INFO">${PHILIP_RES} = [{'diff': 0.0003481389999999973}, {'diff': 0.00034809800000000155}, {'diff': 0.0003481250000000012}, {'diff': 0.0003480969999999986}, {'diff': 0.000348084000000002}, {'diff': 0.0003481250000000012}, {...</msg>
<status status="PASS" starttime="20201030 10:58:21.363" endtime="20201030 10:58:21.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:21.370" level="INFO">${RESULT} = {'diff': [0.0003481389999999973, 0.00034809800000000155, 0.0003481250000000012, 0.0003480969999999986, 0.000348084000000002, 0.0003481250000000012, 0.0003481250000000012, 0.0003480969999999986, 0.0003...</msg>
<status status="PASS" starttime="20201030 10:58:21.367" endtime="20201030 10:58:21.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.375" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:21.374" endtime="20201030 10:58:21.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.377" level="INFO">VALUE: [0.0003481389999999973, 0.00034809800000000155, 0.0003481250000000012, 0.0003480969999999986, 0.000348084000000002, 0.0003481250000000012, 0.0003481250000000012, 0.0003480969999999986, 0.0003480830000000025, 0.0003481669999999999, 0.00034809700000000207, 0.00034805599999999937, 0.00034815300000000035, 0.0003480969999999986, 0.00034811100000000164, 0.0003480979999999981, 0.00034811100000000164, 0.0003480969999999986, 0.0003481120000000011, 0.00034811099999999817, 0.00034809700000000207, 0.00034812499999999774, 0.0003481669999999999, 0.0003480969999999986, 0.00034809700000000207, 0.0003480979999999981, 0.0003480830000000025, 0.00034806899999999946, 0.0003481669999999999, 0.0003480969999999986, 0.00034809700000000207, 0.0003480839999999985, 0.0003481250000000012, 0.0003480969999999986, 0.00034816600000000045, 0.0003480839999999985, 0.00034809700000000207, 0.0003480969999999986, 0.00034811199999999765, 0.00034808300000000597, 0.0003480969999999986, 0.0003480839999999985, 0.0003480839999999985, 0.0003480549999999999, 0.00034808299999999903, 0.0003480839999999985, 0.00034812499999999774, 0.00034809700000000554, 0.0003480839999999985, 0.0003480969999999986]</msg>
<status status="PASS" starttime="20201030 10:58:21.376" endtime="20201030 10:58:21.379"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.371" endtime="20201030 10:58:21.380"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.012" endtime="20201030 10:58:21.380"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:20.990" endtime="20201030 10:58:21.380"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:21.383" endtime="20201030 10:58:21.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.381" endtime="20201030 10:58:21.403"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.411" endtime="20201030 10:58:21.440"></status>
</kw>
<msg timestamp="20201030 10:58:21.441" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.409" endtime="20201030 10:58:21.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.443" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.442" endtime="20201030 10:58:21.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.445" endtime="20201030 10:58:21.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.407" endtime="20201030 10:58:21.447"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.405" endtime="20201030 10:58:21.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.454" endtime="20201030 10:58:21.740"></status>
</kw>
<msg timestamp="20201030 10:58:21.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017067792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017438778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.452" endtime="20201030 10:58:21.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017067792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017438778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:21.744" endtime="20201030 10:58:21.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.752" endtime="20201030 10:58:21.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.450" endtime="20201030 10:58:21.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.448" endtime="20201030 10:58:21.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:21.759" level="INFO">${PHILIP_RES} = [{'diff': 0.00037098600000000023}, {'diff': 0.0003709579999999976}, {'diff': 0.0003709449999999975}, {'diff': 0.0003709449999999975}, {'diff': 0.0003709579999999976}, {'diff': 0.0003709449999999975}, ...</msg>
<status status="PASS" starttime="20201030 10:58:21.755" endtime="20201030 10:58:21.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:21.764" level="INFO">${RESULT} = {'diff': [0.00037098600000000023, 0.0003709579999999976, 0.0003709449999999975, 0.0003709449999999975, 0.0003709579999999976, 0.0003709449999999975, 0.00037093099999999796, 0.00037088899999999925, 0.0...</msg>
<status status="PASS" starttime="20201030 10:58:21.760" endtime="20201030 10:58:21.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.768" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:21.767" endtime="20201030 10:58:21.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.771" level="INFO">VALUE: [0.00037098600000000023, 0.0003709579999999976, 0.0003709449999999975, 0.0003709449999999975, 0.0003709579999999976, 0.0003709449999999975, 0.00037093099999999796, 0.00037088899999999925, 0.000370945000000001, 0.0003709440000000015, 0.00037098600000000023, 0.00037088899999999925, 0.0003709310000000014, 0.0003708749999999997, 0.00037088899999999925, 0.0003709580000000011, 0.0003709580000000011, 0.000370945000000001, 0.0003709440000000015, 0.0003708879999999998, 0.00037095900000000057, 0.000370945000000001, 0.0003709580000000011, 0.00037095900000000057, 0.0003709580000000011, 0.00037094399999999805, 0.0003709449999999975, 0.0003709299999999985, 0.0003709169999999984, 0.0003709449999999975, 0.0003709299999999985, 0.0003709579999999976, 0.00037094399999999805, 0.00037094399999999805, 0.00037093099999999796, 0.0003709580000000011, 0.0003709579999999976, 0.0003709860000000037, 0.0003709719999999972, 0.00037094399999999805, 0.00037093099999999796, 0.00037094399999999805, 0.00037094399999999805, 0.00037094500000000447, 0.0003709579999999976, 0.00037095800000000456, 0.0003709029999999988, 0.00037094399999999805, 0.0003709719999999972, 0.0003708749999999997]</msg>
<status status="PASS" starttime="20201030 10:58:21.769" endtime="20201030 10:58:21.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.764" endtime="20201030 10:58:21.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.403" endtime="20201030 10:58:21.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.381" endtime="20201030 10:58:21.772"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:21.775" endtime="20201030 10:58:21.794"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.773" endtime="20201030 10:58:21.795"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.803" endtime="20201030 10:58:21.833"></status>
</kw>
<msg timestamp="20201030 10:58:21.834" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.802" endtime="20201030 10:58:21.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:21.837" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:21.835" endtime="20201030 10:58:21.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.838" endtime="20201030 10:58:21.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.799" endtime="20201030 10:58:21.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.797" endtime="20201030 10:58:21.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:21.847" endtime="20201030 10:58:22.134"></status>
</kw>
<msg timestamp="20201030 10:58:22.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017128694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01752325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:21.845" endtime="20201030 10:58:22.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017128694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01752325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:22.138" endtime="20201030 10:58:22.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.147" endtime="20201030 10:58:22.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.843" endtime="20201030 10:58:22.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.841" endtime="20201030 10:58:22.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:22.153" level="INFO">${PHILIP_RES} = [{'diff': 0.00039455600000000077}, {'diff': 0.00039451400000000206}, {'diff': 0.0003944870000000024}, {'diff': 0.0003945550000000013}, {'diff': 0.00039451400000000206}, {'diff': 0.00039452800000000163...</msg>
<status status="PASS" starttime="20201030 10:58:22.150" endtime="20201030 10:58:22.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:22.157" level="INFO">${RESULT} = {'diff': [0.00039455600000000077, 0.00039451400000000206, 0.0003944870000000024, 0.0003945550000000013, 0.00039451400000000206, 0.00039452800000000163, 0.000394499999999999, 0.0003945139999999986, 0.0...</msg>
<status status="PASS" starttime="20201030 10:58:22.154" endtime="20201030 10:58:22.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.162" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:22.161" endtime="20201030 10:58:22.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.164" level="INFO">VALUE: [0.00039455600000000077, 0.00039451400000000206, 0.0003944870000000024, 0.0003945550000000013, 0.00039451400000000206, 0.00039452800000000163, 0.000394499999999999, 0.0003945139999999986, 0.00039448599999999945, 0.0003945129999999991, 0.000394499999999999, 0.00039455600000000077, 0.000394499999999999, 0.0003945269999999987, 0.00039448599999999945, 0.000394499999999999, 0.0003945000000000025, 0.00039452800000000163, 0.0003944719999999999, 0.00039452800000000163, 0.0003944870000000024, 0.00039451400000000206, 0.00039451400000000206, 0.000394499999999999, 0.0003945139999999986, 0.0003945139999999986, 0.000394499999999999, 0.0003945139999999986, 0.000394499999999999, 0.000394499999999999, 0.00039448599999999945, 0.000394499999999999, 0.0003945000000000025, 0.0003945000000000025, 0.0003945139999999986, 0.0003945139999999986, 0.00039448599999999945, 0.00039452799999999816, 0.000394499999999999, 0.00039456900000000433, 0.00039444400000000074, 0.0003944719999999999, 0.00039448599999999945, 0.0003945140000000055, 0.000394499999999999, 0.0003944580000000003, 0.0003945139999999986, 0.00039448599999999945, 0.000394499999999999, 0.0003945129999999991]</msg>
<status status="PASS" starttime="20201030 10:58:22.163" endtime="20201030 10:58:22.165"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.158" endtime="20201030 10:58:22.166"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.796" endtime="20201030 10:58:22.166"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:21.773" endtime="20201030 10:58:22.166"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:22.169" endtime="20201030 10:58:22.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.167" endtime="20201030 10:58:22.189"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.197" endtime="20201030 10:58:22.227"></status>
</kw>
<msg timestamp="20201030 10:58:22.227" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.196" endtime="20201030 10:58:22.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.230" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.228" endtime="20201030 10:58:22.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.231" endtime="20201030 10:58:22.234"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.193" endtime="20201030 10:58:22.234"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.191" endtime="20201030 10:58:22.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.241" endtime="20201030 10:58:22.527"></status>
</kw>
<msg timestamp="20201030 10:58:22.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017127597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017546417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.240" endtime="20201030 10:58:22.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017127597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017546417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.531" endtime="20201030 10:58:22.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.539" endtime="20201030 10:58:22.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.237" endtime="20201030 10:58:22.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.235" endtime="20201030 10:58:22.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:22.546" level="INFO">${PHILIP_RES} = [{'diff': 0.0004188200000000003}, {'diff': 0.00041879200000000116}, {'diff': 0.0004187919999999977}, {'diff': 0.00041880600000000073}, {'diff': 0.00041880600000000073}, {'diff': 0.00041879200000000116...</msg>
<status status="PASS" starttime="20201030 10:58:22.543" endtime="20201030 10:58:22.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:22.550" level="INFO">${RESULT} = {'diff': [0.0004188200000000003, 0.00041879200000000116, 0.0004187919999999977, 0.00041880600000000073, 0.00041880600000000073, 0.00041879200000000116, 0.00041879200000000116, 0.0004187919999999977, 0...</msg>
<status status="PASS" starttime="20201030 10:58:22.547" endtime="20201030 10:58:22.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.554" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:22.553" endtime="20201030 10:58:22.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.557" level="INFO">VALUE: [0.0004188200000000003, 0.00041879200000000116, 0.0004187919999999977, 0.00041880600000000073, 0.00041880600000000073, 0.00041879200000000116, 0.00041879200000000116, 0.0004187919999999977, 0.0004187780000000016, 0.000418749999999999, 0.0004187780000000016, 0.0004188480000000029, 0.00041879200000000116, 0.00041879200000000116, 0.0004187779999999981, 0.00041879200000000116, 0.00041876399999999855, 0.0004187779999999981, 0.00041879200000000116, 0.0004187919999999977, 0.00041881900000000083, 0.00041876399999999855, 0.00041880500000000126, 0.00041879200000000116, 0.00041877699999999865, 0.000418749999999999, 0.00041876399999999855, 0.00041879200000000116, 0.00041881900000000083, 0.00041879200000000116, 0.0004187770000000021, 0.0004187779999999981, 0.0004188049999999943, 0.0004187780000000016, 0.0004187910000000017, 0.0004187780000000016, 0.00041880500000000126, 0.0004187919999999942, 0.0004187910000000017, 0.0004187780000000016, 0.0004187910000000017, 0.00041880600000000073, 0.0004187769999999952, 0.00041879200000000116, 0.0004187910000000017, 0.00041879200000000116, 0.00041873599999999594, 0.00041880600000000073, 0.0004187910000000017, 0.00041880600000000073]</msg>
<status status="PASS" starttime="20201030 10:58:22.555" endtime="20201030 10:58:22.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.551" endtime="20201030 10:58:22.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.189" endtime="20201030 10:58:22.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.167" endtime="20201030 10:58:22.560"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:22.562" endtime="20201030 10:58:22.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.561" endtime="20201030 10:58:22.582"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.591" endtime="20201030 10:58:22.624"></status>
</kw>
<msg timestamp="20201030 10:58:22.625" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.589" endtime="20201030 10:58:22.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.627" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.626" endtime="20201030 10:58:22.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.628" endtime="20201030 10:58:22.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.586" endtime="20201030 10:58:22.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.584" endtime="20201030 10:58:22.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.638" endtime="20201030 10:58:22.923"></status>
</kw>
<msg timestamp="20201030 10:58:22.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017240667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017684472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.636" endtime="20201030 10:58:22.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017240667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017684472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:22.928" endtime="20201030 10:58:22.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.936" endtime="20201030 10:58:22.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.633" endtime="20201030 10:58:22.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.631" endtime="20201030 10:58:22.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:22.943" level="INFO">${PHILIP_RES} = [{'diff': 0.0004438049999999985}, {'diff': 0.00044377799999999884}, {'diff': 0.00044376399999999927}, {'diff': 0.00044377799999999884}, {'diff': 0.0004437780000000023}, {'diff': 0.00044377799999999884...</msg>
<status status="PASS" starttime="20201030 10:58:22.939" endtime="20201030 10:58:22.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:22.948" level="INFO">${RESULT} = {'diff': [0.0004438049999999985, 0.00044377799999999884, 0.00044376399999999927, 0.00044377799999999884, 0.0004437780000000023, 0.00044377799999999884, 0.00044376400000000274, 0.00044372200000000056, ...</msg>
<status status="PASS" starttime="20201030 10:58:22.944" endtime="20201030 10:58:22.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.952" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:22.951" endtime="20201030 10:58:22.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:22.955" level="INFO">VALUE: [0.0004438049999999985, 0.00044377799999999884, 0.00044376399999999927, 0.00044377799999999884, 0.0004437780000000023, 0.00044377799999999884, 0.00044376400000000274, 0.00044372200000000056, 0.00044377799999999884, 0.00044377799999999884, 0.00044376399999999927, 0.0004437780000000023, 0.00044377799999999884, 0.00044377799999999884, 0.00044377799999999884, 0.00044381999999999755, 0.00044375000000000317, 0.00044376399999999927, 0.0004437919999999984, 0.0004437780000000023, 0.00044377799999999884, 0.00044376400000000274, 0.0004437499999999997, 0.00044377799999999884, 0.0004437780000000023, 0.00044376399999999927, 0.0004438340000000006, 0.0004437499999999997, 0.0004437919999999984, 0.00044374999999999623, 0.00044376399999999927, 0.00044376399999999927, 0.0004437499999999997, 0.00044377799999999884, 0.00044376399999999927, 0.0004438330000000046, 0.00044377799999999884, 0.00044376399999999927, 0.00044376399999999927, 0.0004437919999999984, 0.00044377799999999884, 0.0004437919999999984, 0.00044379200000000535, 0.000443805999999998, 0.00044376399999999927, 0.0004437780000000058, 0.00044377799999999884, 0.00044377799999999884, 0.0004437919999999984, 0.00044376399999999927]</msg>
<status status="PASS" starttime="20201030 10:58:22.953" endtime="20201030 10:58:22.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.949" endtime="20201030 10:58:22.956"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.583" endtime="20201030 10:58:22.956"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.560" endtime="20201030 10:58:22.957"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:22.959" endtime="20201030 10:58:22.979"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.958" endtime="20201030 10:58:22.979"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:22.988" endtime="20201030 10:58:23.021"></status>
</kw>
<msg timestamp="20201030 10:58:23.022" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:22.986" endtime="20201030 10:58:23.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.024" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.023" endtime="20201030 10:58:23.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.025" endtime="20201030 10:58:23.027"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.983" endtime="20201030 10:58:23.028"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.981" endtime="20201030 10:58:23.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.035" endtime="20201030 10:58:23.322"></status>
</kw>
<msg timestamp="20201030 10:58:23.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017157167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017626681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.033" endtime="20201030 10:58:23.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017157167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017626681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.326" endtime="20201030 10:58:23.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.334" endtime="20201030 10:58:23.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.030" endtime="20201030 10:58:23.336"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.029" endtime="20201030 10:58:23.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:23.341" level="INFO">${PHILIP_RES} = [{'diff': 0.00046951400000000074}, {'diff': 0.00046950000000000117}, {'diff': 0.00046942999999999985}, {'diff': 0.00046947199999999856}, {'diff': 0.0004694859999999981}, {'diff': 0.0004694860000000016...</msg>
<status status="PASS" starttime="20201030 10:58:23.338" endtime="20201030 10:58:23.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:23.345" level="INFO">${RESULT} = {'diff': [0.00046951400000000074, 0.00046950000000000117, 0.00046942999999999985, 0.00046947199999999856, 0.0004694859999999981, 0.0004694860000000016, 0.0004694860000000016, 0.00046950000000000117, 0...</msg>
<status status="PASS" starttime="20201030 10:58:23.342" endtime="20201030 10:58:23.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.349" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:23.348" endtime="20201030 10:58:23.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.352" level="INFO">VALUE: [0.00046951400000000074, 0.00046950000000000117, 0.00046942999999999985, 0.00046947199999999856, 0.0004694859999999981, 0.0004694860000000016, 0.0004694860000000016, 0.00046950000000000117, 0.00046950000000000117, 0.00046950000000000117, 0.0004694859999999981, 0.00046947199999999856, 0.0004694999999999977, 0.0004694999999999977, 0.00046947199999999856, 0.0004694860000000016, 0.0004694860000000016, 0.00046950000000000117, 0.0004694730000000015, 0.0004694860000000016, 0.0004694859999999981, 0.00046947199999999856, 0.0004694999999999977, 0.0004694860000000016, 0.00046947199999999856, 0.0004694860000000016, 0.00046955499999999997, 0.0004694730000000015, 0.00046950000000000464, 0.00046950000000000464, 0.00046948600000000507, 0.00046950000000000464, 0.00046948600000000507, 0.0004695140000000042, 0.00046947199999999856, 0.00046950000000000464, 0.0004694869999999976, 0.0004694160000000003, 0.0004694859999999981, 0.0004694999999999977, 0.0004694999999999977, 0.0004694859999999981, 0.00046951399999999727, 0.00046947199999999856, 0.0004694999999999977, 0.000469457999999999, 0.0004694859999999981, 0.0004694859999999981, 0.00046948600000000507, 0.00046947300000000497]</msg>
<status status="PASS" starttime="20201030 10:58:23.350" endtime="20201030 10:58:23.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.346" endtime="20201030 10:58:23.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.980" endtime="20201030 10:58:23.354"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:22.957" endtime="20201030 10:58:23.354"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:23.356" endtime="20201030 10:58:23.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.355" endtime="20201030 10:58:23.377"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.385" endtime="20201030 10:58:23.419"></status>
</kw>
<msg timestamp="20201030 10:58:23.420" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.383" endtime="20201030 10:58:23.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.422" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.421" endtime="20201030 10:58:23.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.423" endtime="20201030 10:58:23.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.381" endtime="20201030 10:58:23.426"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.379" endtime="20201030 10:58:23.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.434" endtime="20201030 10:58:23.720"></status>
</kw>
<msg timestamp="20201030 10:58:23.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017140028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017635972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.432" endtime="20201030 10:58:23.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017140028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017635972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.724" endtime="20201030 10:58:23.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.732" endtime="20201030 10:58:23.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.429" endtime="20201030 10:58:23.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.428" endtime="20201030 10:58:23.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:23.739" level="INFO">${PHILIP_RES} = [{'diff': 0.0004959439999999982}, {'diff': 0.0004959029999999989}, {'diff': 0.0004959169999999985}, {'diff': 0.0004958889999999994}, {'diff': 0.0004959720000000008}, {'diff': 0.0004959020000000029}, {...</msg>
<status status="PASS" starttime="20201030 10:58:23.735" endtime="20201030 10:58:23.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:23.743" level="INFO">${RESULT} = {'diff': [0.0004959439999999982, 0.0004959029999999989, 0.0004959169999999985, 0.0004958889999999994, 0.0004959720000000008, 0.0004959020000000029, 0.0004958889999999994, 0.0004958610000000002, 0.0004...</msg>
<status status="PASS" starttime="20201030 10:58:23.740" endtime="20201030 10:58:23.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.747" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:23.746" endtime="20201030 10:58:23.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.750" level="INFO">VALUE: [0.0004959439999999982, 0.0004959029999999989, 0.0004959169999999985, 0.0004958889999999994, 0.0004959720000000008, 0.0004959020000000029, 0.0004958889999999994, 0.0004958610000000002, 0.0004958889999999994, 0.0004959029999999989, 0.0004958480000000001, 0.0004958889999999994, 0.0004959019999999995, 0.0004958889999999994, 0.0004958889999999994, 0.0004958749999999998, 0.0004959030000000024, 0.0004959029999999989, 0.0004958749999999998, 0.0004959019999999995, 0.0004959169999999985, 0.0004958889999999994, 0.0004959029999999989, 0.0004958889999999994, 0.0004958889999999994, 0.0004959020000000029, 0.0004959030000000024, 0.0004959169999999985, 0.0004958470000000006, 0.0004959029999999989, 0.0004958889999999994, 0.000495916000000006, 0.0004959019999999995, 0.0004959029999999989, 0.0004958470000000006, 0.0004959029999999989, 0.0004959029999999989, 0.0004959029999999989, 0.000495915999999999, 0.0004959019999999995, 0.0004958749999999998, 0.0004958889999999994, 0.0004959029999999989, 0.000495915999999999, 0.000495915999999999, 0.0004959579999999977, 0.0004959029999999989, 0.0004959169999999985, 0.0004959169999999985, 0.0004959169999999985]</msg>
<status status="PASS" starttime="20201030 10:58:23.748" endtime="20201030 10:58:23.751"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.744" endtime="20201030 10:58:23.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.377" endtime="20201030 10:58:23.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.354" endtime="20201030 10:58:23.753"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:23.755" endtime="20201030 10:58:23.774"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.754" endtime="20201030 10:58:23.775"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.783" endtime="20201030 10:58:23.820"></status>
</kw>
<msg timestamp="20201030 10:58:23.820" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.782" endtime="20201030 10:58:23.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:23.822" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:23.821" endtime="20201030 10:58:23.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.824" endtime="20201030 10:58:23.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.779" endtime="20201030 10:58:23.826"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.777" endtime="20201030 10:58:23.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:23.833" endtime="20201030 10:58:24.119"></status>
</kw>
<msg timestamp="20201030 10:58:24.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017128861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017651931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:23.831" endtime="20201030 10:58:24.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017128861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017651931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.123" endtime="20201030 10:58:24.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.131" endtime="20201030 10:58:24.133"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.829" endtime="20201030 10:58:24.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.827" endtime="20201030 10:58:24.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:24.138" level="INFO">${PHILIP_RES} = [{'diff': 0.0005230700000000005}, {'diff': 0.0005230280000000018}, {'diff': 0.0005230420000000013}, {'diff': 0.0005230979999999996}, {'diff': 0.0005230550000000014}, {'diff': 0.0005230970000000001}, {...</msg>
<status status="PASS" starttime="20201030 10:58:24.135" endtime="20201030 10:58:24.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:24.143" level="INFO">${RESULT} = {'diff': [0.0005230700000000005, 0.0005230280000000018, 0.0005230420000000013, 0.0005230979999999996, 0.0005230550000000014, 0.0005230970000000001, 0.0005230280000000018, 0.0005230139999999987, 0.0005...</msg>
<status status="PASS" starttime="20201030 10:58:24.139" endtime="20201030 10:58:24.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.148" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:24.146" endtime="20201030 10:58:24.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.150" level="INFO">VALUE: [0.0005230700000000005, 0.0005230280000000018, 0.0005230420000000013, 0.0005230979999999996, 0.0005230550000000014, 0.0005230970000000001, 0.0005230280000000018, 0.0005230139999999987, 0.0005230560000000009, 0.0005230550000000014, 0.000523054999999998, 0.0005230420000000013, 0.0005230279999999983, 0.0005230420000000013, 0.0005230409999999984, 0.0005230280000000018, 0.0005230420000000013, 0.0005230279999999983, 0.0005229999999999992, 0.0005229580000000005, 0.000523069000000001, 0.0005230420000000013, 0.0005230419999999979, 0.0005230280000000018, 0.0005229999999999992, 0.0005230279999999983, 0.0005230420000000013, 0.0005230420000000013, 0.0005230409999999949, 0.0005230410000000019, 0.0005229860000000031, 0.0005230280000000018, 0.0005230420000000013, 0.0005230140000000022, 0.0005230410000000019, 0.0005230279999999948, 0.0005230140000000022, 0.0005230560000000009, 0.0005230410000000019, 0.0005230129999999958, 0.0005230280000000018, 0.0005230140000000022, 0.0005230700000000005, 0.0005230550000000014, 0.000523069000000001, 0.0005229860000000031, 0.0005230280000000018, 0.0005230140000000022, 0.000523069000000001, 0.0005230409999999949]</msg>
<status status="PASS" starttime="20201030 10:58:24.149" endtime="20201030 10:58:24.151"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.144" endtime="20201030 10:58:24.151"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.776" endtime="20201030 10:58:24.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:23.753" endtime="20201030 10:58:24.152"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:24.154" endtime="20201030 10:58:24.174"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.153" endtime="20201030 10:58:24.174"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.183" endtime="20201030 10:58:24.221"></status>
</kw>
<msg timestamp="20201030 10:58:24.222" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.181" endtime="20201030 10:58:24.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.224" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.223" endtime="20201030 10:58:24.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.225" endtime="20201030 10:58:24.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.179" endtime="20201030 10:58:24.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.177" endtime="20201030 10:58:24.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.235" endtime="20201030 10:58:24.524"></status>
</kw>
<msg timestamp="20201030 10:58:24.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017100597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017651514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.233" endtime="20201030 10:58:24.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017100597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017651514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.528" endtime="20201030 10:58:24.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.536" endtime="20201030 10:58:24.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.231" endtime="20201030 10:58:24.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.229" endtime="20201030 10:58:24.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:24.543" level="INFO">${PHILIP_RES} = [{'diff': 0.0005509170000000015}, {'diff': 0.0005508749999999993}, {'diff': 0.0005508889999999989}, {'diff': 0.0005509159999999985}, {'diff': 0.0005508750000000028}, {'diff': 0.0005508889999999989}, {...</msg>
<status status="PASS" starttime="20201030 10:58:24.540" endtime="20201030 10:58:24.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:24.547" level="INFO">${RESULT} = {'diff': [0.0005509170000000015, 0.0005508749999999993, 0.0005508889999999989, 0.0005509159999999985, 0.0005508750000000028, 0.0005508889999999989, 0.0005508610000000032, 0.0005509029999999984, 0.0005...</msg>
<status status="PASS" starttime="20201030 10:58:24.544" endtime="20201030 10:58:24.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.551" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:24.550" endtime="20201030 10:58:24.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.554" level="INFO">VALUE: [0.0005509170000000015, 0.0005508749999999993, 0.0005508889999999989, 0.0005509159999999985, 0.0005508750000000028, 0.0005508889999999989, 0.0005508610000000032, 0.0005509029999999984, 0.0005508889999999989, 0.0005508749999999993, 0.0005508889999999989, 0.0005508749999999993, 0.0005509029999999984, 0.0005509030000000019, 0.0005508749999999993, 0.0005508620000000027, 0.0005509029999999984, 0.0005508889999999989, 0.0005509030000000019, 0.0005508749999999993, 0.0005508749999999993, 0.0005508609999999997, 0.0005509020000000024, 0.0005508889999999989, 0.0005508889999999989, 0.0005508889999999989, 0.0005508889999999989, 0.0005508749999999993, 0.0005508889999999989, 0.0005508470000000001, 0.0005509730000000032, 0.0005508609999999997, 0.0005508889999999989, 0.0005509299999999981, 0.0005508890000000058, 0.0005508879999999994, 0.0005509029999999984, 0.0005508889999999989, 0.0005508889999999989, 0.0005508750000000062, 0.0005508749999999993, 0.0005508619999999992, 0.0005508889999999989, 0.0005508609999999997, 0.0005508890000000058, 0.0005508609999999997, 0.0005508749999999993, 0.0005508889999999989, 0.0005508749999999993, 0.0005509029999999984]</msg>
<status status="PASS" starttime="20201030 10:58:24.552" endtime="20201030 10:58:24.554"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.548" endtime="20201030 10:58:24.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.175" endtime="20201030 10:58:24.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.152" endtime="20201030 10:58:24.556"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:24.558" endtime="20201030 10:58:24.578"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.557" endtime="20201030 10:58:24.578"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.587" endtime="20201030 10:58:24.627"></status>
</kw>
<msg timestamp="20201030 10:58:24.628" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.585" endtime="20201030 10:58:24.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.630" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.629" endtime="20201030 10:58:24.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.631" endtime="20201030 10:58:24.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.582" endtime="20201030 10:58:24.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.580" endtime="20201030 10:58:24.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.641" endtime="20201030 10:58:24.928"></status>
</kw>
<msg timestamp="20201030 10:58:24.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017066931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017646431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.640" endtime="20201030 10:58:24.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017066931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017646431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:24.932" endtime="20201030 10:58:24.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.940" endtime="20201030 10:58:24.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.637" endtime="20201030 10:58:24.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.635" endtime="20201030 10:58:24.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:24.947" level="INFO">${PHILIP_RES} = [{'diff': 0.0005795000000000002}, {'diff': 0.0005794440000000019}, {'diff': 0.0005794440000000019}, {'diff': 0.0005794450000000013}, {'diff': 0.0005795139999999997}, {'diff': 0.0005794019999999997}, {...</msg>
<status status="PASS" starttime="20201030 10:58:24.944" endtime="20201030 10:58:24.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:24.951" level="INFO">${RESULT} = {'diff': [0.0005795000000000002, 0.0005794440000000019, 0.0005794440000000019, 0.0005794450000000013, 0.0005795139999999997, 0.0005794019999999997, 0.0005794580000000014, 0.0005794580000000014, 0.0005...</msg>
<status status="PASS" starttime="20201030 10:58:24.948" endtime="20201030 10:58:24.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.955" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:24.954" endtime="20201030 10:58:24.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:24.958" level="INFO">VALUE: [0.0005795000000000002, 0.0005794440000000019, 0.0005794440000000019, 0.0005794450000000013, 0.0005795139999999997, 0.0005794019999999997, 0.0005794580000000014, 0.0005794580000000014, 0.0005794590000000009, 0.0005794440000000019, 0.0005794439999999984, 0.0005794580000000014, 0.0005794450000000013, 0.0005794439999999984, 0.0005794860000000006, 0.000579472000000001, 0.0005794309999999983, 0.0005794169999999987, 0.000579457999999998, 0.000579472000000001, 0.0005794449999999979, 0.0005794309999999983, 0.0005794439999999984, 0.0005794720000000045, 0.0005793889999999996, 0.0005795140000000032, 0.0005794449999999979, 0.0005794580000000049, 0.0005794299999999988, 0.0005794449999999979, 0.0005794589999999974, 0.000579457999999998, 0.0005794439999999984, 0.000579457999999998, 0.0005794449999999979, 0.000579457999999998, 0.000579457999999998, 0.0005794309999999983, 0.0005794589999999974, 0.0005794309999999983, 0.000579457999999998, 0.000579457999999998, 0.000579375, 0.0005794589999999974, 0.0005794019999999997, 0.000579457999999998, 0.0005794449999999979, 0.0005794309999999983, 0.0005794440000000053, 0.0005794439999999984]</msg>
<status status="PASS" starttime="20201030 10:58:24.957" endtime="20201030 10:58:24.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.952" endtime="20201030 10:58:24.960"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.579" endtime="20201030 10:58:24.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.556" endtime="20201030 10:58:24.961"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:24.963" endtime="20201030 10:58:24.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.962" endtime="20201030 10:58:24.983"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:24.992" endtime="20201030 10:58:25.032"></status>
</kw>
<msg timestamp="20201030 10:58:25.032" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:24.990" endtime="20201030 10:58:25.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.035" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.033" endtime="20201030 10:58:25.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.036" endtime="20201030 10:58:25.038"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.987" endtime="20201030 10:58:25.038"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.985" endtime="20201030 10:58:25.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.045" endtime="20201030 10:58:25.331"></status>
</kw>
<msg timestamp="20201030 10:58:25.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017101681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017710389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.044" endtime="20201030 10:58:25.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017101681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017710389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.335" endtime="20201030 10:58:25.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.343" endtime="20201030 10:58:25.345"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.041" endtime="20201030 10:58:25.346"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.039" endtime="20201030 10:58:25.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:25.350" level="INFO">${PHILIP_RES} = [{'diff': 0.0006087079999999995}, {'diff': 0.000608721999999999}, {'diff': 0.000608721999999999}, {'diff': 0.0006087089999999989}, {'diff': 0.0006087359999999986}, {'diff': 0.0006087359999999986}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:25.347" endtime="20201030 10:58:25.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:25.355" level="INFO">${RESULT} = {'diff': [0.0006087079999999995, 0.000608721999999999, 0.000608721999999999, 0.0006087089999999989, 0.0006087359999999986, 0.0006087359999999986, 0.0006087359999999986, 0.000608721999999999, 0.0006087...</msg>
<status status="PASS" starttime="20201030 10:58:25.351" endtime="20201030 10:58:25.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.359" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:25.358" endtime="20201030 10:58:25.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.362" level="INFO">VALUE: [0.0006087079999999995, 0.000608721999999999, 0.000608721999999999, 0.0006087089999999989, 0.0006087359999999986, 0.0006087359999999986, 0.0006087359999999986, 0.000608721999999999, 0.0006087229999999985, 0.0006087229999999985, 0.0006087089999999989, 0.0006086670000000002, 0.0006087229999999985, 0.0006087229999999985, 0.0006086949999999994, 0.0006087089999999989, 0.0006087780000000008, 0.0006087089999999989, 0.0006087229999999985, 0.0006087079999999995, 0.000608721999999999, 0.0006087080000000029, 0.000608721999999999, 0.000608722000000006, 0.0006086800000000003, 0.0006087639999999978, 0.000608721999999999, 0.000608721999999999, 0.0006087079999999995, 0.000608721999999999, 0.0006087359999999986, 0.000608721999999999, 0.0006087079999999995, 0.0006087359999999986, 0.000608721999999999, 0.0006087359999999986, 0.000608721999999999, 0.0006087359999999986, 0.0006087359999999986, 0.000608721999999999, 0.0006087079999999995, 0.000608721999999999, 0.000608721999999999, 0.0006086949999999994, 0.000608721999999999, 0.0006087359999999986, 0.0006087359999999986, 0.0006087359999999986, 0.000608721999999999, 0.0006086670000000002]</msg>
<status status="PASS" starttime="20201030 10:58:25.360" endtime="20201030 10:58:25.363"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.356" endtime="20201030 10:58:25.363"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.984" endtime="20201030 10:58:25.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:24.961" endtime="20201030 10:58:25.364"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:25.366" endtime="20201030 10:58:25.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.365" endtime="20201030 10:58:25.386"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.395" endtime="20201030 10:58:25.437"></status>
</kw>
<msg timestamp="20201030 10:58:25.438" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.393" endtime="20201030 10:58:25.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.440" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.439" endtime="20201030 10:58:25.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.441" endtime="20201030 10:58:25.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.391" endtime="20201030 10:58:25.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.389" endtime="20201030 10:58:25.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.451" endtime="20201030 10:58:25.737"></status>
</kw>
<msg timestamp="20201030 10:58:25.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017025361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017664111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.449" endtime="20201030 10:58:25.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017025361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017664111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.742" endtime="20201030 10:58:25.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.750" endtime="20201030 10:58:25.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.447" endtime="20201030 10:58:25.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.445" endtime="20201030 10:58:25.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:25.757" level="INFO">${PHILIP_RES} = [{'diff': 0.0006387500000000004}, {'diff': 0.0006387090000000012}, {'diff': 0.0006386799999999991}, {'diff': 0.0006387500000000004}, {'diff': 0.0006387219999999978}, {'diff': 0.0006387090000000012}, {...</msg>
<status status="PASS" starttime="20201030 10:58:25.753" endtime="20201030 10:58:25.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:25.761" level="INFO">${RESULT} = {'diff': [0.0006387500000000004, 0.0006387090000000012, 0.0006386799999999991, 0.0006387500000000004, 0.0006387219999999978, 0.0006387090000000012, 0.000638666999999999, 0.0006387779999999996, 0.00063...</msg>
<status status="PASS" starttime="20201030 10:58:25.758" endtime="20201030 10:58:25.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.765" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:25.764" endtime="20201030 10:58:25.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.768" level="INFO">VALUE: [0.0006387500000000004, 0.0006387090000000012, 0.0006386799999999991, 0.0006387500000000004, 0.0006387219999999978, 0.0006387090000000012, 0.000638666999999999, 0.0006387779999999996, 0.0006387220000000013, 0.0006387219999999978, 0.000638681000000002, 0.0006387079999999982, 0.0006387360000000009, 0.0006387079999999982, 0.0006387220000000013, 0.0006387220000000013, 0.0006387090000000012, 0.0006386940000000021, 0.0006387229999999973, 0.0006387080000000017, 0.000638666999999999, 0.0006387219999999943, 0.0006387360000000009, 0.0006387080000000017, 0.0006387220000000013, 0.0006387360000000009, 0.0006387080000000017, 0.0006387080000000017, 0.0006387359999999939, 0.0006386950000000016, 0.0006387080000000017, 0.0006387079999999948, 0.0006387080000000017, 0.0006387090000000012, 0.0006386940000000021, 0.0006387089999999943, 0.0006387220000000013, 0.0006387230000000008, 0.000638652999999996, 0.0006387090000000012, 0.0006387360000000009, 0.0006387360000000009, 0.0006386939999999952, 0.0006387090000000012, 0.0006387080000000017, 0.0006387220000000013, 0.0006387360000000009, 0.0006387360000000009, 0.0006387220000000013, 0.0006387219999999943]</msg>
<status status="PASS" starttime="20201030 10:58:25.766" endtime="20201030 10:58:25.775"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.761" endtime="20201030 10:58:25.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.387" endtime="20201030 10:58:25.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.364" endtime="20201030 10:58:25.777"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:25.779" endtime="20201030 10:58:25.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.778" endtime="20201030 10:58:25.800"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.808" endtime="20201030 10:58:25.852"></status>
</kw>
<msg timestamp="20201030 10:58:25.852" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.806" endtime="20201030 10:58:25.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:25.855" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:25.853" endtime="20201030 10:58:25.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.856" endtime="20201030 10:58:25.858"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.804" endtime="20201030 10:58:25.859"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.802" endtime="20201030 10:58:25.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:25.866" endtime="20201030 10:58:26.152"></status>
</kw>
<msg timestamp="20201030 10:58:26.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017119653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017789139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:25.865" endtime="20201030 10:58:26.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017119653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017789139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.157" endtime="20201030 10:58:26.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.165" endtime="20201030 10:58:26.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.862" endtime="20201030 10:58:26.167"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.860" endtime="20201030 10:58:26.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:26.172" level="INFO">${PHILIP_RES} = [{'diff': 0.0006694860000000004}, {'diff': 0.0006694299999999986}, {'diff': 0.0006694299999999986}, {'diff': 0.0006694169999999985}, {'diff': 0.0006694030000000024}, {'diff': 0.0006694159999999991}, {...</msg>
<status status="PASS" starttime="20201030 10:58:26.168" endtime="20201030 10:58:26.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:26.176" level="INFO">${RESULT} = {'diff': [0.0006694860000000004, 0.0006694299999999986, 0.0006694299999999986, 0.0006694169999999985, 0.0006694030000000024, 0.0006694159999999991, 0.0006694439999999982, 0.0006694310000000016, 0.0006...</msg>
<status status="PASS" starttime="20201030 10:58:26.173" endtime="20201030 10:58:26.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.180" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:26.179" endtime="20201030 10:58:26.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.183" level="INFO">VALUE: [0.0006694860000000004, 0.0006694299999999986, 0.0006694299999999986, 0.0006694169999999985, 0.0006694030000000024, 0.0006694159999999991, 0.0006694439999999982, 0.0006694310000000016, 0.0006694169999999985, 0.0006694300000000021, 0.0006694169999999985, 0.0006694309999999981, 0.000669417000000002, 0.0006694299999999986, 0.0006694310000000016, 0.0006694590000000007, 0.0006694169999999985, 0.0006694300000000021, 0.0006693889999999994, 0.0006694169999999985, 0.0006694309999999981, 0.000669416000000006, 0.0006694169999999985, 0.0006694169999999985, 0.0006694299999999986, 0.0006694159999999991, 0.0006694170000000055, 0.0006694030000000059, 0.000669402999999999, 0.0006694579999999978, 0.000669402999999999, 0.0006694309999999981, 0.0006693890000000063, 0.0006694299999999986, 0.0006694449999999977, 0.0006694169999999985, 0.000669402999999999, 0.0006694300000000056, 0.0006694169999999985, 0.0006694860000000039, 0.000669402999999999, 0.0006694159999999991, 0.0006694169999999985, 0.0006694169999999985, 0.0006694299999999986, 0.0006694169999999985, 0.0006693889999999994, 0.000669431000000005, 0.0006694720000000043, 0.000669402999999999]</msg>
<status status="PASS" starttime="20201030 10:58:26.181" endtime="20201030 10:58:26.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.177" endtime="20201030 10:58:26.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.800" endtime="20201030 10:58:26.185"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:25.777" endtime="20201030 10:58:26.185"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:26.188" endtime="20201030 10:58:26.208"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.187" endtime="20201030 10:58:26.208"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.217" endtime="20201030 10:58:26.261"></status>
</kw>
<msg timestamp="20201030 10:58:26.262" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.215" endtime="20201030 10:58:26.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.264" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.263" endtime="20201030 10:58:26.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.265" endtime="20201030 10:58:26.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.212" endtime="20201030 10:58:26.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.210" endtime="20201030 10:58:26.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.275" endtime="20201030 10:58:26.560"></status>
</kw>
<msg timestamp="20201030 10:58:26.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017117986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017818861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.273" endtime="20201030 10:58:26.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017117986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017818861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.564" endtime="20201030 10:58:26.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.572" endtime="20201030 10:58:26.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.270" endtime="20201030 10:58:26.575"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.269" endtime="20201030 10:58:26.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:26.579" level="INFO">${PHILIP_RES} = [{'diff': 0.0007008749999999966}, {'diff': 0.0007008610000000005}, {'diff': 0.0007007919999999987}, {'diff': 0.000700847000000001}, {'diff': 0.000700847000000001}, {'diff': 0.0007008610000000005}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:26.576" endtime="20201030 10:58:26.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:26.584" level="INFO">${RESULT} = {'diff': [0.0007008749999999966, 0.0007008610000000005, 0.0007007919999999987, 0.000700847000000001, 0.000700847000000001, 0.0007008610000000005, 0.000700847000000001, 0.0007008190000000018, 0.0007008...</msg>
<status status="PASS" starttime="20201030 10:58:26.580" endtime="20201030 10:58:26.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.589" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:26.588" endtime="20201030 10:58:26.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.591" level="INFO">VALUE: [0.0007008749999999966, 0.0007008610000000005, 0.0007007919999999987, 0.000700847000000001, 0.000700847000000001, 0.0007008610000000005, 0.000700847000000001, 0.0007008190000000018, 0.0007008889999999997, 0.0007008609999999971, 0.0007008609999999971, 0.0007008610000000005, 0.0007008889999999997, 0.000700847000000001, 0.0007008340000000009, 0.0007008329999999979, 0.000700847000000001, 0.0007007920000000022, 0.0007008330000000014, 0.0007008329999999979, 0.0007008609999999971, 0.0007008469999999975, 0.0007009310000000019, 0.000700861000000004, 0.0007008340000000043, 0.0007008330000000049, 0.0007008340000000043, 0.000700861000000004, 0.0007008189999999984, 0.0007008189999999984, 0.0007008339999999974, 0.0007008609999999971, 0.0007008750000000036, 0.0007008620000000035, 0.0007008470000000044, 0.0007008330000000049, 0.0007008200000000048, 0.0007008470000000044, 0.0007008469999999975, 0.0007007919999999987, 0.0007008469999999975, 0.0007008329999999979, 0.0007008339999999974, 0.0007008329999999979, 0.0007008049999999988, 0.0007008340000000043, 0.0007008470000000044, 0.0007008330000000049, 0.0007008480000000039, 0.0007008609999999971]</msg>
<status status="PASS" starttime="20201030 10:58:26.590" endtime="20201030 10:58:26.592"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.585" endtime="20201030 10:58:26.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.209" endtime="20201030 10:58:26.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.186" endtime="20201030 10:58:26.593"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:26.596" endtime="20201030 10:58:26.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.594" endtime="20201030 10:58:26.616"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.624" endtime="20201030 10:58:26.670"></status>
</kw>
<msg timestamp="20201030 10:58:26.671" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.622" endtime="20201030 10:58:26.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.673" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:26.672" endtime="20201030 10:58:26.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.674" endtime="20201030 10:58:26.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.620" endtime="20201030 10:58:26.677"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.618" endtime="20201030 10:58:26.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.684" endtime="20201030 10:58:26.971"></status>
</kw>
<msg timestamp="20201030 10:58:26.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017113056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017846042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.682" endtime="20201030 10:58:26.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017113056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017846042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:26.975" endtime="20201030 10:58:26.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:26.983" endtime="20201030 10:58:26.985"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.680" endtime="20201030 10:58:26.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.678" endtime="20201030 10:58:26.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:26.990" level="INFO">${PHILIP_RES} = [{'diff': 0.000732985999999998}, {'diff': 0.000733000000000001}, {'diff': 0.0007329580000000023}, {'diff': 0.0007329870000000009}, {'diff': 0.0007329160000000001}, {'diff': 0.0007329719999999984}, {'d...</msg>
<status status="PASS" starttime="20201030 10:58:26.987" endtime="20201030 10:58:26.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:26.994" level="INFO">${RESULT} = {'diff': [0.000732985999999998, 0.000733000000000001, 0.0007329580000000023, 0.0007329870000000009, 0.0007329160000000001, 0.0007329719999999984, 0.000733000000000001, 0.000733000000000001, 0.00073298...</msg>
<status status="PASS" starttime="20201030 10:58:26.991" endtime="20201030 10:58:26.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:26.999" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:26.998" endtime="20201030 10:58:26.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.001" level="INFO">VALUE: [0.000732985999999998, 0.000733000000000001, 0.0007329580000000023, 0.0007329870000000009, 0.0007329160000000001, 0.0007329719999999984, 0.000733000000000001, 0.000733000000000001, 0.000732985999999998, 0.0007329860000000014, 0.0007329020000000006, 0.000732985999999998, 0.0007329719999999984, 0.0007329719999999984, 0.0007329860000000014, 0.000732985999999998, 0.0007329160000000001, 0.0007329720000000019, 0.0007329730000000048, 0.0007329439999999993, 0.0007329579999999988, 0.000732985999999998, 0.000732985999999998, 0.000732985999999998, 0.0007329719999999984, 0.0007330000000000045, 0.0007329720000000053, 0.0007329860000000049, 0.0007329579999999988, 0.000732985999999998, 0.000732985999999998, 0.0007329439999999993, 0.0007329299999999997, 0.0007329860000000049, 0.0007329730000000048, 0.0007329579999999988, 0.000732985999999998, 0.0007329729999999979, 0.0007329719999999984, 0.0007329719999999984, 0.000732985999999998, 0.0007329720000000053, 0.0007329720000000053, 0.000732985999999998, 0.000732985999999998, 0.0007329719999999984, 0.0007329589999999983, 0.0007329579999999988, 0.0007329580000000058, 0.0007329579999999988]</msg>
<status status="PASS" starttime="20201030 10:58:27.000" endtime="20201030 10:58:27.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.995" endtime="20201030 10:58:27.003"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.616" endtime="20201030 10:58:27.003"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:26.593" endtime="20201030 10:58:27.003"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:27.006" endtime="20201030 10:58:27.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.004" endtime="20201030 10:58:27.026"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.034" endtime="20201030 10:58:27.084"></status>
</kw>
<msg timestamp="20201030 10:58:27.085" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.033" endtime="20201030 10:58:27.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.087" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.086" endtime="20201030 10:58:27.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.089" endtime="20201030 10:58:27.091"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.030" endtime="20201030 10:58:27.092"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.028" endtime="20201030 10:58:27.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.099" endtime="20201030 10:58:27.385"></status>
</kw>
<msg timestamp="20201030 10:58:27.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017145444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017911333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.097" endtime="20201030 10:58:27.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017145444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017911333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.389" endtime="20201030 10:58:27.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.397" endtime="20201030 10:58:27.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.095" endtime="20201030 10:58:27.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.093" endtime="20201030 10:58:27.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:27.404" level="INFO">${PHILIP_RES} = [{'diff': 0.0007658890000000022}, {'diff': 0.0007658200000000004}, {'diff': 0.0007658189999999974}, {'diff': 0.0007658190000000009}, {'diff': 0.000765834}, {'diff': 0.0007658330000000005}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 10:58:27.400" endtime="20201030 10:58:27.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:27.408" level="INFO">${RESULT} = {'diff': [0.0007658890000000022, 0.0007658200000000004, 0.0007658189999999974, 0.0007658190000000009, 0.000765834, 0.0007658330000000005, 0.0007658190000000009, 0.000765834, 0.000765832999999997, 0.00...</msg>
<status status="PASS" starttime="20201030 10:58:27.405" endtime="20201030 10:58:27.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.412" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:27.411" endtime="20201030 10:58:27.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.415" level="INFO">VALUE: [0.0007658890000000022, 0.0007658200000000004, 0.0007658189999999974, 0.0007658190000000009, 0.000765834, 0.0007658330000000005, 0.0007658190000000009, 0.000765834, 0.000765832999999997, 0.0007658190000000009, 0.0007658200000000004, 0.0007658200000000004, 0.0007658330000000005, 0.0007658190000000009, 0.0007658749999999992, 0.0007658189999999974, 0.0007658190000000009, 0.0007658340000000034, 0.000765818999999994, 0.0007658190000000009, 0.000765834, 0.0007658200000000004, 0.0007658190000000009, 0.0007658190000000009, 0.000765834, 0.0007658330000000005, 0.0007657630000000026, 0.0007658609999999996, 0.0007658190000000009, 0.0007657640000000021, 0.000765834, 0.0007658330000000005, 0.000765818999999994, 0.0007658609999999996, 0.0007658330000000005, 0.0007658470000000001, 0.0007658330000000005, 0.0007658200000000004, 0.0007658330000000005, 0.0007658470000000001, 0.0007657920000000012, 0.0007658060000000008, 0.0007658330000000005, 0.0007658200000000004, 0.0007658330000000005, 0.0007658050000000013, 0.000765834, 0.0007658330000000005, 0.0007658470000000001, 0.0007658200000000004]</msg>
<status status="PASS" starttime="20201030 10:58:27.413" endtime="20201030 10:58:27.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.409" endtime="20201030 10:58:27.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.026" endtime="20201030 10:58:27.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.004" endtime="20201030 10:58:27.418"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:27.420" endtime="20201030 10:58:27.439"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.418" endtime="20201030 10:58:27.440"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.448" endtime="20201030 10:58:27.498"></status>
</kw>
<msg timestamp="20201030 10:58:27.499" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.447" endtime="20201030 10:58:27.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.501" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.500" endtime="20201030 10:58:27.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.502" endtime="20201030 10:58:27.504"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.444" endtime="20201030 10:58:27.504"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.442" endtime="20201030 10:58:27.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.511" endtime="20201030 10:58:27.806"></status>
</kw>
<msg timestamp="20201030 10:58:27.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017135514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017934944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.510" endtime="20201030 10:58:27.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017135514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017934944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.816" endtime="20201030 10:58:27.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.835" endtime="20201030 10:58:27.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.507" endtime="20201030 10:58:27.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.505" endtime="20201030 10:58:27.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:27.849" level="INFO">${PHILIP_RES} = [{'diff': 0.0007994300000000003}, {'diff': 0.000799389000000001}, {'diff': 0.000799389000000001}, {'diff': 0.0007993750000000015}, {'diff': 0.0007993609999999984}, {'diff': 0.000799389000000001}, {'di...</msg>
<status status="PASS" starttime="20201030 10:58:27.842" endtime="20201030 10:58:27.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:27.860" level="INFO">${RESULT} = {'diff': [0.0007994300000000003, 0.000799389000000001, 0.000799389000000001, 0.0007993750000000015, 0.0007993609999999984, 0.000799389000000001, 0.0007994030000000006, 0.0007993750000000015, 0.0007993...</msg>
<status status="PASS" starttime="20201030 10:58:27.851" endtime="20201030 10:58:27.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.869" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:27.867" endtime="20201030 10:58:27.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.875" level="INFO">VALUE: [0.0007994300000000003, 0.000799389000000001, 0.000799389000000001, 0.0007993750000000015, 0.0007993609999999984, 0.000799389000000001, 0.0007994030000000006, 0.0007993750000000015, 0.0007993889999999976, 0.0007993879999999981, 0.0007993889999999976, 0.0007993889999999976, 0.0007994030000000006, 0.0007993880000000016, 0.0007994160000000007, 0.0007993750000000015, 0.0007993889999999976, 0.000799374999999998, 0.000799374999999998, 0.0007993889999999976, 0.000799374999999998, 0.000799374999999998, 0.0007993879999999981, 0.0007993890000000045, 0.0007993889999999976, 0.0007994030000000041, 0.0007993609999999984, 0.000799388000000005, 0.000799374999999998, 0.0007993890000000045, 0.000799374999999998, 0.0007993890000000045, 0.0007994029999999971, 0.0007993890000000045, 0.0007993889999999976, 0.0007994020000000046, 0.0007993889999999976, 0.0007993889999999976, 0.0007994029999999971, 0.0007993889999999976, 0.0007994019999999977, 0.0007993889999999976, 0.0007993890000000045, 0.0007993889999999976, 0.0007994170000000037, 0.0007994029999999971, 0.0007994170000000037, 0.0007993609999999984, 0.0007993890000000045, 0.0007994029999999971]</msg>
<status status="PASS" starttime="20201030 10:58:27.872" endtime="20201030 10:58:27.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.862" endtime="20201030 10:58:27.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.441" endtime="20201030 10:58:27.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.418" endtime="20201030 10:58:27.878"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:27.880" endtime="20201030 10:58:27.900"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.879" endtime="20201030 10:58:27.900"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.909" endtime="20201030 10:58:27.961"></status>
</kw>
<msg timestamp="20201030 10:58:27.962" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.907" endtime="20201030 10:58:27.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:27.964" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:27.963" endtime="20201030 10:58:27.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.966" endtime="20201030 10:58:27.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.904" endtime="20201030 10:58:27.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.902" endtime="20201030 10:58:27.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:27.976" endtime="20201030 10:58:28.266"></status>
</kw>
<msg timestamp="20201030 10:58:28.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017097625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017931347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:27.974" endtime="20201030 10:58:28.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017097625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017931347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.270" endtime="20201030 10:58:28.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.278" endtime="20201030 10:58:28.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.971" endtime="20201030 10:58:28.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.969" endtime="20201030 10:58:28.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:28.285" level="INFO">${PHILIP_RES} = [{'diff': 0.0008337219999999985}, {'diff': 0.0008336670000000032}, {'diff': 0.0008336949999999989}, {'diff': 0.0008336670000000032}, {'diff': 0.0008337230000000015}, {'diff': 0.0008336799999999998}, {...</msg>
<status status="PASS" starttime="20201030 10:58:28.282" endtime="20201030 10:58:28.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:28.289" level="INFO">${RESULT} = {'diff': [0.0008337219999999985, 0.0008336670000000032, 0.0008336949999999989, 0.0008336670000000032, 0.0008337230000000015, 0.0008336799999999998, 0.0008336669999999997, 0.0008336799999999998, 0.0008...</msg>
<status status="PASS" starttime="20201030 10:58:28.286" endtime="20201030 10:58:28.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.293" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:28.292" endtime="20201030 10:58:28.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.296" level="INFO">VALUE: [0.0008337219999999985, 0.0008336670000000032, 0.0008336949999999989, 0.0008336670000000032, 0.0008337230000000015, 0.0008336799999999998, 0.0008336669999999997, 0.0008336799999999998, 0.0008336669999999997, 0.0008336660000000003, 0.0008336669999999997, 0.000833625000000001, 0.0008336669999999997, 0.0008336669999999997, 0.000833625000000001, 0.0008336390000000006, 0.0008337080000000024, 0.0008336529999999967, 0.0008336670000000032, 0.0008336940000000029, 0.0008336810000000028, 0.0008336659999999968, 0.0008336669999999963, 0.0008336660000000037, 0.0008336670000000032, 0.0008336659999999968, 0.0008336669999999963, 0.000833610999999998, 0.0008336520000000042, 0.0008336530000000036, 0.0008336659999999968, 0.0008336669999999963, 0.0008336530000000036, 0.0008336530000000036, 0.0008336669999999963, 0.0008336799999999964, 0.0008336670000000032, 0.0008336800000000033, 0.0008336529999999967, 0.0008336529999999967, 0.0008336809999999958, 0.0008336670000000032, 0.0008336800000000033, 0.0008336809999999958, 0.0008336519999999972, 0.0008336810000000028, 0.0008336800000000033, 0.0008336810000000028, 0.0008336799999999964, 0.0008336799999999964]</msg>
<status status="PASS" starttime="20201030 10:58:28.294" endtime="20201030 10:58:28.297"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.290" endtime="20201030 10:58:28.297"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.901" endtime="20201030 10:58:28.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:27.878" endtime="20201030 10:58:28.298"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:28.300" endtime="20201030 10:58:28.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.299" endtime="20201030 10:58:28.320"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.329" endtime="20201030 10:58:28.383"></status>
</kw>
<msg timestamp="20201030 10:58:28.384" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.327" endtime="20201030 10:58:28.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.386" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.385" endtime="20201030 10:58:28.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.387" endtime="20201030 10:58:28.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.324" endtime="20201030 10:58:28.390"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.323" endtime="20201030 10:58:28.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.398" endtime="20201030 10:58:28.700"></status>
</kw>
<msg timestamp="20201030 10:58:28.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017306486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018175181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.396" endtime="20201030 10:58:28.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017306486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018175181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.705" endtime="20201030 10:58:28.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.713" endtime="20201030 10:58:28.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.393" endtime="20201030 10:58:28.715"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.391" endtime="20201030 10:58:28.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:28.719" level="INFO">${PHILIP_RES} = [{'diff': 0.0008686949999999992}, {'diff': 0.0008686380000000014}, {'diff': 0.0008686660000000006}, {'diff': 0.0008685970000000022}, {'diff': 0.0008686250000000013}, {'diff': 0.0008686809999999996}, {...</msg>
<status status="PASS" starttime="20201030 10:58:28.716" endtime="20201030 10:58:28.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:28.723" level="INFO">${RESULT} = {'diff': [0.0008686949999999992, 0.0008686380000000014, 0.0008686660000000006, 0.0008685970000000022, 0.0008686250000000013, 0.0008686809999999996, 0.0008686530000000005, 0.000868667, 0.000868667, 0.0...</msg>
<status status="PASS" starttime="20201030 10:58:28.720" endtime="20201030 10:58:28.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.728" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:28.727" endtime="20201030 10:58:28.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.730" level="INFO">VALUE: [0.0008686949999999992, 0.0008686380000000014, 0.0008686660000000006, 0.0008685970000000022, 0.0008686250000000013, 0.0008686809999999996, 0.0008686530000000005, 0.000868667, 0.000868667, 0.0008686389999999974, 0.0008686530000000005, 0.0008686530000000005, 0.0008686800000000001, 0.0008686939999999997, 0.0008686390000000009, 0.0008686380000000014, 0.0008686520000000045, 0.0008686809999999962, 0.000868652999999997, 0.000868652999999997, 0.0008686670000000035, 0.000868653000000004, 0.0008686390000000044, 0.000868652999999997, 0.0008686669999999966, 0.0008687079999999958, 0.0008687079999999958, 0.000868666000000004, 0.000868666000000004, 0.0008686249999999979, 0.0008686669999999966, 0.0008686389999999974, 0.0008686389999999974, 0.0008687360000000019, 0.000868653000000004, 0.0008686669999999966, 0.0008687220000000023, 0.000868652999999997, 0.0008686799999999967, 0.0008686670000000035, 0.000868653000000004, 0.0008686800000000036, 0.0008686799999999967, 0.0008686519999999975, 0.0008686389999999974, 0.0008686810000000031, 0.000868653000000004, 0.000868652999999997, 0.0008686669999999966, 0.0008686670000000035]</msg>
<status status="PASS" starttime="20201030 10:58:28.729" endtime="20201030 10:58:28.732"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.724" endtime="20201030 10:58:28.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.321" endtime="20201030 10:58:28.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.298" endtime="20201030 10:58:28.733"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:28.736" endtime="20201030 10:58:28.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.734" endtime="20201030 10:58:28.756"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.764" endtime="20201030 10:58:28.821"></status>
</kw>
<msg timestamp="20201030 10:58:28.822" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.763" endtime="20201030 10:58:28.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:28.824" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:28.823" endtime="20201030 10:58:28.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.825" endtime="20201030 10:58:28.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.760" endtime="20201030 10:58:28.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.758" endtime="20201030 10:58:28.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:28.835" endtime="20201030 10:58:29.121"></status>
</kw>
<msg timestamp="20201030 10:58:29.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017768375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018672778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:28.833" endtime="20201030 10:58:29.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017768375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018672778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.125" endtime="20201030 10:58:29.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.137" endtime="20201030 10:58:29.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.830" endtime="20201030 10:58:29.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.829" endtime="20201030 10:58:29.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:29.144" level="INFO">${PHILIP_RES} = [{'diff': 0.0009044030000000015}, {'diff': 0.0009043749999999989}, {'diff': 0.0009043049999999976}, {'diff': 0.0009043610000000028}, {'diff': 0.0009043749999999989}, {'diff': 0.0009043609999999994}, {...</msg>
<status status="PASS" starttime="20201030 10:58:29.140" endtime="20201030 10:58:29.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:29.149" level="INFO">${RESULT} = {'diff': [0.0009044030000000015, 0.0009043749999999989, 0.0009043049999999976, 0.0009043610000000028, 0.0009043749999999989, 0.0009043609999999994, 0.0009043609999999994, 0.0009043750000000024, 0.0009...</msg>
<status status="PASS" starttime="20201030 10:58:29.145" endtime="20201030 10:58:29.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.153" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:29.152" endtime="20201030 10:58:29.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.156" level="INFO">VALUE: [0.0009044030000000015, 0.0009043749999999989, 0.0009043049999999976, 0.0009043610000000028, 0.0009043749999999989, 0.0009043609999999994, 0.0009043609999999994, 0.0009043750000000024, 0.0009043749999999989, 0.0009043469999999998, 0.0009043610000000028, 0.0009043749999999989, 0.0009043749999999989, 0.0009042919999999975, 0.0009043749999999989, 0.0009043609999999994, 0.0009043469999999998, 0.0009043749999999989, 0.0009043049999999941, 0.0009044169999999976, 0.0009043749999999989, 0.0009043339999999997, 0.0009043469999999998, 0.0009043609999999994, 0.0009043609999999994, 0.0009043609999999994, 0.0009043609999999994, 0.0009043339999999997, 0.0009044169999999976, 0.0009043610000000063, 0.000904387999999999, 0.0009043749999999989, 0.0009043469999999998, 0.0009043749999999989, 0.0009044159999999982, 0.0009043609999999994, 0.0009043609999999994, 0.0009043609999999994, 0.0009043609999999994, 0.0009043749999999989, 0.0009043609999999994, 0.0009043619999999988, 0.0009043609999999994, 0.0009043609999999994, 0.0009043749999999989, 0.0009043469999999998, 0.0009043889999999985, 0.0009043200000000001, 0.0009043469999999998, 0.0009043749999999989]</msg>
<status status="PASS" starttime="20201030 10:58:29.154" endtime="20201030 10:58:29.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.150" endtime="20201030 10:58:29.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.756" endtime="20201030 10:58:29.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:28.734" endtime="20201030 10:58:29.158"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:29.160" endtime="20201030 10:58:29.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.159" endtime="20201030 10:58:29.180"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.189" endtime="20201030 10:58:29.247"></status>
</kw>
<msg timestamp="20201030 10:58:29.247" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.187" endtime="20201030 10:58:29.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.250" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.249" endtime="20201030 10:58:29.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.251" endtime="20201030 10:58:29.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.184" endtime="20201030 10:58:29.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.182" endtime="20201030 10:58:29.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.260" endtime="20201030 10:58:29.566"></status>
</kw>
<msg timestamp="20201030 10:58:29.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017193514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018134361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.259" endtime="20201030 10:58:29.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017193514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018134361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.570" endtime="20201030 10:58:29.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.578" endtime="20201030 10:58:29.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.256" endtime="20201030 10:58:29.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.254" endtime="20201030 10:58:29.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:29.585" level="INFO">${PHILIP_RES} = [{'diff': 0.0009408470000000016}, {'diff': 0.0009407779999999998}, {'diff': 0.0009407919999999993}, {'diff': 0.0009407909999999998}, {'diff': 0.0009407770000000003}, {'diff': 0.0009407779999999998}, {...</msg>
<status status="PASS" starttime="20201030 10:58:29.582" endtime="20201030 10:58:29.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:29.589" level="INFO">${RESULT} = {'diff': [0.0009408470000000016, 0.0009407779999999998, 0.0009407919999999993, 0.0009407909999999998, 0.0009407770000000003, 0.0009407779999999998, 0.0009408059999999989, 0.0009407919999999993, 0.0009...</msg>
<status status="PASS" starttime="20201030 10:58:29.586" endtime="20201030 10:58:29.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.593" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:29.592" endtime="20201030 10:58:29.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.596" level="INFO">VALUE: [0.0009408470000000016, 0.0009407779999999998, 0.0009407919999999993, 0.0009407909999999998, 0.0009407770000000003, 0.0009407779999999998, 0.0009408059999999989, 0.0009407919999999993, 0.0009407909999999998, 0.0009407499999999971, 0.0009407779999999998, 0.0009407779999999998, 0.0009407499999999971, 0.0009407919999999993, 0.0009408060000000024, 0.0009408060000000024, 0.0009407909999999964, 0.0009407639999999967, 0.0009407780000000032, 0.0009407920000000028, 0.0009407770000000037, 0.000940804999999996, 0.0009407639999999967, 0.0009407640000000037, 0.0009407910000000033, 0.0009407639999999967, 0.0009407779999999963, 0.0009408060000000024, 0.0009407920000000028, 0.0009407910000000033, 0.0009407779999999963, 0.0009407779999999963, 0.0009407779999999963, 0.0009407500000000041, 0.0009408060000000024, 0.0009407919999999959, 0.0009407919999999959, 0.0009407220000000049, 0.0009407640000000037, 0.0009408060000000024, 0.0009407919999999959, 0.0009407909999999964, 0.0009407780000000032, 0.0009408060000000024, 0.0009407920000000028, 0.0009407909999999964, 0.000940833000000002, 0.0009407780000000032, 0.0009408190000000094, 0.0009407909999999964]</msg>
<status status="PASS" starttime="20201030 10:58:29.595" endtime="20201030 10:58:29.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.590" endtime="20201030 10:58:29.597"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.181" endtime="20201030 10:58:29.598"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.158" endtime="20201030 10:58:29.598"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:29.600" endtime="20201030 10:58:29.620"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.599" endtime="20201030 10:58:29.620"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.629" endtime="20201030 10:58:29.689"></status>
</kw>
<msg timestamp="20201030 10:58:29.689" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.627" endtime="20201030 10:58:29.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:29.692" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:29.690" endtime="20201030 10:58:29.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.693" endtime="20201030 10:58:29.695"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.624" endtime="20201030 10:58:29.696"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.623" endtime="20201030 10:58:29.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:29.703" endtime="20201030 10:58:29.989"></status>
</kw>
<msg timestamp="20201030 10:58:29.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017211708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018189667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.702" endtime="20201030 10:58:29.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017211708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018189667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:29.994" endtime="20201030 10:58:30.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.002" endtime="20201030 10:58:30.004"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.699" endtime="20201030 10:58:30.005"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.697" endtime="20201030 10:58:30.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:30.009" level="INFO">${PHILIP_RES} = [{'diff': 0.0009779590000000005}, {'diff': 0.0009779579999999975}, {'diff': 0.0009778470000000004}, {'diff': 0.0009779169999999983}, {'diff': 0.0009779169999999983}, {'diff': 0.000977958000000001}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:30.006" endtime="20201030 10:58:30.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:30.013" level="INFO">${RESULT} = {'diff': [0.0009779590000000005, 0.0009779579999999975, 0.0009778470000000004, 0.0009779169999999983, 0.0009779169999999983, 0.000977958000000001, 0.0009779299999999984, 0.0009779300000000019, 0.00097...</msg>
<status status="PASS" starttime="20201030 10:58:30.010" endtime="20201030 10:58:30.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.018" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:30.016" endtime="20201030 10:58:30.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.020" level="INFO">VALUE: [0.0009779590000000005, 0.0009779579999999975, 0.0009778470000000004, 0.0009779169999999983, 0.0009779169999999983, 0.000977958000000001, 0.0009779299999999984, 0.0009779300000000019, 0.0009779160000000023, 0.0009779440000000014, 0.0009779310000000013, 0.0009779170000000018, 0.000977945000000001, 0.0009779310000000013, 0.0009779170000000018, 0.0009779300000000019, 0.0009779160000000023, 0.0009779160000000023, 0.0009779030000000022, 0.0009779310000000013, 0.0009779310000000013, 0.0009779170000000018, 0.000977958000000001, 0.0009779309999999944, 0.0009779160000000023, 0.0009779019999999958, 0.0009779020000000027, 0.000977929999999995, 0.0009779170000000018, 0.0009779029999999952, 0.000977958000000001, 0.0009779030000000022, 0.0009779170000000018, 0.0009779170000000018, 0.0009779300000000019, 0.0009779020000000027, 0.0009779860000000001, 0.0009779030000000022, 0.0009779169999999948, 0.0009779170000000018, 0.0009779169999999948, 0.0009779170000000018, 0.0009779169999999948, 0.0009779160000000023, 0.0009779440000000084, 0.0009779720000000075, 0.0009779310000000013, 0.0009779170000000087, 0.0009779860000000001, 0.0009779450000000078]</msg>
<status status="PASS" starttime="20201030 10:58:30.019" endtime="20201030 10:58:30.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.014" endtime="20201030 10:58:30.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.621" endtime="20201030 10:58:30.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:29.598" endtime="20201030 10:58:30.023"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:30.025" endtime="20201030 10:58:30.045"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.024" endtime="20201030 10:58:30.045"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.054" endtime="20201030 10:58:30.116"></status>
</kw>
<msg timestamp="20201030 10:58:30.117" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.052" endtime="20201030 10:58:30.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.119" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.118" endtime="20201030 10:58:30.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.120" endtime="20201030 10:58:30.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.049" endtime="20201030 10:58:30.122"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.047" endtime="20201030 10:58:30.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.129" endtime="20201030 10:58:30.436"></status>
</kw>
<msg timestamp="20201030 10:58:30.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017179903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018195722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.128" endtime="20201030 10:58:30.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017179903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018195722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.440" endtime="20201030 10:58:30.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.448" endtime="20201030 10:58:30.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.125" endtime="20201030 10:58:30.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.123" endtime="20201030 10:58:30.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:30.455" level="INFO">${PHILIP_RES} = [{'diff': 0.0010158190000000011}, {'diff': 0.0010157639999999989}, {'diff': 0.0010157229999999996}, {'diff': 0.001015776999999999}, {'diff': 0.0010157640000000023}, {'diff': 0.0010158330000000007}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:30.452" endtime="20201030 10:58:30.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:30.460" level="INFO">${RESULT} = {'diff': [0.0010158190000000011, 0.0010157639999999989, 0.0010157229999999996, 0.001015776999999999, 0.0010157640000000023, 0.0010158330000000007, 0.0010157639999999989, 0.0010157629999999994, 0.00101...</msg>
<status status="PASS" starttime="20201030 10:58:30.456" endtime="20201030 10:58:30.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.464" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:30.463" endtime="20201030 10:58:30.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.467" level="INFO">VALUE: [0.0010158190000000011, 0.0010157639999999989, 0.0010157229999999996, 0.001015776999999999, 0.0010157640000000023, 0.0010158330000000007, 0.0010157639999999989, 0.0010157629999999994, 0.0010157920000000015, 0.0010156950000000005, 0.0010157909999999985, 0.0010157359999999997, 0.001015778000000002, 0.0010157639999999989, 0.0010157640000000023, 0.0010157359999999963, 0.0010157640000000023, 0.0010157500000000028, 0.0010158189999999942, 0.0010157500000000028, 0.0010157640000000023, 0.001015778000000002, 0.0010157500000000028, 0.001015777999999995, 0.001015778000000002, 0.0010157500000000028, 0.001015762999999996, 0.0010157640000000023, 0.0010157359999999963, 0.001015778000000002, 0.0010157220000000036, 0.0010157499999999958, 0.0010158470000000003, 0.001015791000000002, 0.001015778000000002, 0.0010157500000000028, 0.001015777999999995, 0.001015778000000002, 0.0010157499999999958, 0.001015778000000002, 0.001015778000000002, 0.0010157499999999958, 0.0010157640000000023, 0.0010157920000000015, 0.0010157640000000023, 0.0010157499999999958, 0.001015777999999995, 0.0010157640000000023, 0.0010157640000000023, 0.0010157769999999955]</msg>
<status status="PASS" starttime="20201030 10:58:30.465" endtime="20201030 10:58:30.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.461" endtime="20201030 10:58:30.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.046" endtime="20201030 10:58:30.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.023" endtime="20201030 10:58:30.469"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:30.471" endtime="20201030 10:58:30.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.470" endtime="20201030 10:58:30.491"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.500" endtime="20201030 10:58:30.562"></status>
</kw>
<msg timestamp="20201030 10:58:30.562" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.498" endtime="20201030 10:58:30.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.565" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:30.563" endtime="20201030 10:58:30.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.566" endtime="20201030 10:58:30.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.495" endtime="20201030 10:58:30.568"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.493" endtime="20201030 10:58:30.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.575" endtime="20201030 10:58:30.862"></status>
</kw>
<msg timestamp="20201030 10:58:30.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017157056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018211486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.574" endtime="20201030 10:58:30.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017157056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018211486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:30.866" endtime="20201030 10:58:30.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:30.874" endtime="20201030 10:58:30.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.571" endtime="20201030 10:58:30.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.569" endtime="20201030 10:58:30.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 10:58:30.881" level="INFO">${PHILIP_RES} = [{'diff': 0.0010544299999999986}, {'diff': 0.0010542780000000022}, {'diff': 0.0010543340000000005}, {'diff': 0.0010543470000000006}, {'diff': 0.001054318999999998}, {'diff': 0.0010543340000000005}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:30.878" endtime="20201030 10:58:30.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:30.885" level="INFO">${RESULT} = {'diff': [0.0010544299999999986, 0.0010542780000000022, 0.0010543340000000005, 0.0010543470000000006, 0.001054318999999998, 0.0010543340000000005, 0.0010543470000000006, 0.0010543469999999971, 0.00105...</msg>
<status status="PASS" starttime="20201030 10:58:30.882" endtime="20201030 10:58:30.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.890" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 10:58:30.888" endtime="20201030 10:58:30.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:30.892" level="INFO">VALUE: [0.0010544299999999986, 0.0010542780000000022, 0.0010543340000000005, 0.0010543470000000006, 0.001054318999999998, 0.0010543340000000005, 0.0010543470000000006, 0.0010543469999999971, 0.0010543610000000002, 0.001054333000000001, 0.0010543470000000006, 0.0010543340000000005, 0.0010543469999999971, 0.0010543060000000049, 0.0010543609999999967, 0.0010543329999999976, 0.0010543329999999976, 0.001054417000000002, 0.0010543330000000045, 0.0010543329999999976, 0.001054334000000004, 0.0010542779999999988, 0.0010543330000000045, 0.0010542909999999989, 0.0010543329999999976, 0.001054305999999998, 0.001054333999999997, 0.001054347000000004, 0.0010543329999999976, 0.001054347000000004, 0.0010543329999999976, 0.001054334000000004, 0.0010543329999999976, 0.0010543469999999971, 0.001054334000000004, 0.0010543329999999976, 0.001054347000000004, 0.001054333999999997, 0.0010543330000000045, 0.0010543329999999976, 0.001054333999999997, 0.0010543469999999971, 0.0010543330000000045, 0.001054334000000004, 0.0010543749999999963, 0.0010543749999999963, 0.0010543749999999963, 0.0010543330000000045, 0.0010543610000000037, 0.001054334000000004]</msg>
<status status="PASS" starttime="20201030 10:58:30.891" endtime="20201030 10:58:30.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.886" endtime="20201030 10:58:30.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.492" endtime="20201030 10:58:30.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:30.469" endtime="20201030 10:58:30.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:11.060" endtime="20201030 10:58:30.931"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:06.832" endtime="20201030 10:58:30.932" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:57:16.761" endtime="20201030 10:58:30.943"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:58:31.021" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:58:31.029" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:58:32.100" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:58:31.019" endtime="20201030 10:58:32.101"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:58:32.104" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:58:32.102" endtime="20201030 10:58:32.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.018" endtime="20201030 10:58:32.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:32.107" endtime="20201030 10:58:32.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.105" endtime="20201030 10:58:32.295"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:32.307" endtime="20201030 10:58:35.331"></status>
</kw>
<msg timestamp="20201030 10:58:35.332" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:32.306" endtime="20201030 10:58:35.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.338" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.335" endtime="20201030 10:58:35.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:35.345" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:35.340" endtime="20201030 10:58:35.345"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:32.303" endtime="20201030 10:58:35.347"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:32.301" endtime="20201030 10:58:35.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.300" endtime="20201030 10:58:35.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:35.359" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:35.358" endtime="20201030 10:58:35.360"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.351" endtime="20201030 10:58:35.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.299" endtime="20201030 10:58:35.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.298" endtime="20201030 10:58:35.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.363" endtime="20201030 10:58:35.366"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.297" endtime="20201030 10:58:35.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.369" endtime="20201030 10:58:35.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:32.295" endtime="20201030 10:58:35.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:31.016" endtime="20201030 10:58:35.374"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:35.387" endtime="20201030 10:58:35.410"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.384" endtime="20201030 10:58:35.411"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:35.440" endtime="20201030 10:58:38.468"></status>
</kw>
<msg timestamp="20201030 10:58:38.469" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:35.437" endtime="20201030 10:58:38.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.474" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.471" endtime="20201030 10:58:38.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.481" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:58:38.477" endtime="20201030 10:58:38.482"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:35.431" endtime="20201030 10:58:38.483"></status>
</kw>
<status status="FAIL" starttime="20201030 10:58:35.426" endtime="20201030 10:58:38.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.423" endtime="20201030 10:58:38.485"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:58:38.493" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:58:38.491" endtime="20201030 10:58:38.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.487" endtime="20201030 10:58:38.494"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.421" endtime="20201030 10:58:38.495"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.420" endtime="20201030 10:58:38.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.497" endtime="20201030 10:58:38.500"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.417" endtime="20201030 10:58:38.501"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.413" endtime="20201030 10:58:38.502"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:35.381" endtime="20201030 10:58:38.503"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.528" endtime="20201030 10:58:38.547"></status>
</kw>
<msg timestamp="20201030 10:58:38.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.525" endtime="20201030 10:58:38.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.550" endtime="20201030 10:58:38.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.556" endtime="20201030 10:58:38.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.516" endtime="20201030 10:58:38.560"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.511" endtime="20201030 10:58:38.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.576" endtime="20201030 10:58:38.887"></status>
</kw>
<msg timestamp="20201030 10:58:38.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.131960917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.131964222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.572" endtime="20201030 10:58:38.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.131960917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.131964222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.892" endtime="20201030 10:58:38.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.900" endtime="20201030 10:58:38.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.567" endtime="20201030 10:58:38.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.563" endtime="20201030 10:58:38.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:38.907" level="INFO">${RESULT} = [{'diff': 3.305000000342062e-06}, {'diff': 3.0140000002454315e-06}, {'diff': 2.750000000162345e-06}, {'diff': 2.7369999999748984e-06}, {'diff': 3.028000000071529e-06}, {'diff': 2.735999999892158e-06},...</msg>
<status status="PASS" starttime="20201030 10:58:38.904" endtime="20201030 10:58:38.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:38.911" level="INFO">${ACCURACY} = {'diff': [3.305000000342062e-06, 3.0140000002454315e-06, 2.750000000162345e-06, 2.7369999999748984e-06, 3.028000000071529e-06, 2.735999999892158e-06, 2.457999999982974e-06, 3.3059999999807133e-06, 2.4...</msg>
<status status="PASS" starttime="20201030 10:58:38.908" endtime="20201030 10:58:38.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.917" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 10:58:38.916" endtime="20201030 10:58:38.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.919" level="INFO">VALUE: [3.305000000342062e-06, 3.0140000002454315e-06, 2.750000000162345e-06, 2.7369999999748984e-06, 3.028000000071529e-06, 2.735999999892158e-06, 2.457999999982974e-06, 3.3059999999807133e-06, 2.457999999982974e-06, 3.028000000071529e-06, 3.028000000071529e-06, 2.4300000003307787e-06, 2.4449999997955274e-06, 2.7219999996219713e-06, 2.735999999892158e-06, 2.4300000003307787e-06, 2.7360000003362472e-06, 2.4440000001568762e-06, 2.457999999982974e-06, 2.443999999712787e-06, 2.4450000002396166e-06, 2.735999999892158e-06, 2.443999999712787e-06, 2.4449999997955274e-06, 3.055000000085073e-06, 3.097000000007455e-06, 2.4299999998866895e-06, 2.7499999997182556e-06, 2.4719999998090714e-06, 3.028000000071529e-06, 3.3189999997240704e-06, 3.028000000071529e-06, 2.4440000001568762e-06, 2.443999999712787e-06, 2.457999999982974e-06, 3.3059999999807133e-06, 3.3059999999807133e-06, 3.3190000001681597e-06, 2.459000000065714e-06, 2.7499999997182556e-06, 3.2920000001546157e-06, 2.6799999996995894e-06, 3.3340000000769976e-06, 2.7920000000847267e-06, 3.3059999999807133e-06, 2.4999999999053557e-06, 3.028000000071529e-06, 2.750000000162345e-06, 2.735999999892158e-06, 2.4720000002531606e-06]</msg>
<status status="PASS" starttime="20201030 10:58:38.918" endtime="20201030 10:58:38.920"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.912" endtime="20201030 10:58:38.920"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:38.924" endtime="20201030 10:58:38.944"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.923" endtime="20201030 10:58:38.944"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.921" endtime="20201030 10:58:38.944"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.508" endtime="20201030 10:58:38.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.506" endtime="20201030 10:58:38.945"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.954" endtime="20201030 10:58:38.967"></status>
</kw>
<msg timestamp="20201030 10:58:38.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.952" endtime="20201030 10:58:38.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:38.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:38.969" endtime="20201030 10:58:38.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.971" endtime="20201030 10:58:38.973"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.950" endtime="20201030 10:58:38.973"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.948" endtime="20201030 10:58:38.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:38.981" endtime="20201030 10:58:39.264"></status>
</kw>
<msg timestamp="20201030 10:58:39.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019914319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019918458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:38.979" endtime="20201030 10:58:39.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019914319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019918458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.268" endtime="20201030 10:58:39.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.277" endtime="20201030 10:58:39.278"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.976" endtime="20201030 10:58:39.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.974" endtime="20201030 10:58:39.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:39.283" level="INFO">${RESULT} = [{'diff': 4.139000000000226e-06}, {'diff': 3.29200000000196e-06}, {'diff': 3.888999999999976e-06}, {'diff': 4.139000000000226e-06}, {'diff': 4.166999999999366e-06}, {'diff': 3.597000000001016e-06}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:39.280" endtime="20201030 10:58:39.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:39.289" level="INFO">${ACCURACY} = {'diff': [4.139000000000226e-06, 3.29200000000196e-06, 3.888999999999976e-06, 4.139000000000226e-06, 4.166999999999366e-06, 3.597000000001016e-06, 3.5980000000004897e-06, 3.583000000001446e-06, 4.1660...</msg>
<status status="PASS" starttime="20201030 10:58:39.284" endtime="20201030 10:58:39.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.293" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 10:58:39.292" endtime="20201030 10:58:39.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.296" level="INFO">VALUE: [4.139000000000226e-06, 3.29200000000196e-06, 3.888999999999976e-06, 4.139000000000226e-06, 4.166999999999366e-06, 3.597000000001016e-06, 3.5980000000004897e-06, 3.583000000001446e-06, 4.1660000000033615e-06, 4.166999999999366e-06, 4.083000000001946e-06, 3.902999999999546e-06, 3.888999999999976e-06, 4.165999999999892e-06, 3.597000000001016e-06, 3.875000000000406e-06, 3.875000000000406e-06, 4.181000000002405e-06, 4.165999999999892e-06, 3.583000000001446e-06, 3.875000000000406e-06, 4.165999999999892e-06, 4.139000000000226e-06, 3.5980000000004897e-06, 3.5969999999975466e-06, 3.943999999998782e-06, 4.472000000001891e-06, 4.167000000002835e-06, 4.1949999999985055e-06, 4.166999999999366e-06, 3.262999999999877e-06, 4.152999999999796e-06, 3.8050000000025563e-06, 4.165999999999892e-06, 3.625000000000156e-06, 3.875000000000406e-06, 4.166999999999366e-06, 4.111000000001086e-06, 4.181000000002405e-06, 3.611000000000586e-06, 3.5969999999975466e-06, 3.597000000001016e-06, 4.458000000002321e-06, 3.290999999999017e-06, 3.875000000000406e-06, 4.179999999999462e-06, 4.165999999999892e-06, 4.236000000001211e-06, 4.166999999999366e-06, 3.3200000000011e-06]</msg>
<status status="PASS" starttime="20201030 10:58:39.294" endtime="20201030 10:58:39.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.290" endtime="20201030 10:58:39.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:39.300" endtime="20201030 10:58:39.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.299" endtime="20201030 10:58:39.321"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.298" endtime="20201030 10:58:39.321"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.946" endtime="20201030 10:58:39.321"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.945" endtime="20201030 10:58:39.321"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.330" endtime="20201030 10:58:39.344"></status>
</kw>
<msg timestamp="20201030 10:58:39.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.329" endtime="20201030 10:58:39.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.345" endtime="20201030 10:58:39.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.348" endtime="20201030 10:58:39.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.326" endtime="20201030 10:58:39.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.324" endtime="20201030 10:58:39.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.358" endtime="20201030 10:58:39.642"></status>
</kw>
<msg timestamp="20201030 10:58:39.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019819319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.356" endtime="20201030 10:58:39.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019819319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:39.647" endtime="20201030 10:58:39.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.655" endtime="20201030 10:58:39.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.354" endtime="20201030 10:58:39.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.352" endtime="20201030 10:58:39.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:39.662" level="INFO">${RESULT} = [{'diff': 5.014000000001101e-06}, {'diff': 4.4449999999987555e-06}, {'diff': 4.7499999999978115e-06}, {'diff': 5.264000000001351e-06}, {'diff': 4.750000000001281e-06}, {'diff': 5.055999999999811e-06},...</msg>
<status status="PASS" starttime="20201030 10:58:39.658" endtime="20201030 10:58:39.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:39.666" level="INFO">${ACCURACY} = {'diff': [5.014000000001101e-06, 4.4449999999987555e-06, 4.7499999999978115e-06, 5.264000000001351e-06, 4.750000000001281e-06, 5.055999999999811e-06, 4.4449999999987555e-06, 5.042000000000241e-06, 4.4...</msg>
<status status="PASS" starttime="20201030 10:58:39.663" endtime="20201030 10:58:39.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.671" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 10:58:39.670" endtime="20201030 10:58:39.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.673" level="INFO">VALUE: [5.014000000001101e-06, 4.4449999999987555e-06, 4.7499999999978115e-06, 5.264000000001351e-06, 4.750000000001281e-06, 5.055999999999811e-06, 4.4449999999987555e-06, 5.042000000000241e-06, 4.457999999998852e-06, 5.2639999999978815e-06, 4.7639999999973814e-06, 4.485999999997992e-06, 4.750000000001281e-06, 4.445000000002225e-06, 4.750000000001281e-06, 4.9999999999980616e-06, 4.443999999999282e-06, 4.7499999999978115e-06, 5.028000000000671e-06, 4.4449999999987555e-06, 5.319000000000157e-06, 4.389000000000476e-06, 4.528000000000171e-06, 5.305000000000587e-06, 4.750000000001281e-06, 5.319000000000157e-06, 5.0139999999976315e-06, 4.4449999999987555e-06, 5.042000000000241e-06, 4.708000000002571e-06, 5.027999999997201e-06, 4.458000000002321e-06, 5.028000000000671e-06, 4.429999999999712e-06, 4.4449999999987555e-06, 4.429999999999712e-06, 4.735999999998242e-06, 5.291000000001017e-06, 5.028000000000671e-06, 4.457999999998852e-06, 5.028000000000671e-06, 4.736000000001711e-06, 4.416000000000142e-06, 4.7499999999978115e-06, 4.471999999998422e-06, 4.4449999999987555e-06, 4.457999999998852e-06, 5.028000000000671e-06, 5.305000000000587e-06, 4.7499999999978115e-06]</msg>
<status status="PASS" starttime="20201030 10:58:39.672" endtime="20201030 10:58:39.674"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.667" endtime="20201030 10:58:39.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:39.678" endtime="20201030 10:58:39.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.676" endtime="20201030 10:58:39.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.675" endtime="20201030 10:58:39.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.322" endtime="20201030 10:58:39.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.322" endtime="20201030 10:58:39.699"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.708" endtime="20201030 10:58:39.722"></status>
</kw>
<msg timestamp="20201030 10:58:39.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.706" endtime="20201030 10:58:39.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:39.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:39.723" endtime="20201030 10:58:39.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.726" endtime="20201030 10:58:39.728"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.703" endtime="20201030 10:58:39.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.701" endtime="20201030 10:58:39.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:39.736" endtime="20201030 10:58:40.023"></status>
</kw>
<msg timestamp="20201030 10:58:40.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02115575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021161653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:39.734" endtime="20201030 10:58:40.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02115575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021161653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:40.027" endtime="20201030 10:58:40.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.036" endtime="20201030 10:58:40.038"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.732" endtime="20201030 10:58:40.038"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.730" endtime="20201030 10:58:40.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:40.043" level="INFO">${RESULT} = [{'diff': 5.9029999999980765e-06}, {'diff': 5.361000000002336e-06}, {'diff': 5.610999999999117e-06}, {'diff': 6.181000000000936e-06}, {'diff': 5.292000000000491e-06}, {'diff': 5.903000000001546e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:58:40.039" endtime="20201030 10:58:40.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:40.047" level="INFO">${ACCURACY} = {'diff': [5.9029999999980765e-06, 5.361000000002336e-06, 5.610999999999117e-06, 6.181000000000936e-06, 5.292000000000491e-06, 5.903000000001546e-06, 5.59800000000249e-06, 5.319000000000157e-06, 6.1670...</msg>
<status status="PASS" starttime="20201030 10:58:40.044" endtime="20201030 10:58:40.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.051" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 10:58:40.050" endtime="20201030 10:58:40.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.054" level="INFO">VALUE: [5.9029999999980765e-06, 5.361000000002336e-06, 5.610999999999117e-06, 6.181000000000936e-06, 5.292000000000491e-06, 5.903000000001546e-06, 5.59800000000249e-06, 5.319000000000157e-06, 6.167000000001366e-06, 5.653000000001296e-06, 6.181000000000936e-06, 6.165999999998423e-06, 5.8479999999992704e-06, 5.860999999999367e-06, 6.208000000000602e-06, 5.306000000000061e-06, 6.167000000001366e-06, 5.944000000000782e-06, 6.180999999997466e-06, 5.8889999999985065e-06, 5.610999999999117e-06, 5.5979999999990204e-06, 5.596999999999547e-06, 5.306000000000061e-06, 6.153000000001796e-06, 5.596999999999547e-06, 6.1529999999983265e-06, 5.319999999999631e-06, 5.874999999998937e-06, 5.874999999998937e-06, 5.319000000000157e-06, 5.319999999999631e-06, 5.582999999999977e-06, 5.596999999999547e-06, 5.874999999998937e-06, 5.59800000000249e-06, 5.874999999998937e-06, 5.305000000000587e-06, 5.236000000002211e-06, 6.165999999998423e-06, 5.305000000000587e-06, 5.903000000001546e-06, 6.1389999999987566e-06, 5.889000000001976e-06, 5.306000000000061e-06, 5.902000000002072e-06, 6.167000000001366e-06, 5.887999999999033e-06, 5.833000000000227e-06, 5.5979999999990204e-06]</msg>
<status status="PASS" starttime="20201030 10:58:40.053" endtime="20201030 10:58:40.055"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.048" endtime="20201030 10:58:40.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:40.060" endtime="20201030 10:58:40.079"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.058" endtime="20201030 10:58:40.080"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.057" endtime="20201030 10:58:40.080"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.700" endtime="20201030 10:58:40.080"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:39.699" endtime="20201030 10:58:40.080"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.090" endtime="20201030 10:58:40.103"></status>
</kw>
<msg timestamp="20201030 10:58:40.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.088" endtime="20201030 10:58:40.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.104" endtime="20201030 10:58:40.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.107" endtime="20201030 10:58:40.109"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.085" endtime="20201030 10:58:40.109"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.083" endtime="20201030 10:58:40.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.116" endtime="20201030 10:58:40.403"></status>
</kw>
<msg timestamp="20201030 10:58:40.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020508639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020515958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.115" endtime="20201030 10:58:40.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020508639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020515958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.407" endtime="20201030 10:58:40.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.416" endtime="20201030 10:58:40.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.112" endtime="20201030 10:58:40.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.110" endtime="20201030 10:58:40.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:40.423" level="INFO">${RESULT} = [{'diff': 7.319000000002157e-06}, {'diff': 7.290999999999548e-06}, {'diff': 6.7369999999997154e-06}, {'diff': 6.458000000000852e-06}, {'diff': 6.444000000001282e-06}, {'diff': 6.443999999997813e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:58:40.419" endtime="20201030 10:58:40.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:40.428" level="INFO">${ACCURACY} = {'diff': [7.319000000002157e-06, 7.290999999999548e-06, 6.7369999999997154e-06, 6.458000000000852e-06, 6.444000000001282e-06, 6.443999999997813e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.736...</msg>
<status status="PASS" starttime="20201030 10:58:40.424" endtime="20201030 10:58:40.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.432" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 10:58:40.431" endtime="20201030 10:58:40.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.435" level="INFO">VALUE: [7.319000000002157e-06, 7.290999999999548e-06, 6.7369999999997154e-06, 6.458000000000852e-06, 6.444000000001282e-06, 6.443999999997813e-06, 6.736000000000242e-06, 6.736000000000242e-06, 6.736000000000242e-06, 7.000000000000062e-06, 7.028000000002671e-06, 7.028000000002671e-06, 6.458000000000852e-06, 7.2919999999990215e-06, 6.736000000000242e-06, 7.0419999999987715e-06, 7.332999999998258e-06, 6.749999999999812e-06, 7.306000000002061e-06, 6.722000000000672e-06, 6.764000000002851e-06, 6.444000000001282e-06, 6.4579999999973825e-06, 7.0279999999992016e-06, 6.472000000000422e-06, 7.375000000000437e-06, 7.070000000001381e-06, 7.306000000002061e-06, 6.458000000000852e-06, 7.028000000002671e-06, 6.4729999999998955e-06, 6.763999999999382e-06, 7.320000000001631e-06, 6.472000000000422e-06, 6.681000000001436e-06, 6.736000000000242e-06, 7.028000000002671e-06, 7.347999999997301e-06, 6.722000000000672e-06, 7.3469999999978275e-06, 6.778000000002421e-06, 6.763999999999382e-06, 6.679999999998493e-06, 6.722000000000672e-06, 7.013999999999632e-06, 6.819000000001657e-06, 6.443999999997813e-06, 7.332999999998258e-06, 7.2779999999994516e-06, 6.722000000000672e-06]</msg>
<status status="PASS" starttime="20201030 10:58:40.434" endtime="20201030 10:58:40.435"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.429" endtime="20201030 10:58:40.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:40.440" endtime="20201030 10:58:40.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.438" endtime="20201030 10:58:40.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.437" endtime="20201030 10:58:40.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.081" endtime="20201030 10:58:40.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.081" endtime="20201030 10:58:40.461"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.470" endtime="20201030 10:58:40.483"></status>
</kw>
<msg timestamp="20201030 10:58:40.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.468" endtime="20201030 10:58:40.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.485" endtime="20201030 10:58:40.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.488" endtime="20201030 10:58:40.489"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.466" endtime="20201030 10:58:40.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.463" endtime="20201030 10:58:40.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.497" endtime="20201030 10:58:40.781"></status>
</kw>
<msg timestamp="20201030 10:58:40.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020678694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020686569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.495" endtime="20201030 10:58:40.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020678694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020686569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.785" endtime="20201030 10:58:40.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.794" endtime="20201030 10:58:40.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.493" endtime="20201030 10:58:40.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.491" endtime="20201030 10:58:40.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:40.800" level="INFO">${RESULT} = [{'diff': 7.874999999997467e-06}, {'diff': 8.166999999999897e-06}, {'diff': 8.153000000000327e-06}, {'diff': 7.889000000000507e-06}, {'diff': 8.179999999999993e-06}, {'diff': 7.889000000000507e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:40.797" endtime="20201030 10:58:40.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:40.805" level="INFO">${ACCURACY} = {'diff': [7.874999999997467e-06, 8.166999999999897e-06, 8.153000000000327e-06, 7.889000000000507e-06, 8.179999999999993e-06, 7.889000000000507e-06, 7.861000000001367e-06, 8.124999999997717e-06, 7.8880...</msg>
<status status="PASS" starttime="20201030 10:58:40.801" endtime="20201030 10:58:40.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.809" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 10:58:40.808" endtime="20201030 10:58:40.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.812" level="INFO">VALUE: [7.874999999997467e-06, 8.166999999999897e-06, 8.153000000000327e-06, 7.889000000000507e-06, 8.179999999999993e-06, 7.889000000000507e-06, 7.861000000001367e-06, 8.124999999997717e-06, 7.888000000001033e-06, 7.611000000001117e-06, 7.597000000001547e-06, 8.166999999999897e-06, 7.5969999999980775e-06, 7.304999999999118e-06, 7.569999999998411e-06, 7.875000000000937e-06, 7.527999999999702e-06, 8.179999999999993e-06, 7.583000000001977e-06, 8.139000000000757e-06, 7.2919999999990215e-06, 7.887999999997564e-06, 8.166000000000423e-06, 7.639000000000257e-06, 8.194999999999036e-06, 7.5969999999980775e-06, 7.875000000000937e-06, 7.582999999998508e-06, 8.166999999999897e-06, 7.320000000001631e-06, 8.166999999999897e-06, 7.611000000001117e-06, 8.165999999996953e-06, 7.319000000002157e-06, 7.584000000001451e-06, 7.583000000001977e-06, 7.568999999998938e-06, 7.583999999997981e-06, 7.875000000000937e-06, 7.306000000002061e-06, 7.584000000001451e-06, 7.611000000001117e-06, 8.166000000000423e-06, 8.250000000001312e-06, 7.292000000002491e-06, 8.166000000000423e-06, 8.166999999999897e-06, 7.888999999997037e-06, 8.166999999999897e-06, 7.305000000002587e-06]</msg>
<status status="PASS" starttime="20201030 10:58:40.810" endtime="20201030 10:58:40.812"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.806" endtime="20201030 10:58:40.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:40.817" endtime="20201030 10:58:40.836"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.815" endtime="20201030 10:58:40.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.814" endtime="20201030 10:58:40.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.461" endtime="20201030 10:58:40.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.461" endtime="20201030 10:58:40.838"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.847" endtime="20201030 10:58:40.863"></status>
</kw>
<msg timestamp="20201030 10:58:40.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.845" endtime="20201030 10:58:40.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:40.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:40.864" endtime="20201030 10:58:40.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.867" endtime="20201030 10:58:40.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.842" endtime="20201030 10:58:40.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.840" endtime="20201030 10:58:40.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:40.876" endtime="20201030 10:58:41.161"></status>
</kw>
<msg timestamp="20201030 10:58:41.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021646347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021655389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:40.875" endtime="20201030 10:58:41.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021646347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021655389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.165" endtime="20201030 10:58:41.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.174" endtime="20201030 10:58:41.175"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.872" endtime="20201030 10:58:41.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.870" endtime="20201030 10:58:41.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:41.180" level="INFO">${RESULT} = [{'diff': 9.042000000000772e-06}, {'diff': 9.013000000002158e-06}, {'diff': 8.653000000000827e-06}, {'diff': 9.013999999998162e-06}, {'diff': 8.443999999999813e-06}, {'diff': 8.457999999999383e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:58:41.177" endtime="20201030 10:58:41.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:41.185" level="INFO">${ACCURACY} = {'diff': [9.042000000000772e-06, 9.013000000002158e-06, 8.653000000000827e-06, 9.013999999998162e-06, 8.443999999999813e-06, 8.457999999999383e-06, 9.263999999998412e-06, 9.027000000001728e-06, 8.5279...</msg>
<status status="PASS" starttime="20201030 10:58:41.181" endtime="20201030 10:58:41.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.189" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 10:58:41.188" endtime="20201030 10:58:41.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.192" level="INFO">VALUE: [9.042000000000772e-06, 9.013000000002158e-06, 8.653000000000827e-06, 9.013999999998162e-06, 8.443999999999813e-06, 8.457999999999383e-06, 9.263999999998412e-06, 9.027000000001728e-06, 8.527999999997232e-06, 9.042000000000772e-06, 9.319000000000688e-06, 9.319000000000688e-06, 8.666000000000923e-06, 8.722000000002672e-06, 8.443999999999813e-06, 8.999999999998592e-06, 9.013999999998162e-06, 9.292000000001022e-06, 9.028000000001202e-06, 8.735999999998773e-06, 9.013999999998162e-06, 8.457999999999383e-06, 9.013999999998162e-06, 8.721999999999203e-06, 9.042000000000772e-06, 8.458999999998856e-06, 8.514000000001132e-06, 8.472000000002422e-06, 9.042000000000772e-06, 8.999999999998592e-06, 8.444999999999286e-06, 9.305999999997122e-06, 9.013999999998162e-06, 8.444999999999286e-06, 8.444999999999286e-06, 9.333999999999731e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.749999999998342e-06, 8.445000000002756e-06, 8.443999999999813e-06, 9.320000000000161e-06, 8.457999999999383e-06, 9.320000000000161e-06, 9.014000000001632e-06, 9.320000000000161e-06, 9.292000000001022e-06, 9.333000000000258e-06, 8.999999999998592e-06, 9.028000000001202e-06]</msg>
<status status="PASS" starttime="20201030 10:58:41.190" endtime="20201030 10:58:41.193"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.185" endtime="20201030 10:58:41.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:41.198" endtime="20201030 10:58:41.217"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.196" endtime="20201030 10:58:41.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.195" endtime="20201030 10:58:41.218"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.839" endtime="20201030 10:58:41.219"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:40.838" endtime="20201030 10:58:41.219"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.228" endtime="20201030 10:58:41.241"></status>
</kw>
<msg timestamp="20201030 10:58:41.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.226" endtime="20201030 10:58:41.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.243" endtime="20201030 10:58:41.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.246" endtime="20201030 10:58:41.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.223" endtime="20201030 10:58:41.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.221" endtime="20201030 10:58:41.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.256" endtime="20201030 10:58:41.544"></status>
</kw>
<msg timestamp="20201030 10:58:41.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020248306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020257639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.254" endtime="20201030 10:58:41.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020248306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020257639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.548" endtime="20201030 10:58:41.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.556" endtime="20201030 10:58:41.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.251" endtime="20201030 10:58:41.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.249" endtime="20201030 10:58:41.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:41.563" level="INFO">${RESULT} = [{'diff': 9.333000000000258e-06}, {'diff': 9.944000000001313e-06}, {'diff': 9.306000000000592e-06}, {'diff': 1.0167000000001897e-05}, {'diff': 9.874999999999468e-06}, {'diff': 9.931000000001217e-06}, ...</msg>
<status status="PASS" starttime="20201030 10:58:41.560" endtime="20201030 10:58:41.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:41.568" level="INFO">${ACCURACY} = {'diff': [9.333000000000258e-06, 9.944000000001313e-06, 9.306000000000592e-06, 1.0167000000001897e-05, 9.874999999999468e-06, 9.931000000001217e-06, 9.333000000000258e-06, 9.888999999999037e-06, 1.015...</msg>
<status status="PASS" starttime="20201030 10:58:41.564" endtime="20201030 10:58:41.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.573" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 10:58:41.572" endtime="20201030 10:58:41.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.576" level="INFO">VALUE: [9.333000000000258e-06, 9.944000000001313e-06, 9.306000000000592e-06, 1.0167000000001897e-05, 9.874999999999468e-06, 9.931000000001217e-06, 9.333000000000258e-06, 9.888999999999037e-06, 1.0153000000002327e-05, 9.665999999998454e-06, 1.0082999999997538e-05, 9.306000000000592e-06, 1.0166999999998427e-05, 1.0166000000002423e-05, 9.874999999999468e-06, 1.0167000000001897e-05, 9.834000000000231e-06, 9.888999999999037e-06, 9.333000000000258e-06, 1.0166999999998427e-05, 9.84800000000327e-06, 9.333999999999731e-06, 9.305000000001118e-06, 9.874999999999468e-06, 9.583999999999981e-06, 1.0152999999998857e-05, 1.0180000000001993e-05, 1.0165999999998954e-05, 9.333999999999731e-06, 9.319000000000688e-06, 9.597000000000078e-06, 9.820000000000662e-06, 9.292000000001022e-06, 9.915999999998704e-06, 9.930999999997747e-06, 9.847000000000328e-06, 9.597000000000078e-06, 1.0166999999998427e-05, 9.874999999999468e-06, 9.666000000001923e-06, 9.903000000002077e-06, 9.874999999999468e-06, 9.306000000000592e-06, 9.597000000000078e-06, 1.0179999999998524e-05, 9.306000000000592e-06, 9.888999999999037e-06, 9.583999999999981e-06, 9.360999999999398e-06, 9.292000000001022e-06]</msg>
<status status="PASS" starttime="20201030 10:58:41.575" endtime="20201030 10:58:41.577"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.569" endtime="20201030 10:58:41.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:41.581" endtime="20201030 10:58:41.601"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.580" endtime="20201030 10:58:41.601"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.578" endtime="20201030 10:58:41.602"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.220" endtime="20201030 10:58:41.602"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.219" endtime="20201030 10:58:41.602"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.611" endtime="20201030 10:58:41.626"></status>
</kw>
<msg timestamp="20201030 10:58:41.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.609" endtime="20201030 10:58:41.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.628" endtime="20201030 10:58:41.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.630" endtime="20201030 10:58:41.632"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.607" endtime="20201030 10:58:41.633"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.604" endtime="20201030 10:58:41.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.640" endtime="20201030 10:58:41.926"></status>
</kw>
<msg timestamp="20201030 10:58:41.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019783056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.638" endtime="20201030 10:58:41.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019783056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:41.931" endtime="20201030 10:58:41.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.939" endtime="20201030 10:58:41.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.635" endtime="20201030 10:58:41.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.634" endtime="20201030 10:58:41.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:41.946" level="INFO">${RESULT} = [{'diff': 1.1041999999999302e-05}, {'diff': 1.0750000000000343e-05}, {'diff': 1.1000000000000593e-05}, {'diff': 1.0459000000000857e-05}, {'diff': 1.1304999999999649e-05}, {'diff': 1.1014000000000163e-...</msg>
<status status="PASS" starttime="20201030 10:58:41.943" endtime="20201030 10:58:41.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:41.950" level="INFO">${ACCURACY} = {'diff': [1.1041999999999302e-05, 1.0750000000000343e-05, 1.1000000000000593e-05, 1.0459000000000857e-05, 1.1304999999999649e-05, 1.1014000000000163e-05, 1.0750000000000343e-05, 1.0750000000000343e-05...</msg>
<status status="PASS" starttime="20201030 10:58:41.947" endtime="20201030 10:58:41.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.955" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 10:58:41.954" endtime="20201030 10:58:41.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:41.957" level="INFO">VALUE: [1.1041999999999302e-05, 1.0750000000000343e-05, 1.1000000000000593e-05, 1.0459000000000857e-05, 1.1304999999999649e-05, 1.1014000000000163e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.1291000000000079e-05, 1.0750000000000343e-05, 1.1014000000000163e-05, 1.0750000000000343e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.1305999999999122e-05, 1.1000000000000593e-05, 1.1305999999999122e-05, 1.1027999999999732e-05, 1.0457999999997913e-05, 1.0750000000000343e-05, 1.0458000000001383e-05, 1.0722999999997207e-05, 1.1040999999999829e-05, 1.1040999999999829e-05, 1.1027999999999732e-05, 1.0763999999999913e-05, 1.0457999999997913e-05, 1.0457999999997913e-05, 1.0957999999998413e-05, 1.1027999999999732e-05, 1.0458000000001383e-05, 1.1027999999999732e-05, 1.1027999999999732e-05, 1.0750000000000343e-05, 1.1304999999999649e-05, 1.1014000000000163e-05, 1.1014000000000163e-05, 1.0985999999997553e-05, 1.1027999999999732e-05, 1.1304999999999649e-05, 1.0737000000000246e-05, 1.1305999999999122e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.1014000000000163e-05, 1.0388999999999537e-05, 1.1014000000000163e-05, 1.0679999999999024e-05, 1.1305999999999122e-05, 1.1014000000000163e-05]</msg>
<status status="PASS" starttime="20201030 10:58:41.956" endtime="20201030 10:58:41.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.951" endtime="20201030 10:58:41.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:41.963" endtime="20201030 10:58:41.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.961" endtime="20201030 10:58:41.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.960" endtime="20201030 10:58:41.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.603" endtime="20201030 10:58:41.983"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.602" endtime="20201030 10:58:41.983"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:41.992" endtime="20201030 10:58:42.010"></status>
</kw>
<msg timestamp="20201030 10:58:42.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:41.991" endtime="20201030 10:58:42.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.012" endtime="20201030 10:58:42.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.015" endtime="20201030 10:58:42.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.988" endtime="20201030 10:58:42.017"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.986" endtime="20201030 10:58:42.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.024" endtime="20201030 10:58:42.311"></status>
</kw>
<msg timestamp="20201030 10:58:42.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023029444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023041611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.022" endtime="20201030 10:58:42.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023029444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023041611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.315" endtime="20201030 10:58:42.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.324" endtime="20201030 10:58:42.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.020" endtime="20201030 10:58:42.326"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.018" endtime="20201030 10:58:42.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:42.330" level="INFO">${RESULT} = [{'diff': 1.2167000000000427e-05}, {'diff': 1.1930000000000274e-05}, {'diff': 1.1944999999999317e-05}, {'diff': 1.1874999999997998e-05}, {'diff': 1.1582999999999039e-05}, {'diff': 1.2166999999996958e-...</msg>
<status status="PASS" starttime="20201030 10:58:42.327" endtime="20201030 10:58:42.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:42.335" level="INFO">${ACCURACY} = {'diff': [1.2167000000000427e-05, 1.1930000000000274e-05, 1.1944999999999317e-05, 1.1874999999997998e-05, 1.1582999999999039e-05, 1.2166999999996958e-05, 1.2166000000000954e-05, 1.1375000000000968e-05...</msg>
<status status="PASS" starttime="20201030 10:58:42.331" endtime="20201030 10:58:42.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.339" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 10:58:42.338" endtime="20201030 10:58:42.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.342" level="INFO">VALUE: [1.2167000000000427e-05, 1.1930000000000274e-05, 1.1944999999999317e-05, 1.1874999999997998e-05, 1.1582999999999039e-05, 1.2166999999996958e-05, 1.2166000000000954e-05, 1.1375000000000968e-05, 1.2110999999998678e-05, 1.2180999999999997e-05, 1.2165999999997484e-05, 1.2167000000000427e-05, 1.1889000000001038e-05, 1.2166000000000954e-05, 1.2167000000000427e-05, 1.1598000000001552e-05, 1.2167000000000427e-05, 1.1611000000001648e-05, 1.1875000000001468e-05, 1.2137999999998345e-05, 1.2153000000000858e-05, 1.1597999999998082e-05, 1.1318999999999219e-05, 1.1889000000001038e-05, 1.1902000000001134e-05, 1.1875000000001468e-05, 1.1889000000001038e-05, 1.1625000000001218e-05, 1.1625000000001218e-05, 1.1596999999998608e-05, 1.1597000000002078e-05, 1.1304999999999649e-05, 1.1305999999999122e-05, 1.1819999999999192e-05, 1.2139000000001288e-05, 1.2167000000000427e-05, 1.2403000000001108e-05, 1.1903000000000608e-05, 1.2153000000000858e-05, 1.2180000000000524e-05, 1.1847000000002328e-05, 1.1610999999998178e-05, 1.1596999999998608e-05, 1.1610999999998178e-05, 1.1597000000002078e-05, 1.1610999999998178e-05, 1.1875000000001468e-05, 1.1597999999998082e-05, 1.1541999999999802e-05, 1.2250000000001843e-05]</msg>
<status status="PASS" starttime="20201030 10:58:42.340" endtime="20201030 10:58:42.343"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.335" endtime="20201030 10:58:42.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:42.348" endtime="20201030 10:58:42.367"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.346" endtime="20201030 10:58:42.368"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.345" endtime="20201030 10:58:42.368"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.984" endtime="20201030 10:58:42.368"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:41.984" endtime="20201030 10:58:42.369"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.378" endtime="20201030 10:58:42.392"></status>
</kw>
<msg timestamp="20201030 10:58:42.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.376" endtime="20201030 10:58:42.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.393" endtime="20201030 10:58:42.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.396" endtime="20201030 10:58:42.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.373" endtime="20201030 10:58:42.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.371" endtime="20201030 10:58:42.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.405" endtime="20201030 10:58:42.691"></status>
</kw>
<msg timestamp="20201030 10:58:42.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01986925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:42.404" endtime="20201030 10:58:42.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01986925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:42.695" endtime="20201030 10:58:42.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.703" endtime="20201030 10:58:42.705"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.401" endtime="20201030 10:58:42.706"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.399" endtime="20201030 10:58:42.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:42.710" level="INFO">${RESULT} = [{'diff': 1.2374999999998498e-05}, {'diff': 1.2735999999999303e-05}, {'diff': 1.2792000000001053e-05}, {'diff': 1.2778000000001483e-05}, {'diff': 1.2708000000000164e-05}, {'diff': 1.3083000000000539e-...</msg>
<status status="PASS" starttime="20201030 10:58:42.707" endtime="20201030 10:58:42.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:42.715" level="INFO">${ACCURACY} = {'diff': [1.2374999999998498e-05, 1.2735999999999303e-05, 1.2792000000001053e-05, 1.2778000000001483e-05, 1.2708000000000164e-05, 1.3083000000000539e-05, 1.3027999999998263e-05, 1.2749999999998873e-05...</msg>
<status status="PASS" starttime="20201030 10:58:42.711" endtime="20201030 10:58:42.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.720" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 10:58:42.719" endtime="20201030 10:58:42.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.723" level="INFO">VALUE: [1.2374999999998498e-05, 1.2735999999999303e-05, 1.2792000000001053e-05, 1.2778000000001483e-05, 1.2708000000000164e-05, 1.3083000000000539e-05, 1.3027999999998263e-05, 1.2749999999998873e-05, 1.2471999999999483e-05, 1.3014000000002163e-05, 1.3013999999998693e-05, 1.3292000000001553e-05, 1.2472999999998957e-05, 1.2945000000000317e-05, 1.2403000000001108e-05, 1.3055999999997403e-05, 1.3347999999999832e-05, 1.302699999999879e-05, 1.3027999999998263e-05, 1.3042000000001303e-05, 1.2735999999999303e-05, 1.2944000000000844e-05, 1.2749999999998873e-05, 1.331899999999775e-05, 1.276299999999897e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.3027999999998263e-05, 1.304099999999836e-05, 1.2750000000002343e-05, 1.3097000000000109e-05, 1.2750000000002343e-05, 1.3027999999998263e-05, 1.2444000000000344e-05, 1.3333000000000789e-05, 1.2735999999999303e-05, 1.2764000000001913e-05, 1.3028000000001733e-05, 1.329099999999861e-05, 1.3014000000002163e-05, 1.3042000000001303e-05, 1.3027999999998263e-05, 1.2708000000000164e-05, 1.3319999999997223e-05, 1.2749999999998873e-05, 1.2444000000000344e-05, 1.3333000000000789e-05, 1.2528000000001233e-05, 1.3070000000000442e-05, 1.2459000000002857e-05]</msg>
<status status="PASS" starttime="20201030 10:58:42.721" endtime="20201030 10:58:42.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.716" endtime="20201030 10:58:42.724"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:42.728" endtime="20201030 10:58:42.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.726" endtime="20201030 10:58:42.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.725" endtime="20201030 10:58:42.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.370" endtime="20201030 10:58:42.748"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.369" endtime="20201030 10:58:42.749"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.758" endtime="20201030 10:58:42.772"></status>
</kw>
<msg timestamp="20201030 10:58:42.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.756" endtime="20201030 10:58:42.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:42.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:42.774" endtime="20201030 10:58:42.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.776" endtime="20201030 10:58:42.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.753" endtime="20201030 10:58:42.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.751" endtime="20201030 10:58:42.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:42.786" endtime="20201030 10:58:43.073"></status>
</kw>
<msg timestamp="20201030 10:58:43.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020043319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020057194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:42.784" endtime="20201030 10:58:43.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020043319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020057194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.077" endtime="20201030 10:58:43.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.086" endtime="20201030 10:58:43.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.781" endtime="20201030 10:58:43.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.780" endtime="20201030 10:58:43.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:43.093" level="INFO">${RESULT} = [{'diff': 1.3874999999999998e-05}, {'diff': 1.3527000000002759e-05}, {'diff': 1.3584000000000512e-05}, {'diff': 1.4181000000001998e-05}, {'diff': 1.3333000000000789e-05}, {'diff': 1.4165999999999485e-...</msg>
<status status="PASS" starttime="20201030 10:58:43.089" endtime="20201030 10:58:43.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:43.097" level="INFO">${ACCURACY} = {'diff': [1.3874999999999998e-05, 1.3527000000002759e-05, 1.3584000000000512e-05, 1.4181000000001998e-05, 1.3333000000000789e-05, 1.4165999999999485e-05, 1.4166999999998958e-05, 1.3292000000001553e-05...</msg>
<status status="PASS" starttime="20201030 10:58:43.094" endtime="20201030 10:58:43.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.102" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 10:58:43.100" endtime="20201030 10:58:43.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.104" level="INFO">VALUE: [1.3874999999999998e-05, 1.3527000000002759e-05, 1.3584000000000512e-05, 1.4181000000001998e-05, 1.3333000000000789e-05, 1.4165999999999485e-05, 1.4166999999998958e-05, 1.3292000000001553e-05, 1.3305999999997653e-05, 1.4165999999999485e-05, 1.3263999999998943e-05, 1.4167000000002428e-05, 1.330499999999818e-05, 1.4166999999998958e-05, 1.3681000000001498e-05, 1.3598000000000082e-05, 1.3319000000001219e-05, 1.3611000000000179e-05, 1.4208000000001664e-05, 1.4152999999999388e-05, 1.3596999999997139e-05, 1.3320000000000692e-05, 1.3861000000000429e-05, 1.3888999999999568e-05, 1.4181000000001998e-05, 1.4179999999999054e-05, 1.4222000000001234e-05, 1.3596999999997139e-05, 1.3611999999999652e-05, 1.333299999999732e-05, 1.3638000000003314e-05, 1.3861000000000429e-05, 1.4181000000001998e-05, 1.4207999999998194e-05, 1.4152999999999388e-05, 1.3569000000001469e-05, 1.3292000000001553e-05, 1.4181000000001998e-05, 1.4166000000002954e-05, 1.3374999999999498e-05, 1.3596999999997139e-05, 1.3889000000003038e-05, 1.4181000000001998e-05, 1.331899999999775e-05, 1.4111000000000679e-05, 1.4165999999999485e-05, 1.4098000000000582e-05, 1.3597000000000609e-05, 1.3319000000001219e-05, 1.4165999999999485e-05]</msg>
<status status="PASS" starttime="20201030 10:58:43.103" endtime="20201030 10:58:43.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.098" endtime="20201030 10:58:43.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:43.109" endtime="20201030 10:58:43.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.108" endtime="20201030 10:58:43.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.106" endtime="20201030 10:58:43.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.750" endtime="20201030 10:58:43.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:42.749" endtime="20201030 10:58:43.130"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.139" endtime="20201030 10:58:43.154"></status>
</kw>
<msg timestamp="20201030 10:58:43.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.138" endtime="20201030 10:58:43.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.155" endtime="20201030 10:58:43.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.158" endtime="20201030 10:58:43.160"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.135" endtime="20201030 10:58:43.160"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.133" endtime="20201030 10:58:43.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.167" endtime="20201030 10:58:43.454"></status>
</kw>
<msg timestamp="20201030 10:58:43.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021107111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021121847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.166" endtime="20201030 10:58:43.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021107111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021121847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.458" endtime="20201030 10:58:43.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.467" endtime="20201030 10:58:43.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.163" endtime="20201030 10:58:43.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.161" endtime="20201030 10:58:43.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:43.473" level="INFO">${RESULT} = [{'diff': 1.4735999999997834e-05}, {'diff': 1.5028000000000263e-05}, {'diff': 1.5305999999999653e-05}, {'diff': 1.5013999999997224e-05}, {'diff': 1.5014000000000693e-05}, {'diff': 1.4445000000001817e-...</msg>
<status status="PASS" starttime="20201030 10:58:43.470" endtime="20201030 10:58:43.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:43.478" level="INFO">${ACCURACY} = {'diff': [1.4735999999997834e-05, 1.5028000000000263e-05, 1.5305999999999653e-05, 1.5013999999997224e-05, 1.5014000000000693e-05, 1.4445000000001817e-05, 1.502700000000079e-05, 1.502699999999732e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:43.474" endtime="20201030 10:58:43.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.482" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 10:58:43.481" endtime="20201030 10:58:43.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.485" level="INFO">VALUE: [1.4735999999997834e-05, 1.5028000000000263e-05, 1.5305999999999653e-05, 1.5013999999997224e-05, 1.5014000000000693e-05, 1.4445000000001817e-05, 1.502700000000079e-05, 1.502699999999732e-05, 1.4986000000001554e-05, 1.4735999999997834e-05, 1.5028000000000263e-05, 1.5056000000002873e-05, 1.5250000000001374e-05, 1.502700000000079e-05, 1.4778000000000013e-05, 1.509699999999864e-05, 1.4472999999997488e-05, 1.4443999999998874e-05, 1.4444000000002344e-05, 1.4778000000000013e-05, 1.4457999999998444e-05, 1.531899999999975e-05, 1.5028000000000263e-05, 1.4972000000001984e-05, 1.4459000000001387e-05, 1.4458999999997918e-05, 1.502700000000079e-05, 1.4819999999998723e-05, 1.479100000000011e-05, 1.4722000000001734e-05, 1.4735999999997834e-05, 1.4764000000000443e-05, 1.4443999999998874e-05, 1.4443999999998874e-05, 1.4443999999998874e-05, 1.4985999999998084e-05, 1.4485999999997584e-05, 1.4430999999998778e-05, 1.5014000000000693e-05, 1.538900000000107e-05, 1.4430000000002774e-05, 1.50689999999995e-05, 1.4457999999998444e-05, 1.4750000000000874e-05, 1.4443999999998874e-05, 1.538900000000107e-05, 1.4722000000001734e-05, 1.4458000000001914e-05, 1.4458000000001914e-05, 1.5013999999997224e-05]</msg>
<status status="PASS" starttime="20201030 10:58:43.483" endtime="20201030 10:58:43.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.478" endtime="20201030 10:58:43.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:43.491" endtime="20201030 10:58:43.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.489" endtime="20201030 10:58:43.511"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.488" endtime="20201030 10:58:43.511"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.131" endtime="20201030 10:58:43.511"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.130" endtime="20201030 10:58:43.511"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.520" endtime="20201030 10:58:43.536"></status>
</kw>
<msg timestamp="20201030 10:58:43.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.519" endtime="20201030 10:58:43.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.537" endtime="20201030 10:58:43.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.540" endtime="20201030 10:58:43.541"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.516" endtime="20201030 10:58:43.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.514" endtime="20201030 10:58:43.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.549" endtime="20201030 10:58:43.835"></status>
</kw>
<msg timestamp="20201030 10:58:43.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.547" endtime="20201030 10:58:43.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019967222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.839" endtime="20201030 10:58:43.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.848" endtime="20201030 10:58:43.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.545" endtime="20201030 10:58:43.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.543" endtime="20201030 10:58:43.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:43.855" level="INFO">${RESULT} = [{'diff': 1.6165999999998015e-05}, {'diff': 1.6181000000000528e-05}, {'diff': 1.588900000000157e-05}, {'diff': 1.5902000000001665e-05}, {'diff': 1.561099999999871e-05}, {'diff': 1.6181000000000528e-05...</msg>
<status status="PASS" starttime="20201030 10:58:43.851" endtime="20201030 10:58:43.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:43.860" level="INFO">${ACCURACY} = {'diff': [1.6165999999998015e-05, 1.6181000000000528e-05, 1.588900000000157e-05, 1.5902000000001665e-05, 1.561099999999871e-05, 1.6181000000000528e-05, 1.5569e-05, 1.6165999999998015e-05, 1.5889000000...</msg>
<status status="PASS" starttime="20201030 10:58:43.856" endtime="20201030 10:58:43.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.864" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 10:58:43.863" endtime="20201030 10:58:43.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.867" level="INFO">VALUE: [1.6165999999998015e-05, 1.6181000000000528e-05, 1.588900000000157e-05, 1.5902000000001665e-05, 1.561099999999871e-05, 1.6181000000000528e-05, 1.5569e-05, 1.6165999999998015e-05, 1.588900000000157e-05, 1.531899999999975e-05, 1.6235999999999334e-05, 1.6179999999997585e-05, 1.559699999999914e-05, 1.6444000000000875e-05, 1.531899999999975e-05, 1.609699999999964e-05, 1.6179999999997585e-05, 1.5277999999997044e-05, 1.559699999999914e-05, 1.612499999999878e-05, 1.559700000000261e-05, 1.5875000000002e-05, 1.588900000000157e-05, 1.5292000000000083e-05, 1.558299999999957e-05, 1.586099999999896e-05, 1.558299999999957e-05, 1.559699999999914e-05, 1.616700000000096e-05, 1.5583999999999043e-05, 1.530500000000018e-05, 1.530500000000018e-05, 1.6152000000001915e-05, 1.588900000000157e-05, 1.561099999999871e-05, 1.616699999999749e-05, 1.6179999999997585e-05, 1.591700000000071e-05, 1.591699999999724e-05, 1.5930000000000805e-05, 1.5569999999999473e-05, 1.590300000000114e-05, 1.6165999999998015e-05, 1.58889999999981e-05, 1.5902000000001665e-05, 1.587499999999853e-05, 1.6097999999999113e-05, 1.6458000000000444e-05, 1.5319999999999223e-05, 1.561099999999871e-05]</msg>
<status status="PASS" starttime="20201030 10:58:43.865" endtime="20201030 10:58:43.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.861" endtime="20201030 10:58:43.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:43.872" endtime="20201030 10:58:43.892"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.871" endtime="20201030 10:58:43.892"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.869" endtime="20201030 10:58:43.892"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.512" endtime="20201030 10:58:43.893"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.512" endtime="20201030 10:58:43.893"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.902" endtime="20201030 10:58:43.917"></status>
</kw>
<msg timestamp="20201030 10:58:43.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.900" endtime="20201030 10:58:43.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:43.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:43.918" endtime="20201030 10:58:43.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.921" endtime="20201030 10:58:43.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.898" endtime="20201030 10:58:43.923"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.895" endtime="20201030 10:58:43.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:43.930" endtime="20201030 10:58:44.216"></status>
</kw>
<msg timestamp="20201030 10:58:44.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019962403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:43.928" endtime="20201030 10:58:44.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019962403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.220" endtime="20201030 10:58:44.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.229" endtime="20201030 10:58:44.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.926" endtime="20201030 10:58:44.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.924" endtime="20201030 10:58:44.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:44.236" level="INFO">${RESULT} = [{'diff': 1.704099999999889e-05}, {'diff': 1.7320000000001223e-05}, {'diff': 1.6749999999999404e-05}, {'diff': 1.6736999999999308e-05}, {'diff': 1.7056000000001403e-05}, {'diff': 1.7013999999999224e-0...</msg>
<status status="PASS" starttime="20201030 10:58:44.233" endtime="20201030 10:58:44.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:44.240" level="INFO">${ACCURACY} = {'diff': [1.704099999999889e-05, 1.7320000000001223e-05, 1.6749999999999404e-05, 1.6736999999999308e-05, 1.7056000000001403e-05, 1.7013999999999224e-05, 1.704099999999889e-05, 1.7013999999999224e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:44.237" endtime="20201030 10:58:44.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.245" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 10:58:44.244" endtime="20201030 10:58:44.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.247" level="INFO">VALUE: [1.704099999999889e-05, 1.7320000000001223e-05, 1.6749999999999404e-05, 1.6736999999999308e-05, 1.7056000000001403e-05, 1.7013999999999224e-05, 1.704099999999889e-05, 1.7013999999999224e-05, 1.7320000000001223e-05, 1.6735999999999834e-05, 1.7027999999998794e-05, 1.704099999999889e-05, 1.6735999999999834e-05, 1.7319999999997754e-05, 1.677699999999907e-05, 1.6735999999999834e-05, 1.704099999999889e-05, 1.6749999999999404e-05, 1.6458999999999918e-05, 1.6735999999999834e-05, 1.6513999999998724e-05, 1.6735999999999834e-05, 1.7027999999998794e-05, 1.730499999999871e-05, 1.7042000000001833e-05, 1.6707999999997225e-05, 1.7320000000001223e-05, 1.7041999999998364e-05, 1.7013999999999224e-05, 1.7028000000002264e-05, 1.7041999999998364e-05, 1.6458000000000444e-05, 1.6749999999999404e-05, 1.7361999999999933e-05, 1.6445000000000348e-05, 1.6444000000000875e-05, 1.7027999999998794e-05, 1.6749999999999404e-05, 1.7013999999999224e-05, 1.6999999999999654e-05, 1.7013999999999224e-05, 1.6445000000000348e-05, 1.730499999999871e-05, 1.6458999999999918e-05, 1.643099999999731e-05, 1.7013999999999224e-05, 1.6763999999998974e-05, 1.6445000000000348e-05, 1.7277999999999044e-05, 1.7027999999998794e-05]</msg>
<status status="PASS" starttime="20201030 10:58:44.246" endtime="20201030 10:58:44.255"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.241" endtime="20201030 10:58:44.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:44.259" endtime="20201030 10:58:44.279"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.258" endtime="20201030 10:58:44.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.256" endtime="20201030 10:58:44.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.894" endtime="20201030 10:58:44.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:43.893" endtime="20201030 10:58:44.280"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.289" endtime="20201030 10:58:44.305"></status>
</kw>
<msg timestamp="20201030 10:58:44.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.288" endtime="20201030 10:58:44.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.306" endtime="20201030 10:58:44.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.309" endtime="20201030 10:58:44.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.285" endtime="20201030 10:58:44.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.283" endtime="20201030 10:58:44.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.318" endtime="20201030 10:58:44.603"></status>
</kw>
<msg timestamp="20201030 10:58:44.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021092222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021110125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.317" endtime="20201030 10:58:44.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021092222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021110125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.607" endtime="20201030 10:58:44.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.616" endtime="20201030 10:58:44.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.314" endtime="20201030 10:58:44.618"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.312" endtime="20201030 10:58:44.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:44.622" level="INFO">${RESULT} = [{'diff': 1.790299999999967e-05}, {'diff': 1.8221999999998295e-05}, {'diff': 1.8152000000000446e-05}, {'diff': 1.790299999999967e-05}, {'diff': 1.8179999999999585e-05}, {'diff': 1.759699999999767e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:44.619" endtime="20201030 10:58:44.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:44.627" level="INFO">${ACCURACY} = {'diff': [1.790299999999967e-05, 1.8221999999998295e-05, 1.8152000000000446e-05, 1.790299999999967e-05, 1.8179999999999585e-05, 1.759699999999767e-05, 1.7598000000000613e-05, 1.815299999999992e-05, 1....</msg>
<status status="PASS" starttime="20201030 10:58:44.623" endtime="20201030 10:58:44.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.631" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 10:58:44.630" endtime="20201030 10:58:44.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.634" level="INFO">VALUE: [1.790299999999967e-05, 1.8221999999998295e-05, 1.8152000000000446e-05, 1.790299999999967e-05, 1.8179999999999585e-05, 1.759699999999767e-05, 1.7598000000000613e-05, 1.815299999999992e-05, 1.7902000000000196e-05, 1.8194000000002625e-05, 1.761100000000071e-05, 1.787500000000053e-05, 1.81950000000021e-05, 1.7320000000001223e-05, 1.761099999999724e-05, 1.787500000000053e-05, 1.759700000000114e-05, 1.808300000000207e-05, 1.816699999999949e-05, 1.816699999999949e-05, 1.786100000000096e-05, 1.759700000000114e-05, 1.811099999999774e-05, 1.8179999999999585e-05, 1.758300000000157e-05, 1.815299999999992e-05, 1.7236999999999808e-05, 1.787500000000053e-05, 1.78890000000001e-05, 1.787500000000053e-05, 1.813900000000035e-05, 1.818099999999906e-05, 1.845899999999845e-05, 1.816699999999949e-05, 1.7597999999997144e-05, 1.816700000000296e-05, 1.737500000000003e-05, 1.790299999999967e-05, 1.8166000000000015e-05, 1.761100000000071e-05, 1.78890000000001e-05, 1.816699999999949e-05, 1.759700000000114e-05, 1.7597999999997144e-05, 1.733300000000132e-05, 1.75829999999981e-05, 1.761100000000071e-05, 1.787500000000053e-05, 1.7901999999996726e-05, 1.759699999999767e-05]</msg>
<status status="PASS" starttime="20201030 10:58:44.632" endtime="20201030 10:58:44.635"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.628" endtime="20201030 10:58:44.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:44.640" endtime="20201030 10:58:44.659"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.638" endtime="20201030 10:58:44.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.637" endtime="20201030 10:58:44.660"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.281" endtime="20201030 10:58:44.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.281" endtime="20201030 10:58:44.661"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.670" endtime="20201030 10:58:44.684"></status>
</kw>
<msg timestamp="20201030 10:58:44.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.668" endtime="20201030 10:58:44.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:44.686" endtime="20201030 10:58:44.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.689" endtime="20201030 10:58:44.690"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.665" endtime="20201030 10:58:44.691"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.663" endtime="20201030 10:58:44.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.698" endtime="20201030 10:58:44.983"></status>
</kw>
<msg timestamp="20201030 10:58:44.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019973236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019991681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.696" endtime="20201030 10:58:44.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:44.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019973236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019991681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:44.987" endtime="20201030 10:58:44.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:44.995" endtime="20201030 10:58:44.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.694" endtime="20201030 10:58:44.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.692" endtime="20201030 10:58:44.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:45.002" level="INFO">${RESULT} = [{'diff': 1.844500000000235e-05}, {'diff': 1.8471999999998545e-05}, {'diff': 1.9291999999997145e-05}, {'diff': 1.9263999999998005e-05}, {'diff': 1.8443999999999405e-05}, {'diff': 1.931900000000028e-05...</msg>
<status status="PASS" starttime="20201030 10:58:44.999" endtime="20201030 10:58:45.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:45.007" level="INFO">${ACCURACY} = {'diff': [1.844500000000235e-05, 1.8471999999998545e-05, 1.9291999999997145e-05, 1.9263999999998005e-05, 1.8443999999999405e-05, 1.931900000000028e-05, 1.8750000000001404e-05, 1.845900000000192e-05, 1...</msg>
<status status="PASS" starttime="20201030 10:58:45.003" endtime="20201030 10:58:45.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.012" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 10:58:45.011" endtime="20201030 10:58:45.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.015" level="INFO">VALUE: [1.844500000000235e-05, 1.8471999999998545e-05, 1.9291999999997145e-05, 1.9263999999998005e-05, 1.8443999999999405e-05, 1.931900000000028e-05, 1.8750000000001404e-05, 1.845900000000192e-05, 1.9014000000001224e-05, 1.9014000000001224e-05, 1.8749999999997935e-05, 1.8722000000002265e-05, 1.8737000000001308e-05, 1.8764000000000974e-05, 1.8999999999998185e-05, 1.8735999999998365e-05, 1.8471999999998545e-05, 1.8443999999999405e-05, 1.937500000000203e-05, 1.8973000000001988e-05, 1.844499999999888e-05, 1.8721999999998795e-05, 1.9028000000000794e-05, 1.902700000000132e-05, 1.8429999999999835e-05, 1.852700000000082e-05, 1.845900000000192e-05, 1.8429999999999835e-05, 1.8735999999998365e-05, 1.844499999999888e-05, 1.8750000000001404e-05, 1.8971999999999045e-05, 1.8472000000002015e-05, 1.9042000000000364e-05, 1.847299999999802e-05, 1.8707999999999225e-05, 1.8999999999998185e-05, 1.8736000000001835e-05, 1.9014000000001224e-05, 1.8749999999997935e-05, 1.8749999999997935e-05, 1.843099999999931e-05, 1.909699999999917e-05, 1.904099999999742e-05, 1.8443999999999405e-05, 1.9042000000000364e-05, 1.904100000000089e-05, 1.933299999999985e-05, 1.9319999999999754e-05, 1.8737000000001308e-05]</msg>
<status status="PASS" starttime="20201030 10:58:45.013" endtime="20201030 10:58:45.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.008" endtime="20201030 10:58:45.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:45.020" endtime="20201030 10:58:45.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.018" endtime="20201030 10:58:45.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.017" endtime="20201030 10:58:45.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.662" endtime="20201030 10:58:45.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:44.661" endtime="20201030 10:58:45.041"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.050" endtime="20201030 10:58:45.065"></status>
</kw>
<msg timestamp="20201030 10:58:45.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.048" endtime="20201030 10:58:45.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.067" endtime="20201030 10:58:45.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.069" endtime="20201030 10:58:45.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.045" endtime="20201030 10:58:45.072"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.043" endtime="20201030 10:58:45.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.079" endtime="20201030 10:58:45.365"></status>
</kw>
<msg timestamp="20201030 10:58:45.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020131264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020151431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.077" endtime="20201030 10:58:45.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020131264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020151431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.370" endtime="20201030 10:58:45.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.378" endtime="20201030 10:58:45.380"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.074" endtime="20201030 10:58:45.380"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.073" endtime="20201030 10:58:45.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:45.384" level="INFO">${RESULT} = [{'diff': 2.016700000000149e-05}, {'diff': 1.98890000000021e-05}, {'diff': 2.016699999999802e-05}, {'diff': 1.991700000000124e-05}, {'diff': 1.9597999999999144e-05}, {'diff': 1.9319999999999754e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:45.381" endtime="20201030 10:58:45.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:45.388" level="INFO">${ACCURACY} = {'diff': [2.016700000000149e-05, 1.98890000000021e-05, 2.016699999999802e-05, 1.991700000000124e-05, 1.9597999999999144e-05, 1.9319999999999754e-05, 1.9319999999999754e-05, 1.9292000000000614e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 10:58:45.385" endtime="20201030 10:58:45.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.393" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 10:58:45.392" endtime="20201030 10:58:45.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.395" level="INFO">VALUE: [2.016700000000149e-05, 1.98890000000021e-05, 2.016699999999802e-05, 1.991700000000124e-05, 1.9597999999999144e-05, 1.9319999999999754e-05, 1.9319999999999754e-05, 1.9292000000000614e-05, 1.987500000000253e-05, 1.959699999999967e-05, 1.9583999999999574e-05, 1.962500000000228e-05, 1.9306000000000184e-05, 1.9319999999999754e-05, 1.962499999999881e-05, 1.988899999999863e-05, 2.016700000000149e-05, 1.9306000000000184e-05, 1.990300000000167e-05, 2.016700000000149e-05, 1.9306000000000184e-05, 1.95830000000001e-05, 1.959699999999967e-05, 1.9305999999996715e-05, 1.961099999999924e-05, 1.988899999999863e-05, 1.959699999999967e-05, 1.931900000000028e-05, 1.98890000000021e-05, 1.9887999999999156e-05, 1.9611999999998714e-05, 2.016700000000149e-05, 2.016700000000149e-05, 1.986099999999949e-05, 1.931900000000028e-05, 1.929099999999767e-05, 1.9598000000002613e-05, 1.959699999999967e-05, 2.016700000000149e-05, 1.9319999999999754e-05, 1.9292000000000614e-05, 1.959699999999967e-05, 1.987500000000253e-05, 2.016700000000149e-05, 2.0151999999998976e-05, 1.961099999999924e-05, 2.018100000000106e-05, 1.987499999999906e-05, 1.981899999999731e-05, 2.0180000000001586e-05]</msg>
<status status="PASS" starttime="20201030 10:58:45.394" endtime="20201030 10:58:45.396"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.389" endtime="20201030 10:58:45.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:45.400" endtime="20201030 10:58:45.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.399" endtime="20201030 10:58:45.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.398" endtime="20201030 10:58:45.421"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.042" endtime="20201030 10:58:45.421"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.041" endtime="20201030 10:58:45.421"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.430" endtime="20201030 10:58:45.448"></status>
</kw>
<msg timestamp="20201030 10:58:45.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.428" endtime="20201030 10:58:45.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.449" endtime="20201030 10:58:45.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.452" endtime="20201030 10:58:45.454"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.425" endtime="20201030 10:58:45.454"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.423" endtime="20201030 10:58:45.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.461" endtime="20201030 10:58:45.766"></status>
</kw>
<msg timestamp="20201030 10:58:45.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.459" endtime="20201030 10:58:45.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.775" endtime="20201030 10:58:45.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.784" endtime="20201030 10:58:45.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.457" endtime="20201030 10:58:45.787"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.455" endtime="20201030 10:58:45.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:45.791" level="INFO">${RESULT} = [{'diff': 2.0429999999998366e-05}, {'diff': 2.1264000000000005e-05}, {'diff': 2.0444000000001405e-05}, {'diff': 2.101300000000028e-05}, {'diff': 2.1013999999999755e-05}, {'diff': 2.0472000000000545e-0...</msg>
<status status="PASS" starttime="20201030 10:58:45.788" endtime="20201030 10:58:45.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:45.795" level="INFO">${ACCURACY} = {'diff': [2.0429999999998366e-05, 2.1264000000000005e-05, 2.0444000000001405e-05, 2.101300000000028e-05, 2.1013999999999755e-05, 2.0472000000000545e-05, 2.1319999999998285e-05, 2.1027999999999325e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:45.792" endtime="20201030 10:58:45.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.799" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 10:58:45.798" endtime="20201030 10:58:45.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.802" level="INFO">VALUE: [2.0429999999998366e-05, 2.1264000000000005e-05, 2.0444000000001405e-05, 2.101300000000028e-05, 2.1013999999999755e-05, 2.0472000000000545e-05, 2.1319999999998285e-05, 2.1027999999999325e-05, 2.043100000000131e-05, 2.0444000000001405e-05, 2.0444000000001405e-05, 2.1334000000001324e-05, 2.0693999999998186e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.1305999999998715e-05, 2.044500000000088e-05, 2.0736000000000365e-05, 2.069500000000113e-05, 2.102699999999985e-05, 2.0986000000000615e-05, 2.130499999999924e-05, 2.0749999999999935e-05, 2.0707999999997756e-05, 2.0457999999997506e-05, 2.0749999999999935e-05, 2.1014000000003225e-05, 2.045899999999698e-05, 2.0749999999999935e-05, 2.1305999999998715e-05, 2.1027999999999325e-05, 2.1027999999999325e-05, 2.0444000000001405e-05, 2.043100000000131e-05, 2.1291999999999145e-05, 2.0458000000000975e-05, 2.045900000000045e-05, 2.1291999999999145e-05, 2.0736000000000365e-05, 2.045900000000045e-05, 2.1027999999999325e-05, 2.041700000000174e-05, 2.0749999999999935e-05, 2.104099999999942e-05, 2.044500000000088e-05, 2.072300000000027e-05, 2.0457999999997506e-05, 2.0791999999998645e-05, 2.044500000000088e-05, 2.0749999999999935e-05]</msg>
<status status="PASS" starttime="20201030 10:58:45.800" endtime="20201030 10:58:45.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.796" endtime="20201030 10:58:45.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:45.808" endtime="20201030 10:58:45.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.806" endtime="20201030 10:58:45.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.805" endtime="20201030 10:58:45.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.422" endtime="20201030 10:58:45.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.421" endtime="20201030 10:58:45.828"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.837" endtime="20201030 10:58:45.852"></status>
</kw>
<msg timestamp="20201030 10:58:45.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.835" endtime="20201030 10:58:45.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:45.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:45.854" endtime="20201030 10:58:45.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.856" endtime="20201030 10:58:45.858"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.833" endtime="20201030 10:58:45.858"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.831" endtime="20201030 10:58:45.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:45.865" endtime="20201030 10:58:46.149"></status>
</kw>
<msg timestamp="20201030 10:58:46.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:45.864" endtime="20201030 10:58:46.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.154" endtime="20201030 10:58:46.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.162" endtime="20201030 10:58:46.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.861" endtime="20201030 10:58:46.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.859" endtime="20201030 10:58:46.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:46.169" level="INFO">${RESULT} = [{'diff': 2.163900000000038e-05}, {'diff': 2.162500000000081e-05}, {'diff': 2.161100000000124e-05}, {'diff': 2.15830000000021e-05}, {'diff': 2.2236000000001865e-05}, {'diff': 2.15969999999982e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:58:46.165" endtime="20201030 10:58:46.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:46.173" level="INFO">${ACCURACY} = {'diff': [2.163900000000038e-05, 2.162500000000081e-05, 2.161100000000124e-05, 2.15830000000021e-05, 2.2236000000001865e-05, 2.15969999999982e-05, 2.1235999999997396e-05, 2.2193999999999686e-05, 2.161...</msg>
<status status="PASS" starttime="20201030 10:58:46.170" endtime="20201030 10:58:46.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.178" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 10:58:46.177" endtime="20201030 10:58:46.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.180" level="INFO">VALUE: [2.163900000000038e-05, 2.162500000000081e-05, 2.161100000000124e-05, 2.15830000000021e-05, 2.2236000000001865e-05, 2.15969999999982e-05, 2.1235999999997396e-05, 2.2193999999999686e-05, 2.161099999999777e-05, 2.159700000000167e-05, 2.188900000000063e-05, 2.216700000000002e-05, 2.1306000000002184e-05, 2.216700000000002e-05, 2.159700000000167e-05, 2.131899999999881e-05, 2.187500000000106e-05, 2.15969999999982e-05, 2.161100000000124e-05, 2.15969999999982e-05, 2.219499999999916e-05, 2.218099999999959e-05, 2.162500000000081e-05, 2.161099999999777e-05, 2.161099999999777e-05, 2.1569999999998535e-05, 2.216700000000002e-05, 2.211100000000174e-05, 2.1584000000001574e-05, 2.1320000000001754e-05, 2.1598000000001144e-05, 2.220899999999873e-05, 2.133299999999838e-05, 2.159700000000167e-05, 2.130499999999924e-05, 2.219499999999916e-05, 2.188900000000063e-05, 2.131899999999881e-05, 2.188900000000063e-05, 2.15969999999982e-05, 2.216700000000002e-05, 2.218099999999959e-05, 2.15969999999982e-05, 2.216700000000002e-05, 2.1819999999998785e-05, 2.158299999999863e-05, 2.186099999999802e-05, 2.1806000000002684e-05, 2.188899999999716e-05, 2.1250000000000435e-05]</msg>
<status status="PASS" starttime="20201030 10:58:46.179" endtime="20201030 10:58:46.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.174" endtime="20201030 10:58:46.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:46.185" endtime="20201030 10:58:46.205"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.184" endtime="20201030 10:58:46.205"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.183" endtime="20201030 10:58:46.206"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.829" endtime="20201030 10:58:46.206"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:45.829" endtime="20201030 10:58:46.206"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.215" endtime="20201030 10:58:46.230"></status>
</kw>
<msg timestamp="20201030 10:58:46.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.213" endtime="20201030 10:58:46.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.231" endtime="20201030 10:58:46.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.234" endtime="20201030 10:58:46.235"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.211" endtime="20201030 10:58:46.236"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.208" endtime="20201030 10:58:46.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.242" endtime="20201030 10:58:46.530"></status>
</kw>
<msg timestamp="20201030 10:58:46.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019550833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.241" endtime="20201030 10:58:46.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019550833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.534" endtime="20201030 10:58:46.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.543" endtime="20201030 10:58:46.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.238" endtime="20201030 10:58:46.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.237" endtime="20201030 10:58:46.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:46.549" level="INFO">${RESULT} = [{'diff': 2.2499999999998216e-05}, {'diff': 2.2443999999999936e-05}, {'diff': 2.2735999999998896e-05}, {'diff': 2.3027999999997856e-05}, {'diff': 2.3041999999997426e-05}, {'diff': 2.3027999999997856e-...</msg>
<status status="PASS" starttime="20201030 10:58:46.546" endtime="20201030 10:58:46.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:46.553" level="INFO">${ACCURACY} = {'diff': [2.2499999999998216e-05, 2.2443999999999936e-05, 2.2735999999998896e-05, 2.3027999999997856e-05, 2.3041999999997426e-05, 2.3027999999997856e-05, 2.330500000000124e-05, 2.241700000000027e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:46.550" endtime="20201030 10:58:46.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.558" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 10:58:46.557" endtime="20201030 10:58:46.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.560" level="INFO">VALUE: [2.2499999999998216e-05, 2.2443999999999936e-05, 2.2735999999998896e-05, 2.3027999999997856e-05, 2.3041999999997426e-05, 2.3027999999997856e-05, 2.330500000000124e-05, 2.241700000000027e-05, 2.2471999999999076e-05, 2.3347999999999425e-05, 2.2750000000001935e-05, 2.3013999999998286e-05, 2.2750000000001935e-05, 2.243099999999984e-05, 2.3026999999998382e-05, 2.27229999999988e-05, 2.2749999999998466e-05, 2.302700000000185e-05, 2.2749999999998466e-05, 2.245899999999898e-05, 2.2443999999999936e-05, 2.3028000000001325e-05, 2.2471999999999076e-05, 2.3320000000000285e-05, 2.3028000000001325e-05, 2.2443999999999936e-05, 2.334699999999995e-05, 2.2485999999998646e-05, 2.2971999999999576e-05, 2.2457999999999506e-05, 2.237500000000156e-05, 2.3249999999998966e-05, 2.270899999999923e-05, 2.3306000000000715e-05, 2.304100000000142e-05, 2.2486000000002115e-05, 2.337500000000256e-05, 2.2721999999999326e-05, 2.244499999999941e-05, 2.2471999999999076e-05, 2.266700000000052e-05, 2.3013999999998286e-05, 2.2735999999998896e-05, 2.2457999999999506e-05, 2.3014000000001755e-05, 2.2471999999999076e-05, 2.2416000000000796e-05, 2.243099999999984e-05, 2.3278000000001575e-05, 2.2764000000001505e-05]</msg>
<status status="PASS" starttime="20201030 10:58:46.559" endtime="20201030 10:58:46.561"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.554" endtime="20201030 10:58:46.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:46.565" endtime="20201030 10:58:46.585"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.564" endtime="20201030 10:58:46.585"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.562" endtime="20201030 10:58:46.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.207" endtime="20201030 10:58:46.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.206" endtime="20201030 10:58:46.586"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.595" endtime="20201030 10:58:46.610"></status>
</kw>
<msg timestamp="20201030 10:58:46.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.593" endtime="20201030 10:58:46.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.612" endtime="20201030 10:58:46.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.614" endtime="20201030 10:58:46.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.591" endtime="20201030 10:58:46.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.589" endtime="20201030 10:58:46.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.623" endtime="20201030 10:58:46.910"></status>
</kw>
<msg timestamp="20201030 10:58:46.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020304972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.622" endtime="20201030 10:58:46.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020304972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:46.914" endtime="20201030 10:58:46.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.923" endtime="20201030 10:58:46.924"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.619" endtime="20201030 10:58:46.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.618" endtime="20201030 10:58:46.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:46.929" level="INFO">${RESULT} = [{'diff': 2.3834000000000355e-05}, {'diff': 2.388899999999916e-05}, {'diff': 2.4179999999998647e-05}, {'diff': 2.3611999999999245e-05}, {'diff': 2.416700000000202e-05}, {'diff': 2.356900000000106e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:46.926" endtime="20201030 10:58:46.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:46.933" level="INFO">${ACCURACY} = {'diff': [2.3834000000000355e-05, 2.388899999999916e-05, 2.4179999999998647e-05, 2.3611999999999245e-05, 2.416700000000202e-05, 2.356900000000106e-05, 2.418100000000159e-05, 2.420899999999726e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 10:58:46.930" endtime="20201030 10:58:46.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.938" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 10:58:46.937" endtime="20201030 10:58:46.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.940" level="INFO">VALUE: [2.3834000000000355e-05, 2.388899999999916e-05, 2.4179999999998647e-05, 2.3611999999999245e-05, 2.416700000000202e-05, 2.356900000000106e-05, 2.418100000000159e-05, 2.420899999999726e-05, 2.3597999999999675e-05, 2.3320000000000285e-05, 2.4207999999997787e-05, 2.3597999999999675e-05, 2.387499999999959e-05, 2.361099999999977e-05, 2.413899999999941e-05, 2.3333999999999855e-05, 2.388899999999916e-05, 2.384700000000045e-05, 2.3277999999998106e-05, 2.3235999999999396e-05, 2.365299999999848e-05, 2.35970000000002e-05, 2.4166000000002547e-05, 2.3584000000000105e-05, 2.35970000000002e-05, 2.4180000000002116e-05, 2.366700000000152e-05, 2.3612000000002714e-05, 2.361099999999977e-05, 2.39169999999983e-05, 2.35970000000002e-05, 2.3306000000000715e-05, 2.35970000000002e-05, 2.386100000000002e-05, 2.32770000000021e-05, 2.3304999999997772e-05, 2.388899999999916e-05, 2.4137999999999937e-05, 2.388899999999916e-05, 2.3582999999997162e-05, 2.412499999999984e-05, 2.3332999999996912e-05, 2.329100000000167e-05, 2.4165999999999077e-05, 2.35970000000002e-05, 2.4166000000002547e-05, 2.361099999999977e-05, 2.331900000000081e-05, 2.4179999999998647e-05, 2.361099999999977e-05]</msg>
<status status="PASS" starttime="20201030 10:58:46.939" endtime="20201030 10:58:46.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.934" endtime="20201030 10:58:46.942"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:46.946" endtime="20201030 10:58:46.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.945" endtime="20201030 10:58:46.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.943" endtime="20201030 10:58:46.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.587" endtime="20201030 10:58:46.967"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.586" endtime="20201030 10:58:46.967"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.975" endtime="20201030 10:58:46.991"></status>
</kw>
<msg timestamp="20201030 10:58:46.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.974" endtime="20201030 10:58:46.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:46.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:46.993" endtime="20201030 10:58:46.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:46.995" endtime="20201030 10:58:46.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.971" endtime="20201030 10:58:46.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.969" endtime="20201030 10:58:46.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.004" endtime="20201030 10:58:47.289"></status>
</kw>
<msg timestamp="20201030 10:58:47.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019890389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019915153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.003" endtime="20201030 10:58:47.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019890389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019915153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.293" endtime="20201030 10:58:47.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.301" endtime="20201030 10:58:47.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.000" endtime="20201030 10:58:47.303"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.998" endtime="20201030 10:58:47.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:47.308" level="INFO">${RESULT} = [{'diff': 2.4764000000000036e-05}, {'diff': 2.5014000000000286e-05}, {'diff': 2.4500000000000216e-05}, {'diff': 2.445899999999751e-05}, {'diff': 2.5305999999999246e-05}, {'diff': 2.4736000000000896e-0...</msg>
<status status="PASS" starttime="20201030 10:58:47.305" endtime="20201030 10:58:47.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:47.313" level="INFO">${ACCURACY} = {'diff': [2.4764000000000036e-05, 2.5014000000000286e-05, 2.4500000000000216e-05, 2.445899999999751e-05, 2.5305999999999246e-05, 2.4736000000000896e-05, 2.444500000000141e-05, 2.4749999999996997e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:47.309" endtime="20201030 10:58:47.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.317" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 10:58:47.316" endtime="20201030 10:58:47.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.320" level="INFO">VALUE: [2.4764000000000036e-05, 2.5014000000000286e-05, 2.4500000000000216e-05, 2.445899999999751e-05, 2.5305999999999246e-05, 2.4736000000000896e-05, 2.444500000000141e-05, 2.4749999999996997e-05, 2.5027999999999856e-05, 2.4458000000001506e-05, 2.5263999999997067e-05, 2.473700000000037e-05, 2.5027000000000382e-05, 2.4750000000000466e-05, 2.5306000000002715e-05, 2.4985999999997677e-05, 2.4722000000001326e-05, 2.5319999999998816e-05, 2.443100000000184e-05, 2.445899999999751e-05, 2.4736000000000896e-05, 2.4722000000001326e-05, 2.4750000000000466e-05, 2.5318999999999342e-05, 2.5305999999999246e-05, 2.4652000000000007e-05, 2.5334000000001855e-05, 2.4736000000000896e-05, 2.4458000000001506e-05, 2.4693999999998717e-05, 2.5056000000002465e-05, 2.4722000000001326e-05, 2.5304999999999772e-05, 2.44169999999988e-05, 2.5026999999996913e-05, 2.4750000000000466e-05, 2.5318999999999342e-05, 2.445900000000098e-05, 2.4458000000001506e-05, 2.5319999999998816e-05, 2.5027999999999856e-05, 2.5320000000002285e-05, 2.4986000000001146e-05, 2.445899999999751e-05, 2.5026999999996913e-05, 2.445900000000098e-05, 2.4471999999997607e-05, 2.5041999999999426e-05, 2.4986000000001146e-05, 2.4472000000001076e-05]</msg>
<status status="PASS" starttime="20201030 10:58:47.318" endtime="20201030 10:58:47.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.313" endtime="20201030 10:58:47.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:47.325" endtime="20201030 10:58:47.344"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.323" endtime="20201030 10:58:47.345"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.322" endtime="20201030 10:58:47.345"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.968" endtime="20201030 10:58:47.345"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:46.967" endtime="20201030 10:58:47.345"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.355" endtime="20201030 10:58:47.369"></status>
</kw>
<msg timestamp="20201030 10:58:47.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.353" endtime="20201030 10:58:47.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.371" endtime="20201030 10:58:47.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.373" endtime="20201030 10:58:47.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.351" endtime="20201030 10:58:47.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.348" endtime="20201030 10:58:47.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.382" endtime="20201030 10:58:47.669"></status>
</kw>
<msg timestamp="20201030 10:58:47.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020191056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.380" endtime="20201030 10:58:47.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020191056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.673" endtime="20201030 10:58:47.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.681" endtime="20201030 10:58:47.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.378" endtime="20201030 10:58:47.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.376" endtime="20201030 10:58:47.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:47.688" level="INFO">${RESULT} = [{'diff': 2.590299999999726e-05}, {'diff': 2.5528000000000356e-05}, {'diff': 2.5596999999998732e-05}, {'diff': 2.5596999999998732e-05}, {'diff': 2.561100000000177e-05}, {'diff': 2.5568999999999592e-05...</msg>
<status status="PASS" starttime="20201030 10:58:47.685" endtime="20201030 10:58:47.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:47.692" level="INFO">${ACCURACY} = {'diff': [2.590299999999726e-05, 2.5528000000000356e-05, 2.5596999999998732e-05, 2.5596999999998732e-05, 2.561100000000177e-05, 2.5568999999999592e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:58:47.689" endtime="20201030 10:58:47.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.696" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 10:58:47.695" endtime="20201030 10:58:47.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.699" level="INFO">VALUE: [2.590299999999726e-05, 2.5528000000000356e-05, 2.5596999999998732e-05, 2.5596999999998732e-05, 2.561100000000177e-05, 2.5568999999999592e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.5291999999999676e-05, 2.5846999999998982e-05, 2.616700000000055e-05, 2.5278000000000106e-05, 2.587500000000159e-05, 2.615299999999751e-05, 2.616700000000055e-05, 2.566700000000005e-05, 2.5610999999998302e-05, 2.561100000000177e-05, 2.6180000000000647e-05, 2.5596999999998732e-05, 2.6180000000000647e-05, 2.613900000000141e-05, 2.5596999999998732e-05, 2.587500000000159e-05, 2.6180000000000647e-05, 2.5597999999998206e-05, 2.588899999999769e-05, 2.5610999999998302e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.561100000000177e-05, 2.6194000000000217e-05, 2.55970000000022e-05, 2.5598000000001675e-05, 2.558300000000263e-05, 2.6235999999998927e-05, 2.619499999999969e-05, 2.5360999999998052e-05, 2.537499999999762e-05, 2.615300000000098e-05, 2.588900000000116e-05, 2.536100000000152e-05, 2.616700000000055e-05, 2.5596999999998732e-05, 2.5596999999998732e-05, 2.6098000000002175e-05, 2.5569999999999066e-05, 2.561100000000177e-05, 2.613900000000141e-05, 2.563899999999744e-05]</msg>
<status status="PASS" starttime="20201030 10:58:47.697" endtime="20201030 10:58:47.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.693" endtime="20201030 10:58:47.700"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:47.704" endtime="20201030 10:58:47.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.702" endtime="20201030 10:58:47.724"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.701" endtime="20201030 10:58:47.724"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.347" endtime="20201030 10:58:47.724"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.346" endtime="20201030 10:58:47.724"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.733" endtime="20201030 10:58:47.749"></status>
</kw>
<msg timestamp="20201030 10:58:47.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.731" endtime="20201030 10:58:47.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:47.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:47.750" endtime="20201030 10:58:47.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.753" endtime="20201030 10:58:47.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.729" endtime="20201030 10:58:47.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.727" endtime="20201030 10:58:47.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:47.762" endtime="20201030 10:58:48.048"></status>
</kw>
<msg timestamp="20201030 10:58:48.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:47.760" endtime="20201030 10:58:48.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.052" endtime="20201030 10:58:48.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.061" endtime="20201030 10:58:48.062"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.758" endtime="20201030 10:58:48.063"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.756" endtime="20201030 10:58:48.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:48.067" level="INFO">${RESULT} = [{'diff': 2.6444000000000467e-05}, {'diff': 2.7028000000001856e-05}, {'diff': 2.6471999999999607e-05}, {'diff': 2.7026999999998913e-05}, {'diff': 2.7028000000001856e-05}, {'diff': 2.645899999999951e-0...</msg>
<status status="PASS" starttime="20201030 10:58:48.064" endtime="20201030 10:58:48.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:48.071" level="INFO">${ACCURACY} = {'diff': [2.6444000000000467e-05, 2.7028000000001856e-05, 2.6471999999999607e-05, 2.7026999999998913e-05, 2.7028000000001856e-05, 2.645899999999951e-05, 2.7028000000001856e-05, 2.6458000000000037e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:48.068" endtime="20201030 10:58:48.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.076" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 10:58:48.075" endtime="20201030 10:58:48.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.078" level="INFO">VALUE: [2.6444000000000467e-05, 2.7028000000001856e-05, 2.6471999999999607e-05, 2.7026999999998913e-05, 2.7028000000001856e-05, 2.645899999999951e-05, 2.7028000000001856e-05, 2.6458000000000037e-05, 2.7013999999998817e-05, 2.6735999999999427e-05, 2.645899999999951e-05, 2.7027999999998387e-05, 2.6749999999998997e-05, 2.638899999999819e-05, 2.6820000000000316e-05, 2.6958000000000537e-05, 2.7040999999998483e-05, 2.6735999999999427e-05, 2.6485999999999177e-05, 2.7027999999998387e-05, 2.6471999999999607e-05, 2.7028000000001856e-05, 2.7042000000001426e-05, 2.6778000000001606e-05, 2.6527999999997887e-05, 2.644499999999994e-05, 2.6458000000000037e-05, 2.644499999999994e-05, 2.6764000000002036e-05, 2.6444000000000467e-05, 2.645899999999951e-05, 2.7040999999998483e-05, 2.6430000000000897e-05, 2.7320000000000816e-05, 2.6735999999999427e-05, 2.7318999999997873e-05, 2.6735999999999427e-05, 2.6764000000002036e-05, 2.6458000000000037e-05, 2.6763999999998567e-05, 2.7097999999999706e-05, 2.6708000000000287e-05, 2.644500000000341e-05, 2.6972000000000107e-05, 2.7040999999998483e-05, 2.7042000000001426e-05, 2.7083000000000662e-05, 2.668100000000062e-05, 2.6999999999999247e-05, 2.7040999999998483e-05]</msg>
<status status="PASS" starttime="20201030 10:58:48.077" endtime="20201030 10:58:48.080"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.072" endtime="20201030 10:58:48.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:48.084" endtime="20201030 10:58:48.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.082" endtime="20201030 10:58:48.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.081" endtime="20201030 10:58:48.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.725" endtime="20201030 10:58:48.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:47.725" endtime="20201030 10:58:48.104"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.113" endtime="20201030 10:58:48.129"></status>
</kw>
<msg timestamp="20201030 10:58:48.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.111" endtime="20201030 10:58:48.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.131" endtime="20201030 10:58:48.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.133" endtime="20201030 10:58:48.135"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.109" endtime="20201030 10:58:48.135"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.107" endtime="20201030 10:58:48.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.142" endtime="20201030 10:58:48.430"></status>
</kw>
<msg timestamp="20201030 10:58:48.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019893194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.141" endtime="20201030 10:58:48.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019893194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.434" endtime="20201030 10:58:48.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.442" endtime="20201030 10:58:48.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.138" endtime="20201030 10:58:48.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.136" endtime="20201030 10:58:48.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:48.448" level="INFO">${RESULT} = [{'diff': 2.7611000000000302e-05}, {'diff': 2.7888999999999692e-05}, {'diff': 2.7583000000001162e-05}, {'diff': 2.8193999999998748e-05}, {'diff': 2.7875000000000122e-05}, {'diff': 2.815300000000298e-0...</msg>
<status status="PASS" starttime="20201030 10:58:48.445" endtime="20201030 10:58:48.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:48.453" level="INFO">${ACCURACY} = {'diff': [2.7611000000000302e-05, 2.7888999999999692e-05, 2.7583000000001162e-05, 2.8193999999998748e-05, 2.7875000000000122e-05, 2.815300000000298e-05, 2.7388999999999192e-05, 2.8471999999998138e-05,...</msg>
<status status="PASS" starttime="20201030 10:58:48.449" endtime="20201030 10:58:48.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.458" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 10:58:48.457" endtime="20201030 10:58:48.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.460" level="INFO">VALUE: [2.7611000000000302e-05, 2.7888999999999692e-05, 2.7583000000001162e-05, 2.8193999999998748e-05, 2.7875000000000122e-05, 2.815300000000298e-05, 2.7388999999999192e-05, 2.8471999999998138e-05, 2.7875000000000122e-05, 2.8207999999998318e-05, 2.816700000000255e-05, 2.8179999999999178e-05, 2.791699999999883e-05, 2.7598000000000206e-05, 2.7318999999997873e-05, 2.818100000000212e-05, 2.7638999999999442e-05, 2.7611000000000302e-05, 2.8207999999998318e-05, 2.8138999999999942e-05, 2.7611000000000302e-05, 2.7319999999997346e-05, 2.847299999999761e-05, 2.816700000000255e-05, 2.7332999999997443e-05, 2.818099999999865e-05, 2.816700000000255e-05, 2.7624999999999872e-05, 2.8165999999999608e-05, 2.7583000000001162e-05, 2.818099999999865e-05, 2.791699999999883e-05, 2.7624999999999872e-05, 2.7304999999998303e-05, 2.7304999999998303e-05, 2.7888999999999692e-05, 2.8165999999999608e-05, 2.7584000000000636e-05, 2.7875000000000122e-05, 2.7875000000000122e-05, 2.8152999999999512e-05, 2.8194000000002217e-05, 2.7598000000000206e-05, 2.7597000000000732e-05, 2.7888999999999692e-05, 2.818100000000212e-05, 2.7888999999999692e-05, 2.815300000000298e-05, 2.7306000000001246e-05, 2.7305999999997776e-05]</msg>
<status status="PASS" starttime="20201030 10:58:48.459" endtime="20201030 10:58:48.461"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.454" endtime="20201030 10:58:48.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:48.465" endtime="20201030 10:58:48.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.464" endtime="20201030 10:58:48.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.462" endtime="20201030 10:58:48.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.105" endtime="20201030 10:58:48.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.105" endtime="20201030 10:58:48.486"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.494" endtime="20201030 10:58:48.511"></status>
</kw>
<msg timestamp="20201030 10:58:48.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.493" endtime="20201030 10:58:48.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.512" endtime="20201030 10:58:48.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.514" endtime="20201030 10:58:48.516"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.490" endtime="20201030 10:58:48.517"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.488" endtime="20201030 10:58:48.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.523" endtime="20201030 10:58:48.811"></status>
</kw>
<msg timestamp="20201030 10:58:48.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019918833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019948139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.522" endtime="20201030 10:58:48.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019918833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019948139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.815" endtime="20201030 10:58:48.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.823" endtime="20201030 10:58:48.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.519" endtime="20201030 10:58:48.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.518" endtime="20201030 10:58:48.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:48.830" level="INFO">${RESULT} = [{'diff': 2.9305999999999777e-05}, {'diff': 2.845899999999804e-05}, {'diff': 2.9028000000000387e-05}, {'diff': 2.8750000000000997e-05}, {'diff': 2.9346999999999013e-05}, {'diff': 2.9014000000000817e-0...</msg>
<status status="PASS" starttime="20201030 10:58:48.826" endtime="20201030 10:58:48.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:48.834" level="INFO">${ACCURACY} = {'diff': [2.9305999999999777e-05, 2.845899999999804e-05, 2.9028000000000387e-05, 2.8750000000000997e-05, 2.9346999999999013e-05, 2.9014000000000817e-05, 2.868099999999915e-05, 2.8443999999998998e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:48.830" endtime="20201030 10:58:48.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.838" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 10:58:48.837" endtime="20201030 10:58:48.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.840" level="INFO">VALUE: [2.9305999999999777e-05, 2.845899999999804e-05, 2.9028000000000387e-05, 2.8750000000000997e-05, 2.9346999999999013e-05, 2.9014000000000817e-05, 2.868099999999915e-05, 2.8443999999998998e-05, 2.9278000000000637e-05, 2.9291000000000733e-05, 2.9318999999999873e-05, 2.9028000000000387e-05, 2.9014000000000817e-05, 2.9028000000000387e-05, 2.8708000000002287e-05, 2.9026999999997444e-05, 2.9292000000000207e-05, 2.845900000000151e-05, 2.9026999999997444e-05, 2.895900000000201e-05, 2.9027000000000913e-05, 2.8749999999997528e-05, 2.8763000000001093e-05, 2.844500000000194e-05, 2.8443999999998998e-05, 2.8763999999997097e-05, 2.8472000000001607e-05, 2.9026999999997444e-05, 2.8749999999997528e-05, 2.8457999999998568e-05, 2.9041000000000483e-05, 2.9305999999999777e-05, 2.9332999999999443e-05, 2.9305999999999777e-05, 2.8750000000000997e-05, 2.9027999999996917e-05, 2.9028000000000387e-05, 2.8750000000000997e-05, 2.9027000000000913e-05, 2.8514000000000317e-05, 2.9028000000000387e-05, 2.9014000000000817e-05, 2.9028000000000387e-05, 2.8471999999998138e-05, 2.8721999999998388e-05, 2.9264000000001067e-05, 2.9028000000000387e-05, 2.9013999999997347e-05, 2.872300000000133e-05, 2.8429999999999428e-05]</msg>
<status status="PASS" starttime="20201030 10:58:48.839" endtime="20201030 10:58:48.841"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.834" endtime="20201030 10:58:48.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:48.845" endtime="20201030 10:58:48.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.844" endtime="20201030 10:58:48.865"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.843" endtime="20201030 10:58:48.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.487" endtime="20201030 10:58:48.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.486" endtime="20201030 10:58:48.866"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.875" endtime="20201030 10:58:48.892"></status>
</kw>
<msg timestamp="20201030 10:58:48.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.873" endtime="20201030 10:58:48.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:48.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:48.894" endtime="20201030 10:58:48.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.896" endtime="20201030 10:58:48.898"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.871" endtime="20201030 10:58:48.898"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.869" endtime="20201030 10:58:48.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:48.905" endtime="20201030 10:58:49.190"></status>
</kw>
<msg timestamp="20201030 10:58:49.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022750514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022780667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:48.904" endtime="20201030 10:58:49.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022750514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022780667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.194" endtime="20201030 10:58:49.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.203" endtime="20201030 10:58:49.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.901" endtime="20201030 10:58:49.205"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.900" endtime="20201030 10:58:49.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:49.209" level="INFO">${RESULT} = [{'diff': 3.0153000000001512e-05}, {'diff': 3.0167000000001082e-05}, {'diff': 3.0221999999999888e-05}, {'diff': 2.9375000000001622e-05}, {'diff': 3.0167000000001082e-05}, {'diff': 2.9874999999998653e-...</msg>
<status status="PASS" starttime="20201030 10:58:49.206" endtime="20201030 10:58:49.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:49.213" level="INFO">${ACCURACY} = {'diff': [3.0153000000001512e-05, 3.0167000000001082e-05, 3.0221999999999888e-05, 2.9375000000001622e-05, 3.0167000000001082e-05, 2.9874999999998653e-05, 3.0181000000000652e-05, 2.9624999999998403e-05...</msg>
<status status="PASS" starttime="20201030 10:58:49.210" endtime="20201030 10:58:49.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.218" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 10:58:49.217" endtime="20201030 10:58:49.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.220" level="INFO">VALUE: [3.0153000000001512e-05, 3.0167000000001082e-05, 3.0221999999999888e-05, 2.9375000000001622e-05, 3.0167000000001082e-05, 2.9874999999998653e-05, 3.0181000000000652e-05, 2.9624999999998403e-05, 2.9582999999999693e-05, 2.9610999999998833e-05, 2.9318999999999873e-05, 2.9305999999999777e-05, 3.0181000000000652e-05, 2.9860999999999083e-05, 2.9292000000000207e-05, 2.9569999999999597e-05, 3.0221999999999888e-05, 2.965199999999807e-05, 2.9902000000001788e-05, 2.9596999999999263e-05, 3.0167000000001082e-05, 2.9596999999999263e-05, 2.9625000000001872e-05, 2.9612000000001776e-05, 2.9624999999998403e-05, 2.9597000000002732e-05, 2.9598000000002206e-05, 2.9888999999998223e-05, 3.019500000000022e-05, 2.9625000000001872e-05, 2.9903000000001262e-05, 3.0167000000001082e-05, 2.9889000000001692e-05, 3.0167000000001082e-05, 2.9528000000000887e-05, 2.9889000000001692e-05, 3.0167000000001082e-05, 2.9889000000001692e-05, 2.9596999999999263e-05, 3.0167000000001082e-05, 2.9888999999998223e-05, 3.0167000000001082e-05, 2.9334000000002386e-05, 2.9888999999998223e-05, 3.0194000000000748e-05, 2.9597000000002732e-05, 2.9596999999999263e-05, 2.9611000000002302e-05, 2.9598000000002206e-05, 2.9597000000002732e-05]</msg>
<status status="PASS" starttime="20201030 10:58:49.219" endtime="20201030 10:58:49.222"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.214" endtime="20201030 10:58:49.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:49.226" endtime="20201030 10:58:49.245"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.224" endtime="20201030 10:58:49.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.223" endtime="20201030 10:58:49.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.867" endtime="20201030 10:58:49.247"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:48.866" endtime="20201030 10:58:49.247"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.255" endtime="20201030 10:58:49.270"></status>
</kw>
<msg timestamp="20201030 10:58:49.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.254" endtime="20201030 10:58:49.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.271" endtime="20201030 10:58:49.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.274" endtime="20201030 10:58:49.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.251" endtime="20201030 10:58:49.276"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.249" endtime="20201030 10:58:49.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.283" endtime="20201030 10:58:49.568"></status>
</kw>
<msg timestamp="20201030 10:58:49.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019316625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019347597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.281" endtime="20201030 10:58:49.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019316625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019347597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.572" endtime="20201030 10:58:49.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.581" endtime="20201030 10:58:49.582"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.279" endtime="20201030 10:58:49.583"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.277" endtime="20201030 10:58:49.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:49.587" level="INFO">${RESULT} = [{'diff': 3.097200000000064e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.073599999999996e-05}, {'diff': 3.069500000000072e-05}, {'diff': 3.101399999999935e-05}, {'diff': 3.101399999999935e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:49.584" endtime="20201030 10:58:49.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:49.592" level="INFO">${ACCURACY} = {'diff': [3.097200000000064e-05, 3.0417000000001332e-05, 3.073599999999996e-05, 3.069500000000072e-05, 3.101399999999935e-05, 3.101399999999935e-05, 3.129200000000221e-05, 3.130600000000178e-05, 3.102...</msg>
<status status="PASS" starttime="20201030 10:58:49.588" endtime="20201030 10:58:49.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.596" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 10:58:49.595" endtime="20201030 10:58:49.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.599" level="INFO">VALUE: [3.097200000000064e-05, 3.0417000000001332e-05, 3.073599999999996e-05, 3.069500000000072e-05, 3.101399999999935e-05, 3.101399999999935e-05, 3.129200000000221e-05, 3.130600000000178e-05, 3.102799999999892e-05, 3.073599999999996e-05, 3.074999999999953e-05, 3.0458999999996572e-05, 3.0458000000000568e-05, 3.102800000000239e-05, 3.102799999999892e-05, 3.0444000000000998e-05, 3.132000000000135e-05, 3.0430000000001428e-05, 3.0472000000000138e-05, 3.0750000000003e-05, 3.130599999999831e-05, 3.047299999999961e-05, 3.065299999999854e-05, 3.0500000000002747e-05, 3.045900000000004e-05, 3.102799999999892e-05, 3.101400000000282e-05, 3.0750000000003e-05, 3.1068999999998154e-05, 3.102799999999892e-05, 3.0472000000000138e-05, 3.044500000000047e-05, 3.0458000000000568e-05, 3.069500000000072e-05, 3.045900000000004e-05, 3.0750000000003e-05, 3.073599999999996e-05, 3.131999999999788e-05, 3.0458000000000568e-05, 3.1082999999997724e-05, 3.072200000000039e-05, 3.0514000000002317e-05, 3.131999999999788e-05, 3.102700000000291e-05, 3.072299999999986e-05, 3.0431000000000902e-05, 3.0444999999997002e-05, 3.138800000000025e-05, 3.106900000000162e-05, 3.0485999999999708e-05]</msg>
<status status="PASS" starttime="20201030 10:58:49.597" endtime="20201030 10:58:49.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.593" endtime="20201030 10:58:49.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:49.610" endtime="20201030 10:58:49.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.609" endtime="20201030 10:58:49.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.607" endtime="20201030 10:58:49.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.248" endtime="20201030 10:58:49.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.247" endtime="20201030 10:58:49.631"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.640" endtime="20201030 10:58:49.655"></status>
</kw>
<msg timestamp="20201030 10:58:49.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.638" endtime="20201030 10:58:49.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:49.657" endtime="20201030 10:58:49.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.659" endtime="20201030 10:58:49.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.635" endtime="20201030 10:58:49.661"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.633" endtime="20201030 10:58:49.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.668" endtime="20201030 10:58:49.956"></status>
</kw>
<msg timestamp="20201030 10:58:49.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019349333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019384222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.667" endtime="20201030 10:58:49.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019349333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019384222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:49.960" endtime="20201030 10:58:49.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:49.968" endtime="20201030 10:58:49.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.664" endtime="20201030 10:58:49.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.662" endtime="20201030 10:58:49.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:49.975" level="INFO">${RESULT} = [{'diff': 3.4888999999999754e-05}, {'diff': 3.4388999999999253e-05}, {'diff': 3.5152999999999573e-05}, {'diff': 3.4902999999999323e-05}, {'diff': 3.426399999999913e-05}, {'diff': 3.5152999999999573e-0...</msg>
<status status="PASS" starttime="20201030 10:58:49.972" endtime="20201030 10:58:49.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:49.979" level="INFO">${ACCURACY} = {'diff': [3.4888999999999754e-05, 3.4388999999999253e-05, 3.5152999999999573e-05, 3.4902999999999323e-05, 3.426399999999913e-05, 3.5152999999999573e-05, 3.451399999999938e-05, 3.505600000000206e-05, 3...</msg>
<status status="PASS" starttime="20201030 10:58:49.976" endtime="20201030 10:58:49.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.983" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 10:58:49.982" endtime="20201030 10:58:49.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:49.986" level="INFO">VALUE: [3.4888999999999754e-05, 3.4388999999999253e-05, 3.5152999999999573e-05, 3.4902999999999323e-05, 3.426399999999913e-05, 3.5152999999999573e-05, 3.451399999999938e-05, 3.505600000000206e-05, 3.455600000000156e-05, 3.429199999999827e-05, 3.502799999999945e-05, 3.5097000000001294e-05, 3.4611000000000364e-05, 3.473699999999996e-05, 3.5166999999999143e-05, 3.449999999999981e-05, 3.483399999999748e-05, 3.491699999999889e-05, 3.426399999999913e-05, 3.491699999999889e-05, 3.5040999999999545e-05, 3.526400000000013e-05, 3.4361000000000114e-05, 3.501399999999988e-05, 3.4776999999999725e-05, 3.448600000000024e-05, 3.5083000000001724e-05, 3.4583000000001224e-05, 3.497200000000117e-05, 3.491700000000236e-05, 3.472200000000092e-05, 3.504199999999902e-05, 3.4888999999999754e-05, 3.4333000000000974e-05, 3.505599999999859e-05, 3.4902999999999323e-05, 3.468099999999821e-05, 3.493099999999846e-05, 3.451400000000285e-05, 3.483400000000095e-05, 3.501399999999988e-05, 3.436199999999959e-05, 3.454200000000199e-05, 3.473699999999996e-05, 3.4347000000000544e-05, 3.4861000000000614e-05, 3.491600000000289e-05, 3.472200000000092e-05, 3.4597000000000794e-05, 3.5110999999997394e-05]</msg>
<status status="PASS" starttime="20201030 10:58:49.984" endtime="20201030 10:58:49.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.980" endtime="20201030 10:58:49.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:49.991" endtime="20201030 10:58:50.010"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.989" endtime="20201030 10:58:50.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.988" endtime="20201030 10:58:50.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.632" endtime="20201030 10:58:50.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:49.631" endtime="20201030 10:58:50.011"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.020" endtime="20201030 10:58:50.036"></status>
</kw>
<msg timestamp="20201030 10:58:50.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.018" endtime="20201030 10:58:50.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.038" endtime="20201030 10:58:50.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.040" endtime="20201030 10:58:50.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.016" endtime="20201030 10:58:50.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.014" endtime="20201030 10:58:50.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.049" endtime="20201030 10:58:50.336"></status>
</kw>
<msg timestamp="20201030 10:58:50.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020450222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020485903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.048" endtime="20201030 10:58:50.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020450222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020485903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.340" endtime="20201030 10:58:50.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.349" endtime="20201030 10:58:50.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.045" endtime="20201030 10:58:50.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.043" endtime="20201030 10:58:50.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:50.355" level="INFO">${RESULT} = [{'diff': 3.568099999999921e-05}, {'diff': 3.5416999999999393e-05}, {'diff': 3.5875000000001184e-05}, {'diff': 3.6153000000000574e-05}, {'diff': 3.559800000000127e-05}, {'diff': 3.5916999999999893e-05...</msg>
<status status="PASS" starttime="20201030 10:58:50.352" endtime="20201030 10:58:50.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:50.359" level="INFO">${ACCURACY} = {'diff': [3.568099999999921e-05, 3.5416999999999393e-05, 3.5875000000001184e-05, 3.6153000000000574e-05, 3.559800000000127e-05, 3.5916999999999893e-05, 3.594499999999903e-05, 3.602800000000045e-05, 3....</msg>
<status status="PASS" starttime="20201030 10:58:50.356" endtime="20201030 10:58:50.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.363" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 10:58:50.362" endtime="20201030 10:58:50.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.366" level="INFO">VALUE: [3.568099999999921e-05, 3.5416999999999393e-05, 3.5875000000001184e-05, 3.6153000000000574e-05, 3.559800000000127e-05, 3.5916999999999893e-05, 3.594499999999903e-05, 3.602800000000045e-05, 3.5861000000001614e-05, 3.5361000000001114e-05, 3.548600000000124e-05, 3.5597000000001794e-05, 3.567999999999974e-05, 3.570799999999888e-05, 3.573599999999802e-05, 3.5847000000002044e-05, 3.5568999999999185e-05, 3.5889000000000754e-05, 3.5596999999998324e-05, 3.57780000000002e-05, 3.548600000000124e-05, 3.5610999999997894e-05, 3.623600000000199e-05, 3.543099999999896e-05, 3.607000000000263e-05, 3.531999999999841e-05, 3.583399999999848e-05, 3.5653000000000074e-05, 3.602800000000045e-05, 3.622300000000189e-05, 3.568099999999921e-05, 3.613800000000153e-05, 3.5554999999999615e-05, 3.5277000000000225e-05, 3.541599999999992e-05, 3.6055000000000115e-05, 3.579199999999977e-05, 3.541599999999992e-05, 3.6082999999999255e-05, 3.548600000000124e-05, 3.5625000000000934e-05, 3.5583000000002224e-05, 3.569399999999931e-05, 3.6068999999999685e-05, 3.5666999999999643e-05, 3.548599999999777e-05, 3.597200000000217e-05, 3.5846999999998574e-05, 3.57780000000002e-05, 3.556999999999866e-05]</msg>
<status status="PASS" starttime="20201030 10:58:50.365" endtime="20201030 10:58:50.368"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.360" endtime="20201030 10:58:50.368"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:50.372" endtime="20201030 10:58:50.391"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.370" endtime="20201030 10:58:50.392"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.369" endtime="20201030 10:58:50.392"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.012" endtime="20201030 10:58:50.393"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.012" endtime="20201030 10:58:50.393"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.402" endtime="20201030 10:58:50.417"></status>
</kw>
<msg timestamp="20201030 10:58:50.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.400" endtime="20201030 10:58:50.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.418" endtime="20201030 10:58:50.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.421" endtime="20201030 10:58:50.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.398" endtime="20201030 10:58:50.423"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.395" endtime="20201030 10:58:50.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.430" endtime="20201030 10:58:50.715"></status>
</kw>
<msg timestamp="20201030 10:58:50.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019889903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.429" endtime="20201030 10:58:50.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019889903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:50.719" endtime="20201030 10:58:50.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.728" endtime="20201030 10:58:50.729"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.426" endtime="20201030 10:58:50.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.424" endtime="20201030 10:58:50.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:50.734" level="INFO">${RESULT} = [{'diff': 3.6610999999998894e-05}, {'diff': 3.668000000000074e-05}, {'diff': 3.692999999999752e-05}, {'diff': 3.7096999999999825e-05}, {'diff': 3.6430999999999963e-05}, {'diff': 3.6318999999999935e-05...</msg>
<status status="PASS" starttime="20201030 10:58:50.731" endtime="20201030 10:58:50.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:50.739" level="INFO">${ACCURACY} = {'diff': [3.6610999999998894e-05, 3.668000000000074e-05, 3.692999999999752e-05, 3.7096999999999825e-05, 3.6430999999999963e-05, 3.6318999999999935e-05, 3.7055000000001115e-05, 3.695800000000013e-05, 3...</msg>
<status status="PASS" starttime="20201030 10:58:50.735" endtime="20201030 10:58:50.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.744" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 10:58:50.743" endtime="20201030 10:58:50.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.746" level="INFO">VALUE: [3.6610999999998894e-05, 3.668000000000074e-05, 3.692999999999752e-05, 3.7096999999999825e-05, 3.6430999999999963e-05, 3.6318999999999935e-05, 3.7055000000001115e-05, 3.695800000000013e-05, 3.648600000000224e-05, 3.7041000000001545e-05, 3.705600000000059e-05, 3.7096999999999825e-05, 3.64719999999992e-05, 3.6333000000002974e-05, 3.7138999999998534e-05, 3.6667000000000644e-05, 3.655600000000009e-05, 3.6681000000000213e-05, 3.6846999999999575e-05, 3.720800000000038e-05, 3.676400000000163e-05, 3.705600000000059e-05, 3.672299999999892e-05, 3.647299999999867e-05, 3.7166999999997674e-05, 3.6790999999997825e-05, 3.723599999999952e-05, 3.7012999999998936e-05, 3.694399999999709e-05, 3.672199999999945e-05, 3.6888999999998284e-05, 3.64719999999992e-05, 3.719399999999734e-05, 3.644400000000006e-05, 3.6554999999997145e-05, 3.6611000000002364e-05, 3.6582999999999755e-05, 3.674999999999859e-05, 3.6332999999999505e-05, 3.627799999999723e-05, 3.6430999999999963e-05, 3.7096999999999825e-05, 3.652800000000095e-05, 3.704200000000102e-05, 3.720899999999985e-05, 3.651399999999791e-05, 3.698599999999927e-05, 3.6931000000000463e-05, 3.673600000000249e-05, 3.6554999999997145e-05]</msg>
<status status="PASS" starttime="20201030 10:58:50.745" endtime="20201030 10:58:50.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.740" endtime="20201030 10:58:50.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:50.751" endtime="20201030 10:58:50.770"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.749" endtime="20201030 10:58:50.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.748" endtime="20201030 10:58:50.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.394" endtime="20201030 10:58:50.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.393" endtime="20201030 10:58:50.772"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.780" endtime="20201030 10:58:50.797"></status>
</kw>
<msg timestamp="20201030 10:58:50.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.779" endtime="20201030 10:58:50.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:50.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:50.798" endtime="20201030 10:58:50.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.801" endtime="20201030 10:58:50.802"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.776" endtime="20201030 10:58:50.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.774" endtime="20201030 10:58:50.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:50.809" endtime="20201030 10:58:51.096"></status>
</kw>
<msg timestamp="20201030 10:58:51.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01951925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:50.808" endtime="20201030 10:58:51.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01951925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:51.100" endtime="20201030 10:58:51.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.108" endtime="20201030 10:58:51.110"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.805" endtime="20201030 10:58:51.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.804" endtime="20201030 10:58:51.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:51.115" level="INFO">${RESULT} = [{'diff': 3.826399999999966e-05}, {'diff': 3.826399999999966e-05}, {'diff': 3.818000000000224e-05}, {'diff': 3.7610999999999895e-05}, {'diff': 3.7624999999999464e-05}, {'diff': 3.7805000000001865e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:51.112" endtime="20201030 10:58:51.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:51.119" level="INFO">${ACCURACY} = {'diff': [3.826399999999966e-05, 3.826399999999966e-05, 3.818000000000224e-05, 3.7610999999999895e-05, 3.7624999999999464e-05, 3.7805000000001865e-05, 3.742999999999802e-05, 3.748599999999977e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 10:58:51.116" endtime="20201030 10:58:51.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.124" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 10:58:51.122" endtime="20201030 10:58:51.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.126" level="INFO">VALUE: [3.826399999999966e-05, 3.826399999999966e-05, 3.818000000000224e-05, 3.7610999999999895e-05, 3.7624999999999464e-05, 3.7805000000001865e-05, 3.742999999999802e-05, 3.748599999999977e-05, 3.7888999999999284e-05, 3.7417000000001394e-05, 3.822200000000095e-05, 3.8096999999997355e-05, 3.8068999999998215e-05, 3.7597000000000325e-05, 3.7667000000001644e-05, 3.780600000000134e-05, 3.7374999999999214e-05, 3.751399999999891e-05, 3.7374999999999214e-05, 3.7902999999998854e-05, 3.792999999999852e-05, 3.7374999999999214e-05, 3.8208999999997384e-05, 3.7361000000003114e-05, 3.815199999999963e-05, 3.7805000000001865e-05, 3.795800000000113e-05, 3.768000000000174e-05, 3.7639000000002504e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.8069000000001685e-05, 3.7902999999998854e-05, 3.7319000000000935e-05, 3.8166999999998674e-05, 3.8083000000001255e-05, 3.7832999999997535e-05, 3.772200000000045e-05, 3.780599999999787e-05, 3.7402999999998354e-05, 3.751399999999891e-05, 3.7445000000000533e-05, 3.8124999999999964e-05, 3.7861000000000145e-05, 3.74720000000002e-05, 3.7653000000002074e-05, 3.7360999999999644e-05, 3.791600000000242e-05, 3.7805000000001865e-05]</msg>
<status status="PASS" starttime="20201030 10:58:51.125" endtime="20201030 10:58:51.127"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.120" endtime="20201030 10:58:51.127"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:51.131" endtime="20201030 10:58:51.150"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.129" endtime="20201030 10:58:51.151"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.128" endtime="20201030 10:58:51.151"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.773" endtime="20201030 10:58:51.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:50.772" endtime="20201030 10:58:51.152"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.160" endtime="20201030 10:58:51.178"></status>
</kw>
<msg timestamp="20201030 10:58:51.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.159" endtime="20201030 10:58:51.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.180" endtime="20201030 10:58:51.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.182" endtime="20201030 10:58:51.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.156" endtime="20201030 10:58:51.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.154" endtime="20201030 10:58:51.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.191" endtime="20201030 10:58:51.476"></status>
</kw>
<msg timestamp="20201030 10:58:51.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021265583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021304597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:51.189" endtime="20201030 10:58:51.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021265583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021304597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:51.480" endtime="20201030 10:58:51.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.489" endtime="20201030 10:58:51.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.187" endtime="20201030 10:58:51.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.185" endtime="20201030 10:58:51.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:51.495" level="INFO">${RESULT} = [{'diff': 3.901400000000041e-05}, {'diff': 3.8902999999999854e-05}, {'diff': 3.8889000000000284e-05}, {'diff': 3.9138999999997065e-05}, {'diff': 3.8916999999999424e-05}, {'diff': 3.87919999999993e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:51.492" endtime="20201030 10:58:51.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:51.499" level="INFO">${ACCURACY} = {'diff': [3.901400000000041e-05, 3.8902999999999854e-05, 3.8889000000000284e-05, 3.9138999999997065e-05, 3.8916999999999424e-05, 3.87919999999993e-05, 3.8902999999999854e-05, 3.873599999999755e-05, 3....</msg>
<status status="PASS" starttime="20201030 10:58:51.496" endtime="20201030 10:58:51.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.503" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 10:58:51.502" endtime="20201030 10:58:51.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.506" level="INFO">VALUE: [3.901400000000041e-05, 3.8902999999999854e-05, 3.8889000000000284e-05, 3.9138999999997065e-05, 3.8916999999999424e-05, 3.87919999999993e-05, 3.8902999999999854e-05, 3.873599999999755e-05, 3.9209000000001853e-05, 3.9166999999999674e-05, 3.826399999999966e-05, 3.8916999999999424e-05, 3.8402999999999354e-05, 3.8417000000002394e-05, 3.877799999999973e-05, 3.9124999999997495e-05, 3.845800000000163e-05, 3.851399999999991e-05, 3.8554999999999146e-05, 3.8555000000002615e-05, 3.897199999999823e-05, 3.8888999999996815e-05, 3.900000000000084e-05, 3.877799999999973e-05, 3.92919999999998e-05, 3.902799999999998e-05, 3.892999999999952e-05, 3.848600000000077e-05, 3.8930999999998994e-05, 3.8832999999998535e-05, 3.880599999999887e-05, 3.84859999999973e-05, 3.850000000000034e-05, 3.8625000000000465e-05, 3.847300000000067e-05, 3.923599999999805e-05, 3.844399999999859e-05, 3.9181000000002714e-05, 3.917999999999977e-05, 3.8611000000000895e-05, 3.876400000000016e-05, 3.8305000000002365e-05, 3.8916999999999424e-05, 3.8361000000000645e-05, 3.868000000000274e-05, 3.8332999999998035e-05, 3.850000000000034e-05, 3.8847000000001575e-05, 3.827799999999923e-05, 3.852799999999948e-05]</msg>
<status status="PASS" starttime="20201030 10:58:51.504" endtime="20201030 10:58:51.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.500" endtime="20201030 10:58:51.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:51.512" endtime="20201030 10:58:51.531"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.510" endtime="20201030 10:58:51.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.509" endtime="20201030 10:58:51.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.153" endtime="20201030 10:58:51.532"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.152" endtime="20201030 10:58:51.532"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.541" endtime="20201030 10:58:51.558"></status>
</kw>
<msg timestamp="20201030 10:58:51.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.539" endtime="20201030 10:58:51.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.560" endtime="20201030 10:58:51.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.562" endtime="20201030 10:58:51.563"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.537" endtime="20201030 10:58:51.564"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.535" endtime="20201030 10:58:51.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.571" endtime="20201030 10:58:51.857"></status>
</kw>
<msg timestamp="20201030 10:58:51.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019524917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:51.569" endtime="20201030 10:58:51.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019524917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:58:51.861" endtime="20201030 10:58:51.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.869" endtime="20201030 10:58:51.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.567" endtime="20201030 10:58:51.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.565" endtime="20201030 10:58:51.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:51.876" level="INFO">${RESULT} = [{'diff': 3.9917000000000424e-05}, {'diff': 3.9639000000001035e-05}, {'diff': 3.990200000000138e-05}, {'diff': 3.9638999999997565e-05}, {'diff': 4.020799999999991e-05}, {'diff': 3.9624999999997995e-05...</msg>
<status status="PASS" starttime="20201030 10:58:51.872" endtime="20201030 10:58:51.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:51.881" level="INFO">${ACCURACY} = {'diff': [3.9917000000000424e-05, 3.9639000000001035e-05, 3.990200000000138e-05, 3.9638999999997565e-05, 4.020799999999991e-05, 3.9624999999997995e-05, 3.972199999999898e-05, 4.001400000000141e-05, 3....</msg>
<status status="PASS" starttime="20201030 10:58:51.877" endtime="20201030 10:58:51.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.885" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 10:58:51.884" endtime="20201030 10:58:51.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.888" level="INFO">VALUE: [3.9917000000000424e-05, 3.9639000000001035e-05, 3.990200000000138e-05, 3.9638999999997565e-05, 4.020799999999991e-05, 3.9624999999997995e-05, 3.972199999999898e-05, 4.001400000000141e-05, 3.9596999999998855e-05, 4.019400000000034e-05, 3.97920000000003e-05, 3.995799999999966e-05, 3.951400000000091e-05, 3.945799999999916e-05, 3.9388999999997315e-05, 3.94720000000022e-05, 3.927800000000023e-05, 4.0096999999999355e-05, 3.9638999999997565e-05, 3.981999999999944e-05, 3.9875000000001715e-05, 3.9472999999998204e-05, 3.975000000000159e-05, 3.9875000000001715e-05, 3.9360999999998175e-05, 3.977800000000073e-05, 3.9568999999999716e-05, 3.9304999999999896e-05, 3.970799999999941e-05, 3.950000000000134e-05, 3.970799999999941e-05, 3.994400000000009e-05, 3.948600000000177e-05, 3.94720000000022e-05, 3.950000000000134e-05, 3.9430999999999494e-05, 3.999999999999837e-05, 3.9346999999998605e-05, 4.002800000000098e-05, 3.927800000000023e-05, 3.9597000000002325e-05, 3.9458999999998634e-05, 3.981999999999944e-05, 3.9611000000001895e-05, 3.947199999999873e-05, 3.955599999999962e-05, 3.9541000000000576e-05, 3.9708999999998884e-05, 4.0262999999998716e-05, 3.973600000000202e-05]</msg>
<status status="PASS" starttime="20201030 10:58:51.886" endtime="20201030 10:58:51.888"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.882" endtime="20201030 10:58:51.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:51.892" endtime="20201030 10:58:51.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.891" endtime="20201030 10:58:51.912"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.890" endtime="20201030 10:58:51.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.533" endtime="20201030 10:58:51.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.533" endtime="20201030 10:58:51.913"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.922" endtime="20201030 10:58:51.939"></status>
</kw>
<msg timestamp="20201030 10:58:51.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.920" endtime="20201030 10:58:51.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:51.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:51.941" endtime="20201030 10:58:51.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.943" endtime="20201030 10:58:51.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.918" endtime="20201030 10:58:51.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.915" endtime="20201030 10:58:51.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:51.952" endtime="20201030 10:58:52.239"></status>
</kw>
<msg timestamp="20201030 10:58:52.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01943575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019476083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:51.950" endtime="20201030 10:58:52.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01943575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019476083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:52.243" endtime="20201030 10:58:52.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.251" endtime="20201030 10:58:52.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.948" endtime="20201030 10:58:52.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.946" endtime="20201030 10:58:52.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:52.258" level="INFO">${RESULT} = [{'diff': 4.0333000000000035e-05}, {'diff': 4.1110999999999925e-05}, {'diff': 4.116599999999873e-05}, {'diff': 4.0583000000000286e-05}, {'diff': 4.0819000000000966e-05}, {'diff': 4.094400000000109e-05...</msg>
<status status="PASS" starttime="20201030 10:58:52.255" endtime="20201030 10:58:52.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:52.262" level="INFO">${ACCURACY} = {'diff': [4.0333000000000035e-05, 4.1110999999999925e-05, 4.116599999999873e-05, 4.0583000000000286e-05, 4.0819000000000966e-05, 4.094400000000109e-05, 4.0917000000001424e-05, 4.124999999999962e-05, 4...</msg>
<status status="PASS" starttime="20201030 10:58:52.259" endtime="20201030 10:58:52.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.266" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 10:58:52.265" endtime="20201030 10:58:52.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.269" level="INFO">VALUE: [4.0333000000000035e-05, 4.1110999999999925e-05, 4.116599999999873e-05, 4.0583000000000286e-05, 4.0819000000000966e-05, 4.094400000000109e-05, 4.0917000000001424e-05, 4.124999999999962e-05, 4.0568999999997246e-05, 4.0847000000000105e-05, 4.0930999999997525e-05, 4.0916999999997955e-05, 4.0610999999999425e-05, 4.0931000000000994e-05, 4.052800000000148e-05, 4.0431000000000494e-05, 4.073599999999955e-05, 4.07920000000013e-05, 4.052799999999801e-05, 4.0486999999998774e-05, 4.050000000000234e-05, 4.040199999999841e-05, 4.076400000000216e-05, 4.0569000000000716e-05, 4.04859999999993e-05, 4.076399999999869e-05, 4.097200000000023e-05, 4.092999999999805e-05, 4.048600000000277e-05, 4.124999999999962e-05, 4.0346999999999605e-05, 4.055600000000062e-05, 4.1110999999999925e-05, 4.0333000000000035e-05, 4.1138999999999065e-05, 4.107000000000069e-05, 4.057000000000019e-05, 4.059799999999933e-05, 4.073599999999955e-05, 4.1040999999998606e-05, 4.0624999999998995e-05, 4.1040999999998606e-05, 4.0305000000000896e-05, 4.0945000000000564e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.097200000000023e-05, 4.099999999999937e-05, 4.1083000000000786e-05, 4.068000000000127e-05]</msg>
<status status="PASS" starttime="20201030 10:58:52.267" endtime="20201030 10:58:52.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.263" endtime="20201030 10:58:52.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:52.273" endtime="20201030 10:58:52.293"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.272" endtime="20201030 10:58:52.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.271" endtime="20201030 10:58:52.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.914" endtime="20201030 10:58:52.294"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:51.913" endtime="20201030 10:58:52.294"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.303" endtime="20201030 10:58:52.321"></status>
</kw>
<msg timestamp="20201030 10:58:52.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.301" endtime="20201030 10:58:52.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.323" endtime="20201030 10:58:52.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.326" endtime="20201030 10:58:52.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.299" endtime="20201030 10:58:52.328"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.297" endtime="20201030 10:58:52.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.335" endtime="20201030 10:58:52.619"></status>
</kw>
<msg timestamp="20201030 10:58:52.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02261225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:52.333" endtime="20201030 10:58:52.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02261225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:52.624" endtime="20201030 10:58:52.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.632" endtime="20201030 10:58:52.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.331" endtime="20201030 10:58:52.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.329" endtime="20201030 10:58:52.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:52.639" level="INFO">${RESULT} = [{'diff': 4.1638999999999565e-05}, {'diff': 4.226400000000019e-05}, {'diff': 4.2152999999999635e-05}, {'diff': 4.1555000000002146e-05}, {'diff': 4.154199999999858e-05}, {'diff': 4.1388999999999315e-05...</msg>
<status status="PASS" starttime="20201030 10:58:52.635" endtime="20201030 10:58:52.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:52.643" level="INFO">${ACCURACY} = {'diff': [4.1638999999999565e-05, 4.226400000000019e-05, 4.2152999999999635e-05, 4.1555000000002146e-05, 4.154199999999858e-05, 4.1388999999999315e-05, 4.2111000000000925e-05, 4.14860000000003e-05, 4....</msg>
<status status="PASS" starttime="20201030 10:58:52.640" endtime="20201030 10:58:52.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.647" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 10:58:52.646" endtime="20201030 10:58:52.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.649" level="INFO">VALUE: [4.1638999999999565e-05, 4.226400000000019e-05, 4.2152999999999635e-05, 4.1555000000002146e-05, 4.154199999999858e-05, 4.1388999999999315e-05, 4.2111000000000925e-05, 4.14860000000003e-05, 4.207000000000169e-05, 4.175000000000012e-05, 4.14860000000003e-05, 4.1473000000000204e-05, 4.1374999999999745e-05, 4.1875000000000245e-05, 4.1902999999999385e-05, 4.142999999999855e-05, 4.219399999999887e-05, 4.1888999999999815e-05, 4.16799999999988e-05, 4.1554999999998676e-05, 4.2152999999999635e-05, 4.141599999999898e-05, 4.1931000000001994e-05, 4.14860000000003e-05, 4.2054999999999176e-05, 4.1832999999998066e-05, 4.19860000000008e-05, 4.179199999999883e-05, 4.206999999999822e-05, 4.1638999999999565e-05, 4.2223000000000954e-05, 4.158400000000076e-05, 4.1681000000001744e-05, 4.204200000000255e-05, 4.1403000000002355e-05, 4.127800000000223e-05, 4.222199999999801e-05, 4.1805000000002396e-05, 4.1875000000000245e-05, 4.2040999999999606e-05, 4.1583000000001286e-05, 4.151399999999944e-05, 4.2068999999998746e-05, 4.1402999999998885e-05, 4.1818999999998496e-05, 4.2111000000000925e-05, 4.1847000000001106e-05, 4.155599999999815e-05, 4.223600000000105e-05, 4.149999999999987e-05]</msg>
<status status="PASS" starttime="20201030 10:58:52.648" endtime="20201030 10:58:52.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.644" endtime="20201030 10:58:52.652"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:52.655" endtime="20201030 10:58:52.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.654" endtime="20201030 10:58:52.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.653" endtime="20201030 10:58:52.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.295" endtime="20201030 10:58:52.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.295" endtime="20201030 10:58:52.676"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.684" endtime="20201030 10:58:52.702"></status>
</kw>
<msg timestamp="20201030 10:58:52.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.683" endtime="20201030 10:58:52.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:52.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:52.703" endtime="20201030 10:58:52.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.706" endtime="20201030 10:58:52.707"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.680" endtime="20201030 10:58:52.708"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.678" endtime="20201030 10:58:52.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:52.715" endtime="20201030 10:58:52.999"></status>
</kw>
<msg timestamp="20201030 10:58:53.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02028525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:52.713" endtime="20201030 10:58:53.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02028525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:53.004" endtime="20201030 10:58:53.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.012" endtime="20201030 10:58:53.013"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.710" endtime="20201030 10:58:53.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.709" endtime="20201030 10:58:53.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:53.018" level="INFO">${RESULT} = [{'diff': 4.297199999999876e-05}, {'diff': 4.3124999999998026e-05}, {'diff': 4.323599999999858e-05}, {'diff': 4.3068999999999746e-05}, {'diff': 4.2653000000000135e-05}, {'diff': 4.273600000000155e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:53.015" endtime="20201030 10:58:53.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:53.023" level="INFO">${ACCURACY} = {'diff': [4.297199999999876e-05, 4.3124999999998026e-05, 4.323599999999858e-05, 4.3068999999999746e-05, 4.2653000000000135e-05, 4.273600000000155e-05, 4.3139000000001065e-05, 4.323599999999858e-05, 4....</msg>
<status status="PASS" starttime="20201030 10:58:53.019" endtime="20201030 10:58:53.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.028" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 10:58:53.027" endtime="20201030 10:58:53.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.030" level="INFO">VALUE: [4.297199999999876e-05, 4.3124999999998026e-05, 4.323599999999858e-05, 4.3068999999999746e-05, 4.2653000000000135e-05, 4.273600000000155e-05, 4.3139000000001065e-05, 4.323599999999858e-05, 4.2347000000001606e-05, 4.250000000000087e-05, 4.231999999999847e-05, 4.255599999999915e-05, 4.231999999999847e-05, 4.277800000000026e-05, 4.254199999999958e-05, 4.2694999999998845e-05, 4.2487000000000774e-05, 4.2846999999998636e-05, 4.300000000000137e-05, 4.272199999999851e-05, 4.26799999999998e-05, 4.277699999999732e-05, 4.251400000000044e-05, 4.241599999999998e-05, 4.29999999999979e-05, 4.2903000000000385e-05, 4.2639000000000565e-05, 4.2319000000002466e-05, 4.2903000000000385e-05, 4.2416999999999455e-05, 4.231999999999847e-05, 4.2347000000001606e-05, 4.274999999999765e-05, 4.251400000000044e-05, 4.281999999999897e-05, 4.2723000000001454e-05, 4.2582999999998816e-05, 4.265200000000066e-05, 4.2653000000000135e-05, 4.313800000000159e-05, 4.273599999999808e-05, 4.256999999999872e-05, 4.2541000000000107e-05, 4.2903000000000385e-05, 4.2554999999999676e-05, 4.254200000000305e-05, 4.2666999999999705e-05, 4.2832999999999066e-05, 4.279199999999983e-05, 4.251400000000044e-05]</msg>
<status status="PASS" starttime="20201030 10:58:53.029" endtime="20201030 10:58:53.031"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.024" endtime="20201030 10:58:53.032"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:53.035" endtime="20201030 10:58:53.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.034" endtime="20201030 10:58:53.055"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.032" endtime="20201030 10:58:53.055"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.677" endtime="20201030 10:58:53.056"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:52.676" endtime="20201030 10:58:53.056"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.064" endtime="20201030 10:58:53.080"></status>
</kw>
<msg timestamp="20201030 10:58:53.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:53.063" endtime="20201030 10:58:53.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:53.081" endtime="20201030 10:58:53.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.084" endtime="20201030 10:58:53.085"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.060" endtime="20201030 10:58:53.086"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.058" endtime="20201030 10:58:53.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.093" endtime="20201030 10:58:53.379"></status>
</kw>
<msg timestamp="20201030 10:58:53.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019294306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019338514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:53.091" endtime="20201030 10:58:53.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019294306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019338514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:53.383" endtime="20201030 10:58:53.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.392" endtime="20201030 10:58:53.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.089" endtime="20201030 10:58:53.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.087" endtime="20201030 10:58:53.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:53.399" level="INFO">${RESULT} = [{'diff': 4.420800000000044e-05}, {'diff': 4.3860999999999206e-05}, {'diff': 4.422200000000001e-05}, {'diff': 4.3945000000000095e-05}, {'diff': 4.404200000000108e-05}, {'diff': 4.327800000000076e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:53.396" endtime="20201030 10:58:53.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:53.403" level="INFO">${ACCURACY} = {'diff': [4.420800000000044e-05, 4.3860999999999206e-05, 4.422200000000001e-05, 4.3945000000000095e-05, 4.404200000000108e-05, 4.327800000000076e-05, 4.348599999999883e-05, 4.384799999999911e-05, 4.33...</msg>
<status status="PASS" starttime="20201030 10:58:53.400" endtime="20201030 10:58:53.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.408" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 10:58:53.407" endtime="20201030 10:58:53.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.410" level="INFO">VALUE: [4.420800000000044e-05, 4.3860999999999206e-05, 4.422200000000001e-05, 4.3945000000000095e-05, 4.404200000000108e-05, 4.327800000000076e-05, 4.348599999999883e-05, 4.384799999999911e-05, 4.336200000000165e-05, 4.3487000000001774e-05, 4.3888999999998346e-05, 4.407000000000022e-05, 4.3846999999999636e-05, 4.393000000000105e-05, 4.4055000000001177e-05, 4.3610999999998956e-05, 4.3555000000000677e-05, 4.345799999999969e-05, 4.3597000000002856e-05, 4.3346999999999136e-05, 4.3958999999999665e-05, 4.4138999999998596e-05, 4.4181000000000775e-05, 4.4139000000002065e-05, 4.3624999999998526e-05, 4.3431000000000025e-05, 4.376400000000169e-05, 4.3444999999999595e-05, 4.3431000000000025e-05, 4.41120000000024e-05, 4.397199999999976e-05, 4.3582999999999816e-05, 4.379200000000083e-05, 4.3596999999999386e-05, 4.377700000000179e-05, 4.3360999999998706e-05, 4.376399999999822e-05, 4.39860000000028e-05, 4.402799999999804e-05, 4.3860999999999206e-05, 4.422200000000001e-05, 4.3389000000001315e-05, 4.374999999999865e-05, 4.4096999999999886e-05, 4.408399999999979e-05, 4.4195000000000345e-05, 4.355600000000015e-05, 4.38060000000004e-05, 4.379199999999736e-05, 4.377800000000126e-05]</msg>
<status status="PASS" starttime="20201030 10:58:53.409" endtime="20201030 10:58:53.411"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.404" endtime="20201030 10:58:53.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:53.415" endtime="20201030 10:58:53.435"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.414" endtime="20201030 10:58:53.435"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.412" endtime="20201030 10:58:53.436"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.057" endtime="20201030 10:58:53.436"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.056" endtime="20201030 10:58:53.436"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.445" endtime="20201030 10:58:53.463"></status>
</kw>
<msg timestamp="20201030 10:58:53.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:53.444" endtime="20201030 10:58:53.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:53.465" endtime="20201030 10:58:53.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.467" endtime="20201030 10:58:53.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.441" endtime="20201030 10:58:53.470"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.439" endtime="20201030 10:58:53.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.477" endtime="20201030 10:58:53.763"></status>
</kw>
<msg timestamp="20201030 10:58:53.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021203167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021247444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:53.475" endtime="20201030 10:58:53.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021203167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021247444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:53.768" endtime="20201030 10:58:53.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.776" endtime="20201030 10:58:53.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.473" endtime="20201030 10:58:53.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.471" endtime="20201030 10:58:53.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:53.783" level="INFO">${RESULT} = [{'diff': 4.427700000000229e-05}, {'diff': 4.4360999999999706e-05}, {'diff': 4.472200000000051e-05}, {'diff': 4.490199999999944e-05}, {'diff': 4.451399999999897e-05}, {'diff': 4.4819000000001497e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:53.779" endtime="20201030 10:58:53.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:53.787" level="INFO">${ACCURACY} = {'diff': [4.427700000000229e-05, 4.4360999999999706e-05, 4.472200000000051e-05, 4.490199999999944e-05, 4.451399999999897e-05, 4.4819000000001497e-05, 4.494399999999815e-05, 4.426399999999872e-05, 4.43...</msg>
<status status="PASS" starttime="20201030 10:58:53.784" endtime="20201030 10:58:53.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.791" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 10:58:53.790" endtime="20201030 10:58:53.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.794" level="INFO">VALUE: [4.427700000000229e-05, 4.4360999999999706e-05, 4.472200000000051e-05, 4.490199999999944e-05, 4.451399999999897e-05, 4.4819000000001497e-05, 4.494399999999815e-05, 4.426399999999872e-05, 4.43060000000009e-05, 4.4416999999997986e-05, 4.477799999999879e-05, 4.4569000000001247e-05, 4.455600000000115e-05, 4.501399999999947e-05, 4.4931000000001525e-05, 4.427799999999829e-05, 4.447200000000026e-05, 4.4861000000000206e-05, 4.486199999999968e-05, 4.507000000000122e-05, 4.490199999999944e-05, 4.476399999999922e-05, 4.515199999999969e-05, 4.495799999999772e-05, 4.4597000000000386e-05, 4.506899999999828e-05, 4.4833000000001066e-05, 4.5138999999999596e-05, 4.4847000000000636e-05, 4.474999999999965e-05, 4.444399999999765e-05, 4.4431000000001025e-05, 4.5166999999998736e-05, 4.473600000000008e-05, 4.4819000000001497e-05, 4.469400000000137e-05, 4.473600000000008e-05, 4.452800000000201e-05, 4.430499999999796e-05, 4.4916999999998486e-05, 4.5138999999999596e-05, 4.490199999999944e-05, 4.516599999999926e-05, 4.466599999999876e-05, 4.44999999999994e-05, 4.494400000000162e-05, 4.4597000000000386e-05, 4.476399999999922e-05, 4.448599999999983e-05, 4.455600000000115e-05]</msg>
<status status="PASS" starttime="20201030 10:58:53.792" endtime="20201030 10:58:53.795"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.788" endtime="20201030 10:58:53.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:53.799" endtime="20201030 10:58:53.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.798" endtime="20201030 10:58:53.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.797" endtime="20201030 10:58:53.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.437" endtime="20201030 10:58:53.820"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.437" endtime="20201030 10:58:53.820"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.829" endtime="20201030 10:58:53.845"></status>
</kw>
<msg timestamp="20201030 10:58:53.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:53.827" endtime="20201030 10:58:53.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:53.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:53.846" endtime="20201030 10:58:53.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.849" endtime="20201030 10:58:53.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.825" endtime="20201030 10:58:53.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.822" endtime="20201030 10:58:53.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:53.858" endtime="20201030 10:58:54.143"></status>
</kw>
<msg timestamp="20201030 10:58:54.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019564528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019610264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:53.856" endtime="20201030 10:58:54.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019564528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019610264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:54.147" endtime="20201030 10:58:54.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.155" endtime="20201030 10:58:54.156"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.854" endtime="20201030 10:58:54.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.852" endtime="20201030 10:58:54.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:54.161" level="INFO">${RESULT} = [{'diff': 4.573599999999761e-05}, {'diff': 4.6097000000001886e-05}, {'diff': 4.5847000000001636e-05}, {'diff': 4.5625000000000526e-05}, {'diff': 4.5611000000000956e-05}, {'diff': 4.580599999999893e-05...</msg>
<status status="PASS" starttime="20201030 10:58:54.158" endtime="20201030 10:58:54.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:54.166" level="INFO">${ACCURACY} = {'diff': [4.573599999999761e-05, 4.6097000000001886e-05, 4.5847000000001636e-05, 4.5625000000000526e-05, 4.5611000000000956e-05, 4.580599999999893e-05, 4.5737000000000555e-05, 4.5459000000001165e-05, ...</msg>
<status status="PASS" starttime="20201030 10:58:54.162" endtime="20201030 10:58:54.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.171" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 10:58:54.170" endtime="20201030 10:58:54.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.173" level="INFO">VALUE: [4.573599999999761e-05, 4.6097000000001886e-05, 4.5847000000001636e-05, 4.5625000000000526e-05, 4.5611000000000956e-05, 4.580599999999893e-05, 4.5737000000000555e-05, 4.5459000000001165e-05, 4.5708999999997946e-05, 4.548600000000083e-05, 4.572199999999804e-05, 4.5737000000000555e-05, 4.601400000000047e-05, 4.601400000000047e-05, 4.529099999999939e-05, 4.53329999999981e-05, 4.622199999999854e-05, 4.580500000000293e-05, 4.562499999999706e-05, 4.55000000000004e-05, 4.573599999999761e-05, 4.601400000000047e-05, 4.590200000000044e-05, 4.558299999999835e-05, 4.547200000000126e-05, 4.5902999999999916e-05, 4.557000000000172e-05, 4.529199999999886e-05, 4.5625000000000526e-05, 4.620799999999897e-05, 4.5889000000000346e-05, 4.58329999999986e-05, 4.556999999999825e-05, 4.562499999999706e-05, 4.567999999999933e-05, 4.597200000000176e-05, 4.609699999999842e-05, 4.531899999999853e-05, 4.579099999999989e-05, 4.5639000000000096e-05, 4.5916999999999486e-05, 4.6097000000001886e-05, 4.5347000000001136e-05, 4.573600000000108e-05, 4.5388999999999846e-05, 4.542999999999908e-05, 4.5431000000002025e-05, 4.5402999999999416e-05, 4.5639000000000096e-05, 4.6180999999999306e-05]</msg>
<status status="PASS" starttime="20201030 10:58:54.172" endtime="20201030 10:58:54.174"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.167" endtime="20201030 10:58:54.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:54.178" endtime="20201030 10:58:54.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.177" endtime="20201030 10:58:54.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.175" endtime="20201030 10:58:54.198"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.821" endtime="20201030 10:58:54.199"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:53.820" endtime="20201030 10:58:54.199"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.207" endtime="20201030 10:58:54.225"></status>
</kw>
<msg timestamp="20201030 10:58:54.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.206" endtime="20201030 10:58:54.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.226" endtime="20201030 10:58:54.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.229" endtime="20201030 10:58:54.230"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.203" endtime="20201030 10:58:54.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.201" endtime="20201030 10:58:54.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.238" endtime="20201030 10:58:54.524"></status>
</kw>
<msg timestamp="20201030 10:58:54.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019364722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019411542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:54.236" endtime="20201030 10:58:54.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019364722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019411542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:54.528" endtime="20201030 10:58:54.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.536" endtime="20201030 10:58:54.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.234" endtime="20201030 10:58:54.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.232" endtime="20201030 10:58:54.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:54.543" level="INFO">${RESULT} = [{'diff': 4.68199999999995e-05}, {'diff': 4.7153000000001166e-05}, {'diff': 4.6708999999998946e-05}, {'diff': 4.687499999999831e-05}, {'diff': 4.6680999999999806e-05}, {'diff': 4.7222999999999016e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:54.540" endtime="20201030 10:58:54.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:54.547" level="INFO">${ACCURACY} = {'diff': [4.68199999999995e-05, 4.7153000000001166e-05, 4.6708999999998946e-05, 4.687499999999831e-05, 4.6680999999999806e-05, 4.7222999999999016e-05, 4.630599999999943e-05, 4.6389000000000846e-05, 4....</msg>
<status status="PASS" starttime="20201030 10:58:54.544" endtime="20201030 10:58:54.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.551" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 10:58:54.550" endtime="20201030 10:58:54.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.554" level="INFO">VALUE: [4.68199999999995e-05, 4.7153000000001166e-05, 4.6708999999998946e-05, 4.687499999999831e-05, 4.6680999999999806e-05, 4.7222999999999016e-05, 4.630599999999943e-05, 4.6389000000000846e-05, 4.65269999999976e-05, 4.66939999999999e-05, 4.706900000000028e-05, 4.718000000000083e-05, 4.709699999999942e-05, 4.659699999999892e-05, 4.649999999999793e-05, 4.670799999999947e-05, 4.701400000000147e-05, 4.722199999999954e-05, 4.68199999999995e-05, 4.661099999999849e-05, 4.676400000000122e-05, 4.655500000000021e-05, 4.655599999999968e-05, 4.6319999999999e-05, 4.633400000000204e-05, 4.686200000000168e-05, 4.713899999999813e-05, 4.704099999999767e-05, 4.631899999999953e-05, 4.705500000000071e-05, 4.698599999999886e-05, 4.712499999999856e-05, 4.672200000000251e-05, 4.706900000000028e-05, 4.631899999999953e-05, 4.626400000000072e-05, 4.648599999999836e-05, 4.627800000000029e-05, 4.7139000000001596e-05, 4.688899999999788e-05, 4.6361000000001706e-05, 4.725000000000215e-05, 4.6361000000001706e-05, 4.6931000000000056e-05, 4.698600000000233e-05, 4.6430999999999556e-05, 4.676400000000122e-05, 4.698599999999886e-05, 4.687499999999831e-05, 4.697199999999929e-05]</msg>
<status status="PASS" starttime="20201030 10:58:54.552" endtime="20201030 10:58:54.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.548" endtime="20201030 10:58:54.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:54.559" endtime="20201030 10:58:54.578"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.557" endtime="20201030 10:58:54.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.556" endtime="20201030 10:58:54.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.200" endtime="20201030 10:58:54.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.199" endtime="20201030 10:58:54.580"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.588" endtime="20201030 10:58:54.606"></status>
</kw>
<msg timestamp="20201030 10:58:54.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.587" endtime="20201030 10:58:54.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.608" endtime="20201030 10:58:54.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.610" endtime="20201030 10:58:54.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.584" endtime="20201030 10:58:54.612"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.582" endtime="20201030 10:58:54.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.619" endtime="20201030 10:58:54.905"></status>
</kw>
<msg timestamp="20201030 10:58:54.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021296764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021344806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:54.618" endtime="20201030 10:58:54.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021296764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021344806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:54.909" endtime="20201030 10:58:54.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.917" endtime="20201030 10:58:54.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.615" endtime="20201030 10:58:54.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.613" endtime="20201030 10:58:54.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:54.923" level="INFO">${RESULT} = [{'diff': 4.804200000000161e-05}, {'diff': 4.75139999999985e-05}, {'diff': 4.786099999999974e-05}, {'diff': 4.798599999999986e-05}, {'diff': 4.7361000000002706e-05}, {'diff': 4.808299999999738e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:54.920" endtime="20201030 10:58:54.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:54.928" level="INFO">${ACCURACY} = {'diff': [4.804200000000161e-05, 4.75139999999985e-05, 4.786099999999974e-05, 4.798599999999986e-05, 4.7361000000002706e-05, 4.808299999999738e-05, 4.731900000000053e-05, 4.762499999999906e-05, 4.7458...</msg>
<status status="PASS" starttime="20201030 10:58:54.924" endtime="20201030 10:58:54.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.932" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 10:58:54.931" endtime="20201030 10:58:54.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:54.934" level="INFO">VALUE: [4.804200000000161e-05, 4.75139999999985e-05, 4.786099999999974e-05, 4.798599999999986e-05, 4.7361000000002706e-05, 4.808299999999738e-05, 4.731900000000053e-05, 4.762499999999906e-05, 4.7458999999999696e-05, 4.809700000000042e-05, 4.809700000000042e-05, 4.7403000000001416e-05, 4.761099999999949e-05, 4.727799999999782e-05, 4.776400000000222e-05, 4.752700000000207e-05, 4.773599999999961e-05, 4.786099999999974e-05, 4.808300000000085e-05, 4.748599999999936e-05, 4.826399999999925e-05, 4.751400000000197e-05, 4.772200000000004e-05, 4.808300000000085e-05, 4.772200000000004e-05, 4.822199999999707e-05, 4.7403000000001416e-05, 4.759699999999992e-05, 4.747199999999979e-05, 4.762499999999906e-05, 4.812499999999956e-05, 4.7903000000001916e-05, 4.751299999999903e-05, 4.793000000000158e-05, 4.7208999999999446e-05, 4.756900000000078e-05, 4.747199999999979e-05, 4.823599999999664e-05, 4.727700000000182e-05, 4.756900000000078e-05, 4.798599999999986e-05, 4.774999999999918e-05, 4.730600000000043e-05, 4.755600000000068e-05, 4.774999999999918e-05, 4.752800000000154e-05, 4.776399999999875e-05, 4.7959000000000196e-05, 4.763899999999863e-05, 4.804200000000161e-05]</msg>
<status status="PASS" starttime="20201030 10:58:54.933" endtime="20201030 10:58:54.950"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.928" endtime="20201030 10:58:54.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:54.955" endtime="20201030 10:58:54.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.953" endtime="20201030 10:58:54.975"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.952" endtime="20201030 10:58:54.975"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.581" endtime="20201030 10:58:54.975"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.580" endtime="20201030 10:58:54.975"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:54.984" endtime="20201030 10:58:55.000"></status>
</kw>
<msg timestamp="20201030 10:58:55.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:54.983" endtime="20201030 10:58:55.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:55.002" endtime="20201030 10:58:55.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.004" endtime="20201030 10:58:55.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.980" endtime="20201030 10:58:55.006"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.978" endtime="20201030 10:58:55.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.013" endtime="20201030 10:58:55.298"></status>
</kw>
<msg timestamp="20201030 10:58:55.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019579111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:55.011" endtime="20201030 10:58:55.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019579111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:55.302" endtime="20201030 10:58:55.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.310" endtime="20201030 10:58:55.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.009" endtime="20201030 10:58:55.312"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.007" endtime="20201030 10:58:55.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:55.316" level="INFO">${RESULT} = [{'diff': 4.916699999999927e-05}, {'diff': 4.884700000000117e-05}, {'diff': 4.884700000000117e-05}, {'diff': 4.8431000000001556e-05}, {'diff': 4.83469999999972e-05}, {'diff': 4.8931000000002056e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:55.313" endtime="20201030 10:58:55.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:55.321" level="INFO">${ACCURACY} = {'diff': [4.916699999999927e-05, 4.884700000000117e-05, 4.884700000000117e-05, 4.8431000000001556e-05, 4.83469999999972e-05, 4.8931000000002056e-05, 4.857000000000125e-05, 4.869499999999791e-05, 4.922...</msg>
<status status="PASS" starttime="20201030 10:58:55.317" endtime="20201030 10:58:55.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.326" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 10:58:55.325" endtime="20201030 10:58:55.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.328" level="INFO">VALUE: [4.916699999999927e-05, 4.884700000000117e-05, 4.884700000000117e-05, 4.8431000000001556e-05, 4.83469999999972e-05, 4.8931000000002056e-05, 4.857000000000125e-05, 4.869499999999791e-05, 4.9223000000001016e-05, 4.8959000000001196e-05, 4.872200000000104e-05, 4.873599999999714e-05, 4.890199999999997e-05, 4.890199999999997e-05, 4.902799999999957e-05, 4.845800000000122e-05, 4.912500000000056e-05, 4.888899999999988e-05, 4.859699999999745e-05, 4.905500000000271e-05, 4.880600000000193e-05, 4.827799999999882e-05, 4.88330000000016e-05, 4.849999999999993e-05, 4.890199999999997e-05, 4.898599999999739e-05, 4.834800000000014e-05, 4.905599999999871e-05, 4.88469999999977e-05, 4.88339999999976e-05, 4.891599999999954e-05, 4.88330000000016e-05, 4.9167000000002736e-05, 4.865200000000319e-05, 4.872200000000104e-05, 4.91529999999997e-05, 4.886100000000074e-05, 4.909699999999795e-05, 4.900000000000043e-05, 4.841699999999852e-05, 4.912500000000056e-05, 4.887499999999684e-05, 4.859700000000092e-05, 4.862500000000006e-05, 4.902799999999957e-05, 4.906999999999828e-05, 4.881999999999803e-05, 4.849999999999993e-05, 4.8486999999999836e-05, 4.88469999999977e-05]</msg>
<status status="PASS" starttime="20201030 10:58:55.327" endtime="20201030 10:58:55.329"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.322" endtime="20201030 10:58:55.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:55.333" endtime="20201030 10:58:55.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.332" endtime="20201030 10:58:55.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.330" endtime="20201030 10:58:55.353"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.976" endtime="20201030 10:58:55.354"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:54.976" endtime="20201030 10:58:55.354"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.363" endtime="20201030 10:58:55.380"></status>
</kw>
<msg timestamp="20201030 10:58:55.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:55.361" endtime="20201030 10:58:55.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:55.382" endtime="20201030 10:58:55.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.384" endtime="20201030 10:58:55.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.359" endtime="20201030 10:58:55.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.356" endtime="20201030 10:58:55.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.393" endtime="20201030 10:58:55.679"></status>
</kw>
<msg timestamp="20201030 10:58:55.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019455722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019505111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:55.391" endtime="20201030 10:58:55.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019455722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019505111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:55.684" endtime="20201030 10:58:55.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.692" endtime="20201030 10:58:55.693"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.389" endtime="20201030 10:58:55.694"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.387" endtime="20201030 10:58:55.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:55.698" level="INFO">${RESULT} = [{'diff': 4.938899999999691e-05}, {'diff': 5.025000000000168e-05}, {'diff': 4.956899999999931e-05}, {'diff': 4.944399999999918e-05}, {'diff': 5.009700000000242e-05}, {'diff': 4.934700000000167e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:55.695" endtime="20201030 10:58:55.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:55.702" level="INFO">${ACCURACY} = {'diff': [4.938899999999691e-05, 5.025000000000168e-05, 4.956899999999931e-05, 4.944399999999918e-05, 5.009700000000242e-05, 4.934700000000167e-05, 5.013900000000113e-05, 5.019499999999941e-05, 4.9291...</msg>
<status status="PASS" starttime="20201030 10:58:55.699" endtime="20201030 10:58:55.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.707" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 10:58:55.706" endtime="20201030 10:58:55.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.709" level="INFO">VALUE: [4.938899999999691e-05, 5.025000000000168e-05, 4.956899999999931e-05, 4.944399999999918e-05, 5.009700000000242e-05, 4.934700000000167e-05, 5.013900000000113e-05, 5.019499999999941e-05, 4.929199999999939e-05, 4.958400000000182e-05, 5.026400000000125e-05, 4.949999999999746e-05, 4.977800000000032e-05, 4.958299999999888e-05, 4.944399999999918e-05, 4.988900000000088e-05, 5.016600000000079e-05, 4.9737000000001086e-05, 4.970899999999848e-05, 4.9707999999999e-05, 4.958300000000235e-05, 4.972200000000204e-05, 5.0014000000001e-05, 4.983299999999913e-05, 4.997200000000229e-05, 4.977800000000032e-05, 4.998599999999839e-05, 4.990300000000045e-05, 5.012500000000156e-05, 4.958299999999888e-05, 4.9723000000001516e-05, 4.937500000000081e-05, 4.927699999999688e-05, 4.950000000000093e-05, 4.981899999999956e-05, 5.022199999999907e-05, 4.974999999999771e-05, 4.944400000000265e-05, 4.988900000000088e-05, 4.988900000000088e-05, 4.983299999999913e-05, 4.987500000000131e-05, 4.980599999999946e-05, 5.020899999999898e-05, 4.944499999999866e-05, 4.9736999999997616e-05, 4.98200000000025e-05, 4.969499999999891e-05, 4.970800000000247e-05, 4.959699999999845e-05]</msg>
<status status="PASS" starttime="20201030 10:58:55.708" endtime="20201030 10:58:55.710"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.703" endtime="20201030 10:58:55.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:55.714" endtime="20201030 10:58:55.733"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.712" endtime="20201030 10:58:55.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.711" endtime="20201030 10:58:55.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.355" endtime="20201030 10:58:55.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.354" endtime="20201030 10:58:55.735"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.743" endtime="20201030 10:58:55.762"></status>
</kw>
<msg timestamp="20201030 10:58:55.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:55.742" endtime="20201030 10:58:55.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:55.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:55.764" endtime="20201030 10:58:55.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.766" endtime="20201030 10:58:55.768"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.739" endtime="20201030 10:58:55.768"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.737" endtime="20201030 10:58:55.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:55.775" endtime="20201030 10:58:56.061"></status>
</kw>
<msg timestamp="20201030 10:58:56.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022754444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:55.774" endtime="20201030 10:58:56.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022754444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:56.065" endtime="20201030 10:58:56.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.073" endtime="20201030 10:58:56.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.771" endtime="20201030 10:58:56.075"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.769" endtime="20201030 10:58:56.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:56.079" level="INFO">${RESULT} = [{'diff': 5.073599999999914e-05}, {'diff': 5.062499999999859e-05}, {'diff': 5.077699999999838e-05}, {'diff': 5.107000000000028e-05}, {'diff': 5.091600000000154e-05}, {'diff': 5.043100000000009e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:56.076" endtime="20201030 10:58:56.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:56.084" level="INFO">${ACCURACY} = {'diff': [5.073599999999914e-05, 5.062499999999859e-05, 5.077699999999838e-05, 5.107000000000028e-05, 5.091600000000154e-05, 5.043100000000009e-05, 5.122200000000007e-05, 5.111099999999952e-05, 5.1013...</msg>
<status status="PASS" starttime="20201030 10:58:56.080" endtime="20201030 10:58:56.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.088" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 10:58:56.087" endtime="20201030 10:58:56.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.090" level="INFO">VALUE: [5.073599999999914e-05, 5.062499999999859e-05, 5.077699999999838e-05, 5.107000000000028e-05, 5.091600000000154e-05, 5.043100000000009e-05, 5.122200000000007e-05, 5.111099999999952e-05, 5.101399999999853e-05, 5.104200000000114e-05, 5.061099999999902e-05, 5.106999999999681e-05, 5.052800000000107e-05, 5.102800000000157e-05, 5.070899999999948e-05, 5.06530000000012e-05, 5.111099999999952e-05, 5.126299999999931e-05, 5.0415999999997574e-05, 5.036099999999877e-05, 5.113900000000213e-05, 5.099999999999896e-05, 5.106900000000081e-05, 5.095800000000025e-05, 5.045799999999975e-05, 5.0943999999997214e-05, 5.08469999999997e-05, 5.073600000000261e-05, 5.073600000000261e-05, 5.082000000000003e-05, 5.107000000000028e-05, 5.082000000000003e-05, 5.058400000000282e-05, 5.088900000000188e-05, 5.09729999999993e-05, 5.1237000000002586e-05, 5.050000000000193e-05, 5.112499999999909e-05, 5.109699999999995e-05, 5.0402000000001473e-05, 5.0929999999997644e-05, 5.084700000000317e-05, 5.034700000000267e-05, 5.056900000000031e-05, 5.048600000000236e-05, 5.059699999999945e-05, 5.06530000000012e-05, 5.072199999999957e-05, 5.082000000000003e-05, 5.03469999999992e-05]</msg>
<status status="PASS" starttime="20201030 10:58:56.089" endtime="20201030 10:58:56.092"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.084" endtime="20201030 10:58:56.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:56.096" endtime="20201030 10:58:56.115"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.095" endtime="20201030 10:58:56.116"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.093" endtime="20201030 10:58:56.116"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.736" endtime="20201030 10:58:56.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:55.735" endtime="20201030 10:58:56.117"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.125" endtime="20201030 10:58:56.143"></status>
</kw>
<msg timestamp="20201030 10:58:56.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:56.124" endtime="20201030 10:58:56.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:56.144" endtime="20201030 10:58:56.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.147" endtime="20201030 10:58:56.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.121" endtime="20201030 10:58:56.149"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.119" endtime="20201030 10:58:56.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.155" endtime="20201030 10:58:56.441"></status>
</kw>
<msg timestamp="20201030 10:58:56.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020189653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:56.154" endtime="20201030 10:58:56.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020189653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:56.445" endtime="20201030 10:58:56.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.453" endtime="20201030 10:58:56.455"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.151" endtime="20201030 10:58:56.456"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.150" endtime="20201030 10:58:56.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:56.460" level="INFO">${RESULT} = [{'diff': 5.127799999999835e-05}, {'diff': 5.174999999999971e-05}, {'diff': 5.193100000000159e-05}, {'diff': 5.174999999999971e-05}, {'diff': 5.190300000000245e-05}, {'diff': 5.126300000000278e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:56.457" endtime="20201030 10:58:56.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:56.465" level="INFO">${ACCURACY} = {'diff': [5.127799999999835e-05, 5.174999999999971e-05, 5.193100000000159e-05, 5.174999999999971e-05, 5.190300000000245e-05, 5.126300000000278e-05, 5.162499999999959e-05, 5.158300000000088e-05, 5.1291...</msg>
<status status="PASS" starttime="20201030 10:58:56.461" endtime="20201030 10:58:56.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.469" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 10:58:56.468" endtime="20201030 10:58:56.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.472" level="INFO">VALUE: [5.127799999999835e-05, 5.174999999999971e-05, 5.193100000000159e-05, 5.174999999999971e-05, 5.190300000000245e-05, 5.126300000000278e-05, 5.162499999999959e-05, 5.158300000000088e-05, 5.129100000000192e-05, 5.215299999999923e-05, 5.212500000000009e-05, 5.213900000000313e-05, 5.172300000000005e-05, 5.176399999999928e-05, 5.150000000000293e-05, 5.144500000000066e-05, 5.127799999999835e-05, 5.147200000000032e-05, 5.162499999999959e-05, 5.132000000000053e-05, 5.198600000000039e-05, 5.225000000000021e-05, 5.138899999999891e-05, 5.1651999999999254e-05, 5.1471999999996854e-05, 5.143000000000161e-05, 5.174999999999971e-05, 5.162500000000306e-05, 5.223600000000064e-05, 5.177799999999885e-05, 5.154200000000164e-05, 5.181899999999809e-05, 5.1708000000001e-05, 5.138899999999891e-05, 5.188899999999941e-05, 5.15279999999986e-05, 5.198600000000039e-05, 5.152800000000207e-05, 5.193099999999812e-05, 5.188899999999941e-05, 5.136099999999977e-05, 5.1985999999996924e-05, 5.173600000000014e-05, 5.201399999999953e-05, 5.212500000000009e-05, 5.159700000000045e-05, 5.194400000000168e-05, 5.162500000000306e-05, 5.173600000000014e-05, 5.191700000000202e-05]</msg>
<status status="PASS" starttime="20201030 10:58:56.470" endtime="20201030 10:58:56.473"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.466" endtime="20201030 10:58:56.473"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:56.478" endtime="20201030 10:58:56.497"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.476" endtime="20201030 10:58:56.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.474" endtime="20201030 10:58:56.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.118" endtime="20201030 10:58:56.498"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.117" endtime="20201030 10:58:56.498"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.507" endtime="20201030 10:58:56.524"></status>
</kw>
<msg timestamp="20201030 10:58:56.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:56.505" endtime="20201030 10:58:56.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:56.526" endtime="20201030 10:58:56.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.528" endtime="20201030 10:58:56.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.503" endtime="20201030 10:58:56.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.501" endtime="20201030 10:58:56.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.537" endtime="20201030 10:58:56.825"></status>
</kw>
<msg timestamp="20201030 10:58:56.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020350556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:56.536" endtime="20201030 10:58:56.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020350556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:56.829" endtime="20201030 10:58:56.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.837" endtime="20201030 10:58:56.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.533" endtime="20201030 10:58:56.839"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.531" endtime="20201030 10:58:56.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:56.844" level="INFO">${RESULT} = [{'diff': 5.322299999999808e-05}, {'diff': 5.231899999999859e-05}, {'diff': 5.244500000000166e-05}, {'diff': 5.262500000000059e-05}, {'diff': 5.2679999999999394e-05}, {'diff': 5.238899999999991e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:56.840" endtime="20201030 10:58:56.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:56.848" level="INFO">${ACCURACY} = {'diff': [5.322299999999808e-05, 5.231899999999859e-05, 5.244500000000166e-05, 5.262500000000059e-05, 5.2679999999999394e-05, 5.238899999999991e-05, 5.273600000000114e-05, 5.231899999999859e-05, 5.295...</msg>
<status status="PASS" starttime="20201030 10:58:56.845" endtime="20201030 10:58:56.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.852" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 10:58:56.851" endtime="20201030 10:58:56.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.854" level="INFO">VALUE: [5.322299999999808e-05, 5.231899999999859e-05, 5.244500000000166e-05, 5.262500000000059e-05, 5.2679999999999394e-05, 5.238899999999991e-05, 5.273600000000114e-05, 5.231899999999859e-05, 5.295800000000225e-05, 5.280599999999899e-05, 5.263900000000016e-05, 5.322200000000207e-05, 5.234699999999773e-05, 5.243099999999862e-05, 5.244500000000166e-05, 5.298600000000139e-05, 5.311100000000152e-05, 5.295899999999826e-05, 5.280499999999952e-05, 5.2402000000000004e-05, 5.284699999999823e-05, 5.223600000000064e-05, 5.227799999999935e-05, 5.2415999999999574e-05, 5.263900000000016e-05, 5.315300000000023e-05, 5.300000000000096e-05, 5.31669999999998e-05, 5.318099999999937e-05, 5.2735999999997674e-05, 5.244500000000166e-05, 5.273700000000062e-05, 5.3235999999998174e-05, 5.2749999999997244e-05, 5.2957999999998784e-05, 5.2735999999997674e-05, 5.258299999999841e-05, 5.23470000000012e-05, 5.283300000000213e-05, 5.248600000000089e-05, 5.234699999999773e-05, 5.300000000000096e-05, 5.258299999999841e-05, 5.327800000000035e-05, 5.306999999999881e-05, 5.311100000000152e-05, 5.291699999999955e-05, 5.307000000000228e-05, 5.261100000000102e-05, 5.2665999999999824e-05]</msg>
<status status="PASS" starttime="20201030 10:58:56.853" endtime="20201030 10:58:56.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.849" endtime="20201030 10:58:56.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:56.859" endtime="20201030 10:58:56.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.858" endtime="20201030 10:58:56.879"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.857" endtime="20201030 10:58:56.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.499" endtime="20201030 10:58:56.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.499" endtime="20201030 10:58:56.880"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.889" endtime="20201030 10:58:56.907"></status>
</kw>
<msg timestamp="20201030 10:58:56.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:56.887" endtime="20201030 10:58:56.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:56.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:56.909" endtime="20201030 10:58:56.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.911" endtime="20201030 10:58:56.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.885" endtime="20201030 10:58:56.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.883" endtime="20201030 10:58:56.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:56.920" endtime="20201030 10:58:57.206"></status>
</kw>
<msg timestamp="20201030 10:58:57.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020455708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020509583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:56.919" endtime="20201030 10:58:57.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020455708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020509583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:57.210" endtime="20201030 10:58:57.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.218" endtime="20201030 10:58:57.220"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.916" endtime="20201030 10:58:57.220"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.914" endtime="20201030 10:58:57.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:57.224" level="INFO">${RESULT} = [{'diff': 5.387500000000184e-05}, {'diff': 5.409699999999948e-05}, {'diff': 5.375000000000171e-05}, {'diff': 5.386100000000227e-05}, {'diff': 5.4027999999997633e-05}, {'diff': 5.3721999999999104e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:57.221" endtime="20201030 10:58:57.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:57.229" level="INFO">${ACCURACY} = {'diff': [5.387500000000184e-05, 5.409699999999948e-05, 5.375000000000171e-05, 5.386100000000227e-05, 5.4027999999997633e-05, 5.3721999999999104e-05, 5.329199999999992e-05, 5.381900000000009e-05, 5.40...</msg>
<status status="PASS" starttime="20201030 10:58:57.225" endtime="20201030 10:58:57.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.233" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 10:58:57.232" endtime="20201030 10:58:57.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.235" level="INFO">VALUE: [5.387500000000184e-05, 5.409699999999948e-05, 5.375000000000171e-05, 5.386100000000227e-05, 5.4027999999997633e-05, 5.3721999999999104e-05, 5.329199999999992e-05, 5.381900000000009e-05, 5.4013999999998064e-05, 5.337500000000134e-05, 5.359699999999898e-05, 5.393100000000012e-05, 5.363900000000116e-05, 5.373600000000214e-05, 5.340300000000048e-05, 5.365300000000073e-05, 5.4194000000000464e-05, 5.3916000000001074e-05, 5.359700000000245e-05, 5.4166000000001324e-05, 5.3499999999997994e-05, 5.3735999999998674e-05, 5.341700000000005e-05, 5.338900000000091e-05, 5.381900000000009e-05, 5.362500000000159e-05, 5.413899999999819e-05, 5.41670000000008e-05, 5.334699999999873e-05, 5.3249999999997744e-05, 5.404200000000067e-05, 5.3749999999998244e-05, 5.38479999999987e-05, 5.343099999999962e-05, 5.341700000000005e-05, 5.3721999999999104e-05, 5.3443999999999714e-05, 5.4221999999999604e-05, 5.3651999999997785e-05, 5.4208000000000034e-05, 5.388900000000141e-05, 5.351400000000103e-05, 5.377800000000085e-05, 5.329199999999992e-05, 5.354200000000017e-05, 5.383399999999913e-05, 5.3999999999998494e-05, 5.422299999999908e-05, 5.412499999999862e-05, 5.33340000000021e-05]</msg>
<status status="PASS" starttime="20201030 10:58:57.234" endtime="20201030 10:58:57.237"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.229" endtime="20201030 10:58:57.238"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:57.241" endtime="20201030 10:58:57.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.240" endtime="20201030 10:58:57.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.239" endtime="20201030 10:58:57.261"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.881" endtime="20201030 10:58:57.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:56.880" endtime="20201030 10:58:57.262"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.270" endtime="20201030 10:58:57.286"></status>
</kw>
<msg timestamp="20201030 10:58:57.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:57.269" endtime="20201030 10:58:57.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:57.288" endtime="20201030 10:58:57.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.290" endtime="20201030 10:58:57.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.266" endtime="20201030 10:58:57.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.264" endtime="20201030 10:58:57.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.299" endtime="20201030 10:58:57.586"></status>
</kw>
<msg timestamp="20201030 10:58:57.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019287681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019342028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:57.298" endtime="20201030 10:58:57.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019287681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019342028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:57.590" endtime="20201030 10:58:57.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.598" endtime="20201030 10:58:57.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.295" endtime="20201030 10:58:57.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.293" endtime="20201030 10:58:57.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:57.604" level="INFO">${RESULT} = [{'diff': 5.434699999999973e-05}, {'diff': 5.48609999999998e-05}, {'diff': 5.4499999999998994e-05}, {'diff': 5.4430000000001144e-05}, {'diff': 5.4999999999999494e-05}, {'diff': 5.508300000000091e-05},...</msg>
<status status="PASS" starttime="20201030 10:58:57.601" endtime="20201030 10:58:57.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:57.609" level="INFO">${ACCURACY} = {'diff': [5.434699999999973e-05, 5.48609999999998e-05, 5.4499999999998994e-05, 5.4430000000001144e-05, 5.4999999999999494e-05, 5.508300000000091e-05, 5.4402000000002004e-05, 5.434699999999973e-05, 5.4...</msg>
<status status="PASS" starttime="20201030 10:58:57.605" endtime="20201030 10:58:57.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.614" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 10:58:57.613" endtime="20201030 10:58:57.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.616" level="INFO">VALUE: [5.434699999999973e-05, 5.48609999999998e-05, 5.4499999999998994e-05, 5.4430000000001144e-05, 5.4999999999999494e-05, 5.508300000000091e-05, 5.4402000000002004e-05, 5.434699999999973e-05, 5.456900000000084e-05, 5.455500000000127e-05, 5.5013999999999064e-05, 5.4735999999999674e-05, 5.491700000000155e-05, 5.51670000000018e-05, 5.458300000000041e-05, 5.462500000000259e-05, 5.5013999999999064e-05, 5.43340000000031e-05, 5.427800000000135e-05, 5.451400000000203e-05, 5.443100000000062e-05, 5.4777999999998384e-05, 5.5207999999997565e-05, 5.4735999999999674e-05, 5.481899999999762e-05, 5.4749999999999244e-05, 5.463899999999869e-05, 5.4972000000000354e-05, 5.431900000000059e-05, 5.5236000000000174e-05, 5.4722000000000104e-05, 5.4943999999997745e-05, 5.462500000000259e-05, 5.430599999999702e-05, 5.440300000000148e-05, 5.48609999999998e-05, 5.431900000000059e-05, 5.486199999999927e-05, 5.5179999999998425e-05, 5.4499999999998994e-05, 5.458299999999694e-05, 5.452699999999866e-05, 5.437499999999887e-05, 5.479099999999848e-05, 5.458300000000041e-05, 5.48609999999998e-05, 5.477800000000185e-05, 5.48609999999998e-05, 5.43609999999993e-05, 5.457000000000031e-05]</msg>
<status status="PASS" starttime="20201030 10:58:57.615" endtime="20201030 10:58:57.617"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.610" endtime="20201030 10:58:57.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:57.621" endtime="20201030 10:58:57.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.620" endtime="20201030 10:58:57.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.619" endtime="20201030 10:58:57.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.263" endtime="20201030 10:58:57.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.262" endtime="20201030 10:58:57.642"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.650" endtime="20201030 10:58:57.667"></status>
</kw>
<msg timestamp="20201030 10:58:57.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:57.649" endtime="20201030 10:58:57.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:57.668" endtime="20201030 10:58:57.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.671" endtime="20201030 10:58:57.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.646" endtime="20201030 10:58:57.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.644" endtime="20201030 10:58:57.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.680" endtime="20201030 10:58:57.967"></status>
</kw>
<msg timestamp="20201030 10:58:57.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019360903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019416875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:57.678" endtime="20201030 10:58:57.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019360903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019416875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:57.972" endtime="20201030 10:58:57.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:57.980" endtime="20201030 10:58:57.981"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.675" endtime="20201030 10:58:57.982"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.674" endtime="20201030 10:58:57.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:57.986" level="INFO">${RESULT} = [{'diff': 5.5972000000001354e-05}, {'diff': 5.5777999999999384e-05}, {'diff': 5.533300000000116e-05}, {'diff': 5.613900000000019e-05}, {'diff': 5.6152000000000285e-05}, {'diff': 5.543100000000162e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:57.983" endtime="20201030 10:58:57.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:57.990" level="INFO">${ACCURACY} = {'diff': [5.5972000000001354e-05, 5.5777999999999384e-05, 5.533300000000116e-05, 5.613900000000019e-05, 5.6152000000000285e-05, 5.543100000000162e-05, 5.58610000000008e-05, 5.561100000000055e-05, 5.53...</msg>
<status status="PASS" starttime="20201030 10:58:57.987" endtime="20201030 10:58:57.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.995" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 10:58:57.994" endtime="20201030 10:58:57.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:57.997" level="INFO">VALUE: [5.5972000000001354e-05, 5.5777999999999384e-05, 5.533300000000116e-05, 5.613900000000019e-05, 5.6152000000000285e-05, 5.543100000000162e-05, 5.58610000000008e-05, 5.561100000000055e-05, 5.532000000000106e-05, 5.55549999999988e-05, 5.5499999999999994e-05, 5.5472000000000854e-05, 5.53610000000003e-05, 5.534700000000073e-05, 5.5722000000001104e-05, 5.561099999999708e-05, 5.5736000000000674e-05, 5.562500000000012e-05, 5.615299999999976e-05, 5.5541999999998704e-05, 5.6236000000001174e-05, 5.5750000000000244e-05, 5.631899999999912e-05, 5.611099999999758e-05, 5.572300000000058e-05, 5.593099999999865e-05, 5.587500000000037e-05, 5.5929999999999175e-05, 5.613900000000019e-05, 5.6027999999999634e-05, 5.563899999999969e-05, 5.5679999999998925e-05, 5.5722000000001104e-05, 5.5444000000001714e-05, 5.593099999999865e-05, 5.5763999999999814e-05, 5.562500000000012e-05, 5.5971999999997885e-05, 5.5763999999999814e-05, 5.605600000000224e-05, 5.583400000000113e-05, 5.558399999999741e-05, 5.588899999999994e-05, 5.530499999999855e-05, 5.559700000000098e-05, 5.5708000000001534e-05, 5.5750000000000244e-05, 5.5693999999998495e-05, 5.5722000000001104e-05, 5.583299999999819e-05]</msg>
<status status="PASS" starttime="20201030 10:58:57.996" endtime="20201030 10:58:57.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.991" endtime="20201030 10:58:57.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:58.002" endtime="20201030 10:58:58.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.001" endtime="20201030 10:58:58.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.000" endtime="20201030 10:58:58.022"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.643" endtime="20201030 10:58:58.023"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:57.642" endtime="20201030 10:58:58.023"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.032" endtime="20201030 10:58:58.050"></status>
</kw>
<msg timestamp="20201030 10:58:58.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:58.030" endtime="20201030 10:58:58.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:58.051" endtime="20201030 10:58:58.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.054" endtime="20201030 10:58:58.055"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.027" endtime="20201030 10:58:58.056"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.025" endtime="20201030 10:58:58.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.063" endtime="20201030 10:58:58.350"></status>
</kw>
<msg timestamp="20201030 10:58:58.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020312514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:58.061" endtime="20201030 10:58:58.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020312514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:58.354" endtime="20201030 10:58:58.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.362" endtime="20201030 10:58:58.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.059" endtime="20201030 10:58:58.364"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.057" endtime="20201030 10:58:58.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:58.369" level="INFO">${RESULT} = [{'diff': 5.6277999999999884e-05}, {'diff': 5.662499999999765e-05}, {'diff': 5.688899999999747e-05}, {'diff': 5.6902000000001035e-05}, {'diff': 5.6486000000001424e-05}, {'diff': 5.679100000000048e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:58.366" endtime="20201030 10:58:58.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:58.373" level="INFO">${ACCURACY} = {'diff': [5.6277999999999884e-05, 5.662499999999765e-05, 5.688899999999747e-05, 5.6902000000001035e-05, 5.6486000000001424e-05, 5.679100000000048e-05, 5.708299999999944e-05, 5.6708000000002534e-05, 5....</msg>
<status status="PASS" starttime="20201030 10:58:58.370" endtime="20201030 10:58:58.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.377" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 10:58:58.376" endtime="20201030 10:58:58.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.380" level="INFO">VALUE: [5.6277999999999884e-05, 5.662499999999765e-05, 5.688899999999747e-05, 5.6902000000001035e-05, 5.6486000000001424e-05, 5.679100000000048e-05, 5.708299999999944e-05, 5.6708000000002534e-05, 5.70550000000003e-05, 5.6528000000000134e-05, 5.663899999999722e-05, 5.6999999999998024e-05, 5.7000000000001494e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.658400000000188e-05, 5.644500000000219e-05, 5.7028000000000634e-05, 5.64870000000009e-05, 5.679099999999701e-05, 5.656899999999937e-05, 5.661099999999808e-05, 5.6500000000000994e-05, 5.713899999999772e-05, 5.6735999999998205e-05, 5.6500000000000994e-05, 5.7221999999999135e-05, 5.709700000000248e-05, 5.6443999999999245e-05, 5.6778000000000384e-05, 5.670899999999854e-05, 5.680600000000299e-05, 5.6791999999999954e-05, 5.64870000000009e-05, 5.6305999999999023e-05, 5.683400000000213e-05, 5.7000000000001494e-05, 5.6916000000000605e-05, 5.6693999999999495e-05, 5.688900000000094e-05, 5.6472000000001854e-05, 5.6485999999997955e-05, 5.6429999999999675e-05, 5.6514000000000564e-05, 5.686099999999833e-05, 5.655600000000274e-05, 5.6777999999996914e-05, 5.706899999999987e-05, 5.657000000000231e-05, 5.6319999999998593e-05]</msg>
<status status="PASS" starttime="20201030 10:58:58.378" endtime="20201030 10:58:58.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.374" endtime="20201030 10:58:58.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:58.385" endtime="20201030 10:58:58.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.384" endtime="20201030 10:58:58.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.383" endtime="20201030 10:58:58.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.024" endtime="20201030 10:58:58.406"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.023" endtime="20201030 10:58:58.406"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.415" endtime="20201030 10:58:58.432"></status>
</kw>
<msg timestamp="20201030 10:58:58.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:58.413" endtime="20201030 10:58:58.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:58.433" endtime="20201030 10:58:58.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.436" endtime="20201030 10:58:58.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.411" endtime="20201030 10:58:58.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.409" endtime="20201030 10:58:58.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.445" endtime="20201030 10:58:58.729"></status>
</kw>
<msg timestamp="20201030 10:58:58.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019931486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01998925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:58.443" endtime="20201030 10:58:58.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019931486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01998925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:58:58.733" endtime="20201030 10:58:58.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.742" endtime="20201030 10:58:58.743"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.441" endtime="20201030 10:58:58.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.439" endtime="20201030 10:58:58.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:58.748" level="INFO">${RESULT} = [{'diff': 5.7763999999998344e-05}, {'diff': 5.743100000000015e-05}, {'diff': 5.788900000000194e-05}, {'diff': 5.813899999999872e-05}, {'diff': 5.81810000000009e-05}, {'diff': 5.772299999999911e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:58:58.745" endtime="20201030 10:58:58.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:58.753" level="INFO">${ACCURACY} = {'diff': [5.7763999999998344e-05, 5.743100000000015e-05, 5.788900000000194e-05, 5.813899999999872e-05, 5.81810000000009e-05, 5.772299999999911e-05, 5.756900000000037e-05, 5.804099999999826e-05, 5.7971...</msg>
<status status="PASS" starttime="20201030 10:58:58.749" endtime="20201030 10:58:58.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.757" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 10:58:58.756" endtime="20201030 10:58:58.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.760" level="INFO">VALUE: [5.7763999999998344e-05, 5.743100000000015e-05, 5.788900000000194e-05, 5.813899999999872e-05, 5.81810000000009e-05, 5.772299999999911e-05, 5.756900000000037e-05, 5.804099999999826e-05, 5.7971999999999885e-05, 5.762499999999865e-05, 5.8222000000000135e-05, 5.780499999999758e-05, 5.808300000000044e-05, 5.815299999999829e-05, 5.738899999999797e-05, 5.7986000000002924e-05, 5.7556000000000274e-05, 5.81810000000009e-05, 5.765300000000126e-05, 5.8249999999999275e-05, 5.8083999999999913e-05, 5.772299999999911e-05, 5.7485999999998955e-05, 5.784799999999923e-05, 5.8138000000002715e-05, 5.7764000000001814e-05, 5.811099999999958e-05, 5.8151999999998816e-05, 5.734699999999926e-05, 5.7500000000001994e-05, 5.762499999999865e-05, 5.741699999999711e-05, 5.816699999999786e-05, 5.7555999999996804e-05, 5.769499999999997e-05, 5.743100000000015e-05, 5.7999999999999025e-05, 5.815299999999829e-05, 5.790300000000151e-05, 5.7901999999998566e-05, 5.738900000000144e-05, 5.8194000000000995e-05, 5.806900000000087e-05, 5.783300000000019e-05, 5.733299999999969e-05, 5.7500000000001994e-05, 5.762500000000212e-05, 5.731900000000012e-05, 5.7542000000000704e-05, 5.7749999999998775e-05]</msg>
<status status="PASS" starttime="20201030 10:58:58.758" endtime="20201030 10:58:58.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.754" endtime="20201030 10:58:58.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:58.765" endtime="20201030 10:58:58.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.763" endtime="20201030 10:58:58.785"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.762" endtime="20201030 10:58:58.785"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.407" endtime="20201030 10:58:58.785"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.407" endtime="20201030 10:58:58.785"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.794" endtime="20201030 10:58:58.810"></status>
</kw>
<msg timestamp="20201030 10:58:58.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:58.793" endtime="20201030 10:58:58.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:58.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:58.811" endtime="20201030 10:58:58.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.814" endtime="20201030 10:58:58.816"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.790" endtime="20201030 10:58:58.816"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.788" endtime="20201030 10:58:58.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:58.823" endtime="20201030 10:58:59.110"></status>
</kw>
<msg timestamp="20201030 10:58:59.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019562556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019621389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:58.821" endtime="20201030 10:58:59.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019562556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019621389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:59.114" endtime="20201030 10:58:59.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.122" endtime="20201030 10:58:59.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.819" endtime="20201030 10:58:59.124"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.817" endtime="20201030 10:58:59.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:59.128" level="INFO">${RESULT} = [{'diff': 5.883300000000119e-05}, {'diff': 5.913899999999972e-05}, {'diff': 5.8472000000000385e-05}, {'diff': 5.893099999999818e-05}, {'diff': 5.8791999999998484e-05}, {'diff': 5.8666000000002355e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:59.125" endtime="20201030 10:58:59.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:59.132" level="INFO">${ACCURACY} = {'diff': [5.883300000000119e-05, 5.913899999999972e-05, 5.8472000000000385e-05, 5.893099999999818e-05, 5.8791999999998484e-05, 5.8666000000002355e-05, 5.8778000000002384e-05, 5.9151999999999816e-05, 5...</msg>
<status status="PASS" starttime="20201030 10:58:59.129" endtime="20201030 10:58:59.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.137" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 10:58:59.136" endtime="20201030 10:58:59.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.140" level="INFO">VALUE: [5.883300000000119e-05, 5.913899999999972e-05, 5.8472000000000385e-05, 5.893099999999818e-05, 5.8791999999998484e-05, 5.8666000000002355e-05, 5.8778000000002384e-05, 5.9151999999999816e-05, 5.9236000000000705e-05, 5.908300000000144e-05, 5.912500000000015e-05, 5.913900000000319e-05, 5.9250000000000275e-05, 5.8637999999999746e-05, 5.838899999999897e-05, 5.8736000000000205e-05, 5.894500000000122e-05, 5.861100000000008e-05, 5.8513999999999095e-05, 5.9041999999998734e-05, 5.865299999999879e-05, 5.837500000000287e-05, 5.873699999999968e-05, 5.906900000000187e-05, 5.90550000000023e-05, 5.8514000000002564e-05, 5.829099999999851e-05, 5.8708000000001065e-05, 5.905499999999883e-05, 5.8986000000000455e-05, 5.927699999999994e-05, 5.8499999999999525e-05, 5.8722000000000635e-05, 5.9000000000000025e-05, 5.8334000000000163e-05, 5.9000000000000025e-05, 5.890299999999904e-05, 5.9222000000001135e-05, 5.8722000000000635e-05, 5.854100000000223e-05, 5.837500000000287e-05, 5.9236000000000705e-05, 5.884700000000076e-05, 5.833300000000069e-05, 5.9236000000000705e-05, 5.8944000000001745e-05, 5.836099999999983e-05, 5.8555999999997804e-05, 5.9292000000002454e-05, 5.862500000000312e-05]</msg>
<status status="PASS" starttime="20201030 10:58:59.138" endtime="20201030 10:58:59.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.133" endtime="20201030 10:58:59.141"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:59.144" endtime="20201030 10:58:59.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.143" endtime="20201030 10:58:59.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.142" endtime="20201030 10:58:59.165"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.786" endtime="20201030 10:58:59.165"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:58.786" endtime="20201030 10:58:59.165"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.174" endtime="20201030 10:58:59.194"></status>
</kw>
<msg timestamp="20201030 10:58:59.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.172" endtime="20201030 10:58:59.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.196" endtime="20201030 10:58:59.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.198" endtime="20201030 10:58:59.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.170" endtime="20201030 10:58:59.201"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.168" endtime="20201030 10:58:59.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.207" endtime="20201030 10:58:59.492"></status>
</kw>
<msg timestamp="20201030 10:58:59.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023531903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023591278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:59.206" endtime="20201030 10:58:59.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023531903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023591278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:59.496" endtime="20201030 10:58:59.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.504" endtime="20201030 10:58:59.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.203" endtime="20201030 10:58:59.506"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.202" endtime="20201030 10:58:59.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:59.511" level="INFO">${RESULT} = [{'diff': 5.93750000000004e-05}, {'diff': 5.9764000000000345e-05}, {'diff': 6.0250000000001275e-05}, {'diff': 5.991699999999961e-05}, {'diff': 5.9305999999998554e-05}, {'diff': 5.9708000000002065e-05}...</msg>
<status status="PASS" starttime="20201030 10:58:59.507" endtime="20201030 10:58:59.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:59.515" level="INFO">${ACCURACY} = {'diff': [5.93750000000004e-05, 5.9764000000000345e-05, 6.0250000000001275e-05, 5.991699999999961e-05, 5.9305999999998554e-05, 5.9708000000002065e-05, 5.931899999999865e-05, 5.954099999999976e-05, 5.9...</msg>
<status status="PASS" starttime="20201030 10:58:59.512" endtime="20201030 10:58:59.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.520" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 10:58:59.518" endtime="20201030 10:58:59.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.522" level="INFO">VALUE: [5.93750000000004e-05, 5.9764000000000345e-05, 6.0250000000001275e-05, 5.991699999999961e-05, 5.9305999999998554e-05, 5.9708000000002065e-05, 5.931899999999865e-05, 5.954099999999976e-05, 5.934699999999779e-05, 5.9722000000001635e-05, 5.962499999999718e-05, 5.938899999999997e-05, 6.0028000000000165e-05, 6.0028000000000165e-05, 5.934700000000126e-05, 5.9514000000000095e-05, 5.984699999999829e-05, 6.0264000000000845e-05, 6.015299999999682e-05, 5.9334000000001164e-05, 6.013900000000072e-05, 5.938899999999997e-05, 5.981900000000262e-05, 5.9665999999999886e-05, 5.9443999999998776e-05, 5.9986000000001455e-05, 6.0083999999998444e-05, 5.962500000000065e-05, 6.0208000000002565e-05, 5.9485999999997485e-05, 5.9971999999998415e-05, 6.019500000000247e-05, 5.990300000000004e-05, 5.993100000000265e-05, 5.9263999999999845e-05, 6.013900000000072e-05, 5.9957999999998846e-05, 5.984699999999829e-05, 6.011100000000158e-05, 5.9722000000001635e-05, 5.9943999999999276e-05, 5.9999999999997555e-05, 5.9735999999997735e-05, 5.938899999999997e-05, 5.984699999999829e-05, 5.9514000000000095e-05, 6.0055999999999304e-05, 6.0028000000000165e-05, 5.947300000000086e-05, 5.963900000000022e-05]</msg>
<status status="PASS" starttime="20201030 10:58:59.521" endtime="20201030 10:58:59.524"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.516" endtime="20201030 10:58:59.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:59.529" endtime="20201030 10:58:59.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.527" endtime="20201030 10:58:59.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.525" endtime="20201030 10:58:59.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.166" endtime="20201030 10:58:59.549"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.165" endtime="20201030 10:58:59.549"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.558" endtime="20201030 10:58:59.575"></status>
</kw>
<msg timestamp="20201030 10:58:59.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.556" endtime="20201030 10:58:59.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.577" endtime="20201030 10:58:59.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.579" endtime="20201030 10:58:59.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.554" endtime="20201030 10:58:59.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.552" endtime="20201030 10:58:59.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.588" endtime="20201030 10:58:59.874"></status>
</kw>
<msg timestamp="20201030 10:58:59.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020194653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020255222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:59.587" endtime="20201030 10:58:59.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020194653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020255222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:59.879" endtime="20201030 10:58:59.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.887" endtime="20201030 10:58:59.888"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.584" endtime="20201030 10:58:59.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.582" endtime="20201030 10:58:59.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:58:59.893" level="INFO">${RESULT} = [{'diff': 6.05689999999999e-05}, {'diff': 6.040300000000054e-05}, {'diff': 6.080499999999711e-05}, {'diff': 6.0721999999999166e-05}, {'diff': 6.059699999999904e-05}, {'diff': 6.0264000000000845e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:58:59.890" endtime="20201030 10:58:59.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:58:59.898" level="INFO">${ACCURACY} = {'diff': [6.05689999999999e-05, 6.040300000000054e-05, 6.080499999999711e-05, 6.0721999999999166e-05, 6.059699999999904e-05, 6.0264000000000845e-05, 6.063900000000122e-05, 6.095899999999932e-05, 6.065...</msg>
<status status="PASS" starttime="20201030 10:58:59.894" endtime="20201030 10:58:59.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.903" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 10:58:59.902" endtime="20201030 10:58:59.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.905" level="INFO">VALUE: [6.05689999999999e-05, 6.040300000000054e-05, 6.080499999999711e-05, 6.0721999999999166e-05, 6.059699999999904e-05, 6.0264000000000845e-05, 6.063900000000122e-05, 6.095899999999932e-05, 6.065300000000079e-05, 6.065300000000079e-05, 6.1028000000001165e-05, 6.108299999999997e-05, 6.0416000000000636e-05, 6.105500000000083e-05, 6.087499999999843e-05, 6.058299999999947e-05, 6.065299999999732e-05, 6.108299999999997e-05, 6.0791999999997015e-05, 6.05689999999999e-05, 6.066700000000036e-05, 6.0513999999997625e-05, 6.063900000000122e-05, 6.08750000000019e-05, 6.127799999999795e-05, 6.061099999999861e-05, 6.068099999999993e-05, 6.1000000000002025e-05, 6.091700000000061e-05, 6.0929999999997236e-05, 6.0721999999999166e-05, 6.0652000000001316e-05, 6.070899999999907e-05, 6.0472000000002385e-05, 6.0749999999998305e-05, 6.061099999999861e-05, 6.0999999999998555e-05, 6.0485999999998485e-05, 6.034699999999879e-05, 6.045899999999882e-05, 6.072299999999864e-05, 6.122300000000261e-05, 6.0985999999998985e-05, 6.077700000000144e-05, 6.077700000000144e-05, 6.0735999999998735e-05, 6.0500000000001525e-05, 6.0902000000001566e-05, 6.1014000000001595e-05, 6.105500000000083e-05]</msg>
<status status="PASS" starttime="20201030 10:58:59.904" endtime="20201030 10:58:59.906"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.899" endtime="20201030 10:58:59.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:58:59.910" endtime="20201030 10:58:59.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.909" endtime="20201030 10:58:59.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.908" endtime="20201030 10:58:59.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.550" endtime="20201030 10:58:59.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.550" endtime="20201030 10:58:59.931"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.939" endtime="20201030 10:58:59.957"></status>
</kw>
<msg timestamp="20201030 10:58:59.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.938" endtime="20201030 10:58:59.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:58:59.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:58:59.958" endtime="20201030 10:58:59.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.961" endtime="20201030 10:58:59.962"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.935" endtime="20201030 10:58:59.963"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.933" endtime="20201030 10:58:59.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:58:59.970" endtime="20201030 10:59:00.256"></status>
</kw>
<msg timestamp="20201030 10:59:00.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020421319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020482806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:58:59.968" endtime="20201030 10:59:00.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020421319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020482806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:00.261" endtime="20201030 10:59:00.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.269" endtime="20201030 10:59:00.270"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.965" endtime="20201030 10:59:00.271"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.964" endtime="20201030 10:59:00.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:00.275" level="INFO">${RESULT} = [{'diff': 6.148699999999896e-05}, {'diff': 6.15690000000009e-05}, {'diff': 6.168000000000146e-05}, {'diff': 6.194400000000128e-05}, {'diff': 6.142999999999774e-05}, {'diff': 6.17360000000032e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:00.272" endtime="20201030 10:59:00.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:00.279" level="INFO">${ACCURACY} = {'diff': [6.148699999999896e-05, 6.15690000000009e-05, 6.168000000000146e-05, 6.194400000000128e-05, 6.142999999999774e-05, 6.17360000000032e-05, 6.199999999999956e-05, 6.148599999999949e-05, 6.151400...</msg>
<status status="PASS" starttime="20201030 10:59:00.276" endtime="20201030 10:59:00.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.283" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 10:59:00.283" endtime="20201030 10:59:00.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.286" level="INFO">VALUE: [6.148699999999896e-05, 6.15690000000009e-05, 6.168000000000146e-05, 6.194400000000128e-05, 6.142999999999774e-05, 6.17360000000032e-05, 6.199999999999956e-05, 6.148599999999949e-05, 6.15140000000021e-05, 6.161099999999961e-05, 6.200000000000302e-05, 6.193100000000118e-05, 6.191699999999814e-05, 6.179199999999802e-05, 6.13339999999997e-05, 6.212499999999968e-05, 6.130600000000055e-05, 6.22219999999972e-05, 6.150000000000252e-05, 6.223600000000024e-05, 6.15279999999982e-05, 6.129200000000098e-05, 6.198599999999999e-05, 6.199999999999956e-05, 6.140300000000154e-05, 6.183299999999725e-05, 6.20560000000013e-05, 6.162500000000265e-05, 6.180500000000158e-05, 6.147299999999939e-05, 6.157000000000037e-05, 6.154100000000176e-05, 6.192999999999824e-05, 6.191599999999867e-05, 6.129100000000151e-05, 6.177799999999845e-05, 6.122199999999967e-05, 6.20279999999987e-05, 6.193100000000118e-05, 6.20560000000013e-05, 6.177799999999845e-05, 6.213899999999925e-05, 6.182000000000062e-05, 6.157000000000037e-05, 6.138900000000197e-05, 6.215299999999882e-05, 6.177799999999845e-05, 6.162499999999918e-05, 6.166599999999842e-05, 6.127699999999847e-05]</msg>
<status status="PASS" starttime="20201030 10:59:00.285" endtime="20201030 10:59:00.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.280" endtime="20201030 10:59:00.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:00.297" endtime="20201030 10:59:00.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.295" endtime="20201030 10:59:00.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.294" endtime="20201030 10:59:00.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.932" endtime="20201030 10:59:00.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:59.931" endtime="20201030 10:59:00.318"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.326" endtime="20201030 10:59:00.344"></status>
</kw>
<msg timestamp="20201030 10:59:00.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:00.325" endtime="20201030 10:59:00.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:00.346" endtime="20201030 10:59:00.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.348" endtime="20201030 10:59:00.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.322" endtime="20201030 10:59:00.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.320" endtime="20201030 10:59:00.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.357" endtime="20201030 10:59:00.643"></status>
</kw>
<msg timestamp="20201030 10:59:00.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020268736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:00.355" endtime="20201030 10:59:00.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020268736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:00.647" endtime="20201030 10:59:00.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.655" endtime="20201030 10:59:00.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.353" endtime="20201030 10:59:00.657"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.351" endtime="20201030 10:59:00.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:00.662" level="INFO">${RESULT} = [{'diff': 6.229199999999852e-05}, {'diff': 6.263800000000028e-05}, {'diff': 6.261100000000061e-05}, {'diff': 6.241700000000211e-05}, {'diff': 6.291699999999914e-05}, {'diff': 6.226399999999938e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:00.659" endtime="20201030 10:59:00.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:00.666" level="INFO">${ACCURACY} = {'diff': [6.229199999999852e-05, 6.263800000000028e-05, 6.261100000000061e-05, 6.241700000000211e-05, 6.291699999999914e-05, 6.226399999999938e-05, 6.291699999999914e-05, 6.291699999999914e-05, 6.2555...</msg>
<status status="PASS" starttime="20201030 10:59:00.663" endtime="20201030 10:59:00.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.670" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 10:59:00.669" endtime="20201030 10:59:00.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.673" level="INFO">VALUE: [6.229199999999852e-05, 6.263800000000028e-05, 6.261100000000061e-05, 6.241700000000211e-05, 6.291699999999914e-05, 6.226399999999938e-05, 6.291699999999914e-05, 6.291699999999914e-05, 6.255599999999834e-05, 6.290299999999957e-05, 6.326400000000038e-05, 6.229099999999904e-05, 6.2582999999998e-05, 6.247200000000092e-05, 6.258300000000147e-05, 6.286100000000086e-05, 6.240299999999907e-05, 6.263899999999975e-05, 6.280600000000205e-05, 6.257000000000137e-05, 6.272200000000117e-05, 6.270799999999813e-05, 6.297300000000089e-05, 6.311200000000058e-05, 6.32630000000009e-05, 6.305499999999936e-05, 6.313900000000025e-05, 6.23889999999995e-05, 6.237499999999993e-05, 6.304199999999927e-05, 6.268099999999846e-05, 6.316699999999939e-05, 6.276399999999988e-05, 6.259700000000104e-05, 6.259700000000104e-05, 6.309800000000101e-05, 6.262500000000018e-05, 6.234800000000026e-05, 6.28340000000012e-05, 6.229099999999904e-05, 6.272200000000117e-05, 6.273600000000074e-05, 6.319399999999906e-05, 6.227699999999947e-05, 6.272200000000117e-05, 6.301400000000013e-05, 6.294400000000228e-05, 6.293100000000218e-05, 6.256899999999843e-05, 6.262500000000018e-05]</msg>
<status status="PASS" starttime="20201030 10:59:00.671" endtime="20201030 10:59:00.674"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.667" endtime="20201030 10:59:00.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:00.679" endtime="20201030 10:59:00.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.677" endtime="20201030 10:59:00.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.676" endtime="20201030 10:59:00.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.319" endtime="20201030 10:59:00.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.318" endtime="20201030 10:59:00.699"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.708" endtime="20201030 10:59:00.725"></status>
</kw>
<msg timestamp="20201030 10:59:00.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:00.706" endtime="20201030 10:59:00.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:00.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:00.726" endtime="20201030 10:59:00.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.729" endtime="20201030 10:59:00.730"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.704" endtime="20201030 10:59:00.731"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.702" endtime="20201030 10:59:00.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:00.738" endtime="20201030 10:59:01.023"></status>
</kw>
<msg timestamp="20201030 10:59:01.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019341347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019405625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:00.736" endtime="20201030 10:59:01.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019341347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019405625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:01.028" endtime="20201030 10:59:01.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.036" endtime="20201030 10:59:01.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.734" endtime="20201030 10:59:01.038"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.732" endtime="20201030 10:59:01.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:01.042" level="INFO">${RESULT} = [{'diff': 6.427800000000095e-05}, {'diff': 6.351400000000063e-05}, {'diff': 6.336100000000136e-05}, {'diff': 6.413899999999778e-05}, {'diff': 6.411099999999864e-05}, {'diff': 6.365300000000032e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:01.039" endtime="20201030 10:59:01.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:01.047" level="INFO">${ACCURACY} = {'diff': [6.427800000000095e-05, 6.351400000000063e-05, 6.336100000000136e-05, 6.413899999999778e-05, 6.411099999999864e-05, 6.365300000000032e-05, 6.398599999999852e-05, 6.370799999999913e-05, 6.3721...</msg>
<status status="PASS" starttime="20201030 10:59:01.043" endtime="20201030 10:59:01.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.052" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 10:59:01.051" endtime="20201030 10:59:01.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.054" level="INFO">VALUE: [6.427800000000095e-05, 6.351400000000063e-05, 6.336100000000136e-05, 6.413899999999778e-05, 6.411099999999864e-05, 6.365300000000032e-05, 6.398599999999852e-05, 6.370799999999913e-05, 6.37219999999987e-05, 6.351400000000063e-05, 6.394499999999928e-05, 6.384700000000229e-05, 6.40699999999994e-05, 6.355599999999934e-05, 6.380599999999959e-05, 6.345900000000182e-05, 6.358400000000194e-05, 6.37500000000013e-05, 6.338800000000103e-05, 6.34020000000006e-05, 6.393000000000024e-05, 6.356899999999943e-05, 6.331899999999918e-05, 6.422200000000267e-05, 6.340300000000007e-05, 6.340300000000007e-05, 6.411100000000211e-05, 6.379200000000002e-05, 6.372200000000217e-05, 6.398600000000199e-05, 6.336100000000136e-05, 6.373599999999827e-05, 6.388800000000153e-05, 6.422299999999867e-05, 6.376400000000088e-05, 6.342999999999974e-05, 6.405500000000036e-05, 6.384700000000229e-05, 6.351400000000063e-05, 6.379200000000002e-05, 6.359800000000151e-05, 6.333299999999875e-05, 6.358399999999848e-05, 6.390300000000057e-05, 6.366699999999989e-05, 6.329200000000298e-05, 6.35699999999989e-05, 6.361100000000161e-05, 6.408399999999898e-05, 6.37219999999987e-05]</msg>
<status status="PASS" starttime="20201030 10:59:01.053" endtime="20201030 10:59:01.055"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.048" endtime="20201030 10:59:01.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:01.059" endtime="20201030 10:59:01.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.058" endtime="20201030 10:59:01.079"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.056" endtime="20201030 10:59:01.079"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.700" endtime="20201030 10:59:01.080"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:00.700" endtime="20201030 10:59:01.080"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.088" endtime="20201030 10:59:01.106"></status>
</kw>
<msg timestamp="20201030 10:59:01.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:01.087" endtime="20201030 10:59:01.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:01.107" endtime="20201030 10:59:01.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.110" endtime="20201030 10:59:01.111"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.084" endtime="20201030 10:59:01.112"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.082" endtime="20201030 10:59:01.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.119" endtime="20201030 10:59:01.405"></status>
</kw>
<msg timestamp="20201030 10:59:01.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019332889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019397958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:01.117" endtime="20201030 10:59:01.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019332889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019397958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:01.409" endtime="20201030 10:59:01.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.418" endtime="20201030 10:59:01.419"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.115" endtime="20201030 10:59:01.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.113" endtime="20201030 10:59:01.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:01.424" level="INFO">${RESULT} = [{'diff': 6.506900000000093e-05}, {'diff': 6.506899999999746e-05}, {'diff': 6.470800000000013e-05}, {'diff': 6.487499999999896e-05}, {'diff': 6.515299999999835e-05}, {'diff': 6.523599999999977e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:01.421" endtime="20201030 10:59:01.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:01.428" level="INFO">${ACCURACY} = {'diff': [6.506900000000093e-05, 6.506899999999746e-05, 6.470800000000013e-05, 6.487499999999896e-05, 6.515299999999835e-05, 6.523599999999977e-05, 6.501400000000213e-05, 6.443100000000021e-05, 6.5013...</msg>
<status status="PASS" starttime="20201030 10:59:01.425" endtime="20201030 10:59:01.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.432" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 10:59:01.431" endtime="20201030 10:59:01.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.435" level="INFO">VALUE: [6.506900000000093e-05, 6.506899999999746e-05, 6.470800000000013e-05, 6.487499999999896e-05, 6.515299999999835e-05, 6.523599999999977e-05, 6.501400000000213e-05, 6.443100000000021e-05, 6.501399999999866e-05, 6.445900000000282e-05, 6.452699999999825e-05, 6.500000000000256e-05, 6.50700000000004e-05, 6.518100000000096e-05, 6.450000000000206e-05, 6.499999999999909e-05, 6.445899999999935e-05, 6.449999999999859e-05, 6.477800000000145e-05, 6.52220000000002e-05, 6.44440000000003e-05, 6.497199999999995e-05, 6.437500000000193e-05, 6.429200000000052e-05, 6.488799999999906e-05, 6.427800000000095e-05, 6.48479999999993e-05, 6.443000000000074e-05, 6.441700000000064e-05, 6.449999999999859e-05, 6.487499999999896e-05, 6.443000000000074e-05, 6.513900000000225e-05, 6.47219999999997e-05, 6.498599999999952e-05, 6.444499999999978e-05, 6.52220000000002e-05, 6.461099999999914e-05, 6.47089999999996e-05, 6.430600000000009e-05, 6.486100000000286e-05, 6.486099999999939e-05, 6.470800000000013e-05, 6.459699999999957e-05, 6.461099999999914e-05, 6.433299999999975e-05, 6.49159999999982e-05, 6.477800000000145e-05, 6.52220000000002e-05, 6.455600000000034e-05]</msg>
<status status="PASS" starttime="20201030 10:59:01.434" endtime="20201030 10:59:01.436"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.429" endtime="20201030 10:59:01.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:01.440" endtime="20201030 10:59:01.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.438" endtime="20201030 10:59:01.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.437" endtime="20201030 10:59:01.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.081" endtime="20201030 10:59:01.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.080" endtime="20201030 10:59:01.461"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.469" endtime="20201030 10:59:01.487"></status>
</kw>
<msg timestamp="20201030 10:59:01.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:01.468" endtime="20201030 10:59:01.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:01.489" endtime="20201030 10:59:01.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.491" endtime="20201030 10:59:01.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.465" endtime="20201030 10:59:01.493"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.463" endtime="20201030 10:59:01.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.500" endtime="20201030 10:59:01.787"></status>
</kw>
<msg timestamp="20201030 10:59:01.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020718861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020785083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:01.499" endtime="20201030 10:59:01.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020718861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020785083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:01.791" endtime="20201030 10:59:01.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.799" endtime="20201030 10:59:01.801"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.496" endtime="20201030 10:59:01.801"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.495" endtime="20201030 10:59:01.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:01.805" level="INFO">${RESULT} = [{'diff': 6.622199999999773e-05}, {'diff': 6.545800000000088e-05}, {'diff': 6.606900000000193e-05}, {'diff': 6.569400000000156e-05}, {'diff': 6.586100000000039e-05}, {'diff': 6.565299999999885e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:01.802" endtime="20201030 10:59:01.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:01.810" level="INFO">${ACCURACY} = {'diff': [6.622199999999773e-05, 6.545800000000088e-05, 6.606900000000193e-05, 6.569400000000156e-05, 6.586100000000039e-05, 6.565299999999885e-05, 6.602799999999923e-05, 6.620800000000163e-05, 6.5431...</msg>
<status status="PASS" starttime="20201030 10:59:01.807" endtime="20201030 10:59:01.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.814" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 10:59:01.813" endtime="20201030 10:59:01.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.817" level="INFO">VALUE: [6.622199999999773e-05, 6.545800000000088e-05, 6.606900000000193e-05, 6.569400000000156e-05, 6.586100000000039e-05, 6.565299999999885e-05, 6.602799999999923e-05, 6.620800000000163e-05, 6.543100000000121e-05, 6.598599999999705e-05, 6.543100000000121e-05, 6.625000000000034e-05, 6.59029999999991e-05, 6.60830000000015e-05, 6.545800000000088e-05, 6.57639999999994e-05, 6.605499999999889e-05, 6.554099999999882e-05, 6.60830000000015e-05, 6.556899999999796e-05, 6.618100000000196e-05, 6.606899999999846e-05, 6.547200000000045e-05, 6.547200000000045e-05, 6.595900000000085e-05, 6.57090000000006e-05, 6.60839999999975e-05, 6.527799999999848e-05, 6.522299999999967e-05, 6.566599999999895e-05, 6.570799999999766e-05, 6.543000000000174e-05, 6.581899999999821e-05, 6.527799999999848e-05, 6.556900000000143e-05, 6.588899999999953e-05, 6.561100000000014e-05, 6.593100000000171e-05, 6.606999999999794e-05, 6.583300000000125e-05, 6.55280000000022e-05, 6.616699999999892e-05, 6.570800000000113e-05, 6.552699999999925e-05, 6.54440000000013e-05, 6.592999999999877e-05, 6.586100000000039e-05, 6.573600000000027e-05, 6.57220000000007e-05, 6.611100000000064e-05]</msg>
<status status="PASS" starttime="20201030 10:59:01.815" endtime="20201030 10:59:01.819"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.810" endtime="20201030 10:59:01.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:01.825" endtime="20201030 10:59:01.846"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.823" endtime="20201030 10:59:01.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.821" endtime="20201030 10:59:01.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.461" endtime="20201030 10:59:01.848"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.461" endtime="20201030 10:59:01.848"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.861" endtime="20201030 10:59:01.880"></status>
</kw>
<msg timestamp="20201030 10:59:01.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:01.859" endtime="20201030 10:59:01.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:01.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:01.882" endtime="20201030 10:59:01.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.885" endtime="20201030 10:59:01.887"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.856" endtime="20201030 10:59:01.887"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.852" endtime="20201030 10:59:01.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:01.894" endtime="20201030 10:59:02.178"></status>
</kw>
<msg timestamp="20201030 10:59:02.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026715111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026781931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:01.892" endtime="20201030 10:59:02.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026715111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026781931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:02.182" endtime="20201030 10:59:02.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.190" endtime="20201030 10:59:02.192"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.890" endtime="20201030 10:59:02.192"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.888" endtime="20201030 10:59:02.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:02.197" level="INFO">${RESULT} = [{'diff': 6.681999999999869e-05}, {'diff': 6.636100000000089e-05}, {'diff': 6.674999999999737e-05}, {'diff': 6.716600000000045e-05}, {'diff': 6.701400000000066e-05}, {'diff': 6.672199999999823e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:02.193" endtime="20201030 10:59:02.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:02.202" level="INFO">${ACCURACY} = {'diff': [6.681999999999869e-05, 6.636100000000089e-05, 6.674999999999737e-05, 6.716600000000045e-05, 6.701400000000066e-05, 6.672199999999823e-05, 6.665299999999985e-05, 6.722199999999873e-05, 6.6666...</msg>
<status status="PASS" starttime="20201030 10:59:02.198" endtime="20201030 10:59:02.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.206" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 10:59:02.205" endtime="20201030 10:59:02.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.209" level="INFO">VALUE: [6.681999999999869e-05, 6.636100000000089e-05, 6.674999999999737e-05, 6.716600000000045e-05, 6.701400000000066e-05, 6.672199999999823e-05, 6.665299999999985e-05, 6.722199999999873e-05, 6.666699999999942e-05, 6.706999999999894e-05, 6.662500000000071e-05, 6.695900000000185e-05, 6.72229999999982e-05, 6.687500000000096e-05, 6.634699999999785e-05, 6.716699999999992e-05, 6.715200000000088e-05, 6.686100000000139e-05, 6.661100000000114e-05, 6.634700000000132e-05, 6.70969999999986e-05, 6.668099999999899e-05, 6.712500000000121e-05, 6.663799999999734e-05, 6.647199999999798e-05, 6.670899999999813e-05, 6.631900000000218e-05, 6.68480000000013e-05, 6.718000000000002e-05, 6.642999999999927e-05, 6.713800000000131e-05, 6.72640000000009e-05, 6.631900000000218e-05, 6.674999999999737e-05, 6.65280000000032e-05, 6.663900000000028e-05, 6.661099999999767e-05, 6.669499999999856e-05, 6.715300000000035e-05, 6.684699999999835e-05, 6.698600000000152e-05, 6.649999999999712e-05, 6.670799999999866e-05, 6.700000000000109e-05, 6.67220000000017e-05, 6.663900000000028e-05, 6.663900000000028e-05, 6.659700000000157e-05, 6.679199999999955e-05, 6.650000000000059e-05]</msg>
<status status="PASS" starttime="20201030 10:59:02.207" endtime="20201030 10:59:02.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.203" endtime="20201030 10:59:02.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:02.213" endtime="20201030 10:59:02.233"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.212" endtime="20201030 10:59:02.233"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.211" endtime="20201030 10:59:02.234"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.849" endtime="20201030 10:59:02.234"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:01.849" endtime="20201030 10:59:02.234"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.243" endtime="20201030 10:59:02.261"></status>
</kw>
<msg timestamp="20201030 10:59:02.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:02.241" endtime="20201030 10:59:02.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:02.262" endtime="20201030 10:59:02.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.265" endtime="20201030 10:59:02.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.239" endtime="20201030 10:59:02.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.237" endtime="20201030 10:59:02.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.274" endtime="20201030 10:59:02.560"></status>
</kw>
<msg timestamp="20201030 10:59:02.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019344153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019412028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:02.272" endtime="20201030 10:59:02.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019344153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019412028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:02.564" endtime="20201030 10:59:02.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.573" endtime="20201030 10:59:02.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.270" endtime="20201030 10:59:02.575"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.268" endtime="20201030 10:59:02.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:02.579" level="INFO">${RESULT} = [{'diff': 6.787500000000196e-05}, {'diff': 6.765300000000085e-05}, {'diff': 6.794499999999981e-05}, {'diff': 6.7583999999999e-05}, {'diff': 6.759700000000257e-05}, {'diff': 6.779200000000055e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:02.576" endtime="20201030 10:59:02.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:02.583" level="INFO">${ACCURACY} = {'diff': [6.787500000000196e-05, 6.765300000000085e-05, 6.794499999999981e-05, 6.7583999999999e-05, 6.759700000000257e-05, 6.779200000000055e-05, 6.804199999999733e-05, 6.768099999999999e-05, 6.733299...</msg>
<status status="PASS" starttime="20201030 10:59:02.580" endtime="20201030 10:59:02.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.588" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 10:59:02.587" endtime="20201030 10:59:02.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.590" level="INFO">VALUE: [6.787500000000196e-05, 6.765300000000085e-05, 6.794499999999981e-05, 6.7583999999999e-05, 6.759700000000257e-05, 6.779200000000055e-05, 6.804199999999733e-05, 6.768099999999999e-05, 6.733299999999928e-05, 6.77909999999976e-05, 6.788899999999806e-05, 6.763899999999781e-05, 6.780499999999717e-05, 6.77359999999988e-05, 6.750000000000159e-05, 6.791700000000067e-05, 6.729200000000005e-05, 6.805600000000037e-05, 6.818100000000049e-05, 6.730500000000014e-05, 6.736100000000189e-05, 6.748699999999802e-05, 6.795799999999991e-05, 6.790200000000163e-05, 6.77909999999976e-05, 6.784699999999935e-05, 6.763900000000128e-05, 6.815299999999788e-05, 6.794499999999981e-05, 6.727800000000048e-05, 6.751400000000116e-05, 6.743099999999974e-05, 6.774999999999837e-05, 6.751399999999769e-05, 6.762500000000171e-05, 6.745800000000288e-05, 6.808300000000003e-05, 6.784700000000282e-05, 6.744399999999984e-05, 6.77359999999988e-05, 6.818100000000049e-05, 6.736099999999842e-05, 6.779200000000055e-05, 6.736099999999842e-05, 6.776399999999794e-05, 6.822199999999973e-05, 6.75700000000029e-05, 6.794499999999981e-05, 6.7583999999999e-05, 6.748599999999855e-05]</msg>
<status status="PASS" starttime="20201030 10:59:02.589" endtime="20201030 10:59:02.591"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.584" endtime="20201030 10:59:02.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:02.595" endtime="20201030 10:59:02.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.594" endtime="20201030 10:59:02.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.592" endtime="20201030 10:59:02.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.235" endtime="20201030 10:59:02.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.234" endtime="20201030 10:59:02.616"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.624" endtime="20201030 10:59:02.646"></status>
</kw>
<msg timestamp="20201030 10:59:02.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:02.623" endtime="20201030 10:59:02.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:02.647" endtime="20201030 10:59:02.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.650" endtime="20201030 10:59:02.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.620" endtime="20201030 10:59:02.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.618" endtime="20201030 10:59:02.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.659" endtime="20201030 10:59:02.944"></status>
</kw>
<msg timestamp="20201030 10:59:02.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022700222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:02.657" endtime="20201030 10:59:02.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022700222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:02.948" endtime="20201030 10:59:02.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:02.957" endtime="20201030 10:59:02.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.655" endtime="20201030 10:59:02.959"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.653" endtime="20201030 10:59:02.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:02.963" level="INFO">${RESULT} = [{'diff': 6.884700000000035e-05}, {'diff': 6.918000000000202e-05}, {'diff': 6.89299999999983e-05}, {'diff': 6.917999999999855e-05}, {'diff': 6.895800000000091e-05}, {'diff': 6.895800000000091e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:02.960" endtime="20201030 10:59:02.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:02.967" level="INFO">${ACCURACY} = {'diff': [6.884700000000035e-05, 6.918000000000202e-05, 6.89299999999983e-05, 6.917999999999855e-05, 6.895800000000091e-05, 6.895800000000091e-05, 6.879200000000155e-05, 6.899999999999962e-05, 6.91799...</msg>
<status status="PASS" starttime="20201030 10:59:02.964" endtime="20201030 10:59:02.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.971" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 10:59:02.970" endtime="20201030 10:59:02.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:02.974" level="INFO">VALUE: [6.884700000000035e-05, 6.918000000000202e-05, 6.89299999999983e-05, 6.917999999999855e-05, 6.895800000000091e-05, 6.895800000000091e-05, 6.879200000000155e-05, 6.899999999999962e-05, 6.917999999999855e-05, 6.869500000000056e-05, 6.909800000000008e-05, 6.855600000000087e-05, 6.844499999999684e-05, 6.917999999999855e-05, 6.845800000000041e-05, 6.849999999999912e-05, 6.894400000000134e-05, 6.922200000000073e-05, 6.866599999999848e-05, 6.922199999999726e-05, 6.831900000000071e-05, 6.904199999999833e-05, 6.891700000000167e-05, 6.897200000000048e-05, 6.850000000000259e-05, 6.918000000000202e-05, 6.869500000000056e-05, 6.863899999999881e-05, 6.897200000000048e-05, 6.874999999999937e-05, 6.872200000000023e-05, 6.888900000000253e-05, 6.844500000000031e-05, 6.844400000000084e-05, 6.872200000000023e-05, 6.854199999999783e-05, 6.877799999999851e-05, 6.869399999999762e-05, 6.92360000000003e-05, 6.882000000000069e-05, 6.912499999999974e-05, 6.841599999999823e-05, 6.859799999999958e-05, 6.893000000000177e-05, 6.830499999999767e-05, 6.913900000000278e-05, 6.888899999999906e-05, 6.90420000000018e-05, 6.849999999999912e-05, 6.863900000000228e-05]</msg>
<status status="PASS" starttime="20201030 10:59:02.972" endtime="20201030 10:59:02.975"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.968" endtime="20201030 10:59:02.976"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:02.979" endtime="20201030 10:59:02.999"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.978" endtime="20201030 10:59:03.000"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.977" endtime="20201030 10:59:03.000"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.617" endtime="20201030 10:59:03.000"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:02.616" endtime="20201030 10:59:03.000"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.009" endtime="20201030 10:59:03.027"></status>
</kw>
<msg timestamp="20201030 10:59:03.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:03.007" endtime="20201030 10:59:03.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:03.028" endtime="20201030 10:59:03.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.031" endtime="20201030 10:59:03.032"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.005" endtime="20201030 10:59:03.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.003" endtime="20201030 10:59:03.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.040" endtime="20201030 10:59:03.326"></status>
</kw>
<msg timestamp="20201030 10:59:03.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019433181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019503125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:03.038" endtime="20201030 10:59:03.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019433181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019503125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:03.330" endtime="20201030 10:59:03.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.338" endtime="20201030 10:59:03.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.036" endtime="20201030 10:59:03.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.034" endtime="20201030 10:59:03.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:03.345" level="INFO">${RESULT} = [{'diff': 6.994399999999887e-05}, {'diff': 6.955499999999892e-05}, {'diff': 6.956999999999797e-05}, {'diff': 7.016700000000292e-05}, {'diff': 6.980499999999917e-05}, {'diff': 6.958300000000153e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:03.341" endtime="20201030 10:59:03.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:03.350" level="INFO">${ACCURACY} = {'diff': [6.994399999999887e-05, 6.955499999999892e-05, 6.956999999999797e-05, 7.016700000000292e-05, 6.980499999999917e-05, 6.958300000000153e-05, 6.936099999999695e-05, 6.983400000000126e-05, 6.9597...</msg>
<status status="PASS" starttime="20201030 10:59:03.346" endtime="20201030 10:59:03.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.354" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 10:59:03.353" endtime="20201030 10:59:03.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.357" level="INFO">VALUE: [6.994399999999887e-05, 6.955499999999892e-05, 6.956999999999797e-05, 7.016700000000292e-05, 6.980499999999917e-05, 6.958300000000153e-05, 6.936099999999695e-05, 6.983400000000126e-05, 6.95970000000011e-05, 6.947199999999751e-05, 6.987500000000049e-05, 7.027800000000001e-05, 6.954099999999935e-05, 7.02360000000013e-05, 6.976399999999994e-05, 6.972200000000123e-05, 7.025000000000087e-05, 6.972200000000123e-05, 7.023599999999783e-05, 6.929199999999858e-05, 6.923700000000324e-05, 6.927799999999901e-05, 6.938899999999956e-05, 6.987500000000049e-05, 6.980499999999917e-05, 7.00970000000016e-05, 6.986100000000092e-05, 6.966699999999895e-05, 7.012499999999727e-05, 6.997200000000148e-05, 6.966699999999895e-05, 6.976399999999994e-05, 6.948600000000055e-05, 6.983400000000126e-05, 7.008399999999804e-05, 6.956900000000196e-05, 6.945799999999794e-05, 6.963800000000034e-05, 6.958299999999806e-05, 6.966599999999948e-05, 6.967999999999905e-05, 6.997200000000148e-05, 6.943100000000174e-05, 6.966699999999895e-05, 7.025000000000087e-05, 6.950000000000012e-05, 6.930599999999815e-05, 6.9584000000001e-05, 6.968100000000199e-05, 7.013900000000031e-05]</msg>
<status status="PASS" starttime="20201030 10:59:03.355" endtime="20201030 10:59:03.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.351" endtime="20201030 10:59:03.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:03.361" endtime="20201030 10:59:03.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.360" endtime="20201030 10:59:03.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.359" endtime="20201030 10:59:03.382"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.001" endtime="20201030 10:59:03.382"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.001" endtime="20201030 10:59:03.382"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.391" endtime="20201030 10:59:03.408"></status>
</kw>
<msg timestamp="20201030 10:59:03.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:03.389" endtime="20201030 10:59:03.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:03.410" endtime="20201030 10:59:03.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.412" endtime="20201030 10:59:03.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.387" endtime="20201030 10:59:03.414"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.385" endtime="20201030 10:59:03.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.421" endtime="20201030 10:59:03.708"></status>
</kw>
<msg timestamp="20201030 10:59:03.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019370861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019441958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:03.420" endtime="20201030 10:59:03.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019370861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019441958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:03.712" endtime="20201030 10:59:03.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.721" endtime="20201030 10:59:03.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.417" endtime="20201030 10:59:03.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.415" endtime="20201030 10:59:03.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:03.727" level="INFO">${RESULT} = [{'diff': 7.109699999999913e-05}, {'diff': 7.113900000000131e-05}, {'diff': 7.066699999999995e-05}, {'diff': 7.027800000000001e-05}, {'diff': 7.108399999999904e-05}, {'diff': 7.088900000000106e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:03.724" endtime="20201030 10:59:03.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:03.731" level="INFO">${ACCURACY} = {'diff': [7.109699999999913e-05, 7.113900000000131e-05, 7.066699999999995e-05, 7.027800000000001e-05, 7.108399999999904e-05, 7.088900000000106e-05, 7.058300000000253e-05, 7.044500000000231e-05, 7.1110...</msg>
<status status="PASS" starttime="20201030 10:59:03.728" endtime="20201030 10:59:03.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.735" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 10:59:03.734" endtime="20201030 10:59:03.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.738" level="INFO">VALUE: [7.109699999999913e-05, 7.113900000000131e-05, 7.066699999999995e-05, 7.027800000000001e-05, 7.108399999999904e-05, 7.088900000000106e-05, 7.058300000000253e-05, 7.044500000000231e-05, 7.11109999999987e-05, 7.119400000000012e-05, 7.077800000000051e-05, 7.100000000000162e-05, 7.122200000000273e-05, 7.056900000000296e-05, 7.034700000000185e-05, 7.05420000000033e-05, 7.038899999999709e-05, 7.097199999999901e-05, 7.10979999999986e-05, 7.111100000000217e-05, 7.034699999999838e-05, 7.05689999999995e-05, 7.122199999999926e-05, 7.083299999999931e-05, 7.036100000000142e-05, 7.027800000000001e-05, 7.105600000000337e-05, 7.05559999999994e-05, 7.097200000000248e-05, 7.088899999999759e-05, 7.101400000000119e-05, 7.09170000000002e-05, 7.07360000000018e-05, 7.026400000000044e-05, 7.047199999999851e-05, 7.031899999999924e-05, 7.116599999999751e-05, 7.040200000000066e-05, 7.1069e-05, 7.038900000000056e-05, 7.063899999999734e-05, 7.05559999999994e-05, 7.127800000000101e-05, 7.120899999999916e-05, 7.038900000000056e-05, 7.093099999999977e-05, 7.073599999999833e-05, 7.094499999999934e-05, 7.073599999999833e-05, 7.065200000000091e-05]</msg>
<status status="PASS" starttime="20201030 10:59:03.736" endtime="20201030 10:59:03.739"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.732" endtime="20201030 10:59:03.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:03.743" endtime="20201030 10:59:03.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.741" endtime="20201030 10:59:03.763"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.740" endtime="20201030 10:59:03.763"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.383" endtime="20201030 10:59:03.763"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.382" endtime="20201030 10:59:03.763"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.772" endtime="20201030 10:59:03.790"></status>
</kw>
<msg timestamp="20201030 10:59:03.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:03.771" endtime="20201030 10:59:03.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:03.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:03.792" endtime="20201030 10:59:03.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.794" endtime="20201030 10:59:03.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.768" endtime="20201030 10:59:03.796"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.766" endtime="20201030 10:59:03.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:03.803" endtime="20201030 10:59:04.089"></status>
</kw>
<msg timestamp="20201030 10:59:04.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02100225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021073625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:03.802" endtime="20201030 10:59:04.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02100225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021073625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:04.093" endtime="20201030 10:59:04.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.101" endtime="20201030 10:59:04.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.799" endtime="20201030 10:59:04.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.797" endtime="20201030 10:59:04.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:04.108" level="INFO">${RESULT} = [{'diff': 7.137499999999852e-05}, {'diff': 7.183399999999979e-05}, {'diff': 7.19170000000012e-05}, {'diff': 7.213900000000231e-05}, {'diff': 7.166700000000095e-05}, {'diff': 7.126400000000144e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:04.104" endtime="20201030 10:59:04.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:04.112" level="INFO">${ACCURACY} = {'diff': [7.137499999999852e-05, 7.183399999999979e-05, 7.19170000000012e-05, 7.213900000000231e-05, 7.166700000000095e-05, 7.126400000000144e-05, 7.145799999999994e-05, 7.227800000000201e-05, 7.21390...</msg>
<status status="PASS" starttime="20201030 10:59:04.109" endtime="20201030 10:59:04.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.116" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 10:59:04.115" endtime="20201030 10:59:04.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.118" level="INFO">VALUE: [7.137499999999852e-05, 7.183399999999979e-05, 7.19170000000012e-05, 7.213900000000231e-05, 7.166700000000095e-05, 7.126400000000144e-05, 7.145799999999994e-05, 7.227800000000201e-05, 7.213900000000231e-05, 7.16109999999992e-05, 7.19170000000012e-05, 7.181899999999727e-05, 7.176399999999847e-05, 7.14300000000008e-05, 7.215299999999841e-05, 7.175000000000237e-05, 7.198599999999958e-05, 7.179200000000108e-05, 7.199999999999915e-05, 7.173599999999933e-05, 7.165300000000138e-05, 7.183300000000031e-05, 7.156899999999702e-05, 7.197200000000001e-05, 7.155500000000092e-05, 7.22499999999994e-05, 7.14170000000007e-05, 7.144400000000037e-05, 7.202799999999829e-05, 7.156999999999997e-05, 7.176399999999847e-05, 7.205599999999743e-05, 7.218099999999755e-05, 7.215299999999841e-05, 7.22629999999995e-05, 7.213900000000231e-05, 7.166600000000148e-05, 7.150000000000212e-05, 7.126400000000144e-05, 7.158300000000006e-05, 7.20560000000009e-05, 7.172199999999976e-05, 7.162499999999877e-05, 7.22499999999994e-05, 7.197200000000001e-05, 7.208400000000004e-05, 7.136099999999895e-05, 7.177800000000151e-05, 7.158300000000006e-05, 7.166700000000095e-05]</msg>
<status status="PASS" starttime="20201030 10:59:04.117" endtime="20201030 10:59:04.120"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.112" endtime="20201030 10:59:04.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:04.124" endtime="20201030 10:59:04.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.123" endtime="20201030 10:59:04.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.122" endtime="20201030 10:59:04.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.764" endtime="20201030 10:59:04.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:03.764" endtime="20201030 10:59:04.145"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.154" endtime="20201030 10:59:04.171"></status>
</kw>
<msg timestamp="20201030 10:59:04.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:04.152" endtime="20201030 10:59:04.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:04.173" endtime="20201030 10:59:04.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.175" endtime="20201030 10:59:04.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.150" endtime="20201030 10:59:04.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.147" endtime="20201030 10:59:04.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.184" endtime="20201030 10:59:04.470"></status>
</kw>
<msg timestamp="20201030 10:59:04.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020329931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020403028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:04.183" endtime="20201030 10:59:04.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020329931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020403028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:04.474" endtime="20201030 10:59:04.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.482" endtime="20201030 10:59:04.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.180" endtime="20201030 10:59:04.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.178" endtime="20201030 10:59:04.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:04.489" level="INFO">${RESULT} = [{'diff': 7.309700000000113e-05}, {'diff': 7.30560000000019e-05}, {'diff': 7.269500000000109e-05}, {'diff': 7.299999999999668e-05}, {'diff': 7.227799999999854e-05}, {'diff': 7.251299999999974e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:04.485" endtime="20201030 10:59:04.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:04.493" level="INFO">${ACCURACY} = {'diff': [7.309700000000113e-05, 7.30560000000019e-05, 7.269500000000109e-05, 7.299999999999668e-05, 7.227799999999854e-05, 7.251299999999974e-05, 7.298700000000005e-05, 7.272200000000076e-05, 7.29029...</msg>
<status status="PASS" starttime="20201030 10:59:04.490" endtime="20201030 10:59:04.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.498" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 10:59:04.497" endtime="20201030 10:59:04.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.501" level="INFO">VALUE: [7.309700000000113e-05, 7.30560000000019e-05, 7.269500000000109e-05, 7.299999999999668e-05, 7.227799999999854e-05, 7.251299999999974e-05, 7.298700000000005e-05, 7.272200000000076e-05, 7.290299999999916e-05, 7.30829999999981e-05, 7.249999999999965e-05, 7.226399999999897e-05, 7.313899999999984e-05, 7.245800000000094e-05, 7.322200000000126e-05, 7.307000000000147e-05, 7.290199999999969e-05, 7.237499999999952e-05, 7.309800000000061e-05, 7.30560000000019e-05, 7.304099999999938e-05, 7.259700000000063e-05, 7.284700000000088e-05, 7.286100000000045e-05, 7.254199999999836e-05, 7.290299999999916e-05, 7.302799999999929e-05, 7.326399999999997e-05, 7.243100000000127e-05, 7.3069999999998e-05, 7.284800000000036e-05, 7.234799999999986e-05, 7.298700000000005e-05, 7.241599999999876e-05, 7.277699999999956e-05, 7.249999999999965e-05, 7.269400000000162e-05, 7.315299999999941e-05, 7.316699999999898e-05, 7.265300000000238e-05, 7.272200000000076e-05, 7.290299999999916e-05, 7.244500000000084e-05, 7.288899999999959e-05, 7.306899999999852e-05, 7.3069999999998e-05, 7.27499999999999e-05, 7.270799999999772e-05, 7.273599999999686e-05, 7.292999999999883e-05]</msg>
<status status="PASS" starttime="20201030 10:59:04.499" endtime="20201030 10:59:04.501"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.494" endtime="20201030 10:59:04.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:04.505" endtime="20201030 10:59:04.525"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.504" endtime="20201030 10:59:04.525"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.503" endtime="20201030 10:59:04.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.146" endtime="20201030 10:59:04.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.145" endtime="20201030 10:59:04.526"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.535" endtime="20201030 10:59:04.552"></status>
</kw>
<msg timestamp="20201030 10:59:04.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:04.533" endtime="20201030 10:59:04.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:04.554" endtime="20201030 10:59:04.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.556" endtime="20201030 10:59:04.558"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.531" endtime="20201030 10:59:04.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.529" endtime="20201030 10:59:04.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.565" endtime="20201030 10:59:04.852"></status>
</kw>
<msg timestamp="20201030 10:59:04.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020029889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020103556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:04.564" endtime="20201030 10:59:04.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020029889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020103556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:04.856" endtime="20201030 10:59:04.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.864" endtime="20201030 10:59:04.866"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.561" endtime="20201030 10:59:04.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.560" endtime="20201030 10:59:04.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:04.871" level="INFO">${RESULT} = [{'diff': 7.366700000000295e-05}, {'diff': 7.388799999999765e-05}, {'diff': 7.376400000000047e-05}, {'diff': 7.35829999999986e-05}, {'diff': 7.334699999999791e-05}, {'diff': 7.377800000000004e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:04.868" endtime="20201030 10:59:04.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:04.875" level="INFO">${ACCURACY} = {'diff': [7.366700000000295e-05, 7.388799999999765e-05, 7.376400000000047e-05, 7.35829999999986e-05, 7.334699999999791e-05, 7.377800000000004e-05, 7.333299999999834e-05, 7.336100000000095e-05, 7.36390...</msg>
<status status="PASS" starttime="20201030 10:59:04.872" endtime="20201030 10:59:04.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.879" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 10:59:04.878" endtime="20201030 10:59:04.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.882" level="INFO">VALUE: [7.366700000000295e-05, 7.388799999999765e-05, 7.376400000000047e-05, 7.35829999999986e-05, 7.334699999999791e-05, 7.377800000000004e-05, 7.333299999999834e-05, 7.336100000000095e-05, 7.363900000000034e-05, 7.376400000000047e-05, 7.388900000000059e-05, 7.383400000000179e-05, 7.4069999999999e-05, 7.39309999999993e-05, 7.348599999999761e-05, 7.401299999999778e-05, 7.370799999999872e-05, 7.377800000000004e-05, 7.390300000000016e-05, 7.383300000000231e-05, 7.422200000000226e-05, 7.351400000000022e-05, 7.357000000000197e-05, 7.391699999999973e-05, 7.374999999999743e-05, 7.407000000000247e-05, 7.333399999999782e-05, 7.405599999999943e-05, 7.42500000000014e-05, 7.377800000000004e-05, 7.405499999999995e-05, 7.377800000000004e-05, 7.392999999999983e-05, 7.373600000000133e-05, 7.338900000000009e-05, 7.344499999999837e-05, 7.334700000000138e-05, 7.420899999999869e-05, 7.329199999999911e-05, 7.362500000000077e-05, 7.357000000000197e-05, 7.36249999999973e-05, 7.386100000000145e-05, 7.422200000000226e-05, 7.358300000000206e-05, 7.341699999999923e-05, 7.344499999999837e-05, 7.372200000000176e-05, 7.381999999999875e-05, 7.332000000000172e-05]</msg>
<status status="PASS" starttime="20201030 10:59:04.880" endtime="20201030 10:59:04.882"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.876" endtime="20201030 10:59:04.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:04.887" endtime="20201030 10:59:04.906"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.885" endtime="20201030 10:59:04.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.884" endtime="20201030 10:59:04.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.527" endtime="20201030 10:59:04.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.526" endtime="20201030 10:59:04.907"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.916" endtime="20201030 10:59:04.933"></status>
</kw>
<msg timestamp="20201030 10:59:04.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:04.914" endtime="20201030 10:59:04.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:04.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:04.935" endtime="20201030 10:59:04.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.938" endtime="20201030 10:59:04.939"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.912" endtime="20201030 10:59:04.940"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.910" endtime="20201030 10:59:04.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:04.946" endtime="20201030 10:59:05.231"></status>
</kw>
<msg timestamp="20201030 10:59:05.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020361417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020436653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:04.945" endtime="20201030 10:59:05.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020361417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020436653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:05.235" endtime="20201030 10:59:05.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.243" endtime="20201030 10:59:05.245"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.942" endtime="20201030 10:59:05.246"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.941" endtime="20201030 10:59:05.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:05.250" level="INFO">${RESULT} = [{'diff': 7.523599999999936e-05}, {'diff': 7.479200000000061e-05}, {'diff': 7.486200000000193e-05}, {'diff': 7.495799999999997e-05}, {'diff': 7.465300000000091e-05}, {'diff': 7.481900000000027e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:05.247" endtime="20201030 10:59:05.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:05.254" level="INFO">${ACCURACY} = {'diff': [7.523599999999936e-05, 7.479200000000061e-05, 7.486200000000193e-05, 7.495799999999997e-05, 7.465300000000091e-05, 7.481900000000027e-05, 7.4763999999998e-05, 7.473599999999886e-05, 7.506900...</msg>
<status status="PASS" starttime="20201030 10:59:05.251" endtime="20201030 10:59:05.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.259" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 10:59:05.258" endtime="20201030 10:59:05.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.261" level="INFO">VALUE: [7.523599999999936e-05, 7.479200000000061e-05, 7.486200000000193e-05, 7.495799999999997e-05, 7.465300000000091e-05, 7.481900000000027e-05, 7.4763999999998e-05, 7.473599999999886e-05, 7.506900000000052e-05, 7.484700000000288e-05, 7.456900000000002e-05, 7.513900000000184e-05, 7.437499999999805e-05, 7.462500000000177e-05, 7.448699999999808e-05, 7.50830000000001e-05, 7.447300000000198e-05, 7.42769999999976e-05, 7.462500000000177e-05, 7.49440000000004e-05, 7.491700000000073e-05, 7.52639999999985e-05, 7.444499999999937e-05, 7.440300000000066e-05, 7.500000000000215e-05, 7.479200000000061e-05, 7.520899999999969e-05, 7.474999999999843e-05, 7.46249999999983e-05, 7.426400000000097e-05, 7.472199999999929e-05, 7.49310000000003e-05, 7.450000000000165e-05, 7.486099999999898e-05, 7.472200000000276e-05, 7.468100000000005e-05, 7.513900000000184e-05, 7.441700000000023e-05, 7.501400000000172e-05, 7.524999999999893e-05, 7.509799999999914e-05, 7.462500000000177e-05, 7.466700000000048e-05, 7.434699999999891e-05, 7.456900000000002e-05, 7.522199999999979e-05, 7.472199999999929e-05, 7.438899999999762e-05, 7.495799999999997e-05, 7.50830000000001e-05]</msg>
<status status="PASS" starttime="20201030 10:59:05.260" endtime="20201030 10:59:05.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.255" endtime="20201030 10:59:05.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:05.267" endtime="20201030 10:59:05.286"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.265" endtime="20201030 10:59:05.287"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.264" endtime="20201030 10:59:05.287"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.908" endtime="20201030 10:59:05.287"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:04.908" endtime="20201030 10:59:05.287"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.296" endtime="20201030 10:59:05.314"></status>
</kw>
<msg timestamp="20201030 10:59:05.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:05.294" endtime="20201030 10:59:05.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:05.316" endtime="20201030 10:59:05.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.318" endtime="20201030 10:59:05.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.292" endtime="20201030 10:59:05.320"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.290" endtime="20201030 10:59:05.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.327" endtime="20201030 10:59:05.613"></status>
</kw>
<msg timestamp="20201030 10:59:05.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020309306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:05.326" endtime="20201030 10:59:05.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020309306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:05.617" endtime="20201030 10:59:05.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.625" endtime="20201030 10:59:05.627"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.323" endtime="20201030 10:59:05.628"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.321" endtime="20201030 10:59:05.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:05.632" level="INFO">${RESULT} = [{'diff': 7.623699999999983e-05}, {'diff': 7.548599999999961e-05}, {'diff': 7.609700000000066e-05}, {'diff': 7.555499999999798e-05}, {'diff': 7.56249999999993e-05}, {'diff': 7.586099999999998e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:05.629" endtime="20201030 10:59:05.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:05.637" level="INFO">${ACCURACY} = {'diff': [7.623699999999983e-05, 7.548599999999961e-05, 7.609700000000066e-05, 7.555499999999798e-05, 7.56249999999993e-05, 7.586099999999998e-05, 7.543000000000133e-05, 7.54310000000008e-05, 7.607000...</msg>
<status status="PASS" starttime="20201030 10:59:05.633" endtime="20201030 10:59:05.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.641" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 10:59:05.640" endtime="20201030 10:59:05.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.644" level="INFO">VALUE: [7.623699999999983e-05, 7.548599999999961e-05, 7.609700000000066e-05, 7.555499999999798e-05, 7.56249999999993e-05, 7.586099999999998e-05, 7.543000000000133e-05, 7.54310000000008e-05, 7.6070000000001e-05, 7.541699999999776e-05, 7.551399999999875e-05, 7.577800000000204e-05, 7.572299999999976e-05, 7.629200000000211e-05, 7.566599999999854e-05, 7.591599999999879e-05, 7.556900000000102e-05, 7.61249999999998e-05, 7.615300000000241e-05, 7.565300000000191e-05, 7.545800000000047e-05, 7.544500000000037e-05, 7.606999999999753e-05, 7.620900000000069e-05, 7.574999999999943e-05, 7.602800000000229e-05, 7.54310000000008e-05, 7.594399999999793e-05, 7.591599999999879e-05, 7.563900000000234e-05, 7.567999999999811e-05, 7.605599999999796e-05, 7.554200000000136e-05, 7.623699999999983e-05, 7.563899999999887e-05, 7.582000000000075e-05, 7.579199999999814e-05, 7.579199999999814e-05, 7.598600000000011e-05, 7.622200000000079e-05, 7.547200000000004e-05, 7.591600000000226e-05, 7.542999999999786e-05, 7.572200000000029e-05, 7.544399999999743e-05, 7.572200000000029e-05, 7.54310000000008e-05, 7.586099999999998e-05, 7.59310000000013e-05, 7.577800000000204e-05]</msg>
<status status="PASS" starttime="20201030 10:59:05.642" endtime="20201030 10:59:05.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.638" endtime="20201030 10:59:05.652"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:05.656" endtime="20201030 10:59:05.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.654" endtime="20201030 10:59:05.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.653" endtime="20201030 10:59:05.677"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.288" endtime="20201030 10:59:05.677"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.288" endtime="20201030 10:59:05.677"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.685" endtime="20201030 10:59:05.703"></status>
</kw>
<msg timestamp="20201030 10:59:05.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:05.684" endtime="20201030 10:59:05.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:05.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:05.704" endtime="20201030 10:59:05.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.707" endtime="20201030 10:59:05.708"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.681" endtime="20201030 10:59:05.709"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.679" endtime="20201030 10:59:05.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:05.715" endtime="20201030 10:59:06.002"></status>
</kw>
<msg timestamp="20201030 10:59:06.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019776875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:05.714" endtime="20201030 10:59:06.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019776875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:06.006" endtime="20201030 10:59:06.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.014" endtime="20201030 10:59:06.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.711" endtime="20201030 10:59:06.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.710" endtime="20201030 10:59:06.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:06.020" level="INFO">${RESULT} = [{'diff': 7.725000000000093e-05}, {'diff': 7.63189999999983e-05}, {'diff': 7.643099999999833e-05}, {'diff': 7.66250000000003e-05}, {'diff': 7.645800000000147e-05}, {'diff': 7.725000000000093e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:06.017" endtime="20201030 10:59:06.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:06.024" level="INFO">${ACCURACY} = {'diff': [7.725000000000093e-05, 7.63189999999983e-05, 7.643099999999833e-05, 7.66250000000003e-05, 7.645800000000147e-05, 7.725000000000093e-05, 7.634699999999744e-05, 7.673600000000086e-05, 7.686100...</msg>
<status status="PASS" starttime="20201030 10:59:06.021" endtime="20201030 10:59:06.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.029" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 10:59:06.028" endtime="20201030 10:59:06.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.031" level="INFO">VALUE: [7.725000000000093e-05, 7.63189999999983e-05, 7.643099999999833e-05, 7.66250000000003e-05, 7.645800000000147e-05, 7.725000000000093e-05, 7.634699999999744e-05, 7.673600000000086e-05, 7.686100000000098e-05, 7.644399999999843e-05, 7.652699999999985e-05, 7.705499999999949e-05, 7.641700000000223e-05, 7.683300000000184e-05, 7.69029999999997e-05, 7.67770000000001e-05, 7.650000000000018e-05, 7.715299999999994e-05, 7.702799999999982e-05, 7.672300000000076e-05, 7.694500000000187e-05, 7.691699999999926e-05, 7.693000000000283e-05, 7.70830000000021e-05, 7.680499999999923e-05, 7.663899999999987e-05, 7.688900000000012e-05, 7.64029999999992e-05, 7.633300000000134e-05, 7.630600000000168e-05, 7.641599999999929e-05, 7.636099999999701e-05, 7.677799999999957e-05, 7.630499999999873e-05, 7.69440000000024e-05, 7.697199999999807e-05, 7.670800000000172e-05, 7.651399999999975e-05, 7.656900000000202e-05, 7.679200000000261e-05, 7.722200000000179e-05, 7.709700000000166e-05, 7.634700000000091e-05, 7.691699999999926e-05, 7.669499999999815e-05, 7.663899999999987e-05, 7.697199999999807e-05, 7.670800000000172e-05, 7.688900000000012e-05, 7.701400000000025e-05]</msg>
<status status="PASS" starttime="20201030 10:59:06.030" endtime="20201030 10:59:06.032"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.025" endtime="20201030 10:59:06.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:06.036" endtime="20201030 10:59:06.056"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.035" endtime="20201030 10:59:06.056"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.033" endtime="20201030 10:59:06.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.678" endtime="20201030 10:59:06.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:05.677" endtime="20201030 10:59:06.057"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.065" endtime="20201030 10:59:06.088"></status>
</kw>
<msg timestamp="20201030 10:59:06.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:06.064" endtime="20201030 10:59:06.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:06.089" endtime="20201030 10:59:06.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.092" endtime="20201030 10:59:06.093"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.061" endtime="20201030 10:59:06.094"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.059" endtime="20201030 10:59:06.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.100" endtime="20201030 10:59:06.385"></status>
</kw>
<msg timestamp="20201030 10:59:06.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:06.099" endtime="20201030 10:59:06.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:06.389" endtime="20201030 10:59:06.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.397" endtime="20201030 10:59:06.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.096" endtime="20201030 10:59:06.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.095" endtime="20201030 10:59:06.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:06.403" level="INFO">${RESULT} = [{'diff': 7.804200000000039e-05}, {'diff': 7.756999999999903e-05}, {'diff': 7.76389999999974e-05}, {'diff': 7.815300000000094e-05}, {'diff': 7.809799999999867e-05}, {'diff': 7.781999999999928e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:06.400" endtime="20201030 10:59:06.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:06.408" level="INFO">${ACCURACY} = {'diff': [7.804200000000039e-05, 7.756999999999903e-05, 7.76389999999974e-05, 7.815300000000094e-05, 7.809799999999867e-05, 7.781999999999928e-05, 7.815300000000094e-05, 7.75830000000026e-05, 7.815300...</msg>
<status status="PASS" starttime="20201030 10:59:06.404" endtime="20201030 10:59:06.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.412" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 10:59:06.411" endtime="20201030 10:59:06.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.414" level="INFO">VALUE: [7.804200000000039e-05, 7.756999999999903e-05, 7.76389999999974e-05, 7.815300000000094e-05, 7.809799999999867e-05, 7.781999999999928e-05, 7.815300000000094e-05, 7.75830000000026e-05, 7.815300000000094e-05, 7.783299999999937e-05, 7.815300000000094e-05, 7.78189999999998e-05, 7.74030000000002e-05, 7.783299999999937e-05, 7.777800000000057e-05, 7.784699999999894e-05, 7.738800000000115e-05, 7.783399999999885e-05, 7.756999999999903e-05, 7.783299999999937e-05, 7.758299999999912e-05, 7.747200000000204e-05, 7.809800000000214e-05, 7.795800000000297e-05, 7.741699999999976e-05, 7.779200000000014e-05, 7.770900000000219e-05, 7.790299999999722e-05, 7.815300000000094e-05, 7.76250000000013e-05, 7.761200000000121e-05, 7.772199999999882e-05, 7.742999999999986e-05, 7.806900000000006e-05, 7.76250000000013e-05, 7.773600000000186e-05, 7.765300000000044e-05, 7.786100000000198e-05, 7.813900000000137e-05, 7.804200000000039e-05, 7.793099999999983e-05, 7.755599999999946e-05, 7.830500000000074e-05, 7.801399999999778e-05, 7.775000000000143e-05, 7.801300000000178e-05, 7.761100000000173e-05, 7.741699999999976e-05, 7.783300000000284e-05, 7.747200000000204e-05]</msg>
<status status="PASS" starttime="20201030 10:59:06.413" endtime="20201030 10:59:06.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.408" endtime="20201030 10:59:06.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:06.420" endtime="20201030 10:59:06.439"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.419" endtime="20201030 10:59:06.440"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.417" endtime="20201030 10:59:06.440"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.058" endtime="20201030 10:59:06.441"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.057" endtime="20201030 10:59:06.441"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.449" endtime="20201030 10:59:06.467"></status>
</kw>
<msg timestamp="20201030 10:59:06.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:06.448" endtime="20201030 10:59:06.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:06.469" endtime="20201030 10:59:06.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.471" endtime="20201030 10:59:06.473"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.445" endtime="20201030 10:59:06.473"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.443" endtime="20201030 10:59:06.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.480" endtime="20201030 10:59:06.766"></status>
</kw>
<msg timestamp="20201030 10:59:06.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019294194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019372861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:06.479" endtime="20201030 10:59:06.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019294194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019372861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:06.770" endtime="20201030 10:59:06.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.778" endtime="20201030 10:59:06.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.476" endtime="20201030 10:59:06.781"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.474" endtime="20201030 10:59:06.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:06.785" level="INFO">${RESULT} = [{'diff': 7.866700000000101e-05}, {'diff': 7.855600000000046e-05}, {'diff': 7.930600000000121e-05}, {'diff': 7.872199999999982e-05}, {'diff': 7.893100000000083e-05}, {'diff': 7.888800000000265e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:06.782" endtime="20201030 10:59:06.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:06.790" level="INFO">${ACCURACY} = {'diff': [7.866700000000101e-05, 7.855600000000046e-05, 7.930600000000121e-05, 7.872199999999982e-05, 7.893100000000083e-05, 7.888800000000265e-05, 7.86250000000023e-05, 7.92909999999987e-05, 7.902800...</msg>
<status status="PASS" starttime="20201030 10:59:06.786" endtime="20201030 10:59:06.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.794" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 10:59:06.793" endtime="20201030 10:59:06.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.797" level="INFO">VALUE: [7.866700000000101e-05, 7.855600000000046e-05, 7.930600000000121e-05, 7.872199999999982e-05, 7.893100000000083e-05, 7.888800000000265e-05, 7.86250000000023e-05, 7.92909999999987e-05, 7.902800000000182e-05, 7.895799999999703e-05, 7.912499999999933e-05, 7.912499999999933e-05, 7.906900000000106e-05, 7.849999999999871e-05, 7.85969999999997e-05, 7.843100000000033e-05, 7.836100000000248e-05, 7.840200000000172e-05, 7.833399999999935e-05, 7.917999999999814e-05, 7.830500000000074e-05, 7.834700000000291e-05, 7.915300000000194e-05, 7.854100000000142e-05, 7.898599999999964e-05, 7.849999999999871e-05, 7.847299999999904e-05, 7.855600000000046e-05, 7.918100000000108e-05, 7.898599999999964e-05, 7.85839999999996e-05, 7.916699999999804e-05, 7.91250000000028e-05, 7.869400000000068e-05, 7.848600000000261e-05, 7.880600000000071e-05, 7.886099999999951e-05, 7.8458e-05, 7.922200000000032e-05, 7.918099999999761e-05, 7.895899999999997e-05, 7.922200000000032e-05, 7.904200000000139e-05, 7.834800000000239e-05, 7.897200000000007e-05, 7.86250000000023e-05, 7.919400000000118e-05, 7.863900000000187e-05, 7.897200000000007e-05, 7.874999999999896e-05]</msg>
<status status="PASS" starttime="20201030 10:59:06.795" endtime="20201030 10:59:06.797"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.791" endtime="20201030 10:59:06.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:06.801" endtime="20201030 10:59:06.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.800" endtime="20201030 10:59:06.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.799" endtime="20201030 10:59:06.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.442" endtime="20201030 10:59:06.822"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.441" endtime="20201030 10:59:06.822"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.831" endtime="20201030 10:59:06.849"></status>
</kw>
<msg timestamp="20201030 10:59:06.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:06.829" endtime="20201030 10:59:06.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:06.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:06.851" endtime="20201030 10:59:06.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.853" endtime="20201030 10:59:06.855"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.827" endtime="20201030 10:59:06.856"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.825" endtime="20201030 10:59:06.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:06.862" endtime="20201030 10:59:07.149"></status>
</kw>
<msg timestamp="20201030 10:59:07.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019346222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019426319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:06.861" endtime="20201030 10:59:07.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019346222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019426319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:07.153" endtime="20201030 10:59:07.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.161" endtime="20201030 10:59:07.163"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.858" endtime="20201030 10:59:07.163"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.857" endtime="20201030 10:59:07.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:07.168" level="INFO">${RESULT} = [{'diff': 8.00970000000012e-05}, {'diff': 7.97909999999992e-05}, {'diff': 7.972200000000082e-05}, {'diff': 7.986100000000051e-05}, {'diff': 8.00970000000012e-05}, {'diff': 7.96389999999994e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 10:59:07.165" endtime="20201030 10:59:07.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:07.172" level="INFO">${ACCURACY} = {'diff': [8.00970000000012e-05, 7.97909999999992e-05, 7.972200000000082e-05, 7.986100000000051e-05, 8.00970000000012e-05, 7.96389999999994e-05, 8.00970000000012e-05, 7.979199999999867e-05, 7.936100000...</msg>
<status status="PASS" starttime="20201030 10:59:07.169" endtime="20201030 10:59:07.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.176" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 10:59:07.175" endtime="20201030 10:59:07.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.179" level="INFO">VALUE: [8.00970000000012e-05, 7.97909999999992e-05, 7.972200000000082e-05, 7.986100000000051e-05, 8.00970000000012e-05, 7.96389999999994e-05, 8.00970000000012e-05, 7.979199999999867e-05, 7.936100000000001e-05, 7.934699999999698e-05, 7.993099999999836e-05, 8.012500000000033e-05, 8.025000000000046e-05, 7.949999999999971e-05, 7.998600000000064e-05, 7.937499999999958e-05, 7.949999999999971e-05, 7.936100000000001e-05, 7.949999999999971e-05, 7.99450000000014e-05, 7.968000000000211e-05, 8.026400000000003e-05, 7.970900000000072e-05, 7.987500000000008e-05, 7.961100000000026e-05, 8.01389999999999e-05, 7.976399999999953e-05, 8.000000000000021e-05, 8.008300000000163e-05, 7.976399999999953e-05, 7.936100000000001e-05, 7.984700000000094e-05, 7.986100000000051e-05, 7.94169999999983e-05, 7.993100000000183e-05, 8.001399999999978e-05, 7.943100000000133e-05, 7.962499999999983e-05, 7.980499999999877e-05, 7.93190000000013e-05, 8.006899999999859e-05, 8.005599999999849e-05, 7.938899999999915e-05, 7.982000000000128e-05, 8.018099999999861e-05, 8.001399999999978e-05, 7.966699999999854e-05, 7.987500000000008e-05, 8.00979999999972e-05, 7.951399999999928e-05]</msg>
<status status="PASS" starttime="20201030 10:59:07.177" endtime="20201030 10:59:07.179"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.173" endtime="20201030 10:59:07.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:07.184" endtime="20201030 10:59:07.203"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.182" endtime="20201030 10:59:07.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.181" endtime="20201030 10:59:07.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.823" endtime="20201030 10:59:07.204"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:06.822" endtime="20201030 10:59:07.204"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.213" endtime="20201030 10:59:07.232"></status>
</kw>
<msg timestamp="20201030 10:59:07.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:07.211" endtime="20201030 10:59:07.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:07.233" endtime="20201030 10:59:07.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.235" endtime="20201030 10:59:07.237"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.209" endtime="20201030 10:59:07.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.207" endtime="20201030 10:59:07.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.244" endtime="20201030 10:59:07.531"></status>
</kw>
<msg timestamp="20201030 10:59:07.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020410528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020490931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:07.243" endtime="20201030 10:59:07.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020410528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020490931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:07.535" endtime="20201030 10:59:07.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.543" endtime="20201030 10:59:07.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.240" endtime="20201030 10:59:07.545"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.239" endtime="20201030 10:59:07.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:07.550" level="INFO">${RESULT} = [{'diff': 8.040299999999972e-05}, {'diff': 8.081999999999881e-05}, {'diff': 8.041599999999982e-05}, {'diff': 8.105500000000002e-05}, {'diff': 8.101399999999731e-05}, {'diff': 8.115300000000047e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:07.547" endtime="20201030 10:59:07.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:07.554" level="INFO">${ACCURACY} = {'diff': [8.040299999999972e-05, 8.081999999999881e-05, 8.041599999999982e-05, 8.105500000000002e-05, 8.101399999999731e-05, 8.115300000000047e-05, 8.104199999999992e-05, 8.029199999999917e-05, 8.1068...</msg>
<status status="PASS" starttime="20201030 10:59:07.551" endtime="20201030 10:59:07.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.558" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 10:59:07.557" endtime="20201030 10:59:07.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.561" level="INFO">VALUE: [8.040299999999972e-05, 8.081999999999881e-05, 8.041599999999982e-05, 8.105500000000002e-05, 8.101399999999731e-05, 8.115300000000047e-05, 8.104199999999992e-05, 8.029199999999917e-05, 8.106899999999959e-05, 8.074999999999749e-05, 8.094499999999893e-05, 8.111100000000177e-05, 8.038900000000015e-05, 8.125000000000146e-05, 8.068000000000311e-05, 8.116600000000057e-05, 8.100000000000121e-05, 8.100000000000121e-05, 8.087500000000108e-05, 8.112500000000133e-05, 8.063899999999694e-05, 8.098600000000164e-05, 8.052799999999985e-05, 8.063899999999694e-05, 8.108300000000263e-05, 8.02779999999996e-05, 8.072200000000182e-05, 8.080499999999977e-05, 8.125000000000146e-05, 8.081899999999934e-05, 8.056899999999909e-05, 8.040299999999972e-05, 8.118000000000014e-05, 8.054200000000289e-05, 8.086100000000151e-05, 8.034700000000145e-05, 8.098599999999817e-05, 8.070799999999878e-05, 8.088800000000118e-05, 8.120800000000275e-05, 8.104199999999992e-05, 8.101400000000078e-05, 8.058300000000213e-05, 8.08329999999989e-05, 8.084699999999848e-05, 8.049999999999724e-05, 8.09169999999998e-05, 8.11390000000009e-05, 8.079199999999967e-05, 8.033400000000135e-05]</msg>
<status status="PASS" starttime="20201030 10:59:07.559" endtime="20201030 10:59:07.562"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.555" endtime="20201030 10:59:07.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:07.566" endtime="20201030 10:59:07.586"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.565" endtime="20201030 10:59:07.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.564" endtime="20201030 10:59:07.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.205" endtime="20201030 10:59:07.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.205" endtime="20201030 10:59:07.587"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.596" endtime="20201030 10:59:07.615"></status>
</kw>
<msg timestamp="20201030 10:59:07.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:07.594" endtime="20201030 10:59:07.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:07.616" endtime="20201030 10:59:07.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.619" endtime="20201030 10:59:07.620"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.592" endtime="20201030 10:59:07.621"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.590" endtime="20201030 10:59:07.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.628" endtime="20201030 10:59:07.914"></status>
</kw>
<msg timestamp="20201030 10:59:07.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019367069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019448972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:07.626" endtime="20201030 10:59:07.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019367069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019448972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:07.918" endtime="20201030 10:59:07.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.926" endtime="20201030 10:59:07.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.624" endtime="20201030 10:59:07.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.622" endtime="20201030 10:59:07.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:07.932" level="INFO">${RESULT} = [{'diff': 8.190299999999776e-05}, {'diff': 8.18329999999999e-05}, {'diff': 8.186099999999905e-05}, {'diff': 8.184699999999948e-05}, {'diff': 8.143099999999986e-05}, {'diff': 8.186100000000252e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:07.929" endtime="20201030 10:59:07.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:07.937" level="INFO">${ACCURACY} = {'diff': [8.190299999999776e-05, 8.18329999999999e-05, 8.186099999999905e-05, 8.184699999999948e-05, 8.143099999999986e-05, 8.186100000000252e-05, 8.143099999999986e-05, 8.125000000000146e-05, 8.19310...</msg>
<status status="PASS" starttime="20201030 10:59:07.933" endtime="20201030 10:59:07.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.942" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 10:59:07.941" endtime="20201030 10:59:07.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:07.944" level="INFO">VALUE: [8.190299999999776e-05, 8.18329999999999e-05, 8.186099999999905e-05, 8.184699999999948e-05, 8.143099999999986e-05, 8.186100000000252e-05, 8.143099999999986e-05, 8.125000000000146e-05, 8.193100000000036e-05, 8.179200000000067e-05, 8.134799999999845e-05, 8.127700000000113e-05, 8.158299999999966e-05, 8.134700000000245e-05, 8.165300000000097e-05, 8.199999999999874e-05, 8.138899999999769e-05, 8.130599999999974e-05, 8.163899999999794e-05, 8.21390000000019e-05, 8.161100000000227e-05, 8.179099999999773e-05, 8.134699999999898e-05, 8.172199999999935e-05, 8.180500000000077e-05, 8.190299999999776e-05, 8.222199999999985e-05, 8.14170000000003e-05, 8.18329999999999e-05, 8.186099999999905e-05, 8.198599999999917e-05, 8.149999999999824e-05, 8.155599999999999e-05, 8.14719999999991e-05, 8.190200000000175e-05, 8.140200000000125e-05, 8.131899999999984e-05, 8.187499999999862e-05, 8.219400000000071e-05, 8.16109999999988e-05, 8.222199999999985e-05, 8.188900000000165e-05, 8.172199999999935e-05, 8.176400000000153e-05, 8.17230000000023e-05, 8.215199999999853e-05, 8.224999999999899e-05, 8.158300000000313e-05, 8.198600000000264e-05, 8.140300000000072e-05]</msg>
<status status="PASS" starttime="20201030 10:59:07.943" endtime="20201030 10:59:07.945"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.938" endtime="20201030 10:59:07.946"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:07.949" endtime="20201030 10:59:07.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.948" endtime="20201030 10:59:07.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.947" endtime="20201030 10:59:07.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.588" endtime="20201030 10:59:07.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.588" endtime="20201030 10:59:07.970"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:07.979" endtime="20201030 10:59:07.997"></status>
</kw>
<msg timestamp="20201030 10:59:07.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:07.977" endtime="20201030 10:59:07.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:07.998" endtime="20201030 10:59:08.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.001" endtime="20201030 10:59:08.002"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.974" endtime="20201030 10:59:08.003"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.972" endtime="20201030 10:59:08.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.010" endtime="20201030 10:59:08.297"></status>
</kw>
<msg timestamp="20201030 10:59:08.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019409819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019492403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:08.008" endtime="20201030 10:59:08.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019409819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019492403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:08.301" endtime="20201030 10:59:08.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.309" endtime="20201030 10:59:08.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.006" endtime="20201030 10:59:08.311"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.004" endtime="20201030 10:59:08.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:08.316" level="INFO">${RESULT} = [{'diff': 8.258400000000013e-05}, {'diff': 8.29590000000005e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.27919999999982e-05}, {'diff': 8.255600000000099e-05}, {'diff': 8.318099999999815e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:59:08.312" endtime="20201030 10:59:08.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:08.320" level="INFO">${ACCURACY} = {'diff': [8.258400000000013e-05, 8.29590000000005e-05, 8.31110000000003e-05, 8.27919999999982e-05, 8.255600000000099e-05, 8.318099999999815e-05, 8.255499999999805e-05, 8.244400000000096e-05, 8.2903000...</msg>
<status status="PASS" starttime="20201030 10:59:08.317" endtime="20201030 10:59:08.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.324" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 10:59:08.323" endtime="20201030 10:59:08.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.326" level="INFO">VALUE: [8.258400000000013e-05, 8.29590000000005e-05, 8.31110000000003e-05, 8.27919999999982e-05, 8.255600000000099e-05, 8.318099999999815e-05, 8.255499999999805e-05, 8.244400000000096e-05, 8.290300000000222e-05, 8.252800000000185e-05, 8.24309999999974e-05, 8.298600000000017e-05, 8.249999999999924e-05, 8.255599999999752e-05, 8.274999999999949e-05, 8.304099999999898e-05, 8.249999999999924e-05, 8.270800000000078e-05, 8.288900000000265e-05, 8.276399999999906e-05, 8.238900000000215e-05, 8.276399999999906e-05, 8.322199999999738e-05, 8.266700000000154e-05, 8.24720000000001e-05, 8.272299999999982e-05, 8.301400000000278e-05, 8.29309999999979e-05, 8.272200000000035e-05, 8.288899999999919e-05, 8.244399999999749e-05, 8.324999999999999e-05, 8.251399999999881e-05, 8.272200000000035e-05, 8.238899999999869e-05, 8.24170000000013e-05, 8.313899999999944e-05, 8.238899999999869e-05, 8.258400000000013e-05, 8.249999999999924e-05, 8.290199999999928e-05, 8.306900000000159e-05, 8.273599999999992e-05, 8.244399999999749e-05, 8.280600000000124e-05, 8.26390000000024e-05, 8.230600000000074e-05, 8.269499999999722e-05, 8.251400000000228e-05, 8.272299999999982e-05]</msg>
<status status="PASS" starttime="20201030 10:59:08.325" endtime="20201030 10:59:08.327"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.320" endtime="20201030 10:59:08.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:08.331" endtime="20201030 10:59:08.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.330" endtime="20201030 10:59:08.351"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.329" endtime="20201030 10:59:08.352"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.971" endtime="20201030 10:59:08.352"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:07.970" endtime="20201030 10:59:08.352"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.361" endtime="20201030 10:59:08.380"></status>
</kw>
<msg timestamp="20201030 10:59:08.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:08.359" endtime="20201030 10:59:08.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:08.382" endtime="20201030 10:59:08.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.384" endtime="20201030 10:59:08.386"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.357" endtime="20201030 10:59:08.387"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.354" endtime="20201030 10:59:08.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.393" endtime="20201030 10:59:08.680"></status>
</kw>
<msg timestamp="20201030 10:59:08.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020351417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020435486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:08.392" endtime="20201030 10:59:08.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020351417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020435486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:08.684" endtime="20201030 10:59:08.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.693" endtime="20201030 10:59:08.694"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.389" endtime="20201030 10:59:08.695"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.388" endtime="20201030 10:59:08.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:08.699" level="INFO">${RESULT} = [{'diff': 8.406899999999912e-05}, {'diff': 8.36529999999995e-05}, {'diff': 8.350000000000024e-05}, {'diff': 8.34170000000023e-05}, {'diff': 8.384800000000095e-05}, {'diff': 8.345899999999754e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:08.696" endtime="20201030 10:59:08.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:08.703" level="INFO">${ACCURACY} = {'diff': [8.406899999999912e-05, 8.36529999999995e-05, 8.350000000000024e-05, 8.34170000000023e-05, 8.384800000000095e-05, 8.345899999999754e-05, 8.334800000000045e-05, 8.408299999999869e-05, 8.404099...</msg>
<status status="PASS" starttime="20201030 10:59:08.700" endtime="20201030 10:59:08.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.708" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 10:59:08.707" endtime="20201030 10:59:08.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.710" level="INFO">VALUE: [8.406899999999912e-05, 8.36529999999995e-05, 8.350000000000024e-05, 8.34170000000023e-05, 8.384800000000095e-05, 8.345899999999754e-05, 8.334800000000045e-05, 8.408299999999869e-05, 8.404099999999998e-05, 8.406899999999912e-05, 8.373600000000092e-05, 8.394399999999899e-05, 8.372199999999788e-05, 8.39309999999989e-05, 8.355599999999852e-05, 8.383400000000138e-05, 8.388800000000071e-05, 8.408299999999869e-05, 8.355499999999905e-05, 8.381899999999887e-05, 8.331899999999837e-05, 8.419399999999924e-05, 8.336100000000055e-05, 8.416699999999958e-05, 8.412500000000087e-05, 8.413900000000044e-05, 8.372200000000135e-05, 8.370799999999831e-05, 8.381999999999834e-05, 8.36659999999996e-05, 8.401300000000084e-05, 8.376299999999712e-05, 8.330500000000227e-05, 8.33330000000014e-05, 8.356900000000209e-05, 8.399999999999727e-05, 8.366699999999908e-05, 8.419500000000218e-05, 8.381999999999834e-05, 8.354199999999895e-05, 8.366699999999908e-05, 8.405499999999955e-05, 8.361200000000027e-05, 8.379099999999973e-05, 8.416699999999958e-05, 8.376400000000006e-05, 8.381899999999887e-05, 8.327799999999913e-05, 8.406899999999912e-05, 8.33330000000014e-05]</msg>
<status status="PASS" starttime="20201030 10:59:08.709" endtime="20201030 10:59:08.712"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.704" endtime="20201030 10:59:08.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:08.716" endtime="20201030 10:59:08.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.715" endtime="20201030 10:59:08.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.714" endtime="20201030 10:59:08.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.353" endtime="20201030 10:59:08.737"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.352" endtime="20201030 10:59:08.737"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.746" endtime="20201030 10:59:08.765"></status>
</kw>
<msg timestamp="20201030 10:59:08.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:08.744" endtime="20201030 10:59:08.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:08.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:08.767" endtime="20201030 10:59:08.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.769" endtime="20201030 10:59:08.771"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.742" endtime="20201030 10:59:08.772"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.740" endtime="20201030 10:59:08.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:08.778" endtime="20201030 10:59:09.063"></status>
</kw>
<msg timestamp="20201030 10:59:09.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020282125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:08.777" endtime="20201030 10:59:09.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020282125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:09.068" endtime="20201030 10:59:09.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.076" endtime="20201030 10:59:09.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.774" endtime="20201030 10:59:09.078"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.773" endtime="20201030 10:59:09.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:09.082" level="INFO">${RESULT} = [{'diff': 8.487499999999815e-05}, {'diff': 8.4846999999999e-05}, {'diff': 8.522299999999886e-05}, {'diff': 8.504200000000045e-05}, {'diff': 8.44309999999994e-05}, {'diff': 8.429100000000023e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 10:59:09.079" endtime="20201030 10:59:09.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:09.087" level="INFO">${ACCURACY} = {'diff': [8.487499999999815e-05, 8.4846999999999e-05, 8.522299999999886e-05, 8.504200000000045e-05, 8.44309999999994e-05, 8.429100000000023e-05, 8.4846999999999e-05, 8.429100000000023e-05, 8.484699999...</msg>
<status status="PASS" starttime="20201030 10:59:09.083" endtime="20201030 10:59:09.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.091" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 10:59:09.090" endtime="20201030 10:59:09.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.094" level="INFO">VALUE: [8.487499999999815e-05, 8.4846999999999e-05, 8.522299999999886e-05, 8.504200000000045e-05, 8.44309999999994e-05, 8.429100000000023e-05, 8.4846999999999e-05, 8.429100000000023e-05, 8.4846999999999e-05, 8.493000000000042e-05, 8.486100000000205e-05, 8.509699999999926e-05, 8.486099999999858e-05, 8.480599999999977e-05, 8.486099999999858e-05, 8.463900000000094e-05, 8.483399999999891e-05, 8.436100000000155e-05, 8.491600000000085e-05, 8.476399999999759e-05, 8.509700000000273e-05, 8.437500000000112e-05, 8.437500000000112e-05, 8.454199999999995e-05, 8.494499999999947e-05, 8.499999999999827e-05, 8.44859999999982e-05, 8.450000000000124e-05, 8.451299999999787e-05, 8.494399999999999e-05, 8.501400000000131e-05, 8.479100000000073e-05, 8.44859999999982e-05, 8.444399999999949e-05, 8.455599999999952e-05, 8.457000000000256e-05, 8.501399999999784e-05, 8.513900000000144e-05, 8.461099999999833e-05, 8.448700000000114e-05, 8.470799999999931e-05, 8.451300000000134e-05, 8.506900000000012e-05, 8.498600000000217e-05, 8.522199999999938e-05, 8.42919999999997e-05, 8.522200000000285e-05, 8.495799999999956e-05, 8.427800000000013e-05, 8.436099999999808e-05]</msg>
<status status="PASS" starttime="20201030 10:59:09.093" endtime="20201030 10:59:09.095"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.088" endtime="20201030 10:59:09.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:09.099" endtime="20201030 10:59:09.118"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.097" endtime="20201030 10:59:09.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.096" endtime="20201030 10:59:09.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.738" endtime="20201030 10:59:09.119"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:08.738" endtime="20201030 10:59:09.120"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.128" endtime="20201030 10:59:09.147"></status>
</kw>
<msg timestamp="20201030 10:59:09.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:09.127" endtime="20201030 10:59:09.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:09.148" endtime="20201030 10:59:09.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.151" endtime="20201030 10:59:09.152"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.124" endtime="20201030 10:59:09.153"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.122" endtime="20201030 10:59:09.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.160" endtime="20201030 10:59:09.446"></status>
</kw>
<msg timestamp="20201030 10:59:09.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019369639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019455361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:09.158" endtime="20201030 10:59:09.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019369639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019455361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:09.450" endtime="20201030 10:59:09.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.458" endtime="20201030 10:59:09.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.156" endtime="20201030 10:59:09.460"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.154" endtime="20201030 10:59:09.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:09.465" level="INFO">${RESULT} = [{'diff': 8.572199999999988e-05}, {'diff': 8.58189999999974e-05}, {'diff': 8.624999999999952e-05}, {'diff': 8.577800000000163e-05}, {'diff': 8.5847e-05}, {'diff': 8.61249999999994e-05}, {'diff': 8.559...</msg>
<status status="PASS" starttime="20201030 10:59:09.462" endtime="20201030 10:59:09.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:09.469" level="INFO">${ACCURACY} = {'diff': [8.572199999999988e-05, 8.58189999999974e-05, 8.624999999999952e-05, 8.577800000000163e-05, 8.5847e-05, 8.61249999999994e-05, 8.559799999999923e-05, 8.54859999999992e-05, 8.602800000000188e-0...</msg>
<status status="PASS" starttime="20201030 10:59:09.466" endtime="20201030 10:59:09.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.473" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 10:59:09.472" endtime="20201030 10:59:09.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.476" level="INFO">VALUE: [8.572199999999988e-05, 8.58189999999974e-05, 8.624999999999952e-05, 8.577800000000163e-05, 8.5847e-05, 8.61249999999994e-05, 8.559799999999923e-05, 8.54859999999992e-05, 8.602800000000188e-05, 8.63050000000018e-05, 8.606900000000112e-05, 8.613899999999897e-05, 8.5847e-05, 8.555499999999758e-05, 8.540300000000126e-05, 8.569500000000022e-05, 8.586099999999958e-05, 8.552799999999791e-05, 8.626400000000256e-05, 8.580499999999783e-05, 8.599999999999927e-05, 8.534700000000298e-05, 8.5847e-05, 8.563899999999847e-05, 8.569400000000074e-05, 8.558300000000019e-05, 8.540300000000126e-05, 8.56110000000028e-05, 8.624999999999952e-05, 8.545899999999954e-05, 8.597200000000013e-05, 8.570800000000031e-05, 8.581900000000087e-05, 8.533299999999994e-05, 8.575000000000249e-05, 8.572199999999988e-05, 8.565299999999804e-05, 8.579199999999773e-05, 8.52920000000007e-05, 8.52920000000007e-05, 8.59310000000009e-05, 8.54310000000004e-05, 8.529099999999776e-05, 8.622199999999691e-05, 8.595900000000004e-05, 8.611099999999983e-05, 8.537500000000212e-05, 8.602800000000188e-05, 8.583299999999697e-05, 8.601399999999884e-05]</msg>
<status status="PASS" starttime="20201030 10:59:09.474" endtime="20201030 10:59:09.476"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.470" endtime="20201030 10:59:09.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:09.480" endtime="20201030 10:59:09.500"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.479" endtime="20201030 10:59:09.500"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.478" endtime="20201030 10:59:09.501"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.120" endtime="20201030 10:59:09.501"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.120" endtime="20201030 10:59:09.501"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.510" endtime="20201030 10:59:09.532"></status>
</kw>
<msg timestamp="20201030 10:59:09.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:09.508" endtime="20201030 10:59:09.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:09.533" endtime="20201030 10:59:09.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.535" endtime="20201030 10:59:09.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.506" endtime="20201030 10:59:09.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.504" endtime="20201030 10:59:09.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.544" endtime="20201030 10:59:09.831"></status>
</kw>
<msg timestamp="20201030 10:59:09.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02256875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022655569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:09.543" endtime="20201030 10:59:09.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02256875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022655569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:09.835" endtime="20201030 10:59:09.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.843" endtime="20201030 10:59:09.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.540" endtime="20201030 10:59:09.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.539" endtime="20201030 10:59:09.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:09.850" level="INFO">${RESULT} = [{'diff': 8.681900000000187e-05}, {'diff': 8.658299999999772e-05}, {'diff': 8.697199999999766e-05}, {'diff': 8.683300000000144e-05}, {'diff': 8.726400000000009e-05}, {'diff': 8.641700000000183e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:09.846" endtime="20201030 10:59:09.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:09.854" level="INFO">${ACCURACY} = {'diff': [8.681900000000187e-05, 8.658299999999772e-05, 8.697199999999766e-05, 8.683300000000144e-05, 8.726400000000009e-05, 8.641700000000183e-05, 8.672200000000088e-05, 8.658400000000066e-05, 8.7152...</msg>
<status status="PASS" starttime="20201030 10:59:09.850" endtime="20201030 10:59:09.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.858" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 10:59:09.857" endtime="20201030 10:59:09.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.860" level="INFO">VALUE: [8.681900000000187e-05, 8.658299999999772e-05, 8.697199999999766e-05, 8.683300000000144e-05, 8.726400000000009e-05, 8.641700000000183e-05, 8.672200000000088e-05, 8.658400000000066e-05, 8.715299999999954e-05, 8.651399999999934e-05, 8.663899999999947e-05, 8.679199999999873e-05, 8.690199999999981e-05, 8.658300000000119e-05, 8.66249999999999e-05, 8.663899999999947e-05, 8.720799999999834e-05, 8.673600000000045e-05, 8.672199999999741e-05, 8.719499999999825e-05, 8.636100000000008e-05, 8.679199999999873e-05, 8.687500000000015e-05, 8.677699999999969e-05, 8.706900000000212e-05, 8.681900000000187e-05, 8.673599999999698e-05, 8.69999999999968e-05, 8.673599999999698e-05, 8.709700000000126e-05, 8.706999999999812e-05, 8.69730000000006e-05, 8.680499999999883e-05, 8.657000000000109e-05, 8.706899999999865e-05, 8.644399999999802e-05, 8.693000000000242e-05, 8.652799999999891e-05, 8.658300000000119e-05, 8.677800000000263e-05, 8.627800000000213e-05, 8.713899999999997e-05, 8.655499999999858e-05, 8.723600000000095e-05, 8.673699999999993e-05, 8.63050000000018e-05, 8.68189999999984e-05, 8.627700000000266e-05, 8.706899999999865e-05, 8.640300000000226e-05]</msg>
<status status="PASS" starttime="20201030 10:59:09.859" endtime="20201030 10:59:09.862"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.854" endtime="20201030 10:59:09.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:09.866" endtime="20201030 10:59:09.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.865" endtime="20201030 10:59:09.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.864" endtime="20201030 10:59:09.887"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.502" endtime="20201030 10:59:09.887"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.501" endtime="20201030 10:59:09.887"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.895" endtime="20201030 10:59:09.913"></status>
</kw>
<msg timestamp="20201030 10:59:09.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:09.894" endtime="20201030 10:59:09.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:09.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:09.915" endtime="20201030 10:59:09.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.917" endtime="20201030 10:59:09.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.891" endtime="20201030 10:59:09.919"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.889" endtime="20201030 10:59:09.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:09.926" endtime="20201030 10:59:10.211"></status>
</kw>
<msg timestamp="20201030 10:59:10.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019337194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019425306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:09.925" endtime="20201030 10:59:10.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019337194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019425306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:10.215" endtime="20201030 10:59:10.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.223" endtime="20201030 10:59:10.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.922" endtime="20201030 10:59:10.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.920" endtime="20201030 10:59:10.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:10.230" level="INFO">${RESULT} = [{'diff': 8.81120000000013e-05}, {'diff': 8.756899999999915e-05}, {'diff': 8.826399999999762e-05}, {'diff': 8.747199999999816e-05}, {'diff': 8.783299999999897e-05}, {'diff': 8.756899999999915e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:10.227" endtime="20201030 10:59:10.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:10.235" level="INFO">${ACCURACY} = {'diff': [8.81120000000013e-05, 8.756899999999915e-05, 8.826399999999762e-05, 8.747199999999816e-05, 8.783299999999897e-05, 8.756899999999915e-05, 8.78059999999993e-05, 8.7638999999997e-05, 8.78890000...</msg>
<status status="PASS" starttime="20201030 10:59:10.231" endtime="20201030 10:59:10.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.239" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 10:59:10.238" endtime="20201030 10:59:10.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.242" level="INFO">VALUE: [8.81120000000013e-05, 8.756899999999915e-05, 8.826399999999762e-05, 8.747199999999816e-05, 8.783299999999897e-05, 8.756899999999915e-05, 8.78059999999993e-05, 8.7638999999997e-05, 8.788900000000072e-05, 8.81670000000001e-05, 8.74449999999985e-05, 8.733300000000194e-05, 8.806899999999965e-05, 8.791600000000038e-05, 8.797199999999866e-05, 8.801400000000084e-05, 8.782000000000234e-05, 8.736099999999761e-05, 8.823600000000195e-05, 8.787500000000115e-05, 8.804200000000345e-05, 8.763900000000047e-05, 8.795899999999857e-05, 8.74449999999985e-05, 8.813799999999802e-05, 8.733300000000194e-05, 8.819399999999977e-05, 8.765300000000004e-05, 8.81670000000001e-05, 8.772200000000188e-05, 8.72920000000027e-05, 8.768099999999918e-05, 8.745799999999859e-05, 8.805599999999955e-05, 8.826400000000109e-05, 8.806900000000312e-05, 8.823599999999848e-05, 8.806899999999965e-05, 8.78189999999994e-05, 8.777800000000016e-05, 8.777800000000016e-05, 8.74310000000024e-05, 8.772199999999841e-05, 8.808399999999869e-05, 8.775000000000102e-05, 8.747199999999816e-05, 8.787500000000115e-05, 8.801400000000084e-05, 8.763900000000047e-05, 8.790300000000029e-05]</msg>
<status status="PASS" starttime="20201030 10:59:10.240" endtime="20201030 10:59:10.242"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.236" endtime="20201030 10:59:10.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:10.247" endtime="20201030 10:59:10.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.245" endtime="20201030 10:59:10.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.244" endtime="20201030 10:59:10.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.888" endtime="20201030 10:59:10.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:09.887" endtime="20201030 10:59:10.267"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.276" endtime="20201030 10:59:10.294"></status>
</kw>
<msg timestamp="20201030 10:59:10.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:10.274" endtime="20201030 10:59:10.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:10.295" endtime="20201030 10:59:10.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.298" endtime="20201030 10:59:10.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.272" endtime="20201030 10:59:10.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.270" endtime="20201030 10:59:10.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.307" endtime="20201030 10:59:10.594"></status>
</kw>
<msg timestamp="20201030 10:59:10.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019443625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019532361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:10.305" endtime="20201030 10:59:10.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019443625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019532361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:10.598" endtime="20201030 10:59:10.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.606" endtime="20201030 10:59:10.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.303" endtime="20201030 10:59:10.609"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.301" endtime="20201030 10:59:10.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:10.613" level="INFO">${RESULT} = [{'diff': 8.873600000000245e-05}, {'diff': 8.891700000000086e-05}, {'diff': 8.862499999999843e-05}, {'diff': 8.876400000000159e-05}, {'diff': 8.852800000000091e-05}, {'diff': 8.824999999999805e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:10.610" endtime="20201030 10:59:10.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:10.617" level="INFO">${ACCURACY} = {'diff': [8.873600000000245e-05, 8.891700000000086e-05, 8.862499999999843e-05, 8.876400000000159e-05, 8.852800000000091e-05, 8.824999999999805e-05, 8.915300000000154e-05, 8.86670000000006e-05, 8.91390...</msg>
<status status="PASS" starttime="20201030 10:59:10.614" endtime="20201030 10:59:10.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.621" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 10:59:10.620" endtime="20201030 10:59:10.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.624" level="INFO">VALUE: [8.873600000000245e-05, 8.891700000000086e-05, 8.862499999999843e-05, 8.876400000000159e-05, 8.852800000000091e-05, 8.824999999999805e-05, 8.915300000000154e-05, 8.86670000000006e-05, 8.913900000000197e-05, 8.848599999999873e-05, 8.844400000000002e-05, 8.850000000000177e-05, 8.91250000000024e-05, 8.847200000000263e-05, 8.925000000000252e-05, 8.918099999999721e-05, 8.831999999999937e-05, 8.887499999999868e-05, 8.881999999999987e-05, 8.883399999999944e-05, 8.848599999999873e-05, 8.858299999999972e-05, 8.854100000000101e-05, 8.843000000000045e-05, 8.856900000000015e-05, 8.919400000000077e-05, 8.879200000000073e-05, 8.863900000000147e-05, 8.86670000000006e-05, 8.89999999999988e-05, 8.843099999999993e-05, 8.891600000000138e-05, 8.877700000000169e-05, 8.880500000000083e-05, 8.920800000000034e-05, 8.872299999999889e-05, 8.84999999999983e-05, 8.876300000000212e-05, 8.873600000000245e-05, 8.926399999999862e-05, 8.870799999999984e-05, 8.874999999999855e-05, 8.861099999999886e-05, 8.827699999999772e-05, 8.884699999999954e-05, 8.863900000000147e-05, 8.912499999999893e-05, 8.906899999999718e-05, 8.872299999999889e-05, 8.922199999999991e-05]</msg>
<status status="PASS" starttime="20201030 10:59:10.622" endtime="20201030 10:59:10.624"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.618" endtime="20201030 10:59:10.625"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:10.629" endtime="20201030 10:59:10.648"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.627" endtime="20201030 10:59:10.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.626" endtime="20201030 10:59:10.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.268" endtime="20201030 10:59:10.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.268" endtime="20201030 10:59:10.649"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.658" endtime="20201030 10:59:10.678"></status>
</kw>
<msg timestamp="20201030 10:59:10.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:10.656" endtime="20201030 10:59:10.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:10.679" endtime="20201030 10:59:10.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.682" endtime="20201030 10:59:10.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.654" endtime="20201030 10:59:10.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.652" endtime="20201030 10:59:10.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.692" endtime="20201030 10:59:10.977"></status>
</kw>
<msg timestamp="20201030 10:59:10.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020562639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020652542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:10.690" endtime="20201030 10:59:10.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:10.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020562639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020652542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:10.981" endtime="20201030 10:59:10.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:10.990" endtime="20201030 10:59:10.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.688" endtime="20201030 10:59:10.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.686" endtime="20201030 10:59:10.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:10.996" level="INFO">${RESULT} = [{'diff': 8.990299999999882e-05}, {'diff': 9.012499999999993e-05}, {'diff': 8.99999999999998e-05}, {'diff': 9.006899999999818e-05}, {'diff': 9.011100000000036e-05}, {'diff': 8.952800000000191e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:10.993" endtime="20201030 10:59:10.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:11.000" level="INFO">${ACCURACY} = {'diff': [8.990299999999882e-05, 9.012499999999993e-05, 8.99999999999998e-05, 9.006899999999818e-05, 9.011100000000036e-05, 8.952800000000191e-05, 8.951399999999887e-05, 8.994499999999753e-05, 8.99449...</msg>
<status status="PASS" starttime="20201030 10:59:10.997" endtime="20201030 10:59:11.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.005" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 10:59:11.004" endtime="20201030 10:59:11.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.007" level="INFO">VALUE: [8.990299999999882e-05, 9.012499999999993e-05, 8.99999999999998e-05, 9.006899999999818e-05, 9.011100000000036e-05, 8.952800000000191e-05, 8.951399999999887e-05, 8.994499999999753e-05, 8.994499999999753e-05, 8.94450000000005e-05, 8.972299999999989e-05, 8.938899999999875e-05, 9.008400000000069e-05, 8.994400000000152e-05, 8.986100000000011e-05, 8.986100000000011e-05, 8.94860000000032e-05, 9.006899999999818e-05, 8.933300000000047e-05, 8.993099999999796e-05, 8.991700000000186e-05, 8.984800000000001e-05, 8.965300000000204e-05, 8.959799999999976e-05, 8.945800000000059e-05, 9.01389999999995e-05, 9.011100000000036e-05, 8.970800000000084e-05, 8.988899999999925e-05, 8.99999999999998e-05, 9.001400000000284e-05, 8.94860000000032e-05, 8.926399999999862e-05, 8.977799999999869e-05, 8.963900000000247e-05, 9.004099999999904e-05, 9.001400000000284e-05, 8.947200000000016e-05, 9.020800000000134e-05, 9.020800000000134e-05, 8.944400000000102e-05, 8.98060000000013e-05, 8.994499999999753e-05, 8.930599999999733e-05, 8.977799999999869e-05, 9.008299999999775e-05, 8.948599999999973e-05, 9.025000000000005e-05, 8.954200000000148e-05, 8.983300000000097e-05]</msg>
<status status="PASS" starttime="20201030 10:59:11.006" endtime="20201030 10:59:11.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.001" endtime="20201030 10:59:11.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:11.019" endtime="20201030 10:59:11.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.018" endtime="20201030 10:59:11.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.017" endtime="20201030 10:59:11.039"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.650" endtime="20201030 10:59:11.040"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:10.650" endtime="20201030 10:59:11.040"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.048" endtime="20201030 10:59:11.068"></status>
</kw>
<msg timestamp="20201030 10:59:11.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:11.047" endtime="20201030 10:59:11.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:11.070" endtime="20201030 10:59:11.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.072" endtime="20201030 10:59:11.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.044" endtime="20201030 10:59:11.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.042" endtime="20201030 10:59:11.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.081" endtime="20201030 10:59:11.367"></status>
</kw>
<msg timestamp="20201030 10:59:11.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019315319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019406514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:11.079" endtime="20201030 10:59:11.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019315319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019406514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:11.371" endtime="20201030 10:59:11.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.379" endtime="20201030 10:59:11.380"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.077" endtime="20201030 10:59:11.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.075" endtime="20201030 10:59:11.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:11.385" level="INFO">${RESULT} = [{'diff': 9.119499999999878e-05}, {'diff': 9.027799999999919e-05}, {'diff': 9.05000000000003e-05}, {'diff': 9.122299999999792e-05}, {'diff': 9.108399999999822e-05}, {'diff': 9.05000000000003e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:11.382" endtime="20201030 10:59:11.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:11.390" level="INFO">${ACCURACY} = {'diff': [9.119499999999878e-05, 9.027799999999919e-05, 9.05000000000003e-05, 9.122299999999792e-05, 9.108399999999822e-05, 9.05000000000003e-05, 9.112499999999746e-05, 9.073600000000098e-05, 9.102700...</msg>
<status status="PASS" starttime="20201030 10:59:11.386" endtime="20201030 10:59:11.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.394" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 10:59:11.393" endtime="20201030 10:59:11.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.397" level="INFO">VALUE: [9.119499999999878e-05, 9.027799999999919e-05, 9.05000000000003e-05, 9.122299999999792e-05, 9.108399999999822e-05, 9.05000000000003e-05, 9.112499999999746e-05, 9.073600000000098e-05, 9.102700000000047e-05, 9.099999999999733e-05, 9.091599999999991e-05, 9.026399999999962e-05, 9.122199999999844e-05, 9.045800000000159e-05, 9.034700000000104e-05, 9.029199999999876e-05, 9.040299999999932e-05, 9.093099999999896e-05, 9.113800000000102e-05, 9.061099999999739e-05, 9.115300000000007e-05, 9.031899999999843e-05, 9.06939999999988e-05, 9.122200000000191e-05, 9.068100000000218e-05, 9.087500000000068e-05, 9.043099999999846e-05, 9.087500000000068e-05, 9.04870000000002e-05, 9.0332999999998e-05, 9.087500000000068e-05, 9.116699999999964e-05, 9.075000000000055e-05, 9.120899999999835e-05, 9.038899999999975e-05, 9.098599999999776e-05, 9.116699999999964e-05, 9.075000000000055e-05, 9.084800000000101e-05, 9.070799999999837e-05, 9.109700000000179e-05, 9.088900000000025e-05, 9.030499999999886e-05, 9.030500000000233e-05, 9.123599999999801e-05, 9.088900000000025e-05, 9.116699999999964e-05, 9.11390000000005e-05, 9.109700000000179e-05, 9.102799999999994e-05]</msg>
<status status="PASS" starttime="20201030 10:59:11.395" endtime="20201030 10:59:11.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.391" endtime="20201030 10:59:11.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:11.402" endtime="20201030 10:59:11.421"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.400" endtime="20201030 10:59:11.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.399" endtime="20201030 10:59:11.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.041" endtime="20201030 10:59:11.422"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.040" endtime="20201030 10:59:11.422"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.431" endtime="20201030 10:59:11.450"></status>
</kw>
<msg timestamp="20201030 10:59:11.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:11.430" endtime="20201030 10:59:11.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:11.451" endtime="20201030 10:59:11.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.454" endtime="20201030 10:59:11.455"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.427" endtime="20201030 10:59:11.456"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.425" endtime="20201030 10:59:11.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.463" endtime="20201030 10:59:11.750"></status>
</kw>
<msg timestamp="20201030 10:59:11.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019483736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:11.461" endtime="20201030 10:59:11.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019483736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:11.754" endtime="20201030 10:59:11.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.762" endtime="20201030 10:59:11.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.459" endtime="20201030 10:59:11.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.457" endtime="20201030 10:59:11.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:11.769" level="INFO">${RESULT} = [{'diff': 9.162499999999796e-05}, {'diff': 9.198599999999876e-05}, {'diff': 9.158399999999872e-05}, {'diff': 9.165300000000057e-05}, {'diff': 9.175000000000155e-05}, {'diff': 9.191700000000039e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:11.765" endtime="20201030 10:59:11.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:11.773" level="INFO">${ACCURACY} = {'diff': [9.162499999999796e-05, 9.198599999999876e-05, 9.158399999999872e-05, 9.165300000000057e-05, 9.175000000000155e-05, 9.191700000000039e-05, 9.199999999999833e-05, 9.21390000000015e-05, 9.14730...</msg>
<status status="PASS" starttime="20201030 10:59:11.770" endtime="20201030 10:59:11.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.777" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 10:59:11.776" endtime="20201030 10:59:11.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.779" level="INFO">VALUE: [9.162499999999796e-05, 9.198599999999876e-05, 9.158399999999872e-05, 9.165300000000057e-05, 9.175000000000155e-05, 9.191700000000039e-05, 9.199999999999833e-05, 9.21390000000015e-05, 9.147300000000164e-05, 9.194499999999953e-05, 9.127700000000072e-05, 9.206900000000018e-05, 9.159700000000229e-05, 9.16529999999971e-05, 9.223600000000248e-05, 9.15000000000013e-05, 9.1639000000001e-05, 9.187499999999821e-05, 9.18199999999994e-05, 9.162500000000143e-05, 9.134800000000151e-05, 9.179099999999732e-05, 9.172199999999894e-05, 9.179100000000079e-05, 9.184700000000254e-05, 9.225000000000205e-05, 9.206900000000018e-05, 9.219499999999978e-05, 9.156999999999915e-05, 9.211100000000236e-05, 9.166700000000014e-05, 9.222199999999944e-05, 9.194400000000005e-05, 9.206900000000018e-05, 9.177800000000069e-05, 9.14719999999987e-05, 9.172200000000241e-05, 9.223599999999901e-05, 9.184699999999907e-05, 9.15000000000013e-05, 9.143099999999946e-05, 9.154200000000001e-05, 9.20000000000018e-05, 9.152700000000097e-05, 9.176399999999765e-05, 9.1639000000001e-05, 9.223600000000248e-05, 9.179200000000026e-05, 9.143099999999946e-05, 9.145799999999912e-05]</msg>
<status status="PASS" starttime="20201030 10:59:11.778" endtime="20201030 10:59:11.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.773" endtime="20201030 10:59:11.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:11.784" endtime="20201030 10:59:11.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.783" endtime="20201030 10:59:11.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.782" endtime="20201030 10:59:11.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.423" endtime="20201030 10:59:11.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.423" endtime="20201030 10:59:11.805"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.814" endtime="20201030 10:59:11.834"></status>
</kw>
<msg timestamp="20201030 10:59:11.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:11.812" endtime="20201030 10:59:11.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:11.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:11.835" endtime="20201030 10:59:11.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.838" endtime="20201030 10:59:11.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.810" endtime="20201030 10:59:11.840"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.808" endtime="20201030 10:59:11.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:11.847" endtime="20201030 10:59:12.133"></status>
</kw>
<msg timestamp="20201030 10:59:12.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020364417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020456847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:11.845" endtime="20201030 10:59:12.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020364417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020456847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:12.137" endtime="20201030 10:59:12.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.145" endtime="20201030 10:59:12.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.843" endtime="20201030 10:59:12.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.841" endtime="20201030 10:59:12.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:12.152" level="INFO">${RESULT} = [{'diff': 9.243000000000098e-05}, {'diff': 9.261099999999939e-05}, {'diff': 9.263899999999853e-05}, {'diff': 9.270899999999985e-05}, {'diff': 9.276399999999865e-05}, {'diff': 9.229199999999729e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:12.149" endtime="20201030 10:59:12.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:12.156" level="INFO">${ACCURACY} = {'diff': [9.243000000000098e-05, 9.261099999999939e-05, 9.263899999999853e-05, 9.270899999999985e-05, 9.276399999999865e-05, 9.229199999999729e-05, 9.263899999999853e-05, 9.306999999999718e-05, 9.2708...</msg>
<status status="PASS" starttime="20201030 10:59:12.153" endtime="20201030 10:59:12.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.160" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 10:59:12.159" endtime="20201030 10:59:12.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.163" level="INFO">VALUE: [9.243000000000098e-05, 9.261099999999939e-05, 9.263899999999853e-05, 9.270899999999985e-05, 9.276399999999865e-05, 9.229199999999729e-05, 9.263899999999853e-05, 9.306999999999718e-05, 9.270899999999985e-05, 9.258399999999972e-05, 9.249999999999883e-05, 9.292999999999801e-05, 9.229100000000129e-05, 9.230500000000086e-05, 9.279199999999779e-05, 9.229200000000076e-05, 9.243100000000046e-05, 9.279199999999779e-05, 9.320899999999688e-05, 9.247299999999917e-05, 9.313899999999903e-05, 9.230600000000033e-05, 9.23879999999988e-05, 9.312500000000293e-05, 9.322299999999992e-05, 9.308300000000075e-05, 9.2639000000002e-05, 9.324999999999958e-05, 9.323699999999949e-05, 9.230600000000033e-05, 9.236100000000261e-05, 9.294500000000053e-05, 9.281900000000093e-05, 9.313799999999955e-05, 9.29720000000002e-05, 9.305600000000108e-05, 9.229200000000076e-05, 9.262500000000243e-05, 9.255599999999711e-05, 9.25000000000023e-05, 9.286099999999964e-05, 9.265300000000157e-05, 9.266700000000114e-05, 9.263799999999905e-05, 9.261099999999939e-05, 9.313899999999903e-05, 9.252800000000144e-05, 9.229200000000076e-05, 9.293100000000096e-05, 9.240299999999785e-05]</msg>
<status status="PASS" starttime="20201030 10:59:12.161" endtime="20201030 10:59:12.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.157" endtime="20201030 10:59:12.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:12.169" endtime="20201030 10:59:12.188"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.167" endtime="20201030 10:59:12.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.166" endtime="20201030 10:59:12.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.806" endtime="20201030 10:59:12.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:11.805" endtime="20201030 10:59:12.189"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.198" endtime="20201030 10:59:12.219"></status>
</kw>
<msg timestamp="20201030 10:59:12.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:12.196" endtime="20201030 10:59:12.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:12.220" endtime="20201030 10:59:12.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.223" endtime="20201030 10:59:12.224"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.194" endtime="20201030 10:59:12.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.192" endtime="20201030 10:59:12.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.232" endtime="20201030 10:59:12.517"></status>
</kw>
<msg timestamp="20201030 10:59:12.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020387736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020481181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:12.230" endtime="20201030 10:59:12.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020387736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020481181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:12.521" endtime="20201030 10:59:12.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.529" endtime="20201030 10:59:12.531"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.228" endtime="20201030 10:59:12.531"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.226" endtime="20201030 10:59:12.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:12.535" level="INFO">${RESULT} = [{'diff': 9.344500000000103e-05}, {'diff': 9.331900000000143e-05}, {'diff': 9.379099999999932e-05}, {'diff': 9.380499999999889e-05}, {'diff': 9.384700000000107e-05}, {'diff': 9.363899999999953e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:12.532" endtime="20201030 10:59:12.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:12.540" level="INFO">${ACCURACY} = {'diff': [9.344500000000103e-05, 9.331900000000143e-05, 9.379099999999932e-05, 9.380499999999889e-05, 9.384700000000107e-05, 9.363899999999953e-05, 9.381899999999846e-05, 9.37079999999979e-05, 9.35419...</msg>
<status status="PASS" starttime="20201030 10:59:12.536" endtime="20201030 10:59:12.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.545" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 10:59:12.544" endtime="20201030 10:59:12.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.547" level="INFO">VALUE: [9.344500000000103e-05, 9.331900000000143e-05, 9.379099999999932e-05, 9.380499999999889e-05, 9.384700000000107e-05, 9.363899999999953e-05, 9.381899999999846e-05, 9.37079999999979e-05, 9.354199999999854e-05, 9.384800000000054e-05, 9.388899999999978e-05, 9.35269999999995e-05, 9.37079999999979e-05, 9.362499999999996e-05, 9.402799999999947e-05, 9.349999999999983e-05, 9.340299999999885e-05, 9.363899999999953e-05, 9.369499999999781e-05, 9.400000000000033e-05, 9.356900000000168e-05, 9.34859999999968e-05, 9.341700000000189e-05, 9.326400000000262e-05, 9.341599999999894e-05, 9.419399999999883e-05, 9.427799999999972e-05, 9.422199999999797e-05, 9.355600000000158e-05, 9.352799999999897e-05, 9.39590000000011e-05, 9.362499999999996e-05, 9.411200000000036e-05, 9.393100000000196e-05, 9.400000000000033e-05, 9.400000000000033e-05, 9.355500000000211e-05, 9.34720000000007e-05, 9.366699999999867e-05, 9.372200000000094e-05, 9.331999999999743e-05, 9.362499999999996e-05, 9.372300000000042e-05, 9.337499999999971e-05, 9.35139999999994e-05, 9.384700000000107e-05, 9.422200000000144e-05, 9.354199999999854e-05, 9.361100000000039e-05, 9.387500000000021e-05]</msg>
<status status="PASS" starttime="20201030 10:59:12.546" endtime="20201030 10:59:12.548"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.541" endtime="20201030 10:59:12.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:12.552" endtime="20201030 10:59:12.571"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.551" endtime="20201030 10:59:12.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.549" endtime="20201030 10:59:12.572"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.190" endtime="20201030 10:59:12.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.190" endtime="20201030 10:59:12.573"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.581" endtime="20201030 10:59:12.600"></status>
</kw>
<msg timestamp="20201030 10:59:12.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:12.580" endtime="20201030 10:59:12.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:12.602" endtime="20201030 10:59:12.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.604" endtime="20201030 10:59:12.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.577" endtime="20201030 10:59:12.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.575" endtime="20201030 10:59:12.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.613" endtime="20201030 10:59:12.900"></status>
</kw>
<msg timestamp="20201030 10:59:12.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019398208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019493056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:12.612" endtime="20201030 10:59:12.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019398208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019493056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:12.904" endtime="20201030 10:59:12.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.912" endtime="20201030 10:59:12.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.609" endtime="20201030 10:59:12.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.607" endtime="20201030 10:59:12.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:12.919" level="INFO">${RESULT} = [{'diff': 9.484800000000154e-05}, {'diff': 9.490300000000035e-05}, {'diff': 9.442999999999951e-05}, {'diff': 9.469499999999881e-05}, {'diff': 9.475000000000108e-05}, {'diff': 9.46530000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:12.916" endtime="20201030 10:59:12.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:12.923" level="INFO">${ACCURACY} = {'diff': [9.484800000000154e-05, 9.490300000000035e-05, 9.442999999999951e-05, 9.469499999999881e-05, 9.475000000000108e-05, 9.46530000000001e-05, 9.43469999999981e-05, 9.433299999999853e-05, 9.447299...</msg>
<status status="PASS" starttime="20201030 10:59:12.920" endtime="20201030 10:59:12.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.927" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 10:59:12.926" endtime="20201030 10:59:12.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.930" level="INFO">VALUE: [9.484800000000154e-05, 9.490300000000035e-05, 9.442999999999951e-05, 9.469499999999881e-05, 9.475000000000108e-05, 9.46530000000001e-05, 9.43469999999981e-05, 9.433299999999853e-05, 9.44729999999977e-05, 9.501399999999743e-05, 9.46530000000001e-05, 9.498600000000176e-05, 9.51660000000007e-05, 9.450000000000083e-05, 9.444399999999908e-05, 9.52079999999994e-05, 9.502800000000047e-05, 9.444500000000203e-05, 9.429199999999929e-05, 9.44720000000017e-05, 9.467999999999976e-05, 9.468099999999924e-05, 9.472199999999847e-05, 9.44859999999978e-05, 9.506899999999971e-05, 9.48469999999986e-05, 9.458300000000225e-05, 9.46530000000001e-05, 9.443099999999899e-05, 9.477800000000022e-05, 9.472300000000142e-05, 9.494499999999906e-05, 9.444400000000255e-05, 9.515200000000112e-05, 9.51660000000007e-05, 9.425000000000058e-05, 9.462499999999749e-05, 9.49720000000022e-05, 9.445799999999865e-05, 9.473600000000151e-05, 9.511099999999842e-05, 9.484700000000207e-05, 9.472300000000142e-05, 9.511100000000189e-05, 9.456899999999921e-05, 9.497199999999872e-05, 9.431900000000243e-05, 9.463900000000053e-05, 9.499999999999786e-05, 9.429199999999929e-05]</msg>
<status status="PASS" starttime="20201030 10:59:12.928" endtime="20201030 10:59:12.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.924" endtime="20201030 10:59:12.931"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:12.934" endtime="20201030 10:59:12.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.933" endtime="20201030 10:59:12.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.932" endtime="20201030 10:59:12.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.574" endtime="20201030 10:59:12.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.573" endtime="20201030 10:59:12.955"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.964" endtime="20201030 10:59:12.985"></status>
</kw>
<msg timestamp="20201030 10:59:12.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:12.962" endtime="20201030 10:59:12.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:12.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:12.987" endtime="20201030 10:59:12.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.989" endtime="20201030 10:59:12.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.960" endtime="20201030 10:59:12.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.958" endtime="20201030 10:59:12.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:12.998" endtime="20201030 10:59:13.284"></status>
</kw>
<msg timestamp="20201030 10:59:13.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022847333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:12.997" endtime="20201030 10:59:13.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022847333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:13.288" endtime="20201030 10:59:13.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.297" endtime="20201030 10:59:13.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.994" endtime="20201030 10:59:13.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.992" endtime="20201030 10:59:13.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:13.303" level="INFO">${RESULT} = [{'diff': 9.593000000000101e-05}, {'diff': 9.61530000000016e-05}, {'diff': 9.586100000000264e-05}, {'diff': 9.591700000000092e-05}, {'diff': 9.569499999999981e-05}, {'diff': 9.566700000000067e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:13.300" endtime="20201030 10:59:13.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:13.307" level="INFO">${ACCURACY} = {'diff': [9.593000000000101e-05, 9.61530000000016e-05, 9.586100000000264e-05, 9.591700000000092e-05, 9.569499999999981e-05, 9.566700000000067e-05, 9.59859999999993e-05, 9.594500000000006e-05, 9.526400...</msg>
<status status="PASS" starttime="20201030 10:59:13.304" endtime="20201030 10:59:13.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.311" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 10:59:13.310" endtime="20201030 10:59:13.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.314" level="INFO">VALUE: [9.593000000000101e-05, 9.61530000000016e-05, 9.586100000000264e-05, 9.591700000000092e-05, 9.569499999999981e-05, 9.566700000000067e-05, 9.59859999999993e-05, 9.594500000000006e-05, 9.526400000000115e-05, 9.622199999999997e-05, 9.572200000000294e-05, 9.556900000000021e-05, 9.587500000000221e-05, 9.573600000000251e-05, 9.579199999999732e-05, 9.59859999999993e-05, 9.544499999999956e-05, 9.613899999999856e-05, 9.5333999999999e-05, 9.54859999999988e-05, 9.59019999999984e-05, 9.545799999999965e-05, 9.612499999999899e-05, 9.544400000000008e-05, 9.588900000000178e-05, 9.601399999999843e-05, 9.565299999999763e-05, 9.554200000000054e-05, 9.601399999999843e-05, 9.607000000000018e-05, 9.561200000000186e-05, 9.572199999999947e-05, 9.538900000000128e-05, 9.60140000000019e-05, 9.593000000000101e-05, 9.579200000000079e-05, 9.586099999999917e-05, 9.605600000000061e-05, 9.58339999999995e-05, 9.577800000000122e-05, 9.581900000000046e-05, 9.529100000000082e-05, 9.593000000000101e-05, 9.591599999999798e-05, 9.613900000000203e-05, 9.569400000000033e-05, 9.591699999999745e-05, 9.623600000000301e-05, 9.573600000000251e-05, 9.626400000000215e-05]</msg>
<status status="PASS" starttime="20201030 10:59:13.312" endtime="20201030 10:59:13.315"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.308" endtime="20201030 10:59:13.316"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:13.320" endtime="20201030 10:59:13.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.318" endtime="20201030 10:59:13.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.317" endtime="20201030 10:59:13.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.956" endtime="20201030 10:59:13.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:12.956" endtime="20201030 10:59:13.340"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.349" endtime="20201030 10:59:13.367"></status>
</kw>
<msg timestamp="20201030 10:59:13.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:13.347" endtime="20201030 10:59:13.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:13.369" endtime="20201030 10:59:13.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.371" endtime="20201030 10:59:13.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.345" endtime="20201030 10:59:13.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.343" endtime="20201030 10:59:13.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.380" endtime="20201030 10:59:13.665"></status>
</kw>
<msg timestamp="20201030 10:59:13.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019935111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020031569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:13.378" endtime="20201030 10:59:13.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019935111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020031569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:13.669" endtime="20201030 10:59:13.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.678" endtime="20201030 10:59:13.679"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.376" endtime="20201030 10:59:13.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.374" endtime="20201030 10:59:13.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:13.684" level="INFO">${RESULT} = [{'diff': 9.645800000000065e-05}, {'diff': 9.633300000000053e-05}, {'diff': 9.663899999999906e-05}, {'diff': 9.659700000000035e-05}, {'diff': 9.713900000000303e-05}, {'diff': 9.676399999999918e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:13.681" endtime="20201030 10:59:13.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:13.689" level="INFO">${ACCURACY} = {'diff': [9.645800000000065e-05, 9.633300000000053e-05, 9.663899999999906e-05, 9.659700000000035e-05, 9.713900000000303e-05, 9.676399999999918e-05, 9.657000000000068e-05, 9.699999999999986e-05, 9.7070...</msg>
<status status="PASS" starttime="20201030 10:59:13.685" endtime="20201030 10:59:13.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.693" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 10:59:13.692" endtime="20201030 10:59:13.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.696" level="INFO">VALUE: [9.645800000000065e-05, 9.633300000000053e-05, 9.663899999999906e-05, 9.659700000000035e-05, 9.713900000000303e-05, 9.676399999999918e-05, 9.657000000000068e-05, 9.699999999999986e-05, 9.707000000000118e-05, 9.662499999999949e-05, 9.69860000000003e-05, 9.705499999999867e-05, 9.630499999999792e-05, 9.644400000000108e-05, 9.676399999999918e-05, 9.656900000000121e-05, 9.676399999999918e-05, 9.630600000000086e-05, 9.673699999999952e-05, 9.71799999999988e-05, 9.665199999999916e-05, 9.661099999999992e-05, 9.692999999999855e-05, 9.627799999999825e-05, 9.706900000000171e-05, 9.655600000000111e-05, 9.644500000000056e-05, 9.640299999999838e-05, 9.705600000000161e-05, 9.707000000000118e-05, 9.624999999999911e-05, 9.677800000000222e-05, 9.67080000000009e-05, 9.658299999999731e-05, 9.676399999999918e-05, 9.690300000000235e-05, 9.697199999999725e-05, 9.658400000000025e-05, 9.658400000000025e-05, 9.688899999999931e-05, 9.665299999999863e-05, 9.691599999999898e-05, 9.636099999999967e-05, 9.68470000000006e-05, 9.691599999999898e-05, 9.693000000000201e-05, 9.677799999999875e-05, 9.649999999999936e-05, 9.641700000000142e-05, 9.662500000000296e-05]</msg>
<status status="PASS" starttime="20201030 10:59:13.694" endtime="20201030 10:59:13.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.690" endtime="20201030 10:59:13.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:13.701" endtime="20201030 10:59:13.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.699" endtime="20201030 10:59:13.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.698" endtime="20201030 10:59:13.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.341" endtime="20201030 10:59:13.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.341" endtime="20201030 10:59:13.721"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.731" endtime="20201030 10:59:13.751"></status>
</kw>
<msg timestamp="20201030 10:59:13.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:13.729" endtime="20201030 10:59:13.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:13.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:13.752" endtime="20201030 10:59:13.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.754" endtime="20201030 10:59:13.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.726" endtime="20201030 10:59:13.757"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.724" endtime="20201030 10:59:13.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:13.763" endtime="20201030 10:59:14.050"></status>
</kw>
<msg timestamp="20201030 10:59:14.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020769694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02086775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:13.762" endtime="20201030 10:59:14.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020769694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02086775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:14.054" endtime="20201030 10:59:14.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.062" endtime="20201030 10:59:14.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.759" endtime="20201030 10:59:14.064"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.758" endtime="20201030 10:59:14.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:14.069" level="INFO">${RESULT} = [{'diff': 9.805600000000261e-05}, {'diff': 9.809699999999838e-05}, {'diff': 9.79860000000013e-05}, {'diff': 9.743099999999852e-05}, {'diff': 9.73470000000011e-05}, {'diff': 9.750000000000036e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:14.065" endtime="20201030 10:59:14.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:14.073" level="INFO">${ACCURACY} = {'diff': [9.805600000000261e-05, 9.809699999999838e-05, 9.79860000000013e-05, 9.743099999999852e-05, 9.73470000000011e-05, 9.750000000000036e-05, 9.758300000000178e-05, 9.747199999999775e-05, 9.824999...</msg>
<status status="PASS" starttime="20201030 10:59:14.070" endtime="20201030 10:59:14.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.077" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 10:59:14.076" endtime="20201030 10:59:14.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.079" level="INFO">VALUE: [9.805600000000261e-05, 9.809699999999838e-05, 9.79860000000013e-05, 9.743099999999852e-05, 9.73470000000011e-05, 9.750000000000036e-05, 9.758300000000178e-05, 9.747199999999775e-05, 9.824999999999764e-05, 9.743099999999852e-05, 9.744400000000208e-05, 9.727799999999925e-05, 9.748599999999732e-05, 9.806999999999871e-05, 9.800000000000086e-05, 9.795900000000163e-05, 9.762500000000049e-05, 9.733299999999806e-05, 9.744400000000208e-05, 9.787499999999727e-05, 9.787500000000074e-05, 9.775000000000061e-05, 9.800000000000086e-05, 9.773600000000104e-05, 9.782000000000193e-05, 9.768099999999877e-05, 9.750000000000036e-05, 9.727800000000272e-05, 9.729099999999935e-05, 9.813900000000056e-05, 9.74860000000008e-05, 9.808299999999881e-05, 9.812499999999752e-05, 9.806999999999871e-05, 9.818099999999927e-05, 9.808399999999828e-05, 9.79869999999973e-05, 9.81669999999997e-05, 9.729100000000282e-05, 9.813900000000056e-05, 9.775000000000061e-05, 9.751399999999993e-05, 9.75279999999995e-05, 9.740299999999938e-05, 9.823600000000154e-05, 9.758400000000125e-05, 9.830499999999992e-05, 9.793099999999902e-05, 9.765200000000016e-05, 9.75409999999996e-05]</msg>
<status status="PASS" starttime="20201030 10:59:14.078" endtime="20201030 10:59:14.080"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.073" endtime="20201030 10:59:14.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:14.084" endtime="20201030 10:59:14.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.083" endtime="20201030 10:59:14.104"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.082" endtime="20201030 10:59:14.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.722" endtime="20201030 10:59:14.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:13.722" endtime="20201030 10:59:14.105"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.114" endtime="20201030 10:59:14.133"></status>
</kw>
<msg timestamp="20201030 10:59:14.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.112" endtime="20201030 10:59:14.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.134" endtime="20201030 10:59:14.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.137" endtime="20201030 10:59:14.138"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.110" endtime="20201030 10:59:14.139"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.108" endtime="20201030 10:59:14.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.145" endtime="20201030 10:59:14.431"></status>
</kw>
<msg timestamp="20201030 10:59:14.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020270736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020369347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:14.144" endtime="20201030 10:59:14.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020270736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020369347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:14.435" endtime="20201030 10:59:14.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.443" endtime="20201030 10:59:14.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.141" endtime="20201030 10:59:14.446"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.140" endtime="20201030 10:59:14.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:14.450" level="INFO">${RESULT} = [{'diff': 9.861099999999845e-05}, {'diff': 9.929200000000082e-05}, {'diff': 9.854200000000007e-05}, {'diff': 9.891699999999698e-05}, {'diff': 9.913899999999809e-05}, {'diff': 9.875000000000161e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:14.447" endtime="20201030 10:59:14.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:14.454" level="INFO">${ACCURACY} = {'diff': [9.861099999999845e-05, 9.929200000000082e-05, 9.854200000000007e-05, 9.891699999999698e-05, 9.913899999999809e-05, 9.875000000000161e-05, 9.894499999999959e-05, 9.857000000000268e-05, 9.9276...</msg>
<status status="PASS" starttime="20201030 10:59:14.451" endtime="20201030 10:59:14.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.458" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 10:59:14.457" endtime="20201030 10:59:14.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.461" level="INFO">VALUE: [9.861099999999845e-05, 9.929200000000082e-05, 9.854200000000007e-05, 9.891699999999698e-05, 9.913899999999809e-05, 9.875000000000161e-05, 9.894499999999959e-05, 9.857000000000268e-05, 9.927699999999831e-05, 9.841600000000048e-05, 9.86670000000002e-05, 9.912499999999852e-05, 9.900000000000186e-05, 9.84860000000018e-05, 9.913900000000156e-05, 9.85419999999966e-05, 9.916600000000123e-05, 9.859800000000182e-05, 9.829100000000035e-05, 9.923599999999907e-05, 9.844400000000308e-05, 9.894400000000012e-05, 9.829199999999982e-05, 9.893100000000002e-05, 9.89999999999984e-05, 9.851400000000093e-05, 9.88059999999999e-05, 9.873599999999857e-05, 9.833299999999906e-05, 9.89020000000014e-05, 9.847199999999875e-05, 9.844499999999909e-05, 9.845800000000265e-05, 9.855599999999964e-05, 9.897199999999926e-05, 9.831999999999896e-05, 9.869499999999934e-05, 9.894400000000012e-05, 9.862500000000149e-05, 9.838900000000081e-05, 9.86800000000003e-05, 9.887499999999827e-05, 9.861099999999845e-05, 9.856999999999921e-05, 9.91809999999968e-05, 9.894499999999959e-05, 9.883399999999903e-05, 9.862500000000149e-05, 9.836100000000167e-05, 9.911100000000242e-05]</msg>
<status status="PASS" starttime="20201030 10:59:14.459" endtime="20201030 10:59:14.462"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.455" endtime="20201030 10:59:14.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:14.467" endtime="20201030 10:59:14.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.465" endtime="20201030 10:59:14.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.464" endtime="20201030 10:59:14.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.106" endtime="20201030 10:59:14.487"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.105" endtime="20201030 10:59:14.487"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.496" endtime="20201030 10:59:14.514"></status>
</kw>
<msg timestamp="20201030 10:59:14.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.494" endtime="20201030 10:59:14.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.516" endtime="20201030 10:59:14.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.518" endtime="20201030 10:59:14.520"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.492" endtime="20201030 10:59:14.520"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.490" endtime="20201030 10:59:14.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.527" endtime="20201030 10:59:14.815"></status>
</kw>
<msg timestamp="20201030 10:59:14.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019880708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019980486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:14.526" endtime="20201030 10:59:14.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019880708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019980486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:14.819" endtime="20201030 10:59:14.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.828" endtime="20201030 10:59:14.829"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.523" endtime="20201030 10:59:14.830"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.521" endtime="20201030 10:59:14.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:14.834" level="INFO">${RESULT} = [{'diff': 9.977799999999828e-05}, {'diff': 9.974999999999914e-05}, {'diff': 0.00010008300000000081}, {'diff': 9.995800000000069e-05}, {'diff': 9.981900000000099e-05}, {'diff': 9.934699999999963e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:14.831" endtime="20201030 10:59:14.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:14.839" level="INFO">${ACCURACY} = {'diff': [9.977799999999828e-05, 9.974999999999914e-05, 0.00010008300000000081, 9.995800000000069e-05, 9.981900000000099e-05, 9.934699999999963e-05, 0.00010012499999999952, 0.00010008300000000081, 9.9...</msg>
<status status="PASS" starttime="20201030 10:59:14.835" endtime="20201030 10:59:14.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.843" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 10:59:14.842" endtime="20201030 10:59:14.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.846" level="INFO">VALUE: [9.977799999999828e-05, 9.974999999999914e-05, 0.00010008300000000081, 9.995800000000069e-05, 9.981900000000099e-05, 9.934699999999963e-05, 0.00010012499999999952, 0.00010008300000000081, 9.979200000000132e-05, 9.938900000000181e-05, 9.990299999999841e-05, 9.9722e-05, 9.933300000000006e-05, 9.938900000000181e-05, 9.951400000000193e-05, 9.938900000000181e-05, 9.994400000000112e-05, 0.00010023600000000008, 9.930599999999692e-05, 9.977799999999828e-05, 9.965200000000216e-05, 0.00010006900000000124, 9.99159999999985e-05, 0.00010005500000000167, 9.933300000000006e-05, 9.950000000000236e-05, 9.945800000000019e-05, 9.969500000000034e-05, 0.0001002220000000005, 9.98479999999996e-05, 9.99999999999994e-05, 9.9722e-05, 9.995799999999722e-05, 9.933300000000006e-05, 9.993000000000155e-05, 9.98609999999997e-05, 9.98479999999996e-05, 9.993100000000102e-05, 9.927800000000125e-05, 9.98609999999997e-05, 9.998599999999983e-05, 0.00010000000000000286, 0.00010012500000000299, 9.991700000000145e-05, 0.00010008300000000081, 9.96670000000012e-05, 9.945800000000019e-05, 9.959699999999988e-05, 9.977800000000175e-05, 9.979200000000132e-05]</msg>
<status status="PASS" starttime="20201030 10:59:14.844" endtime="20201030 10:59:14.847"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.840" endtime="20201030 10:59:14.847"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:14.851" endtime="20201030 10:59:14.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.849" endtime="20201030 10:59:14.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.848" endtime="20201030 10:59:14.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.488" endtime="20201030 10:59:14.871"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.488" endtime="20201030 10:59:14.871"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.880" endtime="20201030 10:59:14.898"></status>
</kw>
<msg timestamp="20201030 10:59:14.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.878" endtime="20201030 10:59:14.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:14.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:14.900" endtime="20201030 10:59:14.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.902" endtime="20201030 10:59:14.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.876" endtime="20201030 10:59:14.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.874" endtime="20201030 10:59:14.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:14.911" endtime="20201030 10:59:15.197"></status>
</kw>
<msg timestamp="20201030 10:59:15.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019356528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019457417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:14.909" endtime="20201030 10:59:15.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019356528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019457417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:15.201" endtime="20201030 10:59:15.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.209" endtime="20201030 10:59:15.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.907" endtime="20201030 10:59:15.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.905" endtime="20201030 10:59:15.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:15.216" level="INFO">${RESULT} = [{'diff': 0.00010088899999999984}, {'diff': 0.00010097200000000126}, {'diff': 0.00010059700000000088}, {'diff': 0.00010093100000000202}, {'diff': 0.00010115299999999966}, {'diff': 0.000100972000000001...</msg>
<status status="PASS" starttime="20201030 10:59:15.213" endtime="20201030 10:59:15.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:15.220" level="INFO">${ACCURACY} = {'diff': [0.00010088899999999984, 0.00010097200000000126, 0.00010059700000000088, 0.00010093100000000202, 0.00010115299999999966, 0.00010097200000000126, 0.0001008610000000007, 0.00010090199999999994,...</msg>
<status status="PASS" starttime="20201030 10:59:15.217" endtime="20201030 10:59:15.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.224" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 10:59:15.223" endtime="20201030 10:59:15.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.226" level="INFO">VALUE: [0.00010088899999999984, 0.00010097200000000126, 0.00010059700000000088, 0.00010093100000000202, 0.00010115299999999966, 0.00010097200000000126, 0.0001008610000000007, 0.00010090199999999994, 0.00010109800000000085, 0.00010063900000000306, 0.0001011939999999989, 0.0001003610000000002, 0.00010070800000000144, 0.00010066699999999873, 0.0001008610000000007, 0.00010094499999999812, 0.00010076399999999971, 0.00010122300000000098, 0.00010087500000000027, 0.00010058300000000131, 0.00010044399999999815, 0.00010126399999999675, 0.00010102799999999953, 0.0001010000000000004, 0.000100722000000001, 0.00010115299999999966, 0.00010043100000000152, 0.00010112500000000052, 0.00010075000000000014, 0.00010037499999999977, 0.00010092999999999908, 0.00010101399999999996, 0.00010084700000000113, 0.000100722000000001, 0.00010073600000000058, 0.00010083299999999809, 0.00010027799999999878, 0.00010113900000000009, 0.00010117999999999933, 0.0001011939999999989, 0.00010030499999999845, 0.00010052799999999903, 0.0001006670000000022, 0.00010059699999999741, 0.00010079199999999885, 0.00010087500000000027, 0.00010033399999999706, 0.00010113900000000009, 0.00010058400000000078, 0.00010069400000000187]</msg>
<status status="PASS" starttime="20201030 10:59:15.225" endtime="20201030 10:59:15.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.220" endtime="20201030 10:59:15.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:15.231" endtime="20201030 10:59:15.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.230" endtime="20201030 10:59:15.251"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.229" endtime="20201030 10:59:15.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.872" endtime="20201030 10:59:15.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:14.872" endtime="20201030 10:59:15.252"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.261" endtime="20201030 10:59:15.280"></status>
</kw>
<msg timestamp="20201030 10:59:15.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:15.259" endtime="20201030 10:59:15.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:15.281" endtime="20201030 10:59:15.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.283" endtime="20201030 10:59:15.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.256" endtime="20201030 10:59:15.286"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.254" endtime="20201030 10:59:15.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.292" endtime="20201030 10:59:15.578"></status>
</kw>
<msg timestamp="20201030 10:59:15.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020264056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020365486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:15.291" endtime="20201030 10:59:15.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020264056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020365486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:15.582" endtime="20201030 10:59:15.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.590" endtime="20201030 10:59:15.591"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.288" endtime="20201030 10:59:15.592"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.287" endtime="20201030 10:59:15.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:15.596" level="INFO">${RESULT} = [{'diff': 0.00010142999999999958}, {'diff': 0.0001015549999999997}, {'diff': 0.00010201400000000097}, {'diff': 0.00010151400000000046}, {'diff': 0.00010175000000000115}, {'diff': 0.0001019439999999996...</msg>
<status status="PASS" starttime="20201030 10:59:15.593" endtime="20201030 10:59:15.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:15.600" level="INFO">${ACCURACY} = {'diff': [0.00010142999999999958, 0.0001015549999999997, 0.00010201400000000097, 0.00010151400000000046, 0.00010175000000000115, 0.00010194399999999965, 0.00010141699999999948, 0.00010136200000000067,...</msg>
<status status="PASS" starttime="20201030 10:59:15.597" endtime="20201030 10:59:15.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.604" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 10:59:15.603" endtime="20201030 10:59:15.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.607" level="INFO">VALUE: [0.00010142999999999958, 0.0001015549999999997, 0.00010201400000000097, 0.00010151400000000046, 0.00010175000000000115, 0.00010194399999999965, 0.00010141699999999948, 0.00010136200000000067, 0.00010170799999999897, 0.00010127700000000031, 0.00010138900000000034, 0.00010216700000000023, 0.0001018610000000017, 0.00010134700000000163, 0.00010223600000000208, 0.00010190300000000041, 0.00010152800000000003, 0.00010138900000000034, 0.00010188800000000137, 0.00010179100000000038, 0.00010194399999999965, 0.00010191699999999998, 0.00010140299999999991, 0.00010172199999999854, 0.00010202800000000053, 0.00010186099999999823, 0.00010209699999999891, 0.00010144500000000209, 0.00010174999999999768, 0.00010147200000000176, 0.00010177800000000028, 0.00010156899999999927, 0.00010147199999999829, 0.00010151400000000046, 0.00010155600000000264, 0.00010161100000000145, 0.00010173600000000158, 0.00010194499999999912, 0.0001020000000000014, 0.00010158299999999884, 0.00010176399999999725, 0.00010193000000000008, 0.00010165300000000016, 0.00010175000000000115, 0.00010190300000000041, 0.00010141699999999948, 0.00010158399999999831, 0.00010226400000000122, 0.00010172199999999854, 0.00010211099999999848]</msg>
<status status="PASS" starttime="20201030 10:59:15.606" endtime="20201030 10:59:15.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.601" endtime="20201030 10:59:15.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:15.613" endtime="20201030 10:59:15.632"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.611" endtime="20201030 10:59:15.633"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.610" endtime="20201030 10:59:15.633"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.253" endtime="20201030 10:59:15.633"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.252" endtime="20201030 10:59:15.633"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.642" endtime="20201030 10:59:15.660"></status>
</kw>
<msg timestamp="20201030 10:59:15.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:15.640" endtime="20201030 10:59:15.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:15.662" endtime="20201030 10:59:15.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.664" endtime="20201030 10:59:15.666"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.638" endtime="20201030 10:59:15.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.636" endtime="20201030 10:59:15.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.674" endtime="20201030 10:59:15.958"></status>
</kw>
<msg timestamp="20201030 10:59:15.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019317833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01942025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:15.672" endtime="20201030 10:59:15.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019317833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01942025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:15.962" endtime="20201030 10:59:15.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:15.970" endtime="20201030 10:59:15.972"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.670" endtime="20201030 10:59:15.973"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.668" endtime="20201030 10:59:15.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:15.977" level="INFO">${RESULT} = [{'diff': 0.00010241700000000048}, {'diff': 0.00010307000000000024}, {'diff': 0.00010298599999999936}, {'diff': 0.0001031810000000008}, {'diff': 0.00010277799999999782}, {'diff': 0.000102722000000003}...</msg>
<status status="PASS" starttime="20201030 10:59:15.974" endtime="20201030 10:59:15.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:15.982" level="INFO">${ACCURACY} = {'diff': [0.00010241700000000048, 0.00010307000000000024, 0.00010298599999999936, 0.0001031810000000008, 0.00010277799999999782, 0.000102722000000003, 0.00010252700000000156, 0.00010276399999999825, 0...</msg>
<status status="PASS" starttime="20201030 10:59:15.978" endtime="20201030 10:59:15.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.986" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 10:59:15.985" endtime="20201030 10:59:15.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:15.988" level="INFO">VALUE: [0.00010241700000000048, 0.00010307000000000024, 0.00010298599999999936, 0.0001031810000000008, 0.00010277799999999782, 0.000102722000000003, 0.00010252700000000156, 0.00010276399999999825, 0.00010302800000000154, 0.00010299999999999893, 0.00010249999999999843, 0.00010259799999999888, 0.00010315299999999819, 0.00010312499999999905, 0.00010252799999999757, 0.00010291599999999804, 0.00010297199999999979, 0.0001032359999999996, 0.00010288899999999837, 0.0001027359999999991, 0.00010308399999999981, 0.00010280599999999696, 0.00010233399999999906, 0.00010311199999999895, 0.00010286099999999923, 0.00010277699999999834, 0.00010307000000000024, 0.00010248600000000233, 0.00010298600000000283, 0.00010276399999999825, 0.00010279200000000085, 0.00010308300000000034, 0.00010323699999999908, 0.00010254100000000113, 0.00010277699999999834, 0.0001023610000000022, 0.00010284699999999966, 0.0001027359999999991, 0.00010324999999999918, 0.0001023749999999983, 0.00010262500000000202, 0.00010323699999999908, 0.00010330499999999798, 0.00010230599999999992, 0.00010286099999999923, 0.00010243000000000058, 0.00010316700000000123, 0.00010238899999999787, 0.00010287500000000227, 0.0001027359999999991]</msg>
<status status="PASS" starttime="20201030 10:59:15.987" endtime="20201030 10:59:15.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.982" endtime="20201030 10:59:15.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:15.993" endtime="20201030 10:59:16.013"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.992" endtime="20201030 10:59:16.013"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.991" endtime="20201030 10:59:16.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.634" endtime="20201030 10:59:16.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:15.634" endtime="20201030 10:59:16.014"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.023" endtime="20201030 10:59:16.041"></status>
</kw>
<msg timestamp="20201030 10:59:16.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:16.021" endtime="20201030 10:59:16.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:16.042" endtime="20201030 10:59:16.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.045" endtime="20201030 10:59:16.046"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.019" endtime="20201030 10:59:16.047"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.016" endtime="20201030 10:59:16.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.054" endtime="20201030 10:59:16.341"></status>
</kw>
<msg timestamp="20201030 10:59:16.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019453722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019557694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:16.052" endtime="20201030 10:59:16.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019453722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019557694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:16.345" endtime="20201030 10:59:16.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.353" endtime="20201030 10:59:16.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.050" endtime="20201030 10:59:16.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.048" endtime="20201030 10:59:16.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:16.360" level="INFO">${RESULT} = [{'diff': 0.00010397200000000079}, {'diff': 0.00010344400000000115}, {'diff': 0.00010356900000000127}, {'diff': 0.00010340300000000191}, {'diff': 0.00010409700000000091}, {'diff': 0.000104152999999999...</msg>
<status status="PASS" starttime="20201030 10:59:16.357" endtime="20201030 10:59:16.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:16.364" level="INFO">${ACCURACY} = {'diff': [0.00010397200000000079, 0.00010344400000000115, 0.00010356900000000127, 0.00010340300000000191, 0.00010409700000000091, 0.00010415299999999919, 0.00010366700000000173, 0.00010357000000000074...</msg>
<status status="PASS" starttime="20201030 10:59:16.361" endtime="20201030 10:59:16.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.368" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 10:59:16.367" endtime="20201030 10:59:16.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.370" level="INFO">VALUE: [0.00010397200000000079, 0.00010344400000000115, 0.00010356900000000127, 0.00010340300000000191, 0.00010409700000000091, 0.00010415299999999919, 0.00010366700000000173, 0.00010357000000000074, 0.00010376399999999925, 0.0001037360000000001, 0.00010391599999999904, 0.00010347200000000029, 0.00010340300000000191, 0.00010363899999999912, 0.00010352799999999857, 0.00010341700000000148, 0.00010422199999999757, 0.0001038749999999998, 0.00010344400000000115, 0.00010388899999999937, 0.00010359700000000041, 0.00010345800000000072, 0.00010336099999999973, 0.00010342999999999811, 0.0001037360000000001, 0.00010347200000000029, 0.00010411099999999701, 0.00010388899999999937, 0.00010402799999999907, 0.00010358300000000084, 0.00010361099999999998, 0.00010393000000000208, 0.00010356999999999728, 0.00010345900000000019, 0.00010415299999999919, 0.00010357000000000074, 0.00010390300000000241, 0.00010390299999999894, 0.00010343000000000158, 0.00010355499999999823, 0.0001037360000000001, 0.00010383299999999762, 0.00010348599999999986, 0.00010347200000000029, 0.00010363899999999912, 0.00010348599999999986, 0.00010366699999999826, 0.00010412500000000005, 0.0001040420000000021, 0.00010329099999999841]</msg>
<status status="PASS" starttime="20201030 10:59:16.369" endtime="20201030 10:59:16.378"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.364" endtime="20201030 10:59:16.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:16.383" endtime="20201030 10:59:16.402"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.381" endtime="20201030 10:59:16.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.380" endtime="20201030 10:59:16.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.015" endtime="20201030 10:59:16.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.014" endtime="20201030 10:59:16.403"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.412" endtime="20201030 10:59:16.434"></status>
</kw>
<msg timestamp="20201030 10:59:16.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:16.411" endtime="20201030 10:59:16.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:16.435" endtime="20201030 10:59:16.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.438" endtime="20201030 10:59:16.440"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.408" endtime="20201030 10:59:16.440"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.406" endtime="20201030 10:59:16.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.447" endtime="20201030 10:59:16.732"></status>
</kw>
<msg timestamp="20201030 10:59:16.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022679264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:16.445" endtime="20201030 10:59:16.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022679264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:16.736" endtime="20201030 10:59:16.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.744" endtime="20201030 10:59:16.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.443" endtime="20201030 10:59:16.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.441" endtime="20201030 10:59:16.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:16.751" level="INFO">${RESULT} = [{'diff': 0.00010491699999999951}, {'diff': 0.00010445899999999772}, {'diff': 0.0001046940000000024}, {'diff': 0.00010488900000000037}, {'diff': 0.00010517999999999986}, {'diff': 0.0001046110000000009...</msg>
<status status="PASS" starttime="20201030 10:59:16.748" endtime="20201030 10:59:16.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:16.754" level="INFO">${ACCURACY} = {'diff': [0.00010491699999999951, 0.00010445899999999772, 0.0001046940000000024, 0.00010488900000000037, 0.00010517999999999986, 0.00010461100000000098, 0.00010476400000000025, 0.00010447200000000129,...</msg>
<status status="PASS" starttime="20201030 10:59:16.752" endtime="20201030 10:59:16.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.759" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 10:59:16.758" endtime="20201030 10:59:16.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:16.761" level="INFO">VALUE: [0.00010491699999999951, 0.00010445899999999772, 0.0001046940000000024, 0.00010488900000000037, 0.00010517999999999986, 0.00010461100000000098, 0.00010476400000000025, 0.00010447200000000129, 0.00010483300000000209, 0.00010522200000000204, 0.00010466699999999926, 0.00010502800000000007, 0.00010473700000000058, 0.0001052360000000016, 0.00010484700000000166, 0.00010466599999999979, 0.00010448600000000086, 0.00010486100000000123, 0.00010509699999999844, 0.00010475000000000068, 0.00010500000000000093, 0.0001043339999999976, 0.00010457000000000174, 0.00010497199999999832, 0.00010511099999999801, 0.00010436100000000073, 0.00010430600000000192, 0.00010450000000000043, 0.00010465299999999969, 0.00010515300000000019, 0.00010515300000000019, 0.00010475000000000068, 0.00010493000000000308, 0.00010479099999999991, 0.00010436100000000073, 0.00010512499999999758, 0.00010431899999999855, 0.00010443099999999858, 0.00010472199999999807, 0.00010458399999999785, 0.00010461100000000098, 0.000104514, 0.00010442999999999911, 0.00010492999999999961, 0.00010499999999999746, 0.0001050140000000005, 0.00010493099999999908, 0.00010497200000000179, 0.00010458400000000131, 0.00010518099999999933]</msg>
<status status="PASS" starttime="20201030 10:59:16.760" endtime="20201030 10:59:16.763"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.755" endtime="20201030 10:59:16.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:16.767" endtime="20201030 10:59:16.786"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.765" endtime="20201030 10:59:16.787"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.764" endtime="20201030 10:59:16.787"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.404" endtime="20201030 10:59:16.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.404" endtime="20201030 10:59:16.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:58:38.504" endtime="20201030 10:59:16.788"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 10:58:35.375" endtime="20201030 10:59:16.789" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:16.796" endtime="20201030 10:59:16.816"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.794" endtime="20201030 10:59:16.816"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:16.829" endtime="20201030 10:59:19.854"></status>
</kw>
<msg timestamp="20201030 10:59:19.855" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:16.828" endtime="20201030 10:59:19.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.860" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:19.857" endtime="20201030 10:59:19.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.867" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 10:59:19.863" endtime="20201030 10:59:19.868"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:16.825" endtime="20201030 10:59:19.869"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:16.823" endtime="20201030 10:59:19.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.821" endtime="20201030 10:59:19.871"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 10:59:19.879" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 10:59:19.877" endtime="20201030 10:59:19.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.873" endtime="20201030 10:59:19.880"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.821" endtime="20201030 10:59:19.881"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.820" endtime="20201030 10:59:19.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.883" endtime="20201030 10:59:19.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.819" endtime="20201030 10:59:19.887"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.817" endtime="20201030 10:59:19.888"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:16.793" endtime="20201030 10:59:19.888"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.911" endtime="20201030 10:59:19.929"></status>
</kw>
<msg timestamp="20201030 10:59:19.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:19.908" endtime="20201030 10:59:19.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:19.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:19.932" endtime="20201030 10:59:19.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.939" endtime="20201030 10:59:19.942"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.900" endtime="20201030 10:59:19.943"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.896" endtime="20201030 10:59:19.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:19.957" endtime="20201030 10:59:20.252"></status>
</kw>
<msg timestamp="20201030 10:59:20.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107369194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107374236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:19.954" endtime="20201030 10:59:20.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107369194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107374236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:20.256" endtime="20201030 10:59:20.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.264" endtime="20201030 10:59:20.266"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.949" endtime="20201030 10:59:20.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.945" endtime="20201030 10:59:20.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:20.271" level="INFO">${RESULT} = [{'diff': 5.0420000001771825e-06}, {'diff': 5.041999999733093e-06}, {'diff': 5.0690000001907265e-06}, {'diff': 5.917000000188466e-06}, {'diff': 5.360999999926008e-06}, {'diff': 5.083000000016824e-06},...</msg>
<status status="PASS" starttime="20201030 10:59:20.268" endtime="20201030 10:59:20.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:20.275" level="INFO">${ACCURACY} = {'diff': [5.0420000001771825e-06, 5.041999999733093e-06, 5.0690000001907265e-06, 5.917000000188466e-06, 5.360999999926008e-06, 5.083000000016824e-06, 5.916999999744377e-06, 5.375000000196195e-06, 5.34...</msg>
<status status="PASS" starttime="20201030 10:59:20.272" endtime="20201030 10:59:20.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.280" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 10:59:20.279" endtime="20201030 10:59:20.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.283" level="INFO">VALUE: [5.0420000001771825e-06, 5.041999999733093e-06, 5.0690000001907265e-06, 5.917000000188466e-06, 5.360999999926008e-06, 5.083000000016824e-06, 5.916999999744377e-06, 5.375000000196195e-06, 5.347000000099911e-06, 5.625000000009095e-06, 5.3610000003700975e-06, 5.347000000099911e-06, 5.625000000009095e-06, 5.055000000364629e-06, 5.639000000279282e-06, 5.903000000362368e-06, 5.360999999926008e-06, 5.347000000099911e-06, 5.333000000273813e-06, 5.625000000009095e-06, 5.389000000022293e-06, 5.05600000000328e-06, 5.332999999829724e-06, 5.6389999998351925e-06, 5.3610000003700975e-06, 5.055000000364629e-06, 5.0420000001771825e-06, 5.902999999918279e-06, 5.0690000001907265e-06, 5.6389999998351925e-06, 5.05600000000328e-06, 5.05499999992054e-06, 5.05600000000328e-06, 5.347000000099911e-06, 5.596999999912811e-06, 5.6389999998351925e-06, 5.055000000364629e-06, 5.65199999957855e-06, 5.348000000182651e-06, 5.348000000182651e-06, 5.903000000362368e-06, 5.653000000105379e-06, 5.05499999992054e-06, 5.389000000022293e-06, 5.625000000009095e-06, 5.0420000001771825e-06, 5.625000000009095e-06, 5.625000000009095e-06, 5.05499999992054e-06, 5.666999999931477e-06]</msg>
<status status="PASS" starttime="20201030 10:59:20.281" endtime="20201030 10:59:20.283"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.276" endtime="20201030 10:59:20.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:20.287" endtime="20201030 10:59:20.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.286" endtime="20201030 10:59:20.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.285" endtime="20201030 10:59:20.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.892" endtime="20201030 10:59:20.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.891" endtime="20201030 10:59:20.308"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.317" endtime="20201030 10:59:20.331"></status>
</kw>
<msg timestamp="20201030 10:59:20.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:20.315" endtime="20201030 10:59:20.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:20.333" endtime="20201030 10:59:20.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.335" endtime="20201030 10:59:20.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.312" endtime="20201030 10:59:20.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.310" endtime="20201030 10:59:20.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.344" endtime="20201030 10:59:20.627"></status>
</kw>
<msg timestamp="20201030 10:59:20.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019999708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020005903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:20.342" endtime="20201030 10:59:20.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019999708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020005903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:20.631" endtime="20201030 10:59:20.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.639" endtime="20201030 10:59:20.641"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.340" endtime="20201030 10:59:20.642"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.338" endtime="20201030 10:59:20.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:20.646" level="INFO">${RESULT} = [{'diff': 6.194999999997036e-06}, {'diff': 6.472000000000422e-06}, {'diff': 5.917000000001116e-06}, {'diff': 6.486999999999465e-06}, {'diff': 6.1939999999975626e-06}, {'diff': 6.7919999999985214e-06},...</msg>
<status status="PASS" starttime="20201030 10:59:20.643" endtime="20201030 10:59:20.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:20.651" level="INFO">${ACCURACY} = {'diff': [6.194999999997036e-06, 6.472000000000422e-06, 5.917000000001116e-06, 6.486999999999465e-06, 6.1939999999975626e-06, 6.7919999999985214e-06, 6.2090000000000756e-06, 6.749999999999812e-06, 6.7...</msg>
<status status="PASS" starttime="20201030 10:59:20.647" endtime="20201030 10:59:20.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.655" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 10:59:20.654" endtime="20201030 10:59:20.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.658" level="INFO">VALUE: [6.194999999997036e-06, 6.472000000000422e-06, 5.917000000001116e-06, 6.486999999999465e-06, 6.1939999999975626e-06, 6.7919999999985214e-06, 6.2090000000000756e-06, 6.749999999999812e-06, 6.7779999999989515e-06, 6.499999999999562e-06, 6.459000000000326e-06, 6.7779999999989515e-06, 5.874999999998937e-06, 6.222000000000172e-06, 6.513999999999132e-06, 5.916000000001642e-06, 6.805999999998091e-06, 6.708000000001102e-06, 6.430000000001712e-06, 5.917000000001116e-06, 6.485999999999992e-06, 5.931000000000686e-06, 6.556000000001311e-06, 6.179999999997993e-06, 6.124999999999187e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.2079999999971325e-06, 6.776999999999478e-06, 6.208000000000602e-06, 6.499999999999562e-06, 6.763999999999382e-06, 5.902000000002072e-06, 5.945000000000256e-06, 6.722000000000672e-06, 6.7779999999989515e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.194000000001032e-06, 6.776999999999478e-06, 6.792000000001991e-06, 7.054999999998868e-06, 6.7779999999989515e-06, 6.500000000003031e-06, 6.777000000002947e-06, 6.458000000000852e-06]</msg>
<status status="PASS" starttime="20201030 10:59:20.657" endtime="20201030 10:59:20.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.652" endtime="20201030 10:59:20.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:20.662" endtime="20201030 10:59:20.682"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.661" endtime="20201030 10:59:20.682"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.660" endtime="20201030 10:59:20.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.309" endtime="20201030 10:59:20.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.308" endtime="20201030 10:59:20.683"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.692" endtime="20201030 10:59:20.706"></status>
</kw>
<msg timestamp="20201030 10:59:20.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:20.691" endtime="20201030 10:59:20.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:20.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:20.707" endtime="20201030 10:59:20.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.710" endtime="20201030 10:59:20.711"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.688" endtime="20201030 10:59:20.712"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.686" endtime="20201030 10:59:20.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:20.719" endtime="20201030 10:59:21.004"></status>
</kw>
<msg timestamp="20201030 10:59:21.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019981931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019989556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:20.717" endtime="20201030 10:59:21.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019981931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019989556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:21.008" endtime="20201030 10:59:21.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.016" endtime="20201030 10:59:21.018"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.715" endtime="20201030 10:59:21.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.713" endtime="20201030 10:59:21.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:21.023" level="INFO">${RESULT} = [{'diff': 7.624999999997217e-06}, {'diff': 7.054999999998868e-06}, {'diff': 7.055000000002337e-06}, {'diff': 7.625000000000687e-06}, {'diff': 7.347000000001297e-06}, {'diff': 7.625000000000687e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:59:21.020" endtime="20201030 10:59:21.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:21.027" level="INFO">${ACCURACY} = {'diff': [7.624999999997217e-06, 7.054999999998868e-06, 7.055000000002337e-06, 7.625000000000687e-06, 7.347000000001297e-06, 7.625000000000687e-06, 7.637999999997314e-06, 7.361000000000867e-06, 7.3330...</msg>
<status status="PASS" starttime="20201030 10:59:21.024" endtime="20201030 10:59:21.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.031" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 10:59:21.030" endtime="20201030 10:59:21.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.034" level="INFO">VALUE: [7.624999999997217e-06, 7.054999999998868e-06, 7.055000000002337e-06, 7.625000000000687e-06, 7.347000000001297e-06, 7.625000000000687e-06, 7.637999999997314e-06, 7.361000000000867e-06, 7.333000000001727e-06, 7.361000000000867e-06, 7.054999999998868e-06, 7.070000000001381e-06, 7.347000000001297e-06, 7.903000000000077e-06, 7.348000000000771e-06, 7.054999999998868e-06, 7.347000000001297e-06, 7.916999999999647e-06, 7.055999999998341e-06, 7.055999999998341e-06, 7.348000000000771e-06, 7.040999999999298e-06, 7.916999999999647e-06, 7.389000000000007e-06, 7.389000000000007e-06, 7.624999999997217e-06, 7.860999999997897e-06, 7.347000000001297e-06, 7.6109999999976474e-06, 7.054999999998868e-06, 7.055000000002337e-06, 7.916999999999647e-06, 7.361000000000867e-06, 7.319000000002157e-06, 7.041000000002767e-06, 7.638000000000783e-06, 7.347000000001297e-06, 7.056000000001811e-06, 7.6120000000005905e-06, 7.348000000000771e-06, 7.360999999997397e-06, 7.624999999997217e-06, 7.903000000000077e-06, 7.625000000000687e-06, 7.625000000000687e-06, 7.611000000001117e-06, 7.916999999999647e-06, 7.555999999998841e-06, 7.332999999998258e-06, 7.347000000001297e-06]</msg>
<status status="PASS" starttime="20201030 10:59:21.032" endtime="20201030 10:59:21.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.028" endtime="20201030 10:59:21.035"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:21.038" endtime="20201030 10:59:21.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.037" endtime="20201030 10:59:21.059"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.035" endtime="20201030 10:59:21.059"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.684" endtime="20201030 10:59:21.059"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:20.683" endtime="20201030 10:59:21.059"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.069" endtime="20201030 10:59:21.083"></status>
</kw>
<msg timestamp="20201030 10:59:21.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:21.066" endtime="20201030 10:59:21.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:21.084" endtime="20201030 10:59:21.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.087" endtime="20201030 10:59:21.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.064" endtime="20201030 10:59:21.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.062" endtime="20201030 10:59:21.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.096" endtime="20201030 10:59:21.383"></status>
</kw>
<msg timestamp="20201030 10:59:21.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020405625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020414403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:21.094" endtime="20201030 10:59:21.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020405625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020414403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:21.387" endtime="20201030 10:59:21.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.396" endtime="20201030 10:59:21.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.092" endtime="20201030 10:59:21.398"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.090" endtime="20201030 10:59:21.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:21.402" level="INFO">${RESULT} = [{'diff': 8.778000000000952e-06}, {'diff': 7.916999999999647e-06}, {'diff': 8.179999999999993e-06}, {'diff': 8.791000000001048e-06}, {'diff': 8.806000000000092e-06}, {'diff': 8.208000000002602e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:59:21.399" endtime="20201030 10:59:21.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:21.406" level="INFO">${ACCURACY} = {'diff': [8.778000000000952e-06, 7.916999999999647e-06, 8.179999999999993e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.208000000002602e-06, 8.735999999998773e-06, 8.737000000001716e-06, 8.7770...</msg>
<status status="PASS" starttime="20201030 10:59:21.403" endtime="20201030 10:59:21.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.410" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 10:59:21.410" endtime="20201030 10:59:21.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.413" level="INFO">VALUE: [8.778000000000952e-06, 7.916999999999647e-06, 8.179999999999993e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.208000000002602e-06, 8.735999999998773e-06, 8.737000000001716e-06, 8.777000000001478e-06, 8.472999999998426e-06, 8.791000000001048e-06, 8.222999999998176e-06, 8.777000000001478e-06, 8.486000000001992e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.777999999997482e-06, 7.916000000000173e-06, 8.764000000001382e-06, 8.221999999998703e-06, 7.916999999999647e-06, 8.721999999999203e-06, 8.179999999999993e-06, 7.916999999999647e-06, 8.194000000003032e-06, 8.500000000001562e-06, 8.194000000003032e-06, 8.777000000001478e-06, 8.778000000000952e-06, 8.806000000000092e-06, 8.208999999998606e-06, 7.903000000000077e-06, 8.764000000001382e-06, 8.499999999998092e-06, 8.207999999999133e-06, 8.485999999998523e-06, 7.903000000000077e-06, 8.500000000001562e-06, 8.208999999998606e-06, 8.764000000001382e-06, 8.194999999999036e-06, 7.929999999999743e-06, 8.194000000003032e-06, 8.499999999998092e-06, 8.485999999998523e-06, 8.499999999998092e-06, 8.778000000000952e-06, 8.485999999998523e-06, 8.139000000000757e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201030 10:59:21.412" endtime="20201030 10:59:21.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.407" endtime="20201030 10:59:21.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:21.425" endtime="20201030 10:59:21.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.423" endtime="20201030 10:59:21.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.422" endtime="20201030 10:59:21.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.060" endtime="20201030 10:59:21.445"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.060" endtime="20201030 10:59:21.445"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.454" endtime="20201030 10:59:21.469"></status>
</kw>
<msg timestamp="20201030 10:59:21.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:21.452" endtime="20201030 10:59:21.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:21.470" endtime="20201030 10:59:21.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.473" endtime="20201030 10:59:21.474"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.450" endtime="20201030 10:59:21.475"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.448" endtime="20201030 10:59:21.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.481" endtime="20201030 10:59:21.768"></status>
</kw>
<msg timestamp="20201030 10:59:21.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019482556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019492153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:21.480" endtime="20201030 10:59:21.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019482556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019492153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:21.772" endtime="20201030 10:59:21.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.780" endtime="20201030 10:59:21.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.477" endtime="20201030 10:59:21.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.476" endtime="20201030 10:59:21.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:21.786" level="INFO">${RESULT} = [{'diff': 9.597000000000078e-06}, {'diff': 9.056000000000342e-06}, {'diff': 9.083000000000008e-06}, {'diff': 9.333000000000258e-06}, {'diff': 9.055000000000868e-06}, {'diff': 9.639000000002257e-06}, {...</msg>
<status status="PASS" starttime="20201030 10:59:21.783" endtime="20201030 10:59:21.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:21.791" level="INFO">${ACCURACY} = {'diff': [9.597000000000078e-06, 9.056000000000342e-06, 9.083000000000008e-06, 9.333000000000258e-06, 9.055000000000868e-06, 9.639000000002257e-06, 9.361000000002867e-06, 9.902999999998607e-06, 9.0689...</msg>
<status status="PASS" starttime="20201030 10:59:21.787" endtime="20201030 10:59:21.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.796" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 10:59:21.795" endtime="20201030 10:59:21.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.798" level="INFO">VALUE: [9.597000000000078e-06, 9.056000000000342e-06, 9.083000000000008e-06, 9.333000000000258e-06, 9.055000000000868e-06, 9.639000000002257e-06, 9.361000000002867e-06, 9.902999999998607e-06, 9.068999999996968e-06, 9.931000000001217e-06, 9.346999999999828e-06, 9.610999999999648e-06, 9.653000000001827e-06, 9.083000000000008e-06, 9.639000000002257e-06, 9.624999999999218e-06, 9.290999999998079e-06, 9.638999999998787e-06, 9.347999999999301e-06, 9.653000000001827e-06, 9.930000000001743e-06, 9.624999999999218e-06, 9.624999999999218e-06, 9.346999999999828e-06, 9.096999999999578e-06, 9.901999999999134e-06, 9.638999999998787e-06, 9.013999999998162e-06, 9.346999999999828e-06, 9.611000000003117e-06, 9.972000000000453e-06, 9.610999999999648e-06, 9.624999999999218e-06, 9.027000000001728e-06, 9.361999999998871e-06, 9.34800000000277e-06, 9.639000000002257e-06, 9.902999999998607e-06, 9.069000000000438e-06, 9.041999999997302e-06, 9.610999999999648e-06, 9.346999999999828e-06, 9.917000000001647e-06, 9.638999999998787e-06, 9.028000000001202e-06, 9.055000000000868e-06, 9.652999999998357e-06, 9.582999999997038e-06, 9.874999999999468e-06, 9.056000000000342e-06]</msg>
<status status="PASS" starttime="20201030 10:59:21.797" endtime="20201030 10:59:21.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.792" endtime="20201030 10:59:21.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:21.803" endtime="20201030 10:59:21.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.802" endtime="20201030 10:59:21.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.801" endtime="20201030 10:59:21.823"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.446" endtime="20201030 10:59:21.824"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.446" endtime="20201030 10:59:21.824"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.832" endtime="20201030 10:59:21.847"></status>
</kw>
<msg timestamp="20201030 10:59:21.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:21.831" endtime="20201030 10:59:21.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:21.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:21.848" endtime="20201030 10:59:21.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.851" endtime="20201030 10:59:21.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.828" endtime="20201030 10:59:21.853"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.826" endtime="20201030 10:59:21.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:21.859" endtime="20201030 10:59:22.146"></status>
</kw>
<msg timestamp="20201030 10:59:22.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019557278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019567194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:21.858" endtime="20201030 10:59:22.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019557278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019567194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:22.150" endtime="20201030 10:59:22.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.158" endtime="20201030 10:59:22.160"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.855" endtime="20201030 10:59:22.160"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.854" endtime="20201030 10:59:22.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:22.165" level="INFO">${RESULT} = [{'diff': 9.915999999998704e-06}, {'diff': 1.0457999999997913e-05}, {'diff': 9.917000000001647e-06}, {'diff': 1.0500000000000093e-05}, {'diff': 1.0750000000000343e-05}, {'diff': 1.0513999999999663e-05...</msg>
<status status="PASS" starttime="20201030 10:59:22.162" endtime="20201030 10:59:22.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:22.169" level="INFO">${ACCURACY} = {'diff': [9.915999999998704e-06, 1.0457999999997913e-05, 9.917000000001647e-06, 1.0500000000000093e-05, 1.0750000000000343e-05, 1.0513999999999663e-05, 1.0486000000000523e-05, 1.0209000000000606e-05, ...</msg>
<status status="PASS" starttime="20201030 10:59:22.166" endtime="20201030 10:59:22.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.173" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 10:59:22.172" endtime="20201030 10:59:22.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.176" level="INFO">VALUE: [9.915999999998704e-06, 1.0457999999997913e-05, 9.917000000001647e-06, 1.0500000000000093e-05, 1.0750000000000343e-05, 1.0513999999999663e-05, 1.0486000000000523e-05, 1.0209000000000606e-05, 1.0763999999999913e-05, 1.0472000000000953e-05, 9.917000000001647e-06, 1.0778000000002952e-05, 1.0540999999999329e-05, 1.0791999999999052e-05, 1.0194000000001563e-05, 1.0777000000000009e-05, 1.0832999999998288e-05, 9.847999999999801e-06, 1.0207999999997663e-05, 1.0486000000000523e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 9.916999999998177e-06, 1.0750000000000343e-05, 1.0473000000000426e-05, 1.0513999999999663e-05, 1.0222000000000703e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0222000000000703e-05, 9.903000000002077e-06, 1.0193999999998093e-05, 1.0777999999999482e-05, 1.0458000000001383e-05, 1.0763999999999913e-05, 1.0195000000001037e-05, 1.0777999999999482e-05, 1.0777000000000009e-05, 1.0209000000000606e-05, 1.0500000000000093e-05, 9.930000000001743e-06, 1.0500000000000093e-05, 1.0791999999999052e-05, 1.0193999999998093e-05, 1.0777999999999482e-05, 1.0207999999997663e-05, 1.0763999999999913e-05, 1.0195000000001037e-05, 1.0791999999999052e-05, 1.0820000000001662e-05]</msg>
<status status="PASS" starttime="20201030 10:59:22.174" endtime="20201030 10:59:22.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.170" endtime="20201030 10:59:22.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:22.180" endtime="20201030 10:59:22.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.179" endtime="20201030 10:59:22.200"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.178" endtime="20201030 10:59:22.201"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.825" endtime="20201030 10:59:22.201"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:21.824" endtime="20201030 10:59:22.201"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.210" endtime="20201030 10:59:22.226"></status>
</kw>
<msg timestamp="20201030 10:59:22.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.208" endtime="20201030 10:59:22.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.227" endtime="20201030 10:59:22.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.230" endtime="20201030 10:59:22.231"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.206" endtime="20201030 10:59:22.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.204" endtime="20201030 10:59:22.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.239" endtime="20201030 10:59:22.525"></status>
</kw>
<msg timestamp="20201030 10:59:22.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020361931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020373014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:22.237" endtime="20201030 10:59:22.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020361931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020373014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:22.529" endtime="20201030 10:59:22.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.537" endtime="20201030 10:59:22.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.235" endtime="20201030 10:59:22.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.233" endtime="20201030 10:59:22.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:22.544" level="INFO">${RESULT} = [{'diff': 1.1082999999998538e-05}, {'diff': 1.1055999999998872e-05}, {'diff': 1.1347999999997832e-05}, {'diff': 1.1653000000000358e-05}, {'diff': 1.1610999999998178e-05}, {'diff': 1.1610999999998178e-...</msg>
<status status="PASS" starttime="20201030 10:59:22.540" endtime="20201030 10:59:22.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:22.548" level="INFO">${ACCURACY} = {'diff': [1.1082999999998538e-05, 1.1055999999998872e-05, 1.1347999999997832e-05, 1.1653000000000358e-05, 1.1610999999998178e-05, 1.1610999999998178e-05, 1.1347000000001828e-05, 1.1403000000000107e-05...</msg>
<status status="PASS" starttime="20201030 10:59:22.545" endtime="20201030 10:59:22.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.552" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 10:59:22.551" endtime="20201030 10:59:22.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.554" level="INFO">VALUE: [1.1082999999998538e-05, 1.1055999999998872e-05, 1.1347999999997832e-05, 1.1653000000000358e-05, 1.1610999999998178e-05, 1.1610999999998178e-05, 1.1347000000001828e-05, 1.1403000000000107e-05, 1.1917000000000177e-05, 1.1054999999999399e-05, 1.1625000000001218e-05, 1.1347000000001828e-05, 1.1943999999999844e-05, 1.1625000000001218e-05, 1.1639000000000788e-05, 1.1112000000000621e-05, 1.1403000000000107e-05, 1.1334000000001732e-05, 1.1889000000001038e-05, 1.1040999999999829e-05, 1.1653000000000358e-05, 1.1889000000001038e-05, 1.1612000000001121e-05, 1.1332999999998788e-05, 1.1334000000001732e-05, 1.1625000000001218e-05, 1.1874999999997998e-05, 1.1902000000001134e-05, 1.1346999999998358e-05, 1.1375000000000968e-05, 1.1624999999997748e-05, 1.1346999999998358e-05, 1.1570000000002412e-05, 1.1360999999997928e-05, 1.1916000000000704e-05, 1.1347000000001828e-05, 1.1625000000001218e-05, 1.1554999999999899e-05, 1.1625000000001218e-05, 1.1625000000001218e-05, 1.1639000000000788e-05, 1.1346999999998358e-05, 1.1403000000000107e-05, 1.1555999999999372e-05, 1.1111000000001148e-05, 1.1957999999999414e-05, 1.1625000000001218e-05, 1.1069999999998442e-05, 1.1583999999998512e-05, 1.1041999999999302e-05]</msg>
<status status="PASS" starttime="20201030 10:59:22.553" endtime="20201030 10:59:22.556"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.548" endtime="20201030 10:59:22.557"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:22.560" endtime="20201030 10:59:22.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.559" endtime="20201030 10:59:22.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.558" endtime="20201030 10:59:22.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.202" endtime="20201030 10:59:22.581"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.202" endtime="20201030 10:59:22.581"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.590" endtime="20201030 10:59:22.604"></status>
</kw>
<msg timestamp="20201030 10:59:22.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.588" endtime="20201030 10:59:22.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.605" endtime="20201030 10:59:22.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.608" endtime="20201030 10:59:22.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.585" endtime="20201030 10:59:22.610"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.583" endtime="20201030 10:59:22.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.617" endtime="20201030 10:59:22.902"></status>
</kw>
<msg timestamp="20201030 10:59:22.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019657042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:22.615" endtime="20201030 10:59:22.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019644292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019657042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:22.906" endtime="20201030 10:59:22.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.915" endtime="20201030 10:59:22.916"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.613" endtime="20201030 10:59:22.917"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.611" endtime="20201030 10:59:22.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:22.922" level="INFO">${RESULT} = [{'diff': 1.2749999999998873e-05}, {'diff': 1.2485999999999053e-05}, {'diff': 1.2735999999999303e-05}, {'diff': 1.2486000000002523e-05}, {'diff': 1.2250000000001843e-05}, {'diff': 1.1917000000000177e-...</msg>
<status status="PASS" starttime="20201030 10:59:22.918" endtime="20201030 10:59:22.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:22.929" level="INFO">${ACCURACY} = {'diff': [1.2749999999998873e-05, 1.2485999999999053e-05, 1.2735999999999303e-05, 1.2486000000002523e-05, 1.2250000000001843e-05, 1.1917000000000177e-05, 1.2763999999998443e-05, 1.2791999999997583e-05...</msg>
<status status="PASS" starttime="20201030 10:59:22.923" endtime="20201030 10:59:22.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.934" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 10:59:22.933" endtime="20201030 10:59:22.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.936" level="INFO">VALUE: [1.2749999999998873e-05, 1.2485999999999053e-05, 1.2735999999999303e-05, 1.2486000000002523e-05, 1.2250000000001843e-05, 1.1917000000000177e-05, 1.2763999999998443e-05, 1.2791999999997583e-05, 1.2777999999998013e-05, 1.2694000000000594e-05, 1.2778000000001483e-05, 1.2764000000001913e-05, 1.2222000000002703e-05, 1.2472999999998957e-05, 1.2528000000001233e-05, 1.2471999999999483e-05, 1.2485999999999053e-05, 1.2221999999999233e-05, 1.1930999999999747e-05, 1.2472000000002953e-05, 1.2499999999998623e-05, 1.2792000000001053e-05, 1.2485999999999053e-05, 1.2763999999998443e-05, 1.2207999999999664e-05, 1.2513999999998193e-05, 1.3042000000001303e-05, 1.2542000000000803e-05, 1.2500000000002093e-05, 1.2514000000001663e-05, 1.2485999999999053e-05, 1.2485999999999053e-05, 1.2180999999999997e-05, 1.2194999999999567e-05, 1.2153000000000858e-05, 1.2500000000002093e-05, 1.2778000000001483e-05, 1.2250000000001843e-05, 1.2180999999999997e-05, 1.2207999999999664e-05, 1.1917000000000177e-05, 1.2180999999999997e-05, 1.2485999999999053e-05, 1.1889000000001038e-05, 1.2138999999997818e-05, 1.1916999999996708e-05, 1.2778000000001483e-05, 1.2486000000002523e-05, 1.2792000000001053e-05, 1.2749999999998873e-05]</msg>
<status status="PASS" starttime="20201030 10:59:22.935" endtime="20201030 10:59:22.937"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.930" endtime="20201030 10:59:22.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:22.941" endtime="20201030 10:59:22.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.940" endtime="20201030 10:59:22.961"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.939" endtime="20201030 10:59:22.962"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.582" endtime="20201030 10:59:22.962"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.581" endtime="20201030 10:59:22.962"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.971" endtime="20201030 10:59:22.985"></status>
</kw>
<msg timestamp="20201030 10:59:22.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.969" endtime="20201030 10:59:22.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:22.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:22.987" endtime="20201030 10:59:22.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.989" endtime="20201030 10:59:22.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.966" endtime="20201030 10:59:22.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.964" endtime="20201030 10:59:22.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:22.998" endtime="20201030 10:59:23.284"></status>
</kw>
<msg timestamp="20201030 10:59:23.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020362736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020376083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:22.997" endtime="20201030 10:59:23.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020362736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020376083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:23.288" endtime="20201030 10:59:23.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.296" endtime="20201030 10:59:23.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.994" endtime="20201030 10:59:23.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.992" endtime="20201030 10:59:23.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:23.303" level="INFO">${RESULT} = [{'diff': 1.3347000000000359e-05}, {'diff': 1.3374999999999498e-05}, {'diff': 1.3333000000000789e-05}, {'diff': 1.30689999999975e-05}, {'diff': 1.3347999999999832e-05}, {'diff': 1.3624999999999748e-05...</msg>
<status status="PASS" starttime="20201030 10:59:23.300" endtime="20201030 10:59:23.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:23.307" level="INFO">${ACCURACY} = {'diff': [1.3347000000000359e-05, 1.3374999999999498e-05, 1.3333000000000789e-05, 1.30689999999975e-05, 1.3347999999999832e-05, 1.3624999999999748e-05, 1.333299999999732e-05, 1.3041999999997833e-05, 1...</msg>
<status status="PASS" starttime="20201030 10:59:23.304" endtime="20201030 10:59:23.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.311" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 10:59:23.310" endtime="20201030 10:59:23.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.314" level="INFO">VALUE: [1.3347000000000359e-05, 1.3374999999999498e-05, 1.3333000000000789e-05, 1.30689999999975e-05, 1.3347999999999832e-05, 1.3624999999999748e-05, 1.333299999999732e-05, 1.3041999999997833e-05, 1.3903000000002608e-05, 1.3625000000003218e-05, 1.3652999999998888e-05, 1.3028000000001733e-05, 1.3931000000001748e-05, 1.3014000000002163e-05, 1.3638999999999318e-05, 1.3915999999999235e-05, 1.3347000000000359e-05, 1.3347000000000359e-05, 1.3611000000000179e-05, 1.3639000000002788e-05, 1.305499999999793e-05, 1.3930999999998278e-05, 1.3653000000002358e-05, 1.3638999999999318e-05, 1.3639000000002788e-05, 1.3292000000001553e-05, 1.3653000000002358e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.3070000000000442e-05, 1.3069000000000969e-05, 1.3069999999996973e-05, 1.3915999999999235e-05, 1.3388999999999068e-05, 1.3347999999999832e-05, 1.3055000000001399e-05, 1.3624999999999748e-05, 1.3638999999999318e-05, 1.3388999999999068e-05, 1.3333000000000789e-05, 1.3347000000000359e-05, 1.3055000000001399e-05, 1.3638999999999318e-05, 1.3570000000000942e-05, 1.3347000000000359e-05, 1.3598000000000082e-05, 1.3333000000000789e-05, 1.3915999999999235e-05, 1.3360999999999928e-05, 1.3347000000000359e-05]</msg>
<status status="PASS" starttime="20201030 10:59:23.312" endtime="20201030 10:59:23.314"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.308" endtime="20201030 10:59:23.315"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:23.319" endtime="20201030 10:59:23.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.317" endtime="20201030 10:59:23.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.316" endtime="20201030 10:59:23.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.963" endtime="20201030 10:59:23.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:22.962" endtime="20201030 10:59:23.339"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.348" endtime="20201030 10:59:23.364"></status>
</kw>
<msg timestamp="20201030 10:59:23.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:23.346" endtime="20201030 10:59:23.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:23.366" endtime="20201030 10:59:23.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.368" endtime="20201030 10:59:23.370"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.344" endtime="20201030 10:59:23.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.342" endtime="20201030 10:59:23.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.377" endtime="20201030 10:59:23.664"></status>
</kw>
<msg timestamp="20201030 10:59:23.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02041375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020428528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:23.376" endtime="20201030 10:59:23.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02041375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020428528, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:23.668" endtime="20201030 10:59:23.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.676" endtime="20201030 10:59:23.678"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.373" endtime="20201030 10:59:23.678"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.372" endtime="20201030 10:59:23.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:23.682" level="INFO">${RESULT} = [{'diff': 1.4778000000000013e-05}, {'diff': 1.4180000000002524e-05}, {'diff': 1.4222000000001234e-05}, {'diff': 1.4778000000000013e-05}, {'diff': 1.3915999999999235e-05}, {'diff': 1.4471999999998014e-...</msg>
<status status="PASS" starttime="20201030 10:59:23.679" endtime="20201030 10:59:23.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:23.686" level="INFO">${ACCURACY} = {'diff': [1.4778000000000013e-05, 1.4180000000002524e-05, 1.4222000000001234e-05, 1.4778000000000013e-05, 1.3915999999999235e-05, 1.4471999999998014e-05, 1.4708000000002164e-05, 1.4472000000001484e-05...</msg>
<status status="PASS" starttime="20201030 10:59:23.683" endtime="20201030 10:59:23.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.691" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 10:59:23.690" endtime="20201030 10:59:23.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.693" level="INFO">VALUE: [1.4778000000000013e-05, 1.4180000000002524e-05, 1.4222000000001234e-05, 1.4778000000000013e-05, 1.3915999999999235e-05, 1.4471999999998014e-05, 1.4708000000002164e-05, 1.4472000000001484e-05, 1.4486999999997058e-05, 1.3888999999999568e-05, 1.4778000000000013e-05, 1.4209000000001137e-05, 1.4486000000001054e-05, 1.4486000000001054e-05, 1.483299999999882e-05, 1.477700000000054e-05, 1.4764000000000443e-05, 1.477700000000054e-05, 1.4778000000000013e-05, 1.4194000000002094e-05, 1.4416999999999208e-05, 1.4541999999999333e-05, 1.3944000000001844e-05, 1.4208000000001664e-05, 1.3944999999997848e-05, 1.4486000000001054e-05, 1.4778000000000013e-05, 1.476300000000097e-05, 1.4499999999997154e-05, 1.479100000000011e-05, 1.4750000000000874e-05, 1.4443999999998874e-05, 1.4485999999997584e-05, 1.47629999999975e-05, 1.4819999999998723e-05, 1.477700000000054e-05, 1.4750000000000874e-05, 1.4778000000000013e-05, 1.4514000000000193e-05, 1.4486000000001054e-05, 1.4221999999997764e-05, 1.4778000000000013e-05, 1.4222000000001234e-05, 1.4833999999998293e-05, 1.3931000000001748e-05, 1.4541999999999333e-05, 1.4208000000001664e-05, 1.4764000000000443e-05, 1.4778000000000013e-05, 1.5055999999999403e-05]</msg>
<status status="PASS" starttime="20201030 10:59:23.692" endtime="20201030 10:59:23.695"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.687" endtime="20201030 10:59:23.695"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:23.699" endtime="20201030 10:59:23.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.697" endtime="20201030 10:59:23.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.696" endtime="20201030 10:59:23.719"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.340" endtime="20201030 10:59:23.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.340" endtime="20201030 10:59:23.720"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.728" endtime="20201030 10:59:23.743"></status>
</kw>
<msg timestamp="20201030 10:59:23.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:23.727" endtime="20201030 10:59:23.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:23.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:23.745" endtime="20201030 10:59:23.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.747" endtime="20201030 10:59:23.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.724" endtime="20201030 10:59:23.749"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.722" endtime="20201030 10:59:23.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:23.756" endtime="20201030 10:59:24.043"></status>
</kw>
<msg timestamp="20201030 10:59:24.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020508125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020523472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:23.755" endtime="20201030 10:59:24.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020508125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020523472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:24.047" endtime="20201030 10:59:24.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.055" endtime="20201030 10:59:24.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.752" endtime="20201030 10:59:24.057"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.750" endtime="20201030 10:59:24.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:24.062" level="INFO">${RESULT} = [{'diff': 1.534700000000236e-05}, {'diff': 1.534699999999889e-05}, {'diff': 1.559700000000261e-05}, {'diff': 1.5069999999998973e-05}, {'diff': 1.533299999999932e-05}, {'diff': 1.511099999999821e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:24.058" endtime="20201030 10:59:24.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:24.066" level="INFO">${ACCURACY} = {'diff': [1.534700000000236e-05, 1.534699999999889e-05, 1.559700000000261e-05, 1.5069999999998973e-05, 1.533299999999932e-05, 1.511099999999821e-05, 1.5931000000000278e-05, 1.5055999999999403e-05, 1.5...</msg>
<status status="PASS" starttime="20201030 10:59:24.062" endtime="20201030 10:59:24.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.071" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 10:59:24.070" endtime="20201030 10:59:24.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.073" level="INFO">VALUE: [1.534700000000236e-05, 1.534699999999889e-05, 1.559700000000261e-05, 1.5069999999998973e-05, 1.533299999999932e-05, 1.511099999999821e-05, 1.5931000000000278e-05, 1.5055999999999403e-05, 1.5931000000000278e-05, 1.5333999999998793e-05, 1.591700000000071e-05, 1.5055999999999403e-05, 1.5681000000000028e-05, 1.563900000000132e-05, 1.561099999999871e-05, 1.533299999999932e-05, 1.5930000000000805e-05, 1.565300000000089e-05, 1.534700000000236e-05, 1.5681000000000028e-05, 1.5611999999998183e-05, 1.508299999999907e-05, 1.591700000000071e-05, 1.561099999999871e-05, 1.5055999999999403e-05, 1.536099999999846e-05, 1.561100000000218e-05, 1.505499999999993e-05, 1.562500000000175e-05, 1.5348000000001832e-05, 1.533300000000279e-05, 1.508299999999907e-05, 1.5028000000000263e-05, 1.5263999999997474e-05, 1.536099999999846e-05, 1.563900000000132e-05, 1.5666000000000985e-05, 1.53889999999976e-05, 1.561100000000218e-05, 1.5944999999999848e-05, 1.5681000000000028e-05, 1.591699999999724e-05, 1.591700000000071e-05, 1.5334000000002262e-05, 1.534699999999889e-05, 1.562500000000175e-05, 1.562499999999828e-05, 1.562499999999828e-05, 1.5958999999999418e-05, 1.511099999999821e-05]</msg>
<status status="PASS" starttime="20201030 10:59:24.072" endtime="20201030 10:59:24.074"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.067" endtime="20201030 10:59:24.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:24.078" endtime="20201030 10:59:24.098"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.077" endtime="20201030 10:59:24.098"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.076" endtime="20201030 10:59:24.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.721" endtime="20201030 10:59:24.099"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:23.720" endtime="20201030 10:59:24.099"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.108" endtime="20201030 10:59:24.123"></status>
</kw>
<msg timestamp="20201030 10:59:24.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:24.106" endtime="20201030 10:59:24.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:24.124" endtime="20201030 10:59:24.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.127" endtime="20201030 10:59:24.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.103" endtime="20201030 10:59:24.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.101" endtime="20201030 10:59:24.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.136" endtime="20201030 10:59:24.422"></status>
</kw>
<msg timestamp="20201030 10:59:24.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019576514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019593, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:24.134" endtime="20201030 10:59:24.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019576514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019593, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:24.427" endtime="20201030 10:59:24.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.435" endtime="20201030 10:59:24.436"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.132" endtime="20201030 10:59:24.437"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.130" endtime="20201030 10:59:24.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:24.441" level="INFO">${RESULT} = [{'diff': 1.6485999999999584e-05}, {'diff': 1.6195000000000098e-05}, {'diff': 1.6195000000000098e-05}, {'diff': 1.6194000000000625e-05}, {'diff': 1.6527999999998294e-05}, {'diff': 1.654100000000186e-0...</msg>
<status status="PASS" starttime="20201030 10:59:24.438" endtime="20201030 10:59:24.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:24.445" level="INFO">${ACCURACY} = {'diff': [1.6485999999999584e-05, 1.6195000000000098e-05, 1.6195000000000098e-05, 1.6194000000000625e-05, 1.6527999999998294e-05, 1.654100000000186e-05, 1.6208000000000194e-05, 1.6208000000000194e-05,...</msg>
<status status="PASS" starttime="20201030 10:59:24.442" endtime="20201030 10:59:24.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.450" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 10:59:24.449" endtime="20201030 10:59:24.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.452" level="INFO">VALUE: [1.6485999999999584e-05, 1.6195000000000098e-05, 1.6195000000000098e-05, 1.6194000000000625e-05, 1.6527999999998294e-05, 1.654100000000186e-05, 1.6208000000000194e-05, 1.6208000000000194e-05, 1.679099999999864e-05, 1.6472999999999488e-05, 1.6207999999996725e-05, 1.644499999999688e-05, 1.6263999999998474e-05, 1.6777999999998544e-05, 1.6486000000003054e-05, 1.591700000000071e-05, 1.6500000000002624e-05, 1.6499999999999154e-05, 1.6208999999999668e-05, 1.6555999999997434e-05, 1.6763999999998974e-05, 1.6472000000000014e-05, 1.6527999999998294e-05, 1.6778000000002014e-05, 1.6485999999999584e-05, 1.6472999999999488e-05, 1.6514000000002194e-05, 1.5931000000000278e-05, 1.6763999999998974e-05, 1.6707999999997225e-05, 1.6499999999999154e-05, 1.6777999999998544e-05, 1.6749999999999404e-05, 1.6193999999997155e-05, 1.5931000000000278e-05, 1.6500000000002624e-05, 1.6499999999999154e-05, 1.6487000000002527e-05, 1.641700000000121e-05, 1.6778000000002014e-05, 1.6221999999999764e-05, 1.6513999999998724e-05, 1.6445000000000348e-05, 1.6485999999999584e-05, 1.679099999999864e-05, 1.591700000000071e-05, 1.6485999999999584e-05, 1.6486000000003054e-05, 1.679100000000211e-05, 1.6195000000000098e-05]</msg>
<status status="PASS" starttime="20201030 10:59:24.451" endtime="20201030 10:59:24.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.446" endtime="20201030 10:59:24.453"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:24.457" endtime="20201030 10:59:24.477"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.456" endtime="20201030 10:59:24.477"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.454" endtime="20201030 10:59:24.477"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.100" endtime="20201030 10:59:24.478"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.099" endtime="20201030 10:59:24.478"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.486" endtime="20201030 10:59:24.503"></status>
</kw>
<msg timestamp="20201030 10:59:24.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:24.485" endtime="20201030 10:59:24.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:24.505" endtime="20201030 10:59:24.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.507" endtime="20201030 10:59:24.509"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.482" endtime="20201030 10:59:24.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.480" endtime="20201030 10:59:24.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.516" endtime="20201030 10:59:24.803"></status>
</kw>
<msg timestamp="20201030 10:59:24.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020489403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020506458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:24.515" endtime="20201030 10:59:24.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020489403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020506458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:24.808" endtime="20201030 10:59:24.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.816" endtime="20201030 10:59:24.817"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.512" endtime="20201030 10:59:24.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.511" endtime="20201030 10:59:24.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:24.822" level="INFO">${RESULT} = [{'diff': 1.705500000000193e-05}, {'diff': 1.7263e-05}, {'diff': 1.734700000000089e-05}, {'diff': 1.766700000000246e-05}, {'diff': 1.7944000000002375e-05}, {'diff': 1.763900000000332e-05}, {'diff': 1....</msg>
<status status="PASS" starttime="20201030 10:59:24.819" endtime="20201030 10:59:24.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:24.826" level="INFO">${ACCURACY} = {'diff': [1.705500000000193e-05, 1.7263e-05, 1.734700000000089e-05, 1.766700000000246e-05, 1.7944000000002375e-05, 1.763900000000332e-05, 1.733300000000132e-05, 1.791699999999924e-05, 1.70689999999980...</msg>
<status status="PASS" starttime="20201030 10:59:24.823" endtime="20201030 10:59:24.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.831" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 10:59:24.830" endtime="20201030 10:59:24.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.833" level="INFO">VALUE: [1.705500000000193e-05, 1.7263e-05, 1.734700000000089e-05, 1.766700000000246e-05, 1.7944000000002375e-05, 1.763900000000332e-05, 1.733300000000132e-05, 1.791699999999924e-05, 1.706899999999803e-05, 1.70690000000015e-05, 1.794499999999838e-05, 1.734700000000089e-05, 1.793099999999881e-05, 1.765300000000289e-05, 1.791699999999924e-05, 1.791699999999924e-05, 1.705500000000193e-05, 1.734700000000089e-05, 1.7056000000001403e-05, 1.7708000000001695e-05, 1.7055999999997934e-05, 1.7915999999999765e-05, 1.7334000000000793e-05, 1.762499999999681e-05, 1.711100000000021e-05, 1.791700000000271e-05, 1.70690000000015e-05, 1.761100000000071e-05, 1.7665999999999515e-05, 1.790299999999967e-05, 1.763899999999985e-05, 1.7070000000000973e-05, 1.7679999999999085e-05, 1.763899999999985e-05, 1.7915999999999765e-05, 1.791700000000271e-05, 1.763899999999985e-05, 1.762499999999681e-05, 1.763899999999985e-05, 1.7348000000000363e-05, 1.734700000000089e-05, 1.73889999999996e-05, 1.708300000000107e-05, 1.761099999999724e-05, 1.737500000000003e-05, 1.7959000000001418e-05, 1.794500000000185e-05, 1.706899999999803e-05, 1.763899999999985e-05, 1.734700000000089e-05]</msg>
<status status="PASS" starttime="20201030 10:59:24.832" endtime="20201030 10:59:24.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.827" endtime="20201030 10:59:24.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:24.839" endtime="20201030 10:59:24.858"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.837" endtime="20201030 10:59:24.859"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.836" endtime="20201030 10:59:24.859"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.479" endtime="20201030 10:59:24.859"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.478" endtime="20201030 10:59:24.860"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.868" endtime="20201030 10:59:24.883"></status>
</kw>
<msg timestamp="20201030 10:59:24.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:24.867" endtime="20201030 10:59:24.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:24.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:24.885" endtime="20201030 10:59:24.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.887" endtime="20201030 10:59:24.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.864" endtime="20201030 10:59:24.889"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.862" endtime="20201030 10:59:24.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:24.896" endtime="20201030 10:59:25.182"></status>
</kw>
<msg timestamp="20201030 10:59:25.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019646597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:24.894" endtime="20201030 10:59:25.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019646597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:25.186" endtime="20201030 10:59:25.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.194" endtime="20201030 10:59:25.196"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.892" endtime="20201030 10:59:25.196"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.890" endtime="20201030 10:59:25.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:25.201" level="INFO">${RESULT} = [{'diff': 1.8179999999999585e-05}, {'diff': 1.8528000000000294e-05}, {'diff': 1.8221999999998295e-05}, {'diff': 1.8778000000000544e-05}, {'diff': 1.8763999999997505e-05}, {'diff': 1.819499999999863e-0...</msg>
<status status="PASS" starttime="20201030 10:59:25.197" endtime="20201030 10:59:25.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:25.205" level="INFO">${ACCURACY} = {'diff': [1.8179999999999585e-05, 1.8528000000000294e-05, 1.8221999999998295e-05, 1.8778000000000544e-05, 1.8763999999997505e-05, 1.819499999999863e-05, 1.82089999999982e-05, 1.8777999999997075e-05, 1...</msg>
<status status="PASS" starttime="20201030 10:59:25.201" endtime="20201030 10:59:25.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.210" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 10:59:25.209" endtime="20201030 10:59:25.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.212" level="INFO">VALUE: [1.8179999999999585e-05, 1.8528000000000294e-05, 1.8221999999998295e-05, 1.8778000000000544e-05, 1.8763999999997505e-05, 1.819499999999863e-05, 1.82089999999982e-05, 1.8777999999997075e-05, 1.8778000000000544e-05, 1.8486000000001584e-05, 1.793099999999881e-05, 1.8209000000001668e-05, 1.8764000000000974e-05, 1.791700000000271e-05, 1.82089999999982e-05, 1.7915999999999765e-05, 1.8500000000001154e-05, 1.8207999999998725e-05, 1.8208000000002195e-05, 1.8207999999998725e-05, 1.847299999999802e-05, 1.8208000000002195e-05, 1.7902000000000196e-05, 1.840300000000017e-05, 1.8485999999998115e-05, 1.8207999999998725e-05, 1.790299999999967e-05, 1.8486000000001584e-05, 1.8499999999997685e-05, 1.8792000000000114e-05, 1.8486000000001584e-05, 1.7915999999999765e-05, 1.877700000000107e-05, 1.786100000000096e-05, 1.8500000000001154e-05, 1.8764000000000974e-05, 1.8514000000000724e-05, 1.8528000000000294e-05, 1.8778000000000544e-05, 1.8471999999998545e-05, 1.8193999999999155e-05, 1.8471999999998545e-05, 1.8209000000001668e-05, 1.8778000000000544e-05, 1.851300000000125e-05, 1.8222000000001765e-05, 1.790299999999967e-05, 1.8222000000001765e-05, 1.877700000000107e-05, 1.8207999999998725e-05]</msg>
<status status="PASS" starttime="20201030 10:59:25.211" endtime="20201030 10:59:25.213"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.206" endtime="20201030 10:59:25.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:25.217" endtime="20201030 10:59:25.237"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.216" endtime="20201030 10:59:25.237"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.215" endtime="20201030 10:59:25.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.860" endtime="20201030 10:59:25.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:24.860" endtime="20201030 10:59:25.238"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.247" endtime="20201030 10:59:25.261"></status>
</kw>
<msg timestamp="20201030 10:59:25.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:25.245" endtime="20201030 10:59:25.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:25.262" endtime="20201030 10:59:25.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.265" endtime="20201030 10:59:25.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.242" endtime="20201030 10:59:25.267"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.240" endtime="20201030 10:59:25.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.274" endtime="20201030 10:59:25.560"></status>
</kw>
<msg timestamp="20201030 10:59:25.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019531847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:25.272" endtime="20201030 10:59:25.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019531847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:25.565" endtime="20201030 10:59:25.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.573" endtime="20201030 10:59:25.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.270" endtime="20201030 10:59:25.575"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.268" endtime="20201030 10:59:25.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:25.579" level="INFO">${RESULT} = [{'diff': 1.991699999999777e-05}, {'diff': 1.9347999999998894e-05}, {'diff': 1.934699999999942e-05}, {'diff': 1.908300000000307e-05}, {'diff': 1.9929999999997866e-05}, {'diff': 1.961100000000271e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:25.576" endtime="20201030 10:59:25.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:25.583" level="INFO">${ACCURACY} = {'diff': [1.991699999999777e-05, 1.9347999999998894e-05, 1.934699999999942e-05, 1.908300000000307e-05, 1.9929999999997866e-05, 1.961100000000271e-05, 1.9263999999998005e-05, 1.906900000000003e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 10:59:25.580" endtime="20201030 10:59:25.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.588" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 10:59:25.587" endtime="20201030 10:59:25.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.590" level="INFO">VALUE: [1.991699999999777e-05, 1.9347999999998894e-05, 1.934699999999942e-05, 1.908300000000307e-05, 1.9929999999997866e-05, 1.961100000000271e-05, 1.9263999999998005e-05, 1.906900000000003e-05, 1.962499999999881e-05, 1.963899999999838e-05, 1.905500000000046e-05, 1.934699999999942e-05, 1.969500000000013e-05, 1.934699999999942e-05, 1.962499999999881e-05, 1.9055999999999934e-05, 1.962500000000228e-05, 1.933299999999985e-05, 1.963899999999838e-05, 1.9319999999999754e-05, 1.962499999999881e-05, 1.933299999999985e-05, 1.912500000000178e-05, 1.9347999999998894e-05, 1.9638000000002376e-05, 1.99029999999982e-05, 1.965300000000142e-05, 1.909699999999917e-05, 1.934699999999942e-05, 1.905500000000046e-05, 1.9916000000001766e-05, 1.962499999999881e-05, 1.9930000000001336e-05, 1.9611999999998714e-05, 1.9333999999999324e-05, 1.966700000000099e-05, 1.904100000000089e-05, 1.9999999999999185e-05, 1.934699999999942e-05, 1.9944000000000905e-05, 1.940300000000117e-05, 1.9972000000000045e-05, 1.9319999999999754e-05, 1.9348000000002363e-05, 1.962500000000228e-05, 1.9069999999999504e-05, 1.965300000000142e-05, 1.9055999999999934e-05, 1.963899999999838e-05, 1.906900000000003e-05]</msg>
<status status="PASS" starttime="20201030 10:59:25.589" endtime="20201030 10:59:25.591"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.584" endtime="20201030 10:59:25.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:25.595" endtime="20201030 10:59:25.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.594" endtime="20201030 10:59:25.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.592" endtime="20201030 10:59:25.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.239" endtime="20201030 10:59:25.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.238" endtime="20201030 10:59:25.616"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.624" endtime="20201030 10:59:25.641"></status>
</kw>
<msg timestamp="20201030 10:59:25.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:25.623" endtime="20201030 10:59:25.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:25.643" endtime="20201030 10:59:25.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.645" endtime="20201030 10:59:25.647"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.620" endtime="20201030 10:59:25.647"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.618" endtime="20201030 10:59:25.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.654" endtime="20201030 10:59:25.939"></status>
</kw>
<msg timestamp="20201030 10:59:25.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020893, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020914111, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:25.653" endtime="20201030 10:59:25.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020893, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020914111, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:25.943" endtime="20201030 10:59:25.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:25.951" endtime="20201030 10:59:25.953"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.650" endtime="20201030 10:59:25.953"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.648" endtime="20201030 10:59:25.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:25.958" level="INFO">${RESULT} = [{'diff': 2.111100000000074e-05}, {'diff': 2.0207999999997256e-05}, {'diff': 2.0486000000000115e-05}, {'diff': 1.991700000000124e-05}, {'diff': 2.104099999999942e-05}, {'diff': 1.9944000000000905e-05}...</msg>
<status status="PASS" starttime="20201030 10:59:25.954" endtime="20201030 10:59:25.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:25.962" level="INFO">${ACCURACY} = {'diff': [2.111100000000074e-05, 2.0207999999997256e-05, 2.0486000000000115e-05, 1.991700000000124e-05, 2.104099999999942e-05, 1.9944000000000905e-05, 2.0486000000000115e-05, 1.987499999999906e-05, 2....</msg>
<status status="PASS" starttime="20201030 10:59:25.959" endtime="20201030 10:59:25.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.967" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 10:59:25.965" endtime="20201030 10:59:25.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:25.971" level="INFO">VALUE: [2.111100000000074e-05, 2.0207999999997256e-05, 2.0486000000000115e-05, 1.991700000000124e-05, 2.104099999999942e-05, 1.9944000000000905e-05, 2.0486000000000115e-05, 1.987499999999906e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.016699999999802e-05, 2.0777999999999075e-05, 2.0486000000000115e-05, 1.988899999999863e-05, 2.0528000000002294e-05, 2.0556000000001434e-05, 2.0763999999999505e-05, 2.0792000000002114e-05, 2.0486000000000115e-05, 2.0472000000000545e-05, 1.991700000000124e-05, 2.0541999999998395e-05, 2.079099999999917e-05, 2.0499999999999685e-05, 2.0722000000000795e-05, 2.022299999999977e-05, 2.018100000000106e-05, 2.027700000000257e-05, 2.0777999999999075e-05, 2.0208000000000725e-05, 2.0485999999996646e-05, 2.0778000000002544e-05, 2.0472000000000545e-05, 1.987499999999906e-05, 2.019500000000063e-05, 2.0777999999999075e-05, 2.019500000000063e-05, 2.076300000000003e-05, 2.0486000000000115e-05, 2.0763999999999505e-05, 2.052699999999935e-05, 1.990300000000167e-05, 2.02090000000002e-05, 2.0222000000000295e-05, 2.0499999999999685e-05, 2.052699999999935e-05, 2.0208000000000725e-05, 2.0499999999999685e-05, 2.0792000000002114e-05, 2.0499999999999685e-05]</msg>
<status status="PASS" starttime="20201030 10:59:25.968" endtime="20201030 10:59:25.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.963" endtime="20201030 10:59:25.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:25.976" endtime="20201030 10:59:25.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.974" endtime="20201030 10:59:25.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.973" endtime="20201030 10:59:25.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.617" endtime="20201030 10:59:25.997"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.616" endtime="20201030 10:59:25.997"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.006" endtime="20201030 10:59:26.020"></status>
</kw>
<msg timestamp="20201030 10:59:26.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:26.004" endtime="20201030 10:59:26.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:26.021" endtime="20201030 10:59:26.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.024" endtime="20201030 10:59:26.025"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.002" endtime="20201030 10:59:26.026"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.999" endtime="20201030 10:59:26.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.033" endtime="20201030 10:59:26.316"></status>
</kw>
<msg timestamp="20201030 10:59:26.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020077889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020098917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:26.031" endtime="20201030 10:59:26.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020077889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020098917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:26.320" endtime="20201030 10:59:26.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.328" endtime="20201030 10:59:26.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.029" endtime="20201030 10:59:26.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.027" endtime="20201030 10:59:26.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:26.335" level="INFO">${RESULT} = [{'diff': 2.1027999999999325e-05}, {'diff': 2.163900000000038e-05}, {'diff': 2.10830000000016e-05}, {'diff': 2.134700000000142e-05}, {'diff': 2.1402000000000226e-05}, {'diff': 2.133300000000185e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:26.332" endtime="20201030 10:59:26.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:26.342" level="INFO">${ACCURACY} = {'diff': [2.1027999999999325e-05, 2.163900000000038e-05, 2.10830000000016e-05, 2.134700000000142e-05, 2.1402000000000226e-05, 2.133300000000185e-05, 2.1055999999998465e-05, 2.161100000000124e-05, 2.16...</msg>
<status status="PASS" starttime="20201030 10:59:26.336" endtime="20201030 10:59:26.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.347" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 10:59:26.346" endtime="20201030 10:59:26.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.349" level="INFO">VALUE: [2.1027999999999325e-05, 2.163900000000038e-05, 2.10830000000016e-05, 2.134700000000142e-05, 2.1402000000000226e-05, 2.133300000000185e-05, 2.1055999999998465e-05, 2.161100000000124e-05, 2.161100000000124e-05, 2.163900000000038e-05, 2.1929999999999866e-05, 2.165299999999995e-05, 2.1069999999998035e-05, 2.1042000000002364e-05, 2.134700000000142e-05, 2.1278000000003044e-05, 2.136099999999752e-05, 2.193099999999934e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.191699999999977e-05, 2.106899999999856e-05, 2.1041999999998895e-05, 2.1027999999999325e-05, 2.161100000000124e-05, 2.161100000000124e-05, 2.133300000000185e-05, 2.1985999999998146e-05, 2.1901999999997257e-05, 2.161100000000124e-05, 2.1902000000000726e-05, 2.1348000000000894e-05, 2.133300000000185e-05, 2.163900000000038e-05, 2.193099999999934e-05, 2.105500000000246e-05, 2.104099999999942e-05, 2.106900000000203e-05, 2.162500000000081e-05, 2.134699999999795e-05, 2.163900000000038e-05, 2.165299999999995e-05, 2.1362000000000464e-05, 2.193099999999934e-05, 2.105500000000246e-05, 2.1652000000000476e-05, 2.108299999999813e-05, 2.162499999999734e-05, 2.134700000000142e-05, 2.191699999999977e-05]</msg>
<status status="PASS" starttime="20201030 10:59:26.348" endtime="20201030 10:59:26.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.343" endtime="20201030 10:59:26.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:26.354" endtime="20201030 10:59:26.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.353" endtime="20201030 10:59:26.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.352" endtime="20201030 10:59:26.374"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.998" endtime="20201030 10:59:26.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:25.997" endtime="20201030 10:59:26.375"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.383" endtime="20201030 10:59:26.399"></status>
</kw>
<msg timestamp="20201030 10:59:26.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:26.382" endtime="20201030 10:59:26.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:26.401" endtime="20201030 10:59:26.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.403" endtime="20201030 10:59:26.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.379" endtime="20201030 10:59:26.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.377" endtime="20201030 10:59:26.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.412" endtime="20201030 10:59:26.740"></status>
</kw>
<msg timestamp="20201030 10:59:26.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020001847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020024319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:26.411" endtime="20201030 10:59:26.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020001847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020024319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:26.744" endtime="20201030 10:59:26.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.753" endtime="20201030 10:59:26.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.408" endtime="20201030 10:59:26.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.406" endtime="20201030 10:59:26.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:26.759" level="INFO">${RESULT} = [{'diff': 2.2471999999999076e-05}, {'diff': 2.2778000000001075e-05}, {'diff': 2.247299999999855e-05}, {'diff': 2.2499999999998216e-05}, {'diff': 2.2193999999999686e-05}, {'diff': 2.1916000000000296e-0...</msg>
<status status="PASS" starttime="20201030 10:59:26.756" endtime="20201030 10:59:26.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:26.763" level="INFO">${ACCURACY} = {'diff': [2.2471999999999076e-05, 2.2778000000001075e-05, 2.247299999999855e-05, 2.2499999999998216e-05, 2.2193999999999686e-05, 2.1916000000000296e-05, 2.19030000000002e-05, 2.2777999999997606e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:59:26.760" endtime="20201030 10:59:26.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.768" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 10:59:26.767" endtime="20201030 10:59:26.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.770" level="INFO">VALUE: [2.2471999999999076e-05, 2.2778000000001075e-05, 2.247299999999855e-05, 2.2499999999998216e-05, 2.2193999999999686e-05, 2.1916000000000296e-05, 2.19030000000002e-05, 2.2777999999997606e-05, 2.2528000000000825e-05, 2.2499999999998216e-05, 2.2749999999998466e-05, 2.191699999999977e-05, 2.1916000000000296e-05, 2.2486000000002115e-05, 2.2500000000001685e-05, 2.2514000000001255e-05, 2.2500000000001685e-05, 2.2221999999998826e-05, 2.1943999999999436e-05, 2.284699999999945e-05, 2.1916000000000296e-05, 2.2486000000002115e-05, 2.2486000000002115e-05, 2.220899999999873e-05, 2.2194000000003156e-05, 2.219500000000263e-05, 2.1929999999999866e-05, 2.2778000000001075e-05, 2.2207999999999256e-05, 2.2791999999997176e-05, 2.2804999999997272e-05, 2.2763999999998036e-05, 2.195900000000195e-05, 2.2499999999998216e-05, 2.2207999999999256e-05, 2.2792000000000645e-05, 2.22090000000022e-05, 2.2263999999997536e-05, 2.2193999999999686e-05, 2.2778000000001075e-05, 2.2792000000000645e-05, 2.218099999999959e-05, 2.2500000000001685e-05, 2.2778000000001075e-05, 2.2514000000001255e-05, 2.216700000000002e-05, 2.2485999999998646e-05, 2.2499999999998216e-05, 2.244499999999941e-05, 2.2485999999998646e-05]</msg>
<status status="PASS" starttime="20201030 10:59:26.769" endtime="20201030 10:59:26.778"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.764" endtime="20201030 10:59:26.778"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:26.782" endtime="20201030 10:59:26.802"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.780" endtime="20201030 10:59:26.802"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.779" endtime="20201030 10:59:26.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.376" endtime="20201030 10:59:26.803"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.375" endtime="20201030 10:59:26.803"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.812" endtime="20201030 10:59:26.826"></status>
</kw>
<msg timestamp="20201030 10:59:26.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:26.810" endtime="20201030 10:59:26.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:26.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:26.828" endtime="20201030 10:59:26.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.830" endtime="20201030 10:59:26.831"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.808" endtime="20201030 10:59:26.832"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.806" endtime="20201030 10:59:26.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:26.839" endtime="20201030 10:59:27.126"></status>
</kw>
<msg timestamp="20201030 10:59:27.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019526986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:26.837" endtime="20201030 10:59:27.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019526986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:27.130" endtime="20201030 10:59:27.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.138" endtime="20201030 10:59:27.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.835" endtime="20201030 10:59:27.140"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.833" endtime="20201030 10:59:27.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:27.145" level="INFO">${RESULT} = [{'diff': 2.3694000000001186e-05}, {'diff': 2.394500000000091e-05}, {'diff': 2.336099999999952e-05}, {'diff': 2.3083999999999605e-05}, {'diff': 2.363900000000238e-05}, {'diff': 2.334699999999995e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:27.141" endtime="20201030 10:59:27.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:27.149" level="INFO">${ACCURACY} = {'diff': [2.3694000000001186e-05, 2.394500000000091e-05, 2.336099999999952e-05, 2.3083999999999605e-05, 2.363900000000238e-05, 2.334699999999995e-05, 2.3568999999997592e-05, 2.35970000000002e-05, 2.30...</msg>
<status status="PASS" starttime="20201030 10:59:27.145" endtime="20201030 10:59:27.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.154" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 10:59:27.153" endtime="20201030 10:59:27.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.156" level="INFO">VALUE: [2.3694000000001186e-05, 2.394500000000091e-05, 2.336099999999952e-05, 2.3083999999999605e-05, 2.363900000000238e-05, 2.334699999999995e-05, 2.3568999999997592e-05, 2.35970000000002e-05, 2.3070000000000035e-05, 2.306900000000056e-05, 2.362499999999934e-05, 2.337499999999909e-05, 2.334699999999995e-05, 2.390299999999873e-05, 2.336099999999952e-05, 2.3056000000000465e-05, 2.3651999999999007e-05, 2.361099999999977e-05, 2.336099999999952e-05, 2.361099999999977e-05, 2.334699999999995e-05, 2.39169999999983e-05, 2.337499999999909e-05, 2.3056000000000465e-05, 2.3056000000000465e-05, 2.365299999999848e-05, 2.361099999999977e-05, 2.3014000000001755e-05, 2.334699999999995e-05, 2.3055999999996996e-05, 2.3361999999998995e-05, 2.368100000000109e-05, 2.363899999999891e-05, 2.362500000000281e-05, 2.3042000000000895e-05, 2.306900000000056e-05, 2.312500000000231e-05, 2.334699999999995e-05, 2.306900000000056e-05, 2.363899999999891e-05, 2.336099999999952e-05, 2.337499999999909e-05, 2.3929999999998397e-05, 2.337500000000256e-05, 2.3055999999996996e-05, 2.3070000000000035e-05, 2.334699999999995e-05, 2.363900000000238e-05, 2.3930000000001866e-05, 2.3361999999998995e-05]</msg>
<status status="PASS" starttime="20201030 10:59:27.155" endtime="20201030 10:59:27.157"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.150" endtime="20201030 10:59:27.157"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:27.161" endtime="20201030 10:59:27.180"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.160" endtime="20201030 10:59:27.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.158" endtime="20201030 10:59:27.181"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.804" endtime="20201030 10:59:27.182"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:26.803" endtime="20201030 10:59:27.182"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.190" endtime="20201030 10:59:27.206"></status>
</kw>
<msg timestamp="20201030 10:59:27.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.189" endtime="20201030 10:59:27.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.207" endtime="20201030 10:59:27.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.210" endtime="20201030 10:59:27.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.186" endtime="20201030 10:59:27.212"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.184" endtime="20201030 10:59:27.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.219" endtime="20201030 10:59:27.505"></status>
</kw>
<msg timestamp="20201030 10:59:27.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019743889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019768625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:27.217" endtime="20201030 10:59:27.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019743889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019768625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:27.509" endtime="20201030 10:59:27.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.517" endtime="20201030 10:59:27.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.215" endtime="20201030 10:59:27.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.213" endtime="20201030 10:59:27.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:27.523" level="INFO">${RESULT} = [{'diff': 2.4736000000000896e-05}, {'diff': 2.4791999999999176e-05}, {'diff': 2.4207999999997787e-05}, {'diff': 2.419499999999769e-05}, {'diff': 2.4500000000000216e-05}, {'diff': 2.4486000000000646e-0...</msg>
<status status="PASS" starttime="20201030 10:59:27.520" endtime="20201030 10:59:27.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:27.528" level="INFO">${ACCURACY} = {'diff': [2.4736000000000896e-05, 2.4791999999999176e-05, 2.4207999999997787e-05, 2.419499999999769e-05, 2.4500000000000216e-05, 2.4486000000000646e-05, 2.3887999999999687e-05, 2.5068999999999092e-05,...</msg>
<status status="PASS" starttime="20201030 10:59:27.524" endtime="20201030 10:59:27.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.532" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 10:59:27.531" endtime="20201030 10:59:27.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.534" level="INFO">VALUE: [2.4736000000000896e-05, 2.4791999999999176e-05, 2.4207999999997787e-05, 2.419499999999769e-05, 2.4500000000000216e-05, 2.4486000000000646e-05, 2.3887999999999687e-05, 2.5068999999999092e-05, 2.4486000000000646e-05, 2.4777000000000132e-05, 2.4764000000000036e-05, 2.4791999999999176e-05, 2.4486000000000646e-05, 2.484700000000145e-05, 2.391700000000177e-05, 2.4777999999999606e-05, 2.4486000000000646e-05, 2.4471999999997607e-05, 2.4513999999999786e-05, 2.5056000000002465e-05, 2.390299999999873e-05, 2.4791999999999176e-05, 2.4556000000001965e-05, 2.4750000000000466e-05, 2.4179999999998647e-05, 2.4485999999997177e-05, 2.391700000000177e-05, 2.4707999999998287e-05, 2.4207999999997787e-05, 2.4764000000000036e-05, 2.4500000000000216e-05, 2.4236000000000396e-05, 2.4207999999997787e-05, 2.4764000000000036e-05, 2.4736000000000896e-05, 2.4777000000000132e-05, 2.444499999999794e-05, 2.4486000000000646e-05, 2.4429999999998897e-05, 2.4486000000000646e-05, 2.4486000000000646e-05, 2.419499999999769e-05, 2.4486000000000646e-05, 2.4486000000000646e-05, 2.4777000000000132e-05, 2.4179999999998647e-05, 2.4764000000000036e-05, 2.4193999999998217e-05, 2.4750000000000466e-05, 2.4472000000001076e-05]</msg>
<status status="PASS" starttime="20201030 10:59:27.533" endtime="20201030 10:59:27.535"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.528" endtime="20201030 10:59:27.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:27.539" endtime="20201030 10:59:27.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.538" endtime="20201030 10:59:27.559"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.537" endtime="20201030 10:59:27.560"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.183" endtime="20201030 10:59:27.560"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.182" endtime="20201030 10:59:27.560"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.568" endtime="20201030 10:59:27.584"></status>
</kw>
<msg timestamp="20201030 10:59:27.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.567" endtime="20201030 10:59:27.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.585" endtime="20201030 10:59:27.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.588" endtime="20201030 10:59:27.590"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.564" endtime="20201030 10:59:27.590"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.562" endtime="20201030 10:59:27.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.597" endtime="20201030 10:59:27.883"></status>
</kw>
<msg timestamp="20201030 10:59:27.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020303569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:27.595" endtime="20201030 10:59:27.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020303569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:27.887" endtime="20201030 10:59:27.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.895" endtime="20201030 10:59:27.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.593" endtime="20201030 10:59:27.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.591" endtime="20201030 10:59:27.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:27.902" level="INFO">${RESULT} = [{'diff': 2.5319999999998816e-05}, {'diff': 2.5624999999997872e-05}, {'diff': 2.511100000000127e-05}, {'diff': 2.5055999999998996e-05}, {'diff': 2.59170000000003e-05}, {'diff': 2.565300000000048e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:27.899" endtime="20201030 10:59:27.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:27.906" level="INFO">${ACCURACY} = {'diff': [2.5319999999998816e-05, 2.5624999999997872e-05, 2.511100000000127e-05, 2.5055999999998996e-05, 2.59170000000003e-05, 2.565300000000048e-05, 2.512500000000084e-05, 2.5055999999998996e-05, 2.5...</msg>
<status status="PASS" starttime="20201030 10:59:27.903" endtime="20201030 10:59:27.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.910" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 10:59:27.909" endtime="20201030 10:59:27.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.913" level="INFO">VALUE: [2.5319999999998816e-05, 2.5624999999997872e-05, 2.511100000000127e-05, 2.5055999999998996e-05, 2.59170000000003e-05, 2.565300000000048e-05, 2.512500000000084e-05, 2.5055999999998996e-05, 2.5624999999997872e-05, 2.563900000000091e-05, 2.562500000000134e-05, 2.534700000000195e-05, 2.5346999999998482e-05, 2.5360999999998052e-05, 2.5568999999999592e-05, 2.540299999999676e-05, 2.5070000000002035e-05, 2.5055999999998996e-05, 2.5624999999997872e-05, 2.562500000000134e-05, 2.563900000000091e-05, 2.5027999999999856e-05, 2.5346999999998482e-05, 2.562500000000134e-05, 2.536100000000152e-05, 2.511100000000127e-05, 2.5055999999998996e-05, 2.563900000000091e-05, 2.536100000000152e-05, 2.561100000000177e-05, 2.565300000000048e-05, 2.5348000000001425e-05, 2.5624999999997872e-05, 2.5347999999997956e-05, 2.562500000000134e-05, 2.5084000000001605e-05, 2.5972000000002576e-05, 2.5930000000000397e-05, 2.563899999999744e-05, 2.5332999999998912e-05, 2.537500000000109e-05, 2.5055999999998996e-05, 2.5652000000001007e-05, 2.562500000000134e-05, 2.534700000000195e-05, 2.512500000000084e-05, 2.5055999999998996e-05, 2.562500000000134e-05, 2.593099999999987e-05, 2.563900000000091e-05]</msg>
<status status="PASS" starttime="20201030 10:59:27.911" endtime="20201030 10:59:27.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.907" endtime="20201030 10:59:27.915"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:27.918" endtime="20201030 10:59:27.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.917" endtime="20201030 10:59:27.938"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.916" endtime="20201030 10:59:27.939"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.561" endtime="20201030 10:59:27.939"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.560" endtime="20201030 10:59:27.939"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.948" endtime="20201030 10:59:27.964"></status>
</kw>
<msg timestamp="20201030 10:59:27.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.946" endtime="20201030 10:59:27.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:27.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:27.965" endtime="20201030 10:59:27.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.968" endtime="20201030 10:59:27.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.944" endtime="20201030 10:59:27.970"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.942" endtime="20201030 10:59:27.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:27.977" endtime="20201030 10:59:28.262"></status>
</kw>
<msg timestamp="20201030 10:59:28.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019992444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020018931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:27.975" endtime="20201030 10:59:28.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019992444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020018931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:28.266" endtime="20201030 10:59:28.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.274" endtime="20201030 10:59:28.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.973" endtime="20201030 10:59:28.276"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.971" endtime="20201030 10:59:28.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:28.280" level="INFO">${RESULT} = [{'diff': 2.648699999999865e-05}, {'diff': 2.6776999999998663e-05}, {'diff': 2.6846999999999982e-05}, {'diff': 2.6847999999999456e-05}, {'diff': 2.616700000000055e-05}, {'diff': 2.6236000000002396e-05...</msg>
<status status="PASS" starttime="20201030 10:59:28.277" endtime="20201030 10:59:28.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:28.285" level="INFO">${ACCURACY} = {'diff': [2.648699999999865e-05, 2.6776999999998663e-05, 2.6846999999999982e-05, 2.6847999999999456e-05, 2.616700000000055e-05, 2.6236000000002396e-05, 2.6485999999999177e-05, 2.619499999999969e-05, 2...</msg>
<status status="PASS" starttime="20201030 10:59:28.281" endtime="20201030 10:59:28.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.290" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 10:59:28.289" endtime="20201030 10:59:28.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.292" level="INFO">VALUE: [2.648699999999865e-05, 2.6776999999998663e-05, 2.6846999999999982e-05, 2.6847999999999456e-05, 2.616700000000055e-05, 2.6236000000002396e-05, 2.6485999999999177e-05, 2.619499999999969e-05, 2.6207999999999787e-05, 2.6777999999998137e-05, 2.6556000000000496e-05, 2.648700000000212e-05, 2.6499999999998747e-05, 2.6486000000002646e-05, 2.5916000000000827e-05, 2.6207999999999787e-05, 2.59170000000003e-05, 2.620900000000273e-05, 2.6514000000001786e-05, 2.6207999999999787e-05, 2.6485999999999177e-05, 2.616700000000055e-05, 2.648700000000212e-05, 2.6499999999998747e-05, 2.6514000000001786e-05, 2.6235999999998927e-05, 2.618100000000012e-05, 2.6485999999999177e-05, 2.5957999999999537e-05, 2.6778000000001606e-05, 2.6471999999999607e-05, 2.6777999999998137e-05, 2.6486000000002646e-05, 2.6819000000000842e-05, 2.591699999999683e-05, 2.7055000000001522e-05, 2.6499999999998747e-05, 2.6207999999999787e-05, 2.619499999999969e-05, 2.6776999999998663e-05, 2.5930000000000397e-05, 2.6180000000000647e-05, 2.6763999999998567e-05, 2.6207999999999787e-05, 2.586100000000202e-05, 2.6792000000001176e-05, 2.6777999999998137e-05, 2.6513999999998317e-05, 2.59170000000003e-05, 2.6207999999999787e-05]</msg>
<status status="PASS" starttime="20201030 10:59:28.291" endtime="20201030 10:59:28.293"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.286" endtime="20201030 10:59:28.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:28.297" endtime="20201030 10:59:28.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.296" endtime="20201030 10:59:28.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.294" endtime="20201030 10:59:28.317"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.940" endtime="20201030 10:59:28.318"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:27.939" endtime="20201030 10:59:28.318"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.326" endtime="20201030 10:59:28.342"></status>
</kw>
<msg timestamp="20201030 10:59:28.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:28.325" endtime="20201030 10:59:28.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:28.343" endtime="20201030 10:59:28.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.346" endtime="20201030 10:59:28.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.322" endtime="20201030 10:59:28.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.320" endtime="20201030 10:59:28.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.355" endtime="20201030 10:59:28.657"></status>
</kw>
<msg timestamp="20201030 10:59:28.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019522083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019549444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:28.354" endtime="20201030 10:59:28.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019522083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019549444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:28.662" endtime="20201030 10:59:28.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.670" endtime="20201030 10:59:28.672"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.351" endtime="20201030 10:59:28.673"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.349" endtime="20201030 10:59:28.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:28.677" level="INFO">${RESULT} = [{'diff': 2.7361000000000052e-05}, {'diff': 2.7333000000000912e-05}, {'diff': 2.7624999999999872e-05}, {'diff': 2.7624999999999872e-05}, {'diff': 2.7333000000000912e-05}, {'diff': 2.7666000000002577e-...</msg>
<status status="PASS" starttime="20201030 10:59:28.674" endtime="20201030 10:59:28.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:28.681" level="INFO">${ACCURACY} = {'diff': [2.7361000000000052e-05, 2.7333000000000912e-05, 2.7624999999999872e-05, 2.7624999999999872e-05, 2.7333000000000912e-05, 2.7666000000002577e-05, 2.7638999999999442e-05, 2.7915999999999358e-05...</msg>
<status status="PASS" starttime="20201030 10:59:28.678" endtime="20201030 10:59:28.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.686" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 10:59:28.685" endtime="20201030 10:59:28.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.689" level="INFO">VALUE: [2.7361000000000052e-05, 2.7333000000000912e-05, 2.7624999999999872e-05, 2.7624999999999872e-05, 2.7333000000000912e-05, 2.7666000000002577e-05, 2.7638999999999442e-05, 2.7915999999999358e-05, 2.7069000000001092e-05, 2.7929999999998928e-05, 2.7013999999998817e-05, 2.7347000000000482e-05, 2.791699999999883e-05, 2.7361000000000052e-05, 2.7069000000001092e-05, 2.7347999999999956e-05, 2.7388999999999192e-05, 2.7611000000000302e-05, 2.7318999999997873e-05, 2.79309999999984e-05, 2.7347000000000482e-05, 2.79309999999984e-05, 2.7055000000001522e-05, 2.7304999999998303e-05, 2.7388999999999192e-05, 2.791699999999883e-05, 2.7070000000000566e-05, 2.7334000000000386e-05, 2.7305000000001772e-05, 2.7638999999999442e-05, 2.7638999999999442e-05, 2.7361000000000052e-05, 2.7638999999999442e-05, 2.7054999999998053e-05, 2.7332999999997443e-05, 2.7638999999999442e-05, 2.7929999999998928e-05, 2.7278000000002106e-05, 2.7361000000000052e-05, 2.7638999999999442e-05, 2.7638999999999442e-05, 2.7624999999999872e-05, 2.794500000000144e-05, 2.7638999999999442e-05, 2.7374999999999622e-05, 2.7347000000000482e-05, 2.7318999999997873e-05, 2.7097000000000232e-05, 2.7054999999998053e-05, 2.7083000000000662e-05]</msg>
<status status="PASS" starttime="20201030 10:59:28.687" endtime="20201030 10:59:28.689"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.682" endtime="20201030 10:59:28.690"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:28.694" endtime="20201030 10:59:28.713"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.692" endtime="20201030 10:59:28.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.691" endtime="20201030 10:59:28.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.319" endtime="20201030 10:59:28.714"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.318" endtime="20201030 10:59:28.715"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.724" endtime="20201030 10:59:28.739"></status>
</kw>
<msg timestamp="20201030 10:59:28.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:28.722" endtime="20201030 10:59:28.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:28.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:28.741" endtime="20201030 10:59:28.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.743" endtime="20201030 10:59:28.745"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.719" endtime="20201030 10:59:28.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.717" endtime="20201030 10:59:28.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:28.753" endtime="20201030 10:59:29.040"></status>
</kw>
<msg timestamp="20201030 10:59:29.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021099167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021127972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:28.751" endtime="20201030 10:59:29.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021099167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021127972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:29.044" endtime="20201030 10:59:29.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.053" endtime="20201030 10:59:29.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.749" endtime="20201030 10:59:29.055"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.747" endtime="20201030 10:59:29.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:29.060" level="INFO">${RESULT} = [{'diff': 2.8804999999999803e-05}, {'diff': 2.8208000000001787e-05}, {'diff': 2.8499999999997278e-05}, {'diff': 2.8471999999998138e-05}, {'diff': 2.8777000000000663e-05}, {'diff': 2.819499999999822e-0...</msg>
<status status="PASS" starttime="20201030 10:59:29.056" endtime="20201030 10:59:29.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:29.064" level="INFO">${ACCURACY} = {'diff': [2.8804999999999803e-05, 2.8208000000001787e-05, 2.8499999999997278e-05, 2.8471999999998138e-05, 2.8777000000000663e-05, 2.819499999999822e-05, 2.8778000000000137e-05, 2.8499999999997278e-05,...</msg>
<status status="PASS" starttime="20201030 10:59:29.061" endtime="20201030 10:59:29.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.068" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 10:59:29.067" endtime="20201030 10:59:29.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.072" level="INFO">VALUE: [2.8804999999999803e-05, 2.8208000000001787e-05, 2.8499999999997278e-05, 2.8471999999998138e-05, 2.8777000000000663e-05, 2.819499999999822e-05, 2.8778000000000137e-05, 2.8499999999997278e-05, 2.8777000000000663e-05, 2.8778000000000137e-05, 2.8764000000000567e-05, 2.8207999999998318e-05, 2.8221999999997888e-05, 2.8763999999997097e-05, 2.9082999999999193e-05, 2.8194000000002217e-05, 2.8193999999998748e-05, 2.8777000000000663e-05, 2.8500000000000747e-05, 2.8443999999998998e-05, 2.8514000000000317e-05, 2.84309999999989e-05, 2.8555999999999027e-05, 2.8778000000000137e-05, 2.9055000000000053e-05, 2.8208000000001787e-05, 2.7929999999998928e-05, 2.8778000000000137e-05, 2.7901999999999788e-05, 2.8194000000002217e-05, 2.8721999999998388e-05, 2.7888999999999692e-05, 2.8750000000000997e-05, 2.847300000000108e-05, 2.795900000000101e-05, 2.847300000000108e-05, 2.8500000000000747e-05, 2.7915999999999358e-05, 2.8486000000001177e-05, 2.8208000000001787e-05, 2.8778000000000137e-05, 2.8208000000001787e-05, 2.8250000000000497e-05, 2.8222000000001357e-05, 2.8555999999999027e-05, 2.8485999999997708e-05, 2.8486000000001177e-05, 2.8486000000001177e-05, 2.847300000000108e-05, 2.79309999999984e-05]</msg>
<status status="PASS" starttime="20201030 10:59:29.069" endtime="20201030 10:59:29.073"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.065" endtime="20201030 10:59:29.073"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:29.077" endtime="20201030 10:59:29.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.075" endtime="20201030 10:59:29.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.074" endtime="20201030 10:59:29.097"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.716" endtime="20201030 10:59:29.098"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:28.715" endtime="20201030 10:59:29.098"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.107" endtime="20201030 10:59:29.123"></status>
</kw>
<msg timestamp="20201030 10:59:29.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:29.105" endtime="20201030 10:59:29.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:29.124" endtime="20201030 10:59:29.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.127" endtime="20201030 10:59:29.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.103" endtime="20201030 10:59:29.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.100" endtime="20201030 10:59:29.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.136" endtime="20201030 10:59:29.422"></status>
</kw>
<msg timestamp="20201030 10:59:29.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020275264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020304625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:29.135" endtime="20201030 10:59:29.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020275264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020304625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:29.426" endtime="20201030 10:59:29.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.435" endtime="20201030 10:59:29.436"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.132" endtime="20201030 10:59:29.437"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.130" endtime="20201030 10:59:29.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:29.442" level="INFO">${RESULT} = [{'diff': 2.9360999999998583e-05}, {'diff': 2.9346999999999013e-05}, {'diff': 2.9346999999999013e-05}, {'diff': 2.9055000000000053e-05}, {'diff': 2.9681000000000152e-05}, {'diff': 2.997299999999911e-0...</msg>
<status status="PASS" starttime="20201030 10:59:29.438" endtime="20201030 10:59:29.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:29.447" level="INFO">${ACCURACY} = {'diff': [2.9360999999998583e-05, 2.9346999999999013e-05, 2.9346999999999013e-05, 2.9055000000000053e-05, 2.9681000000000152e-05, 2.997299999999911e-05, 2.9888999999998223e-05, 2.9347000000002482e-05,...</msg>
<status status="PASS" starttime="20201030 10:59:29.443" endtime="20201030 10:59:29.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.451" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 10:59:29.450" endtime="20201030 10:59:29.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.454" level="INFO">VALUE: [2.9360999999998583e-05, 2.9346999999999013e-05, 2.9346999999999013e-05, 2.9055000000000053e-05, 2.9681000000000152e-05, 2.997299999999911e-05, 2.9888999999998223e-05, 2.9347000000002482e-05, 2.9639000000001442e-05, 2.9639000000001442e-05, 2.9374999999998153e-05, 2.9624999999998403e-05, 2.9931000000000402e-05, 2.9666000000001108e-05, 2.9068999999999623e-05, 2.9624999999998403e-05, 2.9292000000000207e-05, 2.9902999999997792e-05, 2.9625000000001872e-05, 2.9930000000000928e-05, 2.991599999999789e-05, 2.9055000000000053e-05, 2.9332999999999443e-05, 2.9958000000000068e-05, 2.9931000000000402e-05, 2.9348000000001956e-05, 2.9320000000002816e-05, 2.9346999999999013e-05, 2.9638999999997973e-05, 2.9417000000000332e-05, 2.9639000000001442e-05, 2.9041000000000483e-05, 2.9624999999998403e-05, 2.9916000000001358e-05, 2.9347999999998486e-05, 2.9917000000000832e-05, 2.9346999999999013e-05, 2.9346999999999013e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9931000000000402e-05, 2.9625000000001872e-05, 2.9624999999998403e-05, 2.9346999999999013e-05, 2.9417000000000332e-05, 2.9611000000002302e-05, 2.9639000000001442e-05, 2.9056000000002996e-05, 2.9041999999999957e-05, 2.990199999999832e-05]</msg>
<status status="PASS" starttime="20201030 10:59:29.452" endtime="20201030 10:59:29.455"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.448" endtime="20201030 10:59:29.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:29.459" endtime="20201030 10:59:29.479"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.457" endtime="20201030 10:59:29.479"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.456" endtime="20201030 10:59:29.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.099" endtime="20201030 10:59:29.480"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.098" endtime="20201030 10:59:29.480"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.489" endtime="20201030 10:59:29.504"></status>
</kw>
<msg timestamp="20201030 10:59:29.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:29.487" endtime="20201030 10:59:29.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:29.506" endtime="20201030 10:59:29.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.509" endtime="20201030 10:59:29.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.485" endtime="20201030 10:59:29.511"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.483" endtime="20201030 10:59:29.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.518" endtime="20201030 10:59:29.806"></status>
</kw>
<msg timestamp="20201030 10:59:29.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020115764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020145736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:29.516" endtime="20201030 10:59:29.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020115764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020145736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:29.810" endtime="20201030 10:59:29.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.819" endtime="20201030 10:59:29.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.514" endtime="20201030 10:59:29.821"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.512" endtime="20201030 10:59:29.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:29.826" level="INFO">${RESULT} = [{'diff': 2.9971999999999638e-05}, {'diff': 3.077700000000266e-05}, {'diff': 3.0513999999998848e-05}, {'diff': 3.077800000000214e-05}, {'diff': 3.080600000000128e-05}, {'diff': 3.077799999999867e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:29.822" endtime="20201030 10:59:29.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:29.830" level="INFO">${ACCURACY} = {'diff': [2.9971999999999638e-05, 3.077700000000266e-05, 3.0513999999998848e-05, 3.077800000000214e-05, 3.080600000000128e-05, 3.077799999999867e-05, 3.0430000000001428e-05, 3.07639999999991e-05, 3.04...</msg>
<status status="PASS" starttime="20201030 10:59:29.827" endtime="20201030 10:59:29.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.834" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 10:59:29.833" endtime="20201030 10:59:29.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.837" level="INFO">VALUE: [2.9971999999999638e-05, 3.077700000000266e-05, 3.0513999999998848e-05, 3.077800000000214e-05, 3.080600000000128e-05, 3.077799999999867e-05, 3.0430000000001428e-05, 3.07639999999991e-05, 3.0499999999999278e-05, 3.101399999999935e-05, 3.020899999999979e-05, 3.0485999999999708e-05, 3.0194000000000748e-05, 3.074999999999953e-05, 2.994499999999997e-05, 3.0208000000000318e-05, 3.0485999999999708e-05, 3.0499999999999278e-05, 3.0194000000000748e-05, 3.0776999999999194e-05, 3.019500000000022e-05, 3.0499999999999278e-05, 3.020899999999979e-05, 3.047300000000308e-05, 3.07639999999991e-05, 3.105600000000153e-05, 2.9930000000000928e-05, 3.020900000000326e-05, 3.079200000000171e-05, 3.0499999999999278e-05, 3.077800000000214e-05, 2.9931000000000402e-05, 3.0221999999999888e-05, 3.0762999999999624e-05, 3.0221999999999888e-05, 3.0750000000003e-05, 3.0180000000001178e-05, 3.101399999999935e-05, 3.079100000000223e-05, 3.0208000000000318e-05, 3.07639999999991e-05, 3.0499999999999278e-05, 3.0221999999999888e-05, 3.072200000000039e-05, 3.0221999999999888e-05, 3.0235999999999458e-05, 3.0208000000000318e-05, 3.0208000000000318e-05, 3.0208000000000318e-05, 3.019500000000022e-05]</msg>
<status status="PASS" starttime="20201030 10:59:29.836" endtime="20201030 10:59:29.838"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.831" endtime="20201030 10:59:29.838"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:29.842" endtime="20201030 10:59:29.862"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.841" endtime="20201030 10:59:29.862"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.839" endtime="20201030 10:59:29.863"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.481" endtime="20201030 10:59:29.863"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.480" endtime="20201030 10:59:29.863"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.872" endtime="20201030 10:59:29.890"></status>
</kw>
<msg timestamp="20201030 10:59:29.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:29.870" endtime="20201030 10:59:29.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:29.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:29.892" endtime="20201030 10:59:29.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.895" endtime="20201030 10:59:29.896"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.868" endtime="20201030 10:59:29.897"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.866" endtime="20201030 10:59:29.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:29.904" endtime="20201030 10:59:30.191"></status>
</kw>
<msg timestamp="20201030 10:59:30.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022951014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022982653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:29.902" endtime="20201030 10:59:30.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022951014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022982653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:30.195" endtime="20201030 10:59:30.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.203" endtime="20201030 10:59:30.205"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.900" endtime="20201030 10:59:30.206"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.898" endtime="20201030 10:59:30.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:30.210" level="INFO">${RESULT} = [{'diff': 3.163899999999997e-05}, {'diff': 3.19310000000024e-05}, {'diff': 3.105500000000205e-05}, {'diff': 3.165200000000007e-05}, {'diff': 3.191699999999936e-05}, {'diff': 3.140299999999929e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:30.207" endtime="20201030 10:59:30.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:30.214" level="INFO">${ACCURACY} = {'diff': [3.163899999999997e-05, 3.19310000000024e-05, 3.105500000000205e-05, 3.165200000000007e-05, 3.191699999999936e-05, 3.140299999999929e-05, 3.108300000000119e-05, 3.158300000000169e-05, 3.19300...</msg>
<status status="PASS" starttime="20201030 10:59:30.211" endtime="20201030 10:59:30.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.219" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 10:59:30.218" endtime="20201030 10:59:30.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.222" level="INFO">VALUE: [3.163899999999997e-05, 3.19310000000024e-05, 3.105500000000205e-05, 3.165200000000007e-05, 3.191699999999936e-05, 3.140299999999929e-05, 3.108300000000119e-05, 3.158300000000169e-05, 3.193000000000293e-05, 3.138899999999972e-05, 3.10700000000011e-05, 3.16250000000004e-05, 3.190200000000032e-05, 3.165299999999954e-05, 3.190299999999979e-05, 3.161100000000083e-05, 3.134799999999702e-05, 3.1348000000000487e-05, 3.136100000000058e-05, 3.16380000000005e-05, 3.1054999999998584e-05, 3.16380000000005e-05, 3.106900000000162e-05, 3.1054999999998584e-05, 3.130599999999831e-05, 3.102799999999892e-05, 3.19310000000024e-05, 3.163899999999997e-05, 3.16250000000004e-05, 3.137500000000015e-05, 3.165299999999954e-05, 3.127799999999917e-05, 3.132000000000135e-05, 3.166699999999911e-05, 3.129199999999874e-05, 3.134700000000101e-05, 3.170800000000182e-05, 3.191699999999936e-05, 3.193000000000293e-05, 3.1068999999998154e-05, 3.16250000000004e-05, 3.163899999999997e-05, 3.190299999999979e-05, 3.10700000000011e-05, 3.1348000000000487e-05, 3.131999999999788e-05, 3.11249999999999e-05, 3.187500000000065e-05, 3.193099999999893e-05, 3.191699999999936e-05]</msg>
<status status="PASS" starttime="20201030 10:59:30.220" endtime="20201030 10:59:30.223"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.215" endtime="20201030 10:59:30.224"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:30.228" endtime="20201030 10:59:30.247"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.226" endtime="20201030 10:59:30.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.225" endtime="20201030 10:59:30.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.864" endtime="20201030 10:59:30.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:29.863" endtime="20201030 10:59:30.249"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.258" endtime="20201030 10:59:30.274"></status>
</kw>
<msg timestamp="20201030 10:59:30.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:30.256" endtime="20201030 10:59:30.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:30.276" endtime="20201030 10:59:30.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.278" endtime="20201030 10:59:30.280"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.253" endtime="20201030 10:59:30.281"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.251" endtime="20201030 10:59:30.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.288" endtime="20201030 10:59:30.573"></status>
</kw>
<msg timestamp="20201030 10:59:30.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020660931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020693139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:30.286" endtime="20201030 10:59:30.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020660931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020693139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:30.577" endtime="20201030 10:59:30.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.586" endtime="20201030 10:59:30.587"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.283" endtime="20201030 10:59:30.588"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.282" endtime="20201030 10:59:30.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:30.592" level="INFO">${RESULT} = [{'diff': 3.220799999999885e-05}, {'diff': 3.219499999999875e-05}, {'diff': 3.222299999999789e-05}, {'diff': 3.249999999999781e-05}, {'diff': 3.277800000000067e-05}, {'diff': 3.2818999999999904e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:30.589" endtime="20201030 10:59:30.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:30.598" level="INFO">${ACCURACY} = {'diff': [3.220799999999885e-05, 3.219499999999875e-05, 3.222299999999789e-05, 3.249999999999781e-05, 3.277800000000067e-05, 3.2818999999999904e-05, 3.220799999999885e-05, 3.223599999999799e-05, 3.248...</msg>
<status status="PASS" starttime="20201030 10:59:30.593" endtime="20201030 10:59:30.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.602" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 10:59:30.601" endtime="20201030 10:59:30.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.605" level="INFO">VALUE: [3.220799999999885e-05, 3.219499999999875e-05, 3.222299999999789e-05, 3.249999999999781e-05, 3.277800000000067e-05, 3.2818999999999904e-05, 3.220799999999885e-05, 3.223599999999799e-05, 3.248600000000171e-05, 3.2846999999999044e-05, 3.255599999999956e-05, 3.219399999999928e-05, 3.3069000000000154e-05, 3.250000000000128e-05, 3.270899999999882e-05, 3.272299999999839e-05, 3.277800000000067e-05, 3.2777000000001194e-05, 3.251399999999738e-05, 3.1846999999998044e-05, 3.2541000000000514e-05, 3.219500000000222e-05, 3.192999999999946e-05, 3.277800000000067e-05, 3.2818999999999904e-05, 3.220800000000232e-05, 3.222200000000189e-05, 3.223600000000146e-05, 3.244500000000247e-05, 3.247200000000214e-05, 3.277800000000067e-05, 3.220799999999885e-05, 3.220799999999885e-05, 3.248599999999824e-05, 3.249999999999781e-05, 3.247300000000161e-05, 3.27640000000011e-05, 3.2846999999999044e-05, 3.275000000000153e-05, 3.223599999999799e-05, 3.248600000000171e-05, 3.284700000000251e-05, 3.279200000000024e-05, 3.248700000000118e-05, 3.191699999999936e-05, 3.252800000000042e-05, 3.248599999999824e-05, 3.190200000000032e-05, 3.280599999999981e-05, 3.219399999999928e-05]</msg>
<status status="PASS" starttime="20201030 10:59:30.603" endtime="20201030 10:59:30.606"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.599" endtime="20201030 10:59:30.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:30.610" endtime="20201030 10:59:30.629"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.608" endtime="20201030 10:59:30.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.607" endtime="20201030 10:59:30.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.249" endtime="20201030 10:59:30.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.249" endtime="20201030 10:59:30.631"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.640" endtime="20201030 10:59:30.656"></status>
</kw>
<msg timestamp="20201030 10:59:30.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:30.638" endtime="20201030 10:59:30.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:30.658" endtime="20201030 10:59:30.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.660" endtime="20201030 10:59:30.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.635" endtime="20201030 10:59:30.662"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.633" endtime="20201030 10:59:30.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.670" endtime="20201030 10:59:30.956"></status>
</kw>
<msg timestamp="20201030 10:59:30.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020615264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020648639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:30.668" endtime="20201030 10:59:30.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020615264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020648639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:30.961" endtime="20201030 10:59:30.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:30.969" endtime="20201030 10:59:30.971"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.665" endtime="20201030 10:59:30.972"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.664" endtime="20201030 10:59:30.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:30.976" level="INFO">${RESULT} = [{'diff': 3.3374999999998683e-05}, {'diff': 3.31250000000019e-05}, {'diff': 3.306999999999963e-05}, {'diff': 3.3346999999999544e-05}, {'diff': 3.3638999999998503e-05}, {'diff': 3.363900000000197e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:30.973" endtime="20201030 10:59:30.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:30.980" level="INFO">${ACCURACY} = {'diff': [3.3374999999998683e-05, 3.31250000000019e-05, 3.306999999999963e-05, 3.3346999999999544e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.3346999999999544e-05, 3.3290999999997795e-05, 3....</msg>
<status status="PASS" starttime="20201030 10:59:30.977" endtime="20201030 10:59:30.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.985" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 10:59:30.984" endtime="20201030 10:59:30.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:30.988" level="INFO">VALUE: [3.3374999999998683e-05, 3.31250000000019e-05, 3.306999999999963e-05, 3.3346999999999544e-05, 3.3638999999998503e-05, 3.363900000000197e-05, 3.3346999999999544e-05, 3.3290999999997795e-05, 3.365299999999807e-05, 3.306999999999963e-05, 3.304200000000049e-05, 3.3624999999998934e-05, 3.365300000000154e-05, 3.393100000000093e-05, 3.3096999999999294e-05, 3.30700000000031e-05, 3.365299999999807e-05, 3.333399999999945e-05, 3.3069000000000154e-05, 3.368100000000068e-05, 3.36250000000024e-05, 3.391700000000136e-05, 3.3082999999999724e-05, 3.306999999999963e-05, 3.36250000000024e-05, 3.30700000000031e-05, 3.3360999999999114e-05, 3.3888999999998753e-05, 3.3624999999998934e-05, 3.3346999999999544e-05, 3.390299999999832e-05, 3.3624999999998934e-05, 3.3638999999998503e-05, 3.336100000000258e-05, 3.3069000000000154e-05, 3.3624999999998934e-05, 3.393099999999746e-05, 3.3346999999999544e-05, 3.361199999999884e-05, 3.36519999999986e-05, 3.341700000000086e-05, 3.3624999999998934e-05, 3.305600000000006e-05, 3.30700000000031e-05, 3.309700000000276e-05, 3.3610999999999364e-05, 3.3346999999999544e-05, 3.3596999999999794e-05, 3.3069000000000154e-05, 3.334799999999902e-05]</msg>
<status status="PASS" starttime="20201030 10:59:30.986" endtime="20201030 10:59:30.988"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.981" endtime="20201030 10:59:30.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:30.993" endtime="20201030 10:59:31.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.991" endtime="20201030 10:59:31.013"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.990" endtime="20201030 10:59:31.013"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.632" endtime="20201030 10:59:31.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:30.631" endtime="20201030 10:59:31.014"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.023" endtime="20201030 10:59:31.040"></status>
</kw>
<msg timestamp="20201030 10:59:31.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:31.021" endtime="20201030 10:59:31.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:31.042" endtime="20201030 10:59:31.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.045" endtime="20201030 10:59:31.047"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.018" endtime="20201030 10:59:31.047"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.016" endtime="20201030 10:59:31.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.055" endtime="20201030 10:59:31.342"></status>
</kw>
<msg timestamp="20201030 10:59:31.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021402903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021447333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:31.053" endtime="20201030 10:59:31.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021402903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021447333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:31.346" endtime="20201030 10:59:31.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.355" endtime="20201030 10:59:31.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.051" endtime="20201030 10:59:31.357"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.049" endtime="20201030 10:59:31.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:31.362" level="INFO">${RESULT} = [{'diff': 4.442999999999808e-05}, {'diff': 4.3638999999998096e-05}, {'diff': 4.394400000000062e-05}, {'diff': 4.356899999999678e-05}, {'diff': 4.3916999999997486e-05}, {'diff': 4.39999999999989e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:31.358" endtime="20201030 10:59:31.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:31.366" level="INFO">${ACCURACY} = {'diff': [4.442999999999808e-05, 4.3638999999998096e-05, 4.394400000000062e-05, 4.356899999999678e-05, 4.3916999999997486e-05, 4.39999999999989e-05, 4.34860000000023e-05, 4.38060000000004e-05, 4.39999...</msg>
<status status="PASS" starttime="20201030 10:59:31.363" endtime="20201030 10:59:31.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.371" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 10:59:31.370" endtime="20201030 10:59:31.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.373" level="INFO">VALUE: [4.442999999999808e-05, 4.3638999999998096e-05, 4.394400000000062e-05, 4.356899999999678e-05, 4.3916999999997486e-05, 4.39999999999989e-05, 4.34860000000023e-05, 4.38060000000004e-05, 4.39999999999989e-05, 4.379200000000083e-05, 4.3582999999999816e-05, 4.3638999999998096e-05, 4.3653000000001135e-05, 4.36800000000008e-05, 4.358400000000276e-05, 4.3653000000001135e-05, 4.4388999999998846e-05, 4.34999999999984e-05, 4.4153000000001635e-05, 4.379200000000083e-05, 4.372199999999951e-05, 4.392999999999758e-05, 4.354200000000058e-05, 4.4152999999998166e-05, 4.3653000000001135e-05, 4.3582999999999816e-05, 4.422200000000001e-05, 4.3611000000002426e-05, 4.4055000000001177e-05, 4.4472999999999735e-05, 4.3945000000000095e-05, 4.373600000000255e-05, 4.3945000000000095e-05, 4.358400000000276e-05, 4.416599999999826e-05, 4.422200000000001e-05, 4.3653000000001135e-05, 4.358399999999929e-05, 4.409799999999936e-05, 4.405600000000065e-05, 4.39999999999989e-05, 4.3722999999998985e-05, 4.413799999999912e-05, 4.39999999999989e-05, 4.3860999999999206e-05, 4.366600000000123e-05, 4.443000000000155e-05, 4.4096999999999886e-05, 4.3582999999999816e-05, 4.4153000000001635e-05]</msg>
<status status="PASS" starttime="20201030 10:59:31.372" endtime="20201030 10:59:31.375"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.367" endtime="20201030 10:59:31.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:31.379" endtime="20201030 10:59:31.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.378" endtime="20201030 10:59:31.399"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.376" endtime="20201030 10:59:31.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.015" endtime="20201030 10:59:31.400"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.014" endtime="20201030 10:59:31.400"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.409" endtime="20201030 10:59:31.426"></status>
</kw>
<msg timestamp="20201030 10:59:31.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:31.407" endtime="20201030 10:59:31.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:31.428" endtime="20201030 10:59:31.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.430" endtime="20201030 10:59:31.432"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.405" endtime="20201030 10:59:31.433"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.403" endtime="20201030 10:59:31.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.440" endtime="20201030 10:59:31.726"></status>
</kw>
<msg timestamp="20201030 10:59:31.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:31.438" endtime="20201030 10:59:31.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:31.731" endtime="20201030 10:59:31.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.739" endtime="20201030 10:59:31.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.436" endtime="20201030 10:59:31.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.434" endtime="20201030 10:59:31.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:31.746" level="INFO">${RESULT} = [{'diff': 4.482000000000097e-05}, {'diff': 4.4888999999999346e-05}, {'diff': 4.51800000000023e-05}, {'diff': 4.522199999999754e-05}, {'diff': 4.530500000000243e-05}, {'diff': 4.506899999999828e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:31.742" endtime="20201030 10:59:31.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:31.751" level="INFO">${ACCURACY} = {'diff': [4.482000000000097e-05, 4.4888999999999346e-05, 4.51800000000023e-05, 4.522199999999754e-05, 4.530500000000243e-05, 4.506899999999828e-05, 4.456899999999778e-05, 4.529200000000233e-05, 4.5152...</msg>
<status status="PASS" starttime="20201030 10:59:31.747" endtime="20201030 10:59:31.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.756" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 10:59:31.754" endtime="20201030 10:59:31.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.758" level="INFO">VALUE: [4.482000000000097e-05, 4.4888999999999346e-05, 4.51800000000023e-05, 4.522199999999754e-05, 4.530500000000243e-05, 4.506899999999828e-05, 4.456899999999778e-05, 4.529200000000233e-05, 4.5152999999999166e-05, 4.508299999999785e-05, 4.4847000000000636e-05, 4.4653000000002135e-05, 4.5416999999998986e-05, 4.448599999999983e-05, 4.4847000000000636e-05, 4.534699999999767e-05, 4.4847000000000636e-05, 4.472200000000051e-05, 4.527799999999929e-05, 4.4638999999999096e-05, 4.527800000000276e-05, 4.5208999999997446e-05, 4.527799999999929e-05, 4.479099999999889e-05, 4.49999999999999e-05, 4.493000000000205e-05, 4.491599999999901e-05, 4.5138999999999596e-05, 4.502799999999904e-05, 4.4652999999998666e-05, 4.502799999999904e-05, 4.492999999999858e-05, 4.454200000000158e-05, 4.5125000000000026e-05, 4.49999999999999e-05, 4.4638999999999096e-05, 4.5152999999999166e-05, 4.4653000000002135e-05, 4.523600000000058e-05, 4.497200000000076e-05, 4.4652999999998666e-05, 4.479199999999836e-05, 4.5125000000000026e-05, 4.5153000000002635e-05, 4.506899999999828e-05, 4.544399999999865e-05, 4.451400000000244e-05, 4.4874999999999776e-05, 4.4861000000000206e-05, 4.544400000000212e-05]</msg>
<status status="PASS" starttime="20201030 10:59:31.757" endtime="20201030 10:59:31.759"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.752" endtime="20201030 10:59:31.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:31.764" endtime="20201030 10:59:31.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.762" endtime="20201030 10:59:31.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.761" endtime="20201030 10:59:31.784"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.401" endtime="20201030 10:59:31.785"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.400" endtime="20201030 10:59:31.785"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.794" endtime="20201030 10:59:31.812"></status>
</kw>
<msg timestamp="20201030 10:59:31.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:31.792" endtime="20201030 10:59:31.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:31.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:31.813" endtime="20201030 10:59:31.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.816" endtime="20201030 10:59:31.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.790" endtime="20201030 10:59:31.818"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.788" endtime="20201030 10:59:31.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:31.825" endtime="20201030 10:59:32.113"></status>
</kw>
<msg timestamp="20201030 10:59:32.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021226917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021272458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:31.824" endtime="20201030 10:59:32.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021226917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021272458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:32.118" endtime="20201030 10:59:32.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.126" endtime="20201030 10:59:32.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.821" endtime="20201030 10:59:32.128"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.819" endtime="20201030 10:59:32.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:32.133" level="INFO">${RESULT} = [{'diff': 4.554099999999964e-05}, {'diff': 4.6375000000001276e-05}, {'diff': 4.592999999999958e-05}, {'diff': 4.6416999999999986e-05}, {'diff': 4.5652999999999666e-05}, {'diff': 4.580499999999946e-05}...</msg>
<status status="PASS" starttime="20201030 10:59:32.130" endtime="20201030 10:59:32.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:32.137" level="INFO">${ACCURACY} = {'diff': [4.554099999999964e-05, 4.6375000000001276e-05, 4.592999999999958e-05, 4.6416999999999986e-05, 4.5652999999999666e-05, 4.580499999999946e-05, 4.6111000000001456e-05, 4.6153000000000166e-05, 4...</msg>
<status status="PASS" starttime="20201030 10:59:32.134" endtime="20201030 10:59:32.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.142" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 10:59:32.141" endtime="20201030 10:59:32.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.144" level="INFO">VALUE: [4.554099999999964e-05, 4.6375000000001276e-05, 4.592999999999958e-05, 4.6416999999999986e-05, 4.5652999999999666e-05, 4.580499999999946e-05, 4.6111000000001456e-05, 4.6153000000000166e-05, 4.586099999999774e-05, 4.636099999999824e-05, 4.5902999999999916e-05, 4.6153000000000166e-05, 4.5916999999999486e-05, 4.58060000000024e-05, 4.563899999999663e-05, 4.573599999999761e-05, 4.609800000000136e-05, 4.55000000000004e-05, 4.6013000000001e-05, 4.5861000000001206e-05, 4.6097000000001886e-05, 4.636099999999824e-05, 4.636099999999824e-05, 4.572199999999804e-05, 4.599999999999743e-05, 4.584699999999817e-05, 4.6139000000000596e-05, 4.627800000000029e-05, 4.55000000000004e-05, 4.636099999999824e-05, 4.558299999999835e-05, 4.557000000000172e-05, 4.5652999999999666e-05, 4.5625000000000526e-05, 4.5639000000000096e-05, 4.577799999999979e-05, 4.630599999999943e-05, 4.6223000000001485e-05, 4.590200000000044e-05, 4.60000000000009e-05, 4.570800000000194e-05, 4.598600000000133e-05, 4.558299999999835e-05, 4.5680999999998806e-05, 4.6347000000002136e-05, 4.579099999999989e-05, 4.5875000000000776e-05, 4.5652999999999666e-05, 4.593000000000305e-05, 4.5945000000002095e-05]</msg>
<status status="PASS" starttime="20201030 10:59:32.143" endtime="20201030 10:59:32.151"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.138" endtime="20201030 10:59:32.152"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:32.156" endtime="20201030 10:59:32.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.154" endtime="20201030 10:59:32.176"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.153" endtime="20201030 10:59:32.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.786" endtime="20201030 10:59:32.177"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:31.785" endtime="20201030 10:59:32.177"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.186" endtime="20201030 10:59:32.204"></status>
</kw>
<msg timestamp="20201030 10:59:32.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:32.184" endtime="20201030 10:59:32.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:32.206" endtime="20201030 10:59:32.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.209" endtime="20201030 10:59:32.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.182" endtime="20201030 10:59:32.211"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.180" endtime="20201030 10:59:32.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.218" endtime="20201030 10:59:32.504"></status>
</kw>
<msg timestamp="20201030 10:59:32.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021166986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021214153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:32.217" endtime="20201030 10:59:32.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021166986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021214153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:32.509" endtime="20201030 10:59:32.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.517" endtime="20201030 10:59:32.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.214" endtime="20201030 10:59:32.520"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.212" endtime="20201030 10:59:32.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:32.524" level="INFO">${RESULT} = [{'diff': 4.7167000000000736e-05}, {'diff': 4.679200000000036e-05}, {'diff': 4.706900000000028e-05}, {'diff': 4.6722999999998516e-05}, {'diff': 4.705600000000018e-05}, {'diff': 4.65130000000015e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:32.521" endtime="20201030 10:59:32.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:32.528" level="INFO">${ACCURACY} = {'diff': [4.7167000000000736e-05, 4.679200000000036e-05, 4.706900000000028e-05, 4.6722999999998516e-05, 4.705600000000018e-05, 4.65130000000015e-05, 4.6875000000001776e-05, 4.673599999999861e-05, 4.66...</msg>
<status status="PASS" starttime="20201030 10:59:32.525" endtime="20201030 10:59:32.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.533" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 10:59:32.532" endtime="20201030 10:59:32.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.536" level="INFO">VALUE: [4.7167000000000736e-05, 4.679200000000036e-05, 4.706900000000028e-05, 4.6722999999998516e-05, 4.705600000000018e-05, 4.65130000000015e-05, 4.6875000000001776e-05, 4.673599999999861e-05, 4.663799999999815e-05, 4.666600000000076e-05, 4.729200000000086e-05, 4.6708999999998946e-05, 4.729100000000139e-05, 4.694400000000015e-05, 4.66939999999999e-05, 4.71529999999977e-05, 4.727800000000129e-05, 4.679200000000036e-05, 4.729200000000086e-05, 4.708399999999932e-05, 4.65139999999975e-05, 4.736099999999924e-05, 4.675000000000165e-05, 4.6583000000002817e-05, 4.730600000000043e-05, 4.718000000000083e-05, 4.729200000000086e-05, 4.681900000000003e-05, 4.649999999999793e-05, 4.656899999999978e-05, 4.65000000000014e-05, 4.6861000000002206e-05, 4.648600000000183e-05, 4.729099999999792e-05, 4.712499999999856e-05, 4.744400000000065e-05, 4.71529999999977e-05, 4.75000000000024e-05, 4.736099999999924e-05, 4.720799999999997e-05, 4.6931000000000056e-05, 4.734699999999967e-05, 4.722199999999954e-05, 4.687499999999831e-05, 4.658399999999882e-05, 4.6708999999998946e-05, 4.6917000000000486e-05, 4.723599999999911e-05, 4.686200000000168e-05, 4.679099999999742e-05]</msg>
<status status="PASS" starttime="20201030 10:59:32.534" endtime="20201030 10:59:32.537"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.529" endtime="20201030 10:59:32.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:32.542" endtime="20201030 10:59:32.561"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.540" endtime="20201030 10:59:32.562"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.539" endtime="20201030 10:59:32.562"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.178" endtime="20201030 10:59:32.562"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.177" endtime="20201030 10:59:32.562"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.572" endtime="20201030 10:59:32.589"></status>
</kw>
<msg timestamp="20201030 10:59:32.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:32.570" endtime="20201030 10:59:32.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:32.591" endtime="20201030 10:59:32.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.594" endtime="20201030 10:59:32.595"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.567" endtime="20201030 10:59:32.596"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.565" endtime="20201030 10:59:32.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.603" endtime="20201030 10:59:32.889"></status>
</kw>
<msg timestamp="20201030 10:59:32.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021246556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021294958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:32.601" endtime="20201030 10:59:32.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021246556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021294958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:32.894" endtime="20201030 10:59:32.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.902" endtime="20201030 10:59:32.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.599" endtime="20201030 10:59:32.904"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.597" endtime="20201030 10:59:32.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:32.909" level="INFO">${RESULT} = [{'diff': 4.840199999999947e-05}, {'diff': 4.777800000000179e-05}, {'diff': 4.788899999999888e-05}, {'diff': 4.78330000000006e-05}, {'diff': 4.801400000000247e-05}, {'diff': 4.822200000000054e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:32.906" endtime="20201030 10:59:32.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:32.914" level="INFO">${ACCURACY} = {'diff': [4.840199999999947e-05, 4.777800000000179e-05, 4.788899999999888e-05, 4.78330000000006e-05, 4.801400000000247e-05, 4.822200000000054e-05, 4.7639000000002096e-05, 4.830599999999796e-05, 4.8152...</msg>
<status status="PASS" starttime="20201030 10:59:32.910" endtime="20201030 10:59:32.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.919" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 10:59:32.918" endtime="20201030 10:59:32.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.922" level="INFO">VALUE: [4.840199999999947e-05, 4.777800000000179e-05, 4.788899999999888e-05, 4.78330000000006e-05, 4.801400000000247e-05, 4.822200000000054e-05, 4.7639000000002096e-05, 4.830599999999796e-05, 4.81529999999987e-05, 4.834700000000067e-05, 4.776400000000222e-05, 4.772200000000004e-05, 4.8445000000001126e-05, 4.780600000000093e-05, 4.7736999999999086e-05, 4.7722999999999516e-05, 4.790199999999897e-05, 4.784700000000017e-05, 4.756900000000078e-05, 4.772200000000004e-05, 4.758300000000035e-05, 4.787499999999931e-05, 4.811099999999999e-05, 4.788899999999888e-05, 4.806899999999781e-05, 4.794400000000115e-05, 4.784700000000017e-05, 4.822200000000054e-05, 4.773599999999961e-05, 4.836100000000024e-05, 4.8153000000002166e-05, 4.7931000000001056e-05, 4.824999999999968e-05, 4.772200000000004e-05, 4.8445000000001126e-05, 4.7737000000002555e-05, 4.807000000000075e-05, 4.755500000000121e-05, 4.8223000000000016e-05, 4.755499999999774e-05, 4.815199999999922e-05, 4.773599999999961e-05, 4.837499999999981e-05, 4.748600000000283e-05, 4.758300000000035e-05, 4.786099999999974e-05, 4.779200000000136e-05, 4.812499999999956e-05, 4.83330000000011e-05, 4.816699999999827e-05]</msg>
<status status="PASS" starttime="20201030 10:59:32.920" endtime="20201030 10:59:32.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.915" endtime="20201030 10:59:32.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:32.927" endtime="20201030 10:59:32.946"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.925" endtime="20201030 10:59:32.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.924" endtime="20201030 10:59:32.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.563" endtime="20201030 10:59:32.947"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.563" endtime="20201030 10:59:32.948"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.957" endtime="20201030 10:59:32.974"></status>
</kw>
<msg timestamp="20201030 10:59:32.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:32.955" endtime="20201030 10:59:32.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:32.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:32.976" endtime="20201030 10:59:32.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.978" endtime="20201030 10:59:32.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.952" endtime="20201030 10:59:32.980"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.950" endtime="20201030 10:59:32.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:32.988" endtime="20201030 10:59:33.275"></status>
</kw>
<msg timestamp="20201030 10:59:33.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0208055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020854292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:59:32.986" endtime="20201030 10:59:33.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0208055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020854292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:59:33.279" endtime="20201030 10:59:33.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.288" endtime="20201030 10:59:33.289"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.983" endtime="20201030 10:59:33.290"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.982" endtime="20201030 10:59:33.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:33.294" level="INFO">${RESULT} = [{'diff': 4.879199999999889e-05}, {'diff': 4.915200000000022e-05}, {'diff': 4.923599999999764e-05}, {'diff': 4.900000000000043e-05}, {'diff': 4.865199999999972e-05}, {'diff': 4.879099999999942e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:33.291" endtime="20201030 10:59:33.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:33.299" level="INFO">${ACCURACY} = {'diff': [4.879199999999889e-05, 4.915200000000022e-05, 4.923599999999764e-05, 4.900000000000043e-05, 4.865199999999972e-05, 4.879099999999942e-05, 4.866599999999929e-05, 4.858299999999788e-05, 4.8930...</msg>
<status status="PASS" starttime="20201030 10:59:33.296" endtime="20201030 10:59:33.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.303" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 10:59:33.302" endtime="20201030 10:59:33.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.306" level="INFO">VALUE: [4.879199999999889e-05, 4.915200000000022e-05, 4.923599999999764e-05, 4.900000000000043e-05, 4.865199999999972e-05, 4.879099999999942e-05, 4.866599999999929e-05, 4.858299999999788e-05, 4.893000000000258e-05, 4.848600000000036e-05, 4.936100000000124e-05, 4.93469999999982e-05, 4.85139999999995e-05, 4.930599999999896e-05, 4.893099999999859e-05, 4.8945000000001626e-05, 4.893099999999859e-05, 4.877799999999932e-05, 4.890299999999945e-05, 4.893099999999859e-05, 4.886100000000074e-05, 4.875000000000018e-05, 4.8723000000000516e-05, 4.862500000000006e-05, 4.879200000000236e-05, 4.854099999999917e-05, 4.908300000000185e-05, 4.900000000000043e-05, 4.880499999999899e-05, 4.944399999999918e-05, 4.863899999999963e-05, 4.9014e-05, 4.936100000000124e-05, 4.944399999999918e-05, 4.919399999999893e-05, 4.9209000000001446e-05, 4.944399999999918e-05, 4.883299999999813e-05, 4.893099999999859e-05, 4.916699999999927e-05, 4.9445000000002126e-05, 4.879200000000236e-05, 4.863899999999963e-05, 4.900000000000043e-05, 4.936100000000124e-05, 4.893000000000258e-05, 4.895799999999825e-05, 4.888899999999988e-05, 4.922200000000154e-05, 4.909699999999795e-05]</msg>
<status status="PASS" starttime="20201030 10:59:33.304" endtime="20201030 10:59:33.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.300" endtime="20201030 10:59:33.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:33.311" endtime="20201030 10:59:33.330"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.309" endtime="20201030 10:59:33.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.308" endtime="20201030 10:59:33.331"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.949" endtime="20201030 10:59:33.332"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:32.948" endtime="20201030 10:59:33.332"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.341" endtime="20201030 10:59:33.361"></status>
</kw>
<msg timestamp="20201030 10:59:33.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:33.339" endtime="20201030 10:59:33.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:33.362" endtime="20201030 10:59:33.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.365" endtime="20201030 10:59:33.367"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.337" endtime="20201030 10:59:33.367"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.334" endtime="20201030 10:59:33.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.374" endtime="20201030 10:59:33.661"></status>
</kw>
<msg timestamp="20201030 10:59:33.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023221278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023271528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:33.373" endtime="20201030 10:59:33.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023221278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023271528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:33.665" endtime="20201030 10:59:33.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.674" endtime="20201030 10:59:33.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.370" endtime="20201030 10:59:33.676"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.368" endtime="20201030 10:59:33.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:33.680" level="INFO">${RESULT} = [{'diff': 5.024999999999821e-05}, {'diff': 4.977800000000032e-05}, {'diff': 4.952800000000007e-05}, {'diff': 5.037500000000181e-05}, {'diff': 4.959799999999792e-05}, {'diff': 5.036100000000224e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:33.677" endtime="20201030 10:59:33.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:33.685" level="INFO">${ACCURACY} = {'diff': [5.024999999999821e-05, 4.977800000000032e-05, 4.952800000000007e-05, 5.037500000000181e-05, 4.959799999999792e-05, 5.036100000000224e-05, 5.043100000000009e-05, 5.013900000000113e-05, 4.9666...</msg>
<status status="PASS" starttime="20201030 10:59:33.681" endtime="20201030 10:59:33.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.689" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 10:59:33.688" endtime="20201030 10:59:33.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.692" level="INFO">VALUE: [5.024999999999821e-05, 4.977800000000032e-05, 4.952800000000007e-05, 5.037500000000181e-05, 4.959799999999792e-05, 5.036100000000224e-05, 5.043100000000009e-05, 5.013900000000113e-05, 4.966600000000029e-05, 4.970800000000247e-05, 4.9929999999996644e-05, 4.999999999999796e-05, 5.029200000000039e-05, 4.96530000000002e-05, 5.037500000000181e-05, 5.002800000000057e-05, 4.972200000000204e-05, 5.043100000000009e-05, 4.950000000000093e-05, 4.972199999999857e-05, 4.952800000000007e-05, 4.979199999999989e-05, 4.987500000000131e-05, 4.999999999999796e-05, 4.986100000000174e-05, 5.027800000000082e-05, 5.043000000000061e-05, 5.037499999999834e-05, 4.994399999999968e-05, 4.949999999999746e-05, 4.979100000000042e-05, 4.972200000000204e-05, 5.02079999999995e-05, 5.022200000000254e-05, 5.025000000000168e-05, 4.959700000000192e-05, 4.993000000000011e-05, 4.958300000000235e-05, 4.951399999999703e-05, 4.991700000000002e-05, 4.963899999999716e-05, 4.979199999999989e-05, 4.963900000000063e-05, 4.95140000000005e-05, 5.000000000000143e-05, 4.963900000000063e-05, 4.986199999999774e-05, 4.955599999999921e-05, 5.038899999999791e-05, 4.965200000000072e-05]</msg>
<status status="PASS" starttime="20201030 10:59:33.690" endtime="20201030 10:59:33.693"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.685" endtime="20201030 10:59:33.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:33.698" endtime="20201030 10:59:33.717"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.696" endtime="20201030 10:59:33.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.695" endtime="20201030 10:59:33.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.333" endtime="20201030 10:59:33.718"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.332" endtime="20201030 10:59:33.719"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.728" endtime="20201030 10:59:33.745"></status>
</kw>
<msg timestamp="20201030 10:59:33.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:33.726" endtime="20201030 10:59:33.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:33.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:33.746" endtime="20201030 10:59:33.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.749" endtime="20201030 10:59:33.751"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.723" endtime="20201030 10:59:33.751"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.721" endtime="20201030 10:59:33.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:33.758" endtime="20201030 10:59:34.045"></status>
</kw>
<msg timestamp="20201030 10:59:34.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020209181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02025975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:33.757" endtime="20201030 10:59:34.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020209181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02025975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:34.049" endtime="20201030 10:59:34.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.057" endtime="20201030 10:59:34.059"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.754" endtime="20201030 10:59:34.060"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.752" endtime="20201030 10:59:34.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:34.064" level="INFO">${RESULT} = [{'diff': 5.056900000000031e-05}, {'diff': 5.06669999999973e-05}, {'diff': 5.0708e-05}, {'diff': 5.088900000000188e-05}, {'diff': 5.079200000000089e-05}, {'diff': 5.104200000000114e-05}, {'diff': 5.06...</msg>
<status status="PASS" starttime="20201030 10:59:34.061" endtime="20201030 10:59:34.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:34.069" level="INFO">${ACCURACY} = {'diff': [5.056900000000031e-05, 5.06669999999973e-05, 5.0708e-05, 5.088900000000188e-05, 5.079200000000089e-05, 5.104200000000114e-05, 5.065299999999773e-05, 5.109799999999942e-05, 5.132000000000053e...</msg>
<status status="PASS" starttime="20201030 10:59:34.065" endtime="20201030 10:59:34.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.074" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 10:59:34.073" endtime="20201030 10:59:34.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.076" level="INFO">VALUE: [5.056900000000031e-05, 5.06669999999973e-05, 5.0708e-05, 5.088900000000188e-05, 5.079200000000089e-05, 5.104200000000114e-05, 5.065299999999773e-05, 5.109799999999942e-05, 5.132000000000053e-05, 5.136099999999977e-05, 5.051399999999803e-05, 5.113900000000213e-05, 5.084800000000264e-05, 5.130499999999802e-05, 5.099999999999896e-05, 5.097199999999982e-05, 5.08469999999997e-05, 5.1415999999998574e-05, 5.127800000000182e-05, 5.099999999999896e-05, 5.130500000000149e-05, 5.129200000000139e-05, 5.090300000000145e-05, 5.12080000000005e-05, 5.069400000000043e-05, 5.144500000000066e-05, 5.079200000000089e-05, 5.073599999999914e-05, 5.073599999999914e-05, 5.057000000000325e-05, 5.044499999999966e-05, 5.052699999999813e-05, 5.054100000000117e-05, 5.129199999999792e-05, 5.0651999999998254e-05, 5.1401999999999004e-05, 5.086099999999927e-05, 5.080499999999752e-05, 5.1443999999997714e-05, 5.069499999999991e-05, 5.079200000000089e-05, 5.058299999999988e-05, 5.137499999999934e-05, 5.106900000000081e-05, 5.066700000000077e-05, 5.115299999999823e-05, 5.049999999999846e-05, 5.070899999999948e-05, 5.136099999999977e-05, 5.129200000000139e-05]</msg>
<status status="PASS" starttime="20201030 10:59:34.075" endtime="20201030 10:59:34.077"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.070" endtime="20201030 10:59:34.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:34.082" endtime="20201030 10:59:34.101"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.080" endtime="20201030 10:59:34.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.079" endtime="20201030 10:59:34.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.720" endtime="20201030 10:59:34.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:33.719" endtime="20201030 10:59:34.103"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.112" endtime="20201030 10:59:34.130"></status>
</kw>
<msg timestamp="20201030 10:59:34.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:34.110" endtime="20201030 10:59:34.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:34.131" endtime="20201030 10:59:34.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.134" endtime="20201030 10:59:34.135"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.108" endtime="20201030 10:59:34.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.105" endtime="20201030 10:59:34.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.143" endtime="20201030 10:59:34.429"></status>
</kw>
<msg timestamp="20201030 10:59:34.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021083792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021135736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:34.142" endtime="20201030 10:59:34.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021083792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021135736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:34.434" endtime="20201030 10:59:34.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.442" endtime="20201030 10:59:34.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.139" endtime="20201030 10:59:34.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.137" endtime="20201030 10:59:34.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:34.449" level="INFO">${RESULT} = [{'diff': 5.1943999999998214e-05}, {'diff': 5.177800000000232e-05}, {'diff': 5.2443999999998714e-05}, {'diff': 5.223600000000064e-05}, {'diff': 5.151399999999903e-05}, {'diff': 5.180600000000146e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:34.446" endtime="20201030 10:59:34.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:34.453" level="INFO">${ACCURACY} = {'diff': [5.1943999999998214e-05, 5.177800000000232e-05, 5.2443999999998714e-05, 5.223600000000064e-05, 5.151399999999903e-05, 5.180600000000146e-05, 5.21669999999988e-05, 5.193099999999812e-05, 5.243...</msg>
<status status="PASS" starttime="20201030 10:59:34.450" endtime="20201030 10:59:34.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.458" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 10:59:34.457" endtime="20201030 10:59:34.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.460" level="INFO">VALUE: [5.1943999999998214e-05, 5.177800000000232e-05, 5.2443999999998714e-05, 5.223600000000064e-05, 5.151399999999903e-05, 5.180600000000146e-05, 5.21669999999988e-05, 5.193099999999812e-05, 5.243100000000209e-05, 5.172300000000005e-05, 5.208400000000085e-05, 5.230599999999849e-05, 5.225000000000021e-05, 5.208400000000085e-05, 5.186199999999974e-05, 5.1679999999998394e-05, 5.1929999999998644e-05, 5.1651999999999254e-05, 5.1651999999999254e-05, 5.215299999999923e-05, 5.155499999999827e-05, 5.241700000000252e-05, 5.209699999999748e-05, 5.179200000000189e-05, 5.208299999999791e-05, 5.183300000000113e-05, 5.215299999999923e-05, 5.207000000000128e-05, 5.194500000000116e-05, 5.149999999999946e-05, 5.222299999999708e-05, 5.18340000000006e-05, 5.193099999999812e-05, 5.176299999999981e-05, 5.2138000000000184e-05, 5.1916000000002543e-05, 5.236100000000077e-05, 5.227800000000282e-05, 5.154100000000217e-05, 5.2193999999998464e-05, 5.219400000000193e-05, 5.170900000000048e-05, 5.172200000000057e-05, 5.165299999999873e-05, 5.215299999999923e-05, 5.240299999999948e-05, 5.194500000000116e-05, 5.179199999999842e-05, 5.2014000000003e-05, 5.201399999999953e-05]</msg>
<status status="PASS" starttime="20201030 10:59:34.459" endtime="20201030 10:59:34.461"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.454" endtime="20201030 10:59:34.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:34.466" endtime="20201030 10:59:34.485"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.464" endtime="20201030 10:59:34.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.463" endtime="20201030 10:59:34.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.104" endtime="20201030 10:59:34.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.103" endtime="20201030 10:59:34.486"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.495" endtime="20201030 10:59:34.514"></status>
</kw>
<msg timestamp="20201030 10:59:34.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:34.494" endtime="20201030 10:59:34.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:34.515" endtime="20201030 10:59:34.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.518" endtime="20201030 10:59:34.520"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.491" endtime="20201030 10:59:34.520"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.489" endtime="20201030 10:59:34.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.527" endtime="20201030 10:59:34.812"></status>
</kw>
<msg timestamp="20201030 10:59:34.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021042306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021095028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:34.526" endtime="20201030 10:59:34.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021042306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021095028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:34.817" endtime="20201030 10:59:34.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.825" endtime="20201030 10:59:34.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.523" endtime="20201030 10:59:34.828"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.521" endtime="20201030 10:59:34.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:34.832" level="INFO">${RESULT} = [{'diff': 5.2721999999998104e-05}, {'diff': 5.298600000000139e-05}, {'diff': 5.336100000000177e-05}, {'diff': 5.329199999999992e-05}, {'diff': 5.301400000000053e-05}, {'diff': 5.273700000000062e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:34.829" endtime="20201030 10:59:34.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:34.836" level="INFO">${ACCURACY} = {'diff': [5.2721999999998104e-05, 5.298600000000139e-05, 5.336100000000177e-05, 5.329199999999992e-05, 5.301400000000053e-05, 5.273700000000062e-05, 5.294499999999869e-05, 5.336199999999777e-05, 5.322...</msg>
<status status="PASS" starttime="20201030 10:59:34.833" endtime="20201030 10:59:34.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.841" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 10:59:34.840" endtime="20201030 10:59:34.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.844" level="INFO">VALUE: [5.2721999999998104e-05, 5.298600000000139e-05, 5.336100000000177e-05, 5.329199999999992e-05, 5.301400000000053e-05, 5.273700000000062e-05, 5.294499999999869e-05, 5.336199999999777e-05, 5.322200000000207e-05, 5.3166000000000324e-05, 5.3152000000000754e-05, 5.340300000000048e-05, 5.2735999999997674e-05, 5.2499999999996994e-05, 5.2721999999998104e-05, 5.258299999999841e-05, 5.329199999999992e-05, 5.2735999999997674e-05, 5.277799999999985e-05, 5.316700000000327e-05, 5.315300000000023e-05, 5.286100000000127e-05, 5.343099999999962e-05, 5.294499999999869e-05, 5.307000000000228e-05, 5.306999999999881e-05, 5.2665999999999824e-05, 5.2735999999997674e-05, 5.33609999999983e-05, 5.2721999999998104e-05, 5.291699999999955e-05, 5.258300000000188e-05, 5.286100000000127e-05, 5.256899999999884e-05, 5.3221999999998604e-05, 5.334699999999873e-05, 5.330599999999949e-05, 5.258299999999841e-05, 5.265299999999973e-05, 5.256999999999831e-05, 5.24730000000008e-05, 5.276400000000028e-05, 5.279200000000289e-05, 5.329199999999992e-05, 5.251400000000003e-05, 5.336200000000124e-05, 5.280500000000299e-05, 5.258299999999841e-05, 5.3151999999997285e-05, 5.3430000000000144e-05]</msg>
<status status="PASS" starttime="20201030 10:59:34.842" endtime="20201030 10:59:34.845"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.837" endtime="20201030 10:59:34.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:34.850" endtime="20201030 10:59:34.869"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.848" endtime="20201030 10:59:34.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.847" endtime="20201030 10:59:34.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.487" endtime="20201030 10:59:34.870"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.487" endtime="20201030 10:59:34.871"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.879" endtime="20201030 10:59:34.896"></status>
</kw>
<msg timestamp="20201030 10:59:34.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:34.878" endtime="20201030 10:59:34.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:34.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:34.897" endtime="20201030 10:59:34.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.900" endtime="20201030 10:59:34.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.875" endtime="20201030 10:59:34.902"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.873" endtime="20201030 10:59:34.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:34.909" endtime="20201030 10:59:35.195"></status>
</kw>
<msg timestamp="20201030 10:59:35.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020218889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:34.908" endtime="20201030 10:59:35.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020218889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:35.199" endtime="20201030 10:59:35.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.208" endtime="20201030 10:59:35.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.905" endtime="20201030 10:59:35.210"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.903" endtime="20201030 10:59:35.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:35.214" level="INFO">${RESULT} = [{'diff': 5.387500000000184e-05}, {'diff': 5.372300000000205e-05}, {'diff': 5.420899999999951e-05}, {'diff': 5.387499999999837e-05}, {'diff': 5.3930000000000644e-05}, {'diff': 5.343099999999962e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:35.211" endtime="20201030 10:59:35.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:35.220" level="INFO">${ACCURACY} = {'diff': [5.387500000000184e-05, 5.372300000000205e-05, 5.420899999999951e-05, 5.387499999999837e-05, 5.3930000000000644e-05, 5.343099999999962e-05, 5.359699999999898e-05, 5.386199999999827e-05, 5.422...</msg>
<status status="PASS" starttime="20201030 10:59:35.216" endtime="20201030 10:59:35.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.224" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 10:59:35.223" endtime="20201030 10:59:35.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.227" level="INFO">VALUE: [5.387500000000184e-05, 5.372300000000205e-05, 5.420899999999951e-05, 5.387499999999837e-05, 5.3930000000000644e-05, 5.343099999999962e-05, 5.359699999999898e-05, 5.386199999999827e-05, 5.4221999999999604e-05, 5.3693999999999964e-05, 5.4444000000000714e-05, 5.3666000000000824e-05, 5.411099999999905e-05, 5.4444000000000714e-05, 5.3944000000000214e-05, 5.363900000000116e-05, 5.436200000000224e-05, 5.358300000000288e-05, 5.355599999999974e-05, 5.4208000000000034e-05, 5.401400000000153e-05, 5.3777999999997383e-05, 5.393100000000012e-05, 5.351400000000103e-05, 5.363900000000116e-05, 5.436199999999877e-05, 5.386100000000227e-05, 5.397200000000282e-05, 5.4235999999999174e-05, 5.361100000000202e-05, 5.350000000000146e-05, 5.379200000000042e-05, 5.3930000000000644e-05, 5.390300000000098e-05, 5.415300000000123e-05, 5.383399999999913e-05, 5.4263999999998314e-05, 5.444500000000019e-05, 5.386100000000227e-05, 5.422200000000307e-05, 5.361099999999855e-05, 5.393100000000012e-05, 5.358399999999888e-05, 5.356999999999931e-05, 5.43479999999992e-05, 5.372299999999858e-05, 5.4235999999999174e-05, 5.401400000000153e-05, 5.379100000000095e-05, 5.408299999999991e-05]</msg>
<status status="PASS" starttime="20201030 10:59:35.226" endtime="20201030 10:59:35.228"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.221" endtime="20201030 10:59:35.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:35.232" endtime="20201030 10:59:35.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.231" endtime="20201030 10:59:35.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.229" endtime="20201030 10:59:35.252"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.871" endtime="20201030 10:59:35.253"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:34.871" endtime="20201030 10:59:35.253"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.262" endtime="20201030 10:59:35.279"></status>
</kw>
<msg timestamp="20201030 10:59:35.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:35.260" endtime="20201030 10:59:35.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:35.281" endtime="20201030 10:59:35.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.283" endtime="20201030 10:59:35.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.258" endtime="20201030 10:59:35.285"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.255" endtime="20201030 10:59:35.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.292" endtime="20201030 10:59:35.579"></status>
</kw>
<msg timestamp="20201030 10:59:35.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020042292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020096861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:35.291" endtime="20201030 10:59:35.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020042292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020096861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:35.583" endtime="20201030 10:59:35.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.591" endtime="20201030 10:59:35.593"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.288" endtime="20201030 10:59:35.594"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.286" endtime="20201030 10:59:35.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:35.598" level="INFO">${RESULT} = [{'diff': 5.456900000000084e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 5.5013999999999064e-05}, {'diff': 5.4735999999999674e-05}, {'diff': 5.537499999999987e-05}, {'diff': 5.4722000000000104e-05...</msg>
<status status="PASS" starttime="20201030 10:59:35.595" endtime="20201030 10:59:35.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:35.603" level="INFO">${ACCURACY} = {'diff': [5.456900000000084e-05, 5.4735999999999674e-05, 5.5013999999999064e-05, 5.4735999999999674e-05, 5.537499999999987e-05, 5.4722000000000104e-05, 5.545900000000076e-05, 5.541700000000205e-05, 5....</msg>
<status status="PASS" starttime="20201030 10:59:35.599" endtime="20201030 10:59:35.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.607" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 10:59:35.606" endtime="20201030 10:59:35.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.610" level="INFO">VALUE: [5.456900000000084e-05, 5.4735999999999674e-05, 5.5013999999999064e-05, 5.4735999999999674e-05, 5.537499999999987e-05, 5.4722000000000104e-05, 5.545900000000076e-05, 5.541700000000205e-05, 5.463900000000216e-05, 5.512499999999962e-05, 5.508400000000038e-05, 5.4513999999998564e-05, 5.48479999999997e-05, 5.534700000000073e-05, 5.4458000000000284e-05, 5.488899999999894e-05, 5.5291999999998453e-05, 5.458300000000041e-05, 5.5222000000000604e-05, 5.53610000000003e-05, 5.456899999999737e-05, 5.465299999999826e-05, 5.494500000000069e-05, 5.4749999999999244e-05, 5.457000000000031e-05, 5.455600000000074e-05, 5.51670000000018e-05, 5.487500000000284e-05, 5.487499999999937e-05, 5.508400000000038e-05, 5.507000000000081e-05, 5.481900000000109e-05, 5.53610000000003e-05, 5.458300000000041e-05, 5.537499999999987e-05, 5.4499999999998994e-05, 5.450000000000246e-05, 5.463899999999869e-05, 5.465299999999826e-05, 5.444500000000019e-05, 5.459699999999998e-05, 5.537499999999987e-05, 5.4499999999998994e-05, 5.4722000000000104e-05, 5.530600000000149e-05, 5.538899999999944e-05, 5.488899999999894e-05, 5.520900000000051e-05, 5.4513999999998564e-05, 5.4999999999999494e-05]</msg>
<status status="PASS" starttime="20201030 10:59:35.608" endtime="20201030 10:59:35.611"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.603" endtime="20201030 10:59:35.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:35.615" endtime="20201030 10:59:35.634"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.613" endtime="20201030 10:59:35.635"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.612" endtime="20201030 10:59:35.635"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.254" endtime="20201030 10:59:35.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.253" endtime="20201030 10:59:35.636"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.645" endtime="20201030 10:59:35.662"></status>
</kw>
<msg timestamp="20201030 10:59:35.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:35.643" endtime="20201030 10:59:35.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:35.664" endtime="20201030 10:59:35.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.667" endtime="20201030 10:59:35.669"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.640" endtime="20201030 10:59:35.669"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.638" endtime="20201030 10:59:35.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.676" endtime="20201030 10:59:35.962"></status>
</kw>
<msg timestamp="20201030 10:59:35.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021074069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021129736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:35.675" endtime="20201030 10:59:35.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021074069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021129736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:35.967" endtime="20201030 10:59:35.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:35.975" endtime="20201030 10:59:35.977"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.672" endtime="20201030 10:59:35.978"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.670" endtime="20201030 10:59:35.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:35.982" level="INFO">${RESULT} = [{'diff': 5.566699999999883e-05}, {'diff': 5.563899999999969e-05}, {'diff': 5.5791999999998954e-05}, {'diff': 5.5791999999998954e-05}, {'diff': 5.6000000000000494e-05}, {'diff': 5.615300000000323e-05}...</msg>
<status status="PASS" starttime="20201030 10:59:35.979" endtime="20201030 10:59:35.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:35.987" level="INFO">${ACCURACY} = {'diff': [5.566699999999883e-05, 5.563899999999969e-05, 5.5791999999998954e-05, 5.5791999999998954e-05, 5.6000000000000494e-05, 5.615300000000323e-05, 5.607000000000181e-05, 5.63610000000013e-05, 5.62...</msg>
<status status="PASS" starttime="20201030 10:59:35.983" endtime="20201030 10:59:35.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.991" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 10:59:35.990" endtime="20201030 10:59:35.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:35.994" level="INFO">VALUE: [5.566699999999883e-05, 5.563899999999969e-05, 5.5791999999998954e-05, 5.5791999999998954e-05, 5.6000000000000494e-05, 5.615300000000323e-05, 5.607000000000181e-05, 5.63610000000013e-05, 5.6264000000000314e-05, 5.644499999999872e-05, 5.59870000000004e-05, 5.6000000000000494e-05, 5.581899999999862e-05, 5.5651999999999785e-05, 5.6457999999998815e-05, 5.5722000000001104e-05, 5.63610000000013e-05, 5.558299999999794e-05, 5.5777999999999384e-05, 5.615300000000323e-05, 5.591699999999908e-05, 5.5707999999998065e-05, 5.6000000000000494e-05, 5.563899999999969e-05, 5.584700000000123e-05, 5.586099999999733e-05, 5.622299999999761e-05, 5.559700000000098e-05, 5.581900000000209e-05, 5.612499999999715e-05, 5.5499999999999994e-05, 5.5513999999999564e-05, 5.556900000000184e-05, 5.566699999999883e-05, 5.565299999999926e-05, 5.5513999999999564e-05, 5.58610000000008e-05, 5.615299999999976e-05, 5.5499999999999994e-05, 5.613900000000019e-05, 5.586099999999733e-05, 5.637500000000087e-05, 5.5791999999998954e-05, 5.5513999999999564e-05, 5.6264000000000314e-05, 5.565299999999926e-05, 5.559700000000098e-05, 5.558300000000141e-05, 5.5943999999998745e-05, 5.630499999999955e-05]</msg>
<status status="PASS" starttime="20201030 10:59:35.992" endtime="20201030 10:59:35.995"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.987" endtime="20201030 10:59:35.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:36.000" endtime="20201030 10:59:36.019"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.998" endtime="20201030 10:59:36.020"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.997" endtime="20201030 10:59:36.020"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.637" endtime="20201030 10:59:36.020"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:35.636" endtime="20201030 10:59:36.021"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.030" endtime="20201030 10:59:36.047"></status>
</kw>
<msg timestamp="20201030 10:59:36.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:36.028" endtime="20201030 10:59:36.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:36.049" endtime="20201030 10:59:36.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.051" endtime="20201030 10:59:36.053"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.025" endtime="20201030 10:59:36.054"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.023" endtime="20201030 10:59:36.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.061" endtime="20201030 10:59:36.347"></status>
</kw>
<msg timestamp="20201030 10:59:36.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021101139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021158208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:36.059" endtime="20201030 10:59:36.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021101139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021158208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:36.351" endtime="20201030 10:59:36.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.360" endtime="20201030 10:59:36.361"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.056" endtime="20201030 10:59:36.362"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.055" endtime="20201030 10:59:36.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:36.366" level="INFO">${RESULT} = [{'diff': 5.706899999999987e-05}, {'diff': 5.679100000000048e-05}, {'diff': 5.70550000000003e-05}, {'diff': 5.665300000000026e-05}, {'diff': 5.6735999999998205e-05}, {'diff': 5.7221999999999135e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:36.363" endtime="20201030 10:59:36.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:36.372" level="INFO">${ACCURACY} = {'diff': [5.706899999999987e-05, 5.679100000000048e-05, 5.70550000000003e-05, 5.665300000000026e-05, 5.6735999999998205e-05, 5.7221999999999135e-05, 5.7485999999998955e-05, 5.663900000000069e-05, 5.67...</msg>
<status status="PASS" starttime="20201030 10:59:36.367" endtime="20201030 10:59:36.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.376" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 10:59:36.375" endtime="20201030 10:59:36.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.379" level="INFO">VALUE: [5.706899999999987e-05, 5.679100000000048e-05, 5.70550000000003e-05, 5.665300000000026e-05, 5.6735999999998205e-05, 5.7221999999999135e-05, 5.7485999999998955e-05, 5.663900000000069e-05, 5.6764000000000814e-05, 5.706900000000334e-05, 5.744499999999972e-05, 5.744499999999972e-05, 5.745899999999929e-05, 5.68610000000018e-05, 5.6500000000000994e-05, 5.722300000000208e-05, 5.7000000000001494e-05, 5.7235999999998705e-05, 5.6500000000000994e-05, 5.6652000000000785e-05, 5.6805999999999524e-05, 5.7000000000001494e-05, 5.6957999999999315e-05, 5.6736000000001674e-05, 5.6778000000000384e-05, 5.6943999999999745e-05, 5.693099999999965e-05, 5.658299999999894e-05, 5.7221999999999135e-05, 5.734700000000273e-05, 5.691700000000008e-05, 5.7292000000000454e-05, 5.68480000000017e-05, 5.687500000000137e-05, 5.665300000000026e-05, 5.672300000000158e-05, 5.736099999999883e-05, 5.677700000000091e-05, 5.709699999999901e-05, 5.706899999999987e-05, 5.713900000000119e-05, 5.6986000000001924e-05, 5.6791999999999954e-05, 5.7444000000000245e-05, 5.7277999999997414e-05, 5.7055999999999774e-05, 5.6778000000000384e-05, 5.665300000000026e-05, 5.68610000000018e-05, 5.694499999999922e-05]</msg>
<status status="PASS" starttime="20201030 10:59:36.377" endtime="20201030 10:59:36.380"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.373" endtime="20201030 10:59:36.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:36.384" endtime="20201030 10:59:36.403"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.382" endtime="20201030 10:59:36.404"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.381" endtime="20201030 10:59:36.404"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.022" endtime="20201030 10:59:36.405"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.021" endtime="20201030 10:59:36.405"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.414" endtime="20201030 10:59:36.431"></status>
</kw>
<msg timestamp="20201030 10:59:36.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:36.412" endtime="20201030 10:59:36.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:36.433" endtime="20201030 10:59:36.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.435" endtime="20201030 10:59:36.437"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.410" endtime="20201030 10:59:36.438"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.407" endtime="20201030 10:59:36.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.445" endtime="20201030 10:59:36.732"></status>
</kw>
<msg timestamp="20201030 10:59:36.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0206265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020684264, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:59:36.443" endtime="20201030 10:59:36.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0206265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020684264, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:59:36.736" endtime="20201030 10:59:36.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.745" endtime="20201030 10:59:36.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.441" endtime="20201030 10:59:36.747"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.439" endtime="20201030 10:59:36.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:36.752" level="INFO">${RESULT} = [{'diff': 5.7764000000001814e-05}, {'diff': 5.8458000000000815e-05}, {'diff': 5.765300000000126e-05}, {'diff': 5.7944000000000745e-05}, {'diff': 5.78749999999989e-05}, {'diff': 5.787500000000237e-05},...</msg>
<status status="PASS" starttime="20201030 10:59:36.749" endtime="20201030 10:59:36.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:36.756" level="INFO">${ACCURACY} = {'diff': [5.7764000000001814e-05, 5.8458000000000815e-05, 5.765300000000126e-05, 5.7944000000000745e-05, 5.78749999999989e-05, 5.787500000000237e-05, 5.837500000000287e-05, 5.758299999999994e-05, 5.82...</msg>
<status status="PASS" starttime="20201030 10:59:36.753" endtime="20201030 10:59:36.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.761" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 10:59:36.760" endtime="20201030 10:59:36.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.763" level="INFO">VALUE: [5.7764000000001814e-05, 5.8458000000000815e-05, 5.765300000000126e-05, 5.7944000000000745e-05, 5.78749999999989e-05, 5.787500000000237e-05, 5.837500000000287e-05, 5.758299999999994e-05, 5.8292000000001454e-05, 5.8387999999999496e-05, 5.815299999999829e-05, 5.844500000000072e-05, 5.820900000000004e-05, 5.8415999999998636e-05, 5.8152000000002285e-05, 5.786099999999933e-05, 5.779100000000148e-05, 5.811099999999958e-05, 5.8415999999998636e-05, 5.756900000000037e-05, 5.8222000000000135e-05, 5.8292000000001454e-05, 5.7763999999998344e-05, 5.788900000000194e-05, 5.793099999999718e-05, 5.7806000000000524e-05, 5.820900000000004e-05, 5.8402000000002535e-05, 5.791700000000108e-05, 5.813899999999872e-05, 5.7944000000000745e-05, 5.8415999999998636e-05, 5.7721999999999635e-05, 5.759699999999951e-05, 5.763899999999822e-05, 5.8028000000001634e-05, 5.83749999999994e-05, 5.758299999999994e-05, 5.7721999999999635e-05, 5.759699999999951e-05, 5.7763999999998344e-05, 5.786099999999933e-05, 5.7735999999999205e-05, 5.804099999999826e-05, 5.770899999999954e-05, 5.794500000000022e-05, 5.8292000000001454e-05, 5.7792000000000954e-05, 5.786200000000227e-05, 5.7651999999998316e-05]</msg>
<status status="PASS" starttime="20201030 10:59:36.762" endtime="20201030 10:59:36.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.757" endtime="20201030 10:59:36.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:36.768" endtime="20201030 10:59:36.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.767" endtime="20201030 10:59:36.788"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.766" endtime="20201030 10:59:36.789"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.406" endtime="20201030 10:59:36.789"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.405" endtime="20201030 10:59:36.789"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.798" endtime="20201030 10:59:36.818"></status>
</kw>
<msg timestamp="20201030 10:59:36.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:36.797" endtime="20201030 10:59:36.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:36.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:36.820" endtime="20201030 10:59:36.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.823" endtime="20201030 10:59:36.824"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.794" endtime="20201030 10:59:36.825"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.792" endtime="20201030 10:59:36.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:36.832" endtime="20201030 10:59:37.118"></status>
</kw>
<msg timestamp="20201030 10:59:37.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023249472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023308208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:36.830" endtime="20201030 10:59:37.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023249472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023308208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:37.122" endtime="20201030 10:59:37.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.131" endtime="20201030 10:59:37.133"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.828" endtime="20201030 10:59:37.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.826" endtime="20201030 10:59:37.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:37.139" level="INFO">${RESULT} = [{'diff': 5.8736000000000205e-05}, {'diff': 5.9222000000001135e-05}, {'diff': 5.936100000000083e-05}, {'diff': 5.8513999999999095e-05}, {'diff': 5.858300000000094e-05}, {'diff': 5.9013999999999595e-05...</msg>
<status status="PASS" starttime="20201030 10:59:37.135" endtime="20201030 10:59:37.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:37.143" level="INFO">${ACCURACY} = {'diff': [5.8736000000000205e-05, 5.9222000000001135e-05, 5.936100000000083e-05, 5.8513999999999095e-05, 5.858300000000094e-05, 5.9013999999999595e-05, 5.9443999999998776e-05, 5.856900000000137e-05, 5...</msg>
<status status="PASS" starttime="20201030 10:59:37.140" endtime="20201030 10:59:37.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.148" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 10:59:37.147" endtime="20201030 10:59:37.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.150" level="INFO">VALUE: [5.8736000000000205e-05, 5.9222000000001135e-05, 5.936100000000083e-05, 5.8513999999999095e-05, 5.858300000000094e-05, 5.9013999999999595e-05, 5.9443999999998776e-05, 5.856900000000137e-05, 5.884700000000076e-05, 5.9000000000000025e-05, 5.8791999999998484e-05, 5.93750000000004e-05, 5.8597999999999983e-05, 5.8513999999999095e-05, 5.8806000000001524e-05, 5.915299999999929e-05, 5.886099999999686e-05, 5.859700000000051e-05, 5.9151999999999816e-05, 5.8722000000000635e-05, 5.8651999999999316e-05, 5.9458000000001815e-05, 5.865299999999879e-05, 5.888899999999947e-05, 5.865300000000226e-05, 5.88749999999999e-05, 5.865299999999879e-05, 5.9292000000002454e-05, 5.9070000000001344e-05, 5.9013999999999595e-05, 5.936100000000083e-05, 5.8958000000001315e-05, 5.886100000000033e-05, 5.9388000000000496e-05, 5.8901999999999566e-05, 5.930500000000255e-05, 5.9055999999998304e-05, 5.865299999999879e-05, 5.8929999999998706e-05, 5.944499999999825e-05, 5.8929999999998706e-05, 5.8722000000000635e-05, 5.9208000000001565e-05, 5.945900000000129e-05, 5.93750000000004e-05, 5.936100000000083e-05, 5.9000000000000025e-05, 5.8499999999999525e-05, 5.893100000000165e-05, 5.8597999999999983e-05]</msg>
<status status="PASS" starttime="20201030 10:59:37.149" endtime="20201030 10:59:37.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.144" endtime="20201030 10:59:37.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:37.163" endtime="20201030 10:59:37.182"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.161" endtime="20201030 10:59:37.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.160" endtime="20201030 10:59:37.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.790" endtime="20201030 10:59:37.184"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:36.790" endtime="20201030 10:59:37.184"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.193" endtime="20201030 10:59:37.210"></status>
</kw>
<msg timestamp="20201030 10:59:37.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:37.191" endtime="20201030 10:59:37.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:37.211" endtime="20201030 10:59:37.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.214" endtime="20201030 10:59:37.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.189" endtime="20201030 10:59:37.216"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.186" endtime="20201030 10:59:37.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.223" endtime="20201030 10:59:37.509"></status>
</kw>
<msg timestamp="20201030 10:59:37.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020565306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020625625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:37.222" endtime="20201030 10:59:37.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020565306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020625625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:37.514" endtime="20201030 10:59:37.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.522" endtime="20201030 10:59:37.524"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.219" endtime="20201030 10:59:37.524"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.217" endtime="20201030 10:59:37.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:37.529" level="INFO">${RESULT} = [{'diff': 6.031900000000312e-05}, {'diff': 5.986100000000133e-05}, {'diff': 6.036099999999836e-05}, {'diff': 5.965299999999979e-05}, {'diff': 5.9777999999999915e-05}, {'diff': 6.022300000000161e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:37.526" endtime="20201030 10:59:37.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:37.534" level="INFO">${ACCURACY} = {'diff': [6.031900000000312e-05, 5.986100000000133e-05, 6.036099999999836e-05, 5.965299999999979e-05, 5.9777999999999915e-05, 6.022300000000161e-05, 6.0055999999999304e-05, 6.0361999999997834e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 10:59:37.530" endtime="20201030 10:59:37.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.539" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 10:59:37.538" endtime="20201030 10:59:37.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.542" level="INFO">VALUE: [6.031900000000312e-05, 5.986100000000133e-05, 6.036099999999836e-05, 5.965299999999979e-05, 5.9777999999999915e-05, 6.022300000000161e-05, 6.0055999999999304e-05, 6.0361999999997834e-05, 6.0000000000001025e-05, 5.983299999999872e-05, 6.037499999999793e-05, 5.959699999999804e-05, 6.03750000000014e-05, 5.9736000000001205e-05, 5.9486000000000955e-05, 5.965300000000326e-05, 6.029099999999704e-05, 5.9805999999999054e-05, 6.034699999999879e-05, 6.0514000000001095e-05, 6.034699999999879e-05, 5.9722000000001635e-05, 6.015300000000029e-05, 6.043099999999968e-05, 5.965299999999979e-05, 5.998700000000093e-05, 5.9916000000000136e-05, 5.980499999999958e-05, 5.986100000000133e-05, 5.9972000000001885e-05, 5.959699999999804e-05, 6.0263999999997375e-05, 6.0361999999997834e-05, 6.0443999999999776e-05, 6.0291999999999984e-05, 5.965299999999979e-05, 5.955499999999933e-05, 5.984700000000176e-05, 5.9500000000000525e-05, 5.9500000000000525e-05, 5.9833999999998194e-05, 5.958299999999847e-05, 6.0152000000000816e-05, 5.9958000000002315e-05, 6.0429999999996736e-05, 5.962500000000065e-05, 5.9514000000000095e-05, 5.9929999999999706e-05, 5.9833999999998194e-05, 6.037499999999793e-05]</msg>
<status status="PASS" starttime="20201030 10:59:37.540" endtime="20201030 10:59:37.542"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.535" endtime="20201030 10:59:37.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:37.547" endtime="20201030 10:59:37.566"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.545" endtime="20201030 10:59:37.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.544" endtime="20201030 10:59:37.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.185" endtime="20201030 10:59:37.567"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.184" endtime="20201030 10:59:37.568"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.577" endtime="20201030 10:59:37.594"></status>
</kw>
<msg timestamp="20201030 10:59:37.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:37.575" endtime="20201030 10:59:37.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:37.595" endtime="20201030 10:59:37.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.598" endtime="20201030 10:59:37.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.572" endtime="20201030 10:59:37.600"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.570" endtime="20201030 10:59:37.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.607" endtime="20201030 10:59:37.896"></status>
</kw>
<msg timestamp="20201030 10:59:37.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020264458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020325444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:37.606" endtime="20201030 10:59:37.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020264458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020325444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:37.900" endtime="20201030 10:59:37.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.909" endtime="20201030 10:59:37.910"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.603" endtime="20201030 10:59:37.911"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.601" endtime="20201030 10:59:37.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:37.916" level="INFO">${RESULT} = [{'diff': 6.0986000000002455e-05}, {'diff': 6.144400000000078e-05}, {'diff': 6.130500000000108e-05}, {'diff': 6.115299999999782e-05}, {'diff': 6.05689999999999e-05}, {'diff': 6.0999999999998555e-05}, ...</msg>
<status status="PASS" starttime="20201030 10:59:37.912" endtime="20201030 10:59:37.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:37.920" level="INFO">${ACCURACY} = {'diff': [6.0986000000002455e-05, 6.144400000000078e-05, 6.130500000000108e-05, 6.115299999999782e-05, 6.05689999999999e-05, 6.0999999999998555e-05, 6.0499999999998055e-05, 6.0721999999999166e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 10:59:37.917" endtime="20201030 10:59:37.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.924" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 10:59:37.923" endtime="20201030 10:59:37.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.927" level="INFO">VALUE: [6.0986000000002455e-05, 6.144400000000078e-05, 6.130500000000108e-05, 6.115299999999782e-05, 6.05689999999999e-05, 6.0999999999998555e-05, 6.0499999999998055e-05, 6.0721999999999166e-05, 6.0764000000001345e-05, 6.0721999999999166e-05, 6.0999999999998555e-05, 6.126399999999838e-05, 6.1014000000001595e-05, 6.130600000000055e-05, 6.068099999999993e-05, 6.047300000000186e-05, 6.116599999999792e-05, 6.0514000000001095e-05, 6.0708000000003065e-05, 6.0916000000001136e-05, 6.0944000000000276e-05, 6.05689999999999e-05, 6.087499999999843e-05, 6.0499999999998055e-05, 6.0944000000000276e-05, 6.065300000000079e-05, 6.122199999999967e-05, 6.118000000000096e-05, 6.127800000000141e-05, 6.086099999999886e-05, 6.120899999999957e-05, 6.122299999999914e-05, 6.131900000000065e-05, 6.0680000000000456e-05, 6.104200000000073e-05, 6.101299999999865e-05, 6.0680000000000456e-05, 6.0665999999997416e-05, 6.0930000000000706e-05, 6.145800000000035e-05, 6.0888999999998e-05, 6.0999999999998555e-05, 6.061099999999861e-05, 6.086099999999886e-05, 6.136099999999936e-05, 6.134699999999979e-05, 6.130599999999709e-05, 6.0500000000001525e-05, 6.127800000000141e-05, 6.143100000000068e-05]</msg>
<status status="PASS" starttime="20201030 10:59:37.926" endtime="20201030 10:59:37.928"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.921" endtime="20201030 10:59:37.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:37.932" endtime="20201030 10:59:37.952"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.931" endtime="20201030 10:59:37.952"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.930" endtime="20201030 10:59:37.953"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.569" endtime="20201030 10:59:37.953"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.568" endtime="20201030 10:59:37.953"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.962" endtime="20201030 10:59:37.981"></status>
</kw>
<msg timestamp="20201030 10:59:37.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:37.960" endtime="20201030 10:59:37.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:37.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:37.982" endtime="20201030 10:59:37.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.985" endtime="20201030 10:59:37.986"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.958" endtime="20201030 10:59:37.987"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.956" endtime="20201030 10:59:37.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:37.994" endtime="20201030 10:59:38.281"></status>
</kw>
<msg timestamp="20201030 10:59:38.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021090708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021153097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:37.992" endtime="20201030 10:59:38.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021090708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021153097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:38.285" endtime="20201030 10:59:38.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.294" endtime="20201030 10:59:38.295"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.990" endtime="20201030 10:59:38.296"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.988" endtime="20201030 10:59:38.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:38.300" level="INFO">${RESULT} = [{'diff': 6.23889999999995e-05}, {'diff': 6.150000000000252e-05}, {'diff': 6.179199999999802e-05}, {'diff': 6.202800000000216e-05}, {'diff': 6.17080000000006e-05}, {'diff': 6.211199999999958e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:38.297" endtime="20201030 10:59:38.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:38.305" level="INFO">${ACCURACY} = {'diff': [6.23889999999995e-05, 6.150000000000252e-05, 6.179199999999802e-05, 6.202800000000216e-05, 6.17080000000006e-05, 6.211199999999958e-05, 6.166700000000136e-05, 6.165299999999832e-05, 6.163900...</msg>
<status status="PASS" starttime="20201030 10:59:38.301" endtime="20201030 10:59:38.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.309" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 10:59:38.308" endtime="20201030 10:59:38.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.312" level="INFO">VALUE: [6.23889999999995e-05, 6.150000000000252e-05, 6.179199999999802e-05, 6.202800000000216e-05, 6.17080000000006e-05, 6.211199999999958e-05, 6.166700000000136e-05, 6.165299999999832e-05, 6.163900000000222e-05, 6.234800000000026e-05, 6.180500000000158e-05, 6.172300000000311e-05, 6.179099999999854e-05, 6.163899999999875e-05, 6.236100000000036e-05, 6.19300000000017e-05, 6.177799999999845e-05, 6.223600000000024e-05, 6.22080000000011e-05, 6.237499999999993e-05, 6.181900000000115e-05, 6.158300000000047e-05, 6.244500000000125e-05, 6.187499999999943e-05, 6.166699999999789e-05, 6.237499999999993e-05, 6.165299999999832e-05, 6.179200000000148e-05, 6.151300000000262e-05, 6.172200000000017e-05, 6.215199999999935e-05, 6.15690000000009e-05, 6.23889999999995e-05, 6.213900000000272e-05, 6.165299999999832e-05, 6.190299999999857e-05, 6.206899999999793e-05, 6.22080000000011e-05, 6.199999999999956e-05, 6.227699999999947e-05, 6.168099999999746e-05, 6.173699999999921e-05, 6.229199999999852e-05, 6.208400000000044e-05, 6.227800000000241e-05, 6.222200000000067e-05, 6.216599999999892e-05, 6.242999999999874e-05, 6.213900000000272e-05, 6.198599999999999e-05]</msg>
<status status="PASS" starttime="20201030 10:59:38.310" endtime="20201030 10:59:38.313"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.306" endtime="20201030 10:59:38.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:38.318" endtime="20201030 10:59:38.337"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.316" endtime="20201030 10:59:38.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.315" endtime="20201030 10:59:38.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.954" endtime="20201030 10:59:38.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:37.953" endtime="20201030 10:59:38.339"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.348" endtime="20201030 10:59:38.366"></status>
</kw>
<msg timestamp="20201030 10:59:38.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:38.346" endtime="20201030 10:59:38.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:38.367" endtime="20201030 10:59:38.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.370" endtime="20201030 10:59:38.371"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.343" endtime="20201030 10:59:38.372"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.341" endtime="20201030 10:59:38.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.379" endtime="20201030 10:59:38.665"></status>
</kw>
<msg timestamp="20201030 10:59:38.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021112944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021175458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:38.378" endtime="20201030 10:59:38.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021112944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021175458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:38.670" endtime="20201030 10:59:38.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.678" endtime="20201030 10:59:38.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.375" endtime="20201030 10:59:38.681"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.373" endtime="20201030 10:59:38.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:38.685" level="INFO">${RESULT} = [{'diff': 6.251399999999963e-05}, {'diff': 6.281899999999868e-05}, {'diff': 6.252800000000266e-05}, {'diff': 6.32219999999982e-05}, {'diff': 6.323599999999777e-05}, {'diff': 6.265299999999932e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:38.682" endtime="20201030 10:59:38.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:38.690" level="INFO">${ACCURACY} = {'diff': [6.251399999999963e-05, 6.281899999999868e-05, 6.252800000000266e-05, 6.32219999999982e-05, 6.323599999999777e-05, 6.265299999999932e-05, 6.344499999999878e-05, 6.2582999999998e-05, 6.2500000...</msg>
<status status="PASS" starttime="20201030 10:59:38.686" endtime="20201030 10:59:38.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.695" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 10:59:38.694" endtime="20201030 10:59:38.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.697" level="INFO">VALUE: [6.251399999999963e-05, 6.281899999999868e-05, 6.252800000000266e-05, 6.32219999999982e-05, 6.323599999999777e-05, 6.265299999999932e-05, 6.344499999999878e-05, 6.2582999999998e-05, 6.250000000000006e-05, 6.334700000000179e-05, 6.308399999999798e-05, 6.27080000000016e-05, 6.265299999999932e-05, 6.288800000000053e-05, 6.319399999999906e-05, 6.341600000000017e-05, 6.273600000000074e-05, 6.30829999999985e-05, 6.32219999999982e-05, 6.279099999999954e-05, 6.34439999999993e-05, 6.286100000000086e-05, 6.329199999999952e-05, 6.295900000000132e-05, 6.250000000000006e-05, 6.295899999999785e-05, 6.308399999999798e-05, 6.286100000000086e-05, 6.25690000000019e-05, 6.337500000000093e-05, 6.302700000000022e-05, 6.319399999999906e-05, 6.30279999999997e-05, 6.277699999999997e-05, 6.258300000000147e-05, 6.336100000000136e-05, 6.304200000000273e-05, 6.27500000000003e-05, 6.311100000000111e-05, 6.330600000000255e-05, 6.277799999999945e-05, 6.323600000000124e-05, 6.32080000000021e-05, 6.280599999999859e-05, 6.258399999999747e-05, 6.344500000000225e-05, 6.329199999999952e-05, 6.263800000000028e-05, 6.330499999999961e-05, 6.274999999999684e-05]</msg>
<status status="PASS" starttime="20201030 10:59:38.696" endtime="20201030 10:59:38.698"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.691" endtime="20201030 10:59:38.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:38.703" endtime="20201030 10:59:38.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.701" endtime="20201030 10:59:38.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.700" endtime="20201030 10:59:38.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.340" endtime="20201030 10:59:38.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.339" endtime="20201030 10:59:38.723"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.733" endtime="20201030 10:59:38.750"></status>
</kw>
<msg timestamp="20201030 10:59:38.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:38.731" endtime="20201030 10:59:38.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:38.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:38.752" endtime="20201030 10:59:38.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.754" endtime="20201030 10:59:38.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.728" endtime="20201030 10:59:38.756"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.726" endtime="20201030 10:59:38.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:38.764" endtime="20201030 10:59:39.050"></status>
</kw>
<msg timestamp="20201030 10:59:39.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020848819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020912917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:38.762" endtime="20201030 10:59:39.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020848819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020912917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:39.055" endtime="20201030 10:59:39.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.063" endtime="20201030 10:59:39.065"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.759" endtime="20201030 10:59:39.066"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.758" endtime="20201030 10:59:39.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:39.070" level="INFO">${RESULT} = [{'diff': 6.409799999999855e-05}, {'diff': 6.436099999999889e-05}, {'diff': 6.409699999999907e-05}, {'diff': 6.349999999999759e-05}, {'diff': 6.42219999999992e-05}, {'diff': 6.443100000000021e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:39.067" endtime="20201030 10:59:39.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:39.074" level="INFO">${ACCURACY} = {'diff': [6.409799999999855e-05, 6.436099999999889e-05, 6.409699999999907e-05, 6.349999999999759e-05, 6.42219999999992e-05, 6.443100000000021e-05, 6.394499999999928e-05, 6.443000000000074e-05, 6.35140...</msg>
<status status="PASS" starttime="20201030 10:59:39.071" endtime="20201030 10:59:39.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.079" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 10:59:39.078" endtime="20201030 10:59:39.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.082" level="INFO">VALUE: [6.409799999999855e-05, 6.436099999999889e-05, 6.409699999999907e-05, 6.349999999999759e-05, 6.42219999999992e-05, 6.443100000000021e-05, 6.394499999999928e-05, 6.443000000000074e-05, 6.351400000000063e-05, 6.365299999999685e-05, 6.372200000000217e-05, 6.386100000000186e-05, 6.363900000000075e-05, 6.350000000000106e-05, 6.379200000000002e-05, 6.358399999999848e-05, 6.365299999999685e-05, 6.35699999999989e-05, 6.437499999999846e-05, 6.351299999999768e-05, 6.437499999999846e-05, 6.406899999999993e-05, 6.387499999999796e-05, 6.40829999999995e-05, 6.384699999999882e-05, 6.445799999999988e-05, 6.348599999999802e-05, 6.431999999999966e-05, 6.443100000000021e-05, 6.444499999999978e-05, 6.416700000000039e-05, 6.437500000000193e-05, 6.383299999999925e-05, 6.415300000000082e-05, 6.356899999999943e-05, 6.422299999999867e-05, 6.390199999999763e-05, 6.420799999999963e-05, 6.420799999999963e-05, 6.369399999999956e-05, 6.398599999999852e-05, 6.377800000000045e-05, 6.386099999999839e-05, 6.366699999999989e-05, 6.413900000000125e-05, 6.422200000000267e-05, 6.386100000000186e-05, 6.443100000000021e-05, 6.437500000000193e-05, 6.366699999999989e-05]</msg>
<status status="PASS" starttime="20201030 10:59:39.080" endtime="20201030 10:59:39.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.075" endtime="20201030 10:59:39.083"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:39.087" endtime="20201030 10:59:39.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.085" endtime="20201030 10:59:39.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.084" endtime="20201030 10:59:39.107"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.724" endtime="20201030 10:59:39.108"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:38.724" endtime="20201030 10:59:39.108"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.117" endtime="20201030 10:59:39.135"></status>
</kw>
<msg timestamp="20201030 10:59:39.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:39.115" endtime="20201030 10:59:39.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:39.136" endtime="20201030 10:59:39.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.139" endtime="20201030 10:59:39.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.112" endtime="20201030 10:59:39.141"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.110" endtime="20201030 10:59:39.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.148" endtime="20201030 10:59:39.435"></status>
</kw>
<msg timestamp="20201030 10:59:39.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021289083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021353833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:39.147" endtime="20201030 10:59:39.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021289083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021353833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:39.439" endtime="20201030 10:59:39.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.447" endtime="20201030 10:59:39.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.144" endtime="20201030 10:59:39.450"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.142" endtime="20201030 10:59:39.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:39.454" level="INFO">${RESULT} = [{'diff': 6.474999999999884e-05}, {'diff': 6.488899999999853e-05}, {'diff': 6.451399999999816e-05}, {'diff': 6.49440000000008e-05}, {'diff': 6.543000000000174e-05}, {'diff': 6.47219999999997e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:39.451" endtime="20201030 10:59:39.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:39.459" level="INFO">${ACCURACY} = {'diff': [6.474999999999884e-05, 6.488899999999853e-05, 6.451399999999816e-05, 6.49440000000008e-05, 6.543000000000174e-05, 6.47219999999997e-05, 6.491700000000114e-05, 6.466700000000089e-05, 6.494500...</msg>
<status status="PASS" starttime="20201030 10:59:39.455" endtime="20201030 10:59:39.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.463" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 10:59:39.462" endtime="20201030 10:59:39.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.466" level="INFO">VALUE: [6.474999999999884e-05, 6.488899999999853e-05, 6.451399999999816e-05, 6.49440000000008e-05, 6.543000000000174e-05, 6.47219999999997e-05, 6.491700000000114e-05, 6.466700000000089e-05, 6.494500000000028e-05, 6.484699999999982e-05, 6.543100000000121e-05, 6.47219999999997e-05, 6.522299999999967e-05, 6.452699999999825e-05, 6.459699999999957e-05, 6.449999999999859e-05, 6.47769999999985e-05, 6.480500000000111e-05, 6.466600000000142e-05, 6.513899999999878e-05, 6.451399999999816e-05, 6.449999999999859e-05, 6.477800000000145e-05, 6.501400000000213e-05, 6.537499999999946e-05, 6.505600000000084e-05, 6.544500000000078e-05, 6.482000000000016e-05, 6.543100000000121e-05, 6.450000000000206e-05, 6.466599999999795e-05, 6.536099999999989e-05, 6.524999999999934e-05, 6.465200000000185e-05, 6.449999999999859e-05, 6.45280000000012e-05, 6.52220000000002e-05, 6.513900000000225e-05, 6.45280000000012e-05, 6.495800000000038e-05, 6.469400000000056e-05, 6.480600000000059e-05, 6.495899999999985e-05, 6.465300000000132e-05, 6.458399999999948e-05, 6.512500000000268e-05, 6.505500000000136e-05, 6.459699999999957e-05, 6.541600000000217e-05, 6.495800000000038e-05]</msg>
<status status="PASS" starttime="20201030 10:59:39.464" endtime="20201030 10:59:39.467"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.459" endtime="20201030 10:59:39.468"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:39.472" endtime="20201030 10:59:39.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.470" endtime="20201030 10:59:39.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.469" endtime="20201030 10:59:39.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.109" endtime="20201030 10:59:39.492"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.108" endtime="20201030 10:59:39.493"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.501" endtime="20201030 10:59:39.520"></status>
</kw>
<msg timestamp="20201030 10:59:39.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:39.500" endtime="20201030 10:59:39.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:39.522" endtime="20201030 10:59:39.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.524" endtime="20201030 10:59:39.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.497" endtime="20201030 10:59:39.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.495" endtime="20201030 10:59:39.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.534" endtime="20201030 10:59:39.819"></status>
</kw>
<msg timestamp="20201030 10:59:39.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020114083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020180486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:39.532" endtime="20201030 10:59:39.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020114083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020180486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:39.824" endtime="20201030 10:59:39.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.832" endtime="20201030 10:59:39.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.529" endtime="20201030 10:59:39.835"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.527" endtime="20201030 10:59:39.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:39.839" level="INFO">${RESULT} = [{'diff': 6.64029999999996e-05}, {'diff': 6.608299999999803e-05}, {'diff': 6.586100000000039e-05}, {'diff': 6.55700000000009e-05}, {'diff': 6.587499999999996e-05}, {'diff': 6.594500000000128e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:39.836" endtime="20201030 10:59:39.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:39.844" level="INFO">${ACCURACY} = {'diff': [6.64029999999996e-05, 6.608299999999803e-05, 6.586100000000039e-05, 6.55700000000009e-05, 6.587499999999996e-05, 6.594500000000128e-05, 6.577799999999898e-05, 6.638900000000003e-05, 6.620899...</msg>
<status status="PASS" starttime="20201030 10:59:39.840" endtime="20201030 10:59:39.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.849" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 10:59:39.848" endtime="20201030 10:59:39.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.852" level="INFO">VALUE: [6.64029999999996e-05, 6.608299999999803e-05, 6.586100000000039e-05, 6.55700000000009e-05, 6.587499999999996e-05, 6.594500000000128e-05, 6.577799999999898e-05, 6.638900000000003e-05, 6.620899999999763e-05, 6.604099999999932e-05, 6.579199999999855e-05, 6.559700000000057e-05, 6.579099999999907e-05, 6.573600000000027e-05, 6.629099999999957e-05, 6.541600000000217e-05, 6.620800000000163e-05, 6.641699999999917e-05, 6.590300000000257e-05, 6.637500000000046e-05, 6.561199999999962e-05, 6.627799999999948e-05, 6.630600000000209e-05, 6.577800000000245e-05, 6.630499999999914e-05, 6.566599999999895e-05, 6.563899999999928e-05, 6.611100000000064e-05, 6.636100000000089e-05, 6.570800000000113e-05, 6.565299999999885e-05, 6.615300000000282e-05, 6.570800000000113e-05, 6.629199999999905e-05, 6.627800000000295e-05, 6.643100000000221e-05, 6.643099999999874e-05, 6.5583999999997e-05, 6.55700000000009e-05, 6.579200000000202e-05, 6.629199999999905e-05, 6.600000000000009e-05, 6.615199999999988e-05, 6.623600000000077e-05, 6.608400000000098e-05, 6.601399999999966e-05, 6.57220000000007e-05, 6.644399999999884e-05, 6.600000000000009e-05, 6.584700000000082e-05]</msg>
<status status="PASS" starttime="20201030 10:59:39.850" endtime="20201030 10:59:39.852"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.845" endtime="20201030 10:59:39.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:39.857" endtime="20201030 10:59:39.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.855" endtime="20201030 10:59:39.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.854" endtime="20201030 10:59:39.877"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.493" endtime="20201030 10:59:39.878"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.493" endtime="20201030 10:59:39.878"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.887" endtime="20201030 10:59:39.905"></status>
</kw>
<msg timestamp="20201030 10:59:39.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:39.885" endtime="20201030 10:59:39.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:39.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:39.907" endtime="20201030 10:59:39.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.909" endtime="20201030 10:59:39.911"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.883" endtime="20201030 10:59:39.911"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.880" endtime="20201030 10:59:39.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:39.919" endtime="20201030 10:59:40.206"></status>
</kw>
<msg timestamp="20201030 10:59:40.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020338319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:39.917" endtime="20201030 10:59:40.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020338319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:40.211" endtime="20201030 10:59:40.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.219" endtime="20201030 10:59:40.221"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.914" endtime="20201030 10:59:40.221"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.912" endtime="20201030 10:59:40.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:40.226" level="INFO">${RESULT} = [{'diff': 6.65419999999993e-05}, {'diff': 6.743099999999974e-05}, {'diff': 6.70969999999986e-05}, {'diff': 6.736100000000189e-05}, {'diff': 6.695799999999891e-05}, {'diff': 6.729200000000005e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:40.223" endtime="20201030 10:59:40.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:40.230" level="INFO">${ACCURACY} = {'diff': [6.65419999999993e-05, 6.743099999999974e-05, 6.70969999999986e-05, 6.736100000000189e-05, 6.695799999999891e-05, 6.729200000000005e-05, 6.708400000000198e-05, 6.673700000000074e-05, 6.693100...</msg>
<status status="PASS" starttime="20201030 10:59:40.227" endtime="20201030 10:59:40.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.235" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 10:59:40.234" endtime="20201030 10:59:40.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.238" level="INFO">VALUE: [6.65419999999993e-05, 6.743099999999974e-05, 6.70969999999986e-05, 6.736100000000189e-05, 6.695799999999891e-05, 6.729200000000005e-05, 6.708400000000198e-05, 6.673700000000074e-05, 6.693100000000271e-05, 6.736200000000137e-05, 6.67220000000017e-05, 6.649999999999712e-05, 6.70969999999986e-05, 6.649999999999712e-05, 6.650000000000059e-05, 6.745799999999941e-05, 6.666699999999942e-05, 6.672199999999823e-05, 6.686100000000139e-05, 6.648600000000102e-05, 6.713899999999731e-05, 6.652799999999973e-05, 6.731999999999919e-05, 6.651400000000016e-05, 6.699999999999762e-05, 6.659700000000157e-05, 6.700000000000109e-05, 6.687500000000096e-05, 6.734699999999885e-05, 6.687499999999749e-05, 6.675000000000084e-05, 6.658299999999853e-05, 6.737499999999799e-05, 6.743099999999974e-05, 6.737499999999799e-05, 6.677799999999998e-05, 6.644500000000178e-05, 6.72220000000022e-05, 6.70839999999985e-05, 6.722300000000167e-05, 6.67090000000016e-05, 6.651299999999721e-05, 6.743000000000027e-05, 6.694400000000281e-05, 6.736099999999842e-05, 6.736100000000189e-05, 6.687500000000096e-05, 6.713900000000078e-05, 6.650000000000059e-05, 6.680599999999912e-05]</msg>
<status status="PASS" starttime="20201030 10:59:40.236" endtime="20201030 10:59:40.238"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.231" endtime="20201030 10:59:40.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:40.243" endtime="20201030 10:59:40.262"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.241" endtime="20201030 10:59:40.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.240" endtime="20201030 10:59:40.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.879" endtime="20201030 10:59:40.263"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:39.878" endtime="20201030 10:59:40.263"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.273" endtime="20201030 10:59:40.293"></status>
</kw>
<msg timestamp="20201030 10:59:40.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:40.271" endtime="20201030 10:59:40.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:40.295" endtime="20201030 10:59:40.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.298" endtime="20201030 10:59:40.299"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.268" endtime="20201030 10:59:40.300"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.266" endtime="20201030 10:59:40.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.307" endtime="20201030 10:59:40.593"></status>
</kw>
<msg timestamp="20201030 10:59:40.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023399403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023467694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:40.305" endtime="20201030 10:59:40.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023399403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023467694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:40.597" endtime="20201030 10:59:40.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.606" endtime="20201030 10:59:40.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.303" endtime="20201030 10:59:40.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.301" endtime="20201030 10:59:40.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:40.612" level="INFO">${RESULT} = [{'diff': 6.829100000000157e-05}, {'diff': 6.766600000000095e-05}, {'diff': 6.830500000000114e-05}, {'diff': 6.784699999999935e-05}, {'diff': 6.82909999999981e-05}, {'diff': 6.799999999999862e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:40.609" endtime="20201030 10:59:40.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:40.617" level="INFO">${ACCURACY} = {'diff': [6.829100000000157e-05, 6.766600000000095e-05, 6.830500000000114e-05, 6.784699999999935e-05, 6.82909999999981e-05, 6.799999999999862e-05, 6.758299999999953e-05, 6.791700000000067e-05, 6.80000...</msg>
<status status="PASS" starttime="20201030 10:59:40.613" endtime="20201030 10:59:40.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.621" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 10:59:40.620" endtime="20201030 10:59:40.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.624" level="INFO">VALUE: [6.829100000000157e-05, 6.766600000000095e-05, 6.830500000000114e-05, 6.784699999999935e-05, 6.82909999999981e-05, 6.799999999999862e-05, 6.758299999999953e-05, 6.791700000000067e-05, 6.800000000000209e-05, 6.77220000000027e-05, 6.800000000000209e-05, 6.815299999999788e-05, 6.823700000000224e-05, 6.755599999999987e-05, 6.802700000000175e-05, 6.799999999999862e-05, 6.813800000000231e-05, 6.75700000000029e-05, 6.751400000000116e-05, 6.77640000000014e-05, 6.777800000000098e-05, 6.836099999999942e-05, 6.772199999999923e-05, 6.808300000000003e-05, 6.751400000000116e-05, 6.786099999999892e-05, 6.824999999999887e-05, 6.7583999999999e-05, 6.82359999999993e-05, 6.829200000000105e-05, 6.786200000000187e-05, 6.758299999999953e-05, 6.805499999999742e-05, 6.790299999999763e-05, 6.820800000000016e-05, 6.779100000000107e-05, 6.848599999999955e-05, 6.77359999999988e-05, 6.830600000000062e-05, 6.829200000000105e-05, 6.784699999999935e-05, 6.765300000000085e-05, 6.829199999999758e-05, 6.827800000000148e-05, 6.787499999999849e-05, 6.800000000000209e-05, 6.77220000000027e-05, 6.756899999999996e-05, 6.766600000000095e-05, 6.780500000000064e-05]</msg>
<status status="PASS" starttime="20201030 10:59:40.622" endtime="20201030 10:59:40.625"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.618" endtime="20201030 10:59:40.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:40.630" endtime="20201030 10:59:40.649"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.628" endtime="20201030 10:59:40.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.627" endtime="20201030 10:59:40.650"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.264" endtime="20201030 10:59:40.651"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.264" endtime="20201030 10:59:40.651"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.660" endtime="20201030 10:59:40.677"></status>
</kw>
<msg timestamp="20201030 10:59:40.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:40.658" endtime="20201030 10:59:40.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:40.679" endtime="20201030 10:59:40.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.681" endtime="20201030 10:59:40.683"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.656" endtime="20201030 10:59:40.684"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.653" endtime="20201030 10:59:40.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.691" endtime="20201030 10:59:40.978"></status>
</kw>
<msg timestamp="20201030 10:59:40.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020146514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020215722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:40.689" endtime="20201030 10:59:40.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:40.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020146514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020215722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:40.982" endtime="20201030 10:59:40.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:40.991" endtime="20201030 10:59:40.992"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.686" endtime="20201030 10:59:40.993"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.685" endtime="20201030 10:59:40.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:40.997" level="INFO">${RESULT} = [{'diff': 6.920799999999769e-05}, {'diff': 6.865300000000185e-05}, {'diff': 6.922199999999726e-05}, {'diff': 6.916699999999845e-05}, {'diff': 6.884700000000035e-05}, {'diff': 6.888899999999906e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:40.994" endtime="20201030 10:59:40.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:41.002" level="INFO">${ACCURACY} = {'diff': [6.920799999999769e-05, 6.865300000000185e-05, 6.922199999999726e-05, 6.916699999999845e-05, 6.884700000000035e-05, 6.888899999999906e-05, 6.850000000000259e-05, 6.944499999999784e-05, 6.9138...</msg>
<status status="PASS" starttime="20201030 10:59:40.998" endtime="20201030 10:59:41.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.007" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 10:59:41.006" endtime="20201030 10:59:41.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.010" level="INFO">VALUE: [6.920799999999769e-05, 6.865300000000185e-05, 6.922199999999726e-05, 6.916699999999845e-05, 6.884700000000035e-05, 6.888899999999906e-05, 6.850000000000259e-05, 6.944499999999784e-05, 6.913899999999931e-05, 6.936100000000042e-05, 6.911100000000017e-05, 6.90840000000005e-05, 6.890199999999916e-05, 6.886099999999992e-05, 6.887499999999949e-05, 6.858300000000053e-05, 6.926399999999944e-05, 6.879199999999808e-05, 6.876399999999894e-05, 6.886099999999992e-05, 6.872199999999676e-05, 6.90840000000005e-05, 6.870900000000013e-05, 6.887499999999949e-05, 6.87229999999997e-05, 6.944499999999784e-05, 6.886099999999992e-05, 6.87909999999986e-05, 6.851400000000216e-05, 6.899999999999962e-05, 6.851399999999869e-05, 6.851400000000216e-05, 6.879199999999808e-05, 6.890299999999863e-05, 6.920800000000116e-05, 6.899999999999962e-05, 6.87359999999998e-05, 6.872200000000023e-05, 6.895900000000038e-05, 6.920900000000063e-05, 6.937499999999999e-05, 6.916599999999898e-05, 6.922200000000073e-05, 6.930499999999867e-05, 6.886099999999992e-05, 6.870800000000066e-05, 6.915300000000235e-05, 6.934700000000085e-05, 6.866700000000142e-05, 6.943100000000174e-05]</msg>
<status status="PASS" starttime="20201030 10:59:41.008" endtime="20201030 10:59:41.011"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.003" endtime="20201030 10:59:41.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:41.015" endtime="20201030 10:59:41.034"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.013" endtime="20201030 10:59:41.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.012" endtime="20201030 10:59:41.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.652" endtime="20201030 10:59:41.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:40.651" endtime="20201030 10:59:41.036"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.045" endtime="20201030 10:59:41.062"></status>
</kw>
<msg timestamp="20201030 10:59:41.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:41.043" endtime="20201030 10:59:41.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:41.063" endtime="20201030 10:59:41.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.066" endtime="20201030 10:59:41.067"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.040" endtime="20201030 10:59:41.068"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.038" endtime="20201030 10:59:41.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.075" endtime="20201030 10:59:41.362"></status>
</kw>
<msg timestamp="20201030 10:59:41.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020041292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020111722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:41.073" endtime="20201030 10:59:41.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020041292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020111722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:41.366" endtime="20201030 10:59:41.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.374" endtime="20201030 10:59:41.376"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.071" endtime="20201030 10:59:41.377"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.069" endtime="20201030 10:59:41.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:41.381" level="INFO">${RESULT} = [{'diff': 7.04299999999998e-05}, {'diff': 7.034699999999838e-05}, {'diff': 7.045800000000241e-05}, {'diff': 6.951399999999969e-05}, {'diff': 7.00970000000016e-05}, {'diff': 7.029199999999958e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:41.378" endtime="20201030 10:59:41.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:41.386" level="INFO">${ACCURACY} = {'diff': [7.04299999999998e-05, 7.034699999999838e-05, 7.045800000000241e-05, 6.951399999999969e-05, 7.00970000000016e-05, 7.029199999999958e-05, 6.965299999999938e-05, 7.038900000000056e-05, 7.043100...</msg>
<status status="PASS" starttime="20201030 10:59:41.382" endtime="20201030 10:59:41.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.390" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 10:59:41.389" endtime="20201030 10:59:41.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.393" level="INFO">VALUE: [7.04299999999998e-05, 7.034699999999838e-05, 7.045800000000241e-05, 6.951399999999969e-05, 7.00970000000016e-05, 7.029199999999958e-05, 6.965299999999938e-05, 7.038900000000056e-05, 7.043100000000274e-05, 7.002700000000028e-05, 7.034800000000133e-05, 6.957000000000144e-05, 7.044399999999937e-05, 7.026399999999697e-05, 6.969400000000209e-05, 7.02360000000013e-05, 6.984700000000135e-05, 6.951399999999969e-05, 7.008299999999856e-05, 7.048700000000102e-05, 7.013900000000031e-05, 6.954199999999883e-05, 6.994499999999834e-05, 6.954099999999935e-05, 7.040300000000013e-05, 6.981900000000221e-05, 6.994400000000234e-05, 6.980499999999917e-05, 7.026400000000044e-05, 6.986099999999745e-05, 7.041700000000317e-05, 6.993000000000277e-05, 6.969499999999809e-05, 7.036100000000142e-05, 7.001400000000019e-05, 7.037500000000099e-05, 6.951399999999969e-05, 7.031899999999924e-05, 6.972200000000123e-05, 6.95970000000011e-05, 6.990299999999963e-05, 7.034699999999838e-05, 6.968000000000252e-05, 7.005499999999942e-05, 6.947200000000098e-05, 6.994400000000234e-05, 7.011100000000117e-05, 7.045800000000241e-05, 7.016699999999945e-05, 7.01109999999977e-05]</msg>
<status status="PASS" starttime="20201030 10:59:41.391" endtime="20201030 10:59:41.394"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.386" endtime="20201030 10:59:41.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:41.398" endtime="20201030 10:59:41.417"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.396" endtime="20201030 10:59:41.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.395" endtime="20201030 10:59:41.418"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.037" endtime="20201030 10:59:41.419"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.036" endtime="20201030 10:59:41.419"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.428" endtime="20201030 10:59:41.446"></status>
</kw>
<msg timestamp="20201030 10:59:41.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:41.426" endtime="20201030 10:59:41.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:41.448" endtime="20201030 10:59:41.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.450" endtime="20201030 10:59:41.452"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.423" endtime="20201030 10:59:41.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.421" endtime="20201030 10:59:41.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.460" endtime="20201030 10:59:41.747"></status>
</kw>
<msg timestamp="20201030 10:59:41.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021918903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:41.458" endtime="20201030 10:59:41.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021918903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:41.751" endtime="20201030 10:59:41.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.760" endtime="20201030 10:59:41.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.456" endtime="20201030 10:59:41.762"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.454" endtime="20201030 10:59:41.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:41.767" level="INFO">${RESULT} = [{'diff': 7.076400000000094e-05}, {'diff': 7.065300000000038e-05}, {'diff': 7.086199999999793e-05}, {'diff': 7.131900000000024e-05}, {'diff': 7.072200000000223e-05}, {'diff': 7.063800000000134e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:41.763" endtime="20201030 10:59:41.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:41.771" level="INFO">${ACCURACY} = {'diff': [7.076400000000094e-05, 7.065300000000038e-05, 7.086199999999793e-05, 7.131900000000024e-05, 7.072200000000223e-05, 7.063800000000134e-05, 7.14300000000008e-05, 7.130500000000067e-05, 7.10140...</msg>
<status status="PASS" starttime="20201030 10:59:41.768" endtime="20201030 10:59:41.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.776" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 10:59:41.775" endtime="20201030 10:59:41.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.778" level="INFO">VALUE: [7.076400000000094e-05, 7.065300000000038e-05, 7.086199999999793e-05, 7.131900000000024e-05, 7.072200000000223e-05, 7.063800000000134e-05, 7.14300000000008e-05, 7.130500000000067e-05, 7.101400000000119e-05, 7.07360000000018e-05, 7.086100000000192e-05, 7.052800000000026e-05, 7.131900000000024e-05, 7.087500000000149e-05, 7.084699999999888e-05, 7.077800000000051e-05, 7.065300000000038e-05, 7.057000000000244e-05, 7.077800000000051e-05, 7.065300000000038e-05, 7.144499999999984e-05, 7.120799999999969e-05, 7.115200000000141e-05, 7.051400000000069e-05, 7.070800000000266e-05, 7.130600000000015e-05, 7.081899999999974e-05, 7.077800000000051e-05, 7.152799999999779e-05, 7.065300000000038e-05, 7.063900000000081e-05, 7.145899999999941e-05, 7.093099999999977e-05, 7.113899999999784e-05, 7.09300000000003e-05, 7.098600000000205e-05, 7.145799999999994e-05, 7.137499999999852e-05, 7.141599999999776e-05, 7.101400000000119e-05, 7.076399999999747e-05, 7.055600000000287e-05, 7.12360000000023e-05, 7.123599999999883e-05, 7.088900000000106e-05, 7.079200000000008e-05, 7.088900000000106e-05, 7.109699999999913e-05, 7.056999999999897e-05, 7.058299999999906e-05]</msg>
<status status="PASS" starttime="20201030 10:59:41.777" endtime="20201030 10:59:41.780"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.772" endtime="20201030 10:59:41.780"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:41.784" endtime="20201030 10:59:41.804"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.783" endtime="20201030 10:59:41.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.781" endtime="20201030 10:59:41.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.420" endtime="20201030 10:59:41.805"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.419" endtime="20201030 10:59:41.805"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.814" endtime="20201030 10:59:41.831"></status>
</kw>
<msg timestamp="20201030 10:59:41.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:41.813" endtime="20201030 10:59:41.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:41.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:41.832" endtime="20201030 10:59:41.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.835" endtime="20201030 10:59:41.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.810" endtime="20201030 10:59:41.837"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.808" endtime="20201030 10:59:41.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:41.844" endtime="20201030 10:59:42.131"></status>
</kw>
<msg timestamp="20201030 10:59:42.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020139472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:41.843" endtime="20201030 10:59:42.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020139472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:42.135" endtime="20201030 10:59:42.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.144" endtime="20201030 10:59:42.145"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.840" endtime="20201030 10:59:42.146"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.838" endtime="20201030 10:59:42.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:42.150" level="INFO">${RESULT} = [{'diff': 7.226399999999897e-05}, {'diff': 7.158300000000006e-05}, {'diff': 7.237499999999952e-05}, {'diff': 7.187499999999902e-05}, {'diff': 7.244500000000084e-05}, {'diff': 7.223599999999983e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:42.147" endtime="20201030 10:59:42.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:42.155" level="INFO">${ACCURACY} = {'diff': [7.226399999999897e-05, 7.158300000000006e-05, 7.237499999999952e-05, 7.187499999999902e-05, 7.244500000000084e-05, 7.223599999999983e-05, 7.215299999999841e-05, 7.149999999999865e-05, 7.2291...</msg>
<status status="PASS" starttime="20201030 10:59:42.151" endtime="20201030 10:59:42.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.160" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 10:59:42.159" endtime="20201030 10:59:42.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.163" level="INFO">VALUE: [7.226399999999897e-05, 7.158300000000006e-05, 7.237499999999952e-05, 7.187499999999902e-05, 7.244500000000084e-05, 7.223599999999983e-05, 7.215299999999841e-05, 7.149999999999865e-05, 7.229199999999811e-05, 7.151300000000221e-05, 7.194400000000087e-05, 7.242999999999833e-05, 7.24439999999979e-05, 7.148599999999908e-05, 7.17910000000016e-05, 7.220900000000016e-05, 7.163899999999834e-05, 7.186100000000292e-05, 7.186099999999945e-05, 7.158300000000006e-05, 7.222200000000026e-05, 7.243100000000127e-05, 7.215299999999841e-05, 7.187500000000249e-05, 7.156999999999997e-05, 7.17910000000016e-05, 7.23049999999982e-05, 7.215299999999841e-05, 7.172199999999976e-05, 7.158300000000006e-05, 7.163899999999834e-05, 7.238899999999909e-05, 7.172199999999976e-05, 7.188899999999859e-05, 7.151400000000169e-05, 7.220900000000016e-05, 7.179199999999761e-05, 7.245799999999747e-05, 7.229200000000158e-05, 7.19300000000013e-05, 7.150000000000212e-05, 7.229099999999863e-05, 7.187499999999902e-05, 7.158300000000006e-05, 7.24439999999979e-05, 7.222200000000026e-05, 7.166599999999801e-05, 7.166699999999748e-05, 7.215300000000188e-05, 7.230599999999768e-05]</msg>
<status status="PASS" starttime="20201030 10:59:42.161" endtime="20201030 10:59:42.170"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.156" endtime="20201030 10:59:42.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:42.174" endtime="20201030 10:59:42.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.173" endtime="20201030 10:59:42.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.171" endtime="20201030 10:59:42.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.806" endtime="20201030 10:59:42.195"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:41.806" endtime="20201030 10:59:42.195"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.205" endtime="20201030 10:59:42.223"></status>
</kw>
<msg timestamp="20201030 10:59:42.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:42.203" endtime="20201030 10:59:42.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:42.225" endtime="20201030 10:59:42.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.227" endtime="20201030 10:59:42.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.200" endtime="20201030 10:59:42.229"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.198" endtime="20201030 10:59:42.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.237" endtime="20201030 10:59:42.523"></status>
</kw>
<msg timestamp="20201030 10:59:42.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021023875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021096917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:42.235" endtime="20201030 10:59:42.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021023875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021096917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:42.528" endtime="20201030 10:59:42.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.536" endtime="20201030 10:59:42.538"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.232" endtime="20201030 10:59:42.539"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.230" endtime="20201030 10:59:42.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:42.543" level="INFO">${RESULT} = [{'diff': 7.304199999999886e-05}, {'diff': 7.263900000000281e-05}, {'diff': 7.262499999999977e-05}, {'diff': 7.292999999999883e-05}, {'diff': 7.34300000000028e-05}, {'diff': 7.31110000000007e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:42.540" endtime="20201030 10:59:42.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:42.547" level="INFO">${ACCURACY} = {'diff': [7.304199999999886e-05, 7.263900000000281e-05, 7.262499999999977e-05, 7.292999999999883e-05, 7.34300000000028e-05, 7.31110000000007e-05, 7.341599999999976e-05, 7.258300000000106e-05, 7.337500...</msg>
<status status="PASS" starttime="20201030 10:59:42.544" endtime="20201030 10:59:42.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.552" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 10:59:42.551" endtime="20201030 10:59:42.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.554" level="INFO">VALUE: [7.304199999999886e-05, 7.263900000000281e-05, 7.262499999999977e-05, 7.292999999999883e-05, 7.34300000000028e-05, 7.31110000000007e-05, 7.341599999999976e-05, 7.258300000000106e-05, 7.337500000000052e-05, 7.281900000000174e-05, 7.287500000000002e-05, 7.270800000000119e-05, 7.286100000000045e-05, 7.26110000000002e-05, 7.329199999999911e-05, 7.319399999999865e-05, 7.334699999999791e-05, 7.286100000000045e-05, 7.290300000000263e-05, 7.295800000000144e-05, 7.292999999999883e-05, 7.259700000000063e-05, 7.280599999999818e-05, 7.334700000000138e-05, 7.252800000000226e-05, 7.272199999999729e-05, 7.259800000000011e-05, 7.25699999999975e-05, 7.32500000000004e-05, 7.308399999999757e-05, 7.272300000000023e-05, 7.316599999999951e-05, 7.326399999999997e-05, 7.287500000000002e-05, 7.302799999999929e-05, 7.342999999999933e-05, 7.306899999999852e-05, 7.252800000000226e-05, 7.286100000000045e-05, 7.334700000000138e-05, 7.31110000000007e-05, 7.251399999999922e-05, 7.343100000000227e-05, 7.258400000000054e-05, 7.34309999999988e-05, 7.288800000000012e-05, 7.288900000000306e-05, 7.249999999999965e-05, 7.330500000000267e-05, 7.258400000000054e-05]</msg>
<status status="PASS" starttime="20201030 10:59:42.553" endtime="20201030 10:59:42.555"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.548" endtime="20201030 10:59:42.556"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:42.560" endtime="20201030 10:59:42.579"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.558" endtime="20201030 10:59:42.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.557" endtime="20201030 10:59:42.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.196" endtime="20201030 10:59:42.580"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.196" endtime="20201030 10:59:42.581"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.590" endtime="20201030 10:59:42.608"></status>
</kw>
<msg timestamp="20201030 10:59:42.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:42.588" endtime="20201030 10:59:42.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:42.610" endtime="20201030 10:59:42.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.612" endtime="20201030 10:59:42.614"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.585" endtime="20201030 10:59:42.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.583" endtime="20201030 10:59:42.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.622" endtime="20201030 10:59:42.908"></status>
</kw>
<msg timestamp="20201030 10:59:42.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021587458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021661611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:42.620" endtime="20201030 10:59:42.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021587458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021661611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:42.912" endtime="20201030 10:59:42.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.921" endtime="20201030 10:59:42.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.618" endtime="20201030 10:59:42.923"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.616" endtime="20201030 10:59:42.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:42.928" level="INFO">${RESULT} = [{'diff': 7.415300000000041e-05}, {'diff': 7.363900000000034e-05}, {'diff': 7.429200000000011e-05}, {'diff': 7.39309999999993e-05}, {'diff': 7.386100000000145e-05}, {'diff': 7.437500000000152e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:42.924" endtime="20201030 10:59:42.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:42.932" level="INFO">${ACCURACY} = {'diff': [7.415300000000041e-05, 7.363900000000034e-05, 7.429200000000011e-05, 7.39309999999993e-05, 7.386100000000145e-05, 7.437500000000152e-05, 7.369500000000209e-05, 7.394500000000234e-05, 7.39589...</msg>
<status status="PASS" starttime="20201030 10:59:42.929" endtime="20201030 10:59:42.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.936" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 10:59:42.935" endtime="20201030 10:59:42.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.939" level="INFO">VALUE: [7.415300000000041e-05, 7.363900000000034e-05, 7.429200000000011e-05, 7.39309999999993e-05, 7.386100000000145e-05, 7.437500000000152e-05, 7.369500000000209e-05, 7.394500000000234e-05, 7.395899999999844e-05, 7.372199999999829e-05, 7.406899999999952e-05, 7.373600000000133e-05, 7.429099999999716e-05, 7.392999999999983e-05, 7.365299999999991e-05, 7.365299999999991e-05, 7.376400000000047e-05, 7.351400000000022e-05, 7.423599999999836e-05, 7.358399999999807e-05, 7.3763999999997e-05, 7.380600000000265e-05, 7.43050000000002e-05, 7.365200000000044e-05, 7.35829999999986e-05, 7.394400000000287e-05, 7.411099999999823e-05, 7.365299999999991e-05, 7.40829999999991e-05, 7.422199999999879e-05, 7.366699999999948e-05, 7.436099999999848e-05, 7.411200000000118e-05, 7.358400000000154e-05, 7.384699999999841e-05, 7.386200000000093e-05, 7.39439999999994e-05, 7.348600000000108e-05, 7.40829999999991e-05, 7.354099999999988e-05, 7.388900000000059e-05, 7.381899999999927e-05, 7.377800000000004e-05, 7.445799999999947e-05, 7.386099999999798e-05, 7.379199999999961e-05, 7.44309999999998e-05, 7.377800000000004e-05, 7.352799999999979e-05, 7.423599999999836e-05]</msg>
<status status="PASS" starttime="20201030 10:59:42.938" endtime="20201030 10:59:42.941"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.933" endtime="20201030 10:59:42.941"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:42.945" endtime="20201030 10:59:42.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.944" endtime="20201030 10:59:42.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.942" endtime="20201030 10:59:42.965"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.582" endtime="20201030 10:59:42.966"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.581" endtime="20201030 10:59:42.966"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.975" endtime="20201030 10:59:42.994"></status>
</kw>
<msg timestamp="20201030 10:59:42.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:42.973" endtime="20201030 10:59:42.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:42.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:42.995" endtime="20201030 10:59:42.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:42.998" endtime="20201030 10:59:42.999"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.971" endtime="20201030 10:59:43.000"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.969" endtime="20201030 10:59:43.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.007" endtime="20201030 10:59:43.293"></status>
</kw>
<msg timestamp="20201030 10:59:43.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020034458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020109264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:43.006" endtime="20201030 10:59:43.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020034458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020109264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:43.298" endtime="20201030 10:59:43.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.306" endtime="20201030 10:59:43.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.003" endtime="20201030 10:59:43.308"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.001" endtime="20201030 10:59:43.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:43.312" level="INFO">${RESULT} = [{'diff': 7.480600000000018e-05}, {'diff': 7.486099999999898e-05}, {'diff': 7.544500000000037e-05}, {'diff': 7.536099999999948e-05}, {'diff': 7.494499999999987e-05}, {'diff': 7.537499999999905e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:43.309" endtime="20201030 10:59:43.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:43.317" level="INFO">${ACCURACY} = {'diff': [7.480600000000018e-05, 7.486099999999898e-05, 7.544500000000037e-05, 7.536099999999948e-05, 7.494499999999987e-05, 7.537499999999905e-05, 7.506899999999705e-05, 7.529100000000163e-05, 7.5083...</msg>
<status status="PASS" starttime="20201030 10:59:43.313" endtime="20201030 10:59:43.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.322" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 10:59:43.321" endtime="20201030 10:59:43.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.324" level="INFO">VALUE: [7.480600000000018e-05, 7.486099999999898e-05, 7.544500000000037e-05, 7.536099999999948e-05, 7.494499999999987e-05, 7.537499999999905e-05, 7.506899999999705e-05, 7.529100000000163e-05, 7.50830000000001e-05, 7.466600000000101e-05, 7.465300000000091e-05, 7.456900000000002e-05, 7.523599999999936e-05, 7.451399999999775e-05, 7.451400000000122e-05, 7.54310000000008e-05, 7.472299999999876e-05, 7.52639999999985e-05, 7.529200000000111e-05, 7.49310000000003e-05, 7.465200000000144e-05, 7.468000000000058e-05, 7.47500000000019e-05, 7.49440000000004e-05, 7.451400000000122e-05, 7.494399999999693e-05, 7.545800000000047e-05, 7.448600000000208e-05, 7.465300000000091e-05, 7.529199999999764e-05, 7.515300000000141e-05, 7.530599999999721e-05, 7.49310000000003e-05, 7.52500000000024e-05, 7.536099999999948e-05, 7.452700000000131e-05, 7.484699999999941e-05, 7.448600000000208e-05, 7.455599999999993e-05, 7.455599999999993e-05, 7.501399999999825e-05, 7.522199999999979e-05, 7.465299999999744e-05, 7.488899999999812e-05, 7.480600000000018e-05, 7.458400000000254e-05, 7.472300000000223e-05, 7.508399999999957e-05, 7.486099999999898e-05, 7.541599999999829e-05]</msg>
<status status="PASS" starttime="20201030 10:59:43.323" endtime="20201030 10:59:43.325"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.318" endtime="20201030 10:59:43.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:43.329" endtime="20201030 10:59:43.348"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.327" endtime="20201030 10:59:43.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.326" endtime="20201030 10:59:43.349"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.967" endtime="20201030 10:59:43.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:42.966" endtime="20201030 10:59:43.350"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.358" endtime="20201030 10:59:43.376"></status>
</kw>
<msg timestamp="20201030 10:59:43.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:43.357" endtime="20201030 10:59:43.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:43.377" endtime="20201030 10:59:43.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.380" endtime="20201030 10:59:43.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.354" endtime="20201030 10:59:43.382"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.352" endtime="20201030 10:59:43.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.391" endtime="20201030 10:59:43.691"></status>
</kw>
<msg timestamp="20201030 10:59:43.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019603625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019680014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:43.388" endtime="20201030 10:59:43.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019603625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019680014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:43.695" endtime="20201030 10:59:43.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.703" endtime="20201030 10:59:43.705"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.385" endtime="20201030 10:59:43.705"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.383" endtime="20201030 10:59:43.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:43.709" level="INFO">${RESULT} = [{'diff': 7.638899999999962e-05}, {'diff': 7.563900000000234e-05}, {'diff': 7.643099999999833e-05}, {'diff': 7.616699999999851e-05}, {'diff': 7.586099999999998e-05}, {'diff': 7.594500000000087e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:43.706" endtime="20201030 10:59:43.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:43.713" level="INFO">${ACCURACY} = {'diff': [7.638899999999962e-05, 7.563900000000234e-05, 7.643099999999833e-05, 7.616699999999851e-05, 7.586099999999998e-05, 7.594500000000087e-05, 7.556900000000102e-05, 7.59579999999975e-05, 7.55830...</msg>
<status status="PASS" starttime="20201030 10:59:43.710" endtime="20201030 10:59:43.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.718" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 10:59:43.717" endtime="20201030 10:59:43.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.720" level="INFO">VALUE: [7.638899999999962e-05, 7.563900000000234e-05, 7.643099999999833e-05, 7.616699999999851e-05, 7.586099999999998e-05, 7.594500000000087e-05, 7.556900000000102e-05, 7.59579999999975e-05, 7.55830000000006e-05, 7.559700000000016e-05, 7.641600000000276e-05, 7.601399999999925e-05, 7.636100000000048e-05, 7.563899999999887e-05, 7.565299999999844e-05, 7.615299999999894e-05, 7.613899999999937e-05, 7.637500000000005e-05, 7.622300000000026e-05, 7.579199999999814e-05, 7.581900000000127e-05, 7.588899999999912e-05, 7.609700000000066e-05, 7.599999999999968e-05, 7.642999999999886e-05, 7.565299999999844e-05, 7.572200000000029e-05, 7.615300000000241e-05, 7.601400000000272e-05, 7.615300000000241e-05, 7.551399999999875e-05, 7.558400000000007e-05, 7.60969999999972e-05, 7.577800000000204e-05, 7.579099999999866e-05, 7.62639999999995e-05, 7.624999999999993e-05, 7.622199999999732e-05, 7.58050000000017e-05, 7.606899999999805e-05, 7.565299999999844e-05, 7.594500000000087e-05, 7.620800000000122e-05, 7.579199999999814e-05, 7.643099999999833e-05, 7.558400000000007e-05, 7.608400000000057e-05, 7.613899999999937e-05, 7.552800000000179e-05, 7.580499999999823e-05]</msg>
<status status="PASS" starttime="20201030 10:59:43.719" endtime="20201030 10:59:43.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.714" endtime="20201030 10:59:43.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:43.725" endtime="20201030 10:59:43.744"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.724" endtime="20201030 10:59:43.745"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.722" endtime="20201030 10:59:43.745"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.351" endtime="20201030 10:59:43.746"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.350" endtime="20201030 10:59:43.746"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.754" endtime="20201030 10:59:43.776"></status>
</kw>
<msg timestamp="20201030 10:59:43.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:43.753" endtime="20201030 10:59:43.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:43.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:43.777" endtime="20201030 10:59:43.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.780" endtime="20201030 10:59:43.781"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.750" endtime="20201030 10:59:43.782"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.748" endtime="20201030 10:59:43.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:43.789" endtime="20201030 10:59:44.074"></status>
</kw>
<msg timestamp="20201030 10:59:44.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022691972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022768681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:43.787" endtime="20201030 10:59:44.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022691972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022768681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:44.079" endtime="20201030 10:59:44.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.087" endtime="20201030 10:59:44.088"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.785" endtime="20201030 10:59:44.089"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.783" endtime="20201030 10:59:44.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:44.093" level="INFO">${RESULT} = [{'diff': 7.670899999999772e-05}, {'diff': 7.715200000000047e-05}, {'diff': 7.715200000000047e-05}, {'diff': 7.670799999999825e-05}, {'diff': 7.7457999999999e-05}, {'diff': 7.701400000000025e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:44.090" endtime="20201030 10:59:44.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:44.097" level="INFO">${ACCURACY} = {'diff': [7.670899999999772e-05, 7.715200000000047e-05, 7.715200000000047e-05, 7.670799999999825e-05, 7.7457999999999e-05, 7.701400000000025e-05, 7.688900000000012e-05, 7.679099999999967e-05, 7.691699...</msg>
<status status="PASS" starttime="20201030 10:59:44.094" endtime="20201030 10:59:44.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.102" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 10:59:44.101" endtime="20201030 10:59:44.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.104" level="INFO">VALUE: [7.670899999999772e-05, 7.715200000000047e-05, 7.715200000000047e-05, 7.670799999999825e-05, 7.7457999999999e-05, 7.701400000000025e-05, 7.688900000000012e-05, 7.679099999999967e-05, 7.691699999999926e-05, 7.701400000000025e-05, 7.672300000000076e-05, 7.650000000000018e-05, 7.679200000000261e-05, 7.65830000000016e-05, 7.651300000000028e-05, 7.673599999999739e-05, 7.687500000000055e-05, 7.672200000000129e-05, 7.647200000000104e-05, 7.647200000000104e-05, 7.691699999999926e-05, 7.659700000000116e-05, 7.695899999999797e-05, 7.680599999999871e-05, 7.74310000000028e-05, 7.69449999999984e-05, 7.724999999999746e-05, 7.715299999999994e-05, 7.719399999999918e-05, 7.692999999999936e-05, 7.706899999999905e-05, 7.736100000000148e-05, 7.701400000000025e-05, 7.715299999999994e-05, 7.695800000000197e-05, 7.69449999999984e-05, 7.69029999999997e-05, 7.658400000000107e-05, 7.679199999999914e-05, 7.673599999999739e-05, 7.672200000000129e-05, 7.702700000000035e-05, 7.717999999999961e-05, 7.744399999999943e-05, 7.656900000000202e-05, 7.715299999999994e-05, 7.656900000000202e-05, 7.65830000000016e-05, 7.651399999999975e-05, 7.680600000000218e-05]</msg>
<status status="PASS" starttime="20201030 10:59:44.103" endtime="20201030 10:59:44.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.098" endtime="20201030 10:59:44.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:44.110" endtime="20201030 10:59:44.129"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.108" endtime="20201030 10:59:44.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.107" endtime="20201030 10:59:44.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.747" endtime="20201030 10:59:44.130"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:43.746" endtime="20201030 10:59:44.130"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.139" endtime="20201030 10:59:44.158"></status>
</kw>
<msg timestamp="20201030 10:59:44.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:44.138" endtime="20201030 10:59:44.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:44.159" endtime="20201030 10:59:44.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.162" endtime="20201030 10:59:44.163"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.135" endtime="20201030 10:59:44.164"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.133" endtime="20201030 10:59:44.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.170" endtime="20201030 10:59:44.455"></status>
</kw>
<msg timestamp="20201030 10:59:44.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020640556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020718556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:44.169" endtime="20201030 10:59:44.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020640556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020718556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:44.459" endtime="20201030 10:59:44.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.467" endtime="20201030 10:59:44.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.166" endtime="20201030 10:59:44.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.165" endtime="20201030 10:59:44.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:44.474" level="INFO">${RESULT} = [{'diff': 7.799999999999821e-05}, {'diff': 7.815200000000147e-05}, {'diff': 7.843000000000086e-05}, {'diff': 7.784699999999894e-05}, {'diff': 7.837499999999858e-05}, {'diff': 7.7457999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:44.470" endtime="20201030 10:59:44.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:44.478" level="INFO">${ACCURACY} = {'diff': [7.799999999999821e-05, 7.815200000000147e-05, 7.843000000000086e-05, 7.784699999999894e-05, 7.837499999999858e-05, 7.7457999999999e-05, 7.763900000000087e-05, 7.788900000000112e-05, 7.770799...</msg>
<status status="PASS" starttime="20201030 10:59:44.475" endtime="20201030 10:59:44.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.483" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 10:59:44.482" endtime="20201030 10:59:44.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.485" level="INFO">VALUE: [7.799999999999821e-05, 7.815200000000147e-05, 7.843000000000086e-05, 7.784699999999894e-05, 7.837499999999858e-05, 7.7457999999999e-05, 7.763900000000087e-05, 7.788900000000112e-05, 7.770799999999925e-05, 7.75830000000026e-05, 7.772200000000229e-05, 7.79449999999994e-05, 7.82229999999988e-05, 7.816599999999757e-05, 7.829199999999717e-05, 7.844400000000043e-05, 7.801399999999778e-05, 7.79579999999995e-05, 7.842999999999739e-05, 7.815299999999747e-05, 7.808299999999962e-05, 7.75969999999987e-05, 7.84449999999999e-05, 7.788900000000112e-05, 7.801399999999778e-05, 7.845899999999947e-05, 7.834799999999892e-05, 7.78189999999998e-05, 7.844400000000043e-05, 7.765200000000097e-05, 7.751400000000075e-05, 7.829100000000117e-05, 7.80969999999992e-05, 7.751400000000075e-05, 7.779200000000014e-05, 7.84449999999999e-05, 7.773600000000186e-05, 7.801400000000125e-05, 7.78189999999998e-05, 7.786099999999851e-05, 7.75969999999987e-05, 7.747200000000204e-05, 7.827699999999813e-05, 7.765200000000097e-05, 7.799999999999821e-05, 7.792999999999689e-05, 7.779200000000014e-05, 7.758299999999912e-05, 7.823599999999889e-05, 7.808299999999962e-05]</msg>
<status status="PASS" starttime="20201030 10:59:44.484" endtime="20201030 10:59:44.486"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.479" endtime="20201030 10:59:44.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:44.490" endtime="20201030 10:59:44.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.489" endtime="20201030 10:59:44.510"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.488" endtime="20201030 10:59:44.511"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.131" endtime="20201030 10:59:44.511"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.131" endtime="20201030 10:59:44.511"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.520" endtime="20201030 10:59:44.538"></status>
</kw>
<msg timestamp="20201030 10:59:44.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:44.518" endtime="20201030 10:59:44.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:44.539" endtime="20201030 10:59:44.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.542" endtime="20201030 10:59:44.543"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.515" endtime="20201030 10:59:44.544"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.513" endtime="20201030 10:59:44.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.551" endtime="20201030 10:59:44.837"></status>
</kw>
<msg timestamp="20201030 10:59:44.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019623403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:44.549" endtime="20201030 10:59:44.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019623403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:44.841" endtime="20201030 10:59:44.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.849" endtime="20201030 10:59:44.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.547" endtime="20201030 10:59:44.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.545" endtime="20201030 10:59:44.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:44.856" level="INFO">${RESULT} = [{'diff': 7.900000000000268e-05}, {'diff': 7.886099999999951e-05}, {'diff': 7.879200000000114e-05}, {'diff': 7.907000000000053e-05}, {'diff': 7.923599999999989e-05}, {'diff': 7.855600000000046e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:44.853" endtime="20201030 10:59:44.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:44.860" level="INFO">${ACCURACY} = {'diff': [7.900000000000268e-05, 7.886099999999951e-05, 7.879200000000114e-05, 7.907000000000053e-05, 7.923599999999989e-05, 7.855600000000046e-05, 7.858300000000012e-05, 7.855600000000046e-05, 7.9292...</msg>
<status status="PASS" starttime="20201030 10:59:44.857" endtime="20201030 10:59:44.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.864" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 10:59:44.863" endtime="20201030 10:59:44.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.867" level="INFO">VALUE: [7.900000000000268e-05, 7.886099999999951e-05, 7.879200000000114e-05, 7.907000000000053e-05, 7.923599999999989e-05, 7.855600000000046e-05, 7.858300000000012e-05, 7.855600000000046e-05, 7.929200000000164e-05, 7.851400000000175e-05, 7.929199999999817e-05, 7.877699999999863e-05, 7.936100000000001e-05, 7.876300000000253e-05, 7.944499999999743e-05, 7.879200000000114e-05, 7.92229999999998e-05, 7.850000000000218e-05, 7.865200000000197e-05, 7.856900000000056e-05, 7.850000000000218e-05, 7.937499999999958e-05, 7.847199999999957e-05, 7.866699999999754e-05, 7.888899999999865e-05, 7.85839999999996e-05, 7.865299999999797e-05, 7.916700000000151e-05, 7.930600000000121e-05, 7.92229999999998e-05, 7.898599999999964e-05, 7.923599999999989e-05, 7.936100000000001e-05, 7.901399999999878e-05, 7.902799999999835e-05, 7.944400000000143e-05, 7.879200000000114e-05, 7.908300000000063e-05, 7.893100000000083e-05, 7.886099999999951e-05, 7.870899999999972e-05, 7.873700000000233e-05, 7.85839999999996e-05, 7.873599999999939e-05, 7.8764000000002e-05, 7.899999999999921e-05, 7.884700000000341e-05, 7.883300000000037e-05, 7.900000000000268e-05, 7.886099999999951e-05]</msg>
<status status="PASS" starttime="20201030 10:59:44.865" endtime="20201030 10:59:44.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.861" endtime="20201030 10:59:44.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:44.871" endtime="20201030 10:59:44.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.870" endtime="20201030 10:59:44.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.869" endtime="20201030 10:59:44.892"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.512" endtime="20201030 10:59:44.892"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.511" endtime="20201030 10:59:44.892"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.901" endtime="20201030 10:59:44.920"></status>
</kw>
<msg timestamp="20201030 10:59:44.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:44.899" endtime="20201030 10:59:44.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:44.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:44.921" endtime="20201030 10:59:44.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.924" endtime="20201030 10:59:44.925"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.897" endtime="20201030 10:59:44.926"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.895" endtime="20201030 10:59:44.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:44.933" endtime="20201030 10:59:45.218"></status>
</kw>
<msg timestamp="20201030 10:59:45.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021389222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021468819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:44.931" endtime="20201030 10:59:45.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021389222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021468819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:45.222" endtime="20201030 10:59:45.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.230" endtime="20201030 10:59:45.232"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.929" endtime="20201030 10:59:45.233"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.927" endtime="20201030 10:59:45.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:45.237" level="INFO">${RESULT} = [{'diff': 7.95970000000007e-05}, {'diff': 7.958299999999766e-05}, {'diff': 7.976399999999953e-05}, {'diff': 7.951399999999928e-05}, {'diff': 8.011100000000076e-05}, {'diff': 7.966699999999854e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:45.234" endtime="20201030 10:59:45.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:45.241" level="INFO">${ACCURACY} = {'diff': [7.95970000000007e-05, 7.958299999999766e-05, 7.976399999999953e-05, 7.951399999999928e-05, 8.011100000000076e-05, 7.966699999999854e-05, 7.96389999999994e-05, 8.000000000000021e-05, 7.958300...</msg>
<status status="PASS" starttime="20201030 10:59:45.238" endtime="20201030 10:59:45.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.245" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 10:59:45.244" endtime="20201030 10:59:45.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.248" level="INFO">VALUE: [7.95970000000007e-05, 7.958299999999766e-05, 7.976399999999953e-05, 7.951399999999928e-05, 8.011100000000076e-05, 7.966699999999854e-05, 7.96389999999994e-05, 8.000000000000021e-05, 7.958300000000113e-05, 8.041700000000276e-05, 7.969399999999821e-05, 8.043100000000233e-05, 7.973600000000039e-05, 8.023599999999742e-05, 7.951399999999928e-05, 7.973600000000039e-05, 8.008300000000163e-05, 7.986099999999705e-05, 8.022200000000132e-05, 8.037499999999712e-05, 7.98329999999979e-05, 7.95970000000007e-05, 8.044499999999843e-05, 7.99450000000014e-05, 7.994499999999793e-05, 7.976399999999953e-05, 7.973600000000039e-05, 7.992999999999889e-05, 8.036100000000101e-05, 8.015299999999947e-05, 8.029200000000264e-05, 7.951399999999928e-05, 8.037500000000058e-05, 8.029199999999917e-05, 7.957000000000103e-05, 8.044499999999843e-05, 8.044499999999843e-05, 7.993100000000183e-05, 7.965299999999897e-05, 8.044399999999896e-05, 7.962499999999983e-05, 8.045799999999853e-05, 8.001399999999978e-05, 7.97779999999991e-05, 8.044400000000243e-05, 7.972200000000082e-05, 7.979199999999867e-05, 7.986100000000051e-05, 7.995900000000097e-05, 8.036099999999755e-05]</msg>
<status status="PASS" starttime="20201030 10:59:45.247" endtime="20201030 10:59:45.250"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.242" endtime="20201030 10:59:45.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:45.254" endtime="20201030 10:59:45.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.253" endtime="20201030 10:59:45.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.251" endtime="20201030 10:59:45.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.893" endtime="20201030 10:59:45.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:44.893" endtime="20201030 10:59:45.275"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.284" endtime="20201030 10:59:45.301"></status>
</kw>
<msg timestamp="20201030 10:59:45.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:45.282" endtime="20201030 10:59:45.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:45.302" endtime="20201030 10:59:45.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.305" endtime="20201030 10:59:45.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.280" endtime="20201030 10:59:45.307"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.278" endtime="20201030 10:59:45.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.314" endtime="20201030 10:59:45.599"></status>
</kw>
<msg timestamp="20201030 10:59:45.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019603875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019685153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:45.312" endtime="20201030 10:59:45.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019603875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019685153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:45.604" endtime="20201030 10:59:45.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.612" endtime="20201030 10:59:45.613"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.310" endtime="20201030 10:59:45.614"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.308" endtime="20201030 10:59:45.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:45.618" level="INFO">${RESULT} = [{'diff': 8.12780000000006e-05}, {'diff': 8.086100000000151e-05}, {'diff': 8.143099999999986e-05}, {'diff': 8.087500000000108e-05}, {'diff': 8.10979999999982e-05}, {'diff': 8.050000000000071e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:45.615" endtime="20201030 10:59:45.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:45.623" level="INFO">${ACCURACY} = {'diff': [8.12780000000006e-05, 8.086100000000151e-05, 8.143099999999986e-05, 8.087500000000108e-05, 8.10979999999982e-05, 8.050000000000071e-05, 8.122200000000232e-05, 8.12910000000007e-05, 8.0778000...</msg>
<status status="PASS" starttime="20201030 10:59:45.619" endtime="20201030 10:59:45.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.628" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 10:59:45.627" endtime="20201030 10:59:45.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.630" level="INFO">VALUE: [8.12780000000006e-05, 8.086100000000151e-05, 8.143099999999986e-05, 8.087500000000108e-05, 8.10979999999982e-05, 8.050000000000071e-05, 8.122200000000232e-05, 8.12910000000007e-05, 8.07780000000001e-05, 8.120799999999928e-05, 8.066699999999954e-05, 8.115300000000047e-05, 8.070800000000225e-05, 8.073599999999792e-05, 8.055599999999899e-05, 8.09589999999985e-05, 8.130599999999974e-05, 8.09169999999998e-05, 8.063899999999694e-05, 8.138900000000115e-05, 8.080499999999977e-05, 8.084700000000195e-05, 8.136100000000202e-05, 8.076400000000053e-05, 8.051400000000028e-05, 8.099999999999774e-05, 8.102800000000035e-05, 8.087500000000108e-05, 8.058399999999813e-05, 8.11390000000009e-05, 8.073700000000086e-05, 8.122199999999885e-05, 8.052700000000038e-05, 8.130500000000027e-05, 8.087500000000108e-05, 8.147200000000257e-05, 8.130599999999974e-05, 8.136099999999855e-05, 8.086099999999805e-05, 8.079199999999967e-05, 8.05840000000016e-05, 8.062500000000083e-05, 8.11390000000009e-05, 8.14170000000003e-05, 8.120899999999875e-05, 8.086100000000151e-05, 8.055599999999899e-05, 8.137499999999812e-05, 8.116700000000004e-05, 8.120799999999928e-05]</msg>
<status status="PASS" starttime="20201030 10:59:45.629" endtime="20201030 10:59:45.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.624" endtime="20201030 10:59:45.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:45.635" endtime="20201030 10:59:45.654"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.633" endtime="20201030 10:59:45.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.632" endtime="20201030 10:59:45.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.276" endtime="20201030 10:59:45.655"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.276" endtime="20201030 10:59:45.656"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.664" endtime="20201030 10:59:45.682"></status>
</kw>
<msg timestamp="20201030 10:59:45.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:45.663" endtime="20201030 10:59:45.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:45.683" endtime="20201030 10:59:45.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.686" endtime="20201030 10:59:45.687"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.660" endtime="20201030 10:59:45.688"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.658" endtime="20201030 10:59:45.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.695" endtime="20201030 10:59:45.981"></status>
</kw>
<msg timestamp="20201030 10:59:45.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019595708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:45.693" endtime="20201030 10:59:45.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:45.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019595708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:45.985" endtime="20201030 10:59:45.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:45.993" endtime="20201030 10:59:45.995"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.691" endtime="20201030 10:59:45.996"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.689" endtime="20201030 10:59:45.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:46.000" level="INFO">${RESULT} = [{'diff': 8.170799999999978e-05}, {'diff': 8.151400000000128e-05}, {'diff': 8.215300000000147e-05}, {'diff': 8.199999999999874e-05}, {'diff': 8.244500000000043e-05}, {'diff': 8.181999999999981e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:45.997" endtime="20201030 10:59:46.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:46.004" level="INFO">${ACCURACY} = {'diff': [8.170799999999978e-05, 8.151400000000128e-05, 8.215300000000147e-05, 8.199999999999874e-05, 8.244500000000043e-05, 8.181999999999981e-05, 8.209699999999973e-05, 8.21390000000019e-05, 8.17909...</msg>
<status status="PASS" starttime="20201030 10:59:46.001" endtime="20201030 10:59:46.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.009" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 10:59:46.008" endtime="20201030 10:59:46.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.011" level="INFO">VALUE: [8.170799999999978e-05, 8.151400000000128e-05, 8.215300000000147e-05, 8.199999999999874e-05, 8.244500000000043e-05, 8.181999999999981e-05, 8.209699999999973e-05, 8.21390000000019e-05, 8.179099999999773e-05, 8.236099999999955e-05, 8.215300000000147e-05, 8.248599999999967e-05, 8.249999999999924e-05, 8.209699999999973e-05, 8.190299999999776e-05, 8.230500000000127e-05, 8.18329999999999e-05, 8.198599999999917e-05, 8.158299999999966e-05, 8.216700000000104e-05, 8.19719999999996e-05, 8.220899999999975e-05, 8.237499999999912e-05, 8.229200000000117e-05, 8.192999999999742e-05, 8.206900000000059e-05, 8.236099999999955e-05, 8.17780000000011e-05, 8.152800000000085e-05, 8.151400000000128e-05, 8.206900000000059e-05, 8.191599999999785e-05, 8.242999999999792e-05, 8.162500000000183e-05, 8.24720000000001e-05, 8.165300000000097e-05, 8.219400000000071e-05, 8.173600000000239e-05, 8.165199999999803e-05, 8.208300000000016e-05, 8.172199999999935e-05, 8.159699999999923e-05, 8.154200000000042e-05, 8.229200000000117e-05, 8.186099999999905e-05, 8.20979999999992e-05, 8.180600000000024e-05, 8.170900000000272e-05, 8.151299999999834e-05, 8.197200000000307e-05]</msg>
<status status="PASS" starttime="20201030 10:59:46.010" endtime="20201030 10:59:46.012"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.005" endtime="20201030 10:59:46.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:46.016" endtime="20201030 10:59:46.035"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.014" endtime="20201030 10:59:46.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.013" endtime="20201030 10:59:46.036"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.657" endtime="20201030 10:59:46.037"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:45.656" endtime="20201030 10:59:46.037"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.045" endtime="20201030 10:59:46.065"></status>
</kw>
<msg timestamp="20201030 10:59:46.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:46.044" endtime="20201030 10:59:46.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:46.067" endtime="20201030 10:59:46.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.069" endtime="20201030 10:59:46.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.041" endtime="20201030 10:59:46.071"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.039" endtime="20201030 10:59:46.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.078" endtime="20201030 10:59:46.364"></status>
</kw>
<msg timestamp="20201030 10:59:46.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020561583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:46.076" endtime="20201030 10:59:46.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020561583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:46.368" endtime="20201030 10:59:46.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.376" endtime="20201030 10:59:46.378"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.074" endtime="20201030 10:59:46.378"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.072" endtime="20201030 10:59:46.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:46.383" level="INFO">${RESULT} = [{'diff': 8.333399999999741e-05}, {'diff': 8.279200000000167e-05}, {'diff': 8.286100000000005e-05}, {'diff': 8.336100000000055e-05}, {'diff': 8.288900000000265e-05}, {'diff': 8.345800000000153e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:46.380" endtime="20201030 10:59:46.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:46.387" level="INFO">${ACCURACY} = {'diff': [8.333399999999741e-05, 8.279200000000167e-05, 8.286100000000005e-05, 8.336100000000055e-05, 8.288900000000265e-05, 8.345800000000153e-05, 8.269400000000121e-05, 8.324999999999999e-05, 8.2875...</msg>
<status status="PASS" starttime="20201030 10:59:46.384" endtime="20201030 10:59:46.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.391" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 10:59:46.390" endtime="20201030 10:59:46.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.394" level="INFO">VALUE: [8.333399999999741e-05, 8.279200000000167e-05, 8.286100000000005e-05, 8.336100000000055e-05, 8.288900000000265e-05, 8.345800000000153e-05, 8.269400000000121e-05, 8.324999999999999e-05, 8.287500000000309e-05, 8.336100000000055e-05, 8.273599999999992e-05, 8.301399999999931e-05, 8.26109999999998e-05, 8.258400000000013e-05, 8.322199999999738e-05, 8.294400000000146e-05, 8.329099999999923e-05, 8.284700000000048e-05, 8.304200000000192e-05, 8.341599999999935e-05, 8.287499999999962e-05, 8.31110000000003e-05, 8.308300000000116e-05, 8.341699999999883e-05, 8.338899999999969e-05, 8.26529999999985e-05, 8.322300000000032e-05, 8.273599999999992e-05, 8.294399999999799e-05, 8.308300000000116e-05, 8.345800000000153e-05, 8.322199999999738e-05, 8.340299999999926e-05, 8.288899999999919e-05, 8.279200000000167e-05, 8.266700000000154e-05, 8.280600000000124e-05, 8.284700000000048e-05, 8.294500000000093e-05, 8.322300000000032e-05, 8.302700000000288e-05, 8.334700000000098e-05, 8.345799999999806e-05, 8.329099999999923e-05, 8.337500000000012e-05, 8.27919999999982e-05, 8.306900000000159e-05, 8.294500000000093e-05, 8.344500000000143e-05, 8.286100000000005e-05]</msg>
<status status="PASS" starttime="20201030 10:59:46.392" endtime="20201030 10:59:46.395"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.388" endtime="20201030 10:59:46.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:46.399" endtime="20201030 10:59:46.419"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.398" endtime="20201030 10:59:46.419"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.397" endtime="20201030 10:59:46.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.038" endtime="20201030 10:59:46.420"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.037" endtime="20201030 10:59:46.420"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.429" endtime="20201030 10:59:46.447"></status>
</kw>
<msg timestamp="20201030 10:59:46.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:46.427" endtime="20201030 10:59:46.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:46.449" endtime="20201030 10:59:46.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.451" endtime="20201030 10:59:46.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.424" endtime="20201030 10:59:46.453"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.422" endtime="20201030 10:59:46.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.460" endtime="20201030 10:59:46.746"></status>
</kw>
<msg timestamp="20201030 10:59:46.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020501181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020585222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:46.459" endtime="20201030 10:59:46.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020501181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020585222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:46.750" endtime="20201030 10:59:46.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.758" endtime="20201030 10:59:46.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.456" endtime="20201030 10:59:46.760"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.454" endtime="20201030 10:59:46.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:46.765" level="INFO">${RESULT} = [{'diff': 8.404099999999998e-05}, {'diff': 8.436100000000155e-05}, {'diff': 8.440300000000026e-05}, {'diff': 8.401400000000031e-05}, {'diff': 8.420799999999881e-05}, {'diff': 8.430599999999927e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:46.762" endtime="20201030 10:59:46.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:46.770" level="INFO">${ACCURACY} = {'diff': [8.404099999999998e-05, 8.436100000000155e-05, 8.440300000000026e-05, 8.401400000000031e-05, 8.420799999999881e-05, 8.430599999999927e-05, 8.445899999999854e-05, 8.408400000000163e-05, 8.3931...</msg>
<status status="PASS" starttime="20201030 10:59:46.766" endtime="20201030 10:59:46.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.774" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 10:59:46.773" endtime="20201030 10:59:46.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.776" level="INFO">VALUE: [8.404099999999998e-05, 8.436100000000155e-05, 8.440300000000026e-05, 8.401400000000031e-05, 8.420799999999881e-05, 8.430599999999927e-05, 8.445899999999854e-05, 8.408400000000163e-05, 8.393100000000236e-05, 8.351300000000034e-05, 8.39590000000015e-05, 8.365200000000003e-05, 8.387500000000062e-05, 8.401400000000031e-05, 8.373600000000092e-05, 8.427800000000013e-05, 8.4153e-05, 8.447199999999863e-05, 8.351399999999981e-05, 8.363899999999994e-05, 8.445799999999906e-05, 8.394399999999899e-05, 8.38049999999993e-05, 8.365200000000003e-05, 8.387500000000062e-05, 8.362500000000037e-05, 8.437500000000112e-05, 8.397199999999813e-05, 8.39309999999989e-05, 8.377799999999963e-05, 8.35980000000007e-05, 8.358400000000113e-05, 8.388900000000019e-05, 8.386200000000052e-05, 8.436099999999808e-05, 8.41660000000001e-05, 8.392999999999942e-05, 8.351399999999981e-05, 8.409699999999826e-05, 8.351399999999981e-05, 8.408299999999869e-05, 8.41110000000013e-05, 8.430600000000274e-05, 8.400000000000074e-05, 8.387500000000062e-05, 8.427800000000013e-05, 8.438900000000069e-05, 8.43049999999998e-05, 8.408300000000216e-05, 8.379099999999973e-05]</msg>
<status status="PASS" starttime="20201030 10:59:46.775" endtime="20201030 10:59:46.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.770" endtime="20201030 10:59:46.778"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:46.781" endtime="20201030 10:59:46.801"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.780" endtime="20201030 10:59:46.801"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.779" endtime="20201030 10:59:46.802"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.421" endtime="20201030 10:59:46.802"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.420" endtime="20201030 10:59:46.802"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.811" endtime="20201030 10:59:46.828"></status>
</kw>
<msg timestamp="20201030 10:59:46.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:46.809" endtime="20201030 10:59:46.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:46.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:46.830" endtime="20201030 10:59:46.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.832" endtime="20201030 10:59:46.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.806" endtime="20201030 10:59:46.834"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.804" endtime="20201030 10:59:46.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:46.841" endtime="20201030 10:59:47.129"></status>
</kw>
<msg timestamp="20201030 10:59:47.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019528764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:46.840" endtime="20201030 10:59:47.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019528764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:47.133" endtime="20201030 10:59:47.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.142" endtime="20201030 10:59:47.143"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.837" endtime="20201030 10:59:47.144"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.835" endtime="20201030 10:59:47.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:47.148" level="INFO">${RESULT} = [{'diff': 8.516700000000058e-05}, {'diff': 8.518000000000067e-05}, {'diff': 8.506999999999959e-05}, {'diff': 8.451299999999787e-05}, {'diff': 8.536099999999908e-05}, {'diff': 8.536099999999908e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:47.145" endtime="20201030 10:59:47.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:47.152" level="INFO">${ACCURACY} = {'diff': [8.516700000000058e-05, 8.518000000000067e-05, 8.506999999999959e-05, 8.451299999999787e-05, 8.536099999999908e-05, 8.536099999999908e-05, 8.508299999999969e-05, 8.44859999999982e-05, 8.48890...</msg>
<status status="PASS" starttime="20201030 10:59:47.149" endtime="20201030 10:59:47.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.157" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 10:59:47.155" endtime="20201030 10:59:47.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.159" level="INFO">VALUE: [8.516700000000058e-05, 8.518000000000067e-05, 8.506999999999959e-05, 8.451299999999787e-05, 8.536099999999908e-05, 8.536099999999908e-05, 8.508299999999969e-05, 8.44859999999982e-05, 8.488900000000119e-05, 8.522199999999938e-05, 8.527800000000113e-05, 8.480599999999977e-05, 8.518100000000015e-05, 8.54310000000004e-05, 8.544499999999997e-05, 8.495799999999956e-05, 8.537500000000212e-05, 8.486099999999858e-05, 8.479099999999726e-05, 8.487499999999815e-05, 8.53469999999995e-05, 8.523600000000242e-05, 8.463900000000094e-05, 8.51669999999971e-05, 8.470899999999879e-05, 8.459799999999823e-05, 8.456999999999909e-05, 8.46660000000006e-05, 8.527699999999819e-05, 8.472199999999888e-05, 8.509699999999926e-05, 8.486099999999858e-05, 8.501400000000131e-05, 8.508299999999969e-05, 8.494499999999947e-05, 8.523599999999895e-05, 8.536099999999908e-05, 8.52920000000007e-05, 8.544399999999702e-05, 8.468000000000017e-05, 8.501300000000184e-05, 8.506899999999665e-05, 8.523600000000242e-05, 8.472200000000235e-05, 8.530600000000027e-05, 8.523600000000242e-05, 8.494499999999947e-05, 8.486100000000205e-05, 8.509799999999873e-05, 8.54859999999992e-05]</msg>
<status status="PASS" starttime="20201030 10:59:47.158" endtime="20201030 10:59:47.165"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.153" endtime="20201030 10:59:47.166"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:47.170" endtime="20201030 10:59:47.189"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.168" endtime="20201030 10:59:47.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.167" endtime="20201030 10:59:47.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.803" endtime="20201030 10:59:47.190"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:46.802" endtime="20201030 10:59:47.190"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.199" endtime="20201030 10:59:47.221"></status>
</kw>
<msg timestamp="20201030 10:59:47.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:47.198" endtime="20201030 10:59:47.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:47.223" endtime="20201030 10:59:47.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.225" endtime="20201030 10:59:47.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.195" endtime="20201030 10:59:47.227"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.193" endtime="20201030 10:59:47.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.234" endtime="20201030 10:59:47.519"></status>
</kw>
<msg timestamp="20201030 10:59:47.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02278425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:47.233" endtime="20201030 10:59:47.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02278425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:47.523" endtime="20201030 10:59:47.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.531" endtime="20201030 10:59:47.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.230" endtime="20201030 10:59:47.533"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.228" endtime="20201030 10:59:47.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:47.537" level="INFO">${RESULT} = [{'diff': 8.58059999999973e-05}, {'diff': 8.637499999999965e-05}, {'diff': 8.602799999999841e-05}, {'diff': 8.586099999999958e-05}, {'diff': 8.616700000000158e-05}, {'diff': 8.58189999999974e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:47.534" endtime="20201030 10:59:47.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:47.542" level="INFO">${ACCURACY} = {'diff': [8.58059999999973e-05, 8.637499999999965e-05, 8.602799999999841e-05, 8.586099999999958e-05, 8.616700000000158e-05, 8.58189999999974e-05, 8.586099999999958e-05, 8.594400000000099e-05, 8.586099...</msg>
<status status="PASS" starttime="20201030 10:59:47.538" endtime="20201030 10:59:47.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.546" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 10:59:47.545" endtime="20201030 10:59:47.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.548" level="INFO">VALUE: [8.58059999999973e-05, 8.637499999999965e-05, 8.602799999999841e-05, 8.586099999999958e-05, 8.616700000000158e-05, 8.58189999999974e-05, 8.586099999999958e-05, 8.594400000000099e-05, 8.586099999999958e-05, 8.637499999999965e-05, 8.57920000000012e-05, 8.556900000000062e-05, 8.56249999999989e-05, 8.607000000000059e-05, 8.632000000000084e-05, 8.587499999999915e-05, 8.629199999999823e-05, 8.637499999999965e-05, 8.622200000000038e-05, 8.586099999999958e-05, 8.579100000000173e-05, 8.620800000000081e-05, 8.64860000000002e-05, 8.644399999999802e-05, 8.627799999999866e-05, 8.63059999999978e-05, 8.594500000000047e-05, 8.572200000000335e-05, 8.640199999999931e-05, 8.594500000000047e-05, 8.630499999999833e-05, 8.637499999999965e-05, 8.58050000000013e-05, 8.637499999999965e-05, 8.566700000000108e-05, 8.57920000000012e-05, 8.586100000000305e-05, 8.595900000000004e-05, 8.602799999999841e-05, 8.551400000000181e-05, 8.599999999999927e-05, 8.551399999999834e-05, 8.613899999999897e-05, 8.56660000000016e-05, 8.551400000000181e-05, 8.572199999999988e-05, 8.566700000000108e-05, 8.630600000000127e-05, 8.615299999999854e-05, 8.63059999999978e-05]</msg>
<status status="PASS" starttime="20201030 10:59:47.547" endtime="20201030 10:59:47.550"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.542" endtime="20201030 10:59:47.551"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:47.554" endtime="20201030 10:59:47.573"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.553" endtime="20201030 10:59:47.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.551" endtime="20201030 10:59:47.574"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.191" endtime="20201030 10:59:47.575"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.191" endtime="20201030 10:59:47.575"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.583" endtime="20201030 10:59:47.602"></status>
</kw>
<msg timestamp="20201030 10:59:47.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:47.582" endtime="20201030 10:59:47.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:47.604" endtime="20201030 10:59:47.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.606" endtime="20201030 10:59:47.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.579" endtime="20201030 10:59:47.608"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.577" endtime="20201030 10:59:47.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.615" endtime="20201030 10:59:47.899"></status>
</kw>
<msg timestamp="20201030 10:59:47.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019576597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019663375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:47.613" endtime="20201030 10:59:47.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019576597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019663375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:47.903" endtime="20201030 10:59:47.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.911" endtime="20201030 10:59:47.913"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.611" endtime="20201030 10:59:47.914"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.609" endtime="20201030 10:59:47.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:47.918" level="INFO">${RESULT} = [{'diff': 8.677799999999916e-05}, {'diff': 8.645800000000106e-05}, {'diff': 8.658300000000119e-05}, {'diff': 8.729199999999923e-05}, {'diff': 8.737500000000065e-05}, {'diff': 8.713899999999997e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:47.915" endtime="20201030 10:59:47.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:47.923" level="INFO">${ACCURACY} = {'diff': [8.677799999999916e-05, 8.645800000000106e-05, 8.658300000000119e-05, 8.729199999999923e-05, 8.737500000000065e-05, 8.713899999999997e-05, 8.665299999999904e-05, 8.651399999999934e-05, 8.7430...</msg>
<status status="PASS" starttime="20201030 10:59:47.919" endtime="20201030 10:59:47.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.927" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 10:59:47.926" endtime="20201030 10:59:47.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.930" level="INFO">VALUE: [8.677799999999916e-05, 8.645800000000106e-05, 8.658300000000119e-05, 8.729199999999923e-05, 8.737500000000065e-05, 8.713899999999997e-05, 8.665299999999904e-05, 8.651399999999934e-05, 8.743000000000292e-05, 8.736100000000108e-05, 8.737500000000065e-05, 8.700000000000027e-05, 8.649999999999977e-05, 8.673600000000045e-05, 8.666700000000208e-05, 8.718099999999868e-05, 8.686099999999711e-05, 8.744500000000197e-05, 8.741699999999936e-05, 8.656900000000162e-05, 8.708299999999822e-05, 8.708300000000169e-05, 8.729099999999976e-05, 8.643000000000192e-05, 8.745799999999859e-05, 8.66669999999986e-05, 8.656999999999762e-05, 8.741700000000283e-05, 8.737499999999718e-05, 8.66530000000025e-05, 8.738800000000074e-05, 8.74310000000024e-05, 8.715200000000006e-05, 8.677699999999969e-05, 8.702799999999941e-05, 8.673600000000045e-05, 8.727799999999966e-05, 8.651399999999934e-05, 8.737500000000065e-05, 8.736100000000108e-05, 8.744500000000197e-05, 8.677799999999916e-05, 8.687500000000015e-05, 8.655600000000152e-05, 8.665199999999956e-05, 8.68050000000023e-05, 8.701399999999984e-05, 8.680499999999883e-05, 8.645800000000106e-05, 8.687500000000015e-05]</msg>
<status status="PASS" starttime="20201030 10:59:47.928" endtime="20201030 10:59:47.930"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.924" endtime="20201030 10:59:47.931"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:47.934" endtime="20201030 10:59:47.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.933" endtime="20201030 10:59:47.954"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.932" endtime="20201030 10:59:47.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.576" endtime="20201030 10:59:47.955"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.575" endtime="20201030 10:59:47.955"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.964" endtime="20201030 10:59:47.983"></status>
</kw>
<msg timestamp="20201030 10:59:47.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:47.962" endtime="20201030 10:59:47.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:47.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:47.984" endtime="20201030 10:59:47.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.987" endtime="20201030 10:59:47.988"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.960" endtime="20201030 10:59:47.989"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.958" endtime="20201030 10:59:47.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:47.995" endtime="20201030 10:59:48.282"></status>
</kw>
<msg timestamp="20201030 10:59:48.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019558069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019646306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:47.994" endtime="20201030 10:59:48.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019558069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019646306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:48.287" endtime="20201030 10:59:48.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.295" endtime="20201030 10:59:48.297"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.991" endtime="20201030 10:59:48.298"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.990" endtime="20201030 10:59:48.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:48.302" level="INFO">${RESULT} = [{'diff': 8.823699999999796e-05}, {'diff': 8.758300000000219e-05}, {'diff': 8.776400000000059e-05}, {'diff': 8.792999999999995e-05}, {'diff': 8.787500000000115e-05}, {'diff': 8.791699999999986e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:48.299" endtime="20201030 10:59:48.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:48.307" level="INFO">${ACCURACY} = {'diff': [8.823699999999796e-05, 8.758300000000219e-05, 8.776400000000059e-05, 8.792999999999995e-05, 8.787500000000115e-05, 8.791699999999986e-05, 8.759700000000176e-05, 8.754199999999948e-05, 8.7722...</msg>
<status status="PASS" starttime="20201030 10:59:48.303" endtime="20201030 10:59:48.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.311" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 10:59:48.310" endtime="20201030 10:59:48.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.313" level="INFO">VALUE: [8.823699999999796e-05, 8.758300000000219e-05, 8.776400000000059e-05, 8.792999999999995e-05, 8.787500000000115e-05, 8.791699999999986e-05, 8.759700000000176e-05, 8.754199999999948e-05, 8.772200000000188e-05, 8.783400000000191e-05, 8.756999999999862e-05, 8.823700000000143e-05, 8.843099999999993e-05, 8.816600000000063e-05, 8.758299999999872e-05, 8.765200000000056e-05, 8.758299999999872e-05, 8.779199999999973e-05, 8.837500000000165e-05, 8.829199999999676e-05, 8.844400000000002e-05, 8.822199999999891e-05, 8.843099999999993e-05, 8.809699999999879e-05, 8.775000000000102e-05, 8.802700000000094e-05, 8.819399999999977e-05, 8.788900000000072e-05, 8.838900000000122e-05, 8.834699999999904e-05, 8.83059999999998e-05, 8.78059999999993e-05, 8.793099999999943e-05, 8.807000000000259e-05, 8.815300000000054e-05, 8.83189999999999e-05, 8.777800000000016e-05, 8.822199999999891e-05, 8.81519999999976e-05, 8.844400000000002e-05, 8.779199999999973e-05, 8.788899999999725e-05, 8.819499999999925e-05, 8.83059999999998e-05, 8.76120000000008e-05, 8.779100000000026e-05, 8.823700000000143e-05, 8.822300000000186e-05, 8.776400000000059e-05, 8.801400000000084e-05]</msg>
<status status="PASS" starttime="20201030 10:59:48.312" endtime="20201030 10:59:48.314"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.307" endtime="20201030 10:59:48.315"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:48.318" endtime="20201030 10:59:48.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.317" endtime="20201030 10:59:48.338"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.316" endtime="20201030 10:59:48.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.956" endtime="20201030 10:59:48.339"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:47.955" endtime="20201030 10:59:48.339"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.348" endtime="20201030 10:59:48.367"></status>
</kw>
<msg timestamp="20201030 10:59:48.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:48.346" endtime="20201030 10:59:48.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:48.369" endtime="20201030 10:59:48.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.371" endtime="20201030 10:59:48.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.344" endtime="20201030 10:59:48.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.342" endtime="20201030 10:59:48.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.380" endtime="20201030 10:59:48.666"></status>
</kw>
<msg timestamp="20201030 10:59:48.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020548667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020638, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:48.378" endtime="20201030 10:59:48.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020548667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020638, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:48.670" endtime="20201030 10:59:48.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.678" endtime="20201030 10:59:48.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.376" endtime="20201030 10:59:48.680"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.374" endtime="20201030 10:59:48.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:48.684" level="INFO">${RESULT} = [{'diff': 8.933300000000047e-05}, {'diff': 8.915300000000154e-05}, {'diff': 8.865300000000104e-05}, {'diff': 8.923599999999948e-05}, {'diff': 8.8945e-05}, {'diff': 8.865300000000104e-05}, {'diff': 8.8...</msg>
<status status="PASS" starttime="20201030 10:59:48.681" endtime="20201030 10:59:48.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:48.688" level="INFO">${ACCURACY} = {'diff': [8.933300000000047e-05, 8.915300000000154e-05, 8.865300000000104e-05, 8.923599999999948e-05, 8.8945e-05, 8.865300000000104e-05, 8.883299999999997e-05, 8.894400000000052e-05, 8.940199999999884...</msg>
<status status="PASS" starttime="20201030 10:59:48.685" endtime="20201030 10:59:48.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.693" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 10:59:48.692" endtime="20201030 10:59:48.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.695" level="INFO">VALUE: [8.933300000000047e-05, 8.915300000000154e-05, 8.865300000000104e-05, 8.923599999999948e-05, 8.8945e-05, 8.865300000000104e-05, 8.883299999999997e-05, 8.894400000000052e-05, 8.940199999999884e-05, 8.858300000000319e-05, 8.872199999999941e-05, 8.886100000000258e-05, 8.909699999999979e-05, 8.879200000000073e-05, 8.858399999999919e-05, 8.887499999999868e-05, 8.901400000000184e-05, 8.863900000000147e-05, 8.936099999999961e-05, 8.86519999999981e-05, 8.861100000000233e-05, 8.904200000000098e-05, 8.877799999999769e-05, 8.870799999999984e-05, 8.907000000000012e-05, 8.879200000000073e-05, 8.929200000000123e-05, 8.865299999999757e-05, 8.943100000000093e-05, 8.930500000000133e-05, 8.877699999999822e-05, 8.915200000000206e-05, 8.901399999999837e-05, 8.877800000000116e-05, 8.863900000000147e-05, 8.858299999999972e-05, 8.873599999999898e-05, 8.909699999999979e-05, 8.922199999999991e-05, 8.877799999999769e-05, 8.915300000000154e-05, 8.923600000000295e-05, 8.880500000000083e-05, 8.887500000000215e-05, 8.856900000000015e-05, 8.856900000000015e-05, 8.908300000000022e-05, 8.927800000000166e-05, 8.851400000000134e-05, 8.863900000000147e-05]</msg>
<status status="PASS" starttime="20201030 10:59:48.694" endtime="20201030 10:59:48.697"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.689" endtime="20201030 10:59:48.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:48.701" endtime="20201030 10:59:48.720"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.700" endtime="20201030 10:59:48.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.698" endtime="20201030 10:59:48.721"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.340" endtime="20201030 10:59:48.722"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.339" endtime="20201030 10:59:48.722"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.730" endtime="20201030 10:59:48.749"></status>
</kw>
<msg timestamp="20201030 10:59:48.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:48.729" endtime="20201030 10:59:48.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:48.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:48.750" endtime="20201030 10:59:48.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.752" endtime="20201030 10:59:48.754"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.726" endtime="20201030 10:59:48.755"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.724" endtime="20201030 10:59:48.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:48.761" endtime="20201030 10:59:49.047"></status>
</kw>
<msg timestamp="20201030 10:59:49.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019689264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:48.760" endtime="20201030 10:59:49.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019689264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:49.051" endtime="20201030 10:59:49.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.060" endtime="20201030 10:59:49.061"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.757" endtime="20201030 10:59:49.062"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.756" endtime="20201030 10:59:49.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:49.066" level="INFO">${RESULT} = [{'diff': 8.998600000000023e-05}, {'diff': 8.972200000000041e-05}, {'diff': 9.008400000000069e-05}, {'diff': 8.979199999999826e-05}, {'diff': 8.96519999999991e-05}, {'diff': 9.030499999999886e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:49.063" endtime="20201030 10:59:49.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:49.071" level="INFO">${ACCURACY} = {'diff': [8.998600000000023e-05, 8.972200000000041e-05, 9.008400000000069e-05, 8.979199999999826e-05, 8.96519999999991e-05, 9.030499999999886e-05, 9.034700000000104e-05, 9.001399999999937e-05, 9.00140...</msg>
<status status="PASS" starttime="20201030 10:59:49.067" endtime="20201030 10:59:49.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.075" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 10:59:49.074" endtime="20201030 10:59:49.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.078" level="INFO">VALUE: [8.998600000000023e-05, 8.972200000000041e-05, 9.008400000000069e-05, 8.979199999999826e-05, 8.96519999999991e-05, 9.030499999999886e-05, 9.034700000000104e-05, 9.001399999999937e-05, 9.001400000000284e-05, 8.987499999999968e-05, 8.973599999999998e-05, 9.030499999999886e-05, 8.968100000000118e-05, 8.993100000000143e-05, 8.988900000000272e-05, 9.043100000000193e-05, 8.966600000000213e-05, 8.970800000000084e-05, 9.044399999999855e-05, 9.006900000000165e-05, 8.972200000000041e-05, 8.955600000000105e-05, 8.988899999999925e-05, 8.954200000000148e-05, 8.990299999999882e-05, 8.987499999999968e-05, 9.038899999999975e-05, 9.009700000000079e-05, 8.94999999999993e-05, 9.012499999999993e-05, 9.008300000000122e-05, 9.04450000000015e-05, 8.98190000000014e-05, 8.998600000000023e-05, 8.984700000000054e-05, 9.037499999999671e-05, 8.982000000000087e-05, 9.043099999999846e-05, 9.025000000000005e-05, 9.020900000000082e-05, 8.988899999999925e-05, 9.040299999999932e-05, 9.030500000000233e-05, 9.030500000000233e-05, 8.979200000000173e-05, 8.998600000000023e-05, 8.979100000000226e-05, 8.966699999999814e-05, 9.022200000000091e-05, 8.982000000000087e-05]</msg>
<status status="PASS" starttime="20201030 10:59:49.077" endtime="20201030 10:59:49.079"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.072" endtime="20201030 10:59:49.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:49.083" endtime="20201030 10:59:49.102"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.081" endtime="20201030 10:59:49.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.080" endtime="20201030 10:59:49.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.723" endtime="20201030 10:59:49.103"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:48.722" endtime="20201030 10:59:49.103"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.112" endtime="20201030 10:59:49.130"></status>
</kw>
<msg timestamp="20201030 10:59:49.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:49.111" endtime="20201030 10:59:49.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:49.132" endtime="20201030 10:59:49.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.134" endtime="20201030 10:59:49.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.108" endtime="20201030 10:59:49.136"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.106" endtime="20201030 10:59:49.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.143" endtime="20201030 10:59:49.429"></status>
</kw>
<msg timestamp="20201030 10:59:49.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0200995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020190569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:59:49.142" endtime="20201030 10:59:49.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0200995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020190569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 10:59:49.433" endtime="20201030 10:59:49.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.441" endtime="20201030 10:59:49.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.139" endtime="20201030 10:59:49.443"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.137" endtime="20201030 10:59:49.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:49.448" level="INFO">${RESULT} = [{'diff': 9.106899999999918e-05}, {'diff': 9.145799999999912e-05}, {'diff': 9.072200000000141e-05}, {'diff': 9.14719999999987e-05}, {'diff': 9.05000000000003e-05}, {'diff': 9.104199999999951e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:49.444" endtime="20201030 10:59:49.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:49.452" level="INFO">${ACCURACY} = {'diff': [9.106899999999918e-05, 9.145799999999912e-05, 9.072200000000141e-05, 9.14719999999987e-05, 9.05000000000003e-05, 9.104199999999951e-05, 9.080500000000283e-05, 9.136099999999814e-05, 9.144499...</msg>
<status status="PASS" starttime="20201030 10:59:49.449" endtime="20201030 10:59:49.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.456" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 10:59:49.455" endtime="20201030 10:59:49.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.459" level="INFO">VALUE: [9.106899999999918e-05, 9.145799999999912e-05, 9.072200000000141e-05, 9.14719999999987e-05, 9.05000000000003e-05, 9.104199999999951e-05, 9.080500000000283e-05, 9.136099999999814e-05, 9.144499999999903e-05, 9.051399999999987e-05, 9.070900000000132e-05, 9.130499999999986e-05, 9.115199999999712e-05, 9.105499999999961e-05, 9.115300000000007e-05, 9.144399999999955e-05, 9.055600000000205e-05, 9.083399999999797e-05, 9.143099999999946e-05, 9.079199999999926e-05, 9.115300000000007e-05, 9.088900000000025e-05, 9.087500000000068e-05, 9.058299999999825e-05, 9.061100000000086e-05, 9.101400000000037e-05, 9.051399999999987e-05, 9.079199999999926e-05, 9.061100000000086e-05, 9.088900000000025e-05, 9.116699999999964e-05, 9.070900000000132e-05, 9.137499999999771e-05, 9.052699999999997e-05, 9.097199999999819e-05, 9.141600000000041e-05, 9.109699999999832e-05, 9.087500000000068e-05, 9.051400000000334e-05, 9.122199999999844e-05, 9.087499999999721e-05, 9.137499999999771e-05, 9.051399999999987e-05, 9.144499999999903e-05, 9.106999999999865e-05, 9.108299999999875e-05, 9.075000000000055e-05, 9.072199999999794e-05, 9.136099999999814e-05, 9.116699999999964e-05]</msg>
<status status="PASS" starttime="20201030 10:59:49.457" endtime="20201030 10:59:49.459"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.453" endtime="20201030 10:59:49.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:49.463" endtime="20201030 10:59:49.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.462" endtime="20201030 10:59:49.483"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.461" endtime="20201030 10:59:49.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.104" endtime="20201030 10:59:49.484"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.104" endtime="20201030 10:59:49.484"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.493" endtime="20201030 10:59:49.514"></status>
</kw>
<msg timestamp="20201030 10:59:49.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:49.491" endtime="20201030 10:59:49.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:49.515" endtime="20201030 10:59:49.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.518" endtime="20201030 10:59:49.519"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.489" endtime="20201030 10:59:49.520"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.487" endtime="20201030 10:59:49.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.526" endtime="20201030 10:59:49.812"></status>
</kw>
<msg timestamp="20201030 10:59:49.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021081903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021173569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:49.525" endtime="20201030 10:59:49.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021081903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021173569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:49.816" endtime="20201030 10:59:49.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.824" endtime="20201030 10:59:49.826"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.522" endtime="20201030 10:59:49.827"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.521" endtime="20201030 10:59:49.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:49.831" level="INFO">${RESULT} = [{'diff': 9.166600000000066e-05}, {'diff': 9.194400000000005e-05}, {'diff': 9.168000000000023e-05}, {'diff': 9.177799999999722e-05}, {'diff': 9.177800000000069e-05}, {'diff': 9.195799999999962e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:49.828" endtime="20201030 10:59:49.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:49.835" level="INFO">${ACCURACY} = {'diff': [9.166600000000066e-05, 9.194400000000005e-05, 9.168000000000023e-05, 9.177799999999722e-05, 9.177800000000069e-05, 9.195799999999962e-05, 9.166700000000014e-05, 9.172200000000241e-05, 9.1570...</msg>
<status status="PASS" starttime="20201030 10:59:49.832" endtime="20201030 10:59:49.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.839" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 10:59:49.838" endtime="20201030 10:59:49.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.842" level="INFO">VALUE: [9.166600000000066e-05, 9.194400000000005e-05, 9.168000000000023e-05, 9.177799999999722e-05, 9.177800000000069e-05, 9.195799999999962e-05, 9.166700000000014e-05, 9.172200000000241e-05, 9.157000000000262e-05, 9.222299999999892e-05, 9.175000000000155e-05, 9.21659999999977e-05, 9.241600000000141e-05, 9.227699999999825e-05, 9.244400000000055e-05, 9.159699999999882e-05, 9.193099999999996e-05, 9.155599999999958e-05, 9.234699999999957e-05, 9.229200000000076e-05, 9.243100000000046e-05, 9.237499999999871e-05, 9.230499999999739e-05, 9.21520000000016e-05, 9.223599999999901e-05, 9.177800000000069e-05, 9.162500000000143e-05, 9.201400000000137e-05, 9.229200000000076e-05, 9.170800000000284e-05, 9.173700000000146e-05, 9.243100000000046e-05, 9.1639000000001e-05, 9.179200000000026e-05, 9.238900000000175e-05, 9.201400000000137e-05, 9.156899999999968e-05, 9.176399999999765e-05, 9.236099999999914e-05, 9.170799999999937e-05, 9.173600000000198e-05, 9.229199999999729e-05, 9.229200000000076e-05, 9.158399999999872e-05, 9.187500000000168e-05, 9.158299999999925e-05, 9.211100000000236e-05, 9.172200000000241e-05, 9.195799999999962e-05, 9.155500000000011e-05]</msg>
<status status="PASS" starttime="20201030 10:59:49.840" endtime="20201030 10:59:49.843"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.836" endtime="20201030 10:59:49.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:49.848" endtime="20201030 10:59:49.867"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.846" endtime="20201030 10:59:49.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.845" endtime="20201030 10:59:49.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.485" endtime="20201030 10:59:49.868"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.485" endtime="20201030 10:59:49.868"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.877" endtime="20201030 10:59:49.895"></status>
</kw>
<msg timestamp="20201030 10:59:49.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:49.875" endtime="20201030 10:59:49.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:49.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:49.897" endtime="20201030 10:59:49.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.899" endtime="20201030 10:59:49.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.873" endtime="20201030 10:59:49.901"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.871" endtime="20201030 10:59:49.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:49.908" endtime="20201030 10:59:50.193"></status>
</kw>
<msg timestamp="20201030 10:59:50.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019444014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019536764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:49.907" endtime="20201030 10:59:50.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019444014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019536764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:50.198" endtime="20201030 10:59:50.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.206" endtime="20201030 10:59:50.207"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.904" endtime="20201030 10:59:50.208"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.902" endtime="20201030 10:59:50.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:50.212" level="INFO">${RESULT} = [{'diff': 9.275000000000255e-05}, {'diff': 9.252799999999797e-05}, {'diff': 9.344500000000103e-05}, {'diff': 9.330600000000133e-05}, {'diff': 9.279100000000179e-05}, {'diff': 9.284700000000007e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:50.209" endtime="20201030 10:59:50.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:50.217" level="INFO">${ACCURACY} = {'diff': [9.275000000000255e-05, 9.252799999999797e-05, 9.344500000000103e-05, 9.330600000000133e-05, 9.279100000000179e-05, 9.284700000000007e-05, 9.315300000000207e-05, 9.258300000000025e-05, 9.2667...</msg>
<status status="PASS" starttime="20201030 10:59:50.213" endtime="20201030 10:59:50.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.222" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 10:59:50.221" endtime="20201030 10:59:50.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.224" level="INFO">VALUE: [9.275000000000255e-05, 9.252799999999797e-05, 9.344500000000103e-05, 9.330600000000133e-05, 9.279100000000179e-05, 9.284700000000007e-05, 9.315300000000207e-05, 9.258300000000025e-05, 9.266700000000114e-05, 9.273599999999951e-05, 9.272199999999994e-05, 9.322200000000044e-05, 9.272199999999994e-05, 9.273699999999899e-05, 9.273699999999899e-05, 9.258300000000025e-05, 9.308300000000075e-05, 9.334700000000057e-05, 9.337499999999971e-05, 9.329200000000176e-05, 9.266699999999767e-05, 9.256900000000068e-05, 9.308300000000075e-05, 9.25139999999984e-05, 9.26529999999981e-05, 9.344500000000103e-05, 9.277799999999822e-05, 9.344399999999808e-05, 9.252799999999797e-05, 9.334700000000057e-05, 9.313899999999903e-05, 9.249999999999883e-05, 9.322200000000044e-05, 9.337500000000318e-05, 9.28200000000004e-05, 9.270899999999985e-05, 9.25139999999984e-05, 9.258399999999972e-05, 9.258300000000025e-05, 9.259699999999982e-05, 9.336100000000014e-05, 9.323600000000001e-05, 9.31529999999986e-05, 9.277799999999822e-05, 9.320800000000087e-05, 9.34590000000006e-05, 9.323600000000001e-05, 9.323700000000296e-05, 9.31520000000026e-05, 9.293099999999749e-05]</msg>
<status status="PASS" starttime="20201030 10:59:50.223" endtime="20201030 10:59:50.225"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.218" endtime="20201030 10:59:50.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:50.229" endtime="20201030 10:59:50.248"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.227" endtime="20201030 10:59:50.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.226" endtime="20201030 10:59:50.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.869" endtime="20201030 10:59:50.249"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:49.869" endtime="20201030 10:59:50.250"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.258" endtime="20201030 10:59:50.276"></status>
</kw>
<msg timestamp="20201030 10:59:50.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:50.257" endtime="20201030 10:59:50.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:50.278" endtime="20201030 10:59:50.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.280" endtime="20201030 10:59:50.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.254" endtime="20201030 10:59:50.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.252" endtime="20201030 10:59:50.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.289" endtime="20201030 10:59:50.576"></status>
</kw>
<msg timestamp="20201030 10:59:50.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019501806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019595792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:50.288" endtime="20201030 10:59:50.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019501806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019595792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:50.580" endtime="20201030 10:59:50.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.588" endtime="20201030 10:59:50.590"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.285" endtime="20201030 10:59:50.590"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.283" endtime="20201030 10:59:50.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:50.595" level="INFO">${RESULT} = [{'diff': 9.398600000000076e-05}, {'diff': 9.441700000000289e-05}, {'diff': 9.363899999999953e-05}, {'diff': 9.365199999999962e-05}, {'diff': 9.40139999999999e-05}, {'diff': 9.44720000000017e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:50.592" endtime="20201030 10:59:50.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:50.599" level="INFO">${ACCURACY} = {'diff': [9.398600000000076e-05, 9.441700000000289e-05, 9.363899999999953e-05, 9.365199999999962e-05, 9.40139999999999e-05, 9.44720000000017e-05, 9.426400000000015e-05, 9.379099999999932e-05, 9.393000...</msg>
<status status="PASS" starttime="20201030 10:59:50.596" endtime="20201030 10:59:50.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.603" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 10:59:50.602" endtime="20201030 10:59:50.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.606" level="INFO">VALUE: [9.398600000000076e-05, 9.441700000000289e-05, 9.363899999999953e-05, 9.365199999999962e-05, 9.40139999999999e-05, 9.44720000000017e-05, 9.426400000000015e-05, 9.379099999999932e-05, 9.393000000000248e-05, 9.375000000000008e-05, 9.408299999999828e-05, 9.386100000000064e-05, 9.409700000000132e-05, 9.41529999999996e-05, 9.393099999999849e-05, 9.415200000000012e-05, 9.394399999999858e-05, 9.40139999999999e-05, 9.437499999999724e-05, 9.387500000000021e-05, 9.35139999999994e-05, 9.372199999999747e-05, 9.349999999999983e-05, 9.408400000000122e-05, 9.35139999999994e-05, 9.429199999999929e-05, 9.373600000000051e-05, 9.444400000000255e-05, 9.366700000000214e-05, 9.39590000000011e-05, 9.392999999999901e-05, 9.373600000000051e-05, 9.348600000000026e-05, 9.40139999999999e-05, 9.402799999999947e-05, 9.431999999999843e-05, 9.373699999999999e-05, 9.356900000000168e-05, 9.442999999999951e-05, 9.352800000000244e-05, 9.381899999999846e-05, 9.437499999999724e-05, 9.442999999999951e-05, 9.402800000000294e-05, 9.370800000000137e-05, 9.427799999999972e-05, 9.409700000000132e-05, 9.36529999999991e-05, 9.379199999999879e-05, 9.365199999999962e-05]</msg>
<status status="PASS" starttime="20201030 10:59:50.604" endtime="20201030 10:59:50.607"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.600" endtime="20201030 10:59:50.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:50.611" endtime="20201030 10:59:50.630"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.609" endtime="20201030 10:59:50.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.608" endtime="20201030 10:59:50.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.251" endtime="20201030 10:59:50.631"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.250" endtime="20201030 10:59:50.631"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.640" endtime="20201030 10:59:50.661"></status>
</kw>
<msg timestamp="20201030 10:59:50.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:50.639" endtime="20201030 10:59:50.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:50.663" endtime="20201030 10:59:50.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.665" endtime="20201030 10:59:50.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.636" endtime="20201030 10:59:50.667"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.634" endtime="20201030 10:59:50.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.674" endtime="20201030 10:59:50.960"></status>
</kw>
<msg timestamp="20201030 10:59:50.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022722417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:50.672" endtime="20201030 10:59:50.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022722417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:50.964" endtime="20201030 10:59:50.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:50.972" endtime="20201030 10:59:50.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.670" endtime="20201030 10:59:50.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.668" endtime="20201030 10:59:50.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:50.978" level="INFO">${RESULT} = [{'diff': 9.488900000000078e-05}, {'diff': 9.500000000000133e-05}, {'diff': 9.51660000000007e-05}, {'diff': 9.487500000000121e-05}, {'diff': 9.480499999999989e-05}, {'diff': 9.490300000000035e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:50.975" endtime="20201030 10:59:50.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:50.982" level="INFO">${ACCURACY} = {'diff': [9.488900000000078e-05, 9.500000000000133e-05, 9.51660000000007e-05, 9.487500000000121e-05, 9.480499999999989e-05, 9.490300000000035e-05, 9.522199999999897e-05, 9.508299999999928e-05, 9.48609...</msg>
<status status="PASS" starttime="20201030 10:59:50.979" endtime="20201030 10:59:50.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.987" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 10:59:50.986" endtime="20201030 10:59:50.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:50.989" level="INFO">VALUE: [9.488900000000078e-05, 9.500000000000133e-05, 9.51660000000007e-05, 9.487500000000121e-05, 9.480499999999989e-05, 9.490300000000035e-05, 9.522199999999897e-05, 9.508299999999928e-05, 9.486099999999817e-05, 9.508300000000275e-05, 9.544499999999956e-05, 9.500000000000133e-05, 9.536099999999867e-05, 9.459699999999835e-05, 9.491600000000044e-05, 9.46530000000001e-05, 9.456899999999921e-05, 9.508300000000275e-05, 9.486100000000164e-05, 9.479199999999979e-05, 9.452799999999997e-05, 9.480599999999936e-05, 9.513900000000103e-05, 9.530599999999986e-05, 9.544499999999956e-05, 9.487500000000121e-05, 9.513899999999756e-05, 9.473599999999804e-05, 9.522199999999897e-05, 9.472199999999847e-05, 9.494500000000253e-05, 9.452799999999997e-05, 9.456999999999868e-05, 9.522199999999897e-05, 9.470899999999838e-05, 9.5333999999999e-05, 9.488900000000078e-05, 9.462500000000096e-05, 9.480499999999989e-05, 9.502800000000047e-05, 9.458299999999878e-05, 9.52079999999994e-05, 9.494499999999906e-05, 9.480599999999936e-05, 9.543099999999999e-05, 9.476399999999718e-05, 9.487499999999774e-05, 9.509699999999885e-05, 9.467999999999976e-05, 9.523600000000201e-05]</msg>
<status status="PASS" starttime="20201030 10:59:50.988" endtime="20201030 10:59:50.991"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.983" endtime="20201030 10:59:50.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:50.995" endtime="20201030 10:59:51.014"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.993" endtime="20201030 10:59:51.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.992" endtime="20201030 10:59:51.015"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.632" endtime="20201030 10:59:51.016"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:50.632" endtime="20201030 10:59:51.016"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.024" endtime="20201030 10:59:51.042"></status>
</kw>
<msg timestamp="20201030 10:59:51.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:51.023" endtime="20201030 10:59:51.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:51.044" endtime="20201030 10:59:51.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.046" endtime="20201030 10:59:51.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.020" endtime="20201030 10:59:51.048"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.018" endtime="20201030 10:59:51.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.055" endtime="20201030 10:59:51.341"></status>
</kw>
<msg timestamp="20201030 10:59:51.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019559569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019655611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:51.054" endtime="20201030 10:59:51.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019559569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019655611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:51.345" endtime="20201030 10:59:51.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.354" endtime="20201030 10:59:51.355"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.051" endtime="20201030 10:59:51.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.049" endtime="20201030 10:59:51.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:51.360" level="INFO">${RESULT} = [{'diff': 9.604200000000104e-05}, {'diff': 9.606900000000071e-05}, {'diff': 9.58469999999996e-05}, {'diff': 9.618100000000074e-05}, {'diff': 9.587499999999874e-05}, {'diff': 9.55140000000014e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 10:59:51.357" endtime="20201030 10:59:51.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:51.365" level="INFO">${ACCURACY} = {'diff': [9.604200000000104e-05, 9.606900000000071e-05, 9.58469999999996e-05, 9.618100000000074e-05, 9.587499999999874e-05, 9.55140000000014e-05, 9.644500000000056e-05, 9.608399999999975e-05, 9.558399...</msg>
<status status="PASS" starttime="20201030 10:59:51.361" endtime="20201030 10:59:51.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.369" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 10:59:51.368" endtime="20201030 10:59:51.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.372" level="INFO">VALUE: [9.604200000000104e-05, 9.606900000000071e-05, 9.58469999999996e-05, 9.618100000000074e-05, 9.587499999999874e-05, 9.55140000000014e-05, 9.644500000000056e-05, 9.608399999999975e-05, 9.558399999999925e-05, 9.609699999999985e-05, 9.58880000000023e-05, 9.551300000000193e-05, 9.65140000000024e-05, 9.601399999999843e-05, 9.629199999999782e-05, 9.643099999999752e-05, 9.559699999999935e-05, 9.593099999999702e-05, 9.641600000000194e-05, 9.645900000000013e-05, 9.579199999999732e-05, 9.599999999999886e-05, 9.62080000000004e-05, 9.616599999999823e-05, 9.549999999999836e-05, 9.60140000000019e-05, 9.643100000000099e-05, 9.627800000000172e-05, 9.644499999999709e-05, 9.590299999999788e-05, 9.56530000000011e-05, 9.558299999999978e-05, 9.593100000000049e-05, 9.572199999999947e-05, 9.615200000000212e-05, 9.622199999999997e-05, 9.608300000000028e-05, 9.583300000000003e-05, 9.566700000000067e-05, 9.615299999999813e-05, 9.620899999999988e-05, 9.601399999999843e-05, 9.593099999999702e-05, 9.580500000000089e-05, 9.587499999999874e-05, 9.558299999999978e-05, 9.640299999999838e-05, 9.587499999999874e-05, 9.618100000000074e-05, 9.551399999999793e-05]</msg>
<status status="PASS" starttime="20201030 10:59:51.371" endtime="20201030 10:59:51.373"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.366" endtime="20201030 10:59:51.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:51.377" endtime="20201030 10:59:51.396"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.375" endtime="20201030 10:59:51.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.374" endtime="20201030 10:59:51.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.017" endtime="20201030 10:59:51.397"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.016" endtime="20201030 10:59:51.398"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.406" endtime="20201030 10:59:51.424"></status>
</kw>
<msg timestamp="20201030 10:59:51.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:51.405" endtime="20201030 10:59:51.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:51.425" endtime="20201030 10:59:51.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.428" endtime="20201030 10:59:51.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.402" endtime="20201030 10:59:51.430"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.400" endtime="20201030 10:59:51.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.437" endtime="20201030 10:59:51.722"></status>
</kw>
<msg timestamp="20201030 10:59:51.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020030792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:51.435" endtime="20201030 10:59:51.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020030792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:51.726" endtime="20201030 10:59:51.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.734" endtime="20201030 10:59:51.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.433" endtime="20201030 10:59:51.736"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.431" endtime="20201030 10:59:51.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:51.741" level="INFO">${RESULT} = [{'diff': 9.662499999999949e-05}, {'diff': 9.67920000000018e-05}, {'diff': 9.683300000000103e-05}, {'diff': 9.731899999999849e-05}, {'diff': 9.694399999999812e-05}, {'diff': 9.687500000000321e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:51.738" endtime="20201030 10:59:51.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:51.745" level="INFO">${ACCURACY} = {'diff': [9.662499999999949e-05, 9.67920000000018e-05, 9.683300000000103e-05, 9.731899999999849e-05, 9.694399999999812e-05, 9.687500000000321e-05, 9.732000000000143e-05, 9.666700000000167e-05, 9.66119...</msg>
<status status="PASS" starttime="20201030 10:59:51.742" endtime="20201030 10:59:51.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.749" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 10:59:51.748" endtime="20201030 10:59:51.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.751" level="INFO">VALUE: [9.662499999999949e-05, 9.67920000000018e-05, 9.683300000000103e-05, 9.731899999999849e-05, 9.694399999999812e-05, 9.687500000000321e-05, 9.732000000000143e-05, 9.666700000000167e-05, 9.661199999999939e-05, 9.69730000000002e-05, 9.668000000000176e-05, 9.688799999999984e-05, 9.657000000000068e-05, 9.67080000000009e-05, 9.693100000000149e-05, 9.687499999999974e-05, 9.701399999999943e-05, 9.68059999999979e-05, 9.713899999999956e-05, 9.65140000000024e-05, 9.695900000000063e-05, 9.743099999999852e-05, 9.726399999999968e-05, 9.680500000000189e-05, 9.663799999999959e-05, 9.708300000000128e-05, 9.658299999999731e-05, 9.744400000000208e-05, 9.672200000000047e-05, 9.691699999999845e-05, 9.680600000000136e-05, 9.649999999999936e-05, 9.658400000000025e-05, 9.723600000000054e-05, 9.651399999999893e-05, 9.71799999999988e-05, 9.706900000000171e-05, 9.729100000000282e-05, 9.672200000000047e-05, 9.745800000000165e-05, 9.66530000000021e-05, 9.681900000000146e-05, 9.672200000000047e-05, 9.666700000000167e-05, 9.658399999999678e-05, 9.652699999999903e-05, 9.658299999999731e-05, 9.691699999999845e-05, 9.742999999999905e-05, 9.663900000000253e-05]</msg>
<status status="PASS" starttime="20201030 10:59:51.750" endtime="20201030 10:59:51.752"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.745" endtime="20201030 10:59:51.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:51.756" endtime="20201030 10:59:51.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.755" endtime="20201030 10:59:51.776"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.754" endtime="20201030 10:59:51.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.398" endtime="20201030 10:59:51.777"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.398" endtime="20201030 10:59:51.777"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.786" endtime="20201030 10:59:51.805"></status>
</kw>
<msg timestamp="20201030 10:59:51.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:51.784" endtime="20201030 10:59:51.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:51.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:51.806" endtime="20201030 10:59:51.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.809" endtime="20201030 10:59:51.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.782" endtime="20201030 10:59:51.811"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.780" endtime="20201030 10:59:51.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:51.818" endtime="20201030 10:59:52.102"></status>
</kw>
<msg timestamp="20201030 10:59:52.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020823889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020922292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:51.816" endtime="20201030 10:59:52.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020823889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020922292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:52.106" endtime="20201030 10:59:52.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.114" endtime="20201030 10:59:52.116"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.813" endtime="20201030 10:59:52.117"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.812" endtime="20201030 10:59:52.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:52.121" level="INFO">${RESULT} = [{'diff': 9.840299999999691e-05}, {'diff': 9.772300000000095e-05}, {'diff': 9.766599999999973e-05}, {'diff': 9.841600000000048e-05}, {'diff': 9.769399999999887e-05}, {'diff': 9.773600000000104e-05}, {...</msg>
<status status="PASS" starttime="20201030 10:59:52.118" endtime="20201030 10:59:52.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:52.125" level="INFO">${ACCURACY} = {'diff': [9.840299999999691e-05, 9.772300000000095e-05, 9.766599999999973e-05, 9.841600000000048e-05, 9.769399999999887e-05, 9.773600000000104e-05, 9.754200000000254e-05, 9.772200000000147e-05, 9.7750...</msg>
<status status="PASS" starttime="20201030 10:59:52.122" endtime="20201030 10:59:52.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.129" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 10:59:52.128" endtime="20201030 10:59:52.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.132" level="INFO">VALUE: [9.840299999999691e-05, 9.772300000000095e-05, 9.766599999999973e-05, 9.841600000000048e-05, 9.769399999999887e-05, 9.773600000000104e-05, 9.754200000000254e-05, 9.772200000000147e-05, 9.775000000000061e-05, 9.815300000000013e-05, 9.815299999999666e-05, 9.845899999999866e-05, 9.829199999999982e-05, 9.787499999999727e-05, 9.750000000000036e-05, 9.794399999999912e-05, 9.779100000000332e-05, 9.81799999999998e-05, 9.751399999999993e-05, 9.750000000000036e-05, 9.758400000000125e-05, 9.813900000000056e-05, 9.829199999999982e-05, 9.808399999999828e-05, 9.820799999999894e-05, 9.75279999999995e-05, 9.788900000000031e-05, 9.792999999999955e-05, 9.797199999999825e-05, 9.808299999999881e-05, 9.837500000000124e-05, 9.769500000000181e-05, 9.838900000000081e-05, 9.751300000000046e-05, 9.774999999999714e-05, 9.780499999999942e-05, 9.751399999999993e-05, 9.793099999999902e-05, 9.765299999999963e-05, 9.755599999999864e-05, 9.797299999999773e-05, 9.765299999999963e-05, 9.762500000000049e-05, 9.826400000000068e-05, 9.844499999999909e-05, 9.765200000000016e-05, 9.78609999999977e-05, 9.82080000000024e-05, 9.784699999999813e-05, 9.770799999999843e-05]</msg>
<status status="PASS" starttime="20201030 10:59:52.130" endtime="20201030 10:59:52.134"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.126" endtime="20201030 10:59:52.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:52.139" endtime="20201030 10:59:52.158"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.137" endtime="20201030 10:59:52.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.136" endtime="20201030 10:59:52.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.778" endtime="20201030 10:59:52.159"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:51.777" endtime="20201030 10:59:52.160"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.168" endtime="20201030 10:59:52.188"></status>
</kw>
<msg timestamp="20201030 10:59:52.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:52.167" endtime="20201030 10:59:52.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:52.190" endtime="20201030 10:59:52.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.192" endtime="20201030 10:59:52.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.164" endtime="20201030 10:59:52.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.162" endtime="20201030 10:59:52.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.201" endtime="20201030 10:59:52.487"></status>
</kw>
<msg timestamp="20201030 10:59:52.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020373639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020472625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:52.199" endtime="20201030 10:59:52.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020373639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020472625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:52.492" endtime="20201030 10:59:52.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.500" endtime="20201030 10:59:52.501"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.197" endtime="20201030 10:59:52.502"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.195" endtime="20201030 10:59:52.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:52.506" level="INFO">${RESULT} = [{'diff': 9.89860000000023e-05}, {'diff': 9.909699999999938e-05}, {'diff': 9.876300000000171e-05}, {'diff': 9.851400000000093e-05}, {'diff': 9.911099999999895e-05}, {'diff': 9.943000000000105e-05}, {'...</msg>
<status status="PASS" starttime="20201030 10:59:52.503" endtime="20201030 10:59:52.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:52.511" level="INFO">${ACCURACY} = {'diff': [9.89860000000023e-05, 9.909699999999938e-05, 9.876300000000171e-05, 9.851400000000093e-05, 9.911099999999895e-05, 9.943000000000105e-05, 9.9415999999998e-05, 9.877700000000128e-05, 9.8582999...</msg>
<status status="PASS" starttime="20201030 10:59:52.507" endtime="20201030 10:59:52.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.516" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 10:59:52.515" endtime="20201030 10:59:52.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.518" level="INFO">VALUE: [9.89860000000023e-05, 9.909699999999938e-05, 9.876300000000171e-05, 9.851400000000093e-05, 9.911099999999895e-05, 9.943000000000105e-05, 9.9415999999998e-05, 9.877700000000128e-05, 9.858299999999931e-05, 9.915300000000113e-05, 9.944400000000062e-05, 9.85280000000005e-05, 9.851399999999746e-05, 9.89999999999984e-05, 9.863900000000106e-05, 9.893100000000002e-05, 9.888899999999784e-05, 9.894400000000012e-05, 9.944400000000062e-05, 9.868099999999977e-05, 9.92219999999995e-05, 9.879199999999685e-05, 9.88059999999999e-05, 9.922300000000245e-05, 9.943100000000052e-05, 9.895799999999969e-05, 9.884800000000207e-05, 9.897199999999926e-05, 9.886100000000217e-05, 9.945799999999672e-05, 9.894400000000012e-05, 9.855599999999964e-05, 9.888900000000131e-05, 9.848599999999832e-05, 9.944500000000009e-05, 9.872300000000195e-05, 9.88059999999999e-05, 9.856899999999974e-05, 9.901400000000143e-05, 9.908299999999981e-05, 9.918100000000027e-05, 9.91670000000007e-05, 9.85280000000005e-05, 9.945899999999966e-05, 9.915299999999766e-05, 9.875000000000161e-05, 9.937500000000224e-05, 9.879200000000032e-05, 9.861099999999845e-05, 9.851399999999746e-05]</msg>
<status status="PASS" starttime="20201030 10:59:52.517" endtime="20201030 10:59:52.526"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.512" endtime="20201030 10:59:52.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:52.531" endtime="20201030 10:59:52.550"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.529" endtime="20201030 10:59:52.551"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.528" endtime="20201030 10:59:52.551"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.160" endtime="20201030 10:59:52.551"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.160" endtime="20201030 10:59:52.551"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.560" endtime="20201030 10:59:52.579"></status>
</kw>
<msg timestamp="20201030 10:59:52.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:52.558" endtime="20201030 10:59:52.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:52.580" endtime="20201030 10:59:52.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.583" endtime="20201030 10:59:52.584"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.556" endtime="20201030 10:59:52.585"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.554" endtime="20201030 10:59:52.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.592" endtime="20201030 10:59:52.877"></status>
</kw>
<msg timestamp="20201030 10:59:52.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019607514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:52.590" endtime="20201030 10:59:52.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019607514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:52.881" endtime="20201030 10:59:52.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.889" endtime="20201030 10:59:52.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.588" endtime="20201030 10:59:52.891"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.586" endtime="20201030 10:59:52.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:52.896" level="INFO">${RESULT} = [{'diff': 9.988899999999884e-05}, {'diff': 0.00010015299999999866}, {'diff': 9.952799999999803e-05}, {'diff': 9.963899999999859e-05}, {'diff': 9.974999999999914e-05}, {'diff': 0.00010030500000000192},...</msg>
<status status="PASS" starttime="20201030 10:59:52.892" endtime="20201030 10:59:52.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:52.900" level="INFO">${ACCURACY} = {'diff': [9.988899999999884e-05, 0.00010015299999999866, 9.952799999999803e-05, 9.963899999999859e-05, 9.974999999999914e-05, 0.00010030500000000192, 9.9722e-05, 0.00010016599999999876, 0.000100083000...</msg>
<status status="PASS" starttime="20201030 10:59:52.897" endtime="20201030 10:59:52.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.904" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 10:59:52.903" endtime="20201030 10:59:52.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.907" level="INFO">VALUE: [9.988899999999884e-05, 0.00010015299999999866, 9.952799999999803e-05, 9.963899999999859e-05, 9.974999999999914e-05, 0.00010030500000000192, 9.9722e-05, 0.00010016599999999876, 0.00010008300000000081, 0.0001002220000000005, 9.951400000000193e-05, 9.995900000000016e-05, 0.0001004999999999999, 0.00010001399999999896, 0.00010029200000000182, 9.987499999999927e-05, 0.00010042999999999858, 9.952799999999803e-05, 9.977800000000175e-05, 0.00010012499999999952, 9.994400000000112e-05, 9.995900000000016e-05, 9.976300000000271e-05, 9.973599999999957e-05, 0.00010008399999999681, 0.00010042999999999858, 9.96800000000013e-05, 9.954099999999813e-05, 0.00010048600000000033, 9.98060000000009e-05, 9.979200000000132e-05, 9.997299999999973e-05, 0.00010045899999999719, 9.979200000000132e-05, 0.00010037499999999977, 9.958399999999978e-05, 9.994400000000112e-05, 9.956900000000074e-05, 9.965199999999869e-05, 9.967999999999783e-05, 9.958300000000031e-05, 0.00010030599999999792, 0.00010001399999999896, 0.00010045900000000066, 0.00010009799999999985, 0.00010008400000000028, 9.94999999999989e-05, 9.963899999999859e-05, 0.00010031899999999802, 0.00010038899999999934]</msg>
<status status="PASS" starttime="20201030 10:59:52.905" endtime="20201030 10:59:52.907"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.900" endtime="20201030 10:59:52.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:52.911" endtime="20201030 10:59:52.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.910" endtime="20201030 10:59:52.931"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.909" endtime="20201030 10:59:52.932"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.552" endtime="20201030 10:59:52.932"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.552" endtime="20201030 10:59:52.932"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.941" endtime="20201030 10:59:52.963"></status>
</kw>
<msg timestamp="20201030 10:59:52.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:52.939" endtime="20201030 10:59:52.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:52.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:52.964" endtime="20201030 10:59:52.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.967" endtime="20201030 10:59:52.968"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.937" endtime="20201030 10:59:52.969"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.935" endtime="20201030 10:59:52.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:52.976" endtime="20201030 10:59:53.261"></status>
</kw>
<msg timestamp="20201030 10:59:53.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021468208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021569375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:52.974" endtime="20201030 10:59:53.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021468208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021569375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:53.265" endtime="20201030 10:59:53.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.273" endtime="20201030 10:59:53.274"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.972" endtime="20201030 10:59:53.275"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.970" endtime="20201030 10:59:53.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:53.279" level="INFO">${RESULT} = [{'diff': 0.00010116699999999923}, {'diff': 0.00010088899999999984}, {'diff': 0.0001008060000000019}, {'diff': 0.00010106999999999824}, {'diff': 0.00010079200000000232}, {'diff': 0.0001005840000000007...</msg>
<status status="PASS" starttime="20201030 10:59:53.276" endtime="20201030 10:59:53.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:53.283" level="INFO">${ACCURACY} = {'diff': [0.00010116699999999923, 0.00010088899999999984, 0.0001008060000000019, 0.00010106999999999824, 0.00010079200000000232, 0.00010058400000000078, 0.00010059700000000088, 0.0001005419999999986, ...</msg>
<status status="PASS" starttime="20201030 10:59:53.280" endtime="20201030 10:59:53.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.288" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 10:59:53.287" endtime="20201030 10:59:53.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.290" level="INFO">VALUE: [0.00010116699999999923, 0.00010088899999999984, 0.0001008060000000019, 0.00010106999999999824, 0.00010079200000000232, 0.00010058400000000078, 0.00010059700000000088, 0.0001005419999999986, 0.00010138900000000034, 0.00010056900000000174, 0.00010083299999999809, 0.00010108299999999834, 0.00010065299999999916, 0.00010108299999999834, 0.00010087500000000027, 0.00010144500000000209, 0.00010065299999999916, 0.00010129199999999935, 0.00010058300000000131, 0.00010065199999999969, 0.0001004999999999999, 0.0001008060000000019, 0.00010145799999999872, 0.00010122199999999804, 0.00010088899999999984, 0.00010093099999999855, 0.00010123700000000055, 0.00010108300000000181, 0.00010051299999999999, 0.00010106899999999877, 0.00010079099999999938, 0.00010138900000000034, 0.00010061100000000045, 0.0001013610000000012, 0.0001013610000000012, 0.00010066699999999873, 0.00010065300000000263, 0.00010131899999999902, 0.00010099999999999693, 0.00010070799999999797, 0.00010084700000000113, 0.00010145799999999872, 0.00010108300000000181, 0.000100722000000001, 0.00010101399999999996, 0.00010120900000000141, 0.00010129200000000282, 0.00010066699999999873, 0.0001004999999999999, 0.00010073600000000058]</msg>
<status status="PASS" starttime="20201030 10:59:53.289" endtime="20201030 10:59:53.292"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.284" endtime="20201030 10:59:53.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:53.296" endtime="20201030 10:59:53.315"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.294" endtime="20201030 10:59:53.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.293" endtime="20201030 10:59:53.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.933" endtime="20201030 10:59:53.316"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:52.932" endtime="20201030 10:59:53.316"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.325" endtime="20201030 10:59:53.344"></status>
</kw>
<msg timestamp="20201030 10:59:53.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:53.323" endtime="20201030 10:59:53.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:53.346" endtime="20201030 10:59:53.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.348" endtime="20201030 10:59:53.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.321" endtime="20201030 10:59:53.350"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.319" endtime="20201030 10:59:53.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.357" endtime="20201030 10:59:53.644"></status>
</kw>
<msg timestamp="20201030 10:59:53.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019534514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019635986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:53.356" endtime="20201030 10:59:53.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019534514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019635986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:53.648" endtime="20201030 10:59:53.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.656" endtime="20201030 10:59:53.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.353" endtime="20201030 10:59:53.658"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.351" endtime="20201030 10:59:53.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:53.662" level="INFO">${RESULT} = [{'diff': 0.00010147200000000176}, {'diff': 0.00010234700000000263}, {'diff': 0.0001015419999999996}, {'diff': 0.0001023199999999995}, {'diff': 0.00010165300000000016}, {'diff': 0.00010167999999999983...</msg>
<status status="PASS" starttime="20201030 10:59:53.659" endtime="20201030 10:59:53.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:53.667" level="INFO">${ACCURACY} = {'diff': [0.00010147200000000176, 0.00010234700000000263, 0.0001015419999999996, 0.0001023199999999995, 0.00010165300000000016, 0.00010167999999999983, 0.00010190199999999747, 0.00010229100000000088, ...</msg>
<status status="PASS" starttime="20201030 10:59:53.663" endtime="20201030 10:59:53.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.671" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 10:59:53.671" endtime="20201030 10:59:53.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.674" level="INFO">VALUE: [0.00010147200000000176, 0.00010234700000000263, 0.0001015419999999996, 0.0001023199999999995, 0.00010165300000000016, 0.00010167999999999983, 0.00010190199999999747, 0.00010229100000000088, 0.0001022359999999986, 0.00010151400000000046, 0.00010158300000000231, 0.0001015000000000009, 0.00010206999999999924, 0.00010193099999999955, 0.0001020000000000014, 0.00010187500000000127, 0.00010174999999999768, 0.00010234699999999916, 0.000101722000000002, 0.0001022359999999986, 0.0001020139999999975, 0.00010194399999999965, 0.00010199999999999793, 0.0001016809999999993, 0.00010227800000000078, 0.00010179199999999985, 0.00010179199999999985, 0.00010177700000000081, 0.00010245799999999972, 0.0001018749999999978, 0.00010194399999999965, 0.0001021809999999998, 0.0001023610000000022, 0.00010234699999999916, 0.00010237500000000177, 0.00010194499999999912, 0.00010143099999999905, 0.00010195799999999922, 0.00010165200000000069, 0.0001021939999999999, 0.00010199999999999793, 0.00010219500000000284, 0.0001016939999999994, 0.00010161099999999798, 0.00010152800000000003, 0.00010158400000000178, 0.00010231900000000002, 0.00010202700000000106, 0.00010173600000000158, 0.00010206899999999977]</msg>
<status status="PASS" starttime="20201030 10:59:53.673" endtime="20201030 10:59:53.675"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.668" endtime="20201030 10:59:53.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:53.679" endtime="20201030 10:59:53.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.677" endtime="20201030 10:59:53.699"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.676" endtime="20201030 10:59:53.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.317" endtime="20201030 10:59:53.700"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.317" endtime="20201030 10:59:53.700"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.709" endtime="20201030 10:59:53.729"></status>
</kw>
<msg timestamp="20201030 10:59:53.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:53.708" endtime="20201030 10:59:53.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:53.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:53.730" endtime="20201030 10:59:53.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.733" endtime="20201030 10:59:53.734"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.705" endtime="20201030 10:59:53.735"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.703" endtime="20201030 10:59:53.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:53.742" endtime="20201030 10:59:54.028"></status>
</kw>
<msg timestamp="20201030 10:59:54.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021053806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021156486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:53.741" endtime="20201030 10:59:54.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021053806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021156486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:54.032" endtime="20201030 10:59:54.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.041" endtime="20201030 10:59:54.042"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.738" endtime="20201030 10:59:54.043"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.736" endtime="20201030 10:59:54.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:54.047" level="INFO">${RESULT} = [{'diff': 0.00010267999999999736}, {'diff': 0.00010338900000000234}, {'diff': 0.00010308300000000034}, {'diff': 0.00010269499999999987}, {'diff': 0.00010277800000000128}, {'diff': 0.000103070000000000...</msg>
<status status="PASS" starttime="20201030 10:59:54.044" endtime="20201030 10:59:54.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:54.051" level="INFO">${ACCURACY} = {'diff': [0.00010267999999999736, 0.00010338900000000234, 0.00010308300000000034, 0.00010269499999999987, 0.00010277800000000128, 0.00010307000000000024, 0.000103416000000002, 0.00010329100000000188, ...</msg>
<status status="PASS" starttime="20201030 10:59:54.048" endtime="20201030 10:59:54.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.055" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 10:59:54.054" endtime="20201030 10:59:54.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.058" level="INFO">VALUE: [0.00010267999999999736, 0.00010338900000000234, 0.00010308300000000034, 0.00010269499999999987, 0.00010277800000000128, 0.00010307000000000024, 0.000103416000000002, 0.00010329100000000188, 0.0001025000000000019, 0.0001030139999999985, 0.00010304199999999764, 0.00010276399999999825, 0.00010315300000000166, 0.00010301400000000197, 0.00010298600000000283, 0.00010247299999999876, 0.00010251400000000147, 0.00010302699999999859, 0.00010294400000000065, 0.000102513999999998, 0.00010337500000000277, 0.0001033749999999993, 0.00010329199999999789, 0.00010288899999999837, 0.00010294500000000012, 0.00010273600000000258, 0.00010279199999999739, 0.00010301300000000249, 0.0001030420000000011, 0.00010280499999999748, 0.00010265300000000116, 0.00010306900000000077, 0.00010288900000000184, 0.0001027359999999991, 0.00010343100000000105, 0.00010337500000000277, 0.00010331899999999755, 0.00010301299999999902, 0.00010274999999999868, 0.00010329099999999841, 0.00010322200000000004, 0.0001033749999999993, 0.0001033749999999993, 0.00010290300000000141, 0.00010309799999999938, 0.00010258399999999931, 0.00010313900000000209, 0.00010315299999999819, 0.00010286099999999923, 0.00010251400000000147]</msg>
<status status="PASS" starttime="20201030 10:59:54.056" endtime="20201030 10:59:54.058"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.052" endtime="20201030 10:59:54.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:54.062" endtime="20201030 10:59:54.082"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.061" endtime="20201030 10:59:54.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.060" endtime="20201030 10:59:54.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.701" endtime="20201030 10:59:54.083"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:53.700" endtime="20201030 10:59:54.083"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.092" endtime="20201030 10:59:54.115"></status>
</kw>
<msg timestamp="20201030 10:59:54.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:54.091" endtime="20201030 10:59:54.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:54.116" endtime="20201030 10:59:54.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.119" endtime="20201030 10:59:54.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.088" endtime="20201030 10:59:54.121"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.086" endtime="20201030 10:59:54.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.128" endtime="20201030 10:59:54.413"></status>
</kw>
<msg timestamp="20201030 10:59:54.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023026181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023130083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:54.127" endtime="20201030 10:59:54.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023026181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023130083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:54.417" endtime="20201030 10:59:54.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.425" endtime="20201030 10:59:54.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.124" endtime="20201030 10:59:54.427"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.122" endtime="20201030 10:59:54.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:54.432" level="INFO">${RESULT} = [{'diff': 0.00010390199999999947}, {'diff': 0.00010433400000000106}, {'diff': 0.00010384700000000066}, {'diff': 0.00010379199999999839}, {'diff': 0.00010361099999999998}, {'diff': 0.000103709000000000...</msg>
<status status="PASS" starttime="20201030 10:59:54.429" endtime="20201030 10:59:54.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:54.436" level="INFO">${ACCURACY} = {'diff': [0.00010390199999999947, 0.00010433400000000106, 0.00010384700000000066, 0.00010379199999999839, 0.00010361099999999998, 0.00010370900000000044, 0.00010384800000000013, 0.00010352699999999909...</msg>
<status status="PASS" starttime="20201030 10:59:54.433" endtime="20201030 10:59:54.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.440" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 10:59:54.439" endtime="20201030 10:59:54.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.442" level="INFO">VALUE: [0.00010390199999999947, 0.00010433400000000106, 0.00010384700000000066, 0.00010379199999999839, 0.00010361099999999998, 0.00010370900000000044, 0.00010384800000000013, 0.00010352699999999909, 0.00010368000000000183, 0.00010440199999999997, 0.00010379099999999891, 0.00010427799999999932, 0.0001040139999999995, 0.00010349999999999943, 0.00010365299999999869, 0.00010430599999999846, 0.00010436100000000073, 0.00010359700000000041, 0.0001041940000000019, 0.00010392999999999861, 0.00010386100000000023, 0.00010429199999999889, 0.00010358300000000084, 0.00010415299999999919, 0.00010366699999999826, 0.0001040139999999995, 0.00010366700000000173, 0.0001041949999999979, 0.00010365299999999869, 0.00010361099999999998, 0.00010438899999999987, 0.00010444399999999868, 0.00010366699999999826, 0.00010351400000000247, 0.00010445900000000119, 0.00010398600000000036, 0.0001040139999999995, 0.00010429200000000236, 0.00010358300000000084, 0.00010399999999999993, 0.00010359700000000041, 0.0001035000000000029, 0.00010366699999999826, 0.00010365299999999869, 0.00010393100000000155, 0.00010401400000000297, 0.000103513999999999, 0.00010441699999999901, 0.00010384800000000013, 0.00010388900000000284]</msg>
<status status="PASS" starttime="20201030 10:59:54.441" endtime="20201030 10:59:54.444"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.437" endtime="20201030 10:59:54.444"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:54.448" endtime="20201030 10:59:54.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.447" endtime="20201030 10:59:54.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.445" endtime="20201030 10:59:54.468"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.084" endtime="20201030 10:59:54.469"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.084" endtime="20201030 10:59:54.469"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.477" endtime="20201030 10:59:54.497"></status>
</kw>
<msg timestamp="20201030 10:59:54.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:54.476" endtime="20201030 10:59:54.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:54.498" endtime="20201030 10:59:54.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.500" endtime="20201030 10:59:54.502"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.473" endtime="20201030 10:59:54.503"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.471" endtime="20201030 10:59:54.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.509" endtime="20201030 10:59:54.795"></status>
</kw>
<msg timestamp="20201030 10:59:54.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:54.508" endtime="20201030 10:59:54.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:54.799" endtime="20201030 10:59:54.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.807" endtime="20201030 10:59:54.809"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.505" endtime="20201030 10:59:54.810"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.504" endtime="20201030 10:59:54.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:54.814" level="INFO">${RESULT} = [{'diff': 0.0001048750000000008}, {'diff': 0.0001053750000000013}, {'diff': 0.00010515300000000019}, {'diff': 0.00010459699999999794}, {'diff': 0.000104514}, {'diff': 0.0001052360000000016}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 10:59:54.811" endtime="20201030 10:59:54.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:54.819" level="INFO">${ACCURACY} = {'diff': [0.0001048750000000008, 0.0001053750000000013, 0.00010515300000000019, 0.00010459699999999794, 0.000104514, 0.0001052360000000016, 0.00010512500000000105, 0.00010522200000000204, 0.0001047919...</msg>
<status status="PASS" starttime="20201030 10:59:54.815" endtime="20201030 10:59:54.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.823" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 10:59:54.822" endtime="20201030 10:59:54.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.825" level="INFO">VALUE: [0.0001048750000000008, 0.0001053750000000013, 0.00010515300000000019, 0.00010459699999999794, 0.000104514, 0.0001052360000000016, 0.00010512500000000105, 0.00010522200000000204, 0.00010479199999999939, 0.0001045559999999987, 0.00010508299999999887, 0.00010472199999999807, 0.00010465299999999969, 0.00010536099999999826, 0.00010466699999999926, 0.00010543099999999958, 0.00010508299999999887, 0.00010465299999999969, 0.00010508400000000181, 0.00010537499999999783, 0.00010520800000000247, 0.00010483299999999862, 0.0001052360000000016, 0.00010490299999999994, 0.0001050689999999993, 0.00010541700000000001, 0.00010515200000000072, 0.00010499999999999746, 0.00010508399999999835, 0.0001053750000000013, 0.00010458300000000184, 0.00010529100000000041, 0.0001050140000000005, 0.00010508399999999835, 0.00010538900000000087, 0.00010536100000000173, 0.00010501399999999703, 0.00010494500000000212, 0.00010483299999999862, 0.00010466599999999979, 0.00010472200000000154, 0.00010515200000000072, 0.00010512499999999758, 0.00010534700000000216, 0.00010543000000000011, 0.00010472199999999807, 0.00010529199999999989, 0.00010520899999999847, 0.00010529199999999989, 0.00010520899999999847]</msg>
<status status="PASS" starttime="20201030 10:59:54.824" endtime="20201030 10:59:54.826"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.819" endtime="20201030 10:59:54.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:54.830" endtime="20201030 10:59:54.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.829" endtime="20201030 10:59:54.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.828" endtime="20201030 10:59:54.850"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.470" endtime="20201030 10:59:54.851"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.469" endtime="20201030 10:59:54.851"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.860" endtime="20201030 10:59:54.880"></status>
</kw>
<msg timestamp="20201030 10:59:54.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:54.858" endtime="20201030 10:59:54.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:54.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:54.882" endtime="20201030 10:59:54.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.884" endtime="20201030 10:59:54.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.855" endtime="20201030 10:59:54.886"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.853" endtime="20201030 10:59:54.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:54.893" endtime="20201030 10:59:55.179"></status>
</kw>
<msg timestamp="20201030 10:59:55.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019635208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019741069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:54.891" endtime="20201030 10:59:55.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019635208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019741069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:55.183" endtime="20201030 10:59:55.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.192" endtime="20201030 10:59:55.193"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.889" endtime="20201030 10:59:55.194"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.887" endtime="20201030 10:59:55.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:55.198" level="INFO">${RESULT} = [{'diff': 0.00010586099999999876}, {'diff': 0.0001055559999999997}, {'diff': 0.0001062499999999987}, {'diff': 0.00010552800000000057}, {'diff': 0.0001057360000000021}, {'diff': 0.00010579200000000039}...</msg>
<status status="PASS" starttime="20201030 10:59:55.195" endtime="20201030 10:59:55.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:55.202" level="INFO">${ACCURACY} = {'diff': [0.00010586099999999876, 0.0001055559999999997, 0.0001062499999999987, 0.00010552800000000057, 0.0001057360000000021, 0.00010579200000000039, 0.00010622199999999957, 0.00010609800000000238, 0...</msg>
<status status="PASS" starttime="20201030 10:59:55.199" endtime="20201030 10:59:55.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.206" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 10:59:55.205" endtime="20201030 10:59:55.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.209" level="INFO">VALUE: [0.00010586099999999876, 0.0001055559999999997, 0.0001062499999999987, 0.00010552800000000057, 0.0001057360000000021, 0.00010579200000000039, 0.00010622199999999957, 0.00010609800000000238, 0.00010573599999999864, 0.00010552699999999762, 0.00010608299999999987, 0.00010623599999999914, 0.00010591699999999704, 0.00010608299999999987, 0.00010601399999999803, 0.00010622200000000304, 0.00010559699999999894, 0.00010594500000000312, 0.00010551399999999753, 0.00010632000000000003, 0.00010579100000000091, 0.00010608299999999987, 0.00010587499999999833, 0.00010591699999999704, 0.00010565300000000069, 0.00010579199999999692, 0.00010586100000000223, 0.00010594500000000312, 0.0001060279999999976, 0.00010568099999999983, 0.00010579100000000091, 0.00010636099999999926, 0.000105514000000001, 0.00010631900000000055, 0.00010595799999999975, 0.00010573599999999864, 0.00010575000000000168, 0.00010593100000000008, 0.0001060560000000002, 0.00010645800000000025, 0.0001058750000000018, 0.00010601399999999803, 0.00010580500000000048, 0.00010608299999999987, 0.00010644400000000068, 0.00010579200000000039, 0.00010563899999999765, 0.00010566700000000026, 0.00010550000000000143, 0.00010556999999999928]</msg>
<status status="PASS" starttime="20201030 10:59:55.207" endtime="20201030 10:59:55.209"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.203" endtime="20201030 10:59:55.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:55.214" endtime="20201030 10:59:55.233"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.212" endtime="20201030 10:59:55.234"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.211" endtime="20201030 10:59:55.234"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.852" endtime="20201030 10:59:55.234"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:54.851" endtime="20201030 10:59:55.234"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.243" endtime="20201030 10:59:55.263"></status>
</kw>
<msg timestamp="20201030 10:59:55.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:55.241" endtime="20201030 10:59:55.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:55.264" endtime="20201030 10:59:55.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.267" endtime="20201030 10:59:55.268"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.239" endtime="20201030 10:59:55.269"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.237" endtime="20201030 10:59:55.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.276" endtime="20201030 10:59:55.561"></status>
</kw>
<msg timestamp="20201030 10:59:55.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02043225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020539028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:55.274" endtime="20201030 10:59:55.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02043225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020539028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:55.565" endtime="20201030 10:59:55.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.573" endtime="20201030 10:59:55.575"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.272" endtime="20201030 10:59:55.575"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.270" endtime="20201030 10:59:55.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:55.579" level="INFO">${RESULT} = [{'diff': 0.00010677800000000182}, {'diff': 0.00010672200000000007}, {'diff': 0.00010749999999999996}, {'diff': 0.00010709700000000044}, {'diff': 0.00010737499999999983}, {'diff': 0.000107318999999998...</msg>
<status status="PASS" starttime="20201030 10:59:55.576" endtime="20201030 10:59:55.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:55.583" level="INFO">${ACCURACY} = {'diff': [0.00010677800000000182, 0.00010672200000000007, 0.00010749999999999996, 0.00010709700000000044, 0.00010737499999999983, 0.00010731899999999808, 0.00010715299999999872, 0.00010668100000000083...</msg>
<status status="PASS" starttime="20201030 10:59:55.580" endtime="20201030 10:59:55.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.588" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 10:59:55.587" endtime="20201030 10:59:55.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.590" level="INFO">VALUE: [0.00010677800000000182, 0.00010672200000000007, 0.00010749999999999996, 0.00010709700000000044, 0.00010737499999999983, 0.00010731899999999808, 0.00010715299999999872, 0.00010668100000000083, 0.00010726399999999928, 0.0001068889999999989, 0.00010743100000000158, 0.00010645899999999972, 0.00010687499999999933, 0.00010715299999999872, 0.00010730499999999851, 0.00010745800000000125, 0.00010672200000000007, 0.0001067360000000031, 0.0001067499999999992, 0.0001068889999999989, 0.00010744500000000115, 0.00010697200000000032, 0.00010679199999999792, 0.00010736100000000026, 0.00010722200000000057, 0.00010659699999999994, 0.0001070279999999986, 0.00010712499999999958, 0.0001073889999999994, 0.00010738900000000287, 0.00010722200000000057, 0.00010701399999999903, 0.00010717999999999839, 0.00010679199999999792, 0.00010715199999999925, 0.00010687499999999933, 0.00010708300000000087, 0.000106514000000002, 0.00010676399999999878, 0.00010672200000000007, 0.00010699999999999946, 0.00010661099999999951, 0.00010684799999999967, 0.00010686099999999976, 0.00010666699999999779, 0.0001067360000000031, 0.00010687499999999933, 0.00010736099999999679, 0.00010693100000000108, 0.00010716700000000176]</msg>
<status status="PASS" starttime="20201030 10:59:55.589" endtime="20201030 10:59:55.592"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.584" endtime="20201030 10:59:55.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:55.596" endtime="20201030 10:59:55.615"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.594" endtime="20201030 10:59:55.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.593" endtime="20201030 10:59:55.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.235" endtime="20201030 10:59:55.616"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.235" endtime="20201030 10:59:55.617"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.625" endtime="20201030 10:59:55.646"></status>
</kw>
<msg timestamp="20201030 10:59:55.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:55.624" endtime="20201030 10:59:55.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:55.648" endtime="20201030 10:59:55.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.650" endtime="20201030 10:59:55.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.621" endtime="20201030 10:59:55.652"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.619" endtime="20201030 10:59:55.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.659" endtime="20201030 10:59:55.943"></status>
</kw>
<msg timestamp="20201030 10:59:55.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019720417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:55.657" endtime="20201030 10:59:55.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019720417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:55.947" endtime="20201030 10:59:55.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:55.955" endtime="20201030 10:59:55.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.655" endtime="20201030 10:59:55.957"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.653" endtime="20201030 10:59:55.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:55.961" level="INFO">${RESULT} = [{'diff': 0.00010754200000000214}, {'diff': 0.00010844499999999868}, {'diff': 0.00010794499999999818}, {'diff': 0.00010782000000000153}, {'diff': 0.00010801400000000003}, {'diff': 0.000108165999999999...</msg>
<status status="PASS" starttime="20201030 10:59:55.958" endtime="20201030 10:59:55.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:55.966" level="INFO">${ACCURACY} = {'diff': [0.00010754200000000214, 0.00010844499999999868, 0.00010794499999999818, 0.00010782000000000153, 0.00010801400000000003, 0.00010816599999999982, 0.00010755499999999876, 0.0001077219999999976,...</msg>
<status status="PASS" starttime="20201030 10:59:55.962" endtime="20201030 10:59:55.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.971" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 10:59:55.970" endtime="20201030 10:59:55.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:55.973" level="INFO">VALUE: [0.00010754200000000214, 0.00010844499999999868, 0.00010794499999999818, 0.00010782000000000153, 0.00010801400000000003, 0.00010816599999999982, 0.00010755499999999876, 0.0001077219999999976, 0.00010772200000000107, 0.00010800000000000046, 0.0001075829999999979, 0.00010837499999999736, 0.00010837500000000083, 0.00010763899999999965, 0.00010751399999999953, 0.00010797200000000132, 0.0001080829999999984, 0.00010805499999999926, 0.00010783399999999763, 0.00010765299999999922, 0.0001075829999999979, 0.00010845900000000172, 0.0001081950000000019, 0.00010763899999999965, 0.00010837500000000083, 0.00010815200000000025, 0.00010837499999999736, 0.00010816699999999929, 0.00010800000000000046, 0.00010848599999999792, 0.00010748600000000039, 0.0001075279999999991, 0.00010773600000000064, 0.00010836099999999779, 0.00010801400000000003, 0.00010749999999999996, 0.00010809700000000144, 0.00010751399999999953, 0.00010837500000000083, 0.0001077219999999976, 0.00010787500000000033, 0.00010759800000000042, 0.00010830599999999899, 0.00010815299999999972, 0.00010819399999999896, 0.00010829099999999994, 0.00010777699999999987, 0.00010791599999999957, 0.00010765300000000269, 0.00010844499999999868]</msg>
<status status="PASS" starttime="20201030 10:59:55.972" endtime="20201030 10:59:55.974"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.967" endtime="20201030 10:59:55.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:55.978" endtime="20201030 10:59:55.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.977" endtime="20201030 10:59:55.998"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.976" endtime="20201030 10:59:55.999"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.618" endtime="20201030 10:59:55.999"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.617" endtime="20201030 10:59:55.999"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.008" endtime="20201030 10:59:56.028"></status>
</kw>
<msg timestamp="20201030 10:59:56.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:56.006" endtime="20201030 10:59:56.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:56.029" endtime="20201030 10:59:56.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.031" endtime="20201030 10:59:56.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.004" endtime="20201030 10:59:56.033"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.002" endtime="20201030 10:59:56.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.040" endtime="20201030 10:59:56.326"></status>
</kw>
<msg timestamp="20201030 10:59:56.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019799319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:56.039" endtime="20201030 10:59:56.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019799319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:56.330" endtime="20201030 10:59:56.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.338" endtime="20201030 10:59:56.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.036" endtime="20201030 10:59:56.340"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.034" endtime="20201030 10:59:56.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:56.345" level="INFO">${RESULT} = [{'diff': 0.0001092219999999991}, {'diff': 0.0001088890000000009}, {'diff': 0.00010887500000000133}, {'diff': 0.00010937500000000183}, {'diff': 0.00010929200000000042}, {'diff': 0.00010944400000000021...</msg>
<status status="PASS" starttime="20201030 10:59:56.342" endtime="20201030 10:59:56.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:56.349" level="INFO">${ACCURACY} = {'diff': [0.0001092219999999991, 0.0001088890000000009, 0.00010887500000000133, 0.00010937500000000183, 0.00010929200000000042, 0.00010944400000000021, 0.0001093890000000014, 0.00010881899999999958, 0...</msg>
<status status="PASS" starttime="20201030 10:59:56.346" endtime="20201030 10:59:56.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.353" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 10:59:56.352" endtime="20201030 10:59:56.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.355" level="INFO">VALUE: [0.0001092219999999991, 0.0001088890000000009, 0.00010887500000000133, 0.00010937500000000183, 0.00010929200000000042, 0.00010944400000000021, 0.0001093890000000014, 0.00010881899999999958, 0.00010908300000000287, 0.00010880599999999949, 0.00010851400000000053, 0.00010907000000000278, 0.00010880599999999949, 0.00010911099999999854, 0.00010901300000000155, 0.00010929099999999747, 0.00010943000000000064, 0.00010886100000000176, 0.0001087219999999986, 0.0001085829999999989, 0.00010880599999999949, 0.00010884699999999872, 0.00010862500000000108, 0.00010920900000000247, 0.00010859700000000194, 0.00010859699999999847, 0.00010937500000000183, 0.00010875000000000121, 0.00010887500000000133, 0.00010873600000000164, 0.00010879200000000339, 0.00010865300000000022, 0.00010851400000000053, 0.00010886200000000124, 0.00010877700000000087, 0.00010880500000000001, 0.00010901400000000103, 0.0001085829999999989, 0.00010915300000000072, 0.00010870799999999903, 0.00010851400000000053, 0.00010859799999999795, 0.00010937500000000183, 0.00010913900000000115, 0.00010886099999999829, 0.00010887500000000133, 0.00010849999999999749, 0.00010858300000000237, 0.00010906899999999983, 0.00010848599999999792]</msg>
<status status="PASS" starttime="20201030 10:59:56.354" endtime="20201030 10:59:56.356"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.349" endtime="20201030 10:59:56.357"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:56.360" endtime="20201030 10:59:56.380"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.359" endtime="20201030 10:59:56.380"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.358" endtime="20201030 10:59:56.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.000" endtime="20201030 10:59:56.381"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:55.999" endtime="20201030 10:59:56.381"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.390" endtime="20201030 10:59:56.409"></status>
</kw>
<msg timestamp="20201030 10:59:56.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:56.388" endtime="20201030 10:59:56.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:56.411" endtime="20201030 10:59:56.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.414" endtime="20201030 10:59:56.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.385" endtime="20201030 10:59:56.416"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.383" endtime="20201030 10:59:56.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.424" endtime="20201030 10:59:56.710"></status>
</kw>
<msg timestamp="20201030 10:59:56.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020421, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020531042, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:56.422" endtime="20201030 10:59:56.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020421, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020531042, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 10:59:56.714" endtime="20201030 10:59:56.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.722" endtime="20201030 10:59:56.723"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.419" endtime="20201030 10:59:56.724"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.417" endtime="20201030 10:59:56.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:56.728" level="INFO">${RESULT} = [{'diff': 0.0001100419999999977}, {'diff': 0.00010958399999999938}, {'diff': 0.00011012499999999911}, {'diff': 0.00010951400000000153}, {'diff': 0.00010966700000000079}, {'diff': 0.0001097219999999996...</msg>
<status status="PASS" starttime="20201030 10:59:56.725" endtime="20201030 10:59:56.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:56.732" level="INFO">${ACCURACY} = {'diff': [0.0001100419999999977, 0.00010958399999999938, 0.00011012499999999911, 0.00010951400000000153, 0.00010966700000000079, 0.0001097219999999996, 0.00010949999999999849, 0.00010950000000000196, ...</msg>
<status status="PASS" starttime="20201030 10:59:56.729" endtime="20201030 10:59:56.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.736" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 10:59:56.735" endtime="20201030 10:59:56.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.739" level="INFO">VALUE: [0.0001100419999999977, 0.00010958399999999938, 0.00011012499999999911, 0.00010951400000000153, 0.00010966700000000079, 0.0001097219999999996, 0.00010949999999999849, 0.00010950000000000196, 0.00011044500000000068, 0.00010977799999999788, 0.0001095280000000011, 0.00010955600000000024, 0.00010994400000000071, 0.00010965199999999828, 0.00010983300000000015, 0.00010980499999999754, 0.00010966700000000079, 0.00010994500000000018, 0.00010987499999999886, 0.00010965299999999775, 0.00010948700000000186, 0.00011043000000000164, 0.00011029099999999847, 0.00010976400000000178, 0.0001095829999999999, 0.00010965299999999775, 0.00010952799999999763, 0.00010994500000000018, 0.0001098890000000019, 0.00011008399999999988, 0.00011001400000000203, 0.00010952699999999815, 0.00010987499999999886, 0.00011018100000000086, 0.00010991699999999757, 0.00010988899999999843, 0.00010997299999999932, 0.00011044499999999721, 0.0001102220000000001, 0.00011001399999999856, 0.00011036200000000274, 0.00011020799999999706, 0.00010997199999999985, 0.0001100830000000004, 0.00010994399999999724, 0.00010995800000000028, 0.00010982000000000006, 0.00010963899999999818, 0.00011047200000000035, 0.00010987500000000233]</msg>
<status status="PASS" starttime="20201030 10:59:56.738" endtime="20201030 10:59:56.741"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.733" endtime="20201030 10:59:56.741"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:56.745" endtime="20201030 10:59:56.764"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.743" endtime="20201030 10:59:56.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.742" endtime="20201030 10:59:56.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.382" endtime="20201030 10:59:56.765"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.381" endtime="20201030 10:59:56.765"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.774" endtime="20201030 10:59:56.793"></status>
</kw>
<msg timestamp="20201030 10:59:56.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:56.772" endtime="20201030 10:59:56.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:56.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:56.795" endtime="20201030 10:59:56.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.797" endtime="20201030 10:59:56.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.770" endtime="20201030 10:59:56.799"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.768" endtime="20201030 10:59:56.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:56.806" endtime="20201030 10:59:57.092"></status>
</kw>
<msg timestamp="20201030 10:59:57.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:56.804" endtime="20201030 10:59:57.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:57.096" endtime="20201030 10:59:57.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.104" endtime="20201030 10:59:57.105"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.802" endtime="20201030 10:59:57.106"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.800" endtime="20201030 10:59:57.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:57.110" level="INFO">${RESULT} = [{'diff': 0.00011059700000000047}, {'diff': 0.00011094400000000171}, {'diff': 0.00011112500000000011}, {'diff': 0.00011108400000000088}, {'diff': 0.00011126399999999981}, {'diff': 0.000110569000000001...</msg>
<status status="PASS" starttime="20201030 10:59:57.107" endtime="20201030 10:59:57.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:57.115" level="INFO">${ACCURACY} = {'diff': [0.00011059700000000047, 0.00011094400000000171, 0.00011112500000000011, 0.00011108400000000088, 0.00011126399999999981, 0.00011056900000000133, 0.00011080499999999854, 0.00011097200000000085...</msg>
<status status="PASS" starttime="20201030 10:59:57.111" endtime="20201030 10:59:57.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.120" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 10:59:57.119" endtime="20201030 10:59:57.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.122" level="INFO">VALUE: [0.00011059700000000047, 0.00011094400000000171, 0.00011112500000000011, 0.00011108400000000088, 0.00011126399999999981, 0.00011056900000000133, 0.00011080499999999854, 0.00011097200000000085, 0.00011074999999999974, 0.00011108299999999793, 0.00011144400000000221, 0.00011101399999999956, 0.00011113899999999968, 0.00011122199999999763, 0.0001112229999999971, 0.00011144500000000168, 0.00011101300000000008, 0.00011058299999999743, 0.00011129099999999947, 0.0001105830000000009, 0.00011129200000000242, 0.00011101399999999956, 0.00011081999999999759, 0.00011058400000000038, 0.00011065299999999875, 0.00011052799999999863, 0.0001110830000000014, 0.00011066599999999885, 0.00011087499999999986, 0.0001105830000000009, 0.00011051399999999906, 0.00011145899999999778, 0.00011108400000000088, 0.00011099999999999999, 0.00011108400000000088, 0.00011066600000000232, 0.00011088899999999943, 0.00011049999999999949, 0.00011134700000000122, 0.00011052799999999863, 0.00011102799999999913, 0.00011131999999999809, 0.000110902000000003, 0.00011141699999999907, 0.00011084700000000072, 0.00011062499999999961, 0.00011119399999999849, 0.00011087500000000333, 0.00011087499999999986, 0.00011136100000000079]</msg>
<status status="PASS" starttime="20201030 10:59:57.121" endtime="20201030 10:59:57.123"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.116" endtime="20201030 10:59:57.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:57.127" endtime="20201030 10:59:57.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.126" endtime="20201030 10:59:57.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.124" endtime="20201030 10:59:57.147"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.766" endtime="20201030 10:59:57.148"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:56.766" endtime="20201030 10:59:57.148"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.156" endtime="20201030 10:59:57.177"></status>
</kw>
<msg timestamp="20201030 10:59:57.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:57.155" endtime="20201030 10:59:57.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:57.179" endtime="20201030 10:59:57.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.181" endtime="20201030 10:59:57.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.152" endtime="20201030 10:59:57.183"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.150" endtime="20201030 10:59:57.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.190" endtime="20201030 10:59:57.477"></status>
</kw>
<msg timestamp="20201030 10:59:57.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020310167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:57.189" endtime="20201030 10:59:57.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020310167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:57.481" endtime="20201030 10:59:57.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.489" endtime="20201030 10:59:57.490"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.186" endtime="20201030 10:59:57.491"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.184" endtime="20201030 10:59:57.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:57.495" level="INFO">${RESULT} = [{'diff': 0.00011169500000000193}, {'diff': 0.00011155600000000224}, {'diff': 0.00011215300000000025}, {'diff': 0.00011245799999999931}, {'diff': 0.00011195799999999881}, {'diff': 0.000112235999999998...</msg>
<status status="PASS" starttime="20201030 10:59:57.492" endtime="20201030 10:59:57.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:57.499" level="INFO">${ACCURACY} = {'diff': [0.00011169500000000193, 0.00011155600000000224, 0.00011215300000000025, 0.00011245799999999931, 0.00011195799999999881, 0.0001122359999999982, 0.00011230600000000299, 0.00011206999999999884,...</msg>
<status status="PASS" starttime="20201030 10:59:57.496" endtime="20201030 10:59:57.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.503" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 10:59:57.502" endtime="20201030 10:59:57.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.506" level="INFO">VALUE: [0.00011169500000000193, 0.00011155600000000224, 0.00011215300000000025, 0.00011245799999999931, 0.00011195799999999881, 0.0001122359999999982, 0.00011230600000000299, 0.00011206999999999884, 0.00011244500000000268, 0.00011230599999999952, 0.00011158399999999791, 0.00011150000000000049, 0.00011229100000000047, 0.00011168100000000236, 0.00011192999999999967, 0.0001117220000000016, 0.00011244499999999921, 0.00011237500000000136, 0.00011182000000000206, 0.00011208400000000188, 0.0001124160000000006, 0.00011227699999999743, 0.0001117359999999977, 0.00011215300000000025, 0.00011165299999999975, 0.00011201400000000056, 0.00011224999999999777, 0.00011198599999999795, 0.00011180599999999902, 0.00011206999999999884, 0.00011211100000000154, 0.00011229100000000047, 0.000111903, 0.00011209700000000197, 0.00011231999999999909, 0.00011152799999999963, 0.0001117359999999977, 0.00011158400000000138, 0.00011230599999999952, 0.00011237500000000136, 0.00011209700000000197, 0.00011223600000000167, 0.00011216699999999982, 0.00011200000000000099, 0.00011152799999999963, 0.00011176400000000031, 0.00011165299999999975, 0.00011155600000000224, 0.0001122359999999982, 0.00011236099999999832]</msg>
<status status="PASS" starttime="20201030 10:59:57.504" endtime="20201030 10:59:57.507"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.500" endtime="20201030 10:59:57.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:57.511" endtime="20201030 10:59:57.530"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.509" endtime="20201030 10:59:57.531"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.508" endtime="20201030 10:59:57.531"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.149" endtime="20201030 10:59:57.531"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.148" endtime="20201030 10:59:57.531"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.540" endtime="20201030 10:59:57.563"></status>
</kw>
<msg timestamp="20201030 10:59:57.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:57.539" endtime="20201030 10:59:57.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:57.564" endtime="20201030 10:59:57.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.567" endtime="20201030 10:59:57.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.536" endtime="20201030 10:59:57.569"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.534" endtime="20201030 10:59:57.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.576" endtime="20201030 10:59:57.861"></status>
</kw>
<msg timestamp="20201030 10:59:57.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023378847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023491347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:57.574" endtime="20201030 10:59:57.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023378847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023491347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 10:59:57.865" endtime="20201030 10:59:57.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.873" endtime="20201030 10:59:57.875"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.572" endtime="20201030 10:59:57.876"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.570" endtime="20201030 10:59:57.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:57.880" level="INFO">${RESULT} = [{'diff': 0.00011249999999999802}, {'diff': 0.00011331900000000061}, {'diff': 0.00011323600000000267}, {'diff': 0.00011266700000000032}, {'diff': 0.00011302799999999766}, {'diff': 0.000112625000000001...</msg>
<status status="PASS" starttime="20201030 10:59:57.877" endtime="20201030 10:59:57.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:57.884" level="INFO">${ACCURACY} = {'diff': [0.00011249999999999802, 0.00011331900000000061, 0.00011323600000000267, 0.00011266700000000032, 0.00011302799999999766, 0.00011262500000000161, 0.00011251300000000158, 0.00011340200000000203...</msg>
<status status="PASS" starttime="20201030 10:59:57.881" endtime="20201030 10:59:57.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.888" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 10:59:57.887" endtime="20201030 10:59:57.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.890" level="INFO">VALUE: [0.00011249999999999802, 0.00011331900000000061, 0.00011323600000000267, 0.00011266700000000032, 0.00011302799999999766, 0.00011262500000000161, 0.00011251300000000158, 0.00011340200000000203, 0.00011319400000000049, 0.0001132359999999992, 0.00011291700000000057, 0.000112596999999999, 0.00011279200000000045, 0.00011251400000000106, 0.00011316700000000082, 0.00011266600000000085, 0.00011279200000000045, 0.00011334699999999975, 0.0001127359999999987, 0.00011268099999999989, 0.00011301400000000156, 0.0001133749999999989, 0.00011322199999999963, 0.0001130550000000008, 0.00011294499999999971, 0.00011308299999999993, 0.00011259700000000247, 0.0001133749999999989, 0.00011302800000000113, 0.00011273600000000217, 0.00011273600000000217, 0.00011336099999999932, 0.00011343100000000064, 0.00011251400000000106, 0.00011251300000000158, 0.00011336099999999932, 0.00011280500000000054, 0.00011298599999999895, 0.00011302800000000113, 0.00011330600000000052, 0.0001132359999999992, 0.00011259700000000247, 0.00011319400000000049, 0.00011256999999999934, 0.00011301400000000156, 0.00011343000000000117, 0.0001125550000000003, 0.00011283300000000315, 0.00011256899999999986, 0.00011273600000000217]</msg>
<status status="PASS" starttime="20201030 10:59:57.889" endtime="20201030 10:59:57.898"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.885" endtime="20201030 10:59:57.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:57.902" endtime="20201030 10:59:57.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.901" endtime="20201030 10:59:57.922"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.900" endtime="20201030 10:59:57.923"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.532" endtime="20201030 10:59:57.923"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.532" endtime="20201030 10:59:57.923"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.932" endtime="20201030 10:59:57.952"></status>
</kw>
<msg timestamp="20201030 10:59:57.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:57.930" endtime="20201030 10:59:57.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:57.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:57.954" endtime="20201030 10:59:57.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.956" endtime="20201030 10:59:57.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.928" endtime="20201030 10:59:57.958"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.926" endtime="20201030 10:59:57.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:57.965" endtime="20201030 10:59:58.251"></status>
</kw>
<msg timestamp="20201030 10:59:58.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01967075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:57.964" endtime="20201030 10:59:58.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01967075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 10:59:58.255" endtime="20201030 10:59:58.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:58.263" endtime="20201030 10:59:58.264"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.961" endtime="20201030 10:59:58.265"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.959" endtime="20201030 10:59:58.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 10:59:58.269" level="INFO">${RESULT} = [{'diff': 0.00011413899999999921}, {'diff': 0.0001140689999999979}, {'diff': 0.00011356999999999687}, {'diff': 0.00011420900000000053}, {'diff': 0.00011380600000000102}, {'diff': 0.0001143879999999999...</msg>
<status status="PASS" starttime="20201030 10:59:58.266" endtime="20201030 10:59:58.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 10:59:58.274" level="INFO">${ACCURACY} = {'diff': [0.00011413899999999921, 0.0001140689999999979, 0.00011356999999999687, 0.00011420900000000053, 0.00011380600000000102, 0.00011438799999999999, 0.00011408300000000093, 0.00011391599999999863,...</msg>
<status status="PASS" starttime="20201030 10:59:58.270" endtime="20201030 10:59:58.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.278" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 10:59:58.278" endtime="20201030 10:59:58.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.281" level="INFO">VALUE: [0.00011413899999999921, 0.0001140689999999979, 0.00011356999999999687, 0.00011420900000000053, 0.00011380600000000102, 0.00011438799999999999, 0.00011408300000000093, 0.00011391599999999863, 0.00011362500000000261, 0.00011372200000000013, 0.00011444399999999827, 0.00011361100000000304, 0.00011349999999999902, 0.00011424999999999977, 0.00011351399999999859, 0.000114290999999999, 0.00011427699999999943, 0.0001144299999999987, 0.0001144299999999987, 0.0001144299999999987, 0.00011363900000000218, 0.00011372200000000013, 0.00011351400000000206, 0.00011420900000000053, 0.0001137229999999996, 0.00011408300000000093, 0.0001142360000000002, 0.0001142360000000002, 0.00011366700000000132, 0.000113597, 0.00011401399999999909, 0.00011394499999999724, 0.00011366600000000185, 0.00011388799999999949, 0.0001138749999999994, 0.00011361099999999957, 0.00011433299999999771, 0.00011380500000000154, 0.00011380600000000102, 0.00011354199999999773, 0.00011401399999999909, 0.00011406999999999737, 0.00011393099999999767, 0.00011349999999999902, 0.00011444400000000174, 0.00011379200000000145, 0.00011372200000000013, 0.00011419500000000096, 0.00011351399999999859, 0.00011413899999999921]</msg>
<status status="PASS" starttime="20201030 10:59:58.280" endtime="20201030 10:59:58.282"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.275" endtime="20201030 10:59:58.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:58.286" endtime="20201030 10:59:58.305"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.284" endtime="20201030 10:59:58.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.283" endtime="20201030 10:59:58.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.924" endtime="20201030 10:59:58.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:57.923" endtime="20201030 10:59:58.306"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:19.890" endtime="20201030 10:59:58.307"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 10:59:16.790" endtime="20201030 10:59:58.307" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:58:30.972" endtime="20201030 10:59:58.312"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 10:59:58.368" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 10:59:58.376" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 10:59:59.446" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 10:59:58.367" endtime="20201030 10:59:59.447"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 10:59:59.449" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 10:59:59.448" endtime="20201030 10:59:59.449"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.365" endtime="20201030 10:59:59.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 10:59:59.452" endtime="20201030 10:59:59.636"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.451" endtime="20201030 10:59:59.637"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 10:59:59.649" endtime="20201030 11:00:02.675"></status>
</kw>
<msg timestamp="20201030 11:00:02.677" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 10:59:59.648" endtime="20201030 11:00:02.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:02.682" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:02.679" endtime="20201030 11:00:02.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:02.688" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:02.684" endtime="20201030 11:00:02.689"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:59.645" endtime="20201030 11:00:02.690"></status>
</kw>
<status status="FAIL" starttime="20201030 10:59:59.643" endtime="20201030 11:00:02.691"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.642" endtime="20201030 11:00:02.692"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:02.699" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:02.698" endtime="20201030 11:00:02.700"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.694" endtime="20201030 11:00:02.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.641" endtime="20201030 11:00:02.701"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.641" endtime="20201030 11:00:02.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:02.703" endtime="20201030 11:00:02.706"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.639" endtime="20201030 11:00:02.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:02.708" endtime="20201030 11:00:02.712"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:59.638" endtime="20201030 11:00:02.713"></status>
</kw>
<status status="PASS" starttime="20201030 10:59:58.364" endtime="20201030 11:00:02.713"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:02.726" endtime="20201030 11:00:02.748"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.723" endtime="20201030 11:00:02.749"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:02.775" endtime="20201030 11:00:05.801"></status>
</kw>
<msg timestamp="20201030 11:00:05.803" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:02.772" endtime="20201030 11:00:05.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:05.810" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:05.806" endtime="20201030 11:00:05.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:05.820" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:05.813" endtime="20201030 11:00:05.821"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:02.767" endtime="20201030 11:00:05.823"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:02.762" endtime="20201030 11:00:05.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.760" endtime="20201030 11:00:05.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:05.832" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:05.832" endtime="20201030 11:00:05.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.827" endtime="20201030 11:00:05.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.758" endtime="20201030 11:00:05.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.757" endtime="20201030 11:00:05.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:05.834" endtime="20201030 11:00:05.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.754" endtime="20201030 11:00:05.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.750" endtime="20201030 11:00:05.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:02.720" endtime="20201030 11:00:05.837"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:05.846" endtime="20201030 11:00:11.971"></status>
</kw>
<msg timestamp="20201030 11:00:11.972" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:05.845" endtime="20201030 11:00:11.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:11.977" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:11.974" endtime="20201030 11:00:11.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:11.980" endtime="20201030 11:00:11.983"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.842" endtime="20201030 11:00:11.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.840" endtime="20201030 11:00:11.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:11.991" level="INFO">${RESULT} = {'bg-timer-count': 0, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:00:11.987" endtime="20201030 11:00:11.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:12.001" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:11.999" endtime="20201030 11:00:12.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:12.006" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:00:12.004" endtime="20201030 11:00:12.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:11.993" endtime="20201030 11:00:12.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:12.016" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:12.014" endtime="20201030 11:00:12.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:12.021" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:00:12.019" endtime="20201030 11:00:12.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.009" endtime="20201030 11:00:12.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:12.031" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:00:12.029" endtime="20201030 11:00:12.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:12.036" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 11:00:12.034" endtime="20201030 11:00:12.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.024" endtime="20201030 11:00:12.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:12.053" endtime="20201030 11:00:12.368"></status>
</kw>
<msg timestamp="20201030 11:00:12.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.109281347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.209309097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:12.049" endtime="20201030 11:00:12.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:12.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.109281347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.209309097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:12.372" endtime="20201030 11:00:12.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:12.381" endtime="20201030 11:00:12.382"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.043" endtime="20201030 11:00:12.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.039" endtime="20201030 11:00:12.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:00:12.387" level="INFO">${FILTERED} = [{'diff': 0.10002775000000019}, {'diff': 0.10000737499999968}, {'diff': 0.10001090300000026}, {'diff': 0.10001091700000009}, {'diff': 0.10001086199999998}, {'diff': 0.10001080600000023}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 11:00:12.384" endtime="20201030 11:00:12.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:12.391" level="INFO">${RESULT} = {'diff': [0.10002775000000019, 0.10000737499999968, 0.10001090300000026, 0.10001091700000009, 0.10001086199999998, 0.10001080600000023, 0.10001091699999964, 0.10001084799999971, 0.10001083400000033, 0...</msg>
<status status="PASS" starttime="20201030 11:00:12.388" endtime="20201030 11:00:12.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:12.396" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:00:12.395" endtime="20201030 11:00:12.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:12.398" level="INFO">VALUE: [0.10002775000000019, 0.10000737499999968, 0.10001090300000026, 0.10001091700000009, 0.10001086199999998, 0.10001080600000023, 0.10001091699999964, 0.10001084799999971, 0.10001083400000033, 0.10001083400000077, 0.10001091599999956, 0.1000108329999998, 0.10001092999999983, 0.10001084700000007, 0.10001081899999953, 0.10001091700000053, 0.10001084700000007, 0.1000108329999998, 0.10001091699999964, 0.10001091699999964, 0.10001087499999972, 0.1000108200000005, 0.10001083399999988, 0.10001092999999983, 0.10001084700000007, 0.1000108329999998, 0.10001097299999984, 0.10001080599999934, 0.1000108329999998, 0.10001091700000053, 0.10001093099999991, 0.10001083399999988, 0.10001093000000072, 0.10001084700000007, 0.10001091700000053, 0.1000109449999993, 0.10001083399999988, 0.10001093099999991, 0.10001084700000007, 0.10001086100000034, 0.10001084700000007, 0.10001088899999999, 0.1000108200000005, 0.10001084800000015, 0.10001093000000072, 0.10001084700000007, 0.10001092999999983, 0.10001093099999991, 0.10001086099999945, 0.10001086099999945, 0.10001086099999945]</msg>
<status status="PASS" starttime="20201030 11:00:12.397" endtime="20201030 11:00:12.399"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.392" endtime="20201030 11:00:12.400"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:05.838" endtime="20201030 11:00:12.400"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:02.715" endtime="20201030 11:00:12.401" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:12.410" endtime="20201030 11:00:12.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.409" endtime="20201030 11:00:12.430"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:12.445" endtime="20201030 11:00:15.468"></status>
</kw>
<msg timestamp="20201030 11:00:15.469" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:12.443" endtime="20201030 11:00:15.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:15.475" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:15.472" endtime="20201030 11:00:15.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:15.481" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:15.477" endtime="20201030 11:00:15.482"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:12.441" endtime="20201030 11:00:15.483"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:12.438" endtime="20201030 11:00:15.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.436" endtime="20201030 11:00:15.485"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:15.493" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:15.492" endtime="20201030 11:00:15.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.487" endtime="20201030 11:00:15.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.435" endtime="20201030 11:00:15.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.434" endtime="20201030 11:00:15.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:15.497" endtime="20201030 11:00:15.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.433" endtime="20201030 11:00:15.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.431" endtime="20201030 11:00:15.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:12.407" endtime="20201030 11:00:15.504"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:15.525" endtime="20201030 11:00:21.652"></status>
</kw>
<msg timestamp="20201030 11:00:21.653" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:15.521" endtime="20201030 11:00:21.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:21.658" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:21.655" endtime="20201030 11:00:21.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:21.661" endtime="20201030 11:00:21.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.515" endtime="20201030 11:00:21.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.511" endtime="20201030 11:00:21.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:21.673" level="INFO">${RESULT} = {'bg-timer-count': 5, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:00:21.668" endtime="20201030 11:00:21.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:21.682" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:21.680" endtime="20201030 11:00:21.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:21.686" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:00:21.684" endtime="20201030 11:00:21.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.674" endtime="20201030 11:00:21.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:21.699" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:21.695" endtime="20201030 11:00:21.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:21.704" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:00:21.702" endtime="20201030 11:00:21.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.690" endtime="20201030 11:00:21.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:21.714" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:00:21.712" endtime="20201030 11:00:21.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:21.717" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 11:00:21.716" endtime="20201030 11:00:21.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.707" endtime="20201030 11:00:21.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:21.725" endtime="20201030 11:00:22.025"></status>
</kw>
<msg timestamp="20201030 11:00:22.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105933667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.206014764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:21.723" endtime="20201030 11:00:22.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:22.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105933667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.206014764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:22.029" endtime="20201030 11:00:22.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:22.037" endtime="20201030 11:00:22.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.720" endtime="20201030 11:00:22.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:21.719" endtime="20201030 11:00:22.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:00:22.044" level="INFO">${FILTERED} = [{'diff': 0.1000810969999999}, {'diff': 0.09995794400000024}, {'diff': 0.1000108329999998}, {'diff': 0.10001083300000024}, {'diff': 0.1000108329999998}, {'diff': 0.10001083300000024}, {'diff': 0.10001...</msg>
<status status="PASS" starttime="20201030 11:00:22.041" endtime="20201030 11:00:22.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:22.048" level="INFO">${RESULT} = {'diff': [0.1000810969999999, 0.09995794400000024, 0.1000108329999998, 0.10001083300000024, 0.1000108329999998, 0.10001083300000024, 0.10001090299999982, 0.10001091700000009, 0.10001084699999963, 0.10...</msg>
<status status="PASS" starttime="20201030 11:00:22.045" endtime="20201030 11:00:22.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:22.053" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:00:22.052" endtime="20201030 11:00:22.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:22.056" level="INFO">VALUE: [0.1000810969999999, 0.09995794400000024, 0.1000108329999998, 0.10001083300000024, 0.1000108329999998, 0.10001083300000024, 0.10001090299999982, 0.10001091700000009, 0.10001084699999963, 0.10001083399999988, 0.10001083399999988, 0.10001081999999961, 0.10001093099999991, 0.10001083399999988, 0.10001083400000077, 0.10001086100000034, 0.1000108200000005, 0.10001090300000026, 5.419999995481817e-07, 4.73000000056345e-07, 5.419999995481817e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.409999994654413e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.409999994654413e-07, 5.420000004363601e-07, 0.1000113890000005, 5.420000004363601e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201030 11:00:22.054" endtime="20201030 11:00:22.056"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.049" endtime="20201030 11:00:22.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:15.506" endtime="20201030 11:00:22.057"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:12.404" endtime="20201030 11:00:22.059" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:22.068" endtime="20201030 11:00:22.087"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.066" endtime="20201030 11:00:22.088"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:22.101" endtime="20201030 11:00:25.126"></status>
</kw>
<msg timestamp="20201030 11:00:25.127" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:22.100" endtime="20201030 11:00:25.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:25.133" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:25.129" endtime="20201030 11:00:25.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:25.139" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:25.135" endtime="20201030 11:00:25.140"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:22.097" endtime="20201030 11:00:25.141"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:22.094" endtime="20201030 11:00:25.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.093" endtime="20201030 11:00:25.143"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:25.151" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:25.150" endtime="20201030 11:00:25.152"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.145" endtime="20201030 11:00:25.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.092" endtime="20201030 11:00:25.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.092" endtime="20201030 11:00:25.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:25.155" endtime="20201030 11:00:25.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.090" endtime="20201030 11:00:25.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.088" endtime="20201030 11:00:25.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:22.064" endtime="20201030 11:00:25.161"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:25.178" endtime="20201030 11:00:31.303"></status>
</kw>
<msg timestamp="20201030 11:00:31.304" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:25.175" endtime="20201030 11:00:31.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:31.310" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:31.307" endtime="20201030 11:00:31.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:31.312" endtime="20201030 11:00:31.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.173" endtime="20201030 11:00:31.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.168" endtime="20201030 11:00:31.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:31.324" level="INFO">${RESULT} = {'bg-timer-count': 10, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:00:31.320" endtime="20201030 11:00:31.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:31.334" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:31.331" endtime="20201030 11:00:31.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:31.338" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:00:31.336" endtime="20201030 11:00:31.339"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:31.326" endtime="20201030 11:00:31.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:31.349" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:31.347" endtime="20201030 11:00:31.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:31.353" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:00:31.351" endtime="20201030 11:00:31.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:31.341" endtime="20201030 11:00:31.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:31.365" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:00:31.363" endtime="20201030 11:00:31.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:31.370" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 11:00:31.367" endtime="20201030 11:00:31.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:31.357" endtime="20201030 11:00:31.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:31.386" endtime="20201030 11:00:31.693"></status>
</kw>
<msg timestamp="20201030 11:00:31.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100608708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.200749806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:31.383" endtime="20201030 11:00:31.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:31.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100608708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.200749806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:31.698" endtime="20201030 11:00:31.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:31.706" endtime="20201030 11:00:31.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:31.377" endtime="20201030 11:00:31.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:31.373" endtime="20201030 11:00:31.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:00:31.712" level="INFO">${FILTERED} = [{'diff': 0.10014109799999993}, {'diff': 0.10004405599999977}, {'diff': 0.09986879199999965}, {'diff': 0.10001081899999997}, {'diff': 0.10001094499999974}, {'diff': 0.10001080500000015}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 11:00:31.709" endtime="20201030 11:00:31.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:31.719" level="INFO">${RESULT} = {'diff': [0.10014109799999993, 0.10004405599999977, 0.09986879199999965, 0.10001081899999997, 0.10001094499999974, 0.10001080500000015, 0.10001081899999997, 0.10001090299999982, 0.10001091700000009, 0...</msg>
<status status="PASS" starttime="20201030 11:00:31.713" endtime="20201030 11:00:31.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:31.724" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:00:31.723" endtime="20201030 11:00:31.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:31.726" level="INFO">VALUE: [0.10014109799999993, 0.10004405599999977, 0.09986879199999965, 0.10001081899999997, 0.10001094499999974, 0.10001080500000015, 0.10001081899999997, 0.10001090299999982, 0.10001091700000009, 0.10001081899999953, 0.1000108329999998, 0.10001083300000069, 0.10001087499999972, 0.10001081899999953, 0.1000108329999998, 0.10001081899999953, 0.1000108329999998, 0.10001083300000069, 0.1000108329999998, 0.10001091700000053, 0.10001083300000069, 0.10001087499999972, 0.10001084800000015, 0.10001079200000085, 0.1000108329999998, 0.10001091700000053, 0.10001086200000042, 0.1000108200000005, 0.10001084800000015, 0.10001083399999988, 0.10001091600000045, 0.10001086100000034, 0.10001081900000042, 0.10001091599999956, 0.1000109870000001, 4.7199999997360464e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 0.10001133300000031, 0.10001091699999964, 0.10001098600000002, 5.410000003536197e-07, 0.10001133299999942, 0.10001092999999983, 0.10001084700000007]</msg>
<status status="PASS" starttime="20201030 11:00:31.725" endtime="20201030 11:00:31.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:31.720" endtime="20201030 11:00:31.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:25.164" endtime="20201030 11:00:31.728"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:22.061" endtime="20201030 11:00:31.729" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:31.738" endtime="20201030 11:00:31.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:31.737" endtime="20201030 11:00:31.758"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:31.772" endtime="20201030 11:00:34.797"></status>
</kw>
<msg timestamp="20201030 11:00:34.798" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:31.770" endtime="20201030 11:00:34.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:34.804" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:34.800" endtime="20201030 11:00:34.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:34.810" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:34.806" endtime="20201030 11:00:34.811"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:31.768" endtime="20201030 11:00:34.812"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:31.765" endtime="20201030 11:00:34.813"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:31.764" endtime="20201030 11:00:34.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:34.824" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:34.823" endtime="20201030 11:00:34.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.816" endtime="20201030 11:00:34.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:31.763" endtime="20201030 11:00:34.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:31.762" endtime="20201030 11:00:34.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:34.828" endtime="20201030 11:00:34.831"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:31.761" endtime="20201030 11:00:34.832"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:31.759" endtime="20201030 11:00:34.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:31.735" endtime="20201030 11:00:34.834"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:34.853" endtime="20201030 11:00:40.980"></status>
</kw>
<msg timestamp="20201030 11:00:40.981" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:34.850" endtime="20201030 11:00:40.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:40.987" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:40.983" endtime="20201030 11:00:40.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:40.989" endtime="20201030 11:00:40.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.844" endtime="20201030 11:00:40.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.840" endtime="20201030 11:00:40.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:41.001" level="INFO">${RESULT} = {'bg-timer-count': 15, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:00:40.997" endtime="20201030 11:00:41.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.010" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:41.008" endtime="20201030 11:00:41.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.015" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:00:41.013" endtime="20201030 11:00:41.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.003" endtime="20201030 11:00:41.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.025" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:41.023" endtime="20201030 11:00:41.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.030" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:00:41.028" endtime="20201030 11:00:41.030"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.018" endtime="20201030 11:00:41.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.040" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:00:41.038" endtime="20201030 11:00:41.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.044" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 11:00:41.042" endtime="20201030 11:00:41.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.033" endtime="20201030 11:00:41.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:41.058" endtime="20201030 11:00:41.358"></status>
</kw>
<msg timestamp="20201030 11:00:41.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106467681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.206711417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:41.056" endtime="20201030 11:00:41.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106467681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.206711417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:41.362" endtime="20201030 11:00:41.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:41.370" endtime="20201030 11:00:41.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.051" endtime="20201030 11:00:41.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.048" endtime="20201030 11:00:41.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:00:41.377" level="INFO">${FILTERED} = [{'diff': 0.10024373600000036}, {'diff': 0.10004592999999984}, {'diff': 0.0997672220000001}, {'diff': 0.1000098330000001}, {'diff': 0.10001084699999963}, {'diff': 0.10001080500000015}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201030 11:00:41.373" endtime="20201030 11:00:41.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:41.381" level="INFO">${RESULT} = {'diff': [0.10024373600000036, 0.10004592999999984, 0.0997672220000001, 0.1000098330000001, 0.10001084699999963, 0.10001080500000015, 0.10001090200000018, 0.10001090200000018, 0.10001090199999974, 0.1...</msg>
<status status="PASS" starttime="20201030 11:00:41.378" endtime="20201030 11:00:41.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.385" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:00:41.384" endtime="20201030 11:00:41.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:41.388" level="INFO">VALUE: [0.10024373600000036, 0.10004592999999984, 0.0997672220000001, 0.1000098330000001, 0.10001084699999963, 0.10001080500000015, 0.10001090200000018, 0.10001090200000018, 0.10001090199999974, 0.10001091600000045, 0.10001081900000042, 0.10001090199999929, 0.10001091600000045, 0.10001084700000007, 0.10001081899999953, 0.10001091600000045, 0.10001084700000007, 0.10001081899999953, 0.10001084700000007, 0.10001081900000042, 0.10001093099999991, 0.10001081900000042, 0.10001097299999984, 5.420000004363601e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 0.10001133299999942, 0.10001084700000007, 0.10001083300000069, 0.10001084700000007, 0.10001088899999999, 0.10001080600000023, 0.10001090300000026, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201030 11:00:41.386" endtime="20201030 11:00:41.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.382" endtime="20201030 11:00:41.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:34.836" endtime="20201030 11:00:41.389"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:31.732" endtime="20201030 11:00:41.390" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:41.398" endtime="20201030 11:00:41.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.396" endtime="20201030 11:00:41.418"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:41.432" endtime="20201030 11:00:44.457"></status>
</kw>
<msg timestamp="20201030 11:00:44.458" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:41.431" endtime="20201030 11:00:44.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:44.464" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:44.461" endtime="20201030 11:00:44.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:44.471" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:44.466" endtime="20201030 11:00:44.471"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:41.428" endtime="20201030 11:00:44.473"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:41.424" endtime="20201030 11:00:44.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.423" endtime="20201030 11:00:44.475"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:44.483" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:44.481" endtime="20201030 11:00:44.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:44.477" endtime="20201030 11:00:44.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.422" endtime="20201030 11:00:44.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.422" endtime="20201030 11:00:44.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:44.487" endtime="20201030 11:00:44.490"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.420" endtime="20201030 11:00:44.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.419" endtime="20201030 11:00:44.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:41.395" endtime="20201030 11:00:44.493"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:44.512" endtime="20201030 11:00:50.636"></status>
</kw>
<msg timestamp="20201030 11:00:50.638" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:44.509" endtime="20201030 11:00:50.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:50.643" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:50.640" endtime="20201030 11:00:50.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:50.645" endtime="20201030 11:00:50.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:44.503" endtime="20201030 11:00:50.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:44.499" endtime="20201030 11:00:50.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:50.657" level="INFO">${RESULT} = {'bg-timer-count': 20, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:00:50.653" endtime="20201030 11:00:50.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:50.666" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:50.664" endtime="20201030 11:00:50.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:50.671" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:00:50.669" endtime="20201030 11:00:50.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:50.659" endtime="20201030 11:00:50.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:50.678" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:00:50.677" endtime="20201030 11:00:50.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:50.680" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:00:50.679" endtime="20201030 11:00:50.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:50.674" endtime="20201030 11:00:50.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:50.685" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:00:50.684" endtime="20201030 11:00:50.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:50.687" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 11:00:50.686" endtime="20201030 11:00:50.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:50.681" endtime="20201030 11:00:50.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:50.696" endtime="20201030 11:00:50.995"></status>
</kw>
<msg timestamp="20201030 11:00:50.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.103877764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.204250306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:50.694" endtime="20201030 11:00:50.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:51.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.103877764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.204250306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:00:51.000" endtime="20201030 11:00:51.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:51.008" endtime="20201030 11:00:51.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:50.691" endtime="20201030 11:00:51.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:50.688" endtime="20201030 11:00:51.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:00:51.016" level="INFO">${FILTERED} = [{'diff': 0.10037254200000012}, {'diff': 0.10005154100000002}, {'diff': 0.10005006999999999}, {'diff': 0.09959605600000021}, {'diff': 0.10001084800000015}, {'diff': 0.10001087499999972}, {'diff': 5.40...</msg>
<status status="PASS" starttime="20201030 11:00:51.012" endtime="20201030 11:00:51.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:00:51.020" level="INFO">${RESULT} = {'diff': [0.10037254200000012, 0.10005154100000002, 0.10005006999999999, 0.09959605600000021, 0.10001084800000015, 0.10001087499999972, 5.409999999095305e-07, 5.409999999095305e-07, 5.410000003536197e...</msg>
<status status="PASS" starttime="20201030 11:00:51.017" endtime="20201030 11:00:51.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:00:51.025" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:00:51.024" endtime="20201030 11:00:51.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:00:51.027" level="INFO">VALUE: [0.10037254200000012, 0.10005154100000002, 0.10005006999999999, 0.09959605600000021, 0.10001084800000015, 0.10001087499999972, 5.409999999095305e-07, 5.409999999095305e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.409999994654413e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 4.73000000056345e-07, 5.419999995481817e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.410000003536197e-07, 4.73000000056345e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201030 11:00:51.026" endtime="20201030 11:00:51.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:51.021" endtime="20201030 11:00:51.029"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:44.495" endtime="20201030 11:00:51.029"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:41.392" endtime="20201030 11:00:51.030" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:00:51.040" endtime="20201030 11:00:51.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:51.038" endtime="20201030 11:00:51.060"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:51.074" endtime="20201030 11:00:54.098"></status>
</kw>
<msg timestamp="20201030 11:00:54.099" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:51.072" endtime="20201030 11:00:54.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:00:54.105" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1583-gbfb8f-HEAD', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:54.102" endtime="20201030 11:00:54.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:00:54.112" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:00:54.108" endtime="20201030 11:00:54.113"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:51.069" endtime="20201030 11:00:54.115"></status>
</kw>
<status status="FAIL" starttime="20201030 11:00:51.067" endtime="20201030 11:00:54.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:51.065" endtime="20201030 11:00:54.117"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:00:54.125" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:00:54.123" endtime="20201030 11:00:54.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:54.119" endtime="20201030 11:00:54.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:51.064" endtime="20201030 11:00:54.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:51.064" endtime="20201030 11:00:54.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:54.129" endtime="20201030 11:00:54.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:51.062" endtime="20201030 11:00:54.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:51.061" endtime="20201030 11:00:54.134"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:51.036" endtime="20201030 11:00:54.135"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:00:54.154" endtime="20201030 11:01:00.280"></status>
</kw>
<msg timestamp="20201030 11:01:00.282" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:00:54.151" endtime="20201030 11:01:00.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:01:00.288" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:01:00.284" endtime="20201030 11:01:00.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:00.290" endtime="20201030 11:01:00.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:54.145" endtime="20201030 11:01:00.295"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:54.141" endtime="20201030 11:01:00.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:01:00.303" level="INFO">${RESULT} = {'bg-timer-count': 25, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:01:00.299" endtime="20201030 11:01:00.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:01:00.315" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:01:00.310" endtime="20201030 11:01:00.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:01:00.320" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:01:00.318" endtime="20201030 11:01:00.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:00.305" endtime="20201030 11:01:00.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:01:00.331" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:01:00.328" endtime="20201030 11:01:00.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:01:00.335" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:01:00.333" endtime="20201030 11:01:00.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:00.323" endtime="20201030 11:01:00.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:01:00.346" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:01:00.344" endtime="20201030 11:01:00.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:01:00.350" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 11:01:00.348" endtime="20201030 11:01:00.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:00.339" endtime="20201030 11:01:00.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:00.367" endtime="20201030 11:01:00.673"></status>
</kw>
<msg timestamp="20201030 11:01:00.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105788944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.206332736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:01:00.363" endtime="20201030 11:01:00.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:01:00.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105788944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.206332736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:01:00.677" endtime="20201030 11:01:00.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:01:00.686" endtime="20201030 11:01:00.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:00.357" endtime="20201030 11:01:00.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:00.354" endtime="20201030 11:01:00.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:01:00.693" level="INFO">${FILTERED} = [{'diff': 0.10054379199999985}, {'diff': 0.10005577799999976}, {'diff': 0.10005695800000014}, {'diff': 0.09941748600000011}, {'diff': 0.1000108329999998}, {'diff': 0.10001082000000006}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201030 11:01:00.689" endtime="20201030 11:01:00.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:01:00.698" level="INFO">${RESULT} = {'diff': [0.10054379199999985, 0.10005577799999976, 0.10005695800000014, 0.09941748600000011, 0.1000108329999998, 0.10001082000000006, 0.100010916, 0.10001080599999979, 0.10001094399999966, 0.10001077...</msg>
<status status="PASS" starttime="20201030 11:01:00.694" endtime="20201030 11:01:00.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:01:00.702" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:01:00.701" endtime="20201030 11:01:00.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:01:00.704" level="INFO">VALUE: [0.10054379199999985, 0.10005577799999976, 0.10005695800000014, 0.09941748600000011, 0.1000108329999998, 0.10001082000000006, 0.100010916, 0.10001080599999979, 0.10001094399999966, 0.10001077799999969, 0.10001090300000026, 0.10001090299999937, 0.10001083399999988, 0.10001083399999988, 0.10001083399999988, 0.1000108200000005, 0.10001091699999964, 0.10001081999999961, 0.10001090300000026, 0.10001090300000026, 0.10001091699999964, 0.10001081999999961, 0.10001091700000053, 0.10001084800000015, 0.10001084799999926, 0.10001080600000023, 0.10001087500000061, 0.1000108200000005, 0.1000108200000005, 0.10001084800000015, 0.10001083399999988, 0.10001084700000007, 0.1000108329999998, 0.1000108329999998, 0.10001084700000007, 0.1000108329999998, 0.1000108329999998, 0.10001092999999983, 0.10001081900000042, 0.10001093099999991, 0.1000108329999998, 0.10001084700000007, 0.1000108329999998, 0.10001091699999964, 0.10001091700000053, 0.10001091699999964, 0.10001084700000007, 0.10001084700000007, 0.10001086100000034, 0.10001084700000007, 0.10001083300000069]</msg>
<status status="PASS" starttime="20201030 11:01:00.703" endtime="20201030 11:01:00.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:01:00.698" endtime="20201030 11:01:00.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:00:54.137" endtime="20201030 11:01:00.706"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 11:00:51.033" endtime="20201030 11:01:00.707" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 10:59:58.323" endtime="20201030 11:01:00.714"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10-devel-1583-gbfb8f-HEAD</item>
</metadata>
<status status="PASS" starttime="20201030 10:57:04.787" endtime="20201030 11:01:00.751"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_arduino-due</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
